(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1188512,      26643]
NotebookOptionsPosition[   1091756,      24430]
NotebookOutlinePosition[   1092313,      24448]
CellTagsIndexPosition[   1092270,      24445]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Combinatorics", "Title",
 CellID->28422271,ExpressionUUID->"29863ea0-08dc-46b8-b497-cb6f5f528f0c"],

Cell["\<\
This paclet is for the study of combinatorics. I am a combinatorialist. That \
means I study combinatorics.\
\>", "Text",
 CellChangeTimes->{{3.8996485172153187`*^9, 3.899648553535448*^9}},
 CellID->106321115,ExpressionUUID->"c9cda3f0-8f4e-4867-9c22-5cb081f88c20"],

Cell[CellGroupData[{

Cell[TextData[{
 "The functions defined in the ",
 Cell[BoxData[
 "PeterBurbery`Combinatorics`"], "InlineFormula",ExpressionUUID->
  "52ca241b-5f2c-48bd-8a73-2dcacebef876"],
 " context provide support for finding solutions to combinatorics-related \
problems."
}], "Text",
 CellChangeTimes->{{3.899745229360871*^9, 3.8997452455618725`*^9}},
 CellID->345096676,ExpressionUUID->"2768152e-beee-4843-9be6-e009958bdc11"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<PeterBurbery`Combinatorics`\>\"", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8997452577387857`*^9, 3.8997452674639006`*^9}},
 CellLabel->"In[23]:=",
 CellID->13366579,ExpressionUUID->"e2eeb9fd-67f8-4057-a237-75c17f9df3c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Indexes", "Section",
 CellChangeTimes->{{3.8997452154486513`*^9, 3.89974521642293*^9}},
 CellID->12394907,ExpressionUUID->"c9c01b3c-ced1-4737-9c68-a4bc8ac3db64"],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["PermutationIndex",
      BaseStyle->"Link",
      ButtonData->"paclet:PeterBurbery/Combinatorics/ref/PermutationIndex"], 
     "[", 
     StyleBox["perm", "TI"], "]"}], Cell[TextData[{
     "gives the lexicographic index of permutation ",
     Cell[BoxData[
      StyleBox["perm", "TI"]], "InlineFormula",ExpressionUUID->
      "7688e27c-e911-400d-a13c-15f5a8f3c29c"],
     "."
    }], "TableText",ExpressionUUID->"5baf0565-ae03-4187-831a-2a2941d3c66b"]},
   {
    RowBox[{
     ButtonBox["PermutationFromIndex",
      BaseStyle->"Link",
      ButtonData->
       "paclet:PeterBurbery/Combinatorics/ref/PermutationFromIndex"], "[", 
     RowBox[{
      StyleBox["index", "TI"], ",", 
      StyleBox["lengthInput", "TI"]}], "]"}], Cell[TextData[{
     "returns the permutation of length ",
     Cell[BoxData[
      StyleBox["lengthInput", "TI"]], "InlineFormula",ExpressionUUID->
      "e5890431-42f0-4152-9115-595c2ba3147e"],
     " corresponding to the ",
     Cell[BoxData[
      StyleBox["index", "TI"]], "InlineFormula",ExpressionUUID->
      "d96eae5c-cdb2-4483-a646-5b98ec692ec8"],
     "th permutation in lexicographic order."
    }], "TableText",ExpressionUUID->"a3357dcd-9f19-4fdb-9719-e3aa775e960e"]},
   {
    RowBox[{
     ButtonBox["SubsetIndex",
      BaseStyle->"Link",
      ButtonData->"paclet:PeterBurbery/Combinatorics/ref/SubsetIndex"], "[", 
     StyleBox["list", "TI"], "]"}], Cell[TextData[{
     "gives the index of subset ",
     Cell[BoxData[
      StyleBox["list", "TI"]], "InlineFormula",ExpressionUUID->
      "ad4c0a7a-ebdd-4568-93d0-67888753224b"],
     "."
    }], "TableText",ExpressionUUID->"bc874178-908f-423f-a966-fdaaac799f4f"]},
   {
    RowBox[{
     ButtonBox["SubsetFromIndex",
      BaseStyle->"Link",
      ButtonData->"paclet:PeterBurbery/Combinatorics/ref/SubsetFromIndex"], 
     "[", 
     RowBox[{
      StyleBox["index", "TI"], ",", 
      StyleBox["len", "TI"]}], "]"}], Cell[TextData[{
     "returns a subset of length ",
     Cell[BoxData[
      StyleBox["len", "TI"]], "InlineFormula",ExpressionUUID->
      "2e2074aa-b0aa-499d-9611-251e03031656"],
     " with given ",
     Cell[BoxData[
      StyleBox["index", "TI"]], "InlineFormula",ExpressionUUID->
      "2614fdf1-2200-4b39-a80e-099ff5004b36"],
     "."
    }], "TableText",ExpressionUUID->"64c714a4-5f52-4857-8b25-9e2d22273931"]}
  }]], "DefinitionBox",
 CellChangeTimes->{{3.8996489194866652`*^9, 3.8996489239158792`*^9}, {
  3.8996489732810745`*^9, 3.899649018075349*^9}},
 CellID->124942403,ExpressionUUID->"a6202102-e2f6-4eac-ac3a-6c5d7c045027"],

Cell["Computing the index or using the index to get the thing.", "Caption",
 CellChangeTimes->{{3.899648939170776*^9, 3.899648948044263*^9}},
 CellID->520428306,ExpressionUUID->"7a8788fc-21ec-4663-996e-732abb7b1fd9"],

Cell[CellGroupData[{

Cell["Find the index of a random permutation", "MathCaption",
 CellChangeTimes->{{3.8996490265856886`*^9, 3.899649027609098*^9}, {
  3.899649101671936*^9, 3.89964910509002*^9}},
 CellID->31903801,ExpressionUUID->"f063fe58-8d4b-47d9-82d0-ca80efb77248"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PermutationIndex", "[", 
  RowBox[{"Echo", "[", 
   RowBox[{"PermutationList", "@", 
    RowBox[{"RandomPermutation", "[", "9", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.899649113130213*^9, 3.899649141332165*^9}, {
  3.899745290140775*^9, 3.89974529169009*^9}},
 CellLabel->"In[2]:=",
 CellID->2966739,ExpressionUUID->"43fb86de-d369-4f44-bb2b-3b22ae071992"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4", ",", "7", ",", "6", ",", "8", ",", "1", ",", "9", ",", "5", ",", "2", 
   ",", "3"}], "}"}]], "Echo",
 CellChangeTimes->{3.899797849536323*^9},
 CellID->595052515,ExpressionUUID->"133bd33a-21f5-48e5-a4ea-3fc0a7aaae98"],

Cell[BoxData["149543"], "Output",
 CellChangeTimes->{{3.8996491225399823`*^9, 3.89964914209574*^9}, 
   3.8996520286243095`*^9, {3.899745273636671*^9, 3.899745292381153*^9}, 
   3.899797808738125*^9, 3.899797849636322*^9},
 CellLabel->"Out[2]=",
 CellID->121226746,ExpressionUUID->"bafb0c1f-c76a-4c88-a0ef-f569908437c1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get the permutation:", "MathCaption",
 CellChangeTimes->{{3.8996520511050043`*^9, 3.8996520553866453`*^9}},
 CellID->591549556,ExpressionUUID->"5141cd7f-e1f1-4df4-91f9-a5bddd49d9ed"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PermutationFromIndex", "[", 
  RowBox[{"%", ",", "9"}], "]"}]], "Input",
 CellChangeTimes->{{3.899652056939474*^9, 3.8996520688523808`*^9}, 
   3.899745282259115*^9},
 CellLabel->"In[3]:=",
 CellID->281752241,ExpressionUUID->"c23a3f5a-4f1d-4b61-bbd8-0d8fc47f10d2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4", ",", "7", ",", "6", ",", "8", ",", "1", ",", "9", ",", "5", ",", "2", 
   ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8996520692746305`*^9, {3.8997452827484465`*^9, 3.8997452937134447`*^9}, 
   3.8997978513361225`*^9},
 CellLabel->"Out[3]=",
 CellID->255390473,ExpressionUUID->"ceafa071-016a-41e7-8edb-01472aed8b23"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Here's a neat application of this function. We can use this to solve Project \
Euler Problem 24 Lexicographic Permutations. What is the millionth \
lexicographic permutation of the digits 0, 1, 2, 3, 4, 5, 6, 7, 8, and 9?\
\>", "MathCaption",
 CellChangeTimes->{{3.8996520754404263`*^9, 3.8996520969633904`*^9}, {
  3.8996521422657013`*^9, 3.8996521703500643`*^9}, {3.8996522111981525`*^9, 
  3.899652213145729*^9}},
 CellID->114128779,ExpressionUUID->"54d23bee-3cd8-4a54-b126-f0a39ee5cb17"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PermutationFromIndex", "[", 
  RowBox[{"1000000", 
   RowBox[{"(*", 
    RowBox[{"a", " ", "million", " ", "is", " ", 
     SuperscriptBox["10", "6"]}], "*)"}], ",", " ", "10"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"because", " ", 
     RowBox[{"Length", "[", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", 
        "7", ",", "8", ",", ",", "9"}], "}"}], "]"}], " ", "is", " ", "10"}], 
    ",", " ", 
    RowBox[{"not", " ", "9"}]}], "*)"}], "]"}]], "Input",
 CellChangeTimes->{{3.899652171087674*^9, 3.89965222121475*^9}},
 CellLabel->"In[6]:=",
 CellID->123225409,ExpressionUUID->"5ae793c0-ebfb-4576-87fa-26e4d0ddd522"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "8", ",", "9", ",", "4", ",", "10", ",", "2", ",", "6", ",", "5", 
   ",", "7", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.8996522223619137`*^9},
 CellLabel->"Out[6]=",
 CellID->565924694,ExpressionUUID->"2b17c3ff-644b-4a65-8d57-a8b914143f51"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Now we need to subtract 1. 10 will become 9 and 1 will become 0.\
\>", "MathCaption",
 CellChangeTimes->{{3.8996522243268967`*^9, 3.8996522450338764`*^9}},
 CellID->198474650,ExpressionUUID->"29cdeac0-a367-43bb-98f4-8f2bd1f3ebd2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PermutationFromIndex", "[", 
   RowBox[{"1000000", 
    RowBox[{"(*", 
     RowBox[{"a", " ", "million", " ", "is", " ", 
      SuperscriptBox["10", "6"]}], "*)"}], ",", " ", "10"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"because", " ", 
      RowBox[{"Length", "[", 
       RowBox[{"{", 
        RowBox[{
        "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", 
         "7", ",", "8", ",", ",", "9"}], "}"}], "]"}], " ", "is", " ", "10"}],
      ",", " ", 
     RowBox[{"not", " ", "9"}]}], "*)"}], "]"}], "-", "1"}]], "Input",
 CellChangeTimes->{{3.899652171087674*^9, 3.899652246534876*^9}},
 CellLabel->"In[7]:=",
 CellID->96415675,ExpressionUUID->"2b66a4c8-a338-4902-85f4-f16d4240bf90"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "7", ",", "8", ",", "3", ",", "9", ",", "1", ",", "5", ",", "4", 
   ",", "6", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.899652247281952*^9},
 CellLabel->"Out[7]=",
 CellID->187311040,ExpressionUUID->"9b8753d9-ed1e-4d41-8bf7-730272789a00"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Now we can use FromDigits.", "MathCaption",
 CellChangeTimes->{{3.8996522487264442`*^9, 3.899652252784938*^9}},
 CellID->460961065,ExpressionUUID->"a9b544c6-d5f9-48e8-a27e-4a340125cfcd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FromDigits", "[", 
  RowBox[{
   RowBox[{"PermutationFromIndex", "[", 
    RowBox[{"1000000", 
     RowBox[{"(*", 
      RowBox[{"a", " ", "million", " ", "is", " ", 
       SuperscriptBox["10", "6"]}], "*)"}], ",", " ", "10"}], 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"because", " ", 
       RowBox[{"Length", "[", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",",
           "7", ",", "8", ",", ",", "9"}], "}"}], "]"}], " ", "is", " ", 
       "10"}], ",", " ", 
      RowBox[{"not", " ", "9"}]}], "*)"}], "]"}], "-", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.8996522533532248`*^9, 3.8996522551887875`*^9}},
 CellLabel->"In[8]:=",
 CellID->348169710,ExpressionUUID->"1e449f37-42a4-4474-a843-3da52a55a71d"],

Cell[BoxData["2783915460"], "Output",
 CellChangeTimes->{3.899652255470524*^9},
 CellLabel->"Out[8]=",
 CellID->12882949,ExpressionUUID->"d046d417-751a-455c-bdfc-17ffe68b9b43"]
}, Open  ]]
}, Open  ]],

Cell["And that's the answer!", "MathCaption",
 CellChangeTimes->{{3.89965225662661*^9, 3.8996522596513786`*^9}},
 CellID->215938530,ExpressionUUID->"5a11a60b-a806-4be5-bc88-a7bc00e63101"],

Cell[CellGroupData[{

Cell["Find a subset's index.", "MathCaption",
 CellChangeTimes->{{3.8996522652356243`*^9, 3.8996522782278132`*^9}},
 CellID->142381604,ExpressionUUID->"aff15429-cf71-47db-a2d4-7adecf9a0732"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SubsetIndex", "[", 
  RowBox[{"{", 
   RowBox[{"2", ",", "4", ",", "6"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.899649113130213*^9, 3.899649141332165*^9}, {
  3.8996492440052633`*^9, 3.8996492489526763`*^9}, {3.899652340536313*^9, 
  3.8996523429820943`*^9}},
 CellLabel->"In[10]:=",
 CellID->347150823,ExpressionUUID->"39399306-6d51-43c8-a829-ae7485603472"],

Cell[BoxData["29"], "Output",
 CellChangeTimes->{3.899649249426399*^9, 3.8996523432964063`*^9},
 CellLabel->"Out[10]=",
 CellID->160256386,ExpressionUUID->"726b904a-0d84-4290-8eaf-cdc45de3d127"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find the subset.", "MathCaption",
 CellChangeTimes->{{3.8996523033906155`*^9, 3.8996523056939783`*^9}},
 CellID->9730894,ExpressionUUID->"27a657c2-f831-4950-afad-215d5b4e8dd8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SubsetFromIndex", "[", 
  RowBox[{"29", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8996523072109237`*^9, 3.8996523135576286`*^9}, {
   3.899652352094467*^9, 3.899652356909275*^9}, 3.8996524416453767`*^9},
 CellLabel->"In[15]:=",
 CellID->172885937,ExpressionUUID->"694f8ec6-44e2-4e36-8482-1a924943798a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "4", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8996523138515444`*^9, {3.899652353031444*^9, 3.8996523572976427`*^9}, 
   3.899652442068437*^9},
 CellLabel->"Out[15]=",
 CellID->13566930,ExpressionUUID->"8069a09d-19c2-4490-bfe0-b919ea676320"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Central Binomial Coefficient", "Section",
 CellChangeTimes->{{3.89979954491677*^9, 3.89979954887222*^9}},
 CellID->389777251,ExpressionUUID->"ea501f5c-9f6a-4a8c-ad87-0b06a2d37fbe"],

Cell[CellGroupData[{

Cell["Compute the central binomial coefficient.", "MathCaption",
 CellChangeTimes->{{3.8997476435567694`*^9, 3.8997476507177753`*^9}},
 CellID->237155657,ExpressionUUID->"ee32caf3-d16b-414e-a18c-0a7df4d6673a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CentralBinomialCoefficient", "[", "54", "]"}]], "Input",
 CellChangeTimes->{{3.8997476651664467`*^9, 3.8997476699335685`*^9}},
 CellLabel->"In[18]:=",
 CellID->114626256,ExpressionUUID->"285d1c74-e5ab-4604-9f55-fc678653b2b0"],

Cell[BoxData["24857784491537440929618523018320"], "Output",
 CellChangeTimes->{3.899747670314257*^9},
 CellLabel->"Out[18]=",
 CellID->21111411,ExpressionUUID->"7230b72d-8f0e-4880-ad3d-b960db2d429f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CentralBinomialCoefficient", "[", "n", "]"}]], "Input",
 CellChangeTimes->{{3.8997476651664467`*^9, 3.8997476753389606`*^9}},
 CellLabel->"In[19]:=",
 CellID->72962348,ExpressionUUID->"55e8283b-1098-444a-a5d8-2d4561a9f0ae"],

Cell[BoxData[
 RowBox[{"Binomial", "[", 
  RowBox[{
   RowBox[{"2", " ", "n"}], ",", "n"}], "]"}]], "Output",
 CellChangeTimes->{3.8997476756374416`*^9},
 CellLabel->"Out[19]=",
 CellID->144120138,ExpressionUUID->"bae56064-0d9d-4616-9015-1fd94c1f9740"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find the generating function.", "MathCaption",
 CellChangeTimes->{{3.8997476899312167`*^9, 3.8997476938746185`*^9}},
 CellID->172959633,ExpressionUUID->"5415c84c-8e97-4765-a4c9-44d6f63cb09f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeneratingFunction", "[", 
  RowBox[{
   RowBox[{"CentralBinomialCoefficient", "[", "n", "]"}], ",", "n", ",", 
   "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997476816627703`*^9, 3.8997476852531166`*^9}},
 CellLabel->"In[20]:=",
 CellID->103210421,ExpressionUUID->"c65b3946-5c0c-45d3-afc5-01451e426334"],

Cell[BoxData[
 FractionBox["1", 
  SqrtBox[
   RowBox[{"1", "-", 
    RowBox[{"4", " ", "x"}]}]]]], "Output",
 CellChangeTimes->{3.8997476858034697`*^9},
 CellLabel->"Out[20]=",
 CellID->78156444,ExpressionUUID->"1736674a-c8bc-48ed-be97-c6d491e6c05b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Make a table of values.", "MathCaption",
 CellChangeTimes->{{3.899747695855169*^9, 3.8997477013055053`*^9}},
 CellID->452686366,ExpressionUUID->"b8ea977c-1152-4a0d-ad19-63d07182155a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{"\"\<n\>\"", "->", 
       RowBox[{"CentralBinomialCoefficient", "[", "#", "]"}]}], "|>"}], "&"}],
     "]"}], "[", 
   RowBox[{"Range", "[", "21", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997477026804385`*^9, 3.899747753265658*^9}},
 CellLabel->"In[22]:=",
 CellID->422387114,ExpressionUUID->"b3c3753c-92cc-4d4c-971d-6a628bc5ab24"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      1 -> <|"n" -> 2|>, 2 -> <|"n" -> 6|>, 3 -> <|"n" -> 20|>, 
       4 -> <|"n" -> 70|>, 5 -> <|"n" -> 252|>, 6 -> <|"n" -> 924|>, 
       7 -> <|"n" -> 3432|>, 8 -> <|"n" -> 12870|>, 9 -> <|"n" -> 48620|>, 
       10 -> <|"n" -> 184756|>, 11 -> <|"n" -> 705432|>, 
       12 -> <|"n" -> 2704156|>, 13 -> <|"n" -> 10400600|>, 
       14 -> <|"n" -> 40116600|>, 15 -> <|"n" -> 155117520|>, 
       16 -> <|"n" -> 601080390|>, 17 -> <|"n" -> 2333606220|>, 
       18 -> <|"n" -> 9075135300|>, 19 -> <|"n" -> 35345263800|>, 
       20 -> <|"n" -> 137846528820|>, 21 -> <|"n" -> 538257874440|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, "n"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 1, {All}]]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n"}, {
         TypeSystem`Atom[Integer]}], 21], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, "n"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 1, {All}]]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n"}, {
         TypeSystem`Atom[Integer]}], 21], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 1, "DataRowCount" -> 21, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["n", 
                  Style[
                  "n", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "n"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "n"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["70"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["252"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["924"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12870"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48620"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["184756"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["11"], 
                  Style[
                   RawBoxes["11"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[11]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["705432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["12"], 
                  Style[
                   RawBoxes["12"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[12]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2704156"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["13"], 
                  Style[
                   RawBoxes["13"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[13]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10400600"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["14"], 
                  Style[
                   RawBoxes["14"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[14]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["40116600"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["15"], 
                  Style[
                   RawBoxes["15"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[15]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["155117520"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["16"], 
                  Style[
                   RawBoxes["16"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[16]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["601080390"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["17"], 
                  Style[
                   RawBoxes["17"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[17]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2333606220"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["18"], 
                  Style[
                   RawBoxes["18"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[18]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9075135300"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["19"], 
                  Style[
                   RawBoxes["19"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[19]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35345263800"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["20"], 
                  Style[
                   RawBoxes["20"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[20]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["137846528820"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 21, 1], {1, 21 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 21, 1], {1, 21 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[21, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[21, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 21, 1], {1, 21 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 21, 1], {1, 21 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{167., {299.8544921875, 305.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{167., {299.8544921875, 305.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.899747734907628*^9, 3.899747753800619*^9}},
 CellLabel->"Out[22]=",
 CellID->209532304,ExpressionUUID->"7fbd4668-ce20-446f-a6b5-27cd21a3534b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The digits of ",
 Cell[BoxData[
  RowBox[{"(", GridBox[{
     {
      RowBox[{"2", " ", 
       SuperscriptBox["10", "n"]}]},
     {
      SuperscriptBox["10", "n"]}
    }], ")"}]], "Input",ExpressionUUID->
  "19f21b62-7da8-4107-abd0-eeac7510fd5e"],
 " for ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"n", "=", "0"}], ",", " ", "1", ",", " ", "\[Ellipsis]"}]], 
  "InlineFormula",ExpressionUUID->"74273f02-9c81-4724-9fbd-fb4fec5fca60"],
 " are"
}], "MathCaption",
 CellChangeTimes->{{3.8997477689988422`*^9, 3.899747816005345*^9}},
 CellID->56151557,ExpressionUUID->"f6f15f69-da4c-43be-87a4-d3879c2d313f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{"\"\<n\>\"", "->", 
       RowBox[{"IntegerLength", "[", 
        RowBox[{"CentralBinomialCoefficient", "[", 
         SuperscriptBox["10", "#"], "]"}], "]"}]}], "|>"}], "&"}], "]"}], "[", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "8"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997477026804385`*^9, 3.899747753265658*^9}, {
  3.8997478167689037`*^9, 3.899747942424721*^9}},
 CellLabel->"In[32]:=",
 CellID->392545453,ExpressionUUID->"cc70f617-d9b5-4de1-a734-0f7d43a1f616"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      0 -> <|"n" -> 1|>, 1 -> <|"n" -> 6|>, 2 -> <|"n" -> 59|>, 
       3 -> <|"n" -> 601|>, 4 -> <|"n" -> 6019|>, 5 -> <|"n" -> 60204|>, 
       6 -> <|"n" -> 602057|>, 7 -> <|"n" -> 6020597|>, 
       8 -> <|"n" -> 60205995|>|>, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[9]} -> 1, {All, "n"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 1, {All}]]], 9, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n"}, {
         TypeSystem`Atom[Integer]}], 9], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[9]} -> 1, {All, "n"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 1, {All}]]], 9, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n"}, {
         TypeSystem`Atom[Integer]}], 9], "Path" -> {}, "DisplayedRowCount" -> 
     9, "DisplayedColumnCount" -> 1, "DataRowCount" -> 9, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["n", 
                  Style[
                  "n", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "n"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "n"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["59"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["601"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6019"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["60204"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["602057"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6020597"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["60205995"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{111., {140.8544921875, 146.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{111., {140.8544921875, 146.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8997479192062416`*^9, 3.899747952478814*^9}},
 CellLabel->"Out[32]=",
 CellID->242033643,ExpressionUUID->"42e8a135-2715-4e12-abca-36601da16ac0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "These digits are converging to the digits of ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["log", "10"], "4"}]], "InlineFormula",ExpressionUUID->
  "bd11f062-a71b-49b3-969b-ed6cda0a8293"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.8997479573414755`*^9, 3.8997479693046136`*^9}},
 CellID->100832978,ExpressionUUID->"3e761618-b2cc-4aba-9bc3-07b752e1cc69"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"Log", "[", 
    RowBox[{"10", ",", "4"}], "]"}], ",", "40"}], "]"}]], "Input",
 CellChangeTimes->{{3.899747972700562*^9, 3.8997479800159883`*^9}},
 CellLabel->"In[34]:=",
 CellID->438135564,ExpressionUUID->"4af2cf5e-5216-42d0-80dd-d88f6164a22a"],

Cell[BoxData["0.6020599913279623904274777894489860535363797629242170826208`40.\
"], "Output",
 CellChangeTimes->{{3.8997479755106287`*^9, 3.8997479802943263`*^9}},
 CellLabel->"Out[34]=",
 CellID->287705978,ExpressionUUID->"73ae9875-82cd-4eb2-af12-7bb45e45ffcf"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Modified Central Binomial Coefficient", "Section",
 CellChangeTimes->{{3.8997995811908536`*^9, 3.8997995866600337`*^9}},
 CellID->125811763,ExpressionUUID->"341bc06d-1647-4b03-b39b-92eca99b0f95"],

Cell[CellGroupData[{

Cell["Let's look at the modified central binomial coefficient.", "MathCaption",
 CellChangeTimes->{{3.899748350767112*^9, 3.899748361595912*^9}, 
   3.8997484313509865`*^9},
 CellID->139662984,ExpressionUUID->"141eccbe-e1ac-4dd2-b460-3dd2c299531b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{"\"\<n\>\"", "->", 
       RowBox[{"ModifiedCentralBinomialCoefficient", "[", "#", "]"}]}], 
      "|>"}], "&"}], "]"}], "[", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "21"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997484150227227`*^9, 3.8997484239360027`*^9}},
 CellLabel->"In[958]:=",
 CellID->398286937,ExpressionUUID->"d87e0356-0cf0-472a-8697-48e30e7e981c"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      0 -> <|"n" -> 1|>, 1 -> <|"n" -> 1|>, 2 -> <|"n" -> 2|>, 
       3 -> <|"n" -> 3|>, 4 -> <|"n" -> 6|>, 5 -> <|"n" -> 10|>, 
       6 -> <|"n" -> 20|>, 7 -> <|"n" -> 35|>, 8 -> <|"n" -> 70|>, 
       9 -> <|"n" -> 126|>, 10 -> <|"n" -> 252|>, 11 -> <|"n" -> 462|>, 
       12 -> <|"n" -> 924|>, 13 -> <|"n" -> 1716|>, 14 -> <|"n" -> 3432|>, 
       15 -> <|"n" -> 6435|>, 16 -> <|"n" -> 12870|>, 17 -> <|"n" -> 24310|>, 
       18 -> <|"n" -> 48620|>, 19 -> <|"n" -> 92378|>, 
       20 -> <|"n" -> 184756|>, 21 -> <|"n" -> 352716|>|>, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[2]} -> 1, {All, "n"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 1, {All}]]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n"}, {
         TypeSystem`Atom[Integer]}], 22], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[2]} -> 1, {All, "n"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 1, {All}]]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n"}, {
         TypeSystem`Atom[Integer]}], 22], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 1, "DataRowCount" -> 22, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["n", 
                  Style[
                  "n", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "n"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "n"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["70"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["126"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["252"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["11"], 
                  Style[
                   RawBoxes["11"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[11]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["462"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["12"], 
                  Style[
                   RawBoxes["12"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[12]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["924"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["13"], 
                  Style[
                   RawBoxes["13"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[13]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1716"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["14"], 
                  Style[
                   RawBoxes["14"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[14]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["15"], 
                  Style[
                   RawBoxes["15"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[15]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6435"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["16"], 
                  Style[
                   RawBoxes["16"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[16]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12870"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["17"], 
                  Style[
                   RawBoxes["17"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[17]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24310"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["18"], 
                  Style[
                   RawBoxes["18"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[18]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48620"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["19"], 
                  Style[
                   RawBoxes["19"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[19]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["92378"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{167., {299.8544921875, 305.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{167., {299.8544921875, 305.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.899748417919546*^9, 3.8997484245594244`*^9}, 
   3.899799589782061*^9, {3.899799693866796*^9, 3.899799706372526*^9}},
 CellLabel->"Out[958]=",
 CellID->529671870,ExpressionUUID->"b0f6fed8-b166-463e-a52c-81c6f3eb878d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The generating function is  ",
 Cell[BoxData[
  FractionBox[
   RowBox[{"1", "-", 
    RowBox[{"4", 
     SuperscriptBox["x", "2"]}], "-", 
    SqrtBox[
     RowBox[{"1", "-", 
      RowBox[{"4", 
       SuperscriptBox["x", "2"]}]}]]}], 
   RowBox[{"2", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", 
       SuperscriptBox["x", "3"]}], "-", 
      SuperscriptBox["x", "2"]}], ")"}]}]]], "Input",
  CellChangeTimes->{{3.899748705369384*^9, 3.8997487177386065`*^9}},
  ExpressionUUID->"4609f540-d4b5-4c0d-95ad-64f87368ca8e"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.8997485285983276`*^9, 3.8997485425858026`*^9}, {
  3.899748699828844*^9, 3.899748721088228*^9}, {3.8997487739717274`*^9, 
  3.8997487739717274`*^9}},
 CellID->254962743,ExpressionUUID->"9041bf23-f036-4e33-9487-c730a04c1421"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SeriesCoefficient", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"1", "-", 
     RowBox[{"4", 
      SuperscriptBox["x", "2"]}], "-", 
     SqrtBox[
      RowBox[{"1", "-", 
       RowBox[{"4", 
        SuperscriptBox["x", "2"]}]}]]}], 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", 
        SuperscriptBox["x", "3"]}], "-", 
       SuperscriptBox["x", "2"]}], ")"}]}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"9", "-", "1"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.899748705369384*^9, 3.899748800970345*^9}},
 CellLabel->"In[978]:=",
 CellID->208306947,ExpressionUUID->"0d12c63b-0c9c-41b1-ae56-60dc1027e1f4"],

Cell[BoxData["126"], "Output",
 CellChangeTimes->{{3.8997487419944305`*^9, 3.8997488023627462`*^9}},
 CellLabel->"Out[978]=",
 CellID->2750224,ExpressionUUID->"a597f12b-7afe-41b1-b1af-6d7bcda347a8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["This matches our output.", "MathCaption",
 CellChangeTimes->{{3.899748807336094*^9, 3.899748813611977*^9}},
 CellID->48756516,ExpressionUUID->"619bf7e3-daaa-4fdd-bd20-745656cfd3fa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<n\>\"", "->", 
        RowBox[{"ModifiedCentralBinomialCoefficient", "[", "#", "]"}]}], ",", 
       RowBox[{"\"\<seriesCoefficient\>\"", "->", 
        RowBox[{"SeriesCoefficient", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"1", "-", 
            RowBox[{"4", 
             SuperscriptBox["x", "2"]}], "-", 
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{"4", 
               SuperscriptBox["x", "2"]}]}]]}], 
           RowBox[{"2", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", 
               SuperscriptBox["x", "3"]}], "-", 
              SuperscriptBox["x", "2"]}], ")"}]}]], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", 
            RowBox[{"#", "-", "1"}]}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<equal\>\"", "->", 
        RowBox[{
         RowBox[{"ModifiedCentralBinomialCoefficient", "[", "#", "]"}], "===", 
         RowBox[{"SeriesCoefficient", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"1", "-", 
             RowBox[{"4", 
              SuperscriptBox["x", "2"]}], "-", 
             SqrtBox[
              RowBox[{"1", "-", 
               RowBox[{"4", 
                SuperscriptBox["x", "2"]}]}]]}], 
            RowBox[{"2", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", 
                SuperscriptBox["x", "3"]}], "-", 
               SuperscriptBox["x", "2"]}], ")"}]}]], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", 
             RowBox[{"#", "-", "1"}]}], "}"}]}], "]"}]}]}]}], "|>"}], "&"}], 
    "]"}], "[", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "21"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997488260575113`*^9, 3.899748876670103*^9}},
 CellLabel->"In[980]:=",
 CellID->415836666,ExpressionUUID->"20209ddb-9ff9-4899-9ba5-2c4b3bec96ab"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      0 -> <|"n" -> 1, "seriesCoefficient" -> 0, "equal" -> False|>, 
       1 -> <|"n" -> 1, "seriesCoefficient" -> 1, "equal" -> True|>, 
       2 -> <|"n" -> 2, "seriesCoefficient" -> 2, "equal" -> True|>, 
       3 -> <|"n" -> 3, "seriesCoefficient" -> 3, "equal" -> True|>, 
       4 -> <|"n" -> 6, "seriesCoefficient" -> 6, "equal" -> True|>, 
       5 -> <|"n" -> 10, "seriesCoefficient" -> 10, "equal" -> True|>, 
       6 -> <|"n" -> 20, "seriesCoefficient" -> 20, "equal" -> True|>, 
       7 -> <|"n" -> 35, "seriesCoefficient" -> 35, "equal" -> True|>, 
       8 -> <|"n" -> 70, "seriesCoefficient" -> 70, "equal" -> True|>, 
       9 -> <|"n" -> 126, "seriesCoefficient" -> 126, "equal" -> True|>, 
       10 -> <|"n" -> 252, "seriesCoefficient" -> 252, "equal" -> True|>, 
       11 -> <|"n" -> 462, "seriesCoefficient" -> 462, "equal" -> True|>, 
       12 -> <|"n" -> 924, "seriesCoefficient" -> 924, "equal" -> True|>, 
       13 -> <|"n" -> 1716, "seriesCoefficient" -> 1716, "equal" -> True|>, 
       14 -> <|"n" -> 3432, "seriesCoefficient" -> 3432, "equal" -> True|>, 
       15 -> <|"n" -> 6435, "seriesCoefficient" -> 6435, "equal" -> True|>, 
       16 -> <|"n" -> 12870, "seriesCoefficient" -> 12870, "equal" -> True|>, 
       17 -> <|"n" -> 24310, "seriesCoefficient" -> 24310, "equal" -> True|>, 
       18 -> <|"n" -> 48620, "seriesCoefficient" -> 48620, "equal" -> True|>, 
       19 -> <|"n" -> 92378, "seriesCoefficient" -> 92378, "equal" -> True|>, 
       20 -> <|"n" -> 184756, "seriesCoefficient" -> 184756, "equal" -> 
         True|>, 21 -> <|
        "n" -> 352716, "seriesCoefficient" -> 352716, "equal" -> True|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[13]} -> 1, {All, "n"} -> 
        1, {All, "seriesCoefficient"} -> 1, {All, "equal"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34], "seriesCoefficient" -> 
             TypeSystem`PackageScope`AtomShape[34], "equal" -> 
             TypeSystem`PackageScope`AtomShape[36]|>], 
           DirectedInfinity[1], 3, {All}]]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n", "seriesCoefficient", "equal"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 22], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[13]} -> 1, {All, "n"} -> 
        1, {All, "seriesCoefficient"} -> 1, {All, "equal"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34], "seriesCoefficient" -> 
             TypeSystem`PackageScope`AtomShape[34], "equal" -> 
             TypeSystem`PackageScope`AtomShape[36]|>], 
           DirectedInfinity[1], 3, {All}]]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n", "seriesCoefficient", "equal"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 22], "Path" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     22, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["n", 
                  Style[
                  "n", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "n"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "n"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["seriesCoefficient", 
                  Style[
                  "seriesCoefficient", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "seriesCoefficient"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "seriesCoefficient"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["equal", 
                  Style[
                  "equal", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "equal"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "equal"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["70"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["70"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["126"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["126"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["252"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["252"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["11"], 
                  Style[
                   RawBoxes["11"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[11]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["462"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["462"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["12"], 
                  Style[
                   RawBoxes["12"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[12]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["924"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["924"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["13"], 
                  Style[
                   RawBoxes["13"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[13]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1716"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1716"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["14"], 
                  Style[
                   RawBoxes["14"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[14]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["15"], 
                  Style[
                   RawBoxes["15"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[15]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6435"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6435"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["16"], 
                  Style[
                   RawBoxes["16"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[16]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12870"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12870"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["17"], 
                  Style[
                   RawBoxes["17"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[17]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24310"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24310"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["18"], 
                  Style[
                   RawBoxes["18"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[18]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48620"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48620"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["19"], 
                  Style[
                   RawBoxes["19"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[19]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["92378"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["92378"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{256., {299.8544921875, 305.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{256., {299.8544921875, 305.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8997488503458753`*^9, 3.899748877365996*^9}},
 CellLabel->"Out[980]=",
 CellID->14127691,ExpressionUUID->"28377e1a-509b-4124-9434-e481c5003628"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
If we start at 1, we will get all True instead of a False at 0.\
\>", "MathCaption",
 CellChangeTimes->{{3.8997488812603807`*^9, 3.8997488916654415`*^9}},
 CellID->699600308,ExpressionUUID->"c1302e40-c3ff-458a-8d5a-187222524edb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<n\>\"", "->", 
        RowBox[{"ModifiedCentralBinomialCoefficient", "[", "#", "]"}]}], ",", 
       RowBox[{"\"\<seriesCoefficient\>\"", "->", 
        RowBox[{"SeriesCoefficient", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"1", "-", 
            RowBox[{"4", 
             SuperscriptBox["x", "2"]}], "-", 
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{"4", 
               SuperscriptBox["x", "2"]}]}]]}], 
           RowBox[{"2", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", 
               SuperscriptBox["x", "3"]}], "-", 
              SuperscriptBox["x", "2"]}], ")"}]}]], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", 
            RowBox[{"#", "-", "1"}]}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<equal\>\"", "->", 
        RowBox[{
         RowBox[{"ModifiedCentralBinomialCoefficient", "[", "#", "]"}], "===", 
         RowBox[{"SeriesCoefficient", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"1", "-", 
             RowBox[{"4", 
              SuperscriptBox["x", "2"]}], "-", 
             SqrtBox[
              RowBox[{"1", "-", 
               RowBox[{"4", 
                SuperscriptBox["x", "2"]}]}]]}], 
            RowBox[{"2", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", 
                SuperscriptBox["x", "3"]}], "-", 
               SuperscriptBox["x", "2"]}], ")"}]}]], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", 
             RowBox[{"#", "-", "1"}]}], "}"}]}], "]"}]}]}]}], "|>"}], "&"}], 
    "]"}], "[", 
   RowBox[{"Range", "[", 
    RowBox[{"2", ",", "21"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.899748892320259*^9, 3.8997488971939325`*^9}},
 CellLabel->"In[981]:=",
 CellID->6091911,ExpressionUUID->"180d6550-a6ed-4b3f-b35d-885234f88d6b"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      2 -> <|"n" -> 2, "seriesCoefficient" -> 2, "equal" -> True|>, 
       3 -> <|"n" -> 3, "seriesCoefficient" -> 3, "equal" -> True|>, 
       4 -> <|"n" -> 6, "seriesCoefficient" -> 6, "equal" -> True|>, 
       5 -> <|"n" -> 10, "seriesCoefficient" -> 10, "equal" -> True|>, 
       6 -> <|"n" -> 20, "seriesCoefficient" -> 20, "equal" -> True|>, 
       7 -> <|"n" -> 35, "seriesCoefficient" -> 35, "equal" -> True|>, 
       8 -> <|"n" -> 70, "seriesCoefficient" -> 70, "equal" -> True|>, 
       9 -> <|"n" -> 126, "seriesCoefficient" -> 126, "equal" -> True|>, 
       10 -> <|"n" -> 252, "seriesCoefficient" -> 252, "equal" -> True|>, 
       11 -> <|"n" -> 462, "seriesCoefficient" -> 462, "equal" -> True|>, 
       12 -> <|"n" -> 924, "seriesCoefficient" -> 924, "equal" -> True|>, 
       13 -> <|"n" -> 1716, "seriesCoefficient" -> 1716, "equal" -> True|>, 
       14 -> <|"n" -> 3432, "seriesCoefficient" -> 3432, "equal" -> True|>, 
       15 -> <|"n" -> 6435, "seriesCoefficient" -> 6435, "equal" -> True|>, 
       16 -> <|"n" -> 12870, "seriesCoefficient" -> 12870, "equal" -> True|>, 
       17 -> <|"n" -> 24310, "seriesCoefficient" -> 24310, "equal" -> True|>, 
       18 -> <|"n" -> 48620, "seriesCoefficient" -> 48620, "equal" -> True|>, 
       19 -> <|"n" -> 92378, "seriesCoefficient" -> 92378, "equal" -> True|>, 
       20 -> <|"n" -> 184756, "seriesCoefficient" -> 184756, "equal" -> 
         True|>, 21 -> <|
        "n" -> 352716, "seriesCoefficient" -> 352716, "equal" -> True|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[14]} -> 1, {All, "n"} -> 
        1, {All, "seriesCoefficient"} -> 1, {All, "equal"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34], "seriesCoefficient" -> 
             TypeSystem`PackageScope`AtomShape[34], "equal" -> 
             TypeSystem`PackageScope`AtomShape[36]|>], 
           DirectedInfinity[1], 3, {All}]]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n", "seriesCoefficient", "equal"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 20], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[14]} -> 1, {All, "n"} -> 
        1, {All, "seriesCoefficient"} -> 1, {All, "equal"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34], "seriesCoefficient" -> 
             TypeSystem`PackageScope`AtomShape[34], "equal" -> 
             TypeSystem`PackageScope`AtomShape[36]|>], 
           DirectedInfinity[1], 3, {All}]]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n", "seriesCoefficient", "equal"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 20], "Path" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     20, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["n", 
                  Style[
                  "n", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "n"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "n"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["seriesCoefficient", 
                  Style[
                  "seriesCoefficient", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "seriesCoefficient"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "seriesCoefficient"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["equal", 
                  Style[
                  "equal", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "equal"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "equal"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["70"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["70"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["126"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["126"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["252"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["252"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["11"], 
                  Style[
                   RawBoxes["11"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[11]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["462"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["462"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["12"], 
                  Style[
                   RawBoxes["12"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[12]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["924"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["924"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["13"], 
                  Style[
                   RawBoxes["13"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[13]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1716"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1716"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["14"], 
                  Style[
                   RawBoxes["14"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[14]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["15"], 
                  Style[
                   RawBoxes["15"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[15]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6435"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6435"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["16"], 
                  Style[
                   RawBoxes["16"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[16]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12870"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12870"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["17"], 
                  Style[
                   RawBoxes["17"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[17]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24310"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24310"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["18"], 
                  Style[
                   RawBoxes["18"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[18]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48620"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48620"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["19"], 
                  Style[
                   RawBoxes["19"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[19]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["92378"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["92378"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["20"], 
                  Style[
                   RawBoxes["20"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[20]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["184756"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["184756"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["21"], 
                  Style[
                   RawBoxes["21"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[21]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[21]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["352716"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[21], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["352716"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[21], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[21], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{245., {289.3544921875, 294.6455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{245., {289.3544921875, 294.6455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8997488976810503`*^9},
 CellLabel->"Out[981]=",
 CellID->222447527,ExpressionUUID->"7ba5a859-3834-45b9-8109-40820b5d031b"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "For more details, please visit ",
 ButtonBox["A001405",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://oeis.org/A001405"], None},
  ButtonNote->"https://oeis.org/A001405"],
 " on the ",
 ButtonBox["OEIS",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.oeis.org"], None},
  ButtonNote->"https://www.oeis.org"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.8997489380730906`*^9, 3.8997489629415245`*^9}},
 CellID->259341750,ExpressionUUID->"aede4e75-7cdc-4de3-b2a0-e8d8522971d1"],

Cell[CellGroupData[{

Cell["For some reason, I can't use GeneratingFunction.", "MathCaption",
 CellChangeTimes->{{3.899799745298419*^9, 3.8997997521491423`*^9}},
 CellID->82809759,ExpressionUUID->"801a19b0-ea91-4885-b370-744c2e3ea415"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeneratingFunction", "[", 
  RowBox[{
   RowBox[{"Binomial", "[", 
    RowBox[{"n", ",", 
     RowBox[{"Quotient", "[", 
      RowBox[{"n", ",", "2"}], "]"}]}], "]"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"ModifiedCentralBinomialCoefficient", "[", "n", "]"}], " ", 
      "evaluated", " ", "in", " ", "place", " ", "with", " ", "Ctrl"}], "+", 
     "Shift", "+", "Enter"}], "*)"}], ",", "n", ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.899799754905414*^9, 3.8997998113446827`*^9}},
 CellLabel->"In[961]:=",
 CellID->326042921,ExpressionUUID->"266fbc21-21bf-45b9-ae3d-e414b988de8d"],

Cell[BoxData[
 RowBox[{"GeneratingFunction", "[", 
  RowBox[{
   RowBox[{"Binomial", "[", 
    RowBox[{"n", ",", 
     RowBox[{"Quotient", "[", 
      RowBox[{"n", ",", "2"}], "]"}]}], "]"}], ",", "n", ",", "x"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.8997998286138706`*^9},
 CellLabel->"Out[961]=",
 CellID->258809478,ExpressionUUID->"b40c00d9-f487-4fa9-8ed3-ec30a4ba7172"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Using the alternative definition with ",
 Cell[BoxData[
  RowBox[{"\[LeftFloor]", 
   FractionBox["n", "2"], "\[RightFloor]"}]], "Input",
  CellChangeTimes->{{3.899799754905414*^9, 3.8997998113446827`*^9}, {
   3.899799843965328*^9, 3.8997998544791927`*^9}},ExpressionUUID->
  "1d39ee96-1fc1-4b13-857c-dbadbfc313e4"],
 " also does not work."
}], "MathCaption",
 CellChangeTimes->{{3.89979981849187*^9, 3.8997998431993637`*^9}, {
  3.8998033217828264`*^9, 3.8998033220965548`*^9}},
 CellID->167270438,ExpressionUUID->"7363f704-fa89-445b-aff5-f61e19017c10"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeneratingFunction", "[", 
  RowBox[{
   RowBox[{"Binomial", "[", 
    RowBox[{"n", ",", 
     RowBox[{"\[LeftFloor]", 
      FractionBox["n", "2"], "\[RightFloor]"}]}], "]"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"ModifiedCentralBinomialCoefficient", "[", "n", "]"}], " ", 
      "evaluated", " ", "in", " ", "place", " ", "with", " ", "Ctrl"}], "+", 
     "Shift", "+", "Enter"}], "*)"}], ",", "n", ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.899799754905414*^9, 3.8997998113446827`*^9}, {
  3.899799843965328*^9, 3.8997998544791927`*^9}},
 CellLabel->"In[962]:=",
 CellID->50332621,ExpressionUUID->"791cacf7-7939-45a9-bc5e-d4f013793396"],

Cell[BoxData[
 RowBox[{"GeneratingFunction", "[", 
  RowBox[{
   RowBox[{"Binomial", "[", 
    RowBox[{"n", ",", 
     RowBox[{"Floor", "[", 
      FractionBox["n", "2"], "]"}]}], "]"}], ",", "n", ",", "x"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.899799861973397*^9},
 CellLabel->"Out[962]=",
 CellID->976239009,ExpressionUUID->"a5dafd4c-414a-4451-9554-2dd856399a3c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Derangements", "Section",
 CellChangeTimes->{{3.899801352857425*^9, 3.8998013561706266`*^9}, 
   3.899802798150638*^9},
 CellID->114590234,ExpressionUUID->"817d588d-c52a-4e94-842b-c16826a791bd"],

Cell[CellGroupData[{

Cell[TextData[{
 "Make a random multiset of the ",
 ButtonBox["hazel",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.color-name.com/hazel.color"], None},
  ButtonNote->"https://www.color-name.com/hazel.color"],
 " color rainbow palette."
}], "MathCaption",
 CellChangeTimes->{{3.8997489871714535`*^9, 3.8997489916544557`*^9}, {
  3.8997490704101877`*^9, 3.8997490920400324`*^9}},
 CellID->20786854,ExpressionUUID->"58990fce-e185-4229-969c-d7bf980499ca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hazelRainbowPalette", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"LUVColor", "[", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"\"\<#\>\"", "<>", "color"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"color", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<c9c789\>\"", ",", "\"\<94c989\>\"", ",", "\"\<89c9b5\>\"", ",", 
        "\"\<89a7c9\>\"", ",", "\"\<c989b9\>\"", ",", "\"\<c99089\>\""}], 
       "}"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8997490958088837`*^9, 3.8997491771133757`*^9}, {
  3.899749211475692*^9, 3.8997492176574*^9}},
 CellLabel->"In[5]:=",
 CellID->712923585,ExpressionUUID->"070f4149-e60c-4a73-a192-640f23a6b3e7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|
    "color" -> LUVColor[
      0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7621596783781963, -0.3310170840401606, 0.08359158699165539]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.6713375885659421, -0.17833924308420873`, -0.26467794346262646`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"]}], "}"}]], "Output",
 CellChangeTimes->{{3.8997491597998548`*^9, 3.8997491774983788`*^9}, 
   3.8997492179964013`*^9, 3.89975638797796*^9, 3.8997982780314245`*^9},
 CellLabel->"Out[5]=",
 CellID->221917247,ExpressionUUID->"d92e36e3-51fb-455a-86c5-54f5096577f7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sets", "Subsection",
 CellChangeTimes->{{3.8998028414331026`*^9, 3.899802842145471*^9}},
 CellID->529009126,ExpressionUUID->"d31d1b69-5656-4134-971d-3bb63864b95b"],

Cell[CellGroupData[{

Cell["Derangements of a set", "Subsubsection",
 CellChangeTimes->{{3.8998028090900555`*^9, 3.899802829000145*^9}},
 CellID->278556927,ExpressionUUID->"aeca03e3-99da-4e15-89a8-5b13c1f9a2e6"],

Cell[CellGroupData[{

Cell["\<\
Let's analyze the derangements. A derangement is where no element remains in \
its original position. If an element remains in its original position, you \
call that a fixed point. So a derangement is a permutation with 0 fixed \
points.\
\>", "MathCaption",
 CellChangeTimes->{{3.899801364210209*^9, 3.8998013686852517`*^9}, {
  3.899801409411025*^9, 3.899801443079608*^9}},
 CellID->138860351,ExpressionUUID->"6075fe4f-193e-4df9-9253-8bd556f0b2ac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"MultisetPartialDerangements", "[", 
   RowBox[{"Take", "[", 
    RowBox[{"hazelRainbowPalette", ",", "5"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.899801369481155*^9, 3.89980140050083*^9}, {
  3.8998024753516526`*^9, 3.899802488487306*^9}},
 CellLabel->"In[1506]:=",
 CellID->282822165,ExpressionUUID->"b1b55d79-e63b-4a94-bca7-cd08ad44707f"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnbGOI01yoOd0MmReP8K9QxtyZTXO1eFAg9ZqtBLK2QFWAoTB2EOg/DH6
DfgENMZuY0CPL8A36HfgpYZAg/uTlR2ZkRmdEfw+JITV7GxFVsWXkRnTXeT/
/pcv//xvf/fp06f/+If0f/75T//1T3/965++/t//lf6f//eX/5j+/S9//tf/
85f//PO///mv//gv/zP94d//j0+f/u7vP3367/98AgAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAJxyPx9VqNU2T8u9AbM4CJBN6XBzB4IRj
0B8cg97gGPSmrWPpaofDoeLvfN6si4Zmkpvv66KhibX+sikaqvtafysaqvva
fC0a11dIDiQTNHNYYknCqI75yntBLPXaie2YZS7C+oxjWXytdzmWjunXDo41
q2Ou8i5nqDr29PRU93eSSD/2s3DoT2j7X7Nw6LMzb/fCoa9s+/mncOhPg/N+
JxxLK1diSwVLl43qmLu8S2O1WDuBHbPMRVifcSyLu/UuxNKxJmsHx9rUMW95
FzJUHaML+ANRKxtdQJ6wpyZvp4LAjtEF0AVEcizqXkkXkIcuYJBzJl3AyNmR
3pe302Dgyhb21OTtVBDYMboAuoBIjkXdK+kC8tAFDHLOpAsYOTvS+/J2Ggxc
2cKemrydCgI7RhdAFxDJsah7JV1AHrqAQc6ZdAEjZ0d6X95Og4ErW9hTk7dT
QWDH6ALoAiI5FnWvpAvIQxcwyDlT79jhcJimKf8BQZm/E/WEFrWyNVm5EmeK
yF8wqmPu8i6N1WLtBHaMLmCQLgDHxlnvQtydBnGMLiDDIHVsu92mK7y+vtb9
nagntKiVrcnKTSYkH5IVmplckpcwqmPu8i6N1WLtBHaMLmCQLgDHxlnvQtyd
BnGMLiDDOHUsXeTdTxxd+jt6656fn4Xz12dHHkufnYL7UhtecF8tVm4yId82
yufzRkbCqI75yrvl2jmFdswyF2F9xrEsvtb7mI41OQ3iWJs65irvTuvYR70X
kKb36TfzPL87AWV2imIps1N2XzrDy+6r/3sBRfORXDaqY47ybrl2zgR2zDIX
YX3GsSyO1vuwjhm8F4Bj8fLut459VBfw8vJynqFkAsrsFMVSZqfsvnSGl91X
/y6gaD6Sy0Z1zFHeLdfOmcCOWeYirM84lsXReh/WMYMuAMfi5d1vHfvAzwha
rVZphtM0vTsB/aqUx9Jnp+C+1D/tKrgvk88Iks9HctmojvnKu+XaOYV2zDIX
YX3GsSy+1vuYjtl8RhCOxcu70zpm3wUcj8d5ns/TS6SG5d0JVGenIlZ1dmru
q9bwmvvq2QVUzEdy2aiOuci75dq5JLBjlrkI6zOOZXGx3gd3rGsXgGPx8u69
jqXr5N8vWPo71da9/Zzi4eGh91sbFbGqs1NzX7WG19yXugtIDixZVzGfS5Yk
jOqYi7xbrp03YjtmmYuwPuNYFhfrfXDH9F0AjjWrYx7y7r2Opb//+PiYf33g
5t9R9p673e7d7uMNZY9WFEv57xtl96Xrc8vuS9cFpHDJgSWjKuZzyZKEUR1z
kXfLtXMmvGOWuQjrM45lcbHeB3dM2QXgWMs65iHvMeqY5HsH/vB3on6We9TP
QFZ2AQ2//WSJ6xBRHXOU97JYurUT3jG+L6CBzziWxdF6L8LR58bjWMs65ifv
RYxfxyQkkYqGJlZ64EVDEys98KKhuq/1t6Khuq/N16KhidWKqI5Fzbvl2mmF
pWOWuQjrM45libreLR2zXDutiOpY1Lx7rGMAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AFDH8XhcrVbTNH30ROAjOTuQZOhxcRyDE45Bf3AMeoNj0Juujt0Mdzgcrv/8
82ZdNDRzWH/ZFA1NrM33ddFQxVp/KxqaWOvN16JxfYWkQZJBM4cl7s4xw7xb
+oxjeaI6ps97wX2pfY7tGLVF75h+neJYs9oS9Ow38l55zdPT080/TyL92M/C
od895+1eOPQm7H/NwqHvAvbzT+HQ79TzficcS1V0SQYld+eYYd4tfcaxPFEd
a5J36X218DmwY9QWvWNN1imOtaktQc9+I++V8kBhd0+6AE5ogU5oVLb8ZXFs
kNoivS+6gCzUFrqASI5FPfuNvFfKA4XdPekCOKEFOqFR2fKXxbFBaov0vugC
slBb6AIiORb17DfyXikPFHb3pAvghBbohEZly18WxwapLdL7ogvIQm2hC4jk
WNSz38h7pTxQ2N2TLoATWqATGpUtf1kcG6S2SO+LLiALtYUuIJJjUc9+I++V
lxwOh2mabr6Qfgq8e9IFLFuXV6KCO3WMnRrHAjnmrgsI7Bi1ZZAuAMfoAnL3
NeReec12u00hXl9fb/63YXdPuoBl65IMSYkkhmYml9ypY+zUOBbIMXddQGDH
qC2DdAE4RheQu68h98qlKEsfSaq37vn5WTh/vQnyWHoTCmKpV1PBM2xhXZJh
qQqVzueNe3TMMO+WPuNYnqiO6fNu6fMptGPUFr1jTU6eONamtgQ9+w27V96k
0++hpel9+s08z+/OQWlCUSylCWWxdKup7Bn2/z20ovlILhvWMcO8W/qMY3mi
OqbMu6XPZwI7Rm3RO2bwXgCOjVgz/fh8ppNj8kBK615eXs4zlLzgoDShKJbS
hLJYutVU9gz7W1c0H8llwzpmmHdLn3EsT1THlHm39PlMYMeoLXrHDLoAHBux
Zvrx+Uwnx+SB9D+BWq1WaYbTNL07B/2qlMfS7zIFsdQ/WSt4hibvpMvnI7ls
WMcM827pM47lieqYPu+WPp9CO0Zt0Ttm8xlBODZczXTl86mbY/JA1dYdj8d5
ns/TS6SG5d05VJtQEavahJpYtaup5hn2tK5iPpLLhnXMMO+WPuNYnqiOVefd
0udLAjtGbdE71rULwLFxa6YHny/p5NjNQDdfQKi27u3nFA8PD73fEKmIVW1C
Taza1VTzDNXWJQ2WrKuYzyV355hh3i19xrE8UR2rzrulz2/EdozaondM3wXg
WLPaEvTsN/JeefOCj4+P1+8XKHvP3W6Xf7v5EmU/WBRL2Q+WxdL11GXPUGdd
Cpc0WDKqYj6X3J1jhnm39BnH8kR1TPnvtDY+nwnvGLVF75iyC8CxlrUl6Nlv
5L1yiesvJgj7Odt8X8At67p+M8VSiLCO8ZneOBbIMUffFxDeMWqL3jHlOsWx
lrUl6Nlv/L1SQhKpaGhipeQWDU2slNyioYq1/lY0NLGSSEVDE6sVYR0zzLul
zziWJ6pjlnm39LkVlo5RW/SOWa7TVkR1LOrZz+NeCQAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAdRyPx9VqNU3TR08EPpKzA0mGHhfHMTjhGPQHx6A3OAa96erYzXCH
w+H6zz9v1kVDM4fN+lvR0MRaf9kUDVWszdeioYm1+b4uGtdXSBokGTRzWGLJ
MV/PRw5rZ2nt4FgrxyzrmKVj+rWDY60c85V3OdSxPKa1BZ/N69g1T09PN/88
TezHfhYO/UlmP/8UDv1JZt7uhUPfBcz7nXDod4f9r1k4llbTkgxKli7r7vkI
Ye1k1g6ONXHMso5ZOtZk7eBYE8fc5V0IdSyPaW3BZ/M6Jg/ESYYuoBUjVDa6
gEHWDo7RBWQYefe8N8fc5V0IdSwPXcAgPtMFjHySkcbytjsErmx0AYOsHRyj
C8gw8u55b465y7sQ6lgeuoBBfKYLGPkkI43lbXcIXNnoAgZZOzhGF5Bh5N3z
3hxzl3ch1LE8dAGD+EwXMPJJRhrL2+4QuLLRBQyydnCMLiDDyLvnvTnmLu9C
qGN56AIG8dmgCzgcDtM03Xwh/cRJ5i67gLwSFeQv6O75CGHtZNYOjtEFZGiy
dnDsPk9NQqhjeegCBvG5uWPXbLfbFOL19bXfXQhxd5KRxvK2OyQZkhJJDM1M
Lsk75u75CGHtZNYOjtEFZGiydnDsPk9NQqhjeegCBvG5uWNLUZY+klR/F8/P
z8L567Mjj6U3vCCWeuUWPMMWqynJsFSFSufzRsYxX89HHou1k9kdcKyJY5Z1
zNKxJrsnjjVxzFfeqWOtHDOtLfhsW8du0um9gDS9T7+Z5/ndOSizUxRLaXhZ
LN3KLXuG/d8LKJqP5LKOnk9RLNZOZvfEsSaOWdYxS8cMfp8Wx+LlnTrW0DHT
2oLP5nVMHkh5Fy8vL+cZSl5wUGanKJbS8LJYupVb9gz7dwFF85Fc1tHzKYrF
2qnePXFswDpm6ZjB7olj8fJOHWvomGltwWfzOiYPpL+L1WqVZjhN07tz0P+k
Rh5LXwEKYql/ilfwDE0+I0g+H8llfT0feSzWTvXuWTQfyWWjOmZZxywds/ls
DRyLl3fqWCvHTGsLPpvXMXmg6rs4Ho/zPJ+nl0gNy7tzqM5ORaxqw2ti1a7c
mmfYswuomI/ksi6eT0Us1k7F7oljw9YxS8e67p44Fi/v1LHmjpnWFnw2r2M3
A918AaH6Lt5+TvHw8ND7rY2KWNWG18SqXbk1z1DdBSQNlqyrmM8lS465eD4V
sVg7S7snjrVyzLKOWTqm3z1xrJVjLvJOHWvumGltwWfzOnbzgo+Pj9fvFyh7
891ul3+7+RJlj1YUS9nnlsXS9e9lz1DXBaRwSYMloyrmc8mSYy6eT0Us1s7N
3RPHGjpmWccsHVPunjjW0DEXeaeONXfMtLbgs3kdW+L6iwn4zPOlfwcoiOXn
c6S7fjPFUghHz6cI1s7NtYNjDR3j+wJurh0ca+iYo7wXQR3Lw/cFfLjPBo5J
SBMrGppY6YEXDU2sJG3RUMXafC0amlhpgRQNTaxWRH0+rB392mlFVMcsc2Hp
mOXaaUVUx6LmnTr2TizL2oLPw9QxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AACQcDweV6vVNE0fPRH4SM4OJBl6XBzH4IRj0B8cg97gGPSmq2M3wx0Oh+s/
X2++Fg3NHNZfNkVDE+vzZl00NLE2629FQxXr+7poXF8haZBk0MxhiXtzzFfe
5ejXDo55dMy0ZlLHslBb9I7p1ymO3WdtkTOyY9c8PT3d/PMk0rzfCYd+95y3
e+HQdwE/9rNw6LuA/fxTOPQVe/9rFo4lw5dkUHJvjrnLu5AmawfH3DlmWjOp
Y1moLXrHmqxTHLvP2iJkZMfkgaLunnQB97l7Rj2hudupccydY+526sCOUVvo
AiI55q62CBnZMXmgqLsnXcB97p5RT2judmocc+eYu506sGPUFrqASI65qy1C
RnZMHijq7kkXcJ+7Z9QTmrudGsfcOeZupw7sGLWFLiCSY+5qi5CRHZMHirp7
0gXc5+4Z9YTmbqfGMXeOudupAztGbaELiOSYu9oiZGTHLjkcDtM03Xwh/RR3
96QLyBieV6KC+3TMXd6FNFk7OObOMXc7dWDHqC2DdAE4dp+1RciYjl2z3W5T
iNfX19t3EXT3pAvIGJ5kSEokMTQzueQ+HXOXdyFN1g6OuXPM3U4d2DFqyyBd
AI7dZ20RMqZjS1GWPpJUb93z87Nw/vonJo+lt04eS7+aCmK1MDzJsFSFSufz
xh065ivvlmvnhGMOHTOtmdSxLNQWvWNNTmg4doe1JYBjN+n0e2hpep9+M8/z
u3NQPrGiWErrimIpV1NZrP6/T1s0H8llozrmKO+Wa+cMjrlzzLRmUseyUFv0
jhn8zjaODZh3S59HdkweSGndy8vLeYaSFxyUT6woltK6oljK1VQWq//uWTQf
yWWjOuYo75Zr5wyOuXPMtGZSx7JQW/SOGZzQcGzAvFv6PLJj8kD6n0CtVqs0
w2ma3p2D/onJY+lPMvJY+p+sFcQy+WwN+Xwkl43qmK+8W66dE445dMy0ZlLH
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
    "], {{0, 156.}, {615.6, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{615.6, 156.},
  PlotRange->{{0, 615.6}, {0, 156.}}]], "Output",
 CellChangeTimes->{{3.8998013779190187`*^9, 3.89980140417391*^9}, {
  3.8998024787362537`*^9, 3.8998024892804465`*^9}},
 CellLabel->"Out[1506]=",
 CellID->83022609,ExpressionUUID->"24fc6116-1fcd-4782-a001-82bf806c6c8e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["We can count this.", "MathCaption",
 CellChangeTimes->{{3.8998014488988447`*^9, 3.8998014522065635`*^9}},
 CellID->80522523,ExpressionUUID->"ad812f14-edcb-46ca-a7b9-10d9d51d9ae0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"MultisetPartialDerangements", "[", 
   RowBox[{"Take", "[", 
    RowBox[{"hazelRainbowPalette", ",", "5"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.899801452828685*^9, 3.899801458108466*^9}, {
  3.899802494453182*^9, 3.899802510708974*^9}},
 CellLabel->"In[1509]:=",
 CellID->57533203,ExpressionUUID->"8a3c04b3-7fcc-438f-9a13-cc415d98eb0d"],

Cell[BoxData["44"], "Output",
 CellChangeTimes->{
  3.8998014584851685`*^9, {3.8998024950446234`*^9, 3.8998025113239727`*^9}},
 CellLabel->"Out[1509]=",
 CellID->224896994,ExpressionUUID->"5c0c1500-966e-45b5-b058-6b1ea91dc530"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["We can also compute this.", "MathCaption",
 CellChangeTimes->{{3.8998014609960275`*^9, 3.8998014643396297`*^9}},
 CellID->458749474,ExpressionUUID->"6abc5169-45bb-477b-ba23-4adc5e00e0ca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EnumerateMultisetPartialDerangements", "[", 
  RowBox[{"Take", "[", 
   RowBox[{"hazelRainbowPalette", ",", "5"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.899801466545595*^9, 3.8998014704781876`*^9}, 
   3.8998024996713476`*^9},
 CellLabel->"In[1508]:=",
 CellID->175618304,ExpressionUUID->"4bf525df-0b49-4c5a-b22b-7d3d6caab2e9"],

Cell[BoxData["44"], "Output",
 CellChangeTimes->{3.8998014709939957`*^9, 3.8998025006726246`*^9},
 CellLabel->"Out[1508]=",
 CellID->101962785,ExpressionUUID->"75ed71c0-ad04-4af4-a1be-03080fa660d9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["This is the subfactorial of the length.", "MathCaption",
 CellChangeTimes->{{3.8998014738092175`*^9, 3.8998014796240363`*^9}},
 CellID->415210772,ExpressionUUID->"3bd74ddd-9426-40a3-aec1-cf7261a0d99b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"Take", "[", 
   RowBox[{"hazelRainbowPalette", ",", "5"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8998015293217525`*^9, 3.8998015313754134`*^9}, 
   3.8998025177736564`*^9},
 CellLabel->"In[1510]:=",
 CellID->636305125,ExpressionUUID->"fc85464e-5626-441c-9a8f-6b265ee4874e"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.899801531871497*^9, 3.8998025188150587`*^9},
 CellLabel->"Out[1510]=",
 CellID->158571967,ExpressionUUID->"e787140b-f9aa-4819-805a-05dc04991bb7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Subfactorial", "[", 
  RowBox[{"Length", "[", 
   RowBox[{"Take", "[", 
    RowBox[{"hazelRainbowPalette", ",", "5"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8998015339630623`*^9, 3.8998015397724037`*^9}, {
  3.8998025223529744`*^9, 3.8998025286795616`*^9}},
 CellLabel->"In[1512]:=",
 CellID->292353289,ExpressionUUID->"1b0e212f-990b-4a38-ae6b-d3299df40787"],

Cell[BoxData["44"], "Output",
 CellChangeTimes->{
  3.8998015401059685`*^9, {3.89980252282473*^9, 3.8998025292637353`*^9}},
 CellLabel->"Out[1512]=",
 CellID->667086174,ExpressionUUID->"a135fc76-412c-4e10-b183-b5722908b411"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "The subfactorial is written as ",
 Cell[BoxData[
  RowBox[{"!", "n"}]], "InlineFormula",
  FormatType->StandardForm,ExpressionUUID->
  "d65f9431-d6b8-43fa-a9f4-4aa262a99db2"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.8998015471969595`*^9, 3.899801554364959*^9}},
 CellID->19329075,ExpressionUUID->"d9300174-a555-472e-81cd-cad3f180599f"]
}, Closed]],

Cell[CellGroupData[{

Cell["Partial derangements of a set", "Subsubsection",
 CellChangeTimes->{{3.8998028179662743`*^9, 3.8998028263675385`*^9}},
 CellID->426728163,ExpressionUUID->"dc3a3081-25ce-47e2-8694-dc9339f163fb"],

Cell[CellGroupData[{

Cell["\<\
We can also compute partial derangements. Let's say we have 2 fixed points. \
That means 2 elements do not move.\
\>", "MathCaption",
 CellChangeTimes->{{3.89980253409416*^9, 3.899802555990614*^9}},
 CellID->76587251,ExpressionUUID->"cf6a04bf-71bc-4c6b-b550-75d212435306"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"MultisetPartialDerangements", "[", 
   RowBox[{
    RowBox[{"Take", "[", 
     RowBox[{"hazelRainbowPalette", ",", "5"}], "]"}], ",", "2"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.899802568571004*^9, 3.899802577147523*^9}},
 CellLabel->"In[1514]:=",
 CellID->560951652,ExpressionUUID->"c24656bd-5bb8-499c-8c0e-a51677699294"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnb+OI8mRhwenM868foR7hzbOPatxroQDDVrS3kooZwdaHXAYjL0Eyl+j
36CfoI2121jQ4wvwDfodqMQUQBDTrOrIiqxg/aK/DykJ6uVW5J8vMjOmh+R/
/OXzH//6L58+ffrHv5X/+uOf//+/fv75z1/+9O/l//zPT//o/vbTj//73z/9
349/+/Hn//zLH8oP/17+84d/Lf8p/3sCAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAABZjsfjZrPpus75GsjNIEAxYYmHIxiccAyWB8dgaXAM
lqa5Y+WBh8Nhxmt2v2yrmqeTP+y2Vc0Ta/t5V9U8sXbbr1XNNa7dl6r29gnF
gWKCpw9jjEmY1TGtda+I5c6d3I5prYUdrdzBsVaOhe5jUj4nd0xqLSrGJZU7
bR17eHiY95ri0v733tj8l7Rf972x+QuB/mlvbP5CYN//Zmz+C2G/fza2Mckt
tsxg7LFZHZNbd2usFrmT2DG5tTAilzs41sSx0H1MzefMjqmthXVcarnT0DEK
ge+gEKAQkLjMGJG7fCZ2TG4tjMjlDo6t5zJjHZeaz5kdU1sL67jUcodCgEKg
elwUApPIXWaMyF0+EzsmtxZG5HIHx9ZzmbGOS83nzI6prYV1XGq5QyFAIVA9
LgqBSeQuM0bkLp+JHZNbCyNyuYNj67nMWMel5nNmx9TWwjoutdyhEKAQqB4X
hcAkcpcZI3KXz8SOya2FEbncwbH1XGas41LzObNjamthHZda7jRx7HA4dF03
/ZFBE6/JekmjEJiQ3OJMFdMPzOqY3LpbY7XIncSOya2FEbncwbH1XGas41Lz
ObNjamthHZda7jRx7OnpqTzk9fV13muyXtIoBCYkLyYUH4oVnp5cMi1hVsfk
1t0aq0XuJHZMbi2MyOUOjq3nMmMdl5rPmR1TWwvruNRyp5Vj5TnvfhLp2Gv8
4j0+PhqH4JfBHssvuT2WX4aKcbWQvJgwXTna+3NmQsKsjmmte2TunFI7prUW
WXPnhGONHAvdx6R8PuV2TGotsubOqaljt3qPQOnhp2/0ff9uB5wyVMVySl4V
yylD3biWf49AVX8sj83qmNC6R+bOQGLHhNYia+4M4FgTx0L3MR2fBzI7prMW
WXNnoKFjtyoEXl5ehk5aOuCUoSqWU/KqWE4Z6sa1fCFQ1R/LY7M6JrTukbkz
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
Zv4JLI0CGA==
    "], {{0, 67.8}, {616.1999999999999, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{616.1999999999999, 67.8},
  PlotRange->{{0, 616.1999999999999}, {0, 67.8}}]], "Output",
 CellChangeTimes->{{3.89980256907689*^9, 3.8998025777830105`*^9}},
 CellLabel->"Out[1514]=",
 CellID->38801890,ExpressionUUID->"88309cfb-bb67-4fe3-b8bd-23b08cfeef86"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Now let's count them.", "MathCaption",
 CellChangeTimes->{{3.8998025794270105`*^9, 3.899802583153946*^9}},
 CellID->506692511,ExpressionUUID->"98cd6fb9-18bf-4f70-b962-352d55e0360b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"MultisetPartialDerangements", "[", 
   RowBox[{
    RowBox[{"Take", "[", 
     RowBox[{"hazelRainbowPalette", ",", "5"}], "]"}], ",", "2"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8998025847858753`*^9, 3.899802590784009*^9}},
 CellLabel->"In[1515]:=",
 CellID->194604109,ExpressionUUID->"8004a5ce-36fd-4a2b-9acd-4c9b43863de6"],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{3.899802591127084*^9},
 CellLabel->"Out[1515]=",
 CellID->793551999,ExpressionUUID->"c4ed137e-0fcf-413c-9835-84dbbd208838"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The formula for this is ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"(", GridBox[{
       {"n"},
       {"k"}
      }], ")"}], "!"}], 
   RowBox[{"(", 
    RowBox[{"n", "-", "k"}], ")"}]}]], "InlineFormula",
  FormatType->StandardForm,ExpressionUUID->
  "97757a49-f3d4-46f8-85bc-b72904908ec9"],
 ", where ! represents the subfactorial of what follows, not the factorial of \
the binomial coefficient of n and k."
}], "MathCaption",
 CellChangeTimes->{{3.8998025944758215`*^9, 3.8998026382565985`*^9}},
 CellID->660007025,ExpressionUUID->"d5339388-10c8-436e-b01e-453b467cb621"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Binomial", "[", 
   RowBox[{"5", ",", "2"}], "]"}], 
  RowBox[{"Subfactorial", "[", 
   RowBox[{"5", "-", "2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8998026460873404`*^9, 3.899802651476816*^9}},
 CellLabel->"In[1516]:=",
 CellID->36135894,ExpressionUUID->"6bc12bc7-dc01-425c-a57d-038033662ede"],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{3.8998026518422937`*^9},
 CellLabel->"Out[1516]=",
 CellID->99800880,ExpressionUUID->"885d35a7-2867-4d45-b060-1607ebe31fe7"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "For more details, please visit ",
 ButtonBox["Partial Derangement on Wolfram MathWorld",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://mathworld.wolfram.com/PartialDerangement.html"], None},
  ButtonNote->"https://mathworld.wolfram.com/PartialDerangement.html"],
 " and ",
 ButtonBox["OEIS sequence A098825 Triangle read by rows: T(n,k) = number of \
partial derangements, that is, the number of permutations of n distinct, \
ordered items in which exactly k of the items are in their natural ordered \
positions, for n >= 0, k = n, n-1, ..., 1, 0.",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://oeis.org/A098825"], None},
  ButtonNote->"https://oeis.org/A098825"]
}], "MathCaption",
 CellChangeTimes->{{3.8998026803217125`*^9, 3.899802745891878*^9}},
 CellID->106049717,ExpressionUUID->"f7ca8087-8d23-4ee9-b2c8-0494eb1543cb"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Multisets", "Subsection",
 CellChangeTimes->{{3.899802853791953*^9, 3.899802855187764*^9}},
 CellID->198781856,ExpressionUUID->"e478b64c-7b60-4363-bee6-2430b919a40c"],

Cell["Here is a multiset with repeated elements.", "MathCaption",
 CellChangeTimes->{{3.899801384122714*^9, 3.8998013915370626`*^9}},
 CellID->133148963,ExpressionUUID->"11d8a72c-b16f-4f6a-ac77-87deb7cc5af8"],

Cell[CellGroupData[{

Cell["\<\
Computing derangements of multisets is harder, but the function can do it.\
\>", "MathCaption",
 CellChangeTimes->{{3.899802762282137*^9, 3.8998027747631817`*^9}},
 CellID->57908701,ExpressionUUID->"ec48c60e-0185-4371-b2cc-22991196ade7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"randomMultiset", "=", 
  RowBox[{"RandomChoice", "[", 
   RowBox[{"hazelRainbowPalette", ",", "21"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.899749235227027*^9, 3.899749241947027*^9}},
 CellLabel->"In[6]:=",
 CellID->407433582,ExpressionUUID->"861c6930-24d9-450e-b8ff-492cecf38028"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|
    "color" -> LUVColor[
      0.6713375885659421, -0.17833924308420873`, -0.26467794346262646`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7621596783781963, -0.3310170840401606, 0.08359158699165539]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7621596783781963, -0.3310170840401606, 0.08359158699165539]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7621596783781963, -0.3310170840401606, 0.08359158699165539]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.6713375885659421, -0.17833924308420873`, -0.26467794346262646`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"]}], "}"}]], "Output",
 CellChangeTimes->{3.8997492424170275`*^9, 3.899756392273822*^9, 
  3.8997982804066257`*^9},
 CellLabel->"Out[6]=",
 CellID->898697144,ExpressionUUID->"3c12c15a-f69a-4157-95c5-181aa4ea6567"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Derangements", "Subsection",
 CellChangeTimes->{{3.899802870594466*^9, 3.899802872105749*^9}},
 CellID->78398657,ExpressionUUID->"e45ef553-7bf5-4f08-bba6-9d5cf5a243aa"],

Cell[CellGroupData[{

Cell["\<\
Let's do a smaller example. This time, let's list all the elements of the set.\
\>", "MathCaption",
 CellChangeTimes->{{3.8997496568247814`*^9, 3.899749668077464*^9}},
 CellID->708478496,ExpressionUUID->"79f05979-2c68-4e3f-bab4-4135e0ab0567"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hazelRainbowPaletteSubset", "=", 
  RowBox[{"RandomSample", "[", 
   RowBox[{"hazelRainbowPalette", ",", "4"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8997496730949655`*^9, 3.899749684028263*^9}},
 CellLabel->"In[13]:=",
 CellID->450230421,ExpressionUUID->"92e5d00f-ec71-4325-a442-547765e12750"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|
    "color" -> LUVColor[
      0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7621596783781963, -0.3310170840401606, 0.08359158699165539]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.6713375885659421, -0.17833924308420873`, -0.26467794346262646`]|>,
    "LUVColorSwatchTemplate"]}], "}"}]], "Output",
 CellChangeTimes->{3.8997496845276875`*^9, 3.8997563967663803`*^9, 
  3.8997982954485292`*^9, 3.899798358957198*^9},
 CellLabel->"Out[13]=",
 CellID->559918355,ExpressionUUID->"918b6fcf-e55f-4b27-98e6-2d4d8465cb26"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subsetRandomMultiset", "=", 
  RowBox[{"RandomChoice", "[", 
   RowBox[{"hazelRainbowPaletteSubset", ",", 
    RowBox[{"{", "6", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8997496909994445`*^9, 3.8997497185029545`*^9}, 
   3.8998031080883784`*^9},
 CellLabel->"In[1526]:=",
 CellID->212638519,ExpressionUUID->"0bc2d1a9-a708-49e5-9b03-624687358ee1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|
    "color" -> LUVColor[
      0.6713375885659421, -0.17833924308420873`, -0.26467794346262646`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7621596783781963, -0.3310170840401606, 0.08359158699165539]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7621596783781963, -0.3310170840401606, 0.08359158699165539]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"]}], "}"}]], "Output",
 CellChangeTimes->{{3.899749711969803*^9, 3.8997497188631163`*^9}, 
   3.899756398909689*^9, 3.8997982958295245`*^9, {3.899798360220496*^9, 
   3.8997983669226646`*^9}, 3.899803080064234*^9, 3.8998031102133536`*^9},
 CellLabel->"Out[1526]=",
 CellID->399220382,ExpressionUUID->"8c96e5f9-ccb6-40bd-b4f9-2377f7b695f3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Let's find all the multiset partial derangements.", "MathCaption",
 CellChangeTimes->{{3.899749731291973*^9, 3.8997497408599186`*^9}},
 CellID->19185935,ExpressionUUID->"92ece283-ca8d-4bfc-a0e2-c926a94bd189"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"MultisetPartialDerangements", "[", "subsetRandomMultiset", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8997497550334845`*^9, 3.8997497595874767`*^9}, {
  3.8997983032323427`*^9, 3.899798307194933*^9}, {3.8998030865240192`*^9, 
  3.8998031151121664`*^9}},
 CellLabel->"In[1527]:=",
 CellID->140398203,ExpressionUUID->"3cb5f31d-ffe6-4da3-a9ce-89e7634a9b28"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
lENIw35KLhvWZ8W8otYOPueJ6nPzuVu/h1MO1UKfAcKTaufu5xGam9vlD0OL
xWLqD3E0xGpuONbz0jwv8RCSlBtq2g37uWZ2PivmFbV28DlPVJ+bz936PRQP
1dP5DBCeVCPL5fL24wbC3xjs9/v8Z4evEf4UXxVL+Ns2u3lpnpdsCEnhknJD
DblhP9fMzmfFvKLWDj7nieqz8DfVdu+hbKie1GeAmXD7jPewz0EN+qxdR893
VfgPCszIZ55T/eznVOOzU595TvXdOuU/+AIwBalfVS1JrNRDqpYor5dt1XKT
l+Z5vW2qliTWWIT1WTGvqLWDz3mi+qx57lFf4wAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
ALxzOp3W63XXdc/eCMyFs29JvCkujs+gDD5DJCb1GSA8qYKOx+Pt1zfb16ol
2cP2+6ZqSWKFzetlW7VEeb1tqtbtFZJySTzJHoaYm8/ysyhH1TFXPQGfPfoc
tT9b9hkgPKvV6u7XU631h33hkjftw4++cMlfQGPm9bLtd4fCJR+qDz/7wjX0
wjcknpC5+TzKWRSi6pi3noDP7nyO2p8t+wwQnrk17bB5MVRnLxv13BmqjfQE
fHbnc9T+bNlngPDMrWmHzYuhOnvZqOfOUG2kJ+CzO5+j9mfLPgOEZ25NO2xe
DNXZy0Y9d4ZqIz0Bn935HLU/W/YZIDxza9ph82Kozl426rkzVBvpCfjszueo
/dmyzwCBOR6PXdfd/Wj5V9ymHTYvb0N1Xr8G5ukzQ7WRnoDP7nyO2p9t+gwQ
nt1ul6rm8/Pz7r9Gbdph8/I2VCfxkn5JQslOrpmnzwzVRnoCPrvzOWp/tukz
wBxIhTP0OEp5Yb6/vxeWpLy5lccKm5e4aVfkNcYLXxJvaGCo3c+FGfosPwuj
jrnqCV/47NDnqP3ZrM8Ac2Ci9+ylivv2i77vH+5B2NyqYoXNS9a06/Ka/j3V
VfspuWzUcxeehV3H/PSEM/jszueo/dmyzwDhmahpf3x8nIuu5PMOwuZWFSts
XrKmXZfX9EN11X5KLhv13IVnYdcxPz3hDD678zlqf7bsM0B4pvt0+Xq9TkXX
dd3DPcj/DFceK2xe4j8vVuSl8vSP8v2UXDbqucvPwqhjrnrCFz479Dlqf7bs
M0B4Rm/ap9Op7/tzxSXSj7QP99Dc3Bpihc2rtWm35DXlUN2wn5LLRj335rOw
7piHnnANPrvzOWp/tuwzQHhS7dz9PEJzYV7+MLRYLKb+wEhDrLB5tTbtlrzE
Q3VSbqhpN+znmrn53HwW1h3z0BMu4LNHn6P2Z8s+A4Qn1chyubz9uIHwNyH7
/T7/2eFrhL8xqIoVNi/Zb0Lq8pIN1SlcUm6oITfs55q5+Sz8zZ5dxzz0hDP4
7NTnqP3Zss8AM+H2Ge9Rn4MaNi8/z6lW+A8KzMdnnlP99J6Az059jtqf7fsM
MENSrVUtSazUr6oWed3J62VbtUR5vW2qliTWWEQ9d82zUHUsaE8YC3yW+xy1
P3v0GQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnHI6ndbrddd1z94IzIWzb0m8
KS6Oz6AMPkMk8BkiManPQxGPx+Pt1zfb16ol2cP2+6ZqiWK9baqWl7w0z2vz
sq1at1dIyiXxJHsYwoTPio7Jz6IiL806dVU7+Dyaz1FfdzR9dtiffd2filhB
65T+nGG1Wt39etpbf9gXLnlzO/zoC5d8qD787AuXXDy1vDTPK/WZfncoXENN
aUg8ISZ8VnRslLMozUuzTr3VDj6P43PU1x1Nnx32Z3f3pzRW0DqlP2cw0bQZ
qm2IVxrLYdOO2twYqo3UDj4zVBuJ5bE/u7s/pbGC1in9OYOJps1QbUO80lgO
m3bU5sZQbaR28Jmh2kgsj/3Z3f0pjRW0TunPGUw0bYZqG+KVxnLYtKM2N4Zq
I7WDzwzVRmJ57M/u7k9prKB1Sn/OYKJpM1TbEK80lsOmHbW5MVQbqR18Zqg2
Estjf3Z3f0pjBa1T+vNdjsdj13V3P4r7Fbi5IZ6NoTqvXwOGfGao9jWEjOEG
PjNUG4nlsT+7uz+lsYLWKf35LrvdLkX5/Py8+69hmxvi2Riqk3hJvyShZCfX
GPKZodrXEDKGG/jMUG0klsf+7O7+lMYKWqf05yFSoKHH98kTeX9/L0xBfkAV
scTi2cxL87xGaUpJvKEGW7ufC1Z8VnRMfhY2ffZVO1/4PJbPUV93NH122J99
3R+jPjPb6PbnISZ6z17a4bdf9H3/cA/CA6qLJRPPbF6a56Xwnr2q/ZRcVtVn
RceEZ2HWZ0e1cwafx/E56uuOps8O+7Oj+2PXZ2Yb9f5cFUuYyMfHx3mTJe8P
Fx5QXSyZeGbz0jwvhaZdtZ+Sy6r6rOiY8CzM+uyods7g8zg+R33d0fTZYX92
dH/s+sxso96fq2LJE1mv12mTXdc93IP8TwkVscR/IrGZl+Z56Xy6vHw/JZdV
9VnRMflZ2PTZV+184fNYPkd93dH02WF/9nV/jPrMbKPen6tiNSdyOp36vj/v
MJF+BHi4h+YDaonVKp7xvDTPa9Km3bCfksuq+qzoWPNZGPfZRe1cg8/j+Bz1
dUfTZ4f92cX9se4zs416fx6Kdff9282JXH6Rvlgspn7Te0usVvGM56V5XvKm
nZQbkrxhP9eY8FnRseazMO6zi9q5gM+j+Rz1dUfTZ4f92cX9se4zs416fx66
5nK5vH17tvAnrP1+n/+s5TXCn3rqYsl+mjObl+Z5CZt2CpeUGxK4YT/XmPBZ
0THhb13M+uyids7g85g+R33d0fTZYX92cX+s+8xso96fM9w+EzvtrWpJoqd7
XrVEsd42VctLXprnlfpM1fqb/+9TP4D9bghVnxUdE55FXV6adeqndvB5TJ+j
vu5o+uywPzu6P3WxgtYp/RkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALpxOp/V6
3XXdszcCc+HsWxJviovjMyiDzxAJfIZITOrzUMTj8Xj79e33TdWS7GHzsq1a
oljb16oliaV6DzXzettUrdsrJOWSeJI9DDE3n+VnURErqM/yWLF91nRMtXbw
GZ+n9lnz3KkddZ/vslqt7n493YfDj75wyYeQfncoXPKhuj/sC5d8qNa7h5p5
vW0OP/vCNdSUhsQTMjefRzmL0lhBfR4lVmCfNR1TrR18xuepfdY8d2pH3eeq
WFGHEIZqhupIPjNUM4SEGkIYDPA5ks8M1TZqh6Gaodp0XgzVWRiqfflsuWlb
8JmhGp/HYnY+M1TbqB2GaoZq03kxVGdhqPbls+WmbcFnhmp8HovZ+cxQbaN2
GKoZqk3nxVCdhaHal8+Wm7YFnxmq8XksZuczQ7WN2tEZqo/HY9d1dz+K+xV3
CGGoNjJU5/VrYJ4+M1QbGUIC+8xQjc9yZuozQ7WN2hnd57vsdrsU5fPz8+6/
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
AAAAAAAAAA2cTqf1et113bM3AnPh7FsSb4qL4zMog88QCXyGSEzq81DE4/F4
+/Xt903VkuxBM9Zm+1q1RHm9baqWKK+XbdUSxRLfw6RcEk+yhyHwOYjPinnJ
awefR4tFz5T77LE/c+7y/hy0J1j2+S6r1eru19N9OPzoC5f8gNRipXveH/aF
Sz6EHH72hUveKPrdoXDJG4X8Hg6JJwSfg/ismNcotYPP48SiZ8p99tifOXd5
fw7aEyz7XBWLA3I2hHhrFAwh+GwkL4bqPAzVRnqmZiyGanfnHrUnWPa5KhYH
5GwI8dYoGELw2UheDNV5GKqN9EzNWAzV7s49ak+w7HNVLA7I2RDirVEwhOCz
kbwYqvMwVBvpmZqxGKrdnXvUnmDZ56pYHJCzIcRbo2AIwWcjeTFU52GoNtIz
NWMxVLs796g9wbLPf8PxeOy67u5Hcb84IHdDiLdGkdevAXwO5bO3oRqfGapz
sbwN1do+c+4M1QPY9Pkuu90uRfn8/Lz7rxyQsyHEW6NI4iX9koSSnVyDz6F8
9jZU4zNDdS6Wt6Fa22fOnaF6AJs+D5ECDT2+T37T3t/fC1PQjCU/oIq8xI2i
Ii9xo9C8h1+/Hlg61GBr93MBn+P4rJjXKC+y+DxOLHqm3GeP/Zlzl/fnoD3B
rM9DTPSevbTDb7/o+/7hHjRjCQ+oLi9Zo6jLS9YoNO/hmfx7nKr2U3JZfHbm
s2JeCu+pxmeLjvnpmfH7M+cu789Be4Jln6tiCW/ax8fHeZMl7w/XjCU8oLq8
ZI2iLi9Zo9C8h2fygar2U3JZfHbms2JeCkM1Plt0zE/PjN+fOXd5fw7aEyz7
XBVL/uv99XqdNtl13cM9aMaSH1BFXuI/aVXkJR4MNO/hV8Gnccv3U3JZfHbm
s2JeOk//wGdzjrnqmcH7M+cu789Be4Jln6tiNd+00+nU9/15h4n0I8DDPWjG
aj6glrxaG0VLXq2NQvMeXjMkXsN+Si6Lz858Vsxr0qEan+065qFnzqU/c+7y
/hy0J1j2eSjW3fdvN9+0yy/SF4vF1G96b4jVfEAtebU2ipa8WhuF5j28kJQb
krxhP9fgcxCfFfOSD9X4PFoseqbcZ4/9mXOX9+egPcGyz0PXXC6Xt2/PFv4k
st/v85+1fFYs4U+OdXnJfvquy0v207fOPTyTwiXlhgRu2M81+BzEZ8W8hEM1
Po8Zi54p99ljf+bc5f05aE+w7HOG22dip/tQtSTRNWOle161RHm9baqWKK+X
bdUSxZLdw6kfwH43BD4781kxL2Ht4POYseiZcp899mfOXd6fg/YE+z4DAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAzJzT6bRer7uue/ZGYC6cfUviTXFxfAZl8Bki
gc8QiRKfx3U+Xe14PN5+ffu2qVqSPWy/b6qWJNbmZVu13OS1fa1az42VlEvi
SfYwxOx81jx3agefzZ+F0bwUawef8+Czr7zktVPi84jOr1aru19P3h5+9oVL
LvnhR1+45M2t3x0Kl3ww0Mtr+9of9oVLPlTLYw2JJ2R2PmueO7WDzx7OwmJe
irWDz3nw2Vdeo9ROic9jOT87yRkMGKoj+eytuRXi7h7is52zsJgXQ3X2svjs
zGdvrzsM1TGaW1jJadpZwp47tYPPHs7CYl4M1dnL4rMzn7297jBUx2huYSWn
aWcJe+7UDj57OAuLeTFUZy+Lz8589va6w1Ado7mFlZymnSXsuVM7+OzhLCzm
xVCdvSw+O/PZ2+uOzlB9PB67rrv7UdyvwJIzGNgYqvP6NTBTn701t0Lc3UN8
tnMWFvPyNlTjMz4byWuU2inxWe78brdLV/j8/Lz7r2ElZzCwMVQn8ZJ+SULJ
Tq6Zqc/emlsh7u4hPts5C4t5eRuq8RmfjeQ1Su2U+DyK8+kiQ4/mk0v+/v5e
uD25DOWx5AdkNC+x5Jqxvn49sHSowdbu58IcfdY8d2oHn82fhdG8FGsHn/Pg
s6+8RhmqH/pc+D0lTPQep3THvv2i7/uHexDKUBVLeEB285JJrhnrTP79S1X7
KblsWJ81z53awWfbZ2E3L8Xawec8+OwrL0fvqc5fRyj5x8fH+aaV7FMoQ1Us
4QHZzUsmuWasM/lAVfspuWxYnzXPndrBZ9tnYTcvxdrB5zz47CsvhuoL6/U6
3bSu6x7uQf5ni/JY8gMympe4kWrG+ioQuHw/JZcN67PmuVM7+Gz+LIzmpVg7
+JwHn33lxVB9Op36vj/fsUT6keThHpplaIjVfEDW82qVXDPWNUPiNeyn5LJh
fdY8d2oHn62ehfW8FGsHn/Pgs6+8PA7Vd9+b3Sz55Rf7i8Vi6jfYN8RqPiDr
ebVKrhnrQlJuSOCG/VwzO581z53awWerZ2E9L8Xawec8+OwrL/lQnfG56nsK
STkul8vbt4sLf3Lc7/fln6MU/oRVFUv4GwO7ecl+ctSJdSaFS8oNFVTDfq6Z
nc+a507t4LPVs7Cel2Lt4HMefPaVl3Cozvtc/j213D7vOnlbtSTR0/lWLUms
dM+rlpu8tq9V64mxRvwPCgwxI581z53awWfbZ2E3L8Xawec8+OwrL2HtlPis
4DwAAAAAAAAAAAAAQBv/A+WWEIE=
    "], {{0, 138.}, {580.1999999999999, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{580.1999999999999, 138.},
  PlotRange->{{0, 580.1999999999999}, {0, 138.}}]], "Output",
 CellChangeTimes->{3.8998031160462976`*^9},
 CellLabel->"Out[1527]=",
 CellID->949633236,ExpressionUUID->"03419548-580b-4f43-af3a-9b3873e464a4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The length:", "MathCaption",
 CellChangeTimes->{{3.8998029574085217`*^9, 3.899802959485757*^9}},
 CellID->26153898,ExpressionUUID->"b0d59f53-da6c-4f94-a7b9-052913501059"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"MultisetPartialDerangements", "[", "subsetRandomMultiset", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8998029339630547`*^9, 3.8998029352465873`*^9}},
 CellLabel->"In[1529]:=",
 CellID->167639408,ExpressionUUID->"2da36c32-091a-4b0d-a5a5-59996abcf186"],

Cell[BoxData["29"], "Output",
 CellChangeTimes->{3.89980293565034*^9, 3.8998031624510965`*^9},
 CellLabel->"Out[1529]=",
 CellID->357676866,ExpressionUUID->"b99d2df1-4daa-4af6-a817-44cda6c0b777"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here is the count.", "MathCaption",
 CellChangeTimes->{{3.8997497625129347`*^9, 3.8997497653791437`*^9}},
 CellID->288178981,ExpressionUUID->"228f7900-92d4-4303-8e29-7fc5e6d5f3ca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EnumerateMultisetPartialDerangements", "[", "subsetRandomMultiset", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8997497550334845`*^9, 3.8997497595874767`*^9}, {
  3.8997983032323427`*^9, 3.899798307194933*^9}, {3.899802920697234*^9, 
  3.8998029265435996`*^9}},
 CellLabel->"In[1530]:=",
 CellID->82120594,ExpressionUUID->"c95be784-0e12-4246-831c-32bcf35bd2ec"],

Cell[BoxData["29"], "Output",
 CellChangeTimes->{3.8998029271403275`*^9, 3.8998031663355126`*^9},
 CellLabel->"Out[1530]=",
 CellID->63825070,ExpressionUUID->"c8f100ea-8e92-416d-be5d-7deeca540871"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Count the derangements of the whole set.", "MathCaption",
 CellChangeTimes->{{3.8997492487266345`*^9, 3.899749251993189*^9}, {
  3.899802963529273*^9, 3.899802966154338*^9}},
 CellID->194380331,ExpressionUUID->"ce9bdeae-7144-4ac6-a716-5780d256be51"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EnumerateMultisetPartialDerangements", "[", "randomMultiset", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8997492528242707`*^9, 3.8997492577693224`*^9}},
 CellLabel->"In[1531]:=",
 CellID->653333490,ExpressionUUID->"70bbcf11-5ce4-4700-a7a4-8a2203ac88cf"],

Cell[BoxData["52872822960"], "Output",
 CellChangeTimes->{3.89974925874524*^9, 3.899798282845435*^9, 
  3.8998031699571266`*^9},
 CellLabel->"Out[1531]=",
 CellID->221162590,ExpressionUUID->"765ad395-184a-40a7-b3d1-8853dd7fddea"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["This is the same as having 0 fixed points.", "MathCaption",
 CellChangeTimes->{{3.899749286926594*^9, 3.899749296237387*^9}},
 CellID->158717184,ExpressionUUID->"666ab59d-67bf-4418-b36d-5ccfa4ffde01"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EnumerateMultisetPartialDerangements", "[", 
  RowBox[{"randomMultiset", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997492528242707`*^9, 3.8997492577693224`*^9}, {
  3.899749298277933*^9, 3.899749299605976*^9}},
 CellLabel->"In[1532]:=",
 CellID->414886273,ExpressionUUID->"d0ddbee2-1cf2-49a2-9d95-0dd7a15cc24b"],

Cell[BoxData["52872822960"], "Output",
 CellChangeTimes->{3.899749300486975*^9, 3.899798284831006*^9, 
  3.8998031737164493`*^9},
 CellLabel->"Out[1532]=",
 CellID->227415575,ExpressionUUID->"26463a7f-2099-494c-b5e7-6c43008d9b53"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Partial Derangements", "Subsubsection",
 CellChangeTimes->{{3.8998029806740513`*^9, 3.8998029833731856`*^9}},
 CellID->79335839,ExpressionUUID->"d2d60db9-617e-490b-b40c-906ab076b36a"],

Cell[CellGroupData[{

Cell["\<\
List all the partial derangements with 3 fixed points one by one.\
\>", "MathCaption",
 CellChangeTimes->{{3.8998029978004694`*^9, 3.899803007791465*^9}, {
  3.899803238535081*^9, 3.8998032396559877`*^9}},
 CellID->68146688,ExpressionUUID->"3dbd323c-2f91-4dff-abf1-43f749acaea1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"MultisetPartialDerangements", "[", 
   RowBox[{"subsetRandomMultiset", ",", "3"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.89980301009712*^9, 3.8998030102240076`*^9}, {
   3.8998030548129854`*^9, 3.8998030652202015`*^9}, 3.899803095985654*^9, 
   3.8998031291922183`*^9, 3.8998032334188185`*^9},
 CellLabel->"In[1537]:=",
 CellID->848151591,ExpressionUUID->"e0e90ea5-207d-48c3-b65a-d5b28dd00d3d"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnTGOK0lyQD8kR6b6CLpDG3JlNeSuINCg83eh0aKcaWBWgNAHaALlfbNv
QGddnqCND3q8AG/Qd6BSXQCHmGYlMzMygxlR76F2Mdu/pyKz4kVUsH917b/8
5flP//0P3759+9s/hf/605//999+++3PL//xz+F//Oevfxv++usv//Xvv/7P
L3/95bd//cs/hi/+PfznZ/iH///nEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAHTD8XhcrVbDMAi/B6AWk2zBuhYnR2ZQBp/BE/gMnqjuczjh
4XAo+J718ybrkCxyvXnJOiSxNt/XWYco1us667CyL3m+gm/BOska5pgTHp8r
+GzKsYx9iesUn2vlwlbeM2KZqlN8xrE4tu5xdX1+enoq+57g7bjdJx5yycf9
LvGQJ2j/Y0w85EP1/ueYeMgLSm1fVfKVYmYBc6fF5wo+W3MsdV816hSfq+TC
XN5TY1mrU3zGsQjm7nEVfWao/gMM1Z0UFE3bns/WHEvdF0N1FIZqW/25tyEk
5bReffbqmLl7HEN15wlKjUVBMVR78tmaY6n7YqiOwlBtqz/3NoSknNarz14d
M3ePY6juPEGpsSgohmpPPltzLHVfDNVRGKpt9efehpCU03r12atj5u5xDNWd
Jyg1FgXFUO3JZ2uOpe6LoToKQ7Wt/tzbEJJyWq8+e3XM3D2uis+Hw2EYhvir
PyLf41Zyhuo+CirFzyziJ8TnTm7WiZi78eEzQ3UslrU6xWcci2DuHlfF5+12
G07y8fFR9j1uJWeo7qOggnXBvWCgZCWXxIXH505u1omYu/HhM0N1LJa1OsVn
HItg7h5Xy+dwnptv55v7Hrnkb29viVuQJyg9ljxBGbHEBdXnvqoUVLAu/okv
fT1nIsLjcwWfTTmmWacnfK6UC1t577N2qgwh+IxjEWzd405Vfb7XM9Vhhd8+
Gcfx5gKECcqKJUxQXixZQXW7L4VnqrPWk3JafK7gsx3HNOt0Ap+r5MJQ3rut
HYVnUPF54Y4ZusdNVPT5XkP1+/v7tMiUBQgTlBVLmKC8WLKC6nZfCkN11npS
TovPFXy245hmnU7gc5VcGMp7t7WjMITg88IdM3SPm6jo8x3f/rFarcIih2G4
uQD5kJYeS56gjFjim3Wf+9J5+0f6elJOi88VfDblmGadnvC5Ui5s5b3P2tF5
WwI+L9kxW/e4U1Wf9Yfq4/E4juO0wkD4CHBzAcUJKohVnKCSWKUF1fm+mg7V
BetJOS0+V/DZgmOadXoJPlfJhYm8d147TYcQfMYx7WvYmc/hVPHHs+e+p1jy
8w/SHx4eWj/0XhCrOEElsUoLqvN9yYfq4Nuc5AXruWROeHyu4LMFxzTr9Aw+
18qFibx3XjvyIQSfcayja9iZz+FfeXx8jD99ffV7hJ8cd7vdzWH+91iyTz1Z
sYSf5vJiyT6ldrsv4VAdwgXf5gQuWM8lc8LjcwWfLTimWacT+FwxFyby3nnt
CIcQfMaxm5i4x0008jnlldd/+B63743kPdX3fkdlxf9DgTm+hsDnCj7bcSxv
X7I6xeeKuTCU97xYduoUn3HsJobucQo+JxK8zTpEsTYvWYckVrjmWYco1us6
67CyL8181QKfK/js1DHNOq2FV5+95t1rndbCq89eHfN6jwMAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAACAZXI8Hler1TAM914ILIXJtyBei5PjMyiDz+AJfAZPNPV5LuLhcPj6
9fXzJuuQrGHzfZ11iGK9rrMOSaz15iXrsBJLnq+gXBBPsoY5FuezYiy3Pot7
gnOf6Zkd9EzNWPhcy2ev/dnWvtr5fJWnp6erXw/ejtt94iEfQvY/xsRDPlTv
f46Jh/wGMe53iYf8BqEWq0q+5sQTsjifFWO59blGT/DsMz2zj56pGQufq/js
tT+b21cjn7NiuR1CuEH0UVCem7a1G2gibn1mqI5Cz+ykZ2rGwmeGak/7Yqhm
qO45Fk07jrkbaCJufWaojkLP7KRnasbCZ4ZqT/tiqGao7jkWTTuOuRtoIm59
ZqiOQs/spGdqxsJnhmpP+2KoZqjuORZNO465G2gibn1mqI5Cz+ykZ2rGwmeG
ak/70hmqD4fDMAxXfxX35HgI4QbRR0HF9StgoT5ba24dxqrSEzz7TM/so2dq
xsJnhmpP+6ru81W2222I8vHxcfVP3Q4h3CD6KKggXtAvSChZySUL9dlac+sw
VpWe4NlnemYfPVMzFj4zVHvaV3Wf5wiB5l7fJ5f87e0tcQvyBGXEEhdUeiy5
DH3GqlJQQby5Bpu7njNL9Fkxllufa9xkPftMz+ygZ9KfLfrstT/b2tepjc9z
NHrGKazw2yfjON5cgzBBebFkBZUVSyhDt7EUntnLWk/Kad36rBjLrc/tn6m2
7TM98949k/5s1Gev/dnQviYa+ZwVSyj5+/v7tMiU58OFCcqLJSuorFhCGbqN
pdC0s9aTclq3PivGcutz+6Hats/0zHv3TPqzUZ+99mdD+5po5HNWLPlfx6xW
q7DIYRhurkHeBDJiiW+g6bHkMvQZS+e3y9PXk3Jatz4rxnLrs8rbPwz7TM/s
oGfSny367LU/29rXqZnPWbGKJT8ej+M4TisMhI8AN9dQnKCSWKUFVRCrWIbO
YzVt2gXrSTmtW58VY7n1ueVQ7cFneub9eib92bTPXvuziX1d0sjnuVhXn98u
lvz8g/SHh4fWD72XxCotqIJYxTJ0HkvetINyc5IXrOeSxfmsGMutz+Kh2rnP
9Mz79Uz6s2mfvfZnE/s6087nuXM+Pj5+fTxb+Mlxt9vFf9fyEuGnnrxYsk+p
WbGEnxy7jSVs2iFcUG5O4IL1XLI4nxVjufVZNlT795meeb+eSX827bPX/mxi
XxNNfY7w9Z3Ybt/ryztX7/2OytYvYL8awq3P1t4X2mEsYU/w7zM98949UzMW
Plf02Wt/NrQvBZ8TCd5mHZJY4ZpnHaJYr+usQxIr5DfrsBJLM1+1cOuzYiy3
Piv2hFqo+kzPNNUz6c9xNH322p+97gsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlsnxeFyt
VsMw3HshsBQm34J4LU6Oz6AMPoMn8Bk80dTnuYiHw+Hr19ebl6xDsobN93XW
IYm1ft5kHaJYmtfwdZ11iGKJ8xWUC+JJ1jDH0nxWrR2nPst7gm+fVWMp9mfV
OqU/f7I0n706ZqtO2/l8laenp6tfDy6N+13iIRdv/2NMPORD9bjdJx7yoVrv
Gr6u9z/HxEPetOX5mhNPyNJ8Vq0dpz5X6QmOfVaNpdifVeuU/hw9rVefvTpm
rk4b+ZwVy6t4DNU0bU8+M1R3coNw7DNDta2Bh/4cx+29wFrPTN1Xxz5nxfIq
HkM1TduTzwzVndwgHPvMUG1r4KE/x3F7L7DWM1P31bHPWbG8isdQTdP25DND
dSc3CMc+M1TbGnjoz3Hc3gus9czUfXXsc1Ysr+IxVNO0PfnMUN3JDcKxzwzV
tgYe+nMct/cCaz0zdV8d+/wHDofDMAxXfxX35Fc8hupOmnZcvwKW6TNDdSc3
CMc+M1TbGnjoz3Hc3gus9czUfXXp81W2222I8vHxcfVPvYrHUN1J0w7iBf2C
hJKVXLJMnxmqO7lBOPaZodrWwEN/juP2XmCtZ6buq0uf5wiB5l7fJxfv7e0t
cQvyi5YeSy5DRizNayguKM18nT5fWDrXYHPXc2aBPqvWjlOfq9wgHPusGkux
P6vWKf15kT57dcxWnZ7a+DxHo2ecwgq/fTKO4801CC9aViyhDHmxNK+hrKA0
8zURf8Ypaz0pp/Xqs2rtOPVZ4Zlq0z6rxlLsz6p1Sn+Ontarz14dM1SnE418
zoolFO/9/X1aZMrz4cKLlhVLKENeLM1rKCsozXxNxANlrSfltF59Vq0dpz4r
DNWmfVaNpdifVeuU/hw9rVefvTpmqE4nGvmcFUv+VySr1SoschiGm2uQX7T0
WPIbaEYszWso/qsfzXydEn4bN309Kaf16rNq7Tj1WeftH3Z9Vo2l2J9V65T+
HD2tV5+9OmarTk/NfM6KVSze8Xgcx3FaYSB8BLi5huKLVhCrWIaSWJrXsLSg
NPN1yZx4BetJOa1Xn1Vrx6nPTYdqBz6rxlLsz6p1Sn+Ontarz14dM1GnlzTy
eS7W1ee3i8U7/yD94eGh9YPoBbGKZSiJpXkNSwtKM19ngnJzkhes55Kl+axa
O059lg/Vvn1WjaXYn1XrlP78ydJ89uqYiTo9087nuXM+Pj5+fTxb+Glut9vF
f9fyEuGnuaxYwk9YebE0r6HsU6pOviZCuKDcnMAF67lkaT6r1o5Tn4VDtXuf
VWMp9mfVOqU/f7I0n706ZqJOJ5r6HOHrO7G9vsuR91Tv7/0e1NYvYL8awqvP
vKda7rOwJ7j3mfdUV6hT+nM0hFefvTpmqE4VfE4kuJR1SGKF65B1iPb1vMk6
RLE0r+HrOusQxVLMVy28+qxaO0591uwJtdDMhWosxVyo1in9OYpXn7065rVO
AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAKCA4/G4Wq2GYbj3QmApTL4F8VqcHJ9B
GXwGT+AzeKKpz3MRD4fD16+vNy9Zh2QNmrE239dZh5lYr+usQxJr/bzJOr6e
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
    "], {{0, 103.2}, {580.1999999999999, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{580.1999999999999, 103.2},
  PlotRange->{{0, 580.1999999999999}, {0, 103.2}}]], "Output",
 CellChangeTimes->{3.8998031303641124`*^9, 3.8998031903917055`*^9, 
  3.8998032344710045`*^9},
 CellLabel->"Out[1537]=",
 CellID->231675266,ExpressionUUID->"4e329417-2b70-400e-a2d9-46073930d97d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The length:", "MathCaption",
 CellChangeTimes->{{3.8998030292272663`*^9, 3.8998030307080784`*^9}},
 CellID->36066100,ExpressionUUID->"1369ae87-fc46-4ca7-a932-c40819915d56"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"MultisetPartialDerangements", "[", 
   RowBox[{"subsetRandomMultiset", ",", "3"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8998030313679805`*^9, 3.899803039645729*^9}, {
  3.899803203316818*^9, 3.899803204671597*^9}},
 CellLabel->"In[1535]:=",
 CellID->361232442,ExpressionUUID->"158d7060-d640-45c2-9ec2-b5051682c40f"],

Cell[BoxData["24"], "Output",
 CellChangeTimes->{
  3.8998030401964607`*^9, {3.899803186215306*^9, 3.8998032051388364`*^9}},
 CellLabel->"Out[1535]=",
 CellID->38610816,ExpressionUUID->"d9e4e9d8-dfb5-4b4a-8b2b-86eb75299583"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The computed length:", "MathCaption",
 CellChangeTimes->{{3.8998030458292327`*^9, 3.8998030482811704`*^9}},
 CellID->49896177,ExpressionUUID->"b2be7646-8ac5-4d6d-a3ac-e2b82a66a0a2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EnumerateMultisetPartialDerangements", "[", 
  RowBox[{"subsetRandomMultiset", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8998030313679805`*^9, 3.8998030502504663`*^9}, {
  3.89980321059087*^9, 3.899803217702418*^9}},
 CellLabel->"In[1536]:=",
 CellID->511712627,ExpressionUUID->"9640d49f-7348-4f94-aa19-6c3525bbbeed"],

Cell[BoxData["24"], "Output",
 CellChangeTimes->{3.899803218483949*^9},
 CellLabel->"Out[1536]=",
 CellID->224550050,ExpressionUUID->"87ba33de-51d6-4068-9463-1e0ec6b4b4f4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Count partial derangements of the whole set with 3 fixed points.\
\>", "MathCaption",
 CellChangeTimes->{{3.8997492626369176`*^9, 3.8997493081744137`*^9}, {
  3.8998032481544657`*^9, 3.899803250326497*^9}},
 CellID->402703826,ExpressionUUID->"c2177158-72e1-41bf-a8dd-d9645f470d79"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EnumerateMultisetPartialDerangements", "[", 
  RowBox[{"randomMultiset", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997492528242707`*^9, 3.8997493033590193`*^9}},
 CellLabel->"In[1538]:=",
 CellID->1592074,ExpressionUUID->"f0bb993c-b961-429a-81e6-5837a170bcda"],

Cell[BoxData["1046223284640"], "Output",
 CellChangeTimes->{{3.8997492970384502`*^9, 3.8997493128744383`*^9}, 
   3.8997982951244907`*^9, 3.8998032539275007`*^9},
 CellLabel->"Out[1538]=",
 CellID->108392481,ExpressionUUID->"b432ec56-82fe-4738-9c74-531133f42699"]
}, Open  ]]
}, Open  ]],

Cell["\<\
If we compute partials derangements with 3 fixed points, we will get 24 \
elements.\
\>", "MathCaption",
 CellChangeTimes->{{3.899749767505232*^9, 3.899749797173949*^9}, {
  3.8998032678002496`*^9, 3.8998032681391563`*^9}},
 CellID->211204775,ExpressionUUID->"920b6ca0-1edd-4e50-b065-34d8f26c0552"],

Cell[CellGroupData[{

Cell["I will limit the output to 20 this time.", "MathCaption",
 CellChangeTimes->{{3.899749811680395*^9, 3.8997498170165954`*^9}},
 CellID->103140816,ExpressionUUID->"6f2de5fc-8881-4375-bd20-50b5aabca4e7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"MultisetPartialDerangements", "[", 
   RowBox[{"subsetRandomMultiset", ",", "3", ",", "20"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.899798424284652*^9, 3.8997984572720375`*^9}},
 CellLabel->"In[1539]:=",
 CellID->631127211,ExpressionUUID->"ff583f61-fbbf-4764-a591-a033b1fef0b1"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnTGOK8cRQBd24tB7BN9hA6eOFk5lGAyYfAmWhUm0gGTA+AdYAhPph3sD
noAnYPDBjBfgDXgHur0D08RfTrO7q6fYVfMe2oK8Wk11T72uLu6fHf3ph5fv
/vm7h4eHX/8Q/vLd9//+yy+/fP/5b38M/+fvP//a/fTzj//468//+vGnH3/5
8w+/D1/8Lfzva/ib//79CQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAJrhcDgsFouu64TfA1CLQbZg3RQXR2ZQBp/BE/gMnqjuc7jgfr8v+J7l
yyprSCa5XH3OGpJYq0/LrCGK9brMGlbWJc9X8C1YJ5nDGGPC43MFn005lrEu
8T7F51q5sJX3jFim9ik+41gcW2dcXZ+fn5/Lvid42693iUMueb/bJA55gnZf
+sQhb6p3X/vEId9Qauuqkq8UMwsYuyw+V/DZmmOp66qxT/G5Si7M5T01lrV9
is84FsHcGVfRZ5rqb6CpbmRDUbTt+WzNsdR10VRHoam2VZ9ba0JSLuvVZ6+O
mTvjaKobT1BqLDYUTbUnn605lroumuooNNW26nNrTUjKZb367NUxc2ccTXXj
CUqNxYaiqfbkszXHUtdFUx2FptpWfW6tCUm5rFefvTpm7oyjqW48Qamx2FA0
1Z58tuZY6rpoqqPQVNuqz601ISmX9eqzV8fMnXFVfN7v913XxV/9Efket5LT
VLexoVL8zCJ+QXxu5LBOxNzBh8801bFY1vYpPuNYBHNnXBWf1+t1uMjxeCz7
HreS01S3saGCdcG9YKBkJpfEhcfnRg7rRMwdfPhMUx2LZW2f4jOORTB3xtXy
OVzn5tv5xr5HLvnb21viEuQJSo8lT1BGLPGGanNdVTZUsC7+iS99PmciwuNz
BZ9NOaa5T0/4XCkXtvLe5t6p0oTgM45FsHXGnar6fK9nqsMMH97p+/7mBIQJ
yoolTFBeLNmGanZdCs9UZ80n5bL4XMFnO45p7tMBfK6SC0N5b3bvKDyDis8z
d8zQGTdQ0ed7NdXb7XaYZMoEhAnKiiVMUF4s2YZqdl0KTXXWfFIui88VfLbj
mOY+HcDnKrkwlPdm945CE4LPM3fM0Bk3UNHnO779Y7FYhEl2XXdzAvImLT2W
PEEZscSHdZvr0nn7R/p8Ui6LzxV8NuWY5j494XOlXNjKe5t7R+dtCfg8Z8ds
nXGnqj7rN9WHw6Hv+2GGgfAR4OYEihNUEKs4QSWxSjdU4+uatKkumE/KZfG5
gs8WHNPcp5fgc5VcmMh743tn0iYEn3FM+x425nO4VPzx7LHvKZb8/IP0x8fH
qR96L4hVnKCSWKUbqvF1yZvq4NuY5AXzuWRMeHyu4LMFxzT36Rl8rpULE3lv
fO/ImxB8xrGG7mFjPod/5enpKf709dXvEX5y3Gw2N5v5/8eSferJiiX8NJcX
S/Yptdl1CZvqEC74NiZwwXwuGRMenyv4bMExzX06gM8Vc2Ei743vHWETgs84
dhMTZ9zARD6nvPL6m+9x+95I3lN973dUVvwPCozxMQQ+V/DZjmN565LtU3yu
mAtDec+LZWef4jOO3cTQGafgcyLB26whirX6nDUkscI9zxqiWK/LrGFlXZr5
qgU+V/DZqWOa+7QWXn32mnev+7QWXn326pjXMw4AAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
5snhcFgsFl3X3XsiMBcG34J4U1wcn0EZfAZP4DN4YlKfxyLu9/uPX1++rLKG
ZA6rT8usIYr1uswakljL1eesYSWWPF9BuSCeZA5jzM5nxVhufRbXBOc+UzMb
qJmasfC5ls9e67OtdU3n81Wen5+vfj142693iUPehOy+9IlD3lTvvvaJQ35A
9LtN4pAfEGqxquRrTDwhs/NZMZZbn2vUBM8+UzPbqJmasfC5is9e67O5dU3k
c1Yst00IB0QbG8pz0bZ2gCbi1mea6ijUzEZqpmYsfKap9rQummqa6pZjUbTj
mDtAE3HrM011FGpmIzVTMxY+01R7WhdNNU11y7Eo2nHMHaCJuPWZpjoKNbOR
mqkZC59pqj2ti6aaprrlWBTtOOYO0ETc+kxTHYWa2UjN1IyFzzTVntal01Tv
9/uu667+Ku7JcRPCAdHGhorrV8BMfbZW3BqMVaUmePaZmtlGzdSMhc801Z7W
Vd3nq6zX6xDleDxe/adumxAOiDY2VBAv6BcklMzkkpn6bK24NRirSk3w7DM1
s42aqRkLn2mqPa2rus9jhEBjr++TS/729pa4BHmCMmKJN1R6LLkMbcaqsqGC
eGMFNnc+Z+bos2Istz7XOGQ9+0zNbKBmUp8t+uy1Ptta12kan8eY6BmnMMOH
d/q+vzkHYYLyYsk2VFYsoQzNxlJ4Zi9rPimXdeuzYiy3Pk//TLVtn6mZ966Z
1GejPnutz4bWNTCRz1mxhJJvt9thkinPhwsTlBdLtqGyYgllaDaWQtHOmk/K
Zd36rBjLrc/TN9W2faZm3rtmUp+N+uy1Phta18BEPmfFkv9xzGKxCJPsuu7m
HORFICOW+ABNjyWXoc1YOr9dnj6flMu69VkxllufVd7+YdhnamYDNZP6bNFn
r/XZ1rpOk/mcFatY8sPh0Pf9MMNA+Ahwcw7FCSqJVbqhCmIVy9B4rEmLdsF8
Ui7r1mfFWG59nrKp9uAzNfN+NZP6bNpnr/XZxLoumcjnsVhXn98ulvz8g/TH
x8epH3oviVW6oQpiFcvQeCx50Q7KjUleMJ9LZuezYiy3Poubauc+UzPvVzOp
z6Z99lqfTazrzHQ+j13z6enp4+PZwk+Om80m/ruWlwg/9eTFkn1KzYol/OTY
bCxh0Q7hgnJjAhfM55LZ+awYy63Psqbav8/UzPvVTOqzaZ+91mcT6xqY1OcI
H9+J7fa9vrxz9d7vqJz6BexXQ7j12dr7QhuMJawJ/n2mZt67ZmrGwueKPnut
z4bWpeBzIsHbrCGJFe551hDFel1mDUmskN+sYSWWZr5q4dZnxVhufVasCbVQ
9ZmaaapmUp/jaPrstT57XRcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzJPD4bBYLLquu/dE
YC4MvgXxprg4PoMy+AyewGfwxKQ+j0Xc7/cfv75cfc4akjmsPi2zhiTW8mWV
NUSxNO/h6zJriGKJ8xWUC+JJ5jDG3HxW3TtOfZbXBN8+q8ZSrM+q+5T6/M7c
fPbqmK19Op3PV3l+fr769eBSv9skDrl4uy994pA31f16lzjkTbXePXxd7r72
iUNetOX5GhNPyNx8Vt07Tn2uUhMc+6waS7E+q+5T6nP0sl599uqYuX06kc9Z
sbyKR1NN0fbkM011IweEY59pqm01PNTnOG7PAms1M3VdDfucFcureDTVFG1P
PtNUN3JAOPaZptpWw0N9juP2LLBWM1PX1bDPWbG8ikdTTdH25DNNdSMHhGOf
aaptNTzU5zhuzwJrNTN1XQ37nBXLq3g01RRtTz7TVDdyQDj2mabaVsNDfY7j
9iywVjNT19Wwz9+w3++7rrv6q7gnv+LRVDdStOP6FTBPn2mqGzkgHPtMU22r
4aE+x3F7FlirmanratLnq6zX6xDleDxe/adexaOpbqRoB/GCfkFCyUwumafP
NNWNHBCOfaapttXwUJ/juD0LrNXM1HU16fMYIdDY6/vk4r29vSUuQX7T0mPJ
ZciIpXkPxRtKM1+n9xeWjhXY3PmcmaHPqnvHqc9VDgjHPqvGUqzPqvuU+jxL
n706ZmufnqbxeYyJnnEKM3x4p+/7m3MQ3rSsWEIZ8mJp3kPZhtLM10D8Gaes
+aRc1qvPqnvHqc8Kz1Sb9lk1lmJ9Vt2n1OfoZb367NUxQ/t0YCKfs2IJxdtu
t8MkU54PF960rFhCGfJiad5D2YbSzNdAPFDWfFIu69Vn1b3j1GeFptq0z6qx
FOuz6j6lPkcv69Vnr44Z2qcDE/mcFUv+RySLxSJMsuu6m3OQ37T0WPIDNCOW
5j0U/9GPZr5OCb+Nmz6flMt69Vl17zj1WeftH3Z9Vo2lWJ9V9yn1OXpZrz57
dczWPj1N5nNWrGLxDodD3/fDDAPhI8DNORTftIJYxTKUxNK8h6UbSjNfl4yJ
VzCflMt69Vl17zj1edKm2oHPqrEU67PqPqU+Ry/r1WevjpnYp5dM5PNYrKvP
bxeLd/5B+uPj49QPohfEKpahJJbmPSzdUJr5OhOUG5O8YD6XzM1n1b3j1Gd5
U+3bZ9VYivVZdZ9Sn9+Zm89eHTOxT89M5/PYNZ+enj4+ni38NLfZbOK/a3mJ
8NNcVizhJ6y8WJr3UPYpVSdfAyFcUG5M4IL5XDI3n1X3jlOfhU21e59VYynW
Z9V9Sn1+Z24+e3XMxD4dmNTnCB/fie31XY68p3p37/egTv0C9qshvPrMe6rl
PgtrgnufeU91hX1KfY6G8OqzV8cM7VMFnxMJLmUNSaxwH7KGaF0vq6whiqV5
D1+XWUMUSzFftfDqs+receqzZk2ohWYuVGMp5kJ1n1Kfo3j12atjXvcpAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAABRwOBwWi0XXdfeeCMyFwbcg3hQXx2dQBp/B
E/gMnpjU57GI+/3+49eXq89ZQzIHzVirT8usYSbW6zJrSGItX1ZZ4+MVgnJB
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
AAAAAAAAAAAAoDX+A7fgdi8=
    "], {{0, 85.8}, {580.1999999999999, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{580.1999999999999, 85.8},
  PlotRange->{{0, 580.1999999999999}, {0, 85.8}}]], "Output",
 CellChangeTimes->{{3.899798432169262*^9, 3.899798458032202*^9}, 
   3.899803276151166*^9},
 CellLabel->"Out[1539]=",
 CellID->80019259,ExpressionUUID->"24c4948f-fd4b-49f2-a089-e7cba01cb51b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Multichoose and orderless combinations", "Section",
 CellChangeTimes->{{3.8998027914686265`*^9, 3.8998027929335566`*^9}, {
  3.899803441199932*^9, 3.8998034480971594`*^9}},
 CellID->59969200,ExpressionUUID->"2adf9ab2-7129-4974-961c-6893223cc3c5"],

Cell[CellGroupData[{

Cell["\<\
There are ten candies: licorice, peppermint drops, lemon drops, truffles, \
gummy bears, gummy worms, chocolate bars, jelly beans, peanut butter cups, \
and marshmallows. There are four children named Peter, James, John, and \
Andrew. How many ways can the ten candies be distributed among the four \
children? We can compute 10 multichoose 4.\
\>", "MathCaption",
 CellID->305515986,ExpressionUUID->"5ea5f57e-8689-430e-aab9-94b3ff6aac24"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multichoose", "[", 
  RowBox[{"10", ",", "4"}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`Combinatorics`"],
 CellLabel->"In[991]:=",
 CellID->39383660,ExpressionUUID->"1225205f-43a5-4f3e-b5fa-3dcf40dcda74"],

Cell[BoxData["715"], "Output",
 CellChangeTimes->{3.899749385891509*^9},
 CellLabel->"Out[991]=",
 CellID->103072013,ExpressionUUID->"8aa48063-6950-413d-b93a-2c530d6e81c9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Another way of entering it is like this. This is infix notation.\
\>", "MathCaption",
 CellChangeTimes->{{3.899798478505045*^9, 3.899798483139888*^9}},
 CellID->17219148,ExpressionUUID->"b7817b72-b479-4c0b-bd53-e5f4386c86c8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"10", "~", "Multichoose", "~", "4"}]], "Input",
 CellProlog:>Needs["PeterBurbery`Combinatorics`"],
 CellLabel->"In[992]:=",
 CellID->47120929,ExpressionUUID->"a4f91814-1c43-4adc-9968-7211c2b9b18d"],

Cell[BoxData["715"], "Output",
 CellChangeTimes->{3.8997493866190166`*^9},
 CellLabel->"Out[992]=",
 CellID->64792566,ExpressionUUID->"16bfd78e-9def-4875-8130-52427c0b1a67"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Multichoose is written as ",
 Cell[BoxData[
  RowBox[{"(", 
   RowBox[{"(", GridBox[{
      {"n"},
      {"k"}
     }], ")"}], ")"}]], "Input",
  CellChangeTimes->{{3.8998032994939146`*^9, 3.8998033017745667`*^9}},
  ExpressionUUID->"9a01a58e-0a53-4d2c-a47a-3ce91c5bbaac"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.8998032911707973`*^9, 3.899803305188078*^9}},
 CellID->94970839,ExpressionUUID->"55a96f20-509c-4cd8-8413-0f69269f3162"],

Cell[CellGroupData[{

Cell["\<\
We can also generate all the combinations and count them. Since there are a \
lot of combinations, I am not listing them all here and then using Length. \
I'm just going to use Length immediately.\
\>", "MathCaption",
 CellID->14643919,ExpressionUUID->"60c8a798-9f47-4f70-b987-7b5869fdf4f6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"OrderlessCombinations", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<licorice\>\"", ",", "\"\<peppermint drops\>\"", ",", 
      "\"\<lemon drops\>\"", ",", "\"\<truffles\>\"", ",", 
      "\"\<gummy bears\>\"", ",", "\"\<gummy worms\>\"", ",", 
      "\"\<chocolate bars\>\"", ",", "\"\<jelly beans\>\"", ",", 
      "\"\<peanut butter cups\>\"", ",", "\"\<marshmallows\>\""}], "}"}], ",", 
    RowBox[{"{", "4", "}"}]}], "]"}]}]], "Input",
 CellProlog:>Needs["PeterBurbery`Combinatorics`"],
 CellLabel->"In[993]:=",
 CellID->37517731,ExpressionUUID->"078d409d-b639-4f1e-adb8-0bada5d27ea7"],

Cell[BoxData["715"], "Output",
 CellChangeTimes->{3.899749387095017*^9},
 CellLabel->"Out[993]=",
 CellID->530337700,ExpressionUUID->"4180692d-2826-43fe-a927-20302b07210e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
If we want to count orderless combinations, we can use multichoose.\
\>", "MathCaption",
 CellChangeTimes->{{3.8998033648834124`*^9, 3.8998033886955576`*^9}},
 CellID->125191938,ExpressionUUID->"4e41fccb-1872-482a-ad28-6ad05091fcca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"10", "~", "Multichoose", "~", "4"}]], "Input",
 CellChangeTimes->{{3.899803410279196*^9, 3.8998034165061703`*^9}},
 CellLabel->"In[1540]:=",
 CellID->62500105,ExpressionUUID->"3996feb2-fa6f-4310-9699-0af933842f60"],

Cell[BoxData["715"], "Output",
 CellChangeTimes->{3.8998034169203634`*^9},
 CellLabel->"Out[1540]=",
 CellID->137339370,ExpressionUUID->"237bda7e-ce06-44ba-8cc4-d61b63543458"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get length four sets from a list of length two:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.875713092380643*^9, 3.8757131054083443`*^9}},
 CellID->968157184,ExpressionUUID->"6ff6e65a-eeb9-41da-9032-0ab8abea8348"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OrderlessCombinations", "[", 
  RowBox[{
   RowBox[{"Range", "[", "2", "]"}], ",", 
   RowBox[{"{", "4", "}"}]}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.8757130813149757`*^9, 3.875713083065956*^9}, {
  3.875713163776183*^9, 3.875713164021326*^9}, {3.898421107568678*^9, 
  3.89842111327289*^9}},
 CellLabel->"In[1015]:=",
 CellID->702446134,ExpressionUUID->"d5ce45de-3ec2-4be1-98f9-a71c7ab5701f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.8757130696328373`*^9, 3.875713083332706*^9}, 
   3.8984211136238894`*^9, 3.8997498737485714`*^9},
 CellLabel->"Out[1015]=",
 CellID->306566547,ExpressionUUID->"ed247986-77e0-43aa-9a7e-756924643b06"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Elements need not be integers:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.875713136035513*^9, 3.875713142128128*^9}},
 CellID->505671602,ExpressionUUID->"779af4d7-1efc-44ff-9d54-d221f84df0cc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OrderlessCombinations", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<dog\>\"", ",", "\"\<cat\>\"", ",", "\"\<bird\>\""}], "}"}], 
   ",", "3"}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.875713124983794*^9, 3.875713133759502*^9}, 
   3.898421125793764*^9},
 CellLabel->"In[1016]:=",
 CellID->618773088,ExpressionUUID->"192d43bc-36f3-420c-95fd-1ac5678c7a85"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "\<\"bird\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"cat\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"dog\"\>", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"bird\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"cat\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"dog\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cat\"\>", ",", "\<\"cat\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cat\"\>", ",", "\<\"dog\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"dog\"\>", ",", "\<\"dog\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"bird\"\>", ",", "\<\"bird\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"bird\"\>", ",", "\<\"cat\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"bird\"\>", ",", "\<\"dog\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"cat\"\>", ",", "\<\"cat\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"cat\"\>", ",", "\<\"dog\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"dog\"\>", ",", "\<\"dog\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cat\"\>", ",", "\<\"cat\"\>", ",", "\<\"cat\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cat\"\>", ",", "\<\"cat\"\>", ",", "\<\"dog\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cat\"\>", ",", "\<\"dog\"\>", ",", "\<\"dog\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"dog\"\>", ",", "\<\"dog\"\>", ",", "\<\"dog\"\>"}], "}"}]}], 
  "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.875713134316802*^9, 3.898421126716824*^9, 
  3.8997498744259176`*^9},
 CellLabel->"Out[1016]=",
 CellID->525838052,ExpressionUUID->"e99e8e59-1ec2-4372-9aad-45078339f040"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
We could consider {\"cat\", \"cat\", \"cat\"} and {\"dog\", \"dog\", \"dog\"} \
as partly equal.\
\>", "MathCaption",
 CellChangeTimes->{{3.8997498828965025`*^9, 3.8997498907152777`*^9}, {
  3.8997499307985764`*^9, 3.89974994322063*^9}},
 CellID->330285041,ExpressionUUID->"d9197dce-04a1-46b8-a322-dec1b4dacd71"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CanonicalMultiset", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<cat\>\"", ",", "\"\<cat\>\"", ",", "\"\<cat\>\""}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8997498914598007`*^9, 3.899749901145748*^9}},
 CellLabel->"In[1017]:=",
 CellID->149666305,ExpressionUUID->"c229ce77-cd25-4941-bc8b-f7fb6e596f60"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.89974990145318*^9},
 CellLabel->"Out[1017]=",
 CellID->164357416,ExpressionUUID->"1ccad662-e426-48df-997a-e9e72611fd63"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CanonicalMultiset", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<dog\>\"", ",", "\"\<dog\>\"", ",", "\"\<dog\>\""}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8997498914598007`*^9, 3.899749909292178*^9}},
 CellLabel->"In[1018]:=",
 CellID->279831655,ExpressionUUID->"a297bb40-accc-4b26-9af8-01db3fcac5d1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.899749909631289*^9},
 CellLabel->"Out[1018]=",
 CellID->240178721,ExpressionUUID->"eb867f17-6de1-4603-8a65-5da575ab39ea"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
If we delete duplicates by CanonicalMultiset, we get fewer elements.\
\>", "MathCaption",
 CellChangeTimes->{{3.8997499119156322`*^9, 3.8997499288560653`*^9}},
 CellID->377750434,ExpressionUUID->"cb4c5f0a-8e98-4ee2-81ee-83b8b5229de6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DeleteDuplicatesBy", "[", "CanonicalMultiset", "]"}], "[", 
  RowBox[{"OrderlessCombinations", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<dog\>\"", ",", "\"\<cat\>\"", ",", "\"\<bird\>\""}], "}"}], 
    ",", "3"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997499753112793`*^9, 3.899750004350798*^9}},
 CellLabel->"In[1019]:=",
 CellID->80880133,ExpressionUUID->"f57e03a6-21f1-4235-95c2-2e986517fcaa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "\<\"bird\"\>", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"bird\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"cat\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"bird\"\>", ",", "\<\"bird\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"bird\"\>", ",", "\<\"cat\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"cat\"\>", ",", "\<\"cat\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"cat\"\>", ",", "\<\"dog\"\>"}], "}"}]}],
   "}"}]], "Output",
 CellChangeTimes->{3.89975000499255*^9},
 CellLabel->"Out[1019]=",
 CellID->99913589,ExpressionUUID->"a597f984-67db-415a-93f5-cc8a4c17e260"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CanonicalMultiset", "/@", 
  RowBox[{
   RowBox[{"DeleteDuplicatesBy", "[", "CanonicalMultiset", "]"}], "[", 
   RowBox[{"OrderlessCombinations", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<dog\>\"", ",", "\"\<cat\>\"", ",", "\"\<bird\>\""}], "}"}],
      ",", "3"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.89975007676978*^9, 3.899750085997959*^9}},
 CellLabel->"In[1022]:=",
 CellID->281231649,ExpressionUUID->"3473a1a9-4e2e-46a6-ae00-509c463b60d9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8997500812424703`*^9, 3.899750086329784*^9}},
 CellLabel->"Out[1022]=",
 CellID->480068261,ExpressionUUID->"5e2726d8-1054-4fce-b832-cfb0d6fbde8d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here's what we would get something like.", "MathCaption",
 CellChangeTimes->{{3.899750063823572*^9, 3.8997500740194883`*^9}},
 CellID->88233538,ExpressionUUID->"d1647e90-dfaa-42b7-b8ad-26fba6ddfc16"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OrderlessCombinationsOfUnmarkedElements", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<dog\>\"", ",", "\"\<cat\>\"", ",", "\"\<bird\>\""}], "}"}], 
   ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.899750048228162*^9, 3.89975005715495*^9}},
 CellLabel->"In[1020]:=",
 CellID->926616109,ExpressionUUID->"e19a5b82-bf36-4234-8359-04f2b48ef314"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8997500577748804`*^9},
 CellLabel->"Out[1020]=",
 CellID->78903040,ExpressionUUID->"4fe5c88f-1499-4ed2-9d31-3ca9ae7e59e0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["These produce the same output.", "MathCaption",
 CellChangeTimes->{{3.899750098684269*^9, 3.8997501037767563`*^9}},
 CellID->97113938,ExpressionUUID->"93405352-b02b-4b20-9e88-587d3d058267"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CanonicalMultiset", "/@", 
  RowBox[{
   RowBox[{"DeleteDuplicatesBy", "[", "CanonicalMultiset", "]"}], "[", 
   RowBox[{"OrderlessCombinations", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<dog\>\"", ",", "\"\<cat\>\"", ",", "\"\<bird\>\""}], "}"}],
      ",", "3"}], "]"}], "]"}]}]], "Input",
 CellLabel->"In[1023]:=",
 CellID->22984984,ExpressionUUID->"72102507-d9a9-415c-a9e6-d60539767db6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8997501087394667`*^9},
 CellLabel->"Out[1023]=",
 CellID->239111319,ExpressionUUID->"f47a0b2b-3f04-43ef-b02c-ffc71472b5b1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Let's compare the performance for a large set.", "MathCaption",
 CellChangeTimes->{{3.899750123113118*^9, 3.899750129791135*^9}},
 CellID->396413639,ExpressionUUID->"8269cbed-325f-485d-843d-be139e1086d3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<EchoPerformance\>\"", "]"}], "[", 
  RowBox[{"CanonicalMultiset", "/@", 
   RowBox[{
    RowBox[{"DeleteDuplicatesBy", "[", "CanonicalMultiset", "]"}], "[", 
    RowBox[{"OrderlessCombinations", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<dog\>\"", ",", "\"\<cat\>\"", ",", "\"\<bird\>\""}], 
       "}"}], ",", "3"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8997501310771832`*^9, 3.89975013486598*^9}},
 CellLabel->"In[1024]:=",
 CellID->229833682,ExpressionUUID->"3b64f990-bd2b-48c3-866c-bca494b91bdd"],

Cell[BoxData[
 RowBox[{
  TagBox["Map",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    StyleBox[
     TemplateBox[{"0.0005623`", "\" s\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]], ",", 
    StyleBox[
     TemplateBox[{"7168", "\" B\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]]}], "}"}]}]], "Echo",
 CellChangeTimes->{3.8997501387702274`*^9},
 CellID->834526706,ExpressionUUID->"b25b2795-fee1-473e-9411-e446c1e44c9e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.899750139293807*^9},
 CellLabel->"Out[1024]=",
 CellID->630516631,ExpressionUUID->"5180b357-0d0a-4f64-8c83-25436aa00830"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<EchoPerformance\>\"", "]"}], "[", 
  RowBox[{"OrderlessCombinationsOfUnmarkedElements", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<dog\>\"", ",", "\"\<cat\>\"", ",", "\"\<bird\>\""}], "}"}], 
    ",", "3"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997501310771832`*^9, 3.8997501417967834`*^9}},
 CellLabel->"In[1025]:=",
 CellID->162857240,ExpressionUUID->"a34abd73-cfa1-4b08-9c65-131cdb6ab634"],

Cell[BoxData[
 RowBox[{
  TagBox["OrderlessCombinationsOfUnmarkedElements",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    StyleBox[
     TemplateBox[{"0.0003973`", "\" s\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]], ",", 
    StyleBox[
     TemplateBox[{"7280", "\" B\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]]}], "}"}]}]], "Echo",
 CellChangeTimes->{3.899750142693967*^9},
 CellID->267038778,ExpressionUUID->"2f7e5e03-c0a2-4182-bb47-785e1e00e171"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8997501432299366`*^9},
 CellLabel->"Out[1025]=",
 CellID->51852502,ExpressionUUID->"5ea7219e-6a6b-403b-b0d3-76becbf2e52e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<EchoPerformance\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"CanonicalMultiset", "/@", 
    RowBox[{
     RowBox[{"DeleteDuplicatesBy", "[", "CanonicalMultiset", "]"}], "[", 
     RowBox[{"OrderlessCombinations", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<dog\>\"", ",", "\"\<cat\>\"", ",", "\"\<bird\>\""}], 
        "}"}], ",", "7"}], "]"}], "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997501666691236`*^9, 3.899750174714215*^9}},
 CellLabel->"In[1028]:=",
 CellID->306376386,ExpressionUUID->"265bbe0e-3df5-4ad0-afcd-cd8174b9bee2"],

Cell[BoxData[
 RowBox[{
  TagBox["CompoundExpression",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    StyleBox[
     TemplateBox[{"0.0026763`", "\" s\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]], ",", 
    StyleBox[
     TemplateBox[{"40688", "\" B\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]]}], "}"}]}]], "Echo",
 CellChangeTimes->{3.899750176058378*^9},
 CellID->448272658,ExpressionUUID->"7076c2e5-901f-4489-9e7f-5e65b454a91d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<EchoPerformance\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"OrderlessCombinationsOfUnmarkedElements", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<dog\>\"", ",", "\"\<cat\>\"", ",", "\"\<bird\>\""}], "}"}],
      ",", "7"}], "]"}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997501310771832`*^9, 3.899750179741675*^9}},
 CellLabel->"In[1029]:=",
 CellID->3601619,ExpressionUUID->"f428c231-93fc-42cc-8ee5-880d3b0b4361"],

Cell[BoxData[
 RowBox[{
  TagBox["CompoundExpression",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    StyleBox[
     TemplateBox[{"0.0021079`", "\" s\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]], ",", 
    StyleBox[
     TemplateBox[{"40272", "\" B\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]]}], "}"}]}]], "Echo",
 CellChangeTimes->{3.8997501802011633`*^9},
 CellID->88055709,ExpressionUUID->"cd4d116f-6fb7-4712-a36c-54af46c1214c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The definition of the function is significantly faster and uses significantly \
less memory for larger inputs.\
\>", "MathCaption",
 CellChangeTimes->{{3.8997502844391108`*^9, 3.8997503008520737`*^9}, {
  3.8997986028509464`*^9, 3.899798605369852*^9}},
 CellID->100378946,ExpressionUUID->"663ee3fe-596d-4d2a-a7eb-09731c709d57"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<EchoPerformance\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"CanonicalMultiset", "/@", 
    RowBox[{
     RowBox[{"DeleteDuplicatesBy", "[", "CanonicalMultiset", "]"}], "[", 
     RowBox[{"OrderlessCombinations", "[", 
      RowBox[{
       RowBox[{"RandomWord", "[", 
        RowBox[{"\"\<Noun\>\"", ",", "7"}], "]"}], ",", "17"}], "]"}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997502399302263`*^9, 3.8997502466353493`*^9}},
 CellLabel->"In[1030]:=",
 CellID->268140765,ExpressionUUID->"2c1a3040-cb92-4333-be4e-12bb4ea80ef0"],

Cell[BoxData[
 RowBox[{
  TagBox["CompoundExpression",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    StyleBox[
     TemplateBox[{"16.5168917`", "\" s\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]], ",", 
    StyleBox[
     TemplateBox[{"148109320", "\" B\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]]}], "}"}]}]], "Echo",
 CellChangeTimes->{3.8997502637371936`*^9},
 CellID->434075465,ExpressionUUID->"a19e8ced-1b0a-40a2-9e5a-eea4f2973c89"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<EchoPerformance\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"OrderlessCombinationsOfUnmarkedElements", "[", 
    RowBox[{
     RowBox[{"RandomWord", "[", 
      RowBox[{"\"\<Noun\>\"", ",", "7"}], "]"}], ",", "17"}], "]"}], ";"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.899750261218817*^9, 3.899750262644846*^9}},
 CellLabel->"In[1031]:=",
 CellID->589080666,ExpressionUUID->"102b64b7-4454-4e12-8f12-990c7622c952"],

Cell[BoxData[
 RowBox[{
  TagBox["CompoundExpression",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    StyleBox[
     TemplateBox[{"9.0295319`", "\" s\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]], ",", 
    StyleBox[
     TemplateBox[{"84408424", "\" B\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]]}], "}"}]}]], "Echo",
 CellChangeTimes->{3.8997502756494303`*^9},
 CellID->323976790,ExpressionUUID->"294c9639-d817-47a7-97a2-68e1caf5c21c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ferrers diagrams", "Section",
 CellChangeTimes->{{3.8998034565646176`*^9, 3.8998034592865944`*^9}},
 CellID->139191236,ExpressionUUID->"47db4cff-b5be-4f80-b232-2458935d031e"],

Cell[CellGroupData[{

Cell["Make a Ferrers diagram for every partition of 5.", "MathCaption",
 CellChangeTimes->{{3.899749400851626*^9, 3.8997494092761846`*^9}},
 CellID->478421323,ExpressionUUID->"9bccd181-e618-417a-b3b6-e5b9f8235a2d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{"FerrersDiagram", "/@", 
     RowBox[{"IntegerPartitions", "[", "5", "]"}]}], ",", 
    RowBox[{"UpTo", "[", "3", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.899749559219838*^9, 3.8997495620700817`*^9}},
 CellLabel->"In[1005]:=",
 CellID->542729463,ExpressionUUID->"c8b6daab-da34-4e61-a47f-4d129c6e69c0"],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      TagBox[GridBox[{
         {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>"}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], {29.5625, -40.3125}, {Center, Center}, {55., 75.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      TagBox[GridBox[{
         {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>", "", "", ""}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], {88.6875, -40.3125}, {Center, Center}, {55., 75.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      TagBox[GridBox[{
         {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", ""}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], {147.8125, -40.3125}, {Center, Center}, {55., 75.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {
     InsetBox[
      TagBox[GridBox[{
         {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>", "", ""},
         {"\<\"\[FilledCircle]\"\>", "", ""}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], {29.5625, -120.9375}, {Center, Center}, {55., 75.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      TagBox[GridBox[{
         {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>", ""}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], {88.6875, -120.9375}, {Center, Center}, {55., 75.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      TagBox[GridBox[{
         {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>", ""},
         {"\<\"\[FilledCircle]\"\>", ""},
         {"\<\"\[FilledCircle]\"\>", ""}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], {147.8125, -120.9375}, {Center, Center}, {55., 75.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {
     InsetBox[
      TagBox[GridBox[{
         {"\<\"\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>"}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], {29.5625, -201.5625}, {Center, Center}, {55., 75.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     TagBox[InsetBox["", {88.6875, -201.5625}, {Center, Center}, {55., 75.},
       BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}],
      "InsetString"], 
     TagBox[InsetBox["", {147.8125, -201.5625}, {Center, Center}, {55., 75.},
       BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}],
      "InsetString"]}}, {}},
  ImageSize->Automatic,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.8997495625907516`*^9},
 CellLabel->"Out[1005]=",
 CellID->25169857,ExpressionUUID->"340668c1-667b-4c26-8054-a3160f8471ca"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rows 1 to 4 have 5, 4, 2, 2 dots:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.765829554031358*^9, 3.765829573726055*^9}},
 CellID->59602588,ExpressionUUID->"dd382b7c-0a1b-4fdd-bc0d-92ab2a4edb64"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FerrersDiagram", "[", 
  RowBox[{"{", 
   RowBox[{"5", ",", "4", ",", "2", ",", "2"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8983577165611973`*^9, 3.8983577214598713`*^9}},
 CellLabel->"In[18]:=",
 CellID->141527026,ExpressionUUID->"ac51ac44-7bd4-4544-aacc-82c4e811684f"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>"},
    {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", ""},
    {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "", "", ""},
    {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "", "", ""}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.898357721742388*^9, 3.8993962051168375`*^9},
 CellLabel->"Out[18]=",
 CellID->387932858,ExpressionUUID->"df6e1693-85b8-4644-8d07-6e9c2af984b3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Here is a",
 StyleBox[" ", "MathCaption"],
 "random choice of one of the 204226 partitions of 50:"
}], "MathCaption",
 CellChangeTimes->{3.8993962334151325`*^9},
 CellID->909413053,ExpressionUUID->"f38281b9-fbdb-4cc2-946f-11699909ed7f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Framed", "@", 
  RowBox[{"FerrersDiagram", "@", 
   RowBox[{"RandomChoice", "[", 
    RowBox[{"IntegerPartitions", "@", "50"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8983577165611973`*^9, 3.8983577348146467`*^9}, {
  3.899396215343503*^9, 3.8993962297246037`*^9}},
 CellLabel->"In[20]:=",
 CellID->285728069,ExpressionUUID->"b532b741-a352-4336-b84a-89608831d50f"],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\
\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", \
"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", \
"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>"},
     {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\
\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", \
"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", \
"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>"},
     {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\
\<\"\[FilledCircle]\"\>", "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\
\<\"\[FilledCircle]\"\>", "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>", "", "", "", "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "", "", "", "", 
      "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "", "", "", "", 
      "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "", "", "", "", 
      "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "", "", "", "", 
      "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "", "", "", "", "", "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "", "", "", "", "", "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "", "", "", "", "", "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "", "", "", "", "", "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "", "", "", "", "", "", "", "", "", ""}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.8983577351541634`*^9, {3.8993962200654726`*^9, 3.8993962305310087`*^9}},
 CellLabel->"Out[20]=",
 CellID->291815495,ExpressionUUID->"0012ca9c-37e2-4848-97df-7ae0086ab50b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Selecting permutations", "Section",
 CellChangeTimes->{{3.899803470327171*^9, 3.8998034729462247`*^9}},
 CellID->3656217,ExpressionUUID->"fff6d5b4-c4e7-4dab-9b99-7dade22af8e3"],

Cell[CellGroupData[{

Cell["\<\
Select from the list {5,6,7,8,9} those permutations that form a prime when \
concatenating the digits: \
\>", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.775568205955653*^9, 3.775568227320828*^9}, {
  3.775568257522637*^9, 3.775568284776268*^9}, {3.775568406638788*^9, 
  3.7755684078891897`*^9}},
 CellID->123284224,ExpressionUUID->"4354c4e1-d12b-46ac-b346-6d8ddbba8cae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"PrimeQ", "@*", "FromDigits"}]}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.775568168324977*^9, 3.775568246840334*^9}, {
   3.775568343294755*^9, 3.7755683487998447`*^9}, {3.775568398156794*^9, 
   3.775568423898609*^9}, {3.776529126287918*^9, 3.77652913001302*^9}, 
   3.898627106119957*^9},
 CellLabel->"In[1033]:=",
 CellID->841619866,ExpressionUUID->"6669ab30-ade7-4e92-a6e0-3ded406257d2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "8", ",", "9", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "7", ",", "6", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8", ",", "6", ",", "7", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8", ",", "9", ",", "6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "5", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "7", ",", "5", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "8", ",", "5", ",", "9", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "9", ",", "8", ",", "5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "5", ",", "6", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "5", ",", "8", ",", "6", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8", ",", "5", ",", "6", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "6", ",", "5", ",", "7", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "9", ",", "5", ",", "6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "9", ",", "6", ",", "5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "6", ",", "5", ",", "8", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "6", ",", "8", ",", "5", ",", "7"}], "}"}]}], 
  "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.775568183396497*^9, 3.775568201638604*^9}, {
   3.775568255076702*^9, 3.775568263439975*^9}, {3.775568380685358*^9, 
   3.775568424252521*^9}, 3.7756595100280657`*^9, {3.776529095525774*^9, 
   3.776529130338461*^9}, 3.776529313866888*^9, 3.777914407196706*^9, 
   3.8986271159046593`*^9, {3.899750326409789*^9, 3.8997503438722515`*^9}},
 CellLabel->"Out[1033]=",
 CellID->89679823,ExpressionUUID->"19167270-2be2-483c-b38f-15fe38fbd73c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here are the numbers.", "MathCaption",
 CellChangeTimes->{{3.899750347468344*^9, 3.89975035017175*^9}},
 CellID->24958883,ExpressionUUID->"f2f8f22e-9c43-4122-91bd-6e12288f3b32"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FromDigits", "/@", 
  RowBox[{
   StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
    RowBox[{"PrimeQ", "@*", "FromDigits"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.899750351130355*^9, 3.8997503536065807`*^9}},
 CellLabel->"In[1036]:=",
 CellID->484647955,ExpressionUUID->"69fd66db-4571-4ba8-aef8-1227dc35dbaf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "56897", ",", "57689", ",", "58679", ",", "58967", ",", "65789", ",", 
   "67589", ",", "68597", ",", "69857", ",", "75689", ",", "75869", ",", 
   "78569", ",", "86579", ",", "89567", ",", "89657", ",", "96587", ",", 
   "96857"}], "}"}]], "Output",
 CellChangeTimes->{3.899750353965536*^9},
 CellLabel->"Out[1036]=",
 CellID->123777944,ExpressionUUID->"b064dac1-3a34-4778-9d12-1614a9585687"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Select permutations of length 3:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.77556848444596*^9, 3.7755685001038637`*^9}},
 CellID->837471449,ExpressionUUID->"5540ead2-6393-4740-a895-a294df2d7418"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"PrimeQ", "@*", "FromDigits"}]}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.7755684786907463`*^9, 3.7755684795515823`*^9}, 
   3.8986271076058855`*^9, 3.8997503780590734`*^9},
 CellLabel->"In[1034]:=",
 CellID->724085147,ExpressionUUID->"e5b1dba1-7e96-4784-bbc7-82a54d2f70a4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "5", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "6", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "6", ",", "7"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.7755684799271097`*^9, 3.775568497623534*^9}, 
   3.775659511887641*^9, 3.7765291338475637`*^9, 3.77652931593814*^9, 
   3.777914412861889*^9, 3.8986271164919386`*^9, 3.8997503446104565`*^9},
 CellLabel->"Out[1034]=",
 CellID->96753963,ExpressionUUID->"60ec549a-273d-4fd9-88d2-a2a08007181e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here are the numbers.", "MathCaption",
 CellChangeTimes->{{3.8997503847406015`*^9, 3.899750387408563*^9}},
 CellID->505704633,ExpressionUUID->"4ceb201e-3050-442d-8adf-7606de4e12c5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FromDigits", "/@", 
  RowBox[{
   StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
    RowBox[{"{", "3", "}"}], ",", 
    RowBox[{"PrimeQ", "@*", "FromDigits"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8997503882187953`*^9, 3.8997503919935703`*^9}},
 CellLabel->"In[1039]:=",
 CellID->220964068,ExpressionUUID->"e728bbee-cf4c-4529-ab1a-5ad45e6f454b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "569", ",", "587", ",", "659", ",", "769", ",", "857", ",", "859", ",", 
   "967"}], "}"}]], "Output",
 CellChangeTimes->{3.8997503924270816`*^9},
 CellLabel->"Out[1039]=",
 CellID->74427375,ExpressionUUID->"627b5b56-b760-45af-8f38-f4daa8596ae6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Select permutations with length 3\[LongDash]4:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.77556848444596*^9, 3.775568509805202*^9}, {
  3.775568557163394*^9, 3.775568581141801*^9}},
 CellID->733329592,ExpressionUUID->"302074b2-53bf-412b-b378-0d9dd6af2ccc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"PrimeQ", "@*", "FromDigits"}]}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.7755684786907463`*^9, 3.7755684795515823`*^9}, {
   3.7755685117029343`*^9, 3.775568514832704*^9}, {3.775568548776168*^9, 
   3.775568573740428*^9}, 3.8986271097288756`*^9},
 CellLabel->"In[1035]:=",
 CellID->472360365,ExpressionUUID->"48030e11-2693-464d-a385-8febe1f6caf1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "5", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "6", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8", ",", "6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8", ",", "6", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8", ",", "7", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8", ",", "9", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "9", ",", "8", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "8", ",", "5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "5", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5", ",", "9", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "5", ",", "8", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "8", ",", "5", ",", "7"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.7755684799271097`*^9, 3.775568515310902*^9}, {
   3.7755685510649137`*^9, 3.775568573972561*^9}, 3.77565951429523*^9, 
   3.7765291361641808`*^9, 3.77652931673779*^9, 3.777914421493857*^9, 
   3.8986271173406982`*^9, 3.8997503452354593`*^9},
 CellLabel->"Out[1035]=",
 CellID->45157847,ExpressionUUID->"320e1c85-3ab3-4d6e-ae3a-c595dd565b99"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here are the numbers.", "MathCaption",
 CellChangeTimes->{{3.8997503986814213`*^9, 3.899750401894279*^9}},
 CellID->232625522,ExpressionUUID->"a6a119c0-552b-4efb-8525-cc57e5a43159"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FromDigits", "/@", 
  RowBox[{
   StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}], ",", 
    RowBox[{"PrimeQ", "@*", "FromDigits"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.899750402509916*^9, 3.899750408302501*^9}},
 CellLabel->"In[1040]:=",
 CellID->129412639,ExpressionUUID->"7d958271-927d-423e-9287-5d8c0674c251"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "569", ",", "587", ",", "659", ",", "769", ",", "857", ",", "859", ",", 
   "967", ",", "5689", ",", "5867", ",", "5869", ",", "5879", ",", "5897", 
   ",", "5987", ",", "6857", ",", "7589", ",", "8597", ",", "9587", ",", 
   "9857"}], "}"}]], "Output",
 CellChangeTimes->{3.899750408595244*^9},
 CellLabel->"Out[1040]=",
 CellID->294220470,ExpressionUUID->"a11a8500-f148-473b-8a06-24ee49e2daad"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Select permutations for which the first two elements and the last elements \
add up to the same value:\
\>", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.775568615672393*^9, 3.775568642910595*^9}},
 CellID->979377819,ExpressionUUID->"ff109d32-603f-4c5b-8e05-95f98b94889f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "2"}], "]"}], "]"}], "]"}], "==", 
     RowBox[{"Total", "[", 
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"3", ";;", "4"}], "]"}], "]"}], "]"}]}], "&"}]}], 
  "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.775568591553537*^9, 3.7755686112570133`*^9}, 
   3.898627111559018*^9},
 CellLabel->"In[1041]:=",
 CellID->174898405,ExpressionUUID->"be432af3-2f08-46ff-b697-f1512e8cb0be"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "3", ",", "2"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.775568611591529*^9, 3.775568644008772*^9, 
  3.775659516424469*^9, 3.7765291414916773`*^9, 3.77652931856979*^9, 
  3.8986271181438427`*^9, 3.8997504412437253`*^9},
 CellLabel->"Out[1041]=",
 CellID->408943794,ExpressionUUID->"589f9702-e116-43e7-bdb7-d413e1c17514"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Select the first ten permutations of length 4 for which the elements add up \
to an odd number:\
\>", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.775568753645933*^9, 3.775568812706834*^9}},
 CellID->559719523,ExpressionUUID->"a43f3540-f32b-4aa8-8c54-95db8425bd25"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}], 
   ",", 
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"OddQ", "@*", "Total"}], ",", "10"}], "]"}]], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{
  3.775568390327188*^9, {3.775568657121542*^9, 3.775568658024325*^9}, {
   3.7755687157418547`*^9, 3.7755687754639063`*^9}, 3.898627183585071*^9},
 CellLabel->"In[1042]:=",
 CellID->359245144,ExpressionUUID->"ac9aa9b0-66b6-4742-bc66-874ea2f18d1e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "5", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "6", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "5", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "5", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "6", ",", "5"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.7755687038053503`*^9, 3.7755688138863287`*^9}, 
   3.7756595189226503`*^9, 3.776529143745932*^9, 3.7765293197019567`*^9, 
   3.898627205694783*^9, 3.8997505791303563`*^9},
 CellLabel->"Out[1042]=",
 CellID->162633939,ExpressionUUID->"eed62582-7a78-4769-8e99-f7bdea20165b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Select polynomials for which the slope is 1 at ",
 Cell[BoxData[
  RowBox[{
   StyleBox["x", "TI"], "=", "0"}]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "4fd8075b-0a37-4f1f-a08b-bfcd8026f51d"],
 ":"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.775568978297995*^9, 3.775568990453267*^9}, 
   3.7779148648834963`*^9},
 CellID->306011383,ExpressionUUID->"cdab7a3c-f45a-4f45-901b-26ef56083726"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"out", "=", 
  RowBox[{"Total", "/@", 
   RowBox[{
    StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"4", "x"}], ",", "1", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "-", "2"}], ")"}], "^", "2"}]}], "}"}], ",", "4", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"Total", "[", "#", "]"}], ",", "x"}], "]"}], ")"}], "/.", 
         RowBox[{"x", "\[Rule]", "0"}]}], ")"}], "\[Equal]", "1"}], "&"}]}], 
    "]"}]}]}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.7755690066041317`*^9, 3.775569013725047*^9}, 
   3.8986271855484247`*^9},
 CellLabel->"In[1043]:=",
 CellID->884651642,ExpressionUUID->"0caf7b72-3268-491d-b1a2-8a6371ce5171"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"1", "+", "x"}], ",", 
   RowBox[{"1", "+", "x"}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.775568996876224*^9, 3.775569014097753*^9}, 
   3.775659522403158*^9, 3.7756596276060133`*^9, 3.776529146850255*^9, 
   3.776529321528561*^9, 3.8986272065335693`*^9, 3.899750596239173*^9},
 CellLabel->"Out[1043]=",
 CellID->320654796,ExpressionUUID->"40ea0673-2881-4791-8a49-212bd297141a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Expand the polynomials.", "MathCaption",
 CellChangeTimes->{{3.8997506020821342`*^9, 3.899750605125643*^9}},
 CellID->22585214,ExpressionUUID->"4ac846aa-77a9-49f7-8054-98baf0677b0d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", "out", "]"}]], "Input",
 CellChangeTimes->{{3.8997506056179447`*^9, 3.899750608200514*^9}},
 CellLabel->"In[1045]:=",
 CellID->548368980,ExpressionUUID->"1fcb191a-59d4-4050-8321-c72cd2563f77"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"1", "+", "x"}], ",", 
   RowBox[{"1", "+", "x"}], ",", 
   RowBox[{"4", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"4", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"4", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"4", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"4", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"4", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.899750608675965*^9},
 CellLabel->"Out[1045]=",
 CellID->266909173,ExpressionUUID->"576e9095-ab15-4b4c-a959-44f27bd0e87b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["There are really only three unique ones.", "MathCaption",
 CellChangeTimes->{{3.8997506924034615`*^9, 3.8997506979678574`*^9}},
 CellID->305030941,ExpressionUUID->"d63b06af-1456-44ac-9378-62dba7c9700a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeleteDuplicates", "[", 
  RowBox[{"Expand", "[", "out", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997506844197226`*^9, 3.8997506878270464`*^9}},
 CellLabel->"In[1050]:=",
 CellID->206631954,ExpressionUUID->"038fbc44-8b6f-4fa1-bfaf-7b23417d9106"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"1", "+", "x"}], ",", 
   RowBox[{"4", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.899750688145549*^9},
 CellLabel->"Out[1050]=",
 CellID->390480037,ExpressionUUID->"d5f634fd-68fd-4783-8c83-e8bbe07f5a24"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Make a graph of all of them.", "MathCaption",
 CellChangeTimes->{{3.8997506154916935`*^9, 3.899750619080804*^9}},
 CellID->240106575,ExpressionUUID->"85619cf8-d735-4f37-abb9-d45bc6e04bcb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Expand", "[", "out", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "2"}], "Pi"}], ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8997506592409725`*^9, 3.8997506687715807`*^9}, 
   3.8997507016913366`*^9},
 CellLabel->"In[1051]:=",
 CellID->154729335,ExpressionUUID->"59bb25db-be50-4465-baad-8667d4a28c8c"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1:eJxF1OlLE3AcgPHpnJut6S53WK1WJJhiSia2mTNCU0NS05wvUhJcS3FODSNm
2Mi0UElpUPMqqZkHOjMkaV7VdGllU0SHEmKbOkxqznvqqKB9fy8ePv/Bw03P
SchwxmAwsX/7Z0y0+/kdLnvAIb+r0ELgIP24P+sYXkj3bd1WIBU51iRvFzsj
hYR19uQPFnhdN2PpeIEsjmiuFx1H5k7YqI9pTHDkqpfZRGOAe30tHTy2J2js
XKmKd6ODwQ2uExVEGhh6dNy/bIsCHpS53ylfIoP62kCh6LsH+E38ZvG0hgQ2
+oyFxPUSwYBqvTRv2A3kBpydZrTiwaV3ETjX1zjwQJbm2q1yLGgfoaosuU5g
vmB/4o1Ne7/D7lNfB9a7bKCaMtTB7N0A83lKbFiOFeTdT4syZy6Dv8W7j4oe
mMB72hqeYGsKnNSEaluwA2CaX+ReYlWfwOFclDBJUm8A19QCNYtvAqdVHMmK
fhmUSTRRSc+soPD5yeTaig1QVDrsPKu3gR+LfX3LP9vBVMr8B3qKU7jDVZ4u
bK4AC6pzSNvpUhzoUrQgT1fgQbnyWDRT4QZedCny0T4kgu3R2YZfzSQwpLp/
cFTlAbanj4czFsig6Eii77k1CthpxHdFWqhgDB3nXeZEBwtigoJbMJ7gcJM1
YdCGFN+0XTm8jwnWRATZLuNZYEtb8pM+IrLbUxbkQ0ZOzr+X2FlIcsklY9MJ
ZMlQ5pe9WGTehYb6VwqkXK3lU5XISqbZUFiHbFv0pyU0Is2lPaW7b5Gpn6ak
8TPI7IAdUs8ssvApp9XbhFSKM+Z3lpEThNWURjvSKGVskrFs0Go4o5DhkR7N
d0fjyEgO5WWWho70u60jeLOR/LklVeUh5P9vgX8AEpM2Xw==
          "]], LineBox[CompressedData["
1:eJwt1P9P1HUcwHHgPA84D+7b5+79kc9R2KQRRLiIERifVxYENEMJAX8A6xZ4
iQJqkQZFVyY1cMmCKaCYC+jACYQxXHz5vBOEICWg62C4hsjXAPFABDzgrNbr
h+ce/8HTS58Rm+Lk4OCw+9/+MzrK7bU1L5b+L0NDG3Oszp4sylA/r9mLmq0s
ylC3x12rO5QsytB+k7HW4MSiDE10fsRa7hFUTQ923bHWf09QNT0VXl2eup2g
anrUbFN+q9KiKtqTtHV6XKVBlXSjraY+hGVQBR1rWCjc66JG5TTo8mbzGamK
Ht4lM3lo3ejObQP++asKeuL1iiTNgpRy2W6fFMzIafAyZyN/utC+CzsSU/9y
RyX0d8O1qZeaZaiYVvn0B+9plaIiGlDal3ms2wV1pF4Brwxrrkjornc+/un5
+CfCzM/h4s0/iqn5w3zXLfo1wSOt+d2PCkQ0yJLVPk9WBHuPstJ61JGuF2+P
Hh1bFI7zW+LeX7ELk58S08D8feH6i7fpo0abkHmw1DibNiHUKTrrta3LQksE
aU9eGhaOh5SIwjIWhfN/dHPWk+1CyJcHIqcPzQkBFlFrq6mFf2BY/yb3q3Fh
m7/krsMDC/9FR1kIvzootOka9HdF47yleWdHjYgKrv3Wt5gns/wBv4iNuMI2
vlNvjmH+XuBHIxP3pZcP8cHK+OKyZ5f5pTq+joSO87bBSwkFOhs/XOmZvtA3
x9+PdW86YbDz2enNkfsuLfJhTUkVNTGOkPjdCwkXzizzfn3nfHsjRJCa1+00
0mfjr7W/Z8wwiKH9lK9vwW92Xn+jmOlMkUCyYuKGer8j6gIPQ7rCRrNEqBTq
MmSP9ZliVAabcieN+iIJ6g7GkmeitEUuQG8VVkh75PDmplyfjq+l4P25oL7X
oYDaqCND89UyGKwIOrxiVkJwqXCzt9IduNsj+qkBFdTqB0AzKUfVkPp0nO+r
SwqUgYYxSWOEVYlqIFot9s53VKMEsqIDg2ocGJSFbtNi7E0bg7Jg+MAW/5Sr
FvWAsvBA29sSgnJQczXhXJuUoBxcZ7IDfeQE5cAy8Uu6nRCUA/npmDHTcwTl
4HTnoVsbuwnKwbE3Lpf/UERQDox1HaHKEoJycFY7PZRzkaAcXJ3yV8VWEZSD
6byWvPUmgnKQ/Otg5t47BOXgSMCarGWEoBzknPe84j1OUA5KDCkTa3ME5cDs
/HB/lZ2gHIxlalbkIhbVweLQy0XZEhbVgXv1Z7175CyqA09FRVqzmkV14Hey
y9mbZVEdhI7OVJ7VsagO8F+oDv4BHdg3PA==
          "]], LineBox[CompressedData["
1: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
          "]], LineBox[CompressedData["
1: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
Ffz//wu4v5dGC3e3gv8BbCq7cg==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
      Slot["HighlightElements"], 
      Slot["LayoutOptions"], 
      Slot["Meta"], 
      Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1:eJxF1OlLE3AcgPHpnJut6S53WK1WJJhiSia2mTNCU0NS05wvUhJcS3FODSNm
2Mi0UElpUPMqqZkHOjMkaV7VdGllU0SHEmKbOkxqznvqqKB9fy8ePv/Bw03P
SchwxmAwsX/7Z0y0+/kdLnvAIb+r0ELgIP24P+sYXkj3bd1WIBU51iRvFzsj
hYR19uQPFnhdN2PpeIEsjmiuFx1H5k7YqI9pTHDkqpfZRGOAe30tHTy2J2js
XKmKd6ODwQ2uExVEGhh6dNy/bIsCHpS53ylfIoP62kCh6LsH+E38ZvG0hgQ2
+oyFxPUSwYBqvTRv2A3kBpydZrTiwaV3ETjX1zjwQJbm2q1yLGgfoaosuU5g
vmB/4o1Ne7/D7lNfB9a7bKCaMtTB7N0A83lKbFiOFeTdT4syZy6Dv8W7j4oe
mMB72hqeYGsKnNSEaluwA2CaX+ReYlWfwOFclDBJUm8A19QCNYtvAqdVHMmK
fhmUSTRRSc+soPD5yeTaig1QVDrsPKu3gR+LfX3LP9vBVMr8B3qKU7jDVZ4u
bK4AC6pzSNvpUhzoUrQgT1fgQbnyWDRT4QZedCny0T4kgu3R2YZfzSQwpLp/
cFTlAbanj4czFsig6Eii77k1CthpxHdFWqhgDB3nXeZEBwtigoJbMJ7gcJM1
YdCGFN+0XTm8jwnWRATZLuNZYEtb8pM+IrLbUxbkQ0ZOzr+X2FlIcsklY9MJ
ZMlQ5pe9WGTehYb6VwqkXK3lU5XISqbZUFiHbFv0pyU0Is2lPaW7b5Gpn6ak
8TPI7IAdUs8ssvApp9XbhFSKM+Z3lpEThNWURjvSKGVskrFs0Go4o5DhkR7N
d0fjyEgO5WWWho70u60jeLOR/LklVeUh5P9vgX8AEpM2Xw==
             "]], 
            Line[CompressedData["
1:eJwt1P9P1HUcwHHgPA84D+7b5+79kc9R2KQRRLiIERifVxYENEMJAX8A6xZ4
iQJqkQZFVyY1cMmCKaCYC+jACYQxXHz5vBOEICWg62C4hsjXAPFABDzgrNbr
h+ce/8HTS58Rm+Lk4OCw+9/+MzrK7bU1L5b+L0NDG3Oszp4sylA/r9mLmq0s
ylC3x12rO5QsytB+k7HW4MSiDE10fsRa7hFUTQ923bHWf09QNT0VXl2eup2g
anrUbFN+q9KiKtqTtHV6XKVBlXSjraY+hGVQBR1rWCjc66JG5TTo8mbzGamK
Ht4lM3lo3ejObQP++asKeuL1iiTNgpRy2W6fFMzIafAyZyN/utC+CzsSU/9y
RyX0d8O1qZeaZaiYVvn0B+9plaIiGlDal3ms2wV1pF4Brwxrrkjornc+/un5
+CfCzM/h4s0/iqn5w3zXLfo1wSOt+d2PCkQ0yJLVPk9WBHuPstJ61JGuF2+P
Hh1bFI7zW+LeX7ELk58S08D8feH6i7fpo0abkHmw1DibNiHUKTrrta3LQksE
aU9eGhaOh5SIwjIWhfN/dHPWk+1CyJcHIqcPzQkBFlFrq6mFf2BY/yb3q3Fh
m7/krsMDC/9FR1kIvzootOka9HdF47yleWdHjYgKrv3Wt5gns/wBv4iNuMI2
vlNvjmH+XuBHIxP3pZcP8cHK+OKyZ5f5pTq+joSO87bBSwkFOhs/XOmZvtA3
x9+PdW86YbDz2enNkfsuLfJhTUkVNTGOkPjdCwkXzizzfn3nfHsjRJCa1+00
0mfjr7W/Z8wwiKH9lK9vwW92Xn+jmOlMkUCyYuKGer8j6gIPQ7rCRrNEqBTq
MmSP9ZliVAabcieN+iIJ6g7GkmeitEUuQG8VVkh75PDmplyfjq+l4P25oL7X
oYDaqCND89UyGKwIOrxiVkJwqXCzt9IduNsj+qkBFdTqB0AzKUfVkPp0nO+r
SwqUgYYxSWOEVYlqIFot9s53VKMEsqIDg2ocGJSFbtNi7E0bg7Jg+MAW/5Sr
FvWAsvBA29sSgnJQczXhXJuUoBxcZ7IDfeQE5cAy8Uu6nRCUA/npmDHTcwTl
4HTnoVsbuwnKwbE3Lpf/UERQDox1HaHKEoJycFY7PZRzkaAcXJ3yV8VWEZSD
6byWvPUmgnKQ/Otg5t47BOXgSMCarGWEoBzknPe84j1OUA5KDCkTa3ME5cDs
/HB/lZ2gHIxlalbkIhbVweLQy0XZEhbVgXv1Z7175CyqA09FRVqzmkV14Hey
y9mbZVEdhI7OVJ7VsagO8F+oDv4BHdg3PA==
             "]], 
            Line[CompressedData["
1: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
             "]], 
            Line[CompressedData["
1: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
Ffz//wu4v5dGC3e3gv8BbCq7cg==
             "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{(-2) Pi, 2 Pi}, {-6.283185050723043, 
            50.76159943235257}}, "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
          "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>]]& )[<|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{(-2) Pi, 2 Pi}, {-6.283185050723043, 
           50.76159943235257}}, "Frame" -> {{False, False}, {False, False}}, 
         "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
         "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
         "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}}]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJxF1OlLE3AcgPHpnJut6S53WK1WJJhiSia2mTNCU0NS05wvUhJcS3FODSNm
2Mi0UElpUPMqqZkHOjMkaV7VdGllU0SHEmKbOkxqznvqqKB9fy8ePv/Bw03P
SchwxmAwsX/7Z0y0+/kdLnvAIb+r0ELgIP24P+sYXkj3bd1WIBU51iRvFzsj
hYR19uQPFnhdN2PpeIEsjmiuFx1H5k7YqI9pTHDkqpfZRGOAe30tHTy2J2js
XKmKd6ODwQ2uExVEGhh6dNy/bIsCHpS53ylfIoP62kCh6LsH+E38ZvG0hgQ2
+oyFxPUSwYBqvTRv2A3kBpydZrTiwaV3ETjX1zjwQJbm2q1yLGgfoaosuU5g
vmB/4o1Ne7/D7lNfB9a7bKCaMtTB7N0A83lKbFiOFeTdT4syZy6Dv8W7j4oe
mMB72hqeYGsKnNSEaluwA2CaX+ReYlWfwOFclDBJUm8A19QCNYtvAqdVHMmK
fhmUSTRRSc+soPD5yeTaig1QVDrsPKu3gR+LfX3LP9vBVMr8B3qKU7jDVZ4u
bK4AC6pzSNvpUhzoUrQgT1fgQbnyWDRT4QZedCny0T4kgu3R2YZfzSQwpLp/
cFTlAbanj4czFsig6Eii77k1CthpxHdFWqhgDB3nXeZEBwtigoJbMJ7gcJM1
YdCGFN+0XTm8jwnWRATZLuNZYEtb8pM+IrLbUxbkQ0ZOzr+X2FlIcsklY9MJ
ZMlQ5pe9WGTehYb6VwqkXK3lU5XISqbZUFiHbFv0pyU0Is2lPaW7b5Gpn6ak
8TPI7IAdUs8ssvApp9XbhFSKM+Z3lpEThNWURjvSKGVskrFs0Go4o5DhkR7N
d0fjyEgO5WWWho70u60jeLOR/LklVeUh5P9vgX8AEpM2Xw==
          "]], 
         Line[CompressedData["
1:eJwt1P9P1HUcwHHgPA84D+7b5+79kc9R2KQRRLiIERifVxYENEMJAX8A6xZ4
iQJqkQZFVyY1cMmCKaCYC+jACYQxXHz5vBOEICWg62C4hsjXAPFABDzgrNbr
h+ce/8HTS58Rm+Lk4OCw+9/+MzrK7bU1L5b+L0NDG3Oszp4sylA/r9mLmq0s
ylC3x12rO5QsytB+k7HW4MSiDE10fsRa7hFUTQ923bHWf09QNT0VXl2eup2g
anrUbFN+q9KiKtqTtHV6XKVBlXSjraY+hGVQBR1rWCjc66JG5TTo8mbzGamK
Ht4lM3lo3ejObQP++asKeuL1iiTNgpRy2W6fFMzIafAyZyN/utC+CzsSU/9y
RyX0d8O1qZeaZaiYVvn0B+9plaIiGlDal3ms2wV1pF4Brwxrrkjornc+/un5
+CfCzM/h4s0/iqn5w3zXLfo1wSOt+d2PCkQ0yJLVPk9WBHuPstJ61JGuF2+P
Hh1bFI7zW+LeX7ELk58S08D8feH6i7fpo0abkHmw1DibNiHUKTrrta3LQksE
aU9eGhaOh5SIwjIWhfN/dHPWk+1CyJcHIqcPzQkBFlFrq6mFf2BY/yb3q3Fh
m7/krsMDC/9FR1kIvzootOka9HdF47yleWdHjYgKrv3Wt5gns/wBv4iNuMI2
vlNvjmH+XuBHIxP3pZcP8cHK+OKyZ5f5pTq+joSO87bBSwkFOhs/XOmZvtA3
x9+PdW86YbDz2enNkfsuLfJhTUkVNTGOkPjdCwkXzizzfn3nfHsjRJCa1+00
0mfjr7W/Z8wwiKH9lK9vwW92Xn+jmOlMkUCyYuKGer8j6gIPQ7rCRrNEqBTq
MmSP9ZliVAabcieN+iIJ6g7GkmeitEUuQG8VVkh75PDmplyfjq+l4P25oL7X
oYDaqCND89UyGKwIOrxiVkJwqXCzt9IduNsj+qkBFdTqB0AzKUfVkPp0nO+r
SwqUgYYxSWOEVYlqIFot9s53VKMEsqIDg2ocGJSFbtNi7E0bg7Jg+MAW/5Sr
FvWAsvBA29sSgnJQczXhXJuUoBxcZ7IDfeQE5cAy8Uu6nRCUA/npmDHTcwTl
4HTnoVsbuwnKwbE3Lpf/UERQDox1HaHKEoJycFY7PZRzkaAcXJ3yV8VWEZSD
6byWvPUmgnKQ/Otg5t47BOXgSMCarGWEoBzknPe84j1OUA5KDCkTa3ME5cDs
/HB/lZ2gHIxlalbkIhbVweLQy0XZEhbVgXv1Z7175CyqA09FRVqzmkV14Hey
y9mbZVEdhI7OVJ7VsagO8F+oDv4BHdg3PA==
          "]], 
         Line[CompressedData["
1:eJwtmHk0lV3YxslU4TmDwzlEUqiQeTzkuc2nEoVKRaJQKqTIkFeFSuRV5KNB
EaIQGUvZpzImvcZMmWeZnWRK3/Ot9f2112+tvdbez3Vf97Xv9ci4eNm4ruPi
4hLm5uL6v3XvHsxkRUacbVVqa/4nwRj0C6/OrN8szs7M9t+4J9YYlGR+PhGT
EGdzEhurHtw1BmypalGNKs72OimnrH7DGBoyruecWSfO7k81z/Q7Zwz263+J
f+9nsBsE/Y8qGxqDe1XnTO5zBrvoYHyy/aARhJllJrnJMdgxH9j1CRpGcLF5
mRorQmfrebrzBobi8MVRYnRQRIytLFzA1TJrAH/KXuYyxUXZKQPNiiJRTBh4
M3vv4AYae2/X51+rNF3QTuZvvisowk5qCnz3YFQLDLY2KkcuUtjOqqqt4nka
IBmEBUeNk9kH/+MoDb5Qg/rHavZuXSQ2Te9DaMJnFfjvTP6IVqkwO2eru3+t
qhKk72zQPfBBkE2bplmFSu4E1Yf13j41G9iWlnbHjx2SBxnV3R1irwTYK2d8
ez7Eb4Pxd2Z8/Hl87MVIrdwxCxnYdK7U+UoUD5vtP8qjJrkZ1r5Q02YucrN3
3A++aGMpAQcT5AvpHtzsInoKlzwuAamuzApDF272HXVXY251CdjL5TIUZcPN
Xr+jqusbXQLitfLkdmpwsy2py5cqB8Rh1zPrdGcOF1tycNPm7cHi4OAb9aLR
j4v97ar12ZxCBlzChezO/l5DLjf8Opt308HUBIWfGl5Djf/2VCWr0UHMwqfY
sWUNvftx+dMVOTqUWLVJ2OSvoQlN2X5DYTqsOqb2Mb3WUFv3g1q9LjEIu2rg
JTTyBzUyKsz7/xGD+Lfn77z+vopM5Wy7/1SLQolGHftX4TJSerbrvpM/DVTp
d1nU9GVEm8vSEfeiQcayZb1y/DIan//A7nClQcLHrz3ufsvomMCDYF9bGlyx
/rrWrr2MLC/QUzao0ED7XK1BWfES8tG6EJ81IgIFKTUlN98uotkiB6WuEyKg
dDMCnmcuImd+qmnsYRFIPbunGiUuog98R/GDViIQp1rTuhiwiPRoj3sHd4vA
pbLqBQ/mIjL1XqjzkBIB9Y4qTevS3yhVdtV2tosKrymVufQPC+juP/uEx05T
weYEZW/vqwU0eJ6v6K8DFRZeOgxkPFxAMa6rydKHqGBgOi/K9F9AP32TTYLM
qFDttyXIQWMBPaNWZyfLU6G3M9AsOfMX2mhwS+rVOAUo6SodCvEcNGRV55Eb
QIGCucBL82Ec9PPWjqBpHwrY45VC7y9xkGkt+5vOeQoktTng+w9y0IJ3Bj54
ggIKgndSvYQ46JiuHSvLlALG3oOeBTfmkWyx1K9FCgUuMRN5DL3m0KfL/u/D
8skQF7fpx+ETc2iW4qrJn0OGgqknBV7755DM9FpiTAYZFlJSXJMV59Dls0xl
9hMy+AtmVfGOzqI5x/rAO7fJ8M+Pssjak7PI0tw/tdaJDEnaRqcHrWcRa0D3
d+cxMqCYzwZ/DGeRCTtd59chMnCZVU8qS80iBead68aWZAjNbrC+3z6DGnd5
67H0yHD7n0GRozYz6BqtRI9LlAwZbW4TF41mkHmepftTMhlq1MfK76jOoA3R
0TcshMiwcWTS9z02g24LSNx4w0MGiadTr/H4aZTFebp3ZIgEckY03bpbU+hN
mdeiaToJmOFOrFGPCZS7f7r1tCYJahaD007sm0BKd3S2WCmTwP7843UtihNI
IubPnPkOEvjatr//OPET2Syu03WXJEGujK3aI8+fSJM5j7vwkWB7mbmElc84
qgw9a2HcgUGRmuuVcptxFHYkWke2BQPTtNBmpsY4KuCovhGtx8Alih29nTOG
vCOnzbdXYpB0jMnD7TeGTivYTPHmY0D7vWsiP2AUCStna778F4PnHpZ7FI6N
InJiztewSAzUuz3SnzFH0bW6XdOetzA4UPHi5N2VEfTlflrTxRAMImNlWtyC
R1B1dKCEujcGEgKg3uU4gs6YefBHnMcgI/DEv7aGI+haRevV6TMYVDo/2gN/
h5HQVqUNP50xWKcqWiZ+fRhFW757+tgOg3vPNTbFOA+jJquEHq+DGGyh2/jz
Gw+jKAlOpo0VBrvXotXn1w0je0yu25yFgf/X9S++hg0hN/fz5WMGGAjAdl4T
1yG0r1DXXo+JQXy+mfNbsyGU/vWGX4IOBgUPb2xK5x9ChUdibMLVMZg+s/pv
yO1BtKcn5rb4Tgyac9TIVm6DqDP8cVqRPAbvOG4xkqaD6B8DNwE3WQzCrjXE
vP07gHg6NBJXpDHwqOSn3O4aQL1snZo+KQyshQzuHS4dQK3FS7s7NhF6JKTf
m/cbQHMtxb+4GRj87eqkfLIbQDJ/8nXVxDAY3Ea5H6M+gJw0Pdk+NAxevw66
v2uqH21qkkxSomAQ9yuXulrbj2KZFE4qCYNA/eH7XzL70eY3n6NVMKLeVQdi
3V37kW+Dy/0gQQx2Ct8U0TbpR/oB1isGGzHAbEtjeWX6EUNtOYO8AQNOwoxI
01of4llyebQggEF7t1xc8g+CGyIap/gxKJM9TvN+14ck3npaLfFhkOoRE2eY
0IeM8igkMYIjcitown59KOitD82MFwPPheW4Tts+9LXh3ombPBjYGqiKvlTr
Q0rLnpPt6zDQveH6wJ/Uh56pb/yIE7y5+qGoxWQvUgg61V7MjQEPVv9AtLYX
VTYFahsTPGrLJzaY0YsuGxxo6+bC4FsiM/7NzV6kWzhQdpfg/B4vseune5GQ
oda4FcEJcmnx1sa9iPPd9NhWgoPPdYht3tKLZkKopPUEV7hIK7ev9CBuvaT1
XATHTEUo+xX3oK3rRs03EnwskKMscqkH2XdO18gTLMfvpJKr3IPSygvvHSJ4
5l6Nyv7xbsRVppcUT/A7KU3V8bRu5FkVND1GcHhmkuot5270qzco3Jq4/wGt
DWqyUt3ozkbmySqCJT5eUvvY1oU0TYtCDhLfP2TZrXYirgv9ujszMElwbhtL
fcW6C5WPjEY9JvQLPJ2vniDYhdIPPg10JPQ1m5HS0Kr6gZJrRbJVCf07BOY1
vAx/oOpp7V5hon6psY6aQsudaDFxqJe+HgMv6WrNzMJOhNvZyGsS9ebVeaI1
oNSJuJZcQ54T/vj2SUD72mgHCh0Qil0QwiDRykdbKrUDUbsv/jxO+EnZzULn
yKYOdInHz8OR8N/ibJ4O53s7wpVF7y1RMfgcLKl77347kjzrs/qC8Kv9g1nd
2g3tiE5yT9Yn/B1a/oiJL7aiqU16soZbiHp+04t1LWlFAjOj3823YmDV3voz
0r8VhWv4+DkR/SQxJfKkbfE7ereecpW9g9CDHvX34lIL2jgRkmxE9KfYVgX7
hLct6LT+yrsaTQyClKpzywJa0LZl64/ORD+bG/G6CC43o/6K8LiPRP93eVwt
T11uQhC/9RAQ+WDsKyFV+64JtZ8822Kxj8ijkBLf2cAm1PMwwtiJyJPLcRx5
w5VGtMXx8MAHIn82lp2PaF1pQHckZHCmC+Hvre8e05b/Q3P+QU4q1zDQ01nY
7xz4HxJjHs3WCiP0tVT/m738DT3xII/uu43BI9+XzhYrdWhGXFA2IwaD6uqH
8oGrtcgzT61IOgWDrV5BuT1rVWhjuYmJYDUGk6HFzkohVehNUMkJch0GJQnz
1IC/lag8hd9drpHIk0/nfKlclUgaVzEM+YHBVVEHphl3OSrNzeOfm8Xge6lB
+UseNgq/EsTVLE0CyQCX7jkhhMTk2sPeypEgKnCfZgy1DDn4hR3JUSTBuWCp
3i9S7xGdt3ykQocECqEfdUCzBMHX4fysAyTIjN4wouCci1ik0mX7cBKobxkK
iKnLQecX505pRJGAuq1YrrYtC1mE+2+SiiVBw47jwTCdgRTunPfdnEyCA5rP
lRQlk9EzWGxu+0CC+gLN/PUn3ZH5ySRjpWUSNF/OMlTPs8b/Mbav/sNFhidX
zMYOPL6EF8nfFpvkJUNDKlXM9nIE/v60Q0Y/8d6e0w9Qsjv5GJcu/p68U4oM
JTeziu2+Z+NGhdQJeZwMTkrmf+zuleFrYhld3cR8YJCQHr3wDOE9e8cc5aLJ
IHSDh2xpz8abDIZ7LseSYWzyVPKk+0d8/pjImHISGVIqZMtVb33GKdeYZFIB
GWi+6RuKK6rwLxfe54X0kWF1zO6Ls0w9Lt8abbTVhALzvNnKe13r8aN1Fku3
91BgXJovVj2zHn92/f2bRWsKtB0qPM6j1oCflm1XmHegQOFH0clUaMRrbXpU
7K5QwDPxO2nUqRmn2UrfrcymQB/L/pBnUhse13ch7rwMFQyHrjrXdbXhdZ5v
r/vsoMLD68kXlKTacaGkZfNrKsT89248fPxROx7X73g0fzcVPikGF7klduBt
PBlPrhyjQgqWQneK+4Grv9ib6v+ACurjvya2m/XiihdrMh0oIsB5jb9m6A/i
StTsB1lbaPBVUZ/q7TiIm86XPT2rQIPnL7R9q0IG8XpqQK+KJg1snu7S9ysf
xM2Fh/naLGiQF72pqmn/EJ4+ndIbT8zPnhd+d0efHMaVPDJavrFpMKLwGuO7
OYo7aPd/2O4hCh1pmz1n6yfwQ4qUW8FtYlDEn2WTMTeB75AU67EeFINYdz0d
J9ok7qHnyVCcEQPLnXZcdUcmcViiq6wK0KEsK+J+Rvckrhh9cGK9Lh2S8zlF
ThNTOL+wY/rXRDoUnBz6Oxw6g9eeaGH8OcWAIM9S1qGnc3i8zb7f3CISYP9M
5cjjuwt41luJ0ZUHUuB2q2ZdT/0y/uRltfW+xS3wOUxRMap2DT9u0jy62Xgb
nKAMfaId5QZDvcP6Ax/kYJ5ZZdjnxwOOXUkXnhTsgNdewksu3nwQFyB/XO6t
IvCGDF93iRMAmeoH+8TMVOB64rY99LgNkMHFUxl5Tg328YbsLI8QBN05x/ik
vRqQs+dC21SmMLyhiIRx+2qB7kNU8S2NBHxAeSvwSAdyXBpBbJgMw7OoIYnK
BLctdopGHAoc+Pww8lWKAbwZECg0n6HCrBQPqUYeh700PvlIbhrkeh52l15n
BH57NbVfconCwcjLeZwzxlCTMWdTsUxwxq7WHW0mcOby8mHpjXToOvVYsfmK
GTwy01y2FWBAdI2y7LigBbzMPvI/ZYIM8M9x5ZMQsYAS0SDNnWQGqN/N27xP
wgK+D330XGMwQEL39lLuDgsg37QeyFBgQJaJ2oFIMwu4Wenx9c9+Boyq+VwP
DLEAH4vkpBdxDCjweD1vzLGA66/L9amJxP6I8NbEFQuIoY+2XX3CAL8U7/nZ
dSzIHlEWsUknzv8Y3pRGYcHorfe3VosZYFr4SlNShQUnqlu9D3YyYO7ScKCJ
BwsuqK4Iv+8hWEWoN/siC64mbH4lP8iAT0PmweIBLEg84zq0MsGARsMVJ84t
FjSvnz+avsaA0nSnypI0Fgx4i/0m84iDodquCaVsFsy16cUFCYjD/ULS3pQC
FpAyr307QBaHl69EcmI+s2AzJfVcKU0cvKW0CjbUskApoGq9vLg48Eacmwtt
ZIF+33hajJQ4eEwVnfnbzoL//38Bz/bT6Vf7WPC/huS+jQ==
          "]], 
         Line[CompressedData["
1:eJwt2Hk0VuvbB3Ayh+LZz2xWVGaSOfsyDymFOhSiExWFyjxUNCByJDkUiiRK
IUQZ7idlihyVMmV+SKJMmem337Xev/b6rLXX2mvf9/f67nttmWO+dh4bODg4
hDk5OP7vam21yWRFhsHaV2lvvkY3Af2y8Cl+SQYr/2nwRivMBJRkfmRQmQzW
XNrHhtvCJrBpqWFRncRg+brJqWhsMIEPeZHPTm5gsIZyzPMDfxiDI/9vxpch
OuuDYLCTSo0xnGjomSp6QGe9OJCS5XjcGK6Y5Wd6ytFZidWsttQSIzjbvky6
hdFY4uU7N1QbAbxzYY6xMSpLRbiU4/P0blireVykx6CwsofbFbF4fRh+Pn3z
gACZZd375vcqWRe0snjbbwhirMxPoa9uj2mBgexHlbhFUZa7mloHo1gTxMM2
RcSPi7AO/DenxH6kAW3p6o6evZtZ19P7jFoG1eC/kyXfdlUKs57JnghuVlOB
3B0fdPZXC7LIv8j7LosrgtqdNr9zTQIsGxuHI4cPbgcZtd3d1Cd8rJWTAf3V
KXIw/sqMh7eYh7UYt6vou8UWEPOudA+K52K5GcxF0jfJwPo70sOps5ys7UkR
Z+1sJOFAqnwZzYuT9YKWzSGPS0KOh16d4TFO1nUND2NODUmw5jg2Em/HyeLf
3tDbSpOElF3Fcjt2crJsSMvn64clQPm+ba77HAdLnC0muS1CApwD4h99DORg
tYbbnnpWJg7ncSGHUwvryC0qsKd9txiYmqCrf4+uo/Z/+huy1MWAanGu3OXz
Oqr66l8bJCcGFfs6mXYl62hcc+uQobAYrLrkDOr5rqPOvtvNur1MuBJu4Cv0
bQ19pNeZD11gQsrL09cLv6wiUzn7vrVGBlTsfM/6XbaMlO4rJx0NpoMa7YYl
KXcZkWcKtBm+dMhbtmlTSVlG47PVrG4POqS+buk/EbiMDvPdjgiwp0OQbct6
l9YysjlDyxZQpYOWd7NBTfkSOrfrTErBNxqUZjdVXHu5iKZfOCv1utJA6Vos
PMhfRO68JNNbh2iQc8qqEaUtomoeJ/zAPhokqzV1LIYsIl1y+gB7Nw3O1zTO
e+ktIlO/+fdeEjTQ6G7QtK1cQDlbV+2ne6lQKFpfRKueRzcu7BH+fpwKdq6i
1gNP5hH7NM+LP85UmH/sPJx3Zx4leqxmSR2kgoHpLEUveB79CMgyCTOjQmOg
dJjzznl0n9T4NEueCgM9oWZZ+b/RRoNoiSfjFBDNVe1WSJlDI/veexWFUKB0
JvT87JU59CN6e9ivcxRwxOuFqs7PIdNmVqv2aQpkdjrjew/MoXm/PJztSgEF
wes5vkJz6LCOg2WBKQWM/dg+pVGzaGu5xO9FUQqc10vjMvSdQbX+wVVXSsiQ
nCz29ZDrDJoW9dDkfUaG0p8Zpb57Z5DMr/W0xDwyzGdne2QpziD/U3oqrAwy
BAsWNHCPTaMZl7bQ6zFkuPC1Jq7ZbRrZmAfnNB8lQ6aW0XG27TSyHNZZ6DlM
BpT4xmDNcBqZsHK1fx8kA4dZ46SKxDRS0LseaWxDhstPP9gmdU2hj8p+upa6
ZIi5wMac7KbQJXKFLgeFDHmdnhNnjaaQebHNiXsiZGjS+P72utoUEkhIiLIQ
IsPGb5MBVZumUAwfM+o5FxmY934W4im/0KFl24ezMxjIGZF13kf/RE792uGy
nzDQu3rUcsxrAnXmLnhr3MGgaTHioeueCUStExPZ9i8GjqfTN3xWnEDCjRdC
tiRjEGDfVfV64gfaEc6ZvjMBgyIZe/W7Pj8QM2NJqjgKg2015sx958YR+3Xp
FpkzGLxQ9wh6azeOahUbxJK8MDB9eLldb+c4OhxK79p4EoNj8ayEbXPfUXld
0APsbwwyD+txcQZ+R+qUHUFRThiQF5QnSkLGEP+/h5ifLTB44GVjpXB4DMXY
/OVZa4aBRp9X7n29MfR6NCWo3ASD/XWP3G6sfEOeTR+/V+AYxN2S+ewZ8Q15
WOwWZuhgwOQDjV6Xb6hUdtdlUy0M8kJd/7E3/IbQkHdNkCYG9e53reDPKOIV
TbnyWw2DDWqUGkbkKLKQ77Xdp4DBzQc7xRLdR5HXtpZf5dsxkKbZBfMajyJz
4WWHHdsw2L2eoDG7YRQpRZN8t2zFILiF/1HLlRFUslNryF8SAz7Yxm3iMYJy
D4sXiEtgkFJi5v7SbATZeRrpt4hhUHonSiyXdwR9VbTMN2Zg8Ovk6j8XY9go
x9fybTwZg/Zn6iL7PNnop3Gr3REMg1dznonipmyES5Zw7SRhcOXSh8SXf4bR
hsm0lrXNGHjV84rG9A4jv4G77KlNGNgKGdw8VDmMJnpWJSeFifVIzb05GziM
lsZ7ljmEMPjT2yNa6zCMEted0umCGLC3iCYlagwjNaa2m+5GDAoLw5KUfw6h
hFObbFP4MUj+XURabR5C1hn8oR/5MAjVH016lz+ENne5N9AImzbsv3XCYwi9
OqneVM2DwQ7ha5iWyRDKrHoUIUl4k33lLW6ZIRRPj3CI4cZgLnUK+7Q+iKLC
i/eucGHQ1SeXnPWV8JjpqSDCNVuPkP1eDaIbztqPVjdgkOOVmGyYOojud8bw
xRGOLaojCwcOohpn3euyhH3ml5N77AfR6Jil6htODOwN1CiP1QcRNaJ8/jRh
nSiP28GbB9F+xtUBKcKSjXcoFpMD6HZ18UQPBwZcm9puU5oH0PCp3WJZhMfs
eajsvAGkJ7n9tC/h1jS9lOfXBlB699l+c8Il/b7UyOMDiPceM2Ab4VS5hym2
xgMo1FtWWZRwhHc3VVJ6AC3isXzchOuOSal0rfSjS+K23ByEE3/GqgSW9yNR
Tv8tPIQPh86pYOf7UcHkwnGMsBzvUdUilX5kN9TdqEB46maT6t7xPsTRL267
h/ArCU218Yd9qHy4esGf8NX8TLVo9z4UOlVd+4jw/l0C6lsl+pAZj0TRMGHm
6/Pqrzt7EVO2B20n3n/Epk/dNbkXLZsvTgcSLuq01Fix7UVD5/3NWwmHHi/R
SBXsRZ/ybKtViPU1m5LYuavhK2obiT2USribb3anr+FXxA4Sm7pG7FfOLRdN
oeUetNpybkqQ2F9fqUbN/LIeJK2wA7tDmFs7Y9ewUg+6tPocfSDy0FrLp3Vp
rBvVnr1mFcaLQdq+c1oSOd1I4FfFb2UiTyqeFtp/iXWjV5z6Zc+I/C1OF2vP
felC0v9ebwwXwOBNhLjOzaQulKCpu25P5NXx9rROs0AXio8uaZMg8n357V09
fLEDLdwQJ0mJEPvZqnvLo6IDcQf7e28RxWBfV8ePuOAOVMvQrVQl5on5E8vo
XPyCXK7wG7oR81dEi/9zdukz4plHbdLEfFJlFRxTX35GzzMieo8zMQhTaiyq
CfmMSGuPBoqIeTY34j4muNyOpoeM37kR89/rFf42Z/kTkt5zU0Ga6AfjAKZE
86tP6HRR6fgDOaKPLlYETId+Qn7vTbNUiT7xT56TN1z5iBJVnky7Ev2zseZ0
bMfKB2R2I1FKQp3It+yrdPLyfyikqrqQBhjoas/vdQ/9DwlmFHxhGhPra6Px
5+lyK9q3i39OzhSDuwGP3S1W3qPFeB6SgyUGjY135ENXm1F5J71n8wEMZH3D
ivrXGxDPUFYWz3EMJi+XuytdbEBdu51VYzwxqEidJYX8qUfHDlwuIZ0i+qTW
O4DEUY8S79Hu4T4YhFOc9cw43yLXTkeupWAMvlQavH3MxUK1lbs5xv/BQDzk
WN+MEEJxSadrvyZhEB+6RzORVINU9GsVO25j4B0hMfBOogoJbRiaHbqLgcLl
19qgWYGkPWedDuVhkJ8g8E3BvQjlRLtEFNQS/S89EpL4/hnSCl8qZtRjQNpS
LtfcWYAeGFfdSGjC4MP2IxHwKw9RzF7o/dNG5F/zgZKieBbaLx3uNdGHQVup
Zgm/2wm0Rc1WhrpG9Kt/gaFGsS1+wdixcY2DDBlBZt/3p5/HX8jHUCe5yfAh
h0S194/Fq4475w0R31tv/RAlB7d0XKr8S9YOCTJUXCsod/jyFDcqI03I42Q4
qmS+5nCzBl+j5vX2EecDg9TchPn7CO+3/u4il0AGoSguERtHFv7JYLTf/xYZ
vk/+nTV54jU+cxj7rpJJhuy6rW/Vot/gopf0RDaXkoEckCtQXteAN52pKr44
SIbV7w7v3GXacPmOBCNZEwrMcj9VsfZow53eWyzFWFFgXIrnlkZ+G34/sur5
oi0FOg+WHeFS/4Af39qlMOtMgbLXlMkc+Ig32/WrOgRRwCfty+axo+042V7q
Rv1TCgxaOh70yezEkwfPJJ+WoYLhSLj7+95O/L3Py8hz26lwJzLrjJJEFy6U
uWx+SZU4/70avzp+twtPHnJxKtlNhVrFiBeead14J1deRtBhKmRvyqYdTf6K
azyyzgm+TQWN8d8T28wGcMWzTfnOojSYK8QL6fpsXIn09HaBNB1aFPVJfi5s
3HS25t4pBTo8eKQV0HCRjbeRQgZUNelgd09ZP/AtGzcXHuXptKBDcYJYw6e9
I3jur+yBFOL87HNmoS/BbRRX8sr73MqiwzeFwk0818ZwZ62h6m1eDOh+KOkz
3TaBH1QUjY7oZMIL3gK7vJkJfLs4td+WzYRbJ3S1j5IncS9dH7riFBNsdjhw
vP9rEoclmuoqnxjUFMQm5fVN4ooJByb4dcQgq2TuxdGJnzivsEtuS5oYlLqN
/Bm9PIU3u36mr/0tDmE+lZYH783gKXZ7FjgxSXC8r/pX+o15/Iuz8NzaO2nw
jG7a0N+2jGc8brTdsygLb64oKsY3r+NHTNrHJI3lwFV0pJbsxAmGuof0h6u3
waxeg+FgIBe49GaeyShVgEJf4aVjfjyQHCJ/RO6lMnBfHI08lswHIux3cnHZ
ahCZtsWKliwAeRxc9XHeGrCH++KOt7GCoDPjkpJprQnPrM50/swXhuei2BXO
AC3QuYPqWh9uBh4Qfcl3VweeHfsI1FERGJ1GHzJJ+uAp7aBoNCcK+9/ciXuS
vRueD/OVmU+RYDEhMpqoD7Am88jHcZKhyOfQCakoIwi01tR6zEGBA3H+xXNj
xtCUN2NXt0w4T7lju6MpnPRfPiS1kQa9f6crti+YwV0zzWV7PjokNKlsHY+z
gMdP//q3RpAOwc88eJi3LKCCEqa5Q4QOGjeKJffcsYAvI6991ul0YOrELBXl
WYDINdvhPCI3BSbq++PqLOBavVfL2l46jKmfiwz9YwHnLLIyHyXTodSrcNbY
3xIiC9/qk9KI+2OvdqSFWUIibawzPIMOgdl+s9NRlvD0mwpml0s8//XVTw9v
WsJYdFX0ajkdTMueaIoXWoJrY4ffgR46zJwfDTUZt4QzaivCVf2EVYUGnk5b
Qniq5BN5Nh1qR8wjGEuWkHbSY2Rlgg4fDVeOzvFZQTv/rFPuOh0qc4/WV8hZ
wbAfdUGEiwGG6soTSspWMNOpmxzGx4Ckss3W2ZpWsDn/Uut+EQY8foI9SzSx
AknRHO9KMgP8JHaVCuyxAqWQBn55BgO4Y71nLttZgf7g+MNECQZ4/Xxx8o+T
Ffz//wu4v5dGC3e3gv8BbCq7cg==
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PlotRange" -> {{(-2) Pi, 2 Pi}, {-6.283185050723043, 
         50.76159943235257}}, "Frame" -> {{False, False}, {False, False}}, 
       "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
       "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
       "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{411., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{(-2) Pi, 2 Pi}, {-6.283185050723043, 
     50.76159943235257}}, {{-6.283185307179586, 
    6.283185307179586}, {-6.283185050723043, 50.76159943235257}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8997506629712496`*^9, 3.8997506699964204`*^9}, 
   3.8997507025033484`*^9},
 CellLabel->"Out[1051]=",
 CellID->256275073,ExpressionUUID->"4e7502ee-86ad-48c8-9f99-15d636a5d6e2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Confirm that the slope is indeed unity at ",
 Cell[BoxData[
  RowBox[{
   StyleBox["x", "TI"], "=", "0"}]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "ed570023-ad9b-48de-8cf5-b6d4d15fa785"],
 ":"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.775569032362935*^9, 3.775569042022148*^9}, 
   3.7779148702157297`*^9},
 CellID->700662694,ExpressionUUID->"b66e5aca-dd0a-487a-9041-3934211532d4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"#", ",", "x"}], "]"}], "/.", 
    RowBox[{"x", "\[Rule]", "0"}]}], "&"}], "/@", "out"}]], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.775569008779991*^9, 3.775569029774448*^9}},
 CellLabel->"In[1044]:=",
 CellID->70632808,ExpressionUUID->"55d24978-3d99-4ecb-aff4-805fb17ef499"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1"}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.775569024986065*^9, 3.77556903028509*^9}, 
   3.775659524049831*^9, 3.7756596295261593`*^9, 3.776529148801647*^9, 
   3.776529322629979*^9, 3.898627207716029*^9, 3.89975059849707*^9},
 CellLabel->"Out[1044]=",
 CellID->542659924,ExpressionUUID->"3c570a3f-f5d2-429c-9220-f1246ef149b8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Duplicated items are treated the same:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.7756596329305153`*^9, 3.775659640189417*^9}},
 CellID->444986081,ExpressionUUID->"a2687098-5ec8-463b-9fff-5a86631beb32"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"6", ",", "7", ",", "7", ",", "7", ",", "8"}], "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Total", "[", "#", "]"}], "\[Equal]", "14"}], ")"}], "&"}]}], 
  "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.775658730148959*^9, 3.775658747520253*^9}, {
   3.7756590438565607`*^9, 3.775659044412951*^9}, {3.7756596525277853`*^9, 
   3.7756596527056847`*^9}, 3.898627188198241*^9},
 CellLabel->"In[1053]:=",
 CellID->991815813,ExpressionUUID->"2a029c60-13fd-407b-8659-f003aac3977e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"6", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "6"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.775658748232149*^9, 3.775658894579425*^9, 3.775658982885504*^9, {
   3.77565902072548*^9, 3.775659044907261*^9}, {3.7756591949370537`*^9, 
   3.775659233580648*^9}, {3.7756593450669947`*^9, 3.775659400072006*^9}, 
   3.7756595071964903`*^9, 3.7756596532496367`*^9, 3.77652915012943*^9, 
   3.776529324231215*^9, 3.8986272089147067`*^9, 3.8997507439514027`*^9},
 CellLabel->"Out[1053]=",
 CellID->33854908,ExpressionUUID->"c55abc0b-303c-44b6-97b1-4d7c6c979f39"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "a238f655-d1ba-4d8f-b9b8-7bdbb6646ef0"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->14107563,ExpressionUUID->"ad55efe8-6529-42f3-bf34-50fbab66cf0a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The main difference between ",
 Cell[BoxData[
  RowBox[{
   StyleBox["SelectPermutations", "InlineResourceFunction"], "[", 
   RowBox[{
    StyleBox["list", "TI"], ",", 
    StyleBox["crit", "TI"]}], "]"}]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "f5247221-36f1-402b-8fc0-e1d47fddc1c2"],
 " and ",
 Cell[BoxData[
  RowBox[{
   TagBox[
    ButtonBox[
     StyleBox["Select", "SymbolsRefLink",
      ShowStringCharacters->True,
      FontFamily->"Source Sans Pro"],
     BaseStyle->Dynamic[
       FEPrivate`If[
        CurrentValue["MouseOver"], {
        "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
        "Link"}]],
     ButtonData->"paclet:ref/Select",
     ContentPadding->False],
    MouseAppearanceTag["LinkHand"]], "[", 
   RowBox[{
    RowBox[{
     TagBox[
      ButtonBox[
       StyleBox["Permutations", "SymbolsRefLink",
        ShowStringCharacters->True,
        FontFamily->"Source Sans Pro"],
       BaseStyle->Dynamic[
         FEPrivate`If[
          CurrentValue["MouseOver"], {
          "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
          "Link"}]],
       ButtonData->"paclet:ref/Permutations",
       ContentPadding->False],
      MouseAppearanceTag["LinkHand"]], "[", 
     StyleBox["list", "TI"], "]"}], ",", 
    StyleBox["crit", "TI"]}], "]"}]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "48c447d9-10b9-4575-8ed6-038ef9a5163c"],
 " is the memory usage:"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.775659692231538*^9, 3.775659737034504*^9}, {
  3.777915104180867*^9, 3.7779151337974873`*^9}},
 CellID->771301361,ExpressionUUID->"acde014d-3d04-44c4-a3d6-ddb0bff5b1a9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MaxMemoryUsed", "[", 
  RowBox[{
   RowBox[{"result1", "=", 
    RowBox[{
     StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"3", ",", "13"}], "]"}], ",", "6", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Total", "[", "#", "]"}], "\[Equal]", "24"}], "&"}]}], 
     "]"}]}], ";"}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.7756597419331837`*^9, 3.775659859377911*^9}, 
   3.775659965227964*^9, 3.898627193741088*^9},
 CellLabel->"In[1063]:=",
 CellID->535666113,ExpressionUUID->"90003962-a32f-4327-a6c1-e0be21ea25ca"],

Cell[BoxData["76800"], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.77565978044046*^9, 3.775659822081428*^9}, {
   3.775659853998701*^9, 3.775659866096383*^9}, 3.775659977992035*^9, 
   3.7756600199457493`*^9, 3.776529154597158*^9, 3.776529328657302*^9, 
   3.8986272131614175`*^9, 3.8997509658672943`*^9},
 CellLabel->"Out[1063]=",
 CellID->27544576,ExpressionUUID->"6d2c51e4-a3c6-4122-a84d-58d4e2020341"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Using ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Select", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Select",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "1a9ea793-cb7f-4769-82d2-9db3a22b6143"],
 " and ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Permutations", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Permutations",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "8022d74a-020f-4ffd-9db0-b5b386c351f4"],
 " uses 500 times more memory:"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.775659958690896*^9, 3.775660003727075*^9}, {
  3.777914890455714*^9, 3.777914892938813*^9}},
 CellID->444708281,ExpressionUUID->"7585bdc1-c8e4-475e-8fa6-62fb2b5e8f84"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MaxMemoryUsed", "[", 
  RowBox[{
   RowBox[{"result2", "=", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"Permutations", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"3", ",", "13"}], "]"}], ",", "6"}], "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Total", "[", "#", "]"}], "\[Equal]", "24"}], "&"}]}], 
     "]"}]}], ";"}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.775659826770007*^9, 3.775659862367159*^9}, 
   3.775659967831942*^9},
 CellLabel->"In[1064]:=",
 CellID->887464862,ExpressionUUID->"3e83ec76-e0e7-402e-ab90-5f49cfef91c4"],

Cell[BoxData["37563192"], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.775659833819317*^9, 3.775659867629966*^9}, 
   3.775659978889728*^9, 3.775660020843718*^9, 3.776529158151636*^9, 
   3.776529329564918*^9, 3.898627215249345*^9, 3.899750968308219*^9},
 CellLabel->"Out[1064]=",
 CellID->141130879,ExpressionUUID->"ba74d64f-f99f-426a-ac6d-0920e0e6d922"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Verify that the results are identical:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.775660014046246*^9, 3.775660019525916*^9}},
 CellID->486162817,ExpressionUUID->"ad87b6cc-c941-4fdb-b881-574d5ac1fcc7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result1", "\[Equal]", "result2"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.775659839679294*^9, 3.775659844204294*^9}},
 CellLabel->"In[1065]:=",
 CellID->615462631,ExpressionUUID->"27305d48-9802-48fd-b5da-17643a346196"],

Cell[BoxData["True"], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.775659844726769*^9, 3.775659872379087*^9}, 
   3.775660021901587*^9, 3.7765291614553967`*^9, 3.776529330743194*^9, 
   3.8986272164723682`*^9, 3.8997509725188107`*^9},
 CellLabel->"Out[1065]=",
 CellID->86302315,ExpressionUUID->"4d933469-c713-4730-a0ea-b5712d5be3da"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "d4715abf-9936-4634-95b6-66c4ced64db7"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->14107564,ExpressionUUID->"575ba920-4532-42fb-a37c-f1d4fcc33440"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Head", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Head",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "55c83ebc-e09c-4db9-baf9-ffdfb09e9eae"],
 " does not have to be ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["List", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/List",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "db6a4c28-eec4-4ef0-b83b-3399078c105e"],
 ":"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.775659940349708*^9, 3.77565995308701*^9}, 
   3.77791491092492*^9},
 CellID->177535240,ExpressionUUID->"41364d4a-2ac4-485d-a982-3a094b6d0841"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "]"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Plus", "@@", "#"}], ")"}], "\[Equal]", "6"}], "&"}], ")"}]}], 
  "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.775564501355146*^9, 3.77556453064013*^9}, {
   3.775564595079977*^9, 3.775564596369431*^9}, {3.775564628426854*^9, 
   3.775564631573576*^9}, 3.8986271968174934`*^9},
 CellLabel->"In[1066]:=",
 CellID->661797484,ExpressionUUID->"5358031e-d959-4779-8d3c-6570e69976c5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "5"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"2", ",", "4"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"4", ",", "2"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"5", ",", "1"}], "]"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.77556451988704*^9, 3.77556463182666*^9}, 
   3.7755676679041758`*^9, 3.775567712707305*^9, 3.775567818332111*^9, 
   3.77565941046673*^9, 3.776529163330064*^9, 3.776529331852521*^9, 
   3.898627217703313*^9, 3.899750978216648*^9},
 CellLabel->"Out[1066]=",
 CellID->4477802,ExpressionUUID->"5346b332-1572-4e3a-a2d7-f195cee1243e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  StyleBox["SelectPermutations", "InlineResourceFunction"]], "Text", 
  "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "fefdef1f-df22-467e-942b-59d242a18d79"],
 " might take longer as it is written in higher-level code as compared to the \
implementation of ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Permutations", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Permutations",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "f1d9ec63-9429-47d0-b769-940d7d625f92"],
 ":"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.775660090968472*^9, 3.775660098838415*^9}, {
   3.7756601400967207`*^9, 3.7756601913190613`*^9}, {3.775660772370102*^9, 
   3.775660773132094*^9}, 3.777914921223103*^9},
 CellID->445973593,ExpressionUUID->"f96e0de9-a41a-4cfb-a776-8989acaf3294"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"MaxMemoryUsed", "[", 
   RowBox[{"time", "=", 
    RowBox[{
     RowBox[{"AbsoluteTiming", "[", 
      RowBox[{
       RowBox[{"result1", "=", 
        RowBox[{
         StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"3", ",", "13"}], "]"}], ",", "6", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Total", "[", "#", "]"}], "\[Equal]", "24"}], "&"}]}], 
         "]"}]}], ";"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<Time [sec]:\>\"", ",", "time"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Memory usage [bytes]:\>\"", ",", "%"}], "}"}]}], "}"}], 
  "]"}]}], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.7756597419331837`*^9, 3.775659859377911*^9}, 
   3.775659965227964*^9, {3.775660049700783*^9, 3.775660083250841*^9}, {
   3.775660118779077*^9, 3.775660124189692*^9}, {3.775660205971373*^9, 
   3.7756602250985403`*^9}, {3.77566028295162*^9, 3.775660290393875*^9}, 
   3.89862720069182*^9},
 CellLabel->"In[1067]:=",
 CellID->869163183,ExpressionUUID->"ec887f98-2e41-4ca2-8653-fc330f60bd25"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Time [sec]:\"\>", "3.1487261`"},
    {"\<\"Memory usage [bytes]:\"\>", "76800"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.775660067861252*^9, 3.775660096264962*^9}, 
   3.7756601377891083`*^9, 3.7756602380948133`*^9, 3.775660304651354*^9, 
   3.776529168387677*^9, 3.776529336205114*^9, 3.8986272219757886`*^9, 
   3.8997509844159756`*^9},
 CellLabel->"Out[1068]=",
 CellID->56459738,ExpressionUUID->"1abab16f-c336-4ec9-8ca8-568a61810409"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Using the built-in functions is faster at the expense of 500\[Times] more \
memory:\
\>", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.77566024669878*^9, 3.775660272888628*^9}, {
  3.777914945795113*^9, 3.7779149479544086`*^9}},
 CellID->686745089,ExpressionUUID->"75f3b4b2-75b9-4bfa-81c5-77bcd9476c47"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"MaxMemoryUsed", "[", 
   RowBox[{"time", "=", 
    RowBox[{
     RowBox[{"AbsoluteTiming", "[", 
      RowBox[{
       RowBox[{"result2", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Permutations", "[", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"3", ",", "13"}], "]"}], ",", "6"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Total", "[", "#", "]"}], "\[Equal]", "24"}], "&"}]}], 
         "]"}]}], ";"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<Time [sec]:\>\"", ",", "time"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Memory usage [bytes]:\>\"", ",", "%"}], "}"}]}], "}"}], 
  "]"}]}], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.775659826770007*^9, 3.775659862367159*^9}, 
   3.775659967831942*^9, {3.775660053118082*^9, 3.775660079464134*^9}, {
   3.7756601315275993`*^9, 3.7756601353531027`*^9}, 3.775660229163328*^9, 
   3.7756602943707857`*^9},
 CellLabel->"In[1069]:=",
 CellID->674295727,ExpressionUUID->"f38b2180-d3bb-4aff-82dd-159bacdd9d4e"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Time [sec]:\"\>", "0.8987349`"},
    {"\<\"Memory usage [bytes]:\"\>", "37562680"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.775660054335277*^9, 3.775660097146056*^9, 3.775660138701022*^9, 
   3.775660239000139*^9, {3.7756602757471437`*^9, 3.775660305548664*^9}, 
   3.77652917555011*^9, 3.776529337090541*^9, 3.898627224045477*^9, 
   3.8997509877837687`*^9},
 CellLabel->"Out[1070]=",
 CellID->504109667,ExpressionUUID->"95503ba9-e8aa-4352-a734-cf4634fb974c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Selecting subsets", "Section",
 CellChangeTimes->{{3.8998034837091384`*^9, 3.899803485880809*^9}},
 CellID->57462884,ExpressionUUID->"f012b046-8c6d-49ef-b73c-eb6d9f0cc60e"],

Cell[CellGroupData[{

Cell["Select subsets from {1,2,3,4,5} that add up to 10:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.774377556261836*^9, 3.774377571610763*^9}, {
  3.7743825672646627`*^9, 3.7743825749572763`*^9}},
 CellID->694507399,ExpressionUUID->"d35bf0dd-1622-4595-8cac-90e4a33e78d5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{
    RowBox[{"EqualTo", "[", "10", "]"}], "@*", "Total"}]}], "]"}]], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.774377514175353*^9, 3.774377539686349*^9}, 
   3.8986289091988754`*^9},
 CellLabel->"In[1074]:=",
 CellID->875714386,ExpressionUUID->"085ee258-2ac5-49e7-a18d-e0cf197096a7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.7743775399626503`*^9, 3.774377572599545*^9, 
  3.774382562333807*^9, 3.7743825923753223`*^9, 3.774383108881587*^9, 
  3.774383664600209*^9, 3.8986289784282913`*^9, 3.899751485943525*^9},
 CellLabel->"Out[1074]=",
 CellID->242003258,ExpressionUUID->"f41ef0aa-cf80-43e1-b1c5-6ac0e0387392"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "589d5318-6d61-49ce-bc4b-e1185620143a"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->112658320,ExpressionUUID->"98045c18-9cea-4110-abe1-a11a8bbbd2af"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Select subsets of length 2 to 4 that sum up to a prime:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.7743775973721*^9, 3.774377624079948*^9}},
 CellID->327143208,ExpressionUUID->"a432d77e-46b6-43b7-abb9-43ce5604527e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}], ",", 
   RowBox[{"PrimeQ", "@*", "Total"}]}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.774377581956209*^9, 3.774377591869701*^9}, {
   3.7743776266628532`*^9, 3.774377627761312*^9}, 3.898628910302684*^9},
 CellLabel->"In[1075]:=",
 CellID->283656556,ExpressionUUID->"b112bd39-babe-4936-8539-f902397204de"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4", ",", "5"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.77437758448147*^9, 3.774377592288989*^9}, 
   3.774377628288271*^9, {3.774382594017756*^9, 3.774382604215788*^9}, 
   3.774383665638774*^9, 3.898628978962482*^9, 3.8997514883851013`*^9},
 CellLabel->"Out[1075]=",
 CellID->121246890,ExpressionUUID->"03cb8aa8-0509-469c-b3dc-fb19d782ed30"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Select all subsets of length 2 that add up to 6:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.774377856274754*^9, 3.7743778645252533`*^9}},
 CellID->158433383,ExpressionUUID->"9faddb86-b75d-4ae8-9854-3d68d51f75dc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{
    RowBox[{"EqualTo", "[", "6", "]"}], "@*", "Total"}]}], "]"}]], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.774377841675405*^9, 3.774377854019011*^9}, 
   3.898628961576196*^9},
 CellLabel->"In[1076]:=",
 CellID->499374772,ExpressionUUID->"ad625bb7-7399-4152-80f4-cdc4ce40fee0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.774377849782387*^9, 3.7743778542105103`*^9}, 
   3.7743826085223103`*^9, 3.7743836678169823`*^9, 3.8986289801927896`*^9, 
   3.899751538139284*^9},
 CellLabel->"Out[1076]=",
 CellID->171051003,ExpressionUUID->"bc35552c-0ff9-4de6-90de-cd88bf0f9a89"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "fbd9f3ef-87a5-497c-ad6d-4553719bcf19"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->519906287,ExpressionUUID->"02a227e0-6dd8-4bd9-963f-82064f5cb603"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Select all subsets that add up to 0:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.774377856274754*^9, 3.7743778645252533`*^9}, {
  3.774377902691346*^9, 3.774377906025693*^9}},
 CellID->858830434,ExpressionUUID->"e3598301-1166-410a-8acd-19f923f8d0cc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", "3"}], "}"}], ",",
    "All", ",", 
   RowBox[{
    RowBox[{"EqualTo", "[", "0", "]"}], "@*", "Total"}]}], "]"}]], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.774377841675405*^9, 3.774377896589973*^9}, 
   3.8986289631204348`*^9},
 CellLabel->"In[1077]:=",
 CellID->634576773,ExpressionUUID->"8bb50304-9503-424c-8675-eac234fec677"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "0", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", "0", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", "3"}], "}"}]}], 
  "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.774377849782387*^9, 3.774377908556069*^9}, 
   3.774382617659729*^9, 3.774383668810137*^9, 3.89862898140742*^9, 
   3.899751539652976*^9},
 CellLabel->"Out[1077]=",
 CellID->226659544,ExpressionUUID->"5f87c149-ef5c-4e3d-b11b-8de196a62ca3"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "6065b032-532b-473f-bf31-e81e9f3fa6d6"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->490055446,ExpressionUUID->"34cb6a12-c051-4797-8ea3-545eeb95e1da"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Select all subsets of odd length that add up to a prime:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.774377856274754*^9, 3.7743778645252533`*^9}, {
  3.774377902691346*^9, 3.774377906025693*^9}, {3.774378907011655*^9, 
  3.774378913566503*^9}},
 CellID->535860945,ExpressionUUID->"5f361163-3e09-42bd-b368-1da38d92e3a0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "7", ",", "2"}], "}"}], ",", 
   RowBox[{"PrimeQ", "@*", "Total"}]}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.774377841675405*^9, 3.774377896589973*^9}, {
   3.774378891824779*^9, 3.774378898435511*^9}, 3.898628965480707*^9},
 CellLabel->"In[1078]:=",
 CellID->630622865,ExpressionUUID->"eb406a50-819f-47ab-8ad6-156a22481379"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "2"}], "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", "0", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "0", ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", "3"}], "}"}]}], 
  "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.774377849782387*^9, 3.774377908556069*^9}, {
   3.77437889899336*^9, 3.7743789152159243`*^9}, 3.7743826211880007`*^9, 
   3.7743836699801273`*^9, 3.8986289827357345`*^9, 3.8997515419697137`*^9},
 CellLabel->"Out[1078]=",
 CellID->313507277,ExpressionUUID->"1516dbfe-5038-4c48-9864-b03bc0bf4b38"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "e8427946-a239-4ac5-819e-5ef395d6c5f7"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->14107565,ExpressionUUID->"1c382a7b-9364-4700-aa32-9671ff68958e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Select the first 8 subsets that add up to a prime:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.774377856274754*^9, 3.7743778645252533`*^9}, {
  3.774378958793374*^9, 3.774378962816297*^9}, {3.7754935372817483`*^9, 
  3.775493549274748*^9}},
 CellID->792813693,ExpressionUUID->"00956277-227d-41b0-b8b3-c42cd6548b37"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", "All", 
   ",", 
   RowBox[{"PrimeQ", "@*", "Total"}], ",", "8"}], "]"}]], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.774377841675405*^9, 3.774377854019011*^9}, {
   3.774378935746251*^9, 3.774378950423832*^9}, 3.8986289674630723`*^9},
 CellLabel->"In[1079]:=",
 CellID->885845820,ExpressionUUID->"657ed7e0-b3ad-4e5c-8632-31de0eeb8ee4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "5", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.774377849782387*^9, 3.7743778542105103`*^9}, {
   3.7743789452190866`*^9, 3.7743789508251123`*^9}, 3.77438262853036*^9, 
   3.774383671888269*^9, 3.8986289841118546`*^9, 3.899751544580207*^9},
 CellLabel->"Out[1079]=",
 CellID->9609939,ExpressionUUID->"beabcbb4-bdd5-409c-b32f-23dffa58535c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find subsets that add up to 25:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.774380923158021*^9, 3.774380936623066*^9}},
 CellID->221442697,ExpressionUUID->"9d14a032-1cb3-4d80-87ba-ec0d6376794d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
  RowBox[{
   RowBox[{"Range", "[", 
    RowBox[{"6", ",", "13"}], "]"}], ",", "All", ",", 
   RowBox[{
    RowBox[{"EqualTo", "[", "25", "]"}], "@*", "Total"}]}], "]"}]], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.774380939157793*^9, 3.774380947925907*^9}, 
   3.8986289690058613`*^9},
 CellLabel->"In[1080]:=",
 CellID->874035320,ExpressionUUID->"84524238-7b20-425e-84bc-0484b11bda6c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"12", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "7", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "8", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "9", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8", ",", "10"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.7743809487705793`*^9, 3.774382631762011*^9, 
  3.774383672942788*^9, 3.898628985317514*^9, 3.8997515472324176`*^9},
 CellLabel->"Out[1080]=",
 CellID->272543979,ExpressionUUID->"7bda93af-4630-4f03-8253-cd9a6eb4979b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The main difference between ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Select", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Select",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "3c59ee35-60c6-4ec7-8ec9-a745d04d24a9"],
 " and ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Subsets", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Subsets",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "b3cd1063-c7a5-4b1c-9774-6595c927c891"],
 ", and ",
 Cell[BoxData[
  StyleBox["SelectSubsets", "InlineResourceFunction"]], "Text", 
  "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "519a67a4-3e2f-4f20-b3e7-2db529f48949"],
 " is the amount of memory used:"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.7726296304422207`*^9, 3.772629664458939*^9}, {
  3.774379347610264*^9, 3.7743793649880533`*^9}},
 CellID->132229044,ExpressionUUID->"80b39b9f-3ac9-44c7-a368-9c01c5bcb3a1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MaxMemoryUsed", "[", 
  RowBox[{"res1", "=", 
   RowBox[{
    StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"6", ",", "24"}], "]"}], ",", 
     RowBox[{
      RowBox[{"EqualTo", "[", "25", "]"}], "@*", "Total"}]}], "]"}]}], 
  "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.772629670778248*^9, 3.772629671369946*^9}, 
   3.774379337870599*^9, {3.774382643977002*^9, 3.774382644702136*^9}, 
   3.8986289701953135`*^9},
 CellLabel->"In[1081]:=",
 CellID->982577960,ExpressionUUID->"c8665ccb-92de-43bf-933b-3eb32df67b93"],

Cell[BoxData["62528"], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.7726296235280437`*^9, 3.772629671969466*^9, 3.772629715408601*^9, 
   3.774379339973384*^9, 3.7743807847608547`*^9, {3.77438263735252*^9, 
   3.774382658368615*^9}, 3.774383676625927*^9, 3.898628988163995*^9, 
   3.899751551147758*^9},
 CellLabel->"Out[1081]=",
 CellID->70864155,ExpressionUUID->"2a3253c6-f3bb-4954-887f-6510889dcde5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Compared to naive implementation, which requires roughly a 1000 times more \
memory:\
\>", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.7726296903922853`*^9, 3.772629709456338*^9}, {
   3.7743807903788853`*^9, 3.774380813852593*^9}, 3.778178311176044*^9},
 CellID->361259892,ExpressionUUID->"8f34e36b-c468-443d-ae6c-03f7552737cd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MaxMemoryUsed", "[", 
  RowBox[{"res2", "=", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Subsets", "[", 
      RowBox[{"Range", "[", 
       RowBox[{"6", ",", "24"}], "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"EqualTo", "[", "25", "]"}], "@*", "Total"}]}], "]"}]}], 
  "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{
  3.77437934183204*^9, {3.7743826476812143`*^9, 3.774382648958578*^9}},
 CellLabel->"In[1082]:=",
 CellID->823753171,ExpressionUUID->"83a871b1-a5e9-4272-9d96-cba576914a37"],

Cell[BoxData["65071816"], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.772629673452551*^9, {3.772629713806848*^9, 3.772629716740141*^9}, 
   3.774379343504323*^9, {3.7743807869974127`*^9, 3.7743808003930397`*^9}, {
   3.774382639578573*^9, 3.774382659670002*^9}, 3.774383677920752*^9, 
   3.8986289908461523`*^9, 3.8997515538620896`*^9},
 CellLabel->"Out[1082]=",
 CellID->877496089,ExpressionUUID->"7491dbe4-e628-4a7c-8742-f49e91f85f3c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Verify the result is the same:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.77438266300908*^9, 3.7743826728563538`*^9}},
 CellID->324048877,ExpressionUUID->"82380b98-5d36-4ce7-b837-10d620ee71ab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"res1", "===", "res2"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.77438265102254*^9, 3.7743826546547613`*^9}},
 CellLabel->"In[1083]:=",
 CellID->183907914,ExpressionUUID->"1ceecf07-8a91-4135-8b39-78ed48552035"],

Cell[BoxData["True"], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.7743826597498617`*^9, 3.774382674752039*^9}, 
   3.774383678022294*^9, 3.8986289921520443`*^9, 3.8997515565494585`*^9},
 CellLabel->"Out[1083]=",
 CellID->386927958,ExpressionUUID->"55b6e787-f154-41be-8858-db2101298239"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "590d7bb4-7489-4d74-a14d-0ba073f90cf7"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->14107566,ExpressionUUID->"194665b6-9bad-4da2-be1a-2cebdb7b7ae4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "With a criterion that is a tautology, ",
 Cell[BoxData[
  StyleBox["SelectSubsets", "InlineResourceFunction"]], "Text", 
  "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "fe85df87-4c1a-42d1-b05a-3e1baa802956"],
 " and ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Subsets", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Subsets",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "020bb735-2aaf-45b8-bf20-30beb7d3ccbf"],
 " give the same results:"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.7743831646282253`*^9, 3.774383165613443*^9}, {
   3.774383218747665*^9, 3.7743832578468533`*^9}, {3.774383300556407*^9, 
   3.774383302606948*^9}, 3.775493571076748*^9},
 CellID->273207191,ExpressionUUID->"7f52d5cf-95c4-449f-9f10-d831ec30cbd3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
   RowBox[{
    RowBox[{"Range", "[", "5", "]"}], ",", 
    RowBox[{"True", "&"}]}], "]"}], "\[Equal]", 
  RowBox[{"Subsets", "[", 
   RowBox[{"Range", "[", "5", "]"}], "]"}]}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.774383124585257*^9, 3.7743831608382473`*^9}, {
   3.7743832633529577`*^9, 3.7743832703549023`*^9}, 3.898628972313793*^9},
 CellLabel->"In[1084]:=",
 CellID->1112728,ExpressionUUID->"e6070dde-e791-46f7-888a-f855f4278204"],

Cell[BoxData["True"], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.774383136530876*^9, 3.7743831612961407`*^9}, {
   3.774383266376502*^9, 3.774383270711432*^9}, 3.774383303641717*^9, 
   3.774383682922467*^9, 3.8986289934246645`*^9, 3.89975155882432*^9},
 CellLabel->"Out[1084]=",
 CellID->381398679,ExpressionUUID->"672e0de6-7ad7-4e17-828d-902e95869d9f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  StyleBox["SelectSubsets", "InlineResourceFunction"]], "Text", 
  "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "c0c5c56a-6c6c-4672-a3e2-826c4dd61def"],
 " might not be able to return the number of elements that are requested:"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.7743811090220003`*^9, 3.774381126724887*^9}, {
  3.7743826862521563`*^9, 3.774382697600087*^9}, {3.774383471964933*^9, 
  3.7743834779987783`*^9}},
 CellID->306503519,ExpressionUUID->"555c3576-ad29-4208-8203-c50ea6f5d245"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
  RowBox[{
   RowBox[{"Range", "[", "5", "]"}], ",", "All", ",", 
   RowBox[{
    RowBox[{"EqualTo", "[", "8", "]"}], "@*", "Total"}], ",", "5"}], 
  "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.774381098378119*^9, 3.7743811032164707`*^9}, {
   3.7743811955738783`*^9, 3.774381201752266*^9}, {3.7743827127951603`*^9, 
   3.774382744158292*^9}, 3.8986289737215967`*^9},
 CellLabel->"In[1085]:=",
 CellID->999001902,ExpressionUUID->"b096e59e-ff57-41e4-82db-973fc7915a7a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.774381103686401*^9, 3.774381202198485*^9, 3.774381255469967*^9, 
   3.774381356640648*^9, {3.774382698578134*^9, 3.7743827444732037`*^9}, 
   3.7743833149168043`*^9, 3.774383473640765*^9, 3.774383684739236*^9, 
   3.898628994693178*^9, 3.8997515614040847`*^9},
 CellLabel->"Out[1085]=",
 CellID->185246950,ExpressionUUID->"fd816349-f302-4b6e-bcf9-da8aef78aee4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find subsets that add up to 0:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.774381620287119*^9, 3.7743816282503433`*^9}},
 CellID->90617371,ExpressionUUID->"eb3df44c-82f1-47e5-8470-e0d8346da39a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sets", "=", 
   RowBox[{
    StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"-", "7"}], ",", "7"}], "]"}], ",", "All", ",", 
     RowBox[{
      RowBox[{"EqualTo", "[", "0", "]"}], "@*", "Total"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Short", "[", "sets", "]"}]}], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.774381633867979*^9, 3.774381720649877*^9}, {
   3.77438179319016*^9, 3.774381812143701*^9}, 3.8986289752821407`*^9},
 CellLabel->"In[1086]:=",
 CellID->760328926,ExpressionUUID->"ec29e0f7-3977-4e72-9c74-7abbf30bd7f8"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{"{", "0", "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "1517", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "7"}], ",", 
      RowBox[{"-", "6"}], ",", 
      RowBox[{"-", "5"}], ",", 
      RowBox[{"-", "4"}], ",", 
      RowBox[{"-", "3"}], ",", 
      RowBox[{"-", "2"}], ",", 
      RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", "3", ",", "4", 
      ",", "5", ",", "6", ",", "7"}], "}"}]}], "}"}],
  Short]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.774381629319241*^9, 3.774381673123691*^9}, {
   3.7743817044773073`*^9, 3.774381721065008*^9}, {3.774381793599496*^9, 
   3.7743818127478447`*^9}, 3.774382747724327*^9, 3.774383317482757*^9, 
   3.774383686985428*^9, 3.898628996052253*^9, 3.899751574419077*^9},
 CellLabel->"Out[1087]//Short=",
 CellID->1214865,ExpressionUUID->"45a448a2-1394-41ff-a842-950a3ef5d362"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualize the lengths of the lists:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.7743817794255047`*^9, 3.774381789402781*^9}, {
  3.7743818477074833`*^9, 3.774381847781249*^9}},
 CellID->809946818,ExpressionUUID->"2a5fb8af-3b25-4abe-9b79-25c80da31a83"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Length", "/@", "sets"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.774381679403244*^9, 3.7743816864694767`*^9}, {
  3.774381826625986*^9, 3.7743818352648973`*^9}},
 CellLabel->"In[1088]:=",
 CellID->628177917,ExpressionUUID->"c9a67940-8c8f-47db-b3fb-ef46a1054d0c"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.0055000000000000005`], AbsoluteThickness[2], 
         LineBox[CompressedData["
1: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
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
          Annotation[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.0055000000000000005`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1: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
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0., 1520.}, {0, 15.}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0., 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              PointSize[0.0055000000000000005`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0., 1520.}, {0, 15.}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0., 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
          "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             PointSize[0.0055000000000000005`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0., 1520.}, {0, 15.}}, 
        "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0., 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.0055000000000000005`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentSet", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 1520.}, {0, 15.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.7743816758186827`*^9, 3.7743817224137497`*^9}, {
   3.774381795222584*^9, 3.774381835626437*^9}, 3.77438275208463*^9, 
   3.774383318260276*^9, 3.774383688634159*^9, 3.8986289973046284`*^9, 
   3.8997515766784544`*^9},
 CellLabel->"Out[1088]=",
 CellID->552668493,ExpressionUUID->"c03f1bd3-8a73-496c-a505-aa7eab72255a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Selecting tuples", "Section",
 CellChangeTimes->{{3.8998034939925566`*^9, 3.8998034959893866`*^9}},
 CellID->289460114,ExpressionUUID->"cb2826a3-be44-4864-967d-6cfe95cef84e"],

Cell[CellGroupData[{

Cell["Find out for which 2-tuple the sum is a prime:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.772560838695931*^9, 3.772560867647614*^9}},
 CellID->806991552,ExpressionUUID->"46595f70-1aa2-4f75-a735-8ac0a369266b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SelectTuples", "[", 
  RowBox[{
   RowBox[{"Range", "[", "10", "]"}], ",", "2", ",", 
   RowBox[{"PrimeQ", "@*", "Total"}]}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.772560169898979*^9, 3.7725603348923473`*^9}, {
  3.772560535903418*^9, 3.7725605499799557`*^9}, {3.772560804010477*^9, 
  3.772560830351927*^9}, {3.8986282672093997`*^9, 3.8986282696925507`*^9}},
 CellLabel->"In[1089]:=",
 CellID->777243378,ExpressionUUID->"0ceca8dd-2329-4213-a039-750abf393f27"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "9"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.772560181084918*^9, 3.772560287787828*^9}, {
   3.772560327593536*^9, 3.7725603351983356`*^9}, 3.772560418889901*^9, {
   3.772560530285694*^9, 3.772560550932457*^9}, {3.772560819766128*^9, 
   3.7725608306922693`*^9}, 3.772560869515587*^9, 3.772568343227582*^9, 
   3.772568772360887*^9, 3.772629527836937*^9, 3.8986282700030937`*^9, 
   3.8997516451754384`*^9},
 CellLabel->"Out[1089]=",
 CellID->24878681,ExpressionUUID->"508bc9e3-4fb7-4046-91e3-9c1ce88c23e2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Only get the first five:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.7725608886651154`*^9, 3.7725608936419907`*^9}, {
  3.774373154577928*^9, 3.774373156681644*^9}},
 CellID->962257849,ExpressionUUID->"14b50fe8-cbe1-433a-a932-3d6c7a387d9d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SelectTuples", "[", 
  RowBox[{
   RowBox[{"Range", "[", "10", "]"}], ",", "2", ",", 
   RowBox[{"PrimeQ", "@*", "Total"}], ",", "5"}], "]"}]], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.772560882315424*^9, 3.7725608829022818`*^9}, 
   3.8986282753509865`*^9},
 CellLabel->"In[1090]:=",
 CellID->574613800,ExpressionUUID->"96d120b1-8fd8-4e51-9de2-364bb8d95f57"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "10"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.7725608840518217`*^9, 3.772560895589939*^9}, 
   3.772568344151428*^9, 3.7725687729580717`*^9, 3.772629529325654*^9, 
   3.898628276250498*^9, 3.8997516493280225`*^9},
 CellLabel->"Out[1090]=",
 CellID->22940605,ExpressionUUID->"15dc1200-c68e-4838-b087-3d71514fc082"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find the first 15 three-letter palindromic lists:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.772629550274045*^9, 3.772629563747054*^9}, {
  3.7726296033890467`*^9, 3.772629603748204*^9}, {3.7743731655642247`*^9, 
  3.7743731673291416`*^9}},
 CellID->817657987,ExpressionUUID->"96f180d7-b267-46ae-a545-665121cb8aaf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SelectTuples", "[", 
  RowBox[{
   RowBox[{"CharacterRange", "[", 
    RowBox[{"\"\<a\>\"", ",", "\"\<e\>\""}], "]"}], ",", "3", ",", 
   RowBox[{"PalindromeQ", "@*", "StringJoin"}], ",", "15"}], "]"}]], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.7725683636034107`*^9, 3.7725684402232647`*^9}, 
   3.772629612092914*^9, 3.8986282877921963`*^9},
 CellLabel->"In[1091]:=",
 CellID->88400611,ExpressionUUID->"e20a305b-6504-409b-93d1-27399e992ac1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"a\"\>", ",", "\<\"a\"\>", ",", "\<\"a\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"a\"\>", ",", "\<\"b\"\>", ",", "\<\"a\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"a\"\>", ",", "\<\"c\"\>", ",", "\<\"a\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"a\"\>", ",", "\<\"d\"\>", ",", "\<\"a\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"a\"\>", ",", "\<\"e\"\>", ",", "\<\"a\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"b\"\>", ",", "\<\"a\"\>", ",", "\<\"b\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"b\"\>", ",", "\<\"b\"\>", ",", "\<\"b\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"b\"\>", ",", "\<\"c\"\>", ",", "\<\"b\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"b\"\>", ",", "\<\"d\"\>", ",", "\<\"b\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"b\"\>", ",", "\<\"e\"\>", ",", "\<\"b\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"c\"\>", ",", "\<\"a\"\>", ",", "\<\"c\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"c\"\>", ",", "\<\"b\"\>", ",", "\<\"c\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"c\"\>", ",", "\<\"c\"\>", ",", "\<\"c\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"c\"\>", ",", "\<\"d\"\>", ",", "\<\"c\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"c\"\>", ",", "\<\"e\"\>", ",", "\<\"c\"\>"}], "}"}]}], 
  "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.772568401049097*^9, 3.7725684406116247`*^9}, 
   3.7726295343540792`*^9, {3.7726296053209476`*^9, 3.772629612517418*^9}, 
   3.8986282886796703`*^9, 3.8997516540595984`*^9},
 CellLabel->"Out[1091]=",
 CellID->264187089,ExpressionUUID->"085173c3-0f36-49d3-9204-f0a0dc461347"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find vectors for which the norm is an integer:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.772560565558001*^9, 3.772560572703558*^9}},
 CellID->834775918,ExpressionUUID->"ca05bbcc-ac52-4d4c-a311-b766c231f44f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SelectTuples", "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"-", "100"}], ",", "100"}], "]"}], ",", "2", ",", 
     RowBox[{"IntegerQ", "@*", "Norm"}]}], "]"}], "//", "Point"}], "//", 
  "Graphics"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.77256058780375*^9, 3.772560609761799*^9}, 
   3.8986283045498886`*^9},
 CellLabel->"In[1092]:=",
 CellID->283080979,ExpressionUUID->"06d46076-3e1e-42b7-91b3-157ef90d2fd9"],

Cell[BoxData[
 GraphicsBox[PointBox[CompressedData["
1:eJx92fuXVlUdx/GtggqiTDRjY07TkJNOE6NTkqBNAYaGojYqlYkXkn6uv6P/
IbtqeeliKV28DZplkFYaKuaFySRNEQEFQrRpf1bv95rdWmfNrHXWa+19zpnn
OWffvvv7LL3pG1d9/dhSyjePKyV+a2ZmZks9YqG8vnpzdU89bqY+9la/Tfk7
+N3qr+sRd+LL6PkBHMF11e9x/vv4A7ylel89bmnKF1VvrT5Sj1upjxPVH1b/
UI/4FyzUj+PK6o+ov636YD1ua8oXVm+nfAfeiT+u3lWP+BC+gG+h152MZ+Aq
nKz+hOt+ij9D//ddPF98Fvei1y3Bs3ACN1R/znW/wLurz9fj7qY8XL2n+mg9
7qE+nl+1D2yhHbdwfgvtFr9W/SX1v0LbPk7hdnwJX0ev78NBPA/X4Kbqb7j+
3uqr9bi3KfdX7SP3UR+vq95ffbwe91Mfz60+QNm2f7ApX1P1u09RP0U/3Uq/
2kr9VvqVfeEh2i3uw8L5HpzAtNPDnP8t2qdt+0ea//lXnMZX8CB6/0l4Gg7h
GK7CSdxY/R33/x7tE4825cuqjq34NO7CwvmlOIrXVrfx3rZx3Tbem31jO/Xb
ec9/pPzYzP/6/2NNOf3dNn2c+ri2+ifKf0bnANvM7xCfxz14AL3vFOzFYVyB
qzHP9wT3PYm2VXwZX0XP9+MApl/s4H3u4LodvM+nKPvO4060fgQzvz1DvXOw
Y3hnc+9LeBi9fgEO4iiux4xH5yTb5lnuj8sx/etv1D+HzkG++7gb96PXLcbT
cRwvrzrnxrexUL8IM75epN4+6rvd1dQvw7w3x9Y07TXNddO01zTt9HfqndN8
l3Efer4HRzD9+x+cd220j8TX0fN9OIZ5/76z3Vy3m/75T8rODa805Xxv5077
os8Y9+IhPIKF+07AhbgEh3AML67+i/teQ+d8ny3uQc/34gDmPRlzOEb3NPfu
x8J1i7EPx3Fz9Q2ucw31Wfc29f2Yfvsm9c7htuk++tu+5vwiHMTMr/bl/c13
/TcWzp+IvZj2cw46wHUHeA5ji7eoj+nf9v23m+92GI9i4br5uAB7MPGJa8hB
rj9If7EvHKL+EO/JOeNw85mF+kWY/u4zx3ewUH88pt3sa0c4f4TPeae5t1DO
e/PZjlJ/lM99t/pePd6lPtbQtlj3HvVxXvU/lGcwf8a+xrpdMW6cK2aNxqbG
oG3MGeeKMeNcMWLsivGisZwxW1eMFtuYKho7GSu1MVKcmpmNeaKxTVcME7ti
imisYCzg2t+u+dG1vWtNj11rbnTtbNfM2K6J0TWra42KrintGhJdE9o1ILZz
enRubufk6JzaNUdG57R2zortnBSdS5wrnBsc845lx65j1DHoWHNsOZYcO46V
rjGSv2PwWDwO5+F8PB5PwBNxAS7Ek3ARnoyn4GLswffhEnw/9mIfnoofwH48
DT+Ip+MAfggH8cM4hEvxI3gGDuNH8Uw8C0fwYziKH8dlOIZn4zk4jp/AT+K5
uBw/hefhClyJ5+MF+GmcwM/gZ3EVrsY1eCF+DtfiRXgxfh7X4SV4Ka7Hy/By
vAK/gJN4JV6FV+MG/CJ+Cb+M1+BX8FrciNfh9XgD3oib8Kt4E27G7Iu7xoZr
keV5HK5FhXLOuVY7hmLGhWumYypmPBmbOcZiP+eMNVw7C/Xem3FlzG9s4Nhc
wOfG9FtjP8fsQj7HPadjOE5wrzG5sZIxgmt24br5zWfFHsy4MpfinBDTzu7R
nCPiOM/kHsLY0FijcN5n78VhPtO9urG7sVJpvlMcxIyLdi4yN2OMbH0/pv+2
c5W5NPeaxsLGhl7nd+3DcdxMnbkU9wzGwqW5Jw5gxmHX3GhOxT2qex9jZGNA
YzTvs8/ZJ3zmIRzDzAfmJpyDY/pLOxe797M8zHc3h+je2T1DaZ5tgM+Lm8r/
z+XmmtzjGrt73rYdwbyndu43p+Lex3qfNc9hDiS6hy/UL8PMw+3aYa7QmNx6
x8AG3oG5O3MS7v3cQxSus0/77sYx82rX2mQu0RyL9ctxkndi7tZcoLkH97jG
/oXrnTt8p6O4HtM+7Vpo7sjcQ2nuGeW9tWtl4rJlTTnv1lyXe2b3pq6p9kX7
SEy7da215o7N9Zm7MifhXtO9mvc5FzlWbYMVuBqz/nSt5eYqLa+lLcyxlKZt
2rXeHKrldXymuavSfIeVZTYnbu5oFxbO21d99/m+iR3MFRfKWbe7Yglz8+ao
zYGa8zKnYo7Cvaf3u5Y4RwyhbbYKJzHreFfsYg7eHKh7dc/3NP8rZrytLrO5
vlJm28zctDHQGt5zYiF/QyiUE2+0sZG5Sstp28RK/rZRKCcOyVxpTqVQTr9t
Yyl/Q5lCc6jmmsyleL1zv3ObfcRn2FS6YzN/CzIXaL1jOXFP+oC54kI5fSNz
jrm7QjnjoSu28zcSc9TmEs3NeJ1rqXOTfSDtNlds6G8k5uDNFZpT8TpjDOde
+0Q+Y67Y0t8QLKcPtLGmOXFzx9Y7F2SMbSyzuflCOc+XPuFvG4Vy+spcsaq/
oZi7NYfoeddI5+L0ga7Y1lya5cxraXN/CyqU0xf+C5AC+pk=
   "]]]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.772560575788533*^9, 3.7725606104735947`*^9}, 
   3.772629620279973*^9, 3.8986283058261824`*^9, 3.899751659924828*^9},
 CellLabel->"Out[1092]=",
 CellID->104575,ExpressionUUID->"30252242-88aa-4aa4-9b50-3594ee579d0e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The main difference between ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Select", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Select",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "246a863b-7728-430f-b02c-a7fa0e622fa4"],
 " and ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Tuples", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Tuples",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "b18b4e31-c785-41d8-9cc1-f8e79ea01f49"],
 " and ",
 Cell[BoxData[
  StyleBox["SelectTuples", "InlineResourceFunction"]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "4715e53c-bfa8-4f83-8de8-8a0419e9dfdd"],
 " is the amount of memory used:"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.7726296304422207`*^9, 3.772629664458939*^9}, {
  3.774373207290767*^9, 3.7743732347630005`*^9}},
 CellID->405355337,ExpressionUUID->"5022c6ce-4125-4a81-ba93-631a93cd03a6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MaxMemoryUsed", "[", 
  RowBox[{"SelectTuples", "[", 
   RowBox[{
    RowBox[{"Range", "[", "10", "]"}], ",", "5", ",", 
    RowBox[{
     RowBox[{"EqualTo", "[", "30", "]"}], "@*", "Total"}]}], "]"}], 
  "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.772629670778248*^9, 3.772629671369946*^9}, 
   3.8986283222064795`*^9},
 CellLabel->"In[1093]:=",
 CellID->811262678,ExpressionUUID->"155026ff-7b6c-4330-9930-1fc3bc6d336c"],

Cell[BoxData["1049416"], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.7726296235280437`*^9, 3.772629671969466*^9, 
  3.772629715408601*^9, 3.898628327190708*^9, 3.89975167027073*^9},
 CellLabel->"Out[1093]=",
 CellID->9194802,ExpressionUUID->"4ae735af-e8fb-425a-98e9-82ebeadf0293"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compared to naive implementation:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.7726296903922853`*^9, 3.772629709456338*^9}},
 CellID->376441899,ExpressionUUID->"abb2d6ae-f39a-4d32-bd66-8f6c13aa36c3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MaxMemoryUsed", "[", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Tuples", "[", 
     RowBox[{
      RowBox[{"Range", "[", "10", "]"}], ",", "5"}], "]"}], ",", 
    RowBox[{
     RowBox[{"EqualTo", "[", "30", "]"}], "@*", "Total"}]}], "]"}], 
  "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellLabel->"In[1094]:=",
 CellID->695357144,ExpressionUUID->"f872ea36-d88f-4d7a-ab8e-9d8431fb44e8"],

Cell[BoxData["21711208"], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.772629673452551*^9, {3.772629713806848*^9, 3.772629716740141*^9}, 
   3.8986283299944687`*^9, 3.899751672441455*^9},
 CellLabel->"Out[1094]=",
 CellID->11269696,ExpressionUUID->"f8e90af1-7239-46dc-990f-2cb92780f7ba"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The length of the results might be smaller than the argument ",
 Cell[BoxData[
  StyleBox["m", "TI"]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "0f6eb69f-4175-405f-86e9-0e2b4cbdfe9f"],
 ":"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.772629935083609*^9, 3.77262995964095*^9}, {
  3.772629991594735*^9, 3.772630002309466*^9}},
 CellID->449563358,ExpressionUUID->"82deaa7c-4bcc-45ef-8672-b79fb5edb96a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SelectTuples", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], ",", "3", ",", 
   RowBox[{
    RowBox[{"EqualTo", "[", "1", "]"}], "@*", "Norm"}], ",", "10"}], 
  "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.772629905261765*^9, 3.7726299223545437`*^9}, 
   3.8986283453916645`*^9},
 CellLabel->"In[1095]:=",
 CellID->168888283,ExpressionUUID->"fe283606-6f86-481e-8d84-3f9ecdab1f90"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.772629920099832*^9, 3.772629923277173*^9}, 
   3.8986283462813115`*^9, 3.899751674141452*^9},
 CellLabel->"Out[1095]=",
 CellID->83774134,ExpressionUUID->"fdb97683-43b0-4121-a84d-8969373cddd1"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Eulerian Numbers", "Section",
 CellChangeTimes->{{3.899803506821722*^9, 3.899803510544284*^9}},
 CellID->404991189,ExpressionUUID->"5f70f9f5-4da6-49fb-9328-ec9669282558"],

Cell[CellGroupData[{

Cell["Eulerian Numbers", "Subsection",
 CellChangeTimes->{{3.8998046047482033`*^9, 3.8998046072869368`*^9}},
 CellID->179141702,ExpressionUUID->"573857fb-bcbe-4adc-ad35-6179b63825c3"],

Cell[TextData[{
 "Eulerian numbers of the first kind are written something like ",
 Cell[BoxData[
  RowBox[{"\[LeftAngleBracket]", GridBox[{
     {"n"},
     {"m"}
    }], "\[RightAngleBracket]"}]], "Input",
  CellChangeTimes->{{3.899754511714775*^9, 3.899754525131752*^9}},
  ExpressionUUID->"b49cae19-d5dd-4d01-b787-d0245d0e8b87"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.8998046764448786`*^9, 3.899804684939869*^9}},
 CellID->14992587,ExpressionUUID->"963b398e-1bb9-435a-a6c4-3c2fb3a14fbf"],

Cell[CellGroupData[{

Cell["The table of Eulerian numbers up to 10:", "MathCaption",
 CellChangeTimes->{{3.8983652566500874`*^9, 3.8983652679173603`*^9}, {
  3.8997543826100793`*^9, 3.8997543830621758`*^9}},
 CellID->537854770,ExpressionUUID->"9e3281a5-11c5-463b-b3ed-b38727ee90e4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"EulerianNumber", "[", 
      RowBox[{"n", ",", "k"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "n"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8983652769570837`*^9, 3.898365280619089*^9}, {
  3.8997526813472567`*^9, 3.8997526953987074`*^9}},
 CellLabel->"In[2542]:=",
 CellID->400353117,ExpressionUUID->"066599f8-a35d-452b-ae69-5503100c7113"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "", "", "", "", "", "", "", "", ""},
    {"1", "1", "", "", "", "", "", "", "", ""},
    {"1", "4", "1", "", "", "", "", "", "", ""},
    {"1", "11", "11", "1", "", "", "", "", "", ""},
    {"1", "26", "66", "26", "1", "", "", "", "", ""},
    {"1", "57", "302", "302", "57", "1", "", "", "", ""},
    {"1", "120", "1191", "2416", "1191", "120", "1", "", "", ""},
    {"1", "247", "4293", "15619", "15619", "4293", "247", "1", "", ""},
    {"1", "502", "14608", "88234", "156190", "88234", "14608", "502", "1", ""},
    {"1", "1013", "47840", "455192", "1310354", "1310354", "455192", "47840", 
     "1013", "1"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.8997526858111267`*^9, 3.8997526957482176`*^9}, 
   3.899754415849376*^9},
 CellLabel->"Out[2542]=",
 CellID->283072746,ExpressionUUID->"6b0059cf-6836-47bb-a182-a09bddf39a43"]
}, Open  ]]
}, Open  ]],

Cell["\<\
The combinatorial interpretation of Eulerian numbers is they give the number \
of permutations of the numbers 1 to n in which exactly k elements are greater \
than the previous element (permutations with k \"ascents\").\
\>", "MathCaption",
 CellChangeTimes->{{3.8998047732854714`*^9, 3.8998048050438623`*^9}},
 CellID->132269626,ExpressionUUID->"8bd7f09b-00ea-42a2-93df-a713182a63d5"],

Cell[CellGroupData[{

Cell["Let's manually verify some of the triangle.", "MathCaption",
 CellChangeTimes->{{3.8998048064630423`*^9, 3.8998048133011637`*^9}},
 CellID->301311780,ExpressionUUID->"5d00bc42-527e-4a6b-94ae-b06743a3e412"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ManualEulerianNumber", "[", 
   RowBox[{"n_", ",", "k_"}], "]"}], ":=", 
  RowBox[{"Length", "[", 
   RowBox[{"SelectPermutations", "[", 
    RowBox[{
     RowBox[{"Range", "[", "n", "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"PermutationAscents", "[", "#", "]"}], "]"}], "===", "k"}], 
      "&"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.899804816777139*^9, 3.899804862842986*^9}, {
  3.899804919233406*^9, 3.899804920654252*^9}},
 CellLabel->"In[1578]:=",
 CellID->126412119,ExpressionUUID->"6d70c1e7-73c3-4344-adf6-3575d6b66466"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ManualEulerianNumber", "[", 
      RowBox[{"n", ",", "k"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "n"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8998048643889613`*^9, 3.8998048733220644`*^9}, {
  3.8998049053126884`*^9, 3.899804942942519*^9}},
 CellLabel->"In[1581]:=",
 CellID->510581302,ExpressionUUID->"66f9de82-7fdd-4f88-8e07-c05373d809ac"],

Cell[BoxData[
 TagBox[GridBox[{
    {"0", "", "", "", "", "", ""},
    {"1", "0", "", "", "", "", ""},
    {"4", "1", "0", "", "", "", ""},
    {"11", "11", "1", "0", "", "", ""},
    {"26", "66", "26", "1", "0", "", ""},
    {"57", "302", "302", "57", "1", "0", ""},
    {"120", "1191", "2416", "1191", "120", "1", "0"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.8998049016694107`*^9, 3.8998049507735023`*^9}},
 CellLabel->"Out[1581]=",
 CellID->689144998,ExpressionUUID->"07ff3837-d775-4e34-add0-ed88535235b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ManualEulerianNumber", "[", 
  RowBox[{"5", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.899804991911252*^9, 3.8998049952249627`*^9}},
 CellLabel->"In[1583]:=",
 CellID->71339483,ExpressionUUID->"e8591297-01bf-46a2-a254-e7786838902f"],

Cell[BoxData["26"], "Output",
 CellChangeTimes->{3.8998049955694246`*^9},
 CellLabel->"Out[1583]=",
 CellID->78236725,ExpressionUUID->"03e90848-028f-40ab-acec-a3dc39c42825"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EulerianNumber", "[", 
  RowBox[{"5", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8998049976185436`*^9, 3.899805003336334*^9}},
 CellLabel->"In[1584]:=",
 CellID->100290537,ExpressionUUID->"0e55c127-a9f6-4aa4-b446-5b6013bb9bd6"],

Cell[BoxData["66"], "Output",
 CellChangeTimes->{3.899805003717856*^9},
 CellLabel->"Out[1584]=",
 CellID->228273421,ExpressionUUID->"0a0523d1-255f-47c6-a076-dcf6a32dc4be"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Permutations", "[", 
  RowBox[{"Range", "[", "5", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.89980516823888*^9, 3.8998051709683647`*^9}},
 CellLabel->"In[1585]:=",
 CellID->836940776,ExpressionUUID->"ed6021a2-2558-439a-8766-3d4c42098e7f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "5", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4", ",", "5", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "5", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "5", ",", "4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "2", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "2", ",", "5", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4", ",", "5", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "5", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "5", ",", "4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "2", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "2", ",", "5", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "3", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "3", ",", "5", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "5", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "5", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "2", ",", "4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "3", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "3", ",", "4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "4", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "4", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "3", ",", "5", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "4", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "4", ",", "5", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "5", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "5", ",", "4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "1", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "1", ",", "5", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "5", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "1", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "1", ",", "5", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "3", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "3", ",", "5", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "5", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "5", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "1", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "1", ",", "4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "3", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "3", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "4", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "4", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "2", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "2", ",", "5", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "4", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "4", ",", "5", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "5", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "5", ",", "4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "1", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "1", ",", "5", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "4", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "4", ",", "5", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "5", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "5", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "1", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "1", ",", "5", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "2", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "2", ",", "5", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "5", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "5", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "1", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "1", ",", "4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "2", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "2", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "4", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "4", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "2", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "2", ",", "5", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "3", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "3", ",", "5", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "5", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "5", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2", ",", "1", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2", ",", "1", ",", "5", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2", ",", "3", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2", ",", "3", ",", "5", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2", ",", "5", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2", ",", "5", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "1", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "1", ",", "5", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "2", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "2", ",", "5", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "5", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "5", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "1", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "2", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "2", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "3", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "3", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1", ",", "2", ",", "4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1", ",", "3", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1", ",", "3", ",", "4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1", ",", "4", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1", ",", "4", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "2", ",", "1", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "2", ",", "1", ",", "4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "2", ",", "3", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "2", ",", "3", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "2", ",", "4", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "2", ",", "4", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3", ",", "1", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3", ",", "1", ",", "4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3", ",", "2", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3", ",", "2", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3", ",", "4", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3", ",", "4", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "1", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "2", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "2", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "3", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "3", ",", "2", ",", "1"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.899805171549224*^9},
 CellLabel->"Out[1585]=",
 CellID->829730471,ExpressionUUID->"98a8bab2-6f8d-4f1a-b47f-c412f336ae0e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"PermutationAscents", "[", "#", "]"}], "]"}], "===", "3"}], 
    "&"}], "]"}], "[", 
  RowBox[{"Permutations", "[", 
   RowBox[{"Range", "[", "5", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.899805173569745*^9, 3.8998051845933557`*^9}},
 CellLabel->"In[1586]:=",
 CellID->3554992,ExpressionUUID->"e1a18118-a560-4f59-8283-9426829ac34b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "5", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4", ",", "5", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "5", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "2", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4", ",", "5", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "5", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "2", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "5", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "1", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "5", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "1", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "5", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "1", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "2", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "1", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "5", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "1", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "2", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1", ",", "2", ",", "3", ",", "4"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8998051849250865`*^9},
 CellLabel->"Out[1586]=",
 CellID->306806291,ExpressionUUID->"ceba9e7d-5085-4a40-8187-73030fac171e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"PermutationAscents", "[", "#", "]"}], "]"}], "===", "3"}], 
     "&"}], "]"}], "[", 
   RowBox[{"Permutations", "[", 
    RowBox[{"Range", "[", "5", "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.899805187735568*^9, 3.899805188955389*^9}},
 CellLabel->"In[1587]:=",
 CellID->116240924,ExpressionUUID->"fab3a327-2654-466d-a69c-fc6334212be9"],

Cell[BoxData["26"], "Output",
 CellChangeTimes->{3.8998051892635565`*^9},
 CellLabel->"Out[1587]=",
 CellID->725004005,ExpressionUUID->"8fcf8f70-0b7f-417c-a887-39f8d8f2803f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<EulerianNumber\>\"", "]"}], "[", 
  RowBox[{"5", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.899805191852541*^9, 3.8998051991503572`*^9}},
 CellLabel->"In[1588]:=",
 CellID->168645274,ExpressionUUID->"efc2d090-af6d-4b41-801a-386aeb9700cf"],

Cell[BoxData["66"], "Output",
 CellChangeTimes->{3.8998052015115695`*^9},
 CellLabel->"Out[1588]=",
 CellID->8442855,ExpressionUUID->"551bdedb-9d85-4412-8ae6-9f27f9ec8427"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Eulerian numbers of the second kind are written something like ",
 Cell[BoxData[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"\[LeftAngleBracket]", GridBox[{
      {"n"},
      {"m"}
     }], "\[RightAngleBracket]"}], "\[RightAngleBracket]"}]], "Input",
  CellChangeTimes->{{3.899754511714775*^9, 3.899754525131752*^9}},
  ExpressionUUID->"dc2b2d0f-dbe1-4c50-b0a9-e04c21540aa9"],
 "."
}], "MathCaption",
 CellChangeTimes->{3.899754545253282*^9},
 CellID->50294008,ExpressionUUID->"a7a8420c-ca29-4335-b91c-7a723e91503b"],

Cell[CellGroupData[{

Cell["\<\
The first 9 rows of the triangle of Eulerian numbers of the second kind:\
\>", "MathCaption",
 CellChangeTimes->{{3.8983653125379972`*^9, 3.8983653233789577`*^9}, {
  3.89975445331875*^9, 3.8997544725110817`*^9}},
 CellID->426907475,ExpressionUUID->"ad26a576-ad07-47dc-a4d9-ea9f26b337fb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"EulerianNumberOfTheSecondKind", "[", 
      RowBox[{"n", ",", "k"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "n"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8983653324763412`*^9, 3.8983653495079985`*^9}, {
  3.8997544554680986`*^9, 3.8997544746648426`*^9}},
 CellLabel->"In[2548]:=",
 CellID->283987963,ExpressionUUID->"8d8cfa44-1df7-4d53-8846-a448df3438f6"],

Cell[BoxData[
 TagBox[GridBox[{
    {"0", "", "", "", "", "", "", "", ""},
    {"2", "0", "", "", "", "", "", "", ""},
    {"8", "6", "0", "", "", "", "", "", ""},
    {"22", "58", "24", "0", "", "", "", "", ""},
    {"52", "328", "444", "120", "0", "", "", "", ""},
    {"114", "1452", "4400", "3708", "720", "0", "", "", ""},
    {"240", "5610", "32120", "58140", "33984", "5040", "0", "", ""},
    {"494", "19950", "195800", "644020", "785304", "341136", "40320", "0", ""},
    {"1004", "67260", "1062500", "5765500", "12440064", "11026296", "3733920",
      "362880", "0"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.8983653498610387`*^9, 3.8993984461038*^9, {3.8997544363274713`*^9, 
   3.899754475002436*^9}},
 CellLabel->"Out[2548]=",
 CellID->74394165,ExpressionUUID->"b2c32cbc-6e93-478f-9f50-ec37c0355a24"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Eulerian Catalan Numbers", "Subsection",
 CellChangeTimes->{{3.899804580056077*^9, 3.8998045844346676`*^9}},
 CellID->958739859,ExpressionUUID->"586707b2-b597-400d-ac4d-146274f43bf8"],

Cell["I got kind of confused with this.", "MathCaption",
 CellChangeTimes->{{3.8997538149818234`*^9, 3.899753821019329*^9}},
 CellID->39057588,ExpressionUUID->"364d5566-ead6-4f10-9117-d6651012242b"],

Cell[TextData[{
 "Combinatorica's ",
 Cell[BoxData[
  RowBox[{"Eulerian", "[", 
   RowBox[{"n", ",", "k"}], "]"}]], "InlineFormula",ExpressionUUID->
  "3acd7b91-b557-43f1-87ae-b0b47498b736"],
 " gives the number of permutations of length ",
 Cell[BoxData[
 "n"], "InlineFormula",ExpressionUUID->"49d6f0b5-1200-4763-9a46-3a045ad5238a"],
 " with ",
 Cell[BoxData[
 "k"], "InlineFormula",ExpressionUUID->"5f998439-7650-402b-b9f2-e13ac05a2a1a"],
 " runs."
}], "MathCaption",
 CellChangeTimes->{{3.8997538218356686`*^9, 3.899753850845626*^9}},
 CellID->236283598,ExpressionUUID->"357249ae-4728-40e5-9930-ca5a845ee7ff"],

Cell["This function uses a different index for k.", "MathCaption",
 CellChangeTimes->{{3.899753855598046*^9, 3.899753865750459*^9}},
 CellID->3969473,ExpressionUUID->"0d3eafc1-b44e-48eb-b6bd-657159a291a6"],

Cell[TextData[{
 "If you have ",
 Cell[BoxData[
  RowBox[{"EulerianNumber", "[", 
   RowBox[{"n", ",", "k"}], "]"}]], "InlineFormula",ExpressionUUID->
  "81e38e5d-21fa-4182-a10c-dd3054f9c1b8"],
 ", do ",
 Cell[BoxData[
  RowBox[{"Eulerian", "[", 
   RowBox[{"n", ",", 
    RowBox[{"k", "-", "1"}]}], "]"}]], "InlineFormula",ExpressionUUID->
  "8aaec1de-8bf9-4741-9519-b20e6b0ef6f4"],
 "."
}], "MathCaption",
 InitializationCell->True,
 CellChangeTimes->{{3.89975386688449*^9, 3.8997539026741056`*^9}},
 CellID->442612299,ExpressionUUID->"5b4ac876-5081-4000-aa06-951507956812"],

Cell[TextData[{
 "If you have ",
 Cell[BoxData[
  RowBox[{"Eulerian", "[", 
   RowBox[{"n", ",", "k"}], "]"}]], "InlineFormula",ExpressionUUID->
  "16cf0018-8564-4b91-9613-7d50ab2642f1"],
 ", do ",
 Cell[BoxData[
  RowBox[{"EulerianNumber", "[", 
   RowBox[{"n", ",", 
    RowBox[{"k", "+", "1"}]}], "]"}]], "InlineFormula",ExpressionUUID->
  "1bd88065-ce67-4467-884b-2d89593755fb"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.899753913756544*^9, 3.8997539246251435`*^9}},
 CellID->90642782,ExpressionUUID->"5949baee-ebb8-4626-9f04-83776844aaa6"],

Cell["\<\
This also affects the definition of other related functions like \
EulerianCatalanNumber.\
\>", "MathCaption",
 CellChangeTimes->{{3.899753936207406*^9, 3.899753951405362*^9}},
 CellID->112995886,ExpressionUUID->"d2eed230-684c-4381-9e0d-8b3dd039feb3"],

Cell[CellGroupData[{

Cell[TextData[{
 "One interpretation of the Eulerian Catalan number is \"Twice the number of \
permutations of ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "...", ",", 
    RowBox[{"2", "n"}]}], "}"}]], "InlineFormula",ExpressionUUID->
  "270b3480-a431-4f4f-8ea7-f9e707d74067"],
 " with ",
 Cell[BoxData[
 "n"], "InlineFormula",ExpressionUUID->"febd53f5-d548-4830-8036-29cbae832c53"],
 " ascents\"."
}], "MathCaption",
 CellChangeTimes->{3.899751814585163*^9},
 CellID->129906996,ExpressionUUID->"c454b495-5e56-40ea-b3ff-a34b7f14b98c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{"\"\<n\>\"", "->", 
       RowBox[{"EulerianCatalanNumber", "[", "#", "]"}]}], "|>"}], "&"}], 
    "]"}], "[", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "21"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997518381090746`*^9, 3.899751839651645*^9}},
 CellLabel->"In[2541]:=",
 CellID->239135585,ExpressionUUID->"aaf71d3b-6337-4164-9259-9ff037a4e5ab"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      0 -> <|"n" -> 1|>, 1 -> <|"n" -> 2|>, 2 -> <|"n" -> 22|>, 
       3 -> <|"n" -> 604|>, 4 -> <|"n" -> 31238|>, 5 -> <|"n" -> 2620708|>, 
       6 -> <|"n" -> 325024572|>, 7 -> <|"n" -> 55942352184|>, 
       8 -> <|"n" -> 12765597850950|>, 9 -> <|"n" -> 3730771315561300|>, 
       10 -> <|"n" -> 1359124435588313876|>, 
       11 -> <|"n" -> 603916464771468176392|>, 
       12 -> <|"n" -> 321511316149669476991132|>, 
       13 -> <|"n" -> 202039976682357297272094824|>, 
       14 -> <|"n" -> 147980747895225006590333244088|>, 
       15 -> <|"n" -> 124963193751534047864734415925360|>, 
       16 -> <|"n" -> 120523981455993504966525708346887750|>, 
       17 -> <|"n" -> 131671692334895976886647813958596908340|>, 
       18 -> <|"n" -> 161759954125032708920885781040309430206500|>, 
       19 -> <|"n" -> 222019441630075420847480526017947263931809000|>, 
       20 -> <|"n" -> 338476895760295138790385051321218766549279671220|>, 
       21 -> <|"n" -> 570180937724400876712836731188276811777920749126840|>|>,
      "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[16]} -> 1, {All, "n"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 1, {All}]]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n"}, {
         TypeSystem`Atom[Integer]}], 22], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[16]} -> 1, {All, "n"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 1, {All}]]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n"}, {
         TypeSystem`Atom[Integer]}], 22], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 1, "DataRowCount" -> 22, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["n", 
                  Style[
                  "n", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "n"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "n"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["604"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["31238"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2620708"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["325024572"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["55942352184"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12765597850950"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3730771315561300"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1359124435588313876"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["11"], 
                  Style[
                   RawBoxes["11"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[11]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["603916464771468176392"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["12"], 
                  Style[
                   RawBoxes["12"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[12]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["321511316149669476991132"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["13"], 
                  Style[
                   RawBoxes["13"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[13]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["202039976682357297272094824"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["14"], 
                  Style[
                   RawBoxes["14"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[14]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["147980747895225006590333244088"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["15"], 
                  Style[
                   RawBoxes["15"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[15]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124963193751534047864734415925360"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["16"], 
                  Style[
                   RawBoxes["16"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[16]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["120523981455993504966525708346887750"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["17"], 
                  Style[
                   RawBoxes["17"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[17]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["131671692334895976886647813958596908340"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["18"], 
                  Style[
                   RawBoxes["18"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[18]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["161759954125032708920885781040309430206500"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["19"], 
                  Style[
                   RawBoxes["19"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[19]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["222019441630075420847480526017947263931809000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{406., {299.8544921875, 305.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{406., {299.8544921875, 305.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8997518400024347`*^9, 3.899754214671568*^9},
 CellLabel->"Out[2541]=",
 CellID->375946613,ExpressionUUID->"69903780-cc20-4be5-a3c5-fbdfc291f6e8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Let's compute the list with the definition.", "MathCaption",
 CellChangeTimes->{{3.899803735862497*^9, 3.8998037417340727`*^9}},
 CellID->248059269,ExpressionUUID->"ffabd081-fa73-4a1c-8c3b-07a894f23675"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"n", "\[Function]", 
    FractionBox[
     RowBox[{"EulerianNumber", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"2", "n"}], "+", "1"}], ",", 
       RowBox[{"n", "+", "1"}]}], "]"}], 
     RowBox[{"n", "+", "1"}]]}], ")"}], "[", 
  RowBox[{"Range", "[", "21", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8998037213955684`*^9, 3.899803754471406*^9}},
 CellLabel->"In[1546]:=",
 CellID->843803446,ExpressionUUID->"f3f0fd0e-e851-425c-a4c1-6e309840f8c4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "22", ",", "604", ",", "31238", ",", "2620708", ",", "325024572", 
   ",", "55942352184", ",", "12765597850950", ",", "3730771315561300", ",", 
   "1359124435588313876", ",", "603916464771468176392", ",", 
   "321511316149669476991132", ",", "202039976682357297272094824", ",", 
   "147980747895225006590333244088", ",", "124963193751534047864734415925360",
    ",", "120523981455993504966525708346887750", ",", 
   "131671692334895976886647813958596908340", ",", 
   "161759954125032708920885781040309430206500", ",", 
   "222019441630075420847480526017947263931809000", ",", 
   "338476895760295138790385051321218766549279671220", ",", 
   "570180937724400876712836731188276811777920749126840"}], "}"}]], "Output",
 CellChangeTimes->{{3.899803731777529*^9, 3.899803755243104*^9}},
 CellLabel->"Out[1546]=",
 CellID->122557646,ExpressionUUID->"01fe40e6-5c12-4b2f-88b0-8cc25e928a9c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "We could write this as ",
 Cell[BoxData[
  FractionBox[
   RowBox[{"\[LeftAngleBracket]", GridBox[{
      {
       RowBox[{
        RowBox[{"2", "n"}], "+", "1"}]},
      {
       RowBox[{"n", "+", "1"}]}
     }], "\[RightAngleBracket]"}], 
   RowBox[{"n", "+", "1"}]]], "Input",
  CellChangeTimes->{{3.8998037650590544`*^9, 3.8998037713193836`*^9}, {
   3.89980388172507*^9, 3.899803891978198*^9}},ExpressionUUID->
  "f390beb1-4ac3-444b-ba5c-310fcac1b267"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.899803757681562*^9, 3.899803759984222*^9}, {
  3.89980389662525*^9, 3.899803897942667*^9}, {3.899804693748949*^9, 
  3.899804696384985*^9}},
 CellID->447100541,ExpressionUUID->"a4df2c28-0199-4e87-b494-3005ca93a38f"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"\[LeftAngleBracket]", GridBox[{
      {
       RowBox[{
        RowBox[{"2", "n"}], "+", "1"}]},
      {
       RowBox[{"n", "+", "1"}]}
     }], "\[RightAngleBracket]"}], 
   RowBox[{"n", "+", "1"}]], ";"}]], "Input",
 CellChangeTimes->{{3.8998037650590544`*^9, 3.8998037713193836`*^9}, {
   3.89980388172507*^9, 3.8998039010141344`*^9}, 3.899804700195984*^9},
 CellLabel->"In[1573]:=",
 CellID->79518550,ExpressionUUID->"49f8a47e-5fc8-4640-9fc0-4d60362cb493"]
}, Open  ]],

Cell["Let's verify this for small cases by counting.", "MathCaption",
 CellChangeTimes->{{3.899803547941578*^9, 3.8998035539327583`*^9}},
 CellID->113019311,ExpressionUUID->"e794d416-e188-44cc-9cc3-e01743e33a32"],

Cell[CellGroupData[{

Cell[TextData[{
 "Let's generate ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"1", ",", " ", "2", ",", " ", "\[Ellipsis]", ",", " ", 
    RowBox[{"2", "n"}]}], "}"}]], "InlineFormula",
  FormatType->StandardForm,ExpressionUUID->
  "ce82fe2d-93dc-4b7f-a224-fabf0e233c17"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.8998040589853544`*^9, 3.8998040756276736`*^9}},
 CellID->327405570,ExpressionUUID->"1d62e89e-a37b-4290-b4cf-7aa022b83105"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", 
     RowBox[{"2", "n"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8998039302208476`*^9, 3.8998039412678895`*^9}},
 CellLabel->"In[1548]:=",
 CellID->314758953,ExpressionUUID->"e58ad85c-0c02-4958-9ae9-e868844107d1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8998039416525173`*^9},
 CellLabel->"Out[1548]=",
 CellID->249993023,ExpressionUUID->"56f3123d-472f-4d1a-8e0b-58423005b93c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Here's how we can count the number of ascents of a permutation.\
\>", "MathCaption",
 CellChangeTimes->{{3.899804035219451*^9, 3.8998040437224417`*^9}},
 CellID->517916511,ExpressionUUID->"ac8a99fe-786d-4d02-a4da-6bae8edf6252"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PermutationAscents", "[", 
  RowBox[{"{", 
   RowBox[{"6", ",", "5", ",", "4", ",", "2", ",", "1", ",", "3"}], "}"}], 
  "]"}]], "Input",
 CellLabel->"In[1552]:=",
 CellID->171428329,ExpressionUUID->"903e0d4a-554c-4103-81c2-c44f518ec992"],

Cell[BoxData[
 RowBox[{"{", "5", "}"}]], "Output",
 CellChangeTimes->{3.8998040447443914`*^9},
 CellLabel->"Out[1552]=",
 CellID->6785543,ExpressionUUID->"5e1fdb6b-65be-4b66-9b87-443be2b45618"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"PermutationAscents", "[", 
   RowBox[{"{", 
    RowBox[{"6", ",", "5", ",", "4", ",", "2", ",", "1", ",", "3"}], "}"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8998039302208476`*^9, 3.899803973845605*^9}, {
  3.8998040256988688`*^9, 3.8998040317264724`*^9}},
 CellLabel->"In[1553]:=",
 CellID->311630952,ExpressionUUID->"511a88a3-38fb-41a0-aab6-ca407b1cc32a"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.899803974148967*^9, {3.8998040279350195`*^9, 3.8998040473689947`*^9}},
 CellLabel->"Out[1553]=",
 CellID->338263666,ExpressionUUID->"952c571e-def0-4041-91fd-ad95c7790211"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Now let's generate the permutations. There are too many permutations to \
display for n=3.\
\>", "MathCaption",
 CellChangeTimes->{{3.899804080319422*^9, 3.8998041090744543`*^9}},
 CellID->779487772,ExpressionUUID->"3c42651d-2512-488f-8fbd-dd9ef712869c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Permutations", "[", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", 
      RowBox[{"2", "n"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8998039302208476`*^9, 3.899803958575122*^9}, {
  3.899804093710648*^9, 3.8998040953094425`*^9}},
 CellLabel->"In[1555]:=",
 CellID->655868708,ExpressionUUID->"f25c67d7-a5ef-41f4-b3c7-b3e8be6a6867"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "4", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "4", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4", ",", "3", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", "3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", "4", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "4", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4", ",", "1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4", ",", "3", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1", ",", "2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1", ",", "4", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "2", ",", "1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "2", ",", "4", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "1", ",", "3", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "2", ",", "1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "2", ",", "3", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "3", ",", "1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "3", ",", "2", ",", "1"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8998039590548477`*^9, {3.8998040869705024`*^9, 3.899804095881055*^9}},
 CellLabel->"Out[1555]=",
 CellID->741484463,ExpressionUUID->"ce74def9-8822-4323-8892-ec08a65a2f7f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Now, let's select the permutations with n ascents.", "MathCaption",
 CellChangeTimes->{{3.899804111885771*^9, 3.8998041185513325`*^9}},
 CellID->143933992,ExpressionUUID->"bfd0a063-18d3-46b3-83be-6911396d7629"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"PermutationAscents", "[", "#", "]"}], "]"}], "===", "n"}], 
      "&"}], "]"}], "[", 
    RowBox[{"Permutations", "[", 
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", 
       RowBox[{"2", "n"}]}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8998041190765047`*^9, 3.8998041473099904`*^9}},
 CellLabel->"In[1556]:=",
 CellID->82442157,ExpressionUUID->"a70a8572-942b-4827-8dad-3dbd68a564d6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "4", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "4", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", "3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "4", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4", ",", "1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1", ",", "2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.899804147988456*^9},
 CellLabel->"Out[1556]=",
 CellID->346860608,ExpressionUUID->"07dec28a-8b04-4731-b7d3-4d8ba433c107"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Now let's count them.", "MathCaption",
 CellChangeTimes->{{3.899804153199153*^9, 3.899804156195385*^9}},
 CellID->107438884,ExpressionUUID->"d46bc443-381d-4c58-8096-0c7849bbd1d5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Length", "[", 
    RowBox[{
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"PermutationAscents", "[", "#", "]"}], "]"}], "===", "n"}], 
       "&"}], "]"}], "[", 
     RowBox[{"Permutations", "[", 
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", 
        RowBox[{"2", "n"}]}], "]"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8998041190765047`*^9, 3.8998041645126405`*^9}},
 CellLabel->"In[1557]:=",
 CellID->179484555,ExpressionUUID->"0375f1dd-6644-4f07-8cf4-8aa592f34bcb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "11"}], "}"}]], "Output",
 CellChangeTimes->{3.8998041648738346`*^9},
 CellLabel->"Out[1557]=",
 CellID->379778846,ExpressionUUID->"3dbc6645-7fbd-4951-948e-dd0bea35b41f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Now let's multiply this number by 2.", "MathCaption",
 CellChangeTimes->{{3.8998041691450453`*^9, 3.8998041745945597`*^9}},
 CellID->327991168,ExpressionUUID->"7aec1c82-fdbd-404d-ab83-c995a2f90994"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"2", 
    RowBox[{"Length", "[", 
     RowBox[{
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"PermutationAscents", "[", "#", "]"}], "]"}], "===", "n"}], 
        "&"}], "]"}], "[", 
      RowBox[{"Permutations", "[", 
       RowBox[{"Range", "[", 
        RowBox[{"1", ",", 
         RowBox[{"2", "n"}]}], "]"}], "]"}], "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8998041190765047`*^9, 3.8998041775352626`*^9}},
 CellLabel->"In[1558]:=",
 CellID->757716190,ExpressionUUID->"c243ba52-d182-4c7b-a953-1f2a662b61bf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "22"}], "}"}]], "Output",
 CellChangeTimes->{3.8998041779078836`*^9},
 CellLabel->"Out[1558]=",
 CellID->49954112,ExpressionUUID->"7affec09-19ee-4590-968d-62d8a9c39325"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["This is what we would get with EulerianCatalanNumber", "MathCaption",
 CellChangeTimes->{{3.8998041806967134`*^9, 3.89980418898188*^9}},
 CellID->83317278,ExpressionUUID->"8f971496-3750-4c41-be45-1e0f1a9fcd04"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EulerianCatalanNumber", "[", 
  RowBox[{"Range", "[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8998041895518837`*^9, 3.899804194893925*^9}},
 CellLabel->"In[1559]:=",
 CellID->347618743,ExpressionUUID->"3f1658d7-5604-4e6d-8cdd-d36279cace9a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "22"}], "}"}]], "Output",
 CellChangeTimes->{3.8998041953101687`*^9},
 CellLabel->"Out[1559]=",
 CellID->152525666,ExpressionUUID->"036a396d-3507-45da-8816-6de47262632f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Let's verify this for a larger set of numbers.", "MathCaption",
 CellChangeTimes->{{3.8998041999516854`*^9, 3.899804207161951*^9}},
 CellID->180959260,ExpressionUUID->"b7926694-b593-4319-914f-3d15e66ced72"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"2", 
    RowBox[{"Length", "[", 
     RowBox[{
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"PermutationAscents", "[", "#", "]"}], "]"}], "===", "n"}], 
        "&"}], "]"}], "[", 
      RowBox[{"Permutations", "[", 
       RowBox[{"Range", "[", 
        RowBox[{"1", ",", 
         RowBox[{"2", "n"}]}], "]"}], "]"}], "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.8998042199036016`*^9},
 CellLabel->"In[1560]:=",
 CellID->330306634,ExpressionUUID->"90eaa98d-e94e-4c37-a5d9-d0265d97eb88"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "22", ",", "604", ",", "31238"}], "}"}]], "Output",
 CellChangeTimes->{3.8998042209676886`*^9},
 CellLabel->"Out[1560]=",
 CellID->44465621,ExpressionUUID->"df0dc613-f6ce-477b-8d99-af5f732522d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EulerianCatalanNumber", "[", 
  RowBox[{"Range", "[", "4", "]"}], "]"}]], "Input",
 CellChangeTimes->{3.8998042290871906`*^9},
 CellLabel->"In[1561]:=",
 CellID->8875213,ExpressionUUID->"d2b2c824-c4c4-4577-8245-73834ef8bbb6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "22", ",", "604", ",", "31238"}], "}"}]], "Output",
 CellChangeTimes->{3.899804229449166*^9},
 CellLabel->"Out[1561]=",
 CellID->44432488,ExpressionUUID->"74c46790-ff26-4ec6-93fe-561c08907bd3"]
}, Open  ]]
}, Open  ]],

Cell["I could also use SelectPermutations.", "MathCaption",
 CellChangeTimes->{{3.8998042356703777`*^9, 3.899804240609458*^9}},
 CellID->228334012,ExpressionUUID->"14c55720-174e-406a-ab38-df6a9eae910a"],

Cell[CellGroupData[{

Cell["Let's see how much memory our calculation took.", "MathCaption",
 CellChangeTimes->{{3.899804245882623*^9, 3.89980425414049*^9}},
 CellID->583761365,ExpressionUUID->"8b245492-acff-4fbf-8976-bd37d5f3f108"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<EchoPerformance\>\"", "]"}], "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"2", 
     RowBox[{"Length", "[", 
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"PermutationAscents", "[", "#", "]"}], "]"}], "===", "n"}],
          "&"}], "]"}], "[", 
       RowBox[{"Permutations", "[", 
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", 
          RowBox[{"2", "n"}]}], "]"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "4"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8998042585018773`*^9, 3.8998042614578676`*^9}},
 CellLabel->"In[1562]:=",
 CellID->160529426,ExpressionUUID->"d0bd1e06-b274-4a07-ae30-fed0aefda3d0"],

Cell[BoxData[
 RowBox[{
  TagBox["Table",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    StyleBox[
     TemplateBox[{"0.5613324`", "\" s\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]], ",", 
    StyleBox[
     TemplateBox[{"9942000", "\" B\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]]}], "}"}]}]], "Echo",
 CellChangeTimes->{3.8998042623727894`*^9},
 CellID->767409760,ExpressionUUID->"c57b210c-dcfd-4306-bc88-6a2fcafdd26f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "22", ",", "604", ",", "31238"}], "}"}]], "Output",
 CellChangeTimes->{3.899804264092757*^9},
 CellLabel->"Out[1562]=",
 CellID->279516212,ExpressionUUID->"6c706746-284b-40d0-aad5-c0f1980512a1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Now let's use SelectPermutations. Here's an example of how we could use it.\
\>", "MathCaption",
 CellChangeTimes->{{3.8998042697265625`*^9, 3.899804274037156*^9}, {
  3.899804312273879*^9, 3.899804319024717*^9}},
 CellID->294337803,ExpressionUUID->"59a04592-2757-4dd2-94c9-2b425490739d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SelectPermutations", "[", 
  RowBox[{
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", "4"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"PermutationAscents", "[", "#", "]"}], "]"}], "===", "2"}], 
    "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.899804282454789*^9, 3.8998043072878857`*^9}},
 CellLabel->"In[1563]:=",
 CellID->131315058,ExpressionUUID->"c13f11e4-a2b5-49cd-9831-93a80f4bfa5e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8998043076386395`*^9},
 CellLabel->"Out[1563]=",
 CellID->549480932,ExpressionUUID->"601a7f72-502d-42c0-9092-4efc36b23262"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Let's do it with Table.", "MathCaption",
 CellChangeTimes->{{3.8998043211918154`*^9, 3.899804325316681*^9}},
 CellID->104618558,ExpressionUUID->"d6816ba2-a0f1-4885-a3a0-4e70af6e634a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<EchoPerformance\>\"", "]"}], "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"2", 
     RowBox[{"Length", "[", 
      RowBox[{"SelectPermutations", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", 
          RowBox[{"2", "n"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"PermutationAscents", "[", "#", "]"}], "]"}], "===", "n"}],
          "&"}]}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "4"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.899804282454789*^9, 3.8998043753143387`*^9}, 
   3.8998044124995413`*^9},
 CellLabel->"In[1567]:=",
 CellID->278353137,ExpressionUUID->"b9a4d87b-dd35-4a6b-afdd-eb62cbfd0642"],

Cell[BoxData[
 RowBox[{
  TagBox["Table",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    StyleBox[
     TemplateBox[{"19.3137325`", "\" s\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]], ",", 
    StyleBox[
     TemplateBox[{"2906240", "\" B\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]]}], "}"}]}]], "Echo",
 CellChangeTimes->{3.899804432600197*^9},
 CellID->715813367,ExpressionUUID->"c4e494b0-2dbe-4fe7-90d9-6b224cfc7d49"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "22", ",", "604", ",", "31238"}], "}"}]], "Output",
 CellChangeTimes->{{3.899804358670639*^9, 3.8998043774263425`*^9}, 
   3.8998044343701982`*^9},
 CellLabel->"Out[1567]=",
 CellID->178250625,ExpressionUUID->"1dccdd77-473b-4b4e-af72-42984d0b875d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["How does this compare to the normal method?", "MathCaption",
 CellChangeTimes->{{3.8998043849365053`*^9, 3.8998043910398684`*^9}},
 CellID->70002204,ExpressionUUID->"22fbdb83-6b6e-4996-b1e3-a50b23470d1f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<EchoPerformance\>\"", "]"}], "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"2", 
     RowBox[{"Length", "[", 
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"PermutationAscents", "[", "#", "]"}], "]"}], "===", "n"}],
          "&"}], "]"}], "[", 
       RowBox[{"Permutations", "[", 
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", 
          RowBox[{"2", "n"}]}], "]"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "4"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.899804282454789*^9, 3.8998043999154587`*^9}, 
   3.8998044809447556`*^9},
 CellLabel->"In[1568]:=",
 CellID->461525729,ExpressionUUID->"b8f17aec-b28e-409b-9785-51ab324f936f"],

Cell[BoxData[
 RowBox[{
  TagBox["Table",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    StyleBox[
     TemplateBox[{"0.5728287`", "\" s\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]], ",", 
    StyleBox[
     TemplateBox[{"9942000", "\" B\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]]}], "}"}]}]], "Echo",
 CellChangeTimes->{3.899804482195223*^9},
 CellID->662120071,ExpressionUUID->"4cb281f2-5be1-48fa-a769-3bbb442a7085"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "22", ",", "604", ",", "31238"}], "}"}]], "Output",
 CellChangeTimes->{3.899804402149518*^9, 3.89980448397223*^9},
 CellLabel->"Out[1568]=",
 CellID->269153066,ExpressionUUID->"abfdab54-9e3a-4c73-a4e8-2668f1c9209d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["We used less memory.", "MathCaption",
 CellChangeTimes->{{3.8998044897545576`*^9, 3.8998044939785767`*^9}},
 CellID->126026160,ExpressionUUID->"c8cbe7df-af44-4e44-b1e6-9cceed0dd45b"],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  TemplateBox[{"9942000", "\"B\"", "bytes", "\"Bytes\""},
   "Quantity"], 
  TemplateBox[{"2906240", "\"B\"", "bytes", "\"Bytes\""},
   "Quantity"]]], "Input",
 CellChangeTimes->{{3.899804522216675*^9, 3.899804538407757*^9}},
 CellLabel->"In[1571]:=",
 CellID->344252507,ExpressionUUID->"6cc49719-320e-4d05-aa66-046611d445e1"],

Cell[BoxData[
 FractionBox["124275", "36328"]], "Output",
 CellChangeTimes->{3.8998045387759495`*^9},
 CellLabel->"Out[1571]=",
 CellID->159789048,ExpressionUUID->"d33f1178-5480-4a6f-b9c4-1b82e84f6510"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  FractionBox[
   TemplateBox[{"9942000", "\"B\"", "bytes", "\"Bytes\""},
    "Quantity"], 
   TemplateBox[{"2906240", "\"B\"", "bytes", "\"Bytes\""},
    "Quantity"]], "]"}]], "Input",
 CellChangeTimes->{{3.899804543516197*^9, 3.8998045439449873`*^9}},
 CellLabel->"In[1572]:=",
 CellID->24082651,ExpressionUUID->"059425f5-da0f-4efb-84cd-77923e6861eb"],

Cell[BoxData["3.4209149966967627`"], "Output",
 CellChangeTimes->{3.8998045442637854`*^9},
 CellLabel->"Out[1572]=",
 CellID->494659481,ExpressionUUID->"a3b270e3-1ca1-4f9a-bc62-97ad53ef489d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The first 14 rows of the Narayana triangle read as follows:", \
"MathCaption",
 CellChangeTimes->{{3.8982879891419973`*^9, 3.8982879983099976`*^9}, {
  3.899754576795635*^9, 3.899754589702189*^9}},
 CellID->69975013,ExpressionUUID->"7123c87c-4e9b-4e12-bed9-032b3f2e10ce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"NarayanaNumber", "[", 
      RowBox[{"n", ",", "k"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "14"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "n"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8982879990979986`*^9, 3.8982880494319987`*^9}, {
  3.898288095920997*^9, 3.898288113509997*^9}, {3.89975456038793*^9, 
  3.8997545748933744`*^9}},
 CellLabel->"In[2553]:=",
 CellID->447664363,ExpressionUUID->"ab6f2f65-b49d-4f4c-bc00-2ff3e765726b"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "", "", "", "", "", "", "", "", "", "", "", "", ""},
    {"1", "1", "", "", "", "", "", "", "", "", "", "", "", ""},
    {"1", "3", "1", "", "", "", "", "", "", "", "", "", "", ""},
    {"1", "6", "6", "1", "", "", "", "", "", "", "", "", "", ""},
    {"1", "10", "20", "10", "1", "", "", "", "", "", "", "", "", ""},
    {"1", "15", "50", "50", "15", "1", "", "", "", "", "", "", "", ""},
    {"1", "21", "105", "175", "105", "21", "1", "", "", "", "", "", "", ""},
    {"1", "28", "196", "490", "490", "196", "28", "1", "", "", "", "", "", ""},
    {"1", "36", "336", "1176", "1764", "1176", "336", "36", "1", "", "", "", 
     "", ""},
    {"1", "45", "540", "2520", "5292", "5292", "2520", "540", "45", "1", "", 
     "", "", ""},
    {"1", "55", "825", "4950", "13860", "19404", "13860", "4950", "825", "55",
      "1", "", "", ""},
    {"1", "66", "1210", "9075", "32670", "60984", "60984", "32670", "9075", 
     "1210", "66", "1", "", ""},
    {"1", "78", "1716", "15730", "70785", "169884", "226512", "169884", 
     "70785", "15730", "1716", "78", "1", ""},
    {"1", "91", "2366", "26026", "143143", "429429", "736164", "736164", 
     "429429", "143143", "26026", "2366", "91", "1"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.898288019627*^9, 3.8982880499109974`*^9}, 
   3.898288114284998*^9, {3.899754560920267*^9, 3.8997545944756646`*^9}},
 CellLabel->"Out[2553]=",
 CellID->405832833,ExpressionUUID->"4326caa7-78a6-44a6-9238-399167a1a193"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Make a table of signed and unsigned Lah numbers.", "MathCaption",
 CellChangeTimes->{{3.8997546278577337`*^9, 3.8997546348819017`*^9}},
 CellID->629424924,ExpressionUUID->"5fbdf2f5-ff70-4feb-b59e-4905136d52ec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"SignedLahNumber", "[", 
      RowBox[{"n", ",", "k"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "n"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8982879990979986`*^9, 3.8982880494319987`*^9}, {
  3.898288095920997*^9, 3.898288113509997*^9}, {3.89975456038793*^9, 
  3.8997545748933744`*^9}, {3.899754635482366*^9, 3.8997546509602003`*^9}},
 CellLabel->"In[2556]:=",
 CellID->282716016,ExpressionUUID->"4ecf9c5b-624c-447f-8c19-5155cb263b78"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"-", "1"}], "", "", "", "", "", "", "", ""},
    {"2", "1", "", "", "", "", "", "", ""},
    {
     RowBox[{"-", "6"}], 
     RowBox[{"-", "6"}], 
     RowBox[{"-", "1"}], "", "", "", "", "", ""},
    {"24", "36", "12", "1", "", "", "", "", ""},
    {
     RowBox[{"-", "120"}], 
     RowBox[{"-", "240"}], 
     RowBox[{"-", "120"}], 
     RowBox[{"-", "20"}], 
     RowBox[{"-", "1"}], "", "", "", ""},
    {"720", "1800", "1200", "300", "30", "1", "", "", ""},
    {
     RowBox[{"-", "5040"}], 
     RowBox[{"-", "15120"}], 
     RowBox[{"-", "12600"}], 
     RowBox[{"-", "4200"}], 
     RowBox[{"-", "630"}], 
     RowBox[{"-", "42"}], 
     RowBox[{"-", "1"}], "", ""},
    {"40320", "141120", "141120", "58800", "11760", "1176", "56", "1", ""},
    {
     RowBox[{"-", "362880"}], 
     RowBox[{"-", "1451520"}], 
     RowBox[{"-", "1693440"}], 
     RowBox[{"-", "846720"}], 
     RowBox[{"-", "211680"}], 
     RowBox[{"-", "28224"}], 
     RowBox[{"-", "2016"}], 
     RowBox[{"-", "72"}], 
     RowBox[{"-", "1"}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.899754639834771*^9, 3.8997546512787457`*^9}},
 CellLabel->"Out[2556]=",
 CellID->18739418,ExpressionUUID->"6f67f530-af92-4fa9-867a-d8eb35cbcfb3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"UnsignedLahNumber", "[", 
      RowBox[{"n", ",", "k"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "n"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8982879990979986`*^9, 3.8982880494319987`*^9}, {
  3.898288095920997*^9, 3.898288113509997*^9}, {3.89975456038793*^9, 
  3.8997545748933744`*^9}, {3.899754635482366*^9, 3.899754660251339*^9}},
 CellLabel->"In[2557]:=",
 CellID->28645306,ExpressionUUID->"35178df8-40ec-4ccd-9b48-30af464681a3"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "", "", "", "", "", "", "", ""},
    {"2", "1", "", "", "", "", "", "", ""},
    {"6", "6", "1", "", "", "", "", "", ""},
    {"24", "36", "12", "1", "", "", "", "", ""},
    {"120", "240", "120", "20", "1", "", "", "", ""},
    {"720", "1800", "1200", "300", "30", "1", "", "", ""},
    {"5040", "15120", "12600", "4200", "630", "42", "1", "", ""},
    {"40320", "141120", "141120", "58800", "11760", "1176", "56", "1", ""},
    {"362880", "1451520", "1693440", "846720", "211680", "28224", "2016", 
     "72", "1"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.8997546605353403`*^9},
 CellLabel->"Out[2557]=",
 CellID->120305284,ExpressionUUID->"672b57aa-163c-456b-9035-4443af827f1a"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Find the sum of even-valued Fibonacci numbers less than 4 million.\
\>", "MathCaption",
 CellChangeTimes->{{3.8997547344956493`*^9, 3.899754744755741*^9}},
 CellID->688126866,ExpressionUUID->"eeb33d11-1170-4e9e-9b51-4ce5492a9167"],

Cell[TextData[{
 "We aren't counting 4 million, so we need to find the inverse of ",
 Cell[BoxData[
  RowBox[{"4000000", "-", "1"}]], "InlineFormula",ExpressionUUID->
  "df8c2f04-3dd4-46e3-9f37-db8a4c94fb29"],
 ", or ",
 Cell[BoxData[
 "3999999"], "InlineFormula",ExpressionUUID->
  "e161c3e1-d0f5-429d-bf94-e040ca5b1734"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.8997547465995646`*^9, 3.8997547726605234`*^9}},
 CellID->462783584,ExpressionUUID->"384e8684-0a99-4c38-b2e3-9505602bc589"],

Cell[CellGroupData[{

Cell["Compute the inverse Fibonacci of 4 million.", "MathCaption",
 CellChangeTimes->{{3.899754693440962*^9, 3.8997546993037024`*^9}},
 CellID->161103956,ExpressionUUID->"6c79f1df-7d85-45be-907e-4340e0c0df3e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InverseFibonacci", "[", "3999999", "]"}]], "Input",
 CellChangeTimes->{{3.8997547004045286`*^9, 3.8997547052777286`*^9}, {
  3.899754775052737*^9, 3.8997547772005157`*^9}},
 CellLabel->"In[2561]:=",
 CellID->630387027,ExpressionUUID->"2698a9a6-52ce-4a1e-ab71-d08f5ff1188a"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"Root", 
    InterpretationBox[
     StyleBox[
      TemplateBox[{"\"33.3\"", 
        DynamicBox[
         FEPrivate`FrontEndResource[
         "FEExpressions", "NumericalApproximationElider"]]}, "RowDefault"], 
      ShowStringCharacters -> False], 
     33.2629474001778504543835879303514957428`15.954589770191003, Editable -> 
     False], 
    TagBox[
     RowBox[{"Root", "[", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{
             RowBox[{
               RowBox[{"-", "3999999"}], "+", 
               RowBox[{"Fibonacci", "[", "#1", "]"}]}], "&"}], ",", 
           "33.2629474001778682831`9.663180428680144"}], "}"}], "]"}], 
     Short[#, 7]& ], 33.26294740017785},
   "NumericalApproximation"],
  Root[{-3999999 + Fibonacci[#]& , 
    33.2629474001778682831`9.663180428680144}]]], "Output",
 CellChangeTimes->{3.89975470587694*^9, 3.89975477785804*^9},
 CellLabel->"Out[2561]=",
 CellID->401184551,ExpressionUUID->"38465ee3-7943-447d-9f99-7473bdc04ba8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Now we can solve Project Euler Problem 2 ",
 ButtonBox["Even Fibonacci Numbers",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://projecteuler.net/problem=2"], None},
  ButtonNote->"https://projecteuler.net/problem=2"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.8997547810789165`*^9, 3.899754806210188*^9}},
 CellID->478852567,ExpressionUUID->"12b4d93f-9218-4cf8-acf0-37e019cdd78c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fibonacci", "[", 
  RowBox[{"Range", "[", 
   RowBox[{"Floor", "[", 
    RowBox[{"InverseFibonacci", "[", "3999999", "]"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8997548106496086`*^9, 3.8997548179289904`*^9}},
 CellLabel->"In[2562]:=",
 CellID->2173387,ExpressionUUID->"03b4c96f-e29c-4b16-8b2c-b1469097a3fc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "2", ",", "3", ",", "5", ",", "8", ",", "13", ",", "21",
    ",", "34", ",", "55", ",", "89", ",", "144", ",", "233", ",", "377", ",", 
   "610", ",", "987", ",", "1597", ",", "2584", ",", "4181", ",", "6765", ",",
    "10946", ",", "17711", ",", "28657", ",", "46368", ",", "75025", ",", 
   "121393", ",", "196418", ",", "317811", ",", "514229", ",", "832040", ",", 
   "1346269", ",", "2178309", ",", "3524578"}], "}"}]], "Output",
 CellChangeTimes->{3.8997548182548466`*^9},
 CellLabel->"Out[2562]=",
 CellID->59007347,ExpressionUUID->"0fa62489-7731-4ed6-b7af-34c6ccbc212b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", "EvenQ", "]"}], "[", 
  RowBox[{"Fibonacci", "[", 
   RowBox[{"Range", "[", 
    RowBox[{"Floor", "[", 
     RowBox[{"InverseFibonacci", "[", "3999999", "]"}], "]"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8997548210077267`*^9, 3.8997548264422503`*^9}},
 CellLabel->"In[2563]:=",
 CellID->48490791,ExpressionUUID->"29f6e7f2-8584-47a7-9e8c-b22f30b700a8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "8", ",", "34", ",", "144", ",", "610", ",", "2584", ",", "10946",
    ",", "46368", ",", "196418", ",", "832040", ",", "3524578"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.899754826763739*^9},
 CellLabel->"Out[2563]=",
 CellID->249968189,ExpressionUUID->"96b12a47-351d-4267-acda-6c2efee748ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{
   RowBox[{"Select", "[", "EvenQ", "]"}], "[", 
   RowBox[{"Fibonacci", "[", 
    RowBox[{"Range", "[", 
     RowBox[{"Floor", "[", 
      RowBox[{"InverseFibonacci", "[", "3999999", "]"}], "]"}], "]"}], "]"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.899754828016255*^9, 3.899754828794771*^9}},
 CellLabel->"In[2564]:=",
 CellID->144665321,ExpressionUUID->"6862f901-2190-4ed8-8a71-d9bc4336d766"],

Cell[BoxData["4613732"], "Output",
 CellChangeTimes->{3.8997548290796323`*^9},
 CellLabel->"Out[2564]=",
 CellID->495057432,ExpressionUUID->"b9dc6cc4-9753-4bc6-b22c-459e3e79dae4"]
}, Open  ]]
}, Open  ]],

Cell["That's the answer.", "MathCaption",
 CellChangeTimes->{{3.899754833373391*^9, 3.8997548353579597`*^9}},
 CellID->66692240,ExpressionUUID->"eb527550-d0b1-4ead-87d1-33d4224801da"],

Cell[CellGroupData[{

Cell[TextData[{
 "Let's work through the examples from the Wolfram Challenge ",
 ButtonBox["Next Permutation",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://challenges.wolframcloud.com/challenge/next-permutation"], 
    None},
  ButtonNote->
   "https://challenges.wolframcloud.com/challenge/next-permutation"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.899755010593167*^9, 3.8997550245535345`*^9}},
 CellID->308194261,ExpressionUUID->"91ccb177-e294-4e3e-8bce-b5399a6f8459"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NextPermutation", "[", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "1"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.899755025666424*^9, 3.899755028554405*^9}},
 CellLabel->"In[1]:=",
 CellID->88352769,ExpressionUUID->"fe555130-ae1d-497d-a9c7-a8e28aca2b4d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "1", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.8997550292452235`*^9},
 CellLabel->"Out[1]=",
 CellID->253919081,ExpressionUUID->"5791d5b5-2f51-4f0d-91b2-acb2f87f85c6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here are more examples.", "MathCaption",
 CellChangeTimes->{{3.8997550337618465`*^9, 3.8997550361477757`*^9}},
 CellID->402833805,ExpressionUUID->"94a79e8f-7210-4770-b555-3329e9e5160f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NextPermutation", "[", 
  RowBox[{"{", 
   RowBox[{"3", ",", "2", ",", "1"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997550307234592`*^9, 3.8997550393829036`*^9}},
 CellLabel->"In[2]:=",
 CellID->133361772,ExpressionUUID->"13db1630-db0c-428c-8e1f-0579c81dbed8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.899755039745571*^9},
 CellLabel->"Out[2]=",
 CellID->98606068,ExpressionUUID->"f890be8d-4f48-48d3-917b-c2ad4edbb9d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NextPermutation", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "4", ",", "5"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997550307234592`*^9, 3.89975504421239*^9}},
 CellLabel->"In[3]:=",
 CellID->282609746,ExpressionUUID->"c9f893e7-633e-40ce-b587-9c88dee34d52"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "5", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.899755044634418*^9},
 CellLabel->"Out[3]=",
 CellID->184445757,ExpressionUUID->"181cdf29-224c-4161-9cd7-cccf866ddeec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NextPermutation", "[", 
  RowBox[{"{", 
   RowBox[{"4", ",", "5", ",", "1", ",", "0"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997550307234592`*^9, 3.899755049156501*^9}},
 CellLabel->"In[4]:=",
 CellID->170282164,ExpressionUUID->"8ac73c1a-67a7-45b7-95dc-fa9afbae2cfd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "0", ",", "1", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.899755049462332*^9},
 CellLabel->"Out[4]=",
 CellID->586261813,ExpressionUUID->"029a86c4-9bcf-4057-9bcc-f1ae62368821"]
}, Open  ]]
}, Open  ]],

Cell["\<\
For some reason, although I have a function that can compute the next \
permutation, I have not solved this Wolfram Challenge.\
\>", "MathCaption",
 CellChangeTimes->{{3.8997550567826686`*^9, 3.899755093968486*^9}},
 CellID->406463550,ExpressionUUID->"ad5e03ab-df7b-4f39-8404-cdb6e362a2b2"],

Cell[CellGroupData[{

Cell["Consider the permutation:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.761597237856369*^9, 3.7615972669041348`*^9}, {
   3.761597466489066*^9, 3.761597466737912*^9}, 3.761597945927305*^9},
 CellID->300631353,ExpressionUUID->"ffa8003b-ae45-437e-bf1f-faadda5a368d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "8", ",", "1", ",", "5", ",", "4", ",", "7", ",", "6", ",", "3",
      ",", "9"}], "}"}]}], ";"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.761597836814392*^9, 3.761597838883295*^9}, {
  3.761597939970468*^9, 3.761597940752081*^9}, {3.761598397650641*^9, 
  3.76159841461544*^9}},
 CellLabel->"In[470]:=",
 CellID->518707108,ExpressionUUID->"f529a12c-8feb-46c2-bf55-cd504346a8be"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Its ascents are at the indices 1, 3, 5, 8, corresponding to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", " ", "<", " ", "8"}], TraditionalForm]],ExpressionUUID->
  "38f1fc80-a2af-49a6-9c52-841958c226b1"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", " ", "<", " ", "5"}], TraditionalForm]],ExpressionUUID->
  "e4709dda-d717-4e8e-b400-d72114a1ad33"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"4", " ", "<", " ", "7"}], TraditionalForm]],ExpressionUUID->
  "fe21186b-ee2e-491a-b964-dc973cc83bf6"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"3", " ", "<", " ", "9"}], TraditionalForm]],ExpressionUUID->
  "71083eda-fcae-4c17-bac6-39b9f778f887"],
 ":"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.761596905811739*^9, 3.7615969301073914`*^9}, {
  3.761596978745027*^9, 3.7615969823929443`*^9}, {3.7615972535310698`*^9, 
  3.7615972813025627`*^9}, {3.76159782481152*^9, 3.761597923536376*^9}, {
  3.76159795718322*^9, 3.761597969952014*^9}, {3.7615984414067717`*^9, 
  3.761598489780396*^9}, {3.761598838880413*^9, 3.761598880056288*^9}, {
  3.761602486184848*^9, 3.761602499869062*^9}, {3.7699499833780417`*^9, 
  3.7699499937268114`*^9}},
 CellID->8375492,ExpressionUUID->"65a00e1b-4fbf-4f11-926c-6c56a0f393f4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PermutationAscents", "@", "p"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.761596946331208*^9, 3.761597112255522*^9}, {
   3.7615971931967907`*^9, 3.761597234779436*^9}, {3.761597806219575*^9, 
   3.761597807585908*^9}, 3.761600539512171*^9, 3.898623350879883*^9},
 CellLabel->"In[471]:=",
 CellID->835168205,ExpressionUUID->"abafbe6d-f6ac-4d3c-a38d-679d484028c9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "5", ",", "8"}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.761597113531955*^9, 3.7615971946051407`*^9, {3.761597285270563*^9, 
   3.761597289870308*^9}, 3.761597809358973*^9, 3.761597981316104*^9, {
   3.76159828977899*^9, 3.761598319642272*^9}, 3.761598358688444*^9, 
   3.7615984257295923`*^9, 3.7616005510462008`*^9, 3.898623358291662*^9, 
   3.898623391408491*^9, 3.899755470638731*^9},
 CellLabel->"Out[471]=",
 CellID->111339732,ExpressionUUID->"4e01406f-f771-4ff0-8351-4d4ec25a5c08"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The descents follow easily:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.761602562327414*^9, 3.7616025694787903`*^9}, {
  3.761602652306975*^9, 3.761602657659069*^9}},
 CellID->258727906,ExpressionUUID->"16ef4b47-c6ce-4046-ad97-7454b588886a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reverse", "[", 
  RowBox[{
   RowBox[{"Length", "@", "p"}], "-", 
   RowBox[{"PermutationAscents", "@", 
    RowBox[{"Reverse", "@", "p"}]}]}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.761602594232671*^9, 3.761602630107443*^9}, 
   3.898623352750309*^9},
 CellLabel->"In[472]:=",
 CellID->97985540,ExpressionUUID->"4dfc7ff5-a1fa-4b42-b565-b9a929f63b5e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "4", ",", "6", ",", "7"}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.761602600390664*^9, 3.76160263111024*^9}, 
   3.89862335838877*^9, 3.8986233919853363`*^9, 3.8997554731217923`*^9},
 CellLabel->"Out[472]=",
 CellID->107056388,ExpressionUUID->"0d28a3f0-44b1-4d44-869a-a99bc68fb360"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["There is also a function for this.", "MathCaption",
 CellChangeTimes->{{3.8997554748443956`*^9, 3.8997554807621813`*^9}},
 CellID->892397338,ExpressionUUID->"41bf1235-6ba5-4d2c-a072-76370d919c35"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PermutationDescents", "[", "p", "]"}]], "Input",
 CellChangeTimes->{{3.899755481435153*^9, 3.899755485613575*^9}, {
  3.8997555345756264`*^9, 3.899755534833783*^9}},
 CellLabel->"In[938]:=",
 CellID->70290140,ExpressionUUID->"a1914b3d-e223-49b2-889c-50ae51c7a608"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "4", ",", "6", ",", "7"}], "}"}]], "Output",
 CellChangeTimes->{3.8997555351846294`*^9},
 CellLabel->"Out[938]=",
 CellID->100322807,ExpressionUUID->"96273587-0da3-498d-9480-8b15bc4a399b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["A triangular table of Gauss factorials up to 7::", "MathCaption",
 CellChangeTimes->{{3.898287633382123*^9, 3.8982876396171246`*^9}, {
  3.898287710712999*^9, 3.8982877200009975`*^9}},
 CellID->819912601,ExpressionUUID->"2ecbccee-516a-486b-8433-3ee1294016cf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"GaussFactorial", "[", 
    RowBox[{"n", ",", "k"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "n"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.898287641041126*^9, 3.8982876458911333`*^9}, {
  3.8982877004174843`*^9, 3.898287739485997*^9}},
 CellLabel->"In[940]:=",
 CellID->375659687,ExpressionUUID->"310e5b99-5e98-409f-af17-a1809b5dc2b7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "3", ",", "8", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"120", ",", "15", ",", "40", ",", "15", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"720", ",", "15", ",", "40", ",", "15", ",", "144", ",", "5"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5040", ",", "105", ",", "280", ",", "105", ",", "1008", ",", "35", ",", 
     "720"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8982877397829976`*^9, 3.899755684540824*^9},
 CellLabel->"Out[940]=",
 CellID->223206235,ExpressionUUID->"2b20873a-ad2c-44b1-95e7-81bedc1c3ad0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Make a grid with a frame:", "MathCaption",
 CellChangeTimes->{{3.8982877492739983`*^9, 3.898287753486998*^9}},
 CellID->652840542,ExpressionUUID->"fec99baa-a9c0-453e-bfc0-fb08ec02b252"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"GaussFactorial", "[", 
      RowBox[{"n", ",", "k"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "n"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.898287754085997*^9, 3.8982877577249966`*^9}},
 CellLabel->"In[939]:=",
 CellID->115721087,ExpressionUUID->"c1511a11-39a2-486c-9fcd-c34ff51dbd6b"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "", "", "", "", "", ""},
    {"2", "1", "", "", "", "", ""},
    {"6", "3", "2", "", "", "", ""},
    {"24", "3", "8", "3", "", "", ""},
    {"120", "15", "40", "15", "24", "", ""},
    {"720", "15", "40", "15", "144", "5", ""},
    {"5040", "105", "280", "105", "1008", "35", "720"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.8982877579349985`*^9, 3.899755682601363*^9},
 CellLabel->"Out[939]=",
 CellID->424564025,ExpressionUUID->"8f11e2ae-c003-4ad1-bd50-188fcf20fdb2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Phitorial of 10:", "MathCaption",
 CellChangeTimes->{{3.898185095765943*^9, 3.8981850985319686`*^9}},
 CellID->395670977,ExpressionUUID->"452df1f8-38da-4540-9535-364d1404299e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Phitorial", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.8981823174928827`*^9, 3.8981823210471945`*^9}},
 CellLabel->"In[941]:=",
 CellID->566799357,ExpressionUUID->"0856a9a0-8f0f-446f-8c13-bc2c7a2425d7"],

Cell[BoxData["189"], "Output",
 CellChangeTimes->{3.898182321406195*^9, 3.8997557207368183`*^9},
 CellLabel->"Out[941]=",
 CellID->63581800,ExpressionUUID->"be4919eb-9797-4eaf-831d-427bae0f0d99"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 ButtonBox["Project Euler Problem 754 Product of Gauss Factorials",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://projecteuler.net/problem=754"], None},
  ButtonNote->"https://projecteuler.net/problem=754"],
 " states, \"The Gauss Factorial of a number ",
 Cell[BoxData[
 "n"], "InlineFormula",ExpressionUUID->"f9697a25-8c69-4663-9548-ccc545b7705a"],
 " is defined as the product of all positive numbers ",
 Cell[BoxData[
  RowBox[{"<=", "n"}]], "InlineFormula",ExpressionUUID->
  "ec1f4713-a2ed-4373-b096-c1220c56354c"],
 "  that are relatively prime to ",
 Cell[BoxData[
 "n"], "InlineFormula",ExpressionUUID->"c67e5d1d-7215-471a-af0c-479cfb81dc43"],
 ". For example, ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"g", 
    RowBox[{"(", "10", ")"}]}], "=", 
   RowBox[{
    RowBox[{"1", " ", "3", " ", "7", " ", "9"}], "=", "189"}]}]], 
  "InlineFormula",ExpressionUUID->"c6e4cf94-8291-46db-94ad-4d5c1fbb9b91"],
 ". Also, we define ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"G", 
    RowBox[{"(", "n", ")"}]}], "=", 
   RowBox[{
    UnderoverscriptBox["\[Product]", 
     RowBox[{"i", "=", "1"}], "n"], 
    RowBox[{"g", 
     RowBox[{"(", "i", ")"}]}]}]}]], "InlineFormula",ExpressionUUID->
  "dbfa1580-15ed-4f71-9cd6-0b1aadb884e5"],
 ". You are given ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"G", 
    RowBox[{"(", "10", ")"}]}], "=", "23044331520000"}]], "InlineFormula",
  ExpressionUUID->"677101ae-ad84-49be-8871-82de6f82ac67"],
 ". Find ",
 Cell[BoxData[
  RowBox[{"G", 
   RowBox[{"(", 
    SuperscriptBox["10", "8"], ")"}]}]], "InlineFormula",ExpressionUUID->
  "3be2fa04-104b-4143-bc09-40e3d69f6e9a"],
 ". Give your answer modulo ",
 Cell[BoxData[
 "1000000007"], "InlineFormula",ExpressionUUID->
  "2acb117a-da4d-40eb-9881-6e4bf586cfdc"],
 ".\""
}], "MathCaption",
 CellChangeTimes->{
  3.8981858511231184`*^9, {3.8981859052781706`*^9, 3.8981859134084463`*^9}},
 CellID->255766314,ExpressionUUID->"e8594239-0842-4d01-9de2-d3c265f967e4"],

Cell[CellGroupData[{

Cell[TextData[{
 "Compute the products of the first 10 phitorials to verify the statement ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"G", 
    RowBox[{"(", "10", ")"}]}], "=", "23044331520000"}]], "InlineFormula",
  ExpressionUUID->"5d35e9db-2fb6-4cc0-9cc5-18535282688a"],
 ":"
}], "MathCaption",
 CellChangeTimes->{{3.8981823481516457`*^9, 3.8981826497216463`*^9}, {
  3.8981857747223787`*^9, 3.898185774725379*^9}, {3.898185847991984*^9, 
  3.8981858756097927`*^9}},
 CellID->561182461,ExpressionUUID->"b90014a2-14da-45c1-8bfc-a073c0c96a49"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EchoTiming", "@", 
  RowBox[{"Product", "[", 
   RowBox[{
    RowBox[{"Phitorial", "[", "n", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8981823275966673`*^9, 3.8981823327943587`*^9}, {
  3.8981858807017317`*^9, 3.8981858834697604`*^9}},
 CellLabel->"In[127]:=",
 CellID->178093661,ExpressionUUID->"e39f510a-5778-4ede-a975-14860319b21b"],

Cell[BoxData["0.0002024`"], "EchoTiming",
 CellChangeTimes->{3.8981858836947327`*^9},
 CellID->11277768,ExpressionUUID->"e6e75721-d0ad-4fd5-825c-e6ac2bbe4bd6"],

Cell[BoxData["23044331520000"], "Output",
 CellChangeTimes->{3.898182333114361*^9, 3.898185884430244*^9},
 CellLabel->"Out[127]=",
 CellID->135146785,ExpressionUUID->"2b4fbdb5-e280-4438-95b5-0ee6ad0aed4f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compute the phitorial product up to ",
 Cell[BoxData[
  SuperscriptBox["10", "4"]], "InlineFormula",ExpressionUUID->
  "180fe870-3e41-47d8-8c84-a5ea5ce6f9b6"],
 ":"
}], "MathCaption",
 CellChangeTimes->{{3.8981851638771286`*^9, 3.898185172710628*^9}, {
   3.898185264681044*^9, 3.8981852655001383`*^9}, {3.8981854925875683`*^9, 
   3.8981854925875683`*^9}, 3.898185815695145*^9},
 CellID->102959412,ExpressionUUID->"11a956f8-1102-4084-a828-247fa8361fca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EchoTiming", "[", 
  RowBox[{"Product", "[", 
   RowBox[{
    RowBox[{"Phitorial", "[", "n", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", 
      SuperscriptBox["10", "4"]}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8981851746411724`*^9, 3.8981851767278247`*^9}, {
   3.898185224134492*^9, 3.8981852458837285`*^9}, 3.8981854881131086`*^9},
 CellLabel->"In[124]:=",
 CellID->65194424,ExpressionUUID->"99eddf63-14a0-4261-92eb-c0bc0f02f3b2"],

Cell[BoxData["43.6647207`"], "EchoTiming",
 CellChangeTimes->{3.898185532497261*^9},
 CellID->593897543,ExpressionUUID->"cdf13766-e4ce-4883-acf1-90b6b2b02375"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{
      "59164868729671610938246087809704188976914193685488458108710146404740892\
822379871539934845489808218821604928896809249436472645406000833488216177847592\
980464286442442444398876837616", 
       TemplateBox[{"101789813"}, "OutputSizeLimit`Skeleton"], 
       "0000000000000000000000000000000000000000000000000000000000000000000000\
000000000000000000000000000000000000000000000000000000000000000000000000000000\
00000000000000000000000000000000"}], Short[#, 8]& ], "line" -> 124, 
   "sessionID" -> 34156895453523762438, "byteCount" -> 42267528, "size" -> 8, 
   "stored" -> False, "expr" -> Missing["NotAvailable", "NewSessionID"], 
   "wrap" -> OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.8981852421794868`*^9, 3.898185482734152*^9, 
  3.898185569325807*^9},
 CellLabel->"Out[124]=",
 CellID->74761761,ExpressionUUID->"5061c2f8-83be-4483-97b1-a96485e6ab08"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compute the answer mod 1000000007:", "MathCaption",
 CellChangeTimes->{{3.8981858186942124`*^9, 3.8981858247879715`*^9}},
 CellID->298809539,ExpressionUUID->"8cfecd30-4615-40c6-a8f4-0e8ed296f892"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mod", "[", 
  RowBox[{"%", ",", "1000000007"}], "]"}]], "Input",
 CellChangeTimes->{{3.8981857050918465`*^9, 3.898185718490545*^9}},
 CellLabel->"In[125]:=",
 CellID->7216617,ExpressionUUID->"237f3dcf-a337-4ba7-8888-21bc94d4719f"],

Cell[BoxData["517055464"], "Output",
 CellChangeTimes->{3.8981857200855713`*^9},
 CellLabel->"Out[125]=",
 CellID->150133947,ExpressionUUID->"80b0c5f7-2753-42d9-b41c-785301897916"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Product of primes up to 20:", "MathCaption",
 CellChangeTimes->{{3.898286862664509*^9, 3.8982868671685095`*^9}},
 CellID->6621231,ExpressionUUID->"9178fa02-627a-4d70-b442-5bce9e4fa569"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Primorial", "[", "20", "]"}]], "Input",
 CellChangeTimes->{{3.898286869160511*^9, 3.8982868720735087`*^9}},
 CellLabel->"In[893]:=",
 CellID->238009890,ExpressionUUID->"3deba83f-bd41-4cfb-8843-8c9e80d8b854"],

Cell[BoxData["9699690"], "Output",
 CellChangeTimes->{3.89828687246351*^9},
 CellLabel->"Out[893]=",
 CellID->441155702,ExpressionUUID->"dd0d9739-5eb9-4820-8f82-43181de2b578"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Product of primes up to 54:", "MathCaption",
 CellChangeTimes->{{3.8982868743455095`*^9, 3.89828687863951*^9}},
 CellID->784853736,ExpressionUUID->"b2e113be-e729-4813-9abb-34432e3fb5ca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Primorial", "[", "54", "]"}]], "Input",
 CellChangeTimes->{{3.898286869160511*^9, 3.898286881339834*^9}},
 CellLabel->"In[894]:=",
 CellID->610437364,ExpressionUUID->"20fa1ab2-96c8-4806-97c9-200b25b29850"],

Cell[BoxData["32589158477190044730"], "Output",
 CellChangeTimes->{3.898286881785511*^9},
 CellLabel->"Out[894]=",
 CellID->38186909,ExpressionUUID->"69688976-d005-46f5-8303-30e59067b819"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compute the primorial ",
 Cell[BoxData[
  StyleBox[
   TagBox[
    RowBox[{"23", "#"}],
    "ForceRasterization"], "MarkedForRasterization"]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "69da04fb-2488-4008-a6ab-7320ed5f2255"],
 ":"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.838213237329423*^9, 3.8382132721147633`*^9}, 
   3.852826799559807*^9, {3.852827136061099*^9, 3.8528271360611362`*^9}, {
   3.85954974574284*^9, 3.8595497489212027`*^9}},
 CellID->393571408,ExpressionUUID->"7f188b03-c8e0-4693-bd52-737d02e32596"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Primorial", "[", "23", "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.838213221919333*^9, 3.838213231771694*^9}, 
   3.899454504994316*^9},
 CellLabel->"In[125]:=",
 CellID->878786336,ExpressionUUID->"55b8abb1-b471-497a-beea-cc11be16d1bb"],

Cell[BoxData["223092870"], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8382132471136208`*^9, 3.899454505747471*^9},
 CellLabel->"Out[125]=",
 CellID->369524703,ExpressionUUID->"d63b1508-9ef5-4b9a-97fe-540ede387b14"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compute a list of the first 15 primorials:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.838213205491308*^9, 3.8382132135686007`*^9}, {
  3.8382132894174967`*^9, 3.838213290610783*^9}},
 CellID->394823239,ExpressionUUID->"a1d4e0a3-4fd2-457f-9bff-e01f62f59045"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Primorial", "[", 
  RowBox[{"Range", "[", "15", "]"}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{3.8994545102426972`*^9},
 CellLabel->"In[126]:=",
 CellID->627889596,ExpressionUUID->"0308cc42-4347-43bf-a51c-9a5d9b070e8c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "6", ",", "6", ",", "30", ",", "30", ",", "210", ",", 
   "210", ",", "210", ",", "210", ",", "2310", ",", "2310", ",", "30030", ",",
    "30030", ",", "30030"}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.899454510931697*^9},
 CellLabel->"Out[126]=",
 CellID->95453950,ExpressionUUID->"4c4c6a8d-d0a6-4875-828b-df37c519088f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compare with the definition:", "MathCaption",
 TaggingRules->{},
 CellID->731096908,ExpressionUUID->"a1c43117-792f-47da-bdf5-291136f787e2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"k", "=", "7"}], "}"}], ",", 
   RowBox[{
    RowBox[{"Product", "[", 
     RowBox[{
      RowBox[{"Prime", "[", "j", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", 
        RowBox[{"PrimePi", "[", "k", "]"}]}], "}"}]}], "]"}], "\[Equal]", 
    RowBox[{"Primorial", "[", "k", "]"}]}]}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.899454545881302*^9, 3.8994545491140113`*^9}},
 CellLabel->"In[128]:=",
 CellID->219626058,ExpressionUUID->"2fbe5a52-7c79-4b71-86d0-d2347e354d0c"],

Cell[BoxData["True"], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8994545497240176`*^9},
 CellLabel->"Out[128]=",
 CellID->169546956,ExpressionUUID->"05a793eb-789e-42bb-8ad0-be5c7dd60758"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The resource function ",
 Cell[BoxData[
  ButtonBox["ChebyshevTheta",
   BaseStyle->"Hyperlink",
   ButtonData->{
     URL["https://resources.wolframcloud.com/FunctionRepository/resources/\
ChebyshevTheta/"], None},
   ButtonNote->
    "https://resources.wolframcloud.com/FunctionRepository/resources/\
ChebyshevTheta/"]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "34ea72a9-0380-4652-b4e9-b928c251f668"],
 " is the logarithm of the primorial:"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.859549840016568*^9, 3.85954984001661*^9}},
 CellID->575191782,ExpressionUUID->"6342e889-ff23-431d-b058-242a097e56fa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"k", "=", "7"}], "}"}], ",", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"ResourceFunction", "[", "\"\<ChebyshevTheta\>\"", "]"}], "[", 
      "k", "]"}], "]"}], "\[Equal]", 
    RowBox[{"Primorial", "[", "k", "]"}]}]}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.899454623634669*^9, 3.899454625862824*^9}},
 CellLabel->"In[129]:=",
 CellID->154121207,ExpressionUUID->"4ab2d6cd-040d-497f-b214-611b7e5ecd79"],

Cell[BoxData["True"], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8994546268223934`*^9},
 CellLabel->"Out[129]=",
 CellID->179973804,ExpressionUUID->"62304be8-13a8-44c0-9f42-429513b59385"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Evaluate the ",
 ButtonBox["infinite primorial",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://doi.org/10.1007/s00220-007-0350-z"], None},
  ButtonNote->"https://doi.org/10.1007/s00220-007-0350-z"],
 ":"
}], "MathCaption",
 TaggingRules->{},
 CellID->812166021,ExpressionUUID->"3ab3501f-b3c3-4015-9a6b-727a69539672"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Product", "[", 
  RowBox[{
   RowBox[{"Prime", "[", "k", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"Regularization", "\[Rule]", "\"\<Dirichlet\>\""}]}], 
  "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellLabel->"In[130]:=",
 CellID->624985202,ExpressionUUID->"84ac4f50-dbb4-41fc-8d2c-93dd72989dee"],

Cell[BoxData[
 RowBox[{"4", " ", 
  SuperscriptBox["\[Pi]", "2"]}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.899454725862358*^9},
 CellLabel->"Out[130]=",
 CellID->51179190,ExpressionUUID->"1682fdb5-f8a0-4940-9e02-6e07479a2685"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Primorial", "[", "\[Infinity]", "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{3.8994547227226877`*^9},
 CellLabel->"In[131]:=",
 CellID->368150137,ExpressionUUID->"6b99a0e4-a601-4c43-a31a-6b3f5d5a970b"],

Cell[BoxData[
 RowBox[{"4", " ", 
  SuperscriptBox["\[Pi]", "2"]}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.89945472690936*^9},
 CellLabel->"Out[131]=",
 CellID->288813044,ExpressionUUID->"67897d8c-7744-4596-80a5-6d58a183515b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compare the growth rate of the primorial versus factorial:", \
"MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.837685686619939*^9, 3.837685697646296*^9}, {
  3.859549849581889*^9, 3.8595498543322144`*^9}},
 CellID->230671479,ExpressionUUID->"86f7aec4-3c3b-4969-a5b7-b9c9181e09f4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"DiscretePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Primorial", "[", "n", "]"}], ",", 
      RowBox[{"Factorial", "[", "n", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "50"}], "}"}], ",", 
    RowBox[{"ScalingFunctions", "\[Rule]", "\"\<Log\>\""}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<n#\>\"", ",", "\"\<n!\>\""}], "}"}]}]}], "]"}], 
  "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.8376857012163343`*^9, 3.837685761905402*^9}, 
   3.899454732174096*^9, {3.8997991355708747`*^9, 3.8997991379575896`*^9}},
 CellLabel->"In[20]:=",
 CellID->968332860,ExpressionUUID->"5444c1a6-1613-4243-85fc-e683fae0f53a"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAAAAAAAAAEDz/D8xbDE0=
    "], {{0, 145.2}, {288., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{288., 145.2},
  PlotRange->{{0, 288.}, {0, 145.2}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.837685717431341*^9, 3.8376857624300327`*^9}, 
   3.899454733868168*^9, 3.8997991388465767`*^9},
 CellLabel->"Out[20]=",
 CellID->548382202,ExpressionUUID->"2f92316c-02bd-4d31-ade7-04ae66a77eca"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Plot the differences between the factorial and the primorial up to ",
 Cell[BoxData[
  StyleBox["n", "TI"]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "9f0119a7-bcdf-43a0-8216-c56f06f0c77d"],
 ":"
}], "MathCaption",
 TaggingRules->{},
 CellID->201723607,ExpressionUUID->"ec326ff9-1ec0-4556-bd54-825648a643d0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Differences", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Log", "[", 
       FractionBox[
        RowBox[{"n", "!"}], 
        RowBox[{"Primorial", "[", "n", "]"}]], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", "100", ",", "1"}], "}"}]}], "]"}], "]"}], 
   ",", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       RowBox[{
         DynamicBox[
          FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]], 
         "\[Rule]", 
         DynamicBox[
          FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]]}], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["Rule", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["56", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    Filling -> Axis,
    SelectWithContents->True,
    Selectable->False]}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.899454746792905*^9, 3.899454757563745*^9}},
 CellLabel->"In[134]:=",
 CellID->746283470,ExpressionUUID->"0be0422e-8e4d-4f16-9c4c-deb2b1c1e5a3"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[GraphicsComplexBox[CompressedData["
1:eJztlYtPU2cYhytMUSuXOdeJ9YZMp1jZKCIisP5aoHItvVJkuOASohEMKmUY
ccuRGJ0xJoLExGu8BRQEo4kKVi5jKXMuM0G0LovLtkAMaowkIBRF2Izvm6Vf
4n/Qk5yc/N7nPO93Tk6+84Z9U2Iu9JPJZD//d769vjsGNDLvA95xKl7EvRrX
RQ7TfSECnwW/hRGv5A1jxGcLfC5KG+I1V89y34WQ+zfufHp4EuVFUNiuOa8U
+VH+VPCX4LtTPbcU//hTfanAI1DnfKi4M3cy1VVYkJoVp6jnHEnPP4XyF4If
hb1VRWsqFgRQXS3waFT1llboRpivxJWmkprIr6ZSjsFtV2K54ybnVYIfi1FV
9a664mlUX43og89HtB2c4/DbnIGnNSHTKa/BoT3+zX+t5xyP8PQj7rwLnBOE
/ok47paP1sbIqf6lwDUout3c1tPCHOhufjD0u4eyBAwHtuwei5lBXAvXYLAl
bxtlSUvfl7nOu7+kwwXtT66u0ECqJ8Ed+MOmUQNlKQmB29XxPZXMkwU/GSsS
I63tj5mnCDwFSdaxVZP1QVTX4/wv576VOyhLehTrDrUGnWG+VvDXosxpTFjt
YZ4Ke566afuiYPJTcVl56ca9DMqyNEzITBMFDuZpSLvYVL/4BPN0oX86ZnzU
Wb71CfMMDI7fXFcZQPtEyoCxOOLXl6G8bzKx7ljjmY9VzDORpe9y9SUyzxL6
Z+GAuvDR8QLmBoEb8OzRZ3s+r2SeDeXs3v6qau6fTfuPuRFly2oOV1+lDCNq
w9P/WNnJ9xu9+3cYEXfXebrrb/ZNcM6pOdnygn0TwrQb95eNs28SfBM09qF8
g/JDqpu9OcyY1zDmzo8lLpmRH3D2mDKFcocZM/s7OhvM7FuQoM7cF1RAGRYs
M4TPStnCvkVY34JkacebqH3sW+n/w74VhSdr/SpOs28VfCvuFw5PW9rCvg3T
z3m+1rvYt0Hf+mQzutm34Z6m+oNP/uTnt6Fg2/rXd/rZzxHePwchqijl3Qn2
c9CWv/jH+fKZ5OfAsamuLVtBWWbHVvdg54YwyrDjaHtduU1FWbKj99YbaXks
+3Z4zgd836dlP1dYPxebHZ7rk+zs52L5PEXoxg3s59L/+f/s5fvmh29++OaH
b3745gf5vvnxvvnxL9XJezc=
       "], {{{}, 
         {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
          None], GraphicsGroupBox[{
            PolygonBox[{{2, 4, 3}, {4, 6, 5}, {16, 18, 17}, {28, 30, 29}, {10,
              12, 11}, {70, 72, 71}, {40, 42, 41}, {58, 60, 59}}], 
            PolygonBox[{{12, 16, 15, 14, 13}, {66, 70, 69, 68, 67}, {18, 22, 
             21, 20, 19}, {6, 10, 9, 8, 7}, {96, 100, 99, 98, 97}, {36, 40, 
             39, 38, 37}, {42, 46, 45, 44, 43}, {78, 82, 81, 80, 79}}], 
            PolygonBox[{{60, 66, 65, 64, 63, 62, 61}, {22, 28, 27, 26, 25, 24,
              23}, {46, 52, 51, 50, 49, 48, 47}, {82, 88, 87, 86, 85, 84, 
             83}, {72, 78, 77, 76, 75, 74, 73}, {52, 58, 57, 56, 55, 54, 
             53}, {30, 36, 35, 34, 33, 32, 31}}], 
            PolygonBox[{{88, 96, 95, 94, 93, 92, 91, 90, 
             89}}]}]}, {}, {}}, {{}, {}, 
         TagBox[
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[2], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
             18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
            34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
            50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 
            66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 
            82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 
            98, 99}]},
          Annotation[#, "Charting`Private`Tag#1"]& ]}}],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", 
        GraphicsComplex[CompressedData["
1:eJztlYtPU2cYhytMUSuXOdeJ9YZMp1jZKCIisP5aoHItvVJkuOASohEMKmUY
ccuRGJ0xJoLExGu8BRQEo4kKVi5jKXMuM0G0LovLtkAMaowkIBRF2Izvm6Vf
4n/Qk5yc/N7nPO93Tk6+84Z9U2Iu9JPJZD//d769vjsGNDLvA95xKl7EvRrX
RQ7TfSECnwW/hRGv5A1jxGcLfC5KG+I1V89y34WQ+zfufHp4EuVFUNiuOa8U
+VH+VPCX4LtTPbcU//hTfanAI1DnfKi4M3cy1VVYkJoVp6jnHEnPP4XyF4If
hb1VRWsqFgRQXS3waFT1llboRpivxJWmkprIr6ZSjsFtV2K54ybnVYIfi1FV
9a664mlUX43og89HtB2c4/DbnIGnNSHTKa/BoT3+zX+t5xyP8PQj7rwLnBOE
/ok47paP1sbIqf6lwDUout3c1tPCHOhufjD0u4eyBAwHtuwei5lBXAvXYLAl
bxtlSUvfl7nOu7+kwwXtT66u0ECqJ8Ed+MOmUQNlKQmB29XxPZXMkwU/GSsS
I63tj5mnCDwFSdaxVZP1QVTX4/wv576VOyhLehTrDrUGnWG+VvDXosxpTFjt
YZ4Ke566afuiYPJTcVl56ca9DMqyNEzITBMFDuZpSLvYVL/4BPN0oX86ZnzU
Wb71CfMMDI7fXFcZQPtEyoCxOOLXl6G8bzKx7ljjmY9VzDORpe9y9SUyzxL6
Z+GAuvDR8QLmBoEb8OzRZ3s+r2SeDeXs3v6qau6fTfuPuRFly2oOV1+lDCNq
w9P/WNnJ9xu9+3cYEXfXebrrb/ZNcM6pOdnygn0TwrQb95eNs28SfBM09qF8
g/JDqpu9OcyY1zDmzo8lLpmRH3D2mDKFcocZM/s7OhvM7FuQoM7cF1RAGRYs
M4TPStnCvkVY34JkacebqH3sW+n/w74VhSdr/SpOs28VfCvuFw5PW9rCvg3T
z3m+1rvYt0Hf+mQzutm34Z6m+oNP/uTnt6Fg2/rXd/rZzxHePwchqijl3Qn2
c9CWv/jH+fKZ5OfAsamuLVtBWWbHVvdg54YwyrDjaHtduU1FWbKj99YbaXks
+3Z4zgd836dlP1dYPxebHZ7rk+zs52L5PEXoxg3s59L/+f/s5fvmh29++OaH
b3745gf5vvnxvvnxL9XJezc=
         "], {{{}, {
            EdgeForm[], 
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             Opacity[0.2]], 
            GraphicsGroup[{
              
              Polygon[{{2, 4, 3}, {4, 6, 5}, {16, 18, 17}, {28, 30, 29}, {10, 
               12, 11}, {70, 72, 71}, {40, 42, 41}, {58, 60, 59}}], 
              
              Polygon[{{12, 16, 15, 14, 13}, {66, 70, 69, 68, 67}, {18, 22, 
               21, 20, 19}, {6, 10, 9, 8, 7}, {96, 100, 99, 98, 97}, {36, 40, 
               39, 38, 37}, {42, 46, 45, 44, 43}, {78, 82, 81, 80, 79}}], 
              
              Polygon[{{60, 66, 65, 64, 63, 62, 61}, {22, 28, 27, 26, 25, 24, 
               23}, {46, 52, 51, 50, 49, 48, 47}, {82, 88, 87, 86, 85, 84, 
               83}, {72, 78, 77, 76, 75, 74, 73}, {52, 58, 57, 56, 55, 54, 
               53}, {30, 36, 35, 34, 33, 32, 31}}], 
              
              Polygon[{{88, 96, 95, 94, 93, 92, 91, 90, 
               89}}]}]}, {}, {}}, {{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[1, 60]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             
             Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
              18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
              34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
              50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 
              66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 
              82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 
              98, 99}]}, "Charting`Private`Tag#1"]}}], <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0., 99.}, {0, 4.605170185988092}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0., 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              PointSize[
               Rational[1, 60]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {{{}, {
               EdgeForm[], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                Opacity[0.2]], 
               GraphicsGroup[{{
                  Polygon[{{2., 0.}, {4., 0.}, {3., 1.3862943611198906`}}], 
                  Polygon[{{4., 0.}, {6., 0.}, {5., 1.791759469228055}}], 
                  Polygon[{{16., 0.}, {18., 0.}, {17., 2.8903717578961645`}}], 
                  Polygon[{{28., 0.}, {30., 0.}, {29., 3.4011973816621555`}}], 
                  Polygon[{{10., 0.}, {12., 0.}, {11., 2.4849066497880004`}}], 
                  Polygon[{{70., 0.}, {72., 0.}, {71., 4.276666119016055}}], 
                  Polygon[{{40., 0.}, {42., 0.}, {41., 3.7376696182833684`}}], 
                  Polygon[{{58., 0.}, {60., 0.}, {59., 4.0943445622221}}]}, {
                  
                  Polygon[{{12., 0.}, {16., 0.}, {15., 2.772588722239781}, {
                   14., 2.70805020110221}, {13., 2.6390573296152584`}}], 
                  
                  Polygon[{{66., 0.}, {70., 0.}, {69., 4.248495242049359}, {
                   68., 4.23410650459726}, {67., 4.219507705176107}}], 
                  
                  Polygon[{{18., 0.}, {22., 0.}, {21., 3.091042453358316}, {
                   20., 3.044522437723423}, {19., 2.995732273553991}}], 
                  
                  Polygon[{{6., 0.}, {10., 0.}, {9., 2.302585092994046}, {8., 
                   2.1972245773362196`}, {7., 2.0794415416798357`}}], 
                  
                  Polygon[{{96., 0.}, {99., 0.}, {99., 4.605170185988092}, {
                   98., 4.59511985013459}, {97., 4.584967478670572}}], 
                  
                  Polygon[{{36., 0.}, {40., 0.}, {39., 3.6888794541139363`}, {
                   38., 3.6635616461296463`}, {37., 3.6375861597263857`}}], 
                  
                  Polygon[{{42., 0.}, {46., 0.}, {45., 3.828641396489095}, {
                   44., 3.8066624897703196`}, {43., 3.784189633918261}}], 
                  
                  Polygon[{{78., 0.}, {82., 0.}, {81., 4.406719247264253}, {
                   80., 4.394449154672439}, {79., 4.382026634673881}}]}, {
                  
                  Polygon[{{60., 0.}, {66., 0.}, {65., 4.189654742026425}, {
                   64., 4.174387269895637}, {63., 4.1588830833596715`}, {62., 
                   4.143134726391533}, {61., 4.127134385045092}}], 
                  
                  Polygon[{{22., 0.}, {28., 0.}, {27., 3.332204510175204}, {
                   26., 3.295836866004329}, {25., 3.258096538021482}, {24., 
                   3.2188758248682006`}, {23., 3.1780538303479458`}}], 
                  
                  Polygon[{{46., 0.}, {52., 0.}, {51., 3.9512437185814275`}, {
                   50., 3.9318256327243257`}, {49., 3.912023005428146}, {48., 
                   3.8918202981106265`}, {47., 3.871201010907891}}], 
                  
                  Polygon[{{82., 0.}, {88., 0.}, {87., 4.477336814478207}, {
                   86., 4.465908118654584}, {85., 4.454347296253507}, {84., 
                   4.442651256490317}, {83., 4.430816798843313}}], 
                  
                  Polygon[{{72., 0.}, {78., 0.}, {77., 4.356708826689592}, {
                   76., 4.343805421853684}, {75., 4.330733340286331}, {74., 
                   4.31748811353631}, {73., 4.30406509320417}}], 
                  
                  Polygon[{{52., 0.}, {58., 0.}, {57., 4.060443010546419}, {
                   56., 4.04305126783455}, {55., 4.02535169073515}, {54., 
                   4.007333185232471}, {53., 3.9889840465642745`}}], 
                  
                  Polygon[{{30., 0.}, {36., 0.}, {35., 3.58351893845611}, {
                   34., 3.5553480614894135`}, {33., 3.5263605246161616`}, {
                   32., 3.4965075614664802`}, {31., 3.4657359027997265`}}]}, {
                  
                  Polygon[{{88., 0.}, {96., 0.}, {95., 4.564348191467836}, {
                   94., 4.553876891600541}, {93., 4.543294782270004}, {92., 
                   4.532599493153256}, {91., 4.5217885770490405`}, {90., 
                   4.51085950651685}, {89., 
                   4.499809670330265}}]}}]}, {}, {}}, {{}, {}, 
              Annotation[{
                Hue[0.67, 0.6, 0.6], 
                Directive[
                 PointSize[
                  Rational[1, 60]], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[2]], 
                Line[CompressedData["
1:eJxdlH1MzHEcx08hnJJw5DwljznRkaRy77vq9HjdY5fEwhpT5umSCftp5mFm
U5rN4zytkLJsKEeSXfMwNuKYMSyzMGOLXKQwn88f9/1tt9vr8/q9Pr/f7fb7
hSxbY87zkclky/9+/n3/P75qZN4HvLEfvkT/7NaFd9B5gYIfCp9xYT/lVV3k
Rwh+FDZUxWguneK94yD3rd788UAv4vFQ2C47a/N9iCcI/SRsPd5yXfHWl+ZT
BB+GSuczxb1RfWiuwtik9GjFeeZwuv++xDOFPgI7S/PnFY/1o7la8LNQ2rqh
WPeD/WzU1qwpD1/UjzgSd1xxRY5rzHOEPgqdqrItlQX9aT4Xs/Z9/qFtZI7G
g5FfP5YHDiCeh/07fOteL2aOQWjKQXf2WeZYYX8cjrjlnRWRcprPF7wG+Xfq
Glrq2QOP6p5+e+4hloAO//rtXZEDyWvhah9kyV5HLGnp/2Wv894v6XBWe9vV
HOxP83i4/Xev7DQQS/HwX6+OaSlhnyD0CZgeF269+Z59ouATEW/tmtNHH0Bz
Pc7cPb1R7iCW9CjQ7b8RcJL9AqFfgEKnMXauh30S7NnqmvXjB1GfhIvKC1cf
pxLLktEjM/XkOtgnI/lczfmJR9mnCPtTMHBIU9HaD+xT0d59bWGJHz0nUiqM
BWH3vwfzc5OGhYerTw5TsU9Dur7Z9S6OfbqwPx171Xkvj+SyNwjegE8vJ++Y
UcI+A8oRrW2lZbw/g54/9kYUTi0/UHaJGEZUhKa8mN3E5xu99zcaEf3QeaL5
DfcmOEeWH6v/wr0JIdoVewq7uTcJvQka+7ccg3Iwzc3eHmaMrupy50SRl8zI
8Tt1WJlI3GhGUFtjU5WZewti1Wm7AnKJYcFUQ+jQxNXcW4TrW5AgbfodsYt7
K71/uLci71iFT/EJ7q1Cb8WTvI7+U+q5t2HAac8SvYt7G/Q3PqzCI+5teKwp
6z38Fd+/DbnrFv+618Z9pvD7MxGoilA+7OE+Ew05E2+NkQdRnwnHysqGDAWx
zI617vampSHEsOPQzcoim4pYsqP1+m9pWhT3dnjO+G17p+U+S7h+FlY5PFd6
2bnPwrTRiuAVS7nPovdzEP4AqJo9xg==
                 "]]}, "Charting`Private`Tag#1"]}}, "GCFlag" -> True|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0., 99.}, {0, 4.605170185988092}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0., 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
          "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             PointSize[
              Rational[1, 60]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {{{}, {
              EdgeForm[], 
              Directive[
               RGBColor[0.368417, 0.506779, 0.709798], 
               Opacity[0.2]], 
              GraphicsGroup[{{
                 Polygon[{{2., 0.}, {4., 0.}, {3., 1.3862943611198906`}}], 
                 Polygon[{{4., 0.}, {6., 0.}, {5., 1.791759469228055}}], 
                 Polygon[{{16., 0.}, {18., 0.}, {17., 2.8903717578961645`}}], 
                 Polygon[{{28., 0.}, {30., 0.}, {29., 3.4011973816621555`}}], 
                 Polygon[{{10., 0.}, {12., 0.}, {11., 2.4849066497880004`}}], 
                 Polygon[{{70., 0.}, {72., 0.}, {71., 4.276666119016055}}], 
                 Polygon[{{40., 0.}, {42., 0.}, {41., 3.7376696182833684`}}], 
                 Polygon[{{58., 0.}, {60., 0.}, {59., 4.0943445622221}}]}, {
                 
                 Polygon[{{12., 0.}, {16., 0.}, {15., 2.772588722239781}, {
                  14., 2.70805020110221}, {13., 2.6390573296152584`}}], 
                 
                 Polygon[{{66., 0.}, {70., 0.}, {69., 4.248495242049359}, {
                  68., 4.23410650459726}, {67., 4.219507705176107}}], 
                 
                 Polygon[{{18., 0.}, {22., 0.}, {21., 3.091042453358316}, {
                  20., 3.044522437723423}, {19., 2.995732273553991}}], 
                 
                 Polygon[{{6., 0.}, {10., 0.}, {9., 2.302585092994046}, {8., 
                  2.1972245773362196`}, {7., 2.0794415416798357`}}], 
                 
                 Polygon[{{96., 0.}, {99., 0.}, {99., 4.605170185988092}, {
                  98., 4.59511985013459}, {97., 4.584967478670572}}], 
                 
                 Polygon[{{36., 0.}, {40., 0.}, {39., 3.6888794541139363`}, {
                  38., 3.6635616461296463`}, {37., 3.6375861597263857`}}], 
                 
                 Polygon[{{42., 0.}, {46., 0.}, {45., 3.828641396489095}, {
                  44., 3.8066624897703196`}, {43., 3.784189633918261}}], 
                 
                 Polygon[{{78., 0.}, {82., 0.}, {81., 4.406719247264253}, {
                  80., 4.394449154672439}, {79., 4.382026634673881}}]}, {
                 
                 Polygon[{{60., 0.}, {66., 0.}, {65., 4.189654742026425}, {
                  64., 4.174387269895637}, {63., 4.1588830833596715`}, {62., 
                  4.143134726391533}, {61., 4.127134385045092}}], 
                 
                 Polygon[{{22., 0.}, {28., 0.}, {27., 3.332204510175204}, {
                  26., 3.295836866004329}, {25., 3.258096538021482}, {24., 
                  3.2188758248682006`}, {23., 3.1780538303479458`}}], 
                 
                 Polygon[{{46., 0.}, {52., 0.}, {51., 3.9512437185814275`}, {
                  50., 3.9318256327243257`}, {49., 3.912023005428146}, {48., 
                  3.8918202981106265`}, {47., 3.871201010907891}}], 
                 
                 Polygon[{{82., 0.}, {88., 0.}, {87., 4.477336814478207}, {
                  86., 4.465908118654584}, {85., 4.454347296253507}, {84., 
                  4.442651256490317}, {83., 4.430816798843313}}], 
                 
                 Polygon[{{72., 0.}, {78., 0.}, {77., 4.356708826689592}, {
                  76., 4.343805421853684}, {75., 4.330733340286331}, {74., 
                  4.31748811353631}, {73., 4.30406509320417}}], 
                 
                 Polygon[{{52., 0.}, {58., 0.}, {57., 4.060443010546419}, {
                  56., 4.04305126783455}, {55., 4.02535169073515}, {54., 
                  4.007333185232471}, {53., 3.9889840465642745`}}], 
                 
                 Polygon[{{30., 0.}, {36., 0.}, {35., 3.58351893845611}, {34.,
                   3.5553480614894135`}, {33., 3.5263605246161616`}, {32., 
                  3.4965075614664802`}, {31., 3.4657359027997265`}}]}, {
                 
                 Polygon[{{88., 0.}, {96., 0.}, {95., 4.564348191467836}, {
                  94., 4.553876891600541}, {93., 4.543294782270004}, {92., 
                  4.532599493153256}, {91., 4.5217885770490405`}, {90., 
                  4.51085950651685}, {89., 
                  4.499809670330265}}]}}]}, {}, {}}, {{}, {}, 
             Annotation[{
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[1, 60]], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]], 
               Line[CompressedData["
1:eJxdlH1MzHEcx08hnJJw5DwljznRkaRy77vq9HjdY5fEwhpT5umSCftp5mFm
U5rN4zytkLJsKEeSXfMwNuKYMSyzMGOLXKQwn88f9/1tt9vr8/q9Pr/f7fb7
hSxbY87zkclky/9+/n3/P75qZN4HvLEfvkT/7NaFd9B5gYIfCp9xYT/lVV3k
Rwh+FDZUxWguneK94yD3rd788UAv4vFQ2C47a/N9iCcI/SRsPd5yXfHWl+ZT
BB+GSuczxb1RfWiuwtik9GjFeeZwuv++xDOFPgI7S/PnFY/1o7la8LNQ2rqh
WPeD/WzU1qwpD1/UjzgSd1xxRY5rzHOEPgqdqrItlQX9aT4Xs/Z9/qFtZI7G
g5FfP5YHDiCeh/07fOteL2aOQWjKQXf2WeZYYX8cjrjlnRWRcprPF7wG+Xfq
Glrq2QOP6p5+e+4hloAO//rtXZEDyWvhah9kyV5HLGnp/2Wv894v6XBWe9vV
HOxP83i4/Xev7DQQS/HwX6+OaSlhnyD0CZgeF269+Z59ouATEW/tmtNHH0Bz
Pc7cPb1R7iCW9CjQ7b8RcJL9AqFfgEKnMXauh30S7NnqmvXjB1GfhIvKC1cf
pxLLktEjM/XkOtgnI/lczfmJR9mnCPtTMHBIU9HaD+xT0d59bWGJHz0nUiqM
BWH3vwfzc5OGhYerTw5TsU9Dur7Z9S6OfbqwPx171Xkvj+SyNwjegE8vJ++Y
UcI+A8oRrW2lZbw/g54/9kYUTi0/UHaJGEZUhKa8mN3E5xu99zcaEf3QeaL5
DfcmOEeWH6v/wr0JIdoVewq7uTcJvQka+7ccg3Iwzc3eHmaMrupy50SRl8zI
8Tt1WJlI3GhGUFtjU5WZewti1Wm7AnKJYcFUQ+jQxNXcW4TrW5AgbfodsYt7
K71/uLci71iFT/EJ7q1Cb8WTvI7+U+q5t2HAac8SvYt7G/Q3PqzCI+5teKwp
6z38Fd+/DbnrFv+618Z9pvD7MxGoilA+7OE+Ew05E2+NkQdRnwnHysqGDAWx
zI617vampSHEsOPQzcoim4pYsqP1+m9pWhT3dnjO+G17p+U+S7h+FlY5PFd6
2bnPwrTRiuAVS7nPovdzEP4AqJo9xg==
                "]]}, "Charting`Private`Tag#1"]}}, "GCFlag" -> True|>, 
        "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListLinePlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[
     GraphicsComplex[CompressedData["
1:eJztlYtPU2cYhytMUSuXOdeJ9YZMp1jZKCIisP5aoHItvVJkuOASohEMKmUY
ccuRGJ0xJoLExGu8BRQEo4kKVi5jKXMuM0G0LovLtkAMaowkIBRF2Izvm6Vf
4n/Qk5yc/N7nPO93Tk6+84Z9U2Iu9JPJZD//d769vjsGNDLvA95xKl7EvRrX
RQ7TfSECnwW/hRGv5A1jxGcLfC5KG+I1V89y34WQ+zfufHp4EuVFUNiuOa8U
+VH+VPCX4LtTPbcU//hTfanAI1DnfKi4M3cy1VVYkJoVp6jnHEnPP4XyF4If
hb1VRWsqFgRQXS3waFT1llboRpivxJWmkprIr6ZSjsFtV2K54ybnVYIfi1FV
9a664mlUX43og89HtB2c4/DbnIGnNSHTKa/BoT3+zX+t5xyP8PQj7rwLnBOE
/ok47paP1sbIqf6lwDUout3c1tPCHOhufjD0u4eyBAwHtuwei5lBXAvXYLAl
bxtlSUvfl7nOu7+kwwXtT66u0ECqJ8Ed+MOmUQNlKQmB29XxPZXMkwU/GSsS
I63tj5mnCDwFSdaxVZP1QVTX4/wv576VOyhLehTrDrUGnWG+VvDXosxpTFjt
YZ4Ke566afuiYPJTcVl56ca9DMqyNEzITBMFDuZpSLvYVL/4BPN0oX86ZnzU
Wb71CfMMDI7fXFcZQPtEyoCxOOLXl6G8bzKx7ljjmY9VzDORpe9y9SUyzxL6
Z+GAuvDR8QLmBoEb8OzRZ3s+r2SeDeXs3v6qau6fTfuPuRFly2oOV1+lDCNq
w9P/WNnJ9xu9+3cYEXfXebrrb/ZNcM6pOdnygn0TwrQb95eNs28SfBM09qF8
g/JDqpu9OcyY1zDmzo8lLpmRH3D2mDKFcocZM/s7OhvM7FuQoM7cF1RAGRYs
M4TPStnCvkVY34JkacebqH3sW+n/w74VhSdr/SpOs28VfCvuFw5PW9rCvg3T
z3m+1rvYt0Hf+mQzutm34Z6m+oNP/uTnt6Fg2/rXd/rZzxHePwchqijl3Qn2
c9CWv/jH+fKZ5OfAsamuLVtBWWbHVvdg54YwyrDjaHtduU1FWbKj99YbaXks
+3Z4zgd836dlP1dYPxebHZ7rk+zs52L5PEXoxg3s59L/+f/s5fvmh29++OaH
b3745gf5vvnxvvnxL9XJezc=
      "], {{{}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroup[{
           
           Polygon[{{2, 4, 3}, {4, 6, 5}, {16, 18, 17}, {28, 30, 29}, {10, 12,
             11}, {70, 72, 71}, {40, 42, 41}, {58, 60, 59}}], 
           
           Polygon[{{12, 16, 15, 14, 13}, {66, 70, 69, 68, 67}, {18, 22, 21, 
            20, 19}, {6, 10, 9, 8, 7}, {96, 100, 99, 98, 97}, {36, 40, 39, 38,
             37}, {42, 46, 45, 44, 43}, {78, 82, 81, 80, 79}}], 
           
           Polygon[{{60, 66, 65, 64, 63, 62, 61}, {22, 28, 27, 26, 25, 24, 
            23}, {46, 52, 51, 50, 49, 48, 47}, {82, 88, 87, 86, 85, 84, 83}, {
            72, 78, 77, 76, 75, 74, 73}, {52, 58, 57, 56, 55, 54, 53}, {30, 
            36, 35, 34, 33, 32, 31}}], 
           
           Polygon[{{88, 96, 95, 94, 93, 92, 91, 90, 
            89}}]}]}, {}, {}}, {{}, {}, 
        Annotation[{
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[1, 60]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]], 
          
          Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
            19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
           35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
            52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 
           68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
            85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99}]}, 
         "Charting`Private`Tag#1"]}}], <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0., 99.}, {0, 4.605170185988092}}, 
        "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0., 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[
            Rational[1, 60]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {{{}, {
            EdgeForm[], 
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             Opacity[0.2]], 
            GraphicsGroup[{{
               Polygon[{{2., 0.}, {4., 0.}, {3., 1.3862943611198906`}}], 
               Polygon[{{4., 0.}, {6., 0.}, {5., 1.791759469228055}}], 
               Polygon[{{16., 0.}, {18., 0.}, {17., 2.8903717578961645`}}], 
               Polygon[{{28., 0.}, {30., 0.}, {29., 3.4011973816621555`}}], 
               Polygon[{{10., 0.}, {12., 0.}, {11., 2.4849066497880004`}}], 
               Polygon[{{70., 0.}, {72., 0.}, {71., 4.276666119016055}}], 
               Polygon[{{40., 0.}, {42., 0.}, {41., 3.7376696182833684`}}], 
               Polygon[{{58., 0.}, {60., 0.}, {59., 4.0943445622221}}]}, {
               
               Polygon[{{12., 0.}, {16., 0.}, {15., 2.772588722239781}, {14., 
                2.70805020110221}, {13., 2.6390573296152584`}}], 
               
               Polygon[{{66., 0.}, {70., 0.}, {69., 4.248495242049359}, {68., 
                4.23410650459726}, {67., 4.219507705176107}}], 
               
               Polygon[{{18., 0.}, {22., 0.}, {21., 3.091042453358316}, {20., 
                3.044522437723423}, {19., 2.995732273553991}}], 
               
               Polygon[{{6., 0.}, {10., 0.}, {9., 2.302585092994046}, {8., 
                2.1972245773362196`}, {7., 2.0794415416798357`}}], 
               
               Polygon[{{96., 0.}, {99., 0.}, {99., 4.605170185988092}, {98., 
                4.59511985013459}, {97., 4.584967478670572}}], 
               
               Polygon[{{36., 0.}, {40., 0.}, {39., 3.6888794541139363`}, {
                38., 3.6635616461296463`}, {37., 3.6375861597263857`}}], 
               
               Polygon[{{42., 0.}, {46., 0.}, {45., 3.828641396489095}, {44., 
                3.8066624897703196`}, {43., 3.784189633918261}}], 
               
               Polygon[{{78., 0.}, {82., 0.}, {81., 4.406719247264253}, {80., 
                4.394449154672439}, {79., 4.382026634673881}}]}, {
               
               Polygon[{{60., 0.}, {66., 0.}, {65., 4.189654742026425}, {64., 
                4.174387269895637}, {63., 4.1588830833596715`}, {62., 
                4.143134726391533}, {61., 4.127134385045092}}], 
               
               Polygon[{{22., 0.}, {28., 0.}, {27., 3.332204510175204}, {26., 
                3.295836866004329}, {25., 3.258096538021482}, {24., 
                3.2188758248682006`}, {23., 3.1780538303479458`}}], 
               
               Polygon[{{46., 0.}, {52., 0.}, {51., 3.9512437185814275`}, {
                50., 3.9318256327243257`}, {49., 3.912023005428146}, {48., 
                3.8918202981106265`}, {47., 3.871201010907891}}], 
               
               Polygon[{{82., 0.}, {88., 0.}, {87., 4.477336814478207}, {86., 
                4.465908118654584}, {85., 4.454347296253507}, {84., 
                4.442651256490317}, {83., 4.430816798843313}}], 
               
               Polygon[{{72., 0.}, {78., 0.}, {77., 4.356708826689592}, {76., 
                4.343805421853684}, {75., 4.330733340286331}, {74., 
                4.31748811353631}, {73., 4.30406509320417}}], 
               
               Polygon[{{52., 0.}, {58., 0.}, {57., 4.060443010546419}, {56., 
                4.04305126783455}, {55., 4.02535169073515}, {54., 
                4.007333185232471}, {53., 3.9889840465642745`}}], 
               
               Polygon[{{30., 0.}, {36., 0.}, {35., 3.58351893845611}, {34., 
                3.5553480614894135`}, {33., 3.5263605246161616`}, {32., 
                3.4965075614664802`}, {31., 3.4657359027997265`}}]}, {
               
               Polygon[{{88., 0.}, {96., 0.}, {95., 4.564348191467836}, {94., 
                4.553876891600541}, {93., 4.543294782270004}, {92., 
                4.532599493153256}, {91., 4.5217885770490405`}, {90., 
                4.51085950651685}, {89., 
                4.499809670330265}}]}}]}, {}, {}}, {{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[1, 60]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1:eJxdlH1MzHEcx08hnJJw5DwljznRkaRy77vq9HjdY5fEwhpT5umSCftp5mFm
U5rN4zytkLJsKEeSXfMwNuKYMSyzMGOLXKQwn88f9/1tt9vr8/q9Pr/f7fb7
hSxbY87zkclky/9+/n3/P75qZN4HvLEfvkT/7NaFd9B5gYIfCp9xYT/lVV3k
Rwh+FDZUxWguneK94yD3rd788UAv4vFQ2C47a/N9iCcI/SRsPd5yXfHWl+ZT
BB+GSuczxb1RfWiuwtik9GjFeeZwuv++xDOFPgI7S/PnFY/1o7la8LNQ2rqh
WPeD/WzU1qwpD1/UjzgSd1xxRY5rzHOEPgqdqrItlQX9aT4Xs/Z9/qFtZI7G
g5FfP5YHDiCeh/07fOteL2aOQWjKQXf2WeZYYX8cjrjlnRWRcprPF7wG+Xfq
Glrq2QOP6p5+e+4hloAO//rtXZEDyWvhah9kyV5HLGnp/2Wv894v6XBWe9vV
HOxP83i4/Xev7DQQS/HwX6+OaSlhnyD0CZgeF269+Z59ouATEW/tmtNHH0Bz
Pc7cPb1R7iCW9CjQ7b8RcJL9AqFfgEKnMXauh30S7NnqmvXjB1GfhIvKC1cf
pxLLktEjM/XkOtgnI/lczfmJR9mnCPtTMHBIU9HaD+xT0d59bWGJHz0nUiqM
BWH3vwfzc5OGhYerTw5TsU9Dur7Z9S6OfbqwPx171Xkvj+SyNwjegE8vJ++Y
UcI+A8oRrW2lZbw/g54/9kYUTi0/UHaJGEZUhKa8mN3E5xu99zcaEf3QeaL5
DfcmOEeWH6v/wr0JIdoVewq7uTcJvQka+7ccg3Iwzc3eHmaMrupy50SRl8zI
8Tt1WJlI3GhGUFtjU5WZewti1Wm7AnKJYcFUQ+jQxNXcW4TrW5AgbfodsYt7
K71/uLci71iFT/EJ7q1Cb8WTvI7+U+q5t2HAac8SvYt7G/Q3PqzCI+5teKwp
6z38Fd+/DbnrFv+618Z9pvD7MxGoilA+7OE+Ew05E2+NkQdRnwnHysqGDAWx
zI617vampSHEsOPQzcoim4pYsqP1+m9pWhT3dnjO+G17p+U+S7h+FlY5PFd6
2bnPwrTRiuAVS7nPovdzEP4AqJo9xg==
              "]]}, "Charting`Private`Tag#1"]}}, "GCFlag" -> True|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListLinePlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 99.}, {0, 4.605170185988092}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.8994547479849467`*^9, 3.899454760946744*^9}},
 CellLabel->"Out[134]=",
 CellID->405154369,ExpressionUUID->"e1373eb8-1583-40b1-b68e-010d25160935"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Now let's look at Lucas numbers.", "MathCaption",
 CellChangeTimes->{{3.899799290132839*^9, 3.8997992970413914`*^9}},
 CellID->142308320,ExpressionUUID->"d763c5c3-32fc-4360-a086-879460dae990"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "LucasNumberU1"}]], "Input",
 CellChangeTimes->{{3.899755852976594*^9, 3.899755855718154*^9}},
 CellLabel->"In[942]:=",
 CellID->317076608,ExpressionUUID->"6e0ece63-6a17-428f-92a9-1b21aad3d590"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              
              ButtonData->
               "paclet:PeterBurbery/Combinatorics/ref/LucasNumberU1",
              
              ButtonNote->
               "paclet:PeterBurbery/Combinatorics/ref/LucasNumberU1"],
             "\"paclet:PeterBurbery/Combinatorics/ref/LucasNumberU1\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"LucasNumberU1[n, p, q] calculates the term of the \
Lucas sequence of the first kind U_n(p, q).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"LucasNumberU1", "[", 
                    
                    RowBox[{
                    "0", ",", "PeterBurbery`Combinatorics`Private`p_", ",", 
                    "PeterBurbery`Combinatorics`Private`q_"}], "]"}], ":=", 
                    "0"}]}, {" "}, {
                    RowBox[{
                    RowBox[{"LucasNumberU1", "[", 
                    
                    RowBox[{
                    "1", ",", "PeterBurbery`Combinatorics`Private`p_", ",", 
                    "PeterBurbery`Combinatorics`Private`q_"}], "]"}], ":=", 
                    "1"}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"LucasNumberU1", "[", 
                    
                    RowBox[{
                    "PeterBurbery`Combinatorics`Private`n_", ",", 
                    "PeterBurbery`Combinatorics`Private`p_", ",", 
                    "PeterBurbery`Combinatorics`Private`q_"}], "]"}], "/;", 
                    
                    RowBox[{
                    "PeterBurbery`Combinatorics`Private`n", ">", "1"}]}], 
                    ":=", 
                    RowBox[{
                    RowBox[{"LucasNumberU1", "[", 
                    
                    RowBox[{
                    "PeterBurbery`Combinatorics`Private`n", ",", 
                    "PeterBurbery`Combinatorics`Private`p", ",", 
                    "PeterBurbery`Combinatorics`Private`q"}], "]"}], "=", 
                    RowBox[{
                    RowBox[{"PeterBurbery`Combinatorics`Private`p", " ", 
                    RowBox[{"LucasNumberU1", "[", 
                    RowBox[{
                    
                    RowBox[{"PeterBurbery`Combinatorics`Private`n", "-", 
                    "1"}], ",", "PeterBurbery`Combinatorics`Private`p", ",", 
                    "PeterBurbery`Combinatorics`Private`q"}], "]"}]}], "-", 
                    RowBox[{"PeterBurbery`Combinatorics`Private`q", " ", 
                    RowBox[{"LucasNumberU1", "[", 
                    RowBox[{
                    
                    RowBox[{"PeterBurbery`Combinatorics`Private`n", "-", 
                    "2"}], ",", "PeterBurbery`Combinatorics`Private`p", ",", 
                    "PeterBurbery`Combinatorics`Private`q"}], 
                    "]"}]}]}]}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:PeterBurbery/Combinatorics/ref/LucasNumberU1", 
                    "paclet:PeterBurbery/Combinatorics/ref/LucasNumberU1", 
                    "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"Listable", ",", "NumericFunction"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], \
"\<\"PeterBurbery`Combinatorics`LucasNumberU1\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              
              ButtonData->
               "paclet:PeterBurbery/Combinatorics/ref/LucasNumberU1",
              
              ButtonNote->
               "paclet:PeterBurbery/Combinatorics/ref/LucasNumberU1"],
             "\"paclet:PeterBurbery/Combinatorics/ref/LucasNumberU1\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"LucasNumberU1[n, p, q] calculates the term of the \
Lucas sequence of the first kind U_n(p, q).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "LucasNumberU1[n, p, q] calculates the term of the Lucas sequence of the \
first kind U_n(p, q).", 
    "Documentation" -> <|
     "Local" -> "paclet:PeterBurbery/Combinatorics/ref/LucasNumberU1"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, PeterBurbery`Combinatorics`LucasNumberU1, {
      PeterBurbery`Combinatorics`LucasNumberU1[0, 
         Pattern[PeterBurbery`Combinatorics`Private`p, 
          Blank[]], 
         Pattern[PeterBurbery`Combinatorics`Private`q, 
          Blank[]]] :> 0, PeterBurbery`Combinatorics`LucasNumberU1[1, 
         Pattern[PeterBurbery`Combinatorics`Private`p, 
          Blank[]], 
         Pattern[PeterBurbery`Combinatorics`Private`q, 
          Blank[]]] :> 1, Condition[
         PeterBurbery`Combinatorics`LucasNumberU1[
          Pattern[PeterBurbery`Combinatorics`Private`n, 
           Blank[]], 
          Pattern[PeterBurbery`Combinatorics`Private`p, 
           Blank[]], 
          Pattern[PeterBurbery`Combinatorics`Private`q, 
           Blank[]]], PeterBurbery`Combinatorics`Private`n > 1] :> (
        PeterBurbery`Combinatorics`LucasNumberU1[
         PeterBurbery`Combinatorics`Private`n, 
          PeterBurbery`Combinatorics`Private`p, 
          PeterBurbery`Combinatorics`Private`q] = 
        PeterBurbery`Combinatorics`Private`p 
          PeterBurbery`Combinatorics`LucasNumberU1[
           PeterBurbery`Combinatorics`Private`n - 1, 
            PeterBurbery`Combinatorics`Private`p, 
            PeterBurbery`Combinatorics`Private`q] - 
         PeterBurbery`Combinatorics`Private`q 
         PeterBurbery`Combinatorics`LucasNumberU1[
          PeterBurbery`Combinatorics`Private`n - 2, 
           PeterBurbery`Combinatorics`Private`p, 
           PeterBurbery`Combinatorics`Private`q])}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Listable, NumericFunction}, 
    "FullName" -> "PeterBurbery`Combinatorics`LucasNumberU1"|>, 
   False]]], "Output",
 CellChangeTimes->{3.8997558561149435`*^9},
 CellLabel->"Out[942]=",
 CellID->38873197,ExpressionUUID->"1e8f7b52-99a9-4b53-a468-dddb95e0b2d2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["U", "n"], 
   RowBox[{"(", 
    RowBox[{"2", ",", 
     RowBox[{"-", "1"}]}], ")"}]}]], "InlineFormula",ExpressionUUID->
  "778bd42c-4398-465f-8909-5f06120e8c64"],
 " represents the Pell numbers:"
}], "MathCaption",
 CellChangeTimes->{{3.8983670800389123`*^9, 3.8983670947313766`*^9}},
 CellID->199205649,ExpressionUUID->"bd54cf11-be91-45e1-a12a-cc9f126b123d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EchoTiming", "[", 
  RowBox[{"LucasNumberU1", "[", 
   RowBox[{
    RowBox[{"Range", "[", "21", "]"}], ",", "2", ",", 
    RowBox[{"-", "1"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8983672432194366`*^9, 3.8983672460506954`*^9}, 
   3.8983673772102027`*^9},
 CellLabel->"In[332]:=",
 CellID->444434879,ExpressionUUID->"2dc714d6-fe2a-4eae-824f-54b76bc9e92d"],

Cell[BoxData["0.0000281`"], "EchoTiming",
 CellChangeTimes->{3.8983673895559545`*^9},
 CellID->24383746,ExpressionUUID->"45d064d5-a2a0-4a5b-a61d-26dc916ee879"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "5", ",", "12", ",", "29", ",", "70", ",", "169", ",", 
   "408", ",", "985", ",", "2378", ",", "5741", ",", "13860", ",", "33461", 
   ",", "80782", ",", "195025", ",", "470832", ",", "1136689", ",", "2744210",
    ",", "6625109", ",", "15994428", ",", "38613965"}], "}"}]], "Output",
 CellChangeTimes->{3.8983671006181746`*^9, 3.8983672470662675`*^9, 
  3.8983673903880253`*^9},
 CellLabel->"Out[332]=",
 CellID->280470809,ExpressionUUID->"d67007a7-b388-4016-b39f-b5aaa9f1df6b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["You can also do the Pell numbers with LinearRecurrence:", "MathCaption",
 CellChangeTimes->{{3.898969895073705*^9, 3.898969932391634*^9}, 
   3.899755842603794*^9},
 CellID->48779360,ExpressionUUID->"feed23a4-79a8-4ec8-8c32-7ba84c6863ae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearRecurrence", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", "21"}], "]"}]], "Input",
 CellChangeTimes->{{3.898969874381728*^9, 3.898969874567844*^9}},
 CellLabel->"In[104]:=",
 CellID->59766089,ExpressionUUID->"6afbf48f-fe18-49e5-8751-08136abc3bb2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "2", ",", "5", ",", "12", ",", "29", ",", "70", ",", 
   "169", ",", "408", ",", "985", ",", "2378", ",", "5741", ",", "13860", ",",
    "33461", ",", "80782", ",", "195025", ",", "470832", ",", "1136689", ",", 
   "2744210", ",", "6625109", ",", "15994428"}], "}"}]], "Output",
 CellChangeTimes->{3.898969875425189*^9},
 CellLabel->"Out[104]=",
 CellID->6049817,ExpressionUUID->"7283dd31-97b2-49cc-9097-693b24fdad3d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find a linear recurrence:", "MathCaption",
 CellChangeTimes->{{3.8989700205156*^9, 3.898970024371616*^9}},
 CellID->234878772,ExpressionUUID->"cf6bb608-f6f0-4505-a475-fec981e98981"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindLinearRecurrence", "[", 
  RowBox[{"EchoTiming", "[", 
   RowBox[{"LucasNumberU1", "[", 
    RowBox[{
     RowBox[{"Range", "[", "21", "]"}], ",", "2", ",", 
     RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8989699774957495`*^9, 3.8989700130435724`*^9}},
 CellLabel->"In[107]:=",
 CellID->148202768,ExpressionUUID->"e1fde8fa-c5b4-4a5a-9d78-57bb94ecd196"],

Cell[BoxData["0.0001767`"], "EchoTiming",
 CellChangeTimes->{3.898970015456313*^9},
 CellID->510846472,ExpressionUUID->"2cc580e5-7229-429b-8f51-84e5f88953a7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.8989700167549405`*^9},
 CellLabel->"Out[107]=",
 CellID->23869527,ExpressionUUID->"bba3ca55-8282-434b-a7a0-aadd87c2e61a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generate a linear recurrence:", "MathCaption",
 CellChangeTimes->{{3.898970028733661*^9, 3.8989700339301763`*^9}},
 CellID->10558311,ExpressionUUID->"664a15f1-c4c3-4ef6-8497-2bee41607e8b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearRecurrence", "[", 
  RowBox[{
   RowBox[{"FindLinearRecurrence", "[", 
    RowBox[{"EchoTiming", "[", 
     RowBox[{"LucasNumberU1", "[", 
      RowBox[{
       RowBox[{"Range", "[", "21", "]"}], ",", "2", ",", 
       RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"LucasNumberU1", "[", 
      RowBox[{
       RowBox[{"Range", "[", "2", "]"}], ",", "2", ",", 
       RowBox[{"-", "1"}]}], "]"}], ",", "2"}], "]"}], ",", "10"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8989699774957495`*^9, 3.8989700723910227`*^9}},
 CellLabel->"In[108]:=",
 CellID->58237670,ExpressionUUID->"d2db13ad-d747-4304-9403-8814065631f5"],

Cell[BoxData["0.0000285`"], "EchoTiming",
 CellChangeTimes->{3.8989700727470245`*^9},
 CellID->74044636,ExpressionUUID->"bdb74d8b-ec2f-420b-b60f-3d8e01a5d8dd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "5", ",", "12", ",", "29", ",", "70", ",", "169", ",", 
   "408", ",", "985", ",", "2378"}], "}"}]], "Output",
 CellChangeTimes->{3.8989700740910244`*^9},
 CellLabel->"Out[108]=",
 CellID->51587048,ExpressionUUID->"0102b35c-395b-4067-afeb-90aecb6dbb26"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["We can also find a Fibonacci function:", "MathCaption",
 CellChangeTimes->{{3.89897022986347*^9, 3.8989702359980965`*^9}},
 CellID->74692364,ExpressionUUID->"269b00b6-4e18-462e-a94f-59a641212329"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindSequenceFunction", "[", 
  RowBox[{"LucasNumberU1", "[", 
   RowBox[{
    RowBox[{"Range", "[", "21", "]"}], ",", "2", ",", 
    RowBox[{"-", "1"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8989701511268773`*^9, 3.8989701743986173`*^9}},
 CellLabel->"In[109]:=",
 CellID->436274302,ExpressionUUID->"5f814beb-5f3a-4948-b9e8-004736c7fad7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Fibonacci", "[", 
   RowBox[{"#1", ",", "2"}], "]"}], "&"}]], "Output",
 CellChangeTimes->{3.8989701754857283`*^9},
 CellLabel->"Out[109]=",
 CellID->581705438,ExpressionUUID->"d74d7489-7613-4e1c-927d-e2d3faf1dfae"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "6d7c29aa-ac6d-4550-aa43-6250cb426911"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->376301338,ExpressionUUID->"dcc9c0bc-4f95-446c-b76b-6d0ed92c7aa8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["U", "n"], 
   RowBox[{"(", 
    RowBox[{"1", ",", 
     RowBox[{"-", "2"}]}], ")"}]}]], "InlineFormula",ExpressionUUID->
  "cb272caa-e77a-49c4-82f1-d680dabfe5c8"],
 " represents the Jacobsthal numbers:"
}], "MathCaption",
 CellChangeTimes->{{3.8983671110132236`*^9, 3.898367124461734*^9}},
 CellID->228255672,ExpressionUUID->"e5e50464-c62c-43a2-8457-6082865e7519"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EchoTiming", "[", 
  RowBox[{"LucasNumberU1", "[", 
   RowBox[{
    RowBox[{"Range", "[", "21", "]"}], ",", "1", ",", 
    RowBox[{"-", "2"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8983671300857515`*^9, 3.898367132068262*^9}, 
   3.8983673772202024`*^9},
 CellLabel->"In[333]:=",
 CellID->72949216,ExpressionUUID->"3d5b7ff7-817d-4093-aab3-df91b5018f49"],

Cell[BoxData["0.0000269`"], "EchoTiming",
 CellChangeTimes->{3.898367393013151*^9},
 CellID->196950653,ExpressionUUID->"7a012a89-1276-478e-bda6-75d9dd0a8930"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "3", ",", "5", ",", "11", ",", "21", ",", "43", ",", 
   "85", ",", "171", ",", "341", ",", "683", ",", "1365", ",", "2731", ",", 
   "5461", ",", "10923", ",", "21845", ",", "43691", ",", "87381", ",", 
   "174763", ",", "349525", ",", "699051"}], "}"}]], "Output",
 CellChangeTimes->{3.8983671330884094`*^9, 3.898367393858669*^9},
 CellLabel->"Out[333]=",
 CellID->157710615,ExpressionUUID->"fad2aab7-a387-40bb-a167-10cfe61ee7f0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["We can find a pattern:", "MathCaption",
 CellChangeTimes->{{3.8989702556265726`*^9, 3.898970260919688*^9}},
 CellID->63779103,ExpressionUUID->"0d19e735-ca80-4015-970c-017bc26d1508"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindSequenceFunction", "[", 
  RowBox[{"LucasNumberU1", "[", 
   RowBox[{
    RowBox[{"Range", "[", "21", "]"}], ",", "1", ",", 
    RowBox[{"-", "2"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8989701511268773`*^9, 3.898970189719262*^9}},
 CellLabel->"In[111]:=",
 CellID->559477600,ExpressionUUID->"380cf6d7-a1d7-4a95-8604-7c25f7dbad7b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "3"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "#1"]}], "+", 
     SuperscriptBox["2", "#1"]}], ")"}]}], "&"}]], "Output",
 CellChangeTimes->{3.8989701907678776`*^9, 3.8989702637720766`*^9},
 CellLabel->"Out[111]=",
 CellID->854014107,ExpressionUUID->"e832e323-9237-4e32-95ec-a22e65a20038"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generate a new array:", "MathCaption",
 CellChangeTimes->{{3.898970289670638*^9, 3.898970298856121*^9}},
 CellID->297234162,ExpressionUUID->"b41c1a1c-3759-41af-b72d-95931d08d3d4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Array", "[", 
  RowBox[{
   RowBox[{"FindSequenceFunction", "[", 
    RowBox[{"LucasNumberU1", "[", 
     RowBox[{
      RowBox[{"Range", "[", "21", "]"}], ",", "1", ",", 
      RowBox[{"-", "2"}]}], "]"}], "]"}], ",", "21"}], "]"}]], "Input",
 CellChangeTimes->{{3.8989702780491457`*^9, 3.898970284887712*^9}},
 CellLabel->"In[112]:=",
 CellID->384199976,ExpressionUUID->"6a3bd978-b472-4b86-90f9-ec108c5977cb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "3", ",", "5", ",", "11", ",", "21", ",", "43", ",", 
   "85", ",", "171", ",", "341", ",", "683", ",", "1365", ",", "2731", ",", 
   "5461", ",", "10923", ",", "21845", ",", "43691", ",", "87381", ",", 
   "174763", ",", "349525", ",", "699051"}], "}"}]], "Output",
 CellChangeTimes->{3.8989702858027115`*^9},
 CellLabel->"Out[112]=",
 CellID->60351254,ExpressionUUID->"0413abcf-7127-400d-b8a1-7571fe700f22"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "0efae0b3-3b45-4ad7-b844-3bd87cd0fc39"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->64234199,ExpressionUUID->"9d24c3f4-b6a8-4cc1-b28a-4a95af50619b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["U", "n"], 
   RowBox[{"(", 
    RowBox[{"3", ",", "2"}], ")"}]}]], "InlineFormula",ExpressionUUID->
  "29ac4ae3-6e92-4e59-9060-f1ec1a5fc1a6"],
 " represents the Mersenne numbers:"
}], "MathCaption",
 CellChangeTimes->{{3.898367254104355*^9, 3.8983672665886517`*^9}},
 CellID->71222372,ExpressionUUID->"aa1b0702-3741-4180-a99b-8b6a35aff39a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EchoTiming", "[", 
  RowBox[{"LucasNumberU1", "[", 
   RowBox[{
    RowBox[{"Range", "[", "21", "]"}], ",", "3", ",", "2"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.89836727403951*^9, 3.898367275955843*^9}, 
   3.8983673772252007`*^9},
 CellLabel->"In[334]:=",
 CellID->612463501,ExpressionUUID->"19d28af1-c8a9-4370-9da1-b2a4f93c5e27"],

Cell[BoxData["0.0000259`"], "EchoTiming",
 CellChangeTimes->{3.898367396431939*^9},
 CellID->339196886,ExpressionUUID->"a551050f-79ac-4811-8d04-25f86d469d3d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "3", ",", "7", ",", "15", ",", "31", ",", "63", ",", "127", ",", 
   "255", ",", "511", ",", "1023", ",", "2047", ",", "4095", ",", "8191", ",",
    "16383", ",", "32767", ",", "65535", ",", "131071", ",", "262143", ",", 
   "524287", ",", "1048575", ",", "2097151"}], "}"}]], "Output",
 CellChangeTimes->{3.8983672770729*^9, 3.8983673972694945`*^9},
 CellLabel->"Out[334]=",
 CellID->244982401,ExpressionUUID->"a1d80b2f-b77e-4f4f-af41-0130ee470973"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "2cf59b67-4290-47b8-ab18-12b1d76e3a9d"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->795616469,ExpressionUUID->"f466c188-d27b-4c36-873d-9f43c6d89744"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["U", "n"], 
   RowBox[{"(", 
    RowBox[{"6", ",", "1"}], ")"}]}]], "InlineFormula",ExpressionUUID->
  "2f6f0600-827b-4bcf-8721-53900515a99a"],
 " represents the square roots of the square triangular numbers:"
}], "MathCaption",
 CellChangeTimes->{{3.898367299427387*^9, 3.8983673148057985`*^9}},
 CellID->29412029,ExpressionUUID->"29c169bd-1468-424c-b31d-b46724656bfe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EchoTiming", "[", 
  RowBox[{"LucasNumberU1", "[", 
   RowBox[{
    RowBox[{"Range", "[", "21", "]"}], ",", "6", ",", "1"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8983673233671265`*^9, 3.898367324400962*^9}, 
   3.8983673772322025`*^9},
 CellLabel->"In[335]:=",
 CellID->13291710,ExpressionUUID->"d505f02b-eff4-4a07-b910-516d5096b73d"],

Cell[BoxData["0.0000271`"], "EchoTiming",
 CellChangeTimes->{3.898367399885043*^9},
 CellID->61324748,ExpressionUUID->"7b033bf5-f834-4f82-9817-c8462c88fbb4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "6", ",", "35", ",", "204", ",", "1189", ",", "6930", ",", 
   "40391", ",", "235416", ",", "1372105", ",", "7997214", ",", "46611179", 
   ",", "271669860", ",", "1583407981", ",", "9228778026", ",", "53789260175",
    ",", "313506783024", ",", "1827251437969", ",", "10650001844790", ",", 
   "62072759630771", ",", "361786555939836", ",", "2108646576008245"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.898367325627042*^9, 3.8983674007140956`*^9},
 CellLabel->"Out[335]=",
 CellID->60671734,ExpressionUUID->"41d265d9-5969-44cf-868a-1a13caada2f7"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "cd7f8d71-8b96-4581-8e9a-50e41f8a107c"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->179371755,ExpressionUUID->"b417dd61-3c0f-41a8-ae64-8a888c8c8314"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["U", "n"], 
   RowBox[{"(", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}]}], ")"}]}]], "InlineFormula",ExpressionUUID->
  "2e13fa8d-23d5-42c4-aa5a-5e7aca3922c5"],
 " represents the Fibonacci polynomials:"
}], "MathCaption",
 CellChangeTimes->{{3.89836740837278*^9, 3.898367423134612*^9}},
 CellID->68513831,ExpressionUUID->"bfbef334-810b-446a-a423-bb34f7643885"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"LucasNumberU1", "[", 
   RowBox[{
    RowBox[{"Range", "[", "7", "]"}], ",", "x", ",", 
    RowBox[{"-", "1"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.898367424608721*^9, 3.8983674415427437`*^9}},
 CellLabel->"In[337]:=",
 CellID->691053818,ExpressionUUID->"ea907848-9793-41a2-a49a-ca43fd9ce092"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "x", ",", 
   RowBox[{"1", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{
    RowBox[{"2", " ", "x"}], "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"1", "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    SuperscriptBox["x", "4"]}], ",", 
   RowBox[{
    RowBox[{"3", " ", "x"}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["x", "3"]}], "+", 
    SuperscriptBox["x", "5"]}], ",", 
   RowBox[{"1", "+", 
    RowBox[{"6", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["x", "4"]}], "+", 
    SuperscriptBox["x", "6"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.898367432493326*^9, 3.898367442001221*^9}},
 CellLabel->"Out[337]=",
 CellID->116155483,ExpressionUUID->"39028eca-282e-4f41-a0e4-a2e9bfba3b64"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Verify the statement up to 7:", "MathCaption",
 CellChangeTimes->{{3.898367463130916*^9, 3.898367469978275*^9}},
 CellID->295365794,ExpressionUUID->"28814331-4c55-42c6-a206-3d50921d955a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SameQ", "[", 
  RowBox[{
   RowBox[{"Expand", "[", 
    RowBox[{"LucasNumberU1", "[", 
     RowBox[{
      RowBox[{"Range", "[", "7", "]"}], ",", "x", ",", 
      RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
   RowBox[{"Fibonacci", "[", 
    RowBox[{
     RowBox[{"Range", "[", "7", "]"}], ",", "x"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.898367449151556*^9, 3.8983674593141036`*^9}},
 CellLabel->"In[338]:=",
 CellID->549686470,ExpressionUUID->"07e55695-539a-4345-9ca9-7832260d8604"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.898367459634065*^9},
 CellLabel->"Out[338]=",
 CellID->471038115,ExpressionUUID->"f4a2e63f-66a8-497a-961b-d8f09739ee81"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "12d01a4f-00d1-4ddb-9291-838104ecfe89"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->439332369,ExpressionUUID->"8decf2dd-2523-4ddc-9c18-d6e287e5e164"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["U", "n"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", "x"}], ",", "1"}], ")"}]}]], "InlineFormula",ExpressionUUID->
  "d87c56b7-6a9f-4b8e-9809-fd82fc77f698"],
 " represents Chebyshev polynomials of the second kind:"
}], "MathCaption",
 CellChangeTimes->{{3.898367480189353*^9, 3.8983675009637966`*^9}},
 CellID->142865217,ExpressionUUID->"a32b990c-c07f-49be-aa92-f5e866eefe15"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"LucasNumberU1", "[", 
   RowBox[{
    RowBox[{"Range", "[", "7", "]"}], ",", 
    RowBox[{"2", "x"}], ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8983675040851383`*^9, 3.898367517301791*^9}},
 CellLabel->"In[339]:=",
 CellID->819507155,ExpressionUUID->"2e760ef4-cfb4-45e5-911a-1849f74e4466"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"2", " ", "x"}], ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["x", "2"]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "4"}], " ", "x"}], "+", 
    RowBox[{"8", " ", 
     SuperscriptBox["x", "3"]}]}], ",", 
   RowBox[{"1", "-", 
    RowBox[{"12", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"16", " ", 
     SuperscriptBox["x", "4"]}]}], ",", 
   RowBox[{
    RowBox[{"6", " ", "x"}], "-", 
    RowBox[{"32", " ", 
     SuperscriptBox["x", "3"]}], "+", 
    RowBox[{"32", " ", 
     SuperscriptBox["x", "5"]}]}], ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"24", " ", 
     SuperscriptBox["x", "2"]}], "-", 
    RowBox[{"80", " ", 
     SuperscriptBox["x", "4"]}], "+", 
    RowBox[{"64", " ", 
     SuperscriptBox["x", "6"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.898367518416844*^9},
 CellLabel->"Out[339]=",
 CellID->451625855,ExpressionUUID->"f4e8b006-02cb-4920-bfba-9956991bddd1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Verify this statement:", "MathCaption",
 CellChangeTimes->{{3.8983675214470387`*^9, 3.898367525470948*^9}},
 CellID->38534065,ExpressionUUID->"f9e3e5e6-e393-40ac-9674-2099d96bb635"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SameQ", "[", 
  RowBox[{
   RowBox[{"Expand", "[", 
    RowBox[{"LucasNumberU1", "[", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{
        RowBox[{"1", "+", "1"}], ",", 
        RowBox[{"7", "+", "1"}]}], "]"}], ",", 
      RowBox[{"2", "x"}], ",", "1"}], "]"}], "]"}], ",", 
   RowBox[{"ChebyshevU", "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"1", "+", "0"}], ",", 
       RowBox[{"7", "+", "0"}]}], "]"}], ",", "x"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.898367527086715*^9, 3.898367606828323*^9}},
 CellLabel->"In[341]:=",
 CellID->391099469,ExpressionUUID->"328b6803-1dc9-4134-9957-4869a47a9311"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8983676073878665`*^9},
 CellLabel->"Out[341]=",
 CellID->22022784,ExpressionUUID->"0f0d7b57-ba19-43c8-8809-f7067e15c92b"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "ba973e33-603b-4cfd-be8b-0e0ecf40148f"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->86887181,ExpressionUUID->"95f8daed-a49b-4f22-b921-b75d2ccd707b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["U", "n"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"x", "+", "1"}], ",", "x"}], ")"}]}]], "InlineFormula",
  ExpressionUUID->"707cc59d-70eb-4124-ac43-24bee7daaea6"],
 " represents repunits in base x:"
}], "MathCaption",
 CellChangeTimes->{{3.8983676211160293`*^9, 3.8983676338884525`*^9}},
 CellID->119722245,ExpressionUUID->"5e33fcef-075f-45bc-84f6-3666a8beacd2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"LucasNumberU1", "[", 
   RowBox[{
    RowBox[{"1", "+", 
     RowBox[{"Range", "[", "7", "]"}]}], ",", 
    RowBox[{"x", "+", "1"}], ",", "x"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.89836763581566*^9, 3.8983676864726696`*^9}},
 CellLabel->"In[347]:=",
 CellID->681843340,ExpressionUUID->"064f4f8e-bc53-4b5b-82f2-8ad3eac1fa2f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "+", "x"}], ",", 
   RowBox[{"1", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"1", "+", "x", "+", 
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"1", "+", "x", "+", 
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["x", "3"], "+", 
    SuperscriptBox["x", "4"]}], ",", 
   RowBox[{"1", "+", "x", "+", 
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["x", "3"], "+", 
    SuperscriptBox["x", "4"], "+", 
    SuperscriptBox["x", "5"]}], ",", 
   RowBox[{"1", "+", "x", "+", 
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["x", "3"], "+", 
    SuperscriptBox["x", "4"], "+", 
    SuperscriptBox["x", "5"], "+", 
    SuperscriptBox["x", "6"]}], ",", 
   RowBox[{"1", "+", "x", "+", 
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["x", "3"], "+", 
    SuperscriptBox["x", "4"], "+", 
    SuperscriptBox["x", "5"], "+", 
    SuperscriptBox["x", "6"], "+", 
    SuperscriptBox["x", "7"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.898367646861583*^9, 3.898367686943242*^9}},
 CellLabel->"Out[347]=",
 CellID->567660469,ExpressionUUID->"9298094e-5502-4d55-90c0-d345105f1a11"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The first 21 Lucas numbers:", "MathCaption",
 CellChangeTimes->{{3.8983679050281706`*^9, 3.8983679108337193`*^9}},
 CellID->69391295,ExpressionUUID->"e9aebbee-2239-49ca-9d0d-72b8d0904fa2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LucasNumberV2", "[", 
  RowBox[{
   RowBox[{"Range", "[", "21", "]"}], ",", "1", ",", 
   RowBox[{"-", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8983679132862287`*^9, 3.8983679216508017`*^9}},
 CellLabel->"In[381]:=",
 CellID->139948453,ExpressionUUID->"d3a0983c-5a34-413b-aee9-2b430463fa5a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "3", ",", "4", ",", "7", ",", "11", ",", "18", ",", "29", ",", 
   "47", ",", "76", ",", "123", ",", "199", ",", "322", ",", "521", ",", 
   "843", ",", "1364", ",", "2207", ",", "3571", ",", "5778", ",", "9349", 
   ",", "15127", ",", "24476"}], "}"}]], "Output",
 CellChangeTimes->{3.898367922385843*^9, 3.898368150548594*^9},
 CellLabel->"Out[381]=",
 CellID->46523418,ExpressionUUID->"fdb9aaa3-43c5-47cd-a5fe-3e588605645a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compare the function to LucasL:", "MathCaption",
 CellChangeTimes->{{3.8983681706800504`*^9, 3.8983681751458673`*^9}},
 CellID->173598441,ExpressionUUID->"ff4fe360-4e60-4c52-ae99-b034e699df7c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"LucasL", "[", 
   RowBox[{"Range", "[", "21", "]"}], "]"}], "===", 
  RowBox[{"LucasNumberV2", "[", 
   RowBox[{
    RowBox[{"Range", "[", "21", "]"}], ",", "1", ",", 
    RowBox[{"-", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8983681634404774`*^9, 3.8983681670258126`*^9}},
 CellLabel->"In[382]:=",
 CellID->298773496,ExpressionUUID->"483fcd16-57f2-49e0-96fe-d519d96d31d6"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.898368167735422*^9},
 CellLabel->"Out[382]=",
 CellID->135097200,ExpressionUUID->"339c346b-8558-4de6-acf7-f6a5528d1af1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["V", "n"], 
   RowBox[{"(", 
    RowBox[{"2", ",", 
     RowBox[{"-", "1"}]}], ")"}]}]], "InlineFormula",ExpressionUUID->
  "37252545-a346-43e8-a254-edf6fd2ba3af"],
 " gives the Pell-Lucas numbers (companion Pell numbers):"
}], "MathCaption",
 CellChangeTimes->{{3.898368189629094*^9, 3.8983682085144124`*^9}},
 CellID->6568824,ExpressionUUID->"374aefa0-d808-4a50-b86c-5282cef5120c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LucasNumberV2", "[", 
  RowBox[{
   RowBox[{"Range", "[", "21", "]"}], ",", "2", ",", 
   RowBox[{"-", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.898368211028144*^9, 3.8983682182333207`*^9}},
 CellLabel->"In[383]:=",
 CellID->354624742,ExpressionUUID->"16fdb760-7897-4e36-ba9f-88f01b25405f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "6", ",", "14", ",", "34", ",", "82", ",", "198", ",", "478", ",",
    "1154", ",", "2786", ",", "6726", ",", "16238", ",", "39202", ",", 
   "94642", ",", "228486", ",", "551614", ",", "1331714", ",", "3215042", ",",
    "7761798", ",", "18738638", ",", "45239074", ",", "109216786"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8983682186423745`*^9},
 CellLabel->"Out[383]=",
 CellID->229632868,ExpressionUUID->"3d7ad857-8454-4495-af41-4bd13557883a"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "090d88cc-6f2d-48b0-858a-4a50c04a7e5c"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->225973015,ExpressionUUID->"f809678f-34f8-442c-8449-544264cd6c6b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["V", "n"], 
   RowBox[{"(", 
    RowBox[{"1", ",", 
     RowBox[{"-", "2"}]}], ")"}]}]], "InlineFormula",ExpressionUUID->
  "f3183644-2d7a-472d-9673-429b016efa06"],
 " gives the Jacobsthal-Lucas numbers:"
}], "MathCaption",
 CellChangeTimes->{{3.8983682494105635`*^9, 3.898368277246179*^9}},
 CellID->597709743,ExpressionUUID->"dca78dcc-0676-437e-a389-bf24aa8c99dc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LucasNumberV2", "[", 
  RowBox[{
   RowBox[{"Range", "[", "21", "]"}], ",", "1", ",", 
   RowBox[{"-", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.898368281755721*^9, 3.898368288887227*^9}},
 CellLabel->"In[384]:=",
 CellID->559137007,ExpressionUUID->"ecfddaff-961f-46a1-8f88-a17d24567c66"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "5", ",", "7", ",", "17", ",", "31", ",", "65", ",", "127", ",", 
   "257", ",", "511", ",", "1025", ",", "2047", ",", "4097", ",", "8191", ",",
    "16385", ",", "32767", ",", "65537", ",", "131071", ",", "262145", ",", 
   "524287", ",", "1048577", ",", "2097151"}], "}"}]], "Output",
 CellChangeTimes->{3.898368289297815*^9},
 CellLabel->"Out[384]=",
 CellID->350769182,ExpressionUUID->"a8dbcc2e-3caa-42d0-81f9-33bc3f1e2cd6"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "0b224324-8344-4fcd-9935-b272c4a6cb2e"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->87474974,ExpressionUUID->"b53d2b8c-e17b-4468-b36b-2aec420a1171"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["V", "n"], 
   RowBox[{"(", 
    RowBox[{"3", ",", "2"}], ")"}]}]], "InlineFormula",ExpressionUUID->
  "092e6f5c-0aac-44a5-b0e0-dbcba6f4bf5e"],
 " gives number of the form ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["2", "n"], "+", "1"}]], "InlineFormula",ExpressionUUID->
  "eb880d40-f1da-4007-8a8e-935d6b0078d7"],
 ", which includes the Fermat numbers:"
}], "MathCaption",
 CellChangeTimes->{{3.8983683017946467`*^9, 3.89836831069621*^9}, {
  3.8983683541783943`*^9, 3.898368381642344*^9}},
 CellID->655288947,ExpressionUUID->"e64fd83d-93e8-4e02-abf3-2bb4c4702f35"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LucasNumberV2", "[", 
  RowBox[{
   RowBox[{"Range", "[", "21", "]"}], ",", "3", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.8983683894832077`*^9, 3.8983684033641777`*^9}},
 CellLabel->"In[386]:=",
 CellID->68325774,ExpressionUUID->"c6b0ef7a-9be0-4137-bbfc-d2b79ffc4ab7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "5", ",", "9", ",", "17", ",", "33", ",", "65", ",", "129", ",", 
   "257", ",", "513", ",", "1025", ",", "2049", ",", "4097", ",", "8193", ",",
    "16385", ",", "32769", ",", "65537", ",", "131073", ",", "262145", ",", 
   "524289", ",", "1048577", ",", "2097153"}], "}"}]], "Output",
 CellChangeTimes->{{3.8983684003807473`*^9, 3.89836840389223*^9}},
 CellLabel->"Out[386]=",
 CellID->411603969,ExpressionUUID->"d0518706-58f6-4b1c-a8af-3ce75845ac1b"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "fb542561-6028-40a3-b6e6-709043b8ff66"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->380977308,ExpressionUUID->"08faf537-ae50-4cad-bca6-17a74dac8d97"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["V", "n"], 
   RowBox[{"(", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}]}], ")"}]}]], "InlineFormula",ExpressionUUID->
  "820705df-0958-44e0-a9ba-ab7f19af3b95"],
 " gives the Lucas polynomials:"
}], "MathCaption",
 CellChangeTimes->{{3.8983684207308607`*^9, 3.8983684375899196`*^9}},
 CellID->206574541,ExpressionUUID->"80cbaf4d-6b84-418f-b357-d54653ee18a7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"LucasNumberV2", "[", 
   RowBox[{
    RowBox[{"Range", "[", "7", "]"}], ",", "x", ",", 
    RowBox[{"-", "1"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.898368438526023*^9, 3.898368460620308*^9}},
 CellLabel->"In[389]:=",
 CellID->571446576,ExpressionUUID->"09410bc9-6af4-453c-b155-a0bceb6088ea"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"2", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{
    RowBox[{"3", " ", "x"}], "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"2", "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    SuperscriptBox["x", "4"]}], ",", 
   RowBox[{
    RowBox[{"5", " ", "x"}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["x", "3"]}], "+", 
    SuperscriptBox["x", "5"]}], ",", 
   RowBox[{"2", "+", 
    RowBox[{"9", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"6", " ", 
     SuperscriptBox["x", "4"]}], "+", 
    SuperscriptBox["x", "6"]}], ",", 
   RowBox[{
    RowBox[{"7", " ", "x"}], "+", 
    RowBox[{"14", " ", 
     SuperscriptBox["x", "3"]}], "+", 
    RowBox[{"7", " ", 
     SuperscriptBox["x", "5"]}], "+", 
    SuperscriptBox["x", "7"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.898368447562336*^9, 3.8983684609903994`*^9}},
 CellLabel->"Out[389]=",
 CellID->579836633,ExpressionUUID->"e40c7898-0bab-4607-b96e-dca340b365e6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Let's compare this to LucasL:", "MathCaption",
 CellChangeTimes->{{3.898368464481782*^9, 3.898368469001687*^9}},
 CellID->849664802,ExpressionUUID->"21d0d592-72b4-4774-996c-6be8648209c8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Expand", "[", 
   RowBox[{"LucasNumberV2", "[", 
    RowBox[{
     RowBox[{"Range", "[", "7", "]"}], ",", "x", ",", 
     RowBox[{"-", "1"}]}], "]"}], "]"}], "===", 
  RowBox[{"LucasL", "[", 
   RowBox[{
    RowBox[{"Range", "[", "7", "]"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8983684696822634`*^9, 3.898368523034341*^9}},
 CellLabel->"In[395]:=",
 CellID->5746910,ExpressionUUID->"9aebbb4e-8a75-4cac-9e95-11152664cc0d"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.8983684770956235`*^9, 3.8983685235714645`*^9}},
 CellLabel->"Out[395]=",
 CellID->145466617,ExpressionUUID->"dc0be05f-4a7b-4eec-853a-be85245124a4"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "054eb41c-0763-4511-9103-a2d7e405edf9"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->64856443,ExpressionUUID->"8c6e05a8-288b-4450-953c-874c7df66844"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["V", "n"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", "x"}], ",", "1"}], ")"}]}]], "InlineFormula",ExpressionUUID->
  "6a9ab6f3-17bd-4e0e-b59f-a6cdf79a5253"],
 " gives Chebyshev polynomials of first kind multiplied by 2:"
}], "MathCaption",
 CellChangeTimes->{{3.8983689099969034`*^9, 3.8983689380434713`*^9}},
 CellID->200874845,ExpressionUUID->"472dd805-3876-4f16-8fa4-63a231af82b0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"LucasNumberV2", "[", 
   RowBox[{
    RowBox[{"Range", "[", "7", "]"}], ",", 
    RowBox[{"2", "x"}], ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8983689469733086`*^9, 3.8983689494139085`*^9}},
 CellLabel->"In[396]:=",
 CellID->2790924,ExpressionUUID->"c6930b62-bc1d-43df-b2d8-0f575b1008ae"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"2", " ", "x"}], ",", 
   RowBox[{
    RowBox[{"-", "2"}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["x", "2"]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "6"}], " ", "x"}], "+", 
    RowBox[{"8", " ", 
     SuperscriptBox["x", "3"]}]}], ",", 
   RowBox[{"2", "-", 
    RowBox[{"16", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"16", " ", 
     SuperscriptBox["x", "4"]}]}], ",", 
   RowBox[{
    RowBox[{"10", " ", "x"}], "-", 
    RowBox[{"40", " ", 
     SuperscriptBox["x", "3"]}], "+", 
    RowBox[{"32", " ", 
     SuperscriptBox["x", "5"]}]}], ",", 
   RowBox[{
    RowBox[{"-", "2"}], "+", 
    RowBox[{"36", " ", 
     SuperscriptBox["x", "2"]}], "-", 
    RowBox[{"96", " ", 
     SuperscriptBox["x", "4"]}], "+", 
    RowBox[{"64", " ", 
     SuperscriptBox["x", "6"]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "14"}], " ", "x"}], "+", 
    RowBox[{"112", " ", 
     SuperscriptBox["x", "3"]}], "-", 
    RowBox[{"224", " ", 
     SuperscriptBox["x", "5"]}], "+", 
    RowBox[{"128", " ", 
     SuperscriptBox["x", "7"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.898368949830493*^9},
 CellLabel->"Out[396]=",
 CellID->749587632,ExpressionUUID->"d6ff88e3-d199-40b6-ab01-257cf2101d53"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test this statement:", "MathCaption",
 CellChangeTimes->{{3.898368975414742*^9, 3.8983689784089446`*^9}},
 CellID->193111019,ExpressionUUID->"5f79fa01-a92b-49e0-81e3-732bed958fce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Expand", "[", 
   RowBox[{"LucasNumberV2", "[", 
    RowBox[{
     RowBox[{"Range", "[", "7", "]"}], ",", 
     RowBox[{"2", "x"}], ",", "1"}], "]"}], "]"}], "===", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Expand", "[", 
      RowBox[{"2", "*", "#"}], "]"}], "&"}], "/@", 
    RowBox[{"ChebyshevT", "[", 
     RowBox[{
      RowBox[{"Range", "[", "7", "]"}], ",", "x"}], "]"}]}], ")"}]}]], "Input",
 CellLabel->"In[397]:=",
 CellID->257744413,ExpressionUUID->"c3d985a9-2318-4a7c-9a92-780dd5de7486"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.89836897922904*^9},
 CellLabel->"Out[397]=",
 CellID->599489833,ExpressionUUID->"22069223-f5a5-4959-ac39-f0862ce331a4"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "8bddc11e-8274-4406-ae17-4036a48596b4"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->506165783,ExpressionUUID->"7001900e-729c-4fe1-89e9-01cc7517b93a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["V", "n"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"x", "+", "1"}], ",", "x"}], ")"}]}]], "InlineFormula",
  ExpressionUUID->"d91c0cb6-28c2-4d41-ad30-4e81ff8924b7"],
 " gives ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["x", "n"], "+", "1"}]], "InlineFormula",ExpressionUUID->
  "37e2fa5a-c7d5-416d-8388-97b2c31a3730"],
 ":"
}], "MathCaption",
 CellChangeTimes->{{3.8983690030490446`*^9, 3.898369040981527*^9}},
 CellID->230848754,ExpressionUUID->"39be35a5-2e23-46ac-9416-06a52ad97ed4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"LucasNumberV2", "[", 
   RowBox[{
    RowBox[{"Range", "[", "7", "]"}], ",", 
    RowBox[{"x", "+", "1"}], ",", "x"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8983690257258263`*^9, 3.898369030824967*^9}},
 CellLabel->"In[398]:=",
 CellID->4310976,ExpressionUUID->"47782e88-5a43-4e91-bbe3-b20717ac4dfa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "+", "x"}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox["x", "4"]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox["x", "5"]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox["x", "6"]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox["x", "7"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8983690313075037`*^9},
 CellLabel->"Out[398]=",
 CellID->362774086,ExpressionUUID->"58c89f67-71c7-439a-af2d-7bc38930ff6d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test this statement:", "MathCaption",
 CellChangeTimes->{{3.8983690442199492`*^9, 3.8983690472092447`*^9}},
 CellID->373578484,ExpressionUUID->"8d836cc8-fe3e-4794-baf5-819304197f5f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Expand", "[", 
   RowBox[{"LucasNumberV2", "[", 
    RowBox[{
     RowBox[{"Range", "[", "7", "]"}], ",", 
     RowBox[{"x", "+", "1"}], ",", "x"}], "]"}], "]"}], "===", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "n"], "+", "1"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "7"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8983690652477217`*^9, 3.8983690738062525`*^9}},
 CellLabel->"In[399]:=",
 CellID->194038522,ExpressionUUID->"df881573-d883-4b7e-9e00-31339a26b26b"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.898369074213255*^9},
 CellLabel->"Out[399]=",
 CellID->154595223,ExpressionUUID->"0f6a17b9-f0cb-4a05-ac4b-0b77fdbb1a98"]
}, Open  ]]
}, Open  ]],

Cell["Evaluate the q-exponential.", "MathCaption",
 CellChangeTimes->{{3.8997559401804323`*^9, 3.899755943654093*^9}},
 CellID->554419,ExpressionUUID->"b3c0d08b-fcdc-41f1-9c98-7f9f025f8af7"],

Cell[CellGroupData[{

Cell["Evaluate numerically:", "MathCaption",
 CellID->55753721,ExpressionUUID->"98d91437-5ef5-4882-8e37-89175bf46493"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QExponential", "[", 
  RowBox[{"3.4", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.8994754294912233`*^9, 3.8994754349701405`*^9}},
 CellLabel->"In[943]:=",
 CellID->14566,ExpressionUUID->"f14f8af7-82b1-42bf-8f4e-b13e1eeec972"],

Cell[BoxData["29.96410004739701`"], "Output",
 CellChangeTimes->{3.8994754354061427`*^9, 3.899755950235406*^9},
 CellLabel->"Out[943]=",
 CellID->18188826,ExpressionUUID->"5252c67d-b7b9-4862-b989-7eef5809699c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Change q from 1 to 2.", "MathCaption",
 CellChangeTimes->{{3.89975608886849*^9, 3.899756093187092*^9}},
 CellID->563784370,ExpressionUUID->"56d0bb3d-8510-4f16-8e51-17a4de6bf6a4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QExponential", "[", 
  RowBox[{
   FractionBox["17", "5"], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.899756062971301*^9, 3.8997560668604345`*^9}},
 CellLabel->"In[952]:=",
 CellID->20592017,ExpressionUUID->"886e2a27-04ab-45f1-8aa0-9e0f18e98dff"],

Cell[BoxData["10.59829409278693878204709467134680730861`15.954589770191003"], \
"Output",
 CellChangeTimes->{{3.899756053851441*^9, 3.8997560682078032`*^9}},
 CellLabel->"Out[952]=",
 CellID->151593018,ExpressionUUID->"7cf3f3a5-e1e7-4222-a035-ba764c4f4c06"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ask for 40 digits of precision.", "MathCaption",
 CellChangeTimes->{{3.899756081794526*^9, 3.8997560865734963`*^9}},
 CellID->237785666,ExpressionUUID->"7657114d-d5cd-48c3-a26e-d28e5f9226c4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QExponential", "[", 
  RowBox[{
   FractionBox["17", "5"], ",", "2", ",", "40"}], "]"}]], "Input",
 CellChangeTimes->{{3.899756062971301*^9, 3.899756073262741*^9}},
 CellLabel->"In[953]:=",
 CellID->298472260,ExpressionUUID->"9499401a-c94c-4e3b-80c9-029bf8c3ed3b"],

Cell[BoxData["10.5982940927869387820470946713468073086211252051161675464583`\
40."], "Output",
 CellChangeTimes->{3.899756073595477*^9},
 CellLabel->"Out[953]=",
 CellID->74152669,ExpressionUUID->"c7bad1ba-9076-4960-8759-debd3cf4c75b"]
}, Open  ]]
}, Open  ]],

Cell["Evaluate the q-multinomial.", "MathCaption",
 CellChangeTimes->{{3.899756129229161*^9, 3.8997561330991883`*^9}},
 CellID->496593996,ExpressionUUID->"b3c0da6d-14d3-4513-9cda-eec9e22a5c3c"],

Cell[CellGroupData[{

Cell["Evaluate numerically:", "MathCaption",
 CellID->489039817,ExpressionUUID->"84220ff2-a765-4b35-b55d-b35c6aa951ae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QMultinomial", "[", 
  RowBox[{"1", ",", "2", ",", "1", ",", "E"}], "]"}]], "Input",
 CellChangeTimes->{{3.8989739325177946`*^9, 3.89897393565014*^9}},
 CellLabel->"In[954]:=",
 CellID->88658836,ExpressionUUID->"c19fcedd-b78b-44f0-8cb9-26999323e0a8"],

Cell[BoxData[
 FractionBox[
  RowBox[{"QGamma", "[", 
   RowBox[{"5", ",", "\[ExponentialE]"}], "]"}], 
  RowBox[{"1", "+", "\[ExponentialE]"}]]], "Output",
 CellChangeTimes->{3.8989739360235424`*^9, 3.899756135009884*^9},
 CellLabel->"Out[954]=",
 CellID->66741005,ExpressionUUID->"339b42a2-fde2-4045-85db-65d58adc8b7f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"QMultinomial", "[", 
   RowBox[{"1", ",", "2", ",", "1", ",", "E"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.898973961576065*^9, 3.8989739620080643`*^9}},
 CellLabel->"In[955]:=",
 CellID->471752441,ExpressionUUID->"728106ed-73bd-4ba9-ac83-12892dbf0a2d"],

Cell[BoxData["346.469801892138`"], "Output",
 CellChangeTimes->{3.898973962364065*^9, 3.8997561370157037`*^9},
 CellLabel->"Out[955]=",
 CellID->374027243,ExpressionUUID->"3a8ade29-1075-4e1b-839d-d83b24de7bb6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"QMultinomial", "[", 
    RowBox[{"1", ",", "2", ",", "1", ",", "E"}], "]"}], ",", "40"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.898973961576065*^9, 3.8989739620080643`*^9}, {
  3.8997561401337495`*^9, 3.899756141730242*^9}},
 CellLabel->"In[956]:=",
 CellID->796052010,ExpressionUUID->"7baf519c-aa10-4412-8cf3-cf0fd847ee92"],

Cell[BoxData["346.4698018921381259525335487344495385550883060897418205888714`\
40."], "Output",
 CellChangeTimes->{3.899756142065931*^9},
 CellLabel->"Out[956]=",
 CellID->199263104,ExpressionUUID->"649ef4c5-36f5-4d6d-9c22-e613ac88bc56"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Find the period of the decimal representation of a rational number.\
\>", "MathCaption",
 CellChangeTimes->{{3.8997561625994687`*^9, 3.899756172431783*^9}},
 CellID->143975390,ExpressionUUID->"6c2d9d80-c54d-453b-ad9e-6032d479dbba"],

Cell[CellGroupData[{

Cell[TextData[{
 "Find the period of the repetend of the repeating decimal corresponding to  ",
 Cell[BoxData[
  FractionBox["1", "983"]], "InlineFormula",ExpressionUUID->
  "9db0a32a-ac7b-4995-8bce-232ebbcbd9de"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.8994815922892585`*^9, 3.8994816167768946`*^9}},
 CellID->27787895,ExpressionUUID->"e9935574-99b5-40a8-b07e-7d21854c1d15"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", 
  FractionBox["1", "983"], "]"}]], "Input",
 CellChangeTimes->{{3.899481620222888*^9, 3.899481624264899*^9}},
 CellLabel->"In[957]:=",
 CellID->236189147,ExpressionUUID->"9587bd11-6405-447b-ba16-674d716e4180"],

Cell[BoxData["982"], "Output",
 CellChangeTimes->{3.8994816247038984`*^9, 3.899756185325593*^9},
 CellLabel->"Out[957]=",
 CellID->557292175,ExpressionUUID->"eedb5a11-b7cb-4dbe-987a-0952908bb894"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3/2 has a period of 0.", "MathCaption",
 CellChangeTimes->{{3.899481640751215*^9, 3.8994816498846316`*^9}},
 CellID->35640176,ExpressionUUID->"4d3f03c5-7e5e-43b8-a28a-93b63b3530f8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  FractionBox["3", "2"], "]"}]], "Input",
 CellChangeTimes->{{3.8994816505907173`*^9, 3.8994816522726297`*^9}},
 CellLabel->"In[958]:=",
 CellID->761312723,ExpressionUUID->"7590f28d-925c-4c78-bb5b-c7661a65f594"],

Cell[BoxData["1.5`"], "Output",
 CellChangeTimes->{3.8994816527176285`*^9, 3.899756187295591*^9},
 CellLabel->"Out[958]=",
 CellID->290448543,ExpressionUUID->"966c106d-3901-48a3-bc5c-e54612b23120"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", 
  FractionBox["3", "2"], "]"}]], "Input",
 CellChangeTimes->{{3.8994816560287375`*^9, 3.8994816593812532`*^9}},
 CellLabel->"In[959]:=",
 CellID->60940240,ExpressionUUID->"5d1ff7e4-c1c6-47a0-a2ab-49e9129c44d6"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.899481659814252*^9, 3.899756189227592*^9},
 CellLabel->"Out[959]=",
 CellID->200714134,ExpressionUUID->"ba50a0bc-6cdc-4167-b626-4209dfb41d5b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
A unit fraction contains 1 in the numerator. The decimal representation of \
the unit fractions with denominators 2 to 10 are given.\
\>", "MathCaption",
 CellChangeTimes->{{3.899481966032922*^9, 3.8994819849094625`*^9}},
 CellID->459322947,ExpressionUUID->"6d83d084-a745-4b3b-a51c-01d45a57ae82"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<fraction\>\"", "->", 
        FractionBox["1", "#"]}], ",", 
       RowBox[{"\"\<decimal\>\"", "->", 
        RowBox[{"N", "[", 
         FractionBox["1", "#"], "]"}]}]}], "|>"}], "&"}], "]"}], "[", 
   RowBox[{"Range", "[", 
    RowBox[{"2", ",", "10", ",", "1"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.899482148578165*^9, 3.8994821519134526`*^9}, 
   3.899482218335225*^9, {3.8994823564925113`*^9, 3.8994823679110875`*^9}},
 CellLabel->"In[38]:=",
 CellID->132252402,ExpressionUUID->"70792e34-b7ce-4d15-b6da-3f3adeb428e9"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      2 -> <|"fraction" -> Rational[1, 2], "decimal" -> 0.5|>, 
       3 -> <|"fraction" -> Rational[1, 3], "decimal" -> 0.3333333333333333|>,
        4 -> <|"fraction" -> Rational[1, 4], "decimal" -> 0.25|>, 
       5 -> <|"fraction" -> Rational[1, 5], "decimal" -> 0.2|>, 
       6 -> <|"fraction" -> Rational[1, 6], "decimal" -> 
         0.16666666666666666`|>, 
       7 -> <|"fraction" -> Rational[1, 7], "decimal" -> 
         0.14285714285714285`|>, 
       8 -> <|"fraction" -> Rational[1, 8], "decimal" -> 0.125|>, 
       9 -> <|"fraction" -> Rational[1, 9], "decimal" -> 0.1111111111111111|>,
        10 -> <|"fraction" -> Rational[1, 10], "decimal" -> 0.1|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[10]} -> 1, {All, "fraction"} -> 
        1, {All, "decimal"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "fraction" -> TypeSystem`PackageScope`AtomShape[60], "decimal" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 2, {All}]]], 9, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"fraction", "decimal"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 9], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[10]} -> 1, {All, "fraction"} -> 
        1, {All, "decimal"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "fraction" -> TypeSystem`PackageScope`AtomShape[60], "decimal" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 2, {All}]]], 9, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"fraction", "decimal"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 9], "Path" -> {}, "DisplayedRowCount" -> 9, 
     "DisplayedColumnCount" -> 2, "DataRowCount" -> 9, "DataColumnCount" -> 2,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["fraction", 
                  Style[
                  "fraction", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "fraction"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "fraction"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["decimal", 
                  Style[
                  "decimal", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "decimal"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "decimal"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1/2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["fraction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["decimal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1/3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["fraction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.333333"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["decimal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1/4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["fraction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["decimal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1/5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["fraction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["decimal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1/6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["fraction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.166667"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["decimal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1/7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["fraction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.142857"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["decimal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1/8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["fraction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.125"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["decimal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1/9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["fraction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.111111"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["decimal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1/10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["fraction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["decimal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{179., {140.8544921875, 146.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{179., {140.8544921875, 146.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.899482152345455*^9, {3.899482361305744*^9, 3.899482368658664*^9}},
 CellLabel->"Out[38]=",
 CellID->504232840,ExpressionUUID->"ba9fab94-d861-4d2b-b8cf-05f8231fe3ec"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "We can indicate the part that is repeating with a vinculum like this. ",
 Cell[BoxData[
  RowBox[{"0.", 
   OverscriptBox["142857", "_"]}]], "InlineFormula",ExpressionUUID->
  "48838c00-f2ea-4594-8390-3fcd940fbc7b"]
}], "MathCaption",
 CellChangeTimes->{{3.8994820129069304`*^9, 3.8994820237666235`*^9}, {
  3.899482390764577*^9, 3.899482404808361*^9}},
 CellID->142153006,ExpressionUUID->"4b43c065-4147-42b2-95a5-6fbd171b7047"],

Cell[TextData[{
 "Where ",
 Cell[BoxData[
  RowBox[{"0.1", 
   OverscriptBox["6", "_"]}]], "InlineFormula",ExpressionUUID->
  "187b7dee-c0cb-4ef3-81e4-ef09e2a5c596"],
 " means ",
 Cell[BoxData[
  RowBox[{"0.1666666666666666666666666666666666666666", "\[Ellipsis]"}]], 
  "InlineFormula",ExpressionUUID->"dd7176e1-bd0d-4f09-8537-3be9400e7dbc"],
 ", and has a 1 digit recurring cycle. It can be seen that ",
 Cell[BoxData[
  FractionBox["1", "7"]], "InlineFormula",ExpressionUUID->
  "b79e6a00-4b71-44a9-9d21-38cf9db3e059"],
 " has a 6-digit recurring cycle."
}], "MathCaption",
 CellChangeTimes->{{3.8994824079942455`*^9, 3.8994824751148434`*^9}},
 CellID->468172920,ExpressionUUID->"c3015b6c-b871-4286-a2f9-94bcc88b3efe"],

Cell[CellGroupData[{

Cell[TextData[{
 "Find the value of ",
 Cell[BoxData[
  RowBox[{"d", "<", "1000"}]], "InlineFormula",ExpressionUUID->
  "d15dcd1c-50dc-455f-b3b8-8fabaa2509c3"],
 " for which ",
 Cell[BoxData[
  FractionBox["1", "d"]], "InlineFormula",ExpressionUUID->
  "547c7b61-e4d4-4dd2-b633-896ae1c0700a"],
 " contains the largest recurring cycle in its decimal fraction part."
}], "MathCaption",
 CellChangeTimes->{{3.8994824773098264`*^9, 3.8994825026581497`*^9}},
 CellID->75005970,ExpressionUUID->"1c315583-46d8-4e6e-959d-cfd5fe3ec8c3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EchoTiming", "[", 
  RowBox[{
   RowBox[{"MaximalBy", "[", 
    RowBox[{
     RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", 
      FractionBox["1", "#"], "]"}], "&"}], "]"}], "[", 
   RowBox[{"Cases", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"#", "<", "1000"}], "&"}], "]"}], "[", 
      RowBox[{"Range", "[", "1000", "]"}], "]"}], ",", 
     RowBox[{"Except", "[", "1", "]"}]}], 
    RowBox[{"(*", 
     RowBox[{"because", " ", 
      RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", "1", "]"}], " ", 
      "just", " ", "returns", " ", 
      RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", "1", "]"}]}], 
     "*)"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8994825080449457`*^9, 3.899482622527788*^9}},
 CellLabel->"In[45]:=",
 CellID->696606258,ExpressionUUID->"1b980e60-0e67-40e0-bf1b-4b62c898d742"],

Cell[BoxData["0.0232995`"], "EchoTiming",
 CellChangeTimes->{3.899482622874789*^9},
 CellID->114796685,ExpressionUUID->"55d21377-1ad7-4262-87e3-c2010e1679d2"],

Cell[BoxData[
 RowBox[{"{", "983", "}"}]], "Output",
 CellChangeTimes->{
  3.8994825676752696`*^9, {3.8994826144469543`*^9, 3.899482623915003*^9}},
 CellLabel->"Out[45]=",
 CellID->36436604,ExpressionUUID->"f8b58efa-18d2-417a-a7c2-b8ab413e2bc3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["We can use Identity@@ to get just the number.", "MathCaption",
 CellChangeTimes->{{3.899482637059132*^9, 3.899482644152088*^9}},
 CellID->595536278,ExpressionUUID->"8eb45452-f5dc-487e-bcf4-e93206ef0482"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EchoTiming", "[", 
  RowBox[{"Identity", "@@", 
   RowBox[{
    RowBox[{"MaximalBy", "[", 
     RowBox[{
      RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", 
       FractionBox["1", "#"], "]"}], "&"}], "]"}], "[", 
    RowBox[{"Cases", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"#", "<", "1000"}], "&"}], "]"}], "[", 
       RowBox[{"Range", "[", "1000", "]"}], "]"}], ",", 
      RowBox[{"Except", "[", "1", "]"}]}], 
     RowBox[{"(*", 
      RowBox[{"because", " ", 
       RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", "1", "]"}], " ", 
       "just", " ", "returns", " ", 
       RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", "1", "]"}]}], 
      "*)"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8994825080449457`*^9, 3.8994826498582063`*^9}},
 CellLabel->"In[46]:=",
 CellID->135456001,ExpressionUUID->"1b395bb2-e846-40a1-8e59-aecf634c027c"],

Cell[BoxData["0.023724`"], "EchoTiming",
 CellChangeTimes->{3.899482650165243*^9},
 CellID->47425443,ExpressionUUID->"1f1c7bcb-e0f5-477c-a984-7b4103ed7428"],

Cell[BoxData["983"], "Output",
 CellChangeTimes->{3.899482651158207*^9},
 CellLabel->"Out[46]=",
 CellID->3416495,ExpressionUUID->"c8a47746-3af9-4fed-a21c-60a4623f76d4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["We can use EchoPerformance to see how much memory we used.", \
"MathCaption",
 CellChangeTimes->{{3.8994826561954193`*^9, 3.8994826657559032`*^9}},
 CellID->197268136,ExpressionUUID->"d4148139-f3d9-44da-b123-3cac1b6932c2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<EchoPerformance\>\"", "]"}], "[", 
  RowBox[{"Identity", "@@", 
   RowBox[{
    RowBox[{"MaximalBy", "[", 
     RowBox[{
      RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", 
       FractionBox["1", "#"], "]"}], "&"}], "]"}], "[", 
    RowBox[{"Cases", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"#", "<", "1000"}], "&"}], "]"}], "[", 
       RowBox[{"Range", "[", "1000", "]"}], "]"}], ",", 
      RowBox[{"Except", "[", "1", "]"}]}], 
     RowBox[{"(*", 
      RowBox[{"because", " ", 
       RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", "1", "]"}], " ", 
       "just", " ", "returns", " ", 
       RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", "1", "]"}]}], 
      "*)"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8994825080449457`*^9, 3.899482672855094*^9}},
 CellLabel->"In[47]:=",
 CellID->325931600,ExpressionUUID->"906d7570-37a1-4aa7-93e6-06c4b5133942"],

Cell[BoxData[
 RowBox[{
  TagBox["Apply",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    StyleBox[
     TemplateBox[{"0.0227526`", "\" s\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]], ",", 
    StyleBox[
     TemplateBox[{"91480", "\" B\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]]}], "}"}]}]], "Echo",
 CellChangeTimes->{3.899482676711325*^9},
 CellID->211601392,ExpressionUUID->"2fb660fc-10a5-426a-b9cd-8db062ca3f54"],

Cell[BoxData["983"], "Output",
 CellChangeTimes->{3.8994826778391857`*^9},
 CellLabel->"Out[47]=",
 CellID->24671701,ExpressionUUID->"d24d3e78-8a96-48b9-8998-e0775f40508b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "This is how I solved ",
 ButtonBox["Project Euler Problem 26 Reciprocal Cycles",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://projecteuler.net/problem=26"], None},
  ButtonNote->"https://projecteuler.net/problem=26"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.89948269322202*^9, 3.8994827104953413`*^9}},
 CellID->109955765,ExpressionUUID->"67f333ab-efd9-4889-9ce0-3d919deca847"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "502d7ae8-9e79-45b6-924f-218a35260863"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->65014155,ExpressionUUID->"8a917589-749d-4846-b9f4-43cf283967cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Make a sequence of the running maximum in terms of the number with the \
maximum repeating decimal period for ",
 Cell[BoxData[
  FractionBox["1", "n"]], "InlineFormula",ExpressionUUID->
  "ba90bc1f-01b2-4394-9965-6fa56f245d2d"],
 " for the first 54 numbers."
}], "MathCaption",
 CellChangeTimes->{{3.8994829167186475`*^9, 3.899482936376564*^9}, {
  3.899483125559619*^9, 3.8994831303443513`*^9}},
 CellID->213110306,ExpressionUUID->"78ecc554-4655-4f86-9d02-9333aee36c99"],

Cell[BoxData[
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", 
    RowBox[{"Array", "[", 
     RowBox[{
      RowBox[{
       FractionBox["1", "#"], "&"}], ",", "54", ",", "2"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.899482946860044*^9, 3.8994829477066803`*^9}, {
  3.89948304194496*^9, 3.8994830468160048`*^9}, {3.899483153572274*^9, 
  3.899483153834276*^9}},
 CellLabel->"In[36]:=",
 CellID->149658206,ExpressionUUID->"91b199bc-2deb-40ba-bf69-3b4b68dfd6ba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"runningMaximum", "=", 
  RowBox[{"Rest", "@", 
   RowBox[{"FoldList", "[", 
    RowBox[{"Max", ",", 
     RowBox[{"First", "[", "list", "]"}], ",", 
     RowBox[{"Rest", "[", "list", "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8994829421938543`*^9, 3.8994829421958556`*^9}, {
   3.89948305490635*^9, 3.899483083211236*^9}, 3.8994831567808514`*^9},
 CellLabel->"In[37]:=",
 CellID->174838792,ExpressionUUID->"2c209361-2a10-4101-bfab-ca244f91360f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "1", ",", "1", ",", "6", ",", "6", ",", "6", ",", "6", 
   ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "16", ",",
    "16", ",", "18", ",", "18", ",", "18", ",", "18", ",", "22", ",", "22", 
   ",", "22", ",", "22", ",", "22", ",", "22", ",", "28", ",", "28", ",", 
   "28", ",", "28", ",", "28", ",", "28", ",", "28", ",", "28", ",", "28", 
   ",", "28", ",", "28", ",", "28", ",", "28", ",", "28", ",", "28", ",", 
   "28", ",", "28", ",", "28", ",", "46", ",", "46", ",", "46", ",", "46", 
   ",", "46", ",", "46", ",", "46", ",", "46", ",", "46"}], "}"}]], "Output",
 CellChangeTimes->{3.8994831572698526`*^9, 3.899537654290551*^9},
 CellLabel->"Out[37]=",
 CellID->6197371,ExpressionUUID->"781b304f-d387-43a1-9354-c43e5df6ed75"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Rest", "@", 
    RowBox[{"FoldList", "[", 
     RowBox[{"Max", ",", 
      RowBox[{"First", "[", "list", "]"}], ",", 
      RowBox[{"Rest", "[", "list", "]"}]}], "]"}]}], ",", 
   RowBox[{"ImageSize", "->", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.899483061624015*^9, 3.8994831154987216`*^9}},
 CellLabel->"In[71]:=",
 CellID->758948014,ExpressionUUID->"034acafe-f8ef-4c79-8915-28fe52f93a63"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[2], 
         LineBox[CompressedData["
1:eJx1yTkKAlEQRdGHkaGBgYGBioiINE7trN3OQ+gSBGO30Et2CSqWyL9YHz6X
U696vV9uOUnx67/7eY8krNLQebgAF80lp2W4AtfgOtyAm3ALbsORteO0a+05
7cMDOLYOnY7gMTyBp/DMOne6gJdwAqehM1gr7LDW2GFtsMPaYoe1ww5rj/3r
w/9mvB+xwzphh3XG/vMTDq07nw==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
          Annotation[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              Rational[1, 60]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1:eJx1yTkKAlEQRdGHkaGBgYGBioiINE7trN3OQ+gSBGO30Et2CSqWyL9YHz6X
U696vV9uOUnx67/7eY8krNLQebgAF80lp2W4AtfgOtyAm3ALbsORteO0a+05
7cMDOLYOnY7gMTyBp/DMOne6gJdwAqehM1gr7LDW2GFtsMPaYoe1ww5rj/3r
w/9mvB+xwzphh3XG/vMTDq07nw==
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0., 53.}, {0, 46.}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0., 0}, "ImageSize" -> {680, 680/GoldenRatio}, 
           "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              PointSize[
               Rational[1, 60]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0., 53.}, {0, 46.}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0., 0}, "ImageSize" -> {680, 680/GoldenRatio}, 
          "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             PointSize[
              Rational[1, 60]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListLinePlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 60]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJx1yTkKAlEQRdGHkaGBgYGBioiINE7trN3OQ+gSBGO30Et2CSqWyL9YHz6X
U696vV9uOUnx67/7eY8krNLQebgAF80lp2W4AtfgOtyAm3ALbsORteO0a+05
7cMDOLYOnY7gMTyBp/DMOne6gJdwAqehM1gr7LDW2GFtsMPaYoe1ww5rj/3r
w/9mvB+xwzphh3XG/vMTDq07nw==
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0., 53.}, {0, 46.}}, 
        "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0., 0}, 
        "ImageSize" -> {680, 680/GoldenRatio}, "Axes" -> {True, True}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[
            Rational[1, 60]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListLinePlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Full,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 53.}, {0, 46.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8994830654607472`*^9, 3.899483115934721*^9}, 
   3.899483161479889*^9},
 CellLabel->"Out[71]=",
 CellID->52008308,ExpressionUUID->"4324fc94-fef8-4576-9781-0da235ca1ee6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Make a list for the first 1000 numbers.", "MathCaption",
 CellChangeTimes->{{3.8994831338479533`*^9, 3.8994831390597577`*^9}},
 CellID->123945420,ExpressionUUID->"a5320d22-5ea7-4c1d-956b-cd6f49e0459c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", 
    RowBox[{"Array", "[", 
     RowBox[{
      RowBox[{
       FractionBox["1", "#"], "&"}], ",", "1000", ",", "2"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.899482946860044*^9, 3.8994829477066803`*^9}, {
  3.89948304194496*^9, 3.8994830468160048`*^9}},
 CellLabel->"In[60]:=",
 CellID->121949185,ExpressionUUID->"4badf44d-cbc7-4a28-92e5-3b7d6f8a0966"],

Cell[BoxData[
 RowBox[{
  RowBox[{"runningMaximum", "=", 
   RowBox[{"Rest", "@", 
    RowBox[{"FoldList", "[", 
     RowBox[{"Max", ",", 
      RowBox[{"First", "[", "list", "]"}], ",", 
      RowBox[{"Rest", "[", "list", "]"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8994829421938543`*^9, 3.8994829421958556`*^9}, {
  3.89948305490635*^9, 3.899483083211236*^9}},
 CellLabel->"In[65]:=",
 CellID->112015657,ExpressionUUID->"c8c1ef7b-fc15-4d60-896d-61fe1746f4f0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Rest", "@", 
    RowBox[{"FoldList", "[", 
     RowBox[{"Max", ",", 
      RowBox[{"First", "[", "list", "]"}], ",", 
      RowBox[{"Rest", "[", "list", "]"}]}], "]"}]}], ",", 
   RowBox[{"ImageSize", "->", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.899483061624015*^9, 3.8994831154987216`*^9}},
 CellLabel->"In[68]:=",
 CellID->397875431,ExpressionUUID->"183d83a5-c4c5-469c-8f28-179f414da7c5"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[2], 
         LineBox[CompressedData["
1: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
Xw==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
          Annotation[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1: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
Xw==
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0., 999.}, {0, 982.}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0., 0}, "ImageSize" -> {680, 680/GoldenRatio}, 
           "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              PointSize[
               Rational[1, 90]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0., 999.}, {0, 982.}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0., 0}, "ImageSize" -> {680, 680/GoldenRatio}, 
          "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListLinePlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 90]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
Xw==
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0., 999.}, {0, 982.}}, 
        "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0., 0}, 
        "ImageSize" -> {680, 680/GoldenRatio}, "Axes" -> {True, True}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[
            Rational[1, 90]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListLinePlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Full,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 999.}, {0, 982.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8994830654607472`*^9, 3.899483115934721*^9}},
 CellLabel->"Out[68]=",
 CellID->797935073,ExpressionUUID->"b9770620-46dd-4eb1-87ff-815a70fa29cb"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Guides", "TutorialMoreAboutSection",
 CellChangeTimes->{{3.843042384656711*^9, 3.843042386024461*^9}},
 CellID->300332198,ExpressionUUID->"5f56aaf9-78db-4341-b909-8fecaee71b09"],

Cell[TextData[ButtonBox["Combinatorics",
 BaseStyle->"Link",
 ButtonData->
  "paclet:PeterBurbery/Combinatorics/guide/Combinatorics"]], \
"TutorialMoreAbout",
 CellChangeTimes->{{3.8997566937143073`*^9, 3.8997567173828583`*^9}},
 CellID->353617896,ExpressionUUID->"e9ca2037-ef5e-4655-9f9b-1a8ce38d4e44"],

Cell[TextData[ButtonBox["Functions I Understand in combinatorics",
 BaseStyle->"Link",
 ButtonData->
  "paclet:PeterBurbery/Combinatorics/guide/\
FunctionsIunderstandincombinatorics"]], "TutorialMoreAbout",
 CellChangeTimes->{{3.8997566937143073`*^9, 3.8997567890753345`*^9}, {
  3.899756865577198*^9, 3.8997568655792065`*^9}},
 CellID->822407248,ExpressionUUID->"30690779-ef18-4c4d-b9a2-4c115a23cab0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Tech Notes", "RelatedTutorialsSection",
 CellID->95960386,ExpressionUUID->"bb87d0f4-b7f3-472f-a5c1-133a17fc68da"],

Cell["XXXX", "RelatedTutorials",
 CellID->657441003,ExpressionUUID->"657bd0c0-a625-4084-a383-120fb375b3bb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Metadata", "MetadataSection",
 CellID->127671852,ExpressionUUID->"0eb62a5b-9663-49cf-b5e1-c26f21dde72f"],

Cell[TextData[{
 "New in: ",
 Cell["XX", "HistoryData",
  CellTags->"New",ExpressionUUID->"bab7ee90-0360-4842-a860-b7112857e620"],
 " | Modified in: ",
 Cell[" ", "HistoryData",
  CellTags->"Modified",ExpressionUUID->"4dc802a9-2f2a-44b2-841d-4ae17100b163"],
 " | Obsolete in: ",
 Cell[" ", "HistoryData",
  CellTags->"Obsolete",ExpressionUUID->"41852e3c-75aa-4481-b207-65535788d0ff"]
}], "History",
 CellID->120211482,ExpressionUUID->"5ecc98b4-4355-484b-89ee-c4dbfd47e69c"],

Cell[CellGroupData[{

Cell["Categorization", "CategorizationSection",
 CellID->412176238,ExpressionUUID->"e03e3233-73a0-43a4-92b6-b51e1bcdbccf"],

Cell["Tech Note", "Categorization",
 CellLabel->"Entity Type",
 CellID->244398777,ExpressionUUID->"94355122-d079-42ab-9312-727675d3c5af"],

Cell["PeterBurbery/Combinatorics", "Categorization",
 CellLabel->"Paclet Name",
 CellID->35632880,ExpressionUUID->"cf5119e0-ad0e-44e6-b3a0-73c68197d608"],

Cell["PeterBurbery`Combinatorics`", "Categorization",
 CellLabel->"Context",
 CellID->26538629,ExpressionUUID->"66a7dd64-42ba-441c-a876-a158a9e65fa4"],

Cell["PeterBurbery/Combinatorics/tutorial/Combinatorics", "Categorization",
 CellLabel->"URI",
 CellID->149680849,ExpressionUUID->"3fa411c9-52ba-4960-82cb-8c882396450d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Keywords", "KeywordsSection",
 CellID->13307797,ExpressionUUID->"d98ba340-4912-4f71-98e9-f6300faf4014"],

Cell["XXXX", "Keywords",
 CellID->559025098,ExpressionUUID->"090c59c6-c29f-4931-9cfd-7d217ea96b73"]
}, Closed]]
}, Open  ]]
},
WindowSize->{574.8, 579.6},
WindowMargins->{{Automatic, -4.7999999999999545`}, {Automatic, 0}},
TaggingRules-><|"Paclet" -> "PeterBurbery/Combinatorics"|>,
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (June 3, 2023)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "TechNotePageStylesExt.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"38d9f4d4-8ca4-40c0-aa21-aeeec07b578b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 104, 1, 114, "Title",ExpressionUUID->"29863ea0-08dc-46b8-b497-cb6f5f528f0c",
 CellID->28422271],
Cell[687, 25, 274, 5, 25, "Text",ExpressionUUID->"c9cda3f0-8f4e-4867-9c22-5cb081f88c20",
 CellID->106321115],
Cell[CellGroupData[{
Cell[986, 34, 415, 9, 44, "Text",ExpressionUUID->"2768152e-beee-4843-9be6-e009958bdc11",
 CellID->345096676],
Cell[1404, 45, 287, 5, 41, "Input",ExpressionUUID->"e2eeb9fd-67f8-4057-a237-75c17f9df3c9",
 InitializationCell->True,
 CellID->13366579]
}, Open  ]],
Cell[CellGroupData[{
Cell[1728, 55, 167, 2, 45, "Section",ExpressionUUID->"c9c01b3c-ced1-4737-9c68-a4bc8ac3db64",
 CellID->12394907],
Cell[1898, 59, 2616, 67, 143, "DefinitionBox",ExpressionUUID->"a6202102-e2f6-4eac-ac3a-6c5d7c045027",
 CellID->124942403],
Cell[4517, 128, 216, 2, 30, "Caption",ExpressionUUID->"7a8788fc-21ec-4663-996e-732abb7b1fd9",
 CellID->520428306],
Cell[CellGroupData[{
Cell[4758, 134, 251, 3, 40, "MathCaption",ExpressionUUID->"f063fe58-8d4b-47d9-82d0-ca80efb77248",
 CellID->31903801],
Cell[CellGroupData[{
Cell[5034, 141, 394, 8, 25, "Input",ExpressionUUID->"43fb86de-d369-4f44-bb2b-3b22ae071992",
 CellID->2966739],
Cell[5431, 151, 265, 6, 21, "Echo",ExpressionUUID->"133bd33a-21f5-48e5-a4ea-3fc0a7aaae98",
 CellID->595052515],
Cell[5699, 159, 320, 5, 24, "Output",ExpressionUUID->"bafb0c1f-c76a-4c88-a0ef-f569908437c1",
 CellID->121226746]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6068, 170, 188, 2, 40, "MathCaption",ExpressionUUID->"5141cd7f-e1f1-4df4-91f9-a5bddd49d9ed",
 CellID->591549556],
Cell[CellGroupData[{
Cell[6281, 176, 288, 6, 25, "Input",ExpressionUUID->"c23a3f5a-4f1d-4b61-bbd8-0d8fc47f10d2",
 CellID->281752241],
Cell[6572, 184, 373, 9, 24, "Output",ExpressionUUID->"ceafa071-016a-41e7-8edb-01472aed8b23",
 CellID->255390473]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6994, 199, 501, 8, 74, "MathCaption",ExpressionUUID->"54d23bee-3cd8-4a54-b126-f0a39ee5cb17",
 CellID->114128779],
Cell[CellGroupData[{
Cell[7520, 211, 719, 18, 48, "Input",ExpressionUUID->"5ae793c0-ebfb-4576-87fa-26e4d0ddd522",
 CellID->123225409],
Cell[8242, 231, 303, 7, 24, "Output",ExpressionUUID->"2b17c3ff-644b-4a65-8d57-a8b914143f51",
 CellID->565924694]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8594, 244, 240, 4, 40, "MathCaption",ExpressionUUID->"29cdeac0-a367-43bb-98f4-8f2bd1f3ebd2",
 CellID->198474650],
Cell[CellGroupData[{
Cell[8859, 252, 756, 19, 48, "Input",ExpressionUUID->"2b66a4c8-a338-4902-85f4-f16d4240bf90",
 CellID->96415675],
Cell[9618, 273, 300, 7, 24, "Output",ExpressionUUID->"9b8753d9-ed1e-4d41-8bf7-730272789a00",
 CellID->187311040]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9967, 286, 192, 2, 40, "MathCaption",ExpressionUUID->"a9b544c6-d5f9-48e8-a27e-4a340125cfcd",
 CellID->460961065],
Cell[CellGroupData[{
Cell[10184, 292, 814, 20, 68, "Input",ExpressionUUID->"1e449f37-42a4-4474-a843-3da52a55a71d",
 CellID->348169710],
Cell[11001, 314, 176, 3, 24, "Output",ExpressionUUID->"d046d417-751a-455c-bdfc-17ffe68b9b43",
 CellID->12882949]
}, Open  ]]
}, Open  ]],
Cell[11204, 321, 187, 2, 40, "MathCaption",ExpressionUUID->"5a11a60b-a806-4be5-bc88-a7bc00e63101",
 CellID->215938530],
Cell[CellGroupData[{
Cell[11416, 327, 190, 2, 40, "MathCaption",ExpressionUUID->"aff15429-cf71-47db-a2d4-7adecf9a0732",
 CellID->142381604],
Cell[CellGroupData[{
Cell[11631, 333, 390, 8, 25, "Input",ExpressionUUID->"39399306-6d51-43c8-a829-ae7485603472",
 CellID->347150823],
Cell[12024, 343, 194, 3, 24, "Output",ExpressionUUID->"726b904a-0d84-4290-8eaf-cdc45de3d127",
 CellID->160256386]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12267, 352, 182, 2, 40, "MathCaption",ExpressionUUID->"27a657c2-f831-4950-afad-215d5b4e8dd8",
 CellID->9730894],
Cell[CellGroupData[{
Cell[12474, 358, 335, 6, 25, "Input",ExpressionUUID->"694f8ec6-44e2-4e36-8482-1a924943798a",
 CellID->172885937],
Cell[12812, 366, 302, 7, 24, "Output",ExpressionUUID->"8069a09d-19c2-4490-bfe0-b919ea676320",
 CellID->13566930]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[13175, 380, 186, 2, 45, "Section",ExpressionUUID->"ea501f5c-9f6a-4a8c-ad87-0b06a2d37fbe",
 CellID->389777251],
Cell[CellGroupData[{
Cell[13386, 386, 209, 2, 40, "MathCaption",ExpressionUUID->"ee32caf3-d16b-414e-a18c-0a7df4d6673a",
 CellID->237155657],
Cell[CellGroupData[{
Cell[13620, 392, 249, 4, 25, "Input",ExpressionUUID->"285d1c74-e5ab-4604-9f55-fc678653b2b0",
 CellID->114626256],
Cell[13872, 398, 199, 3, 24, "Output",ExpressionUUID->"7230b72d-8f0e-4880-ad3d-b960db2d429f",
 CellID->21111411]
}, Open  ]],
Cell[CellGroupData[{
Cell[14108, 406, 247, 4, 25, "Input",ExpressionUUID->"55e8283b-1098-444a-a5d8-2d4561a9f0ae",
 CellID->72962348],
Cell[14358, 412, 252, 6, 24, "Output",ExpressionUUID->"bae56064-0d9d-4616-9015-1fd94c1f9740",
 CellID->144120138]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[14659, 424, 197, 2, 40, "MathCaption",ExpressionUUID->"5415c84c-8e97-4765-a4c9-44d6f63cb09f",
 CellID->172959633],
Cell[CellGroupData[{
Cell[14881, 430, 331, 7, 25, "Input",ExpressionUUID->"c65b3946-5c0c-45d3-afc5-01451e426334",
 CellID->103210421],
Cell[15215, 439, 251, 7, 42, "Output",ExpressionUUID->"1736674a-c8bc-48ed-be97-c6d491e6c05b",
 CellID->78156444]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[15515, 452, 189, 2, 40, "MathCaption",ExpressionUUID->"b8ea977c-1152-4a0d-ad19-63d07182155a",
 CellID->452686366],
Cell[CellGroupData[{
Cell[15729, 458, 478, 12, 25, "Input",ExpressionUUID->"b3c3753c-92cc-4d4c-971d-6a628bc5ab24",
 CellID->422387114],
Cell[16210, 472, 83289, 1589, 617, "Output",ExpressionUUID->"7fbd4668-ce20-446f-a6b5-27cd21a3534b",
 CellID->209532304]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[99548, 2067, 619, 19, 54, "MathCaption",ExpressionUUID->"f6f15f69-da4c-43be-87a4-d3879c2d313f",
 CellID->56151557],
Cell[CellGroupData[{
Cell[100192, 2090, 626, 15, 48, "Input",ExpressionUUID->"cc70f617-d9b5-4de1-a734-0f7d43a1f616",
 CellID->392545453],
Cell[100821, 2107, 43140, 808, 299, "Output",ExpressionUUID->"42e8a135-2715-4e12-abca-36601da16ac0",
 CellID->242033643]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[144010, 2921, 374, 9, 40, "MathCaption",ExpressionUUID->"3e761618-b2cc-4aba-9bc3-07b752e1cc69",
 CellID->100832978],
Cell[CellGroupData[{
Cell[144409, 2934, 302, 7, 25, "Input",ExpressionUUID->"4af2cf5e-5216-42d0-80dd-d88f6164a22a",
 CellID->438135564],
Cell[144714, 2943, 262, 4, 24, "Output",ExpressionUUID->"73ae9875-82cd-4eb2-af12-7bb45e45ffcf",
 CellID->287705978]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[145037, 2954, 201, 2, 45, "Section",ExpressionUUID->"341bc06d-1647-4b03-b39b-92eca99b0f95",
 CellID->125811763],
Cell[CellGroupData[{
Cell[145263, 2960, 248, 3, 40, "MathCaption",ExpressionUUID->"141eccbe-e1ac-4dd2-b460-3dd2c299531b",
 CellID->139662984],
Cell[CellGroupData[{
Cell[145536, 2967, 516, 13, 43, "Input",ExpressionUUID->"d87e0356-0cf0-472a-8697-48e30e7e981c",
 CellID->398286937],
Cell[146055, 2982, 83239, 1588, 617, "Output",ExpressionUUID->"b0f6fed8-b166-463e-a52c-81c6f3eb878d",
 CellID->529671870]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[229343, 4576, 818, 24, 58, "MathCaption",ExpressionUUID->"9041bf23-f036-4e33-9487-c730a04c1421",
 CellID->254962743],
Cell[CellGroupData[{
Cell[230186, 4604, 700, 22, 53, "Input",ExpressionUUID->"0d12c63b-0c9c-41b1-ae56-60dc1027e1f4",
 CellID->208306947],
Cell[230889, 4628, 198, 3, 24, "Output",ExpressionUUID->"a597f12b-7afe-41b1-b1af-6d7bcda347a8",
 CellID->2750224]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[231136, 4637, 187, 2, 40, "MathCaption",ExpressionUUID->"619bf7e3-daaa-4fdd-bd20-745656cfd3fa",
 CellID->48756516],
Cell[CellGroupData[{
Cell[231348, 4643, 2043, 56, 174, "Input",ExpressionUUID->"20209ddb-9ff9-4899-9ba5-2c4b3bec96ab",
 CellID->415836666],
Cell[233394, 4701, 109753, 2157, 617, "Output",ExpressionUUID->"28377e1a-509b-4124-9434-e481c5003628",
 CellID->14127691]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[343196, 6864, 239, 4, 40, "MathCaption",ExpressionUUID->"c1302e40-c3ff-458a-8d5a-187222524edb",
 CellID->699600308],
Cell[CellGroupData[{
Cell[343460, 6872, 2041, 56, 174, "Input",ExpressionUUID->"180d6550-a6ed-4b3f-b35d-885234f88d6b",
 CellID->6091911],
Cell[345504, 6930, 94135, 1864, 596, "Output",ExpressionUUID->"7ba5a859-3834-45b9-8109-40820b5d031b",
 CellID->222447527]
}, Open  ]]
}, Open  ]],
Cell[439666, 8798, 524, 16, 40, "MathCaption",ExpressionUUID->"aede4e75-7cdc-4de3-b2a0-e8d8522971d1",
 CellID->259341750],
Cell[CellGroupData[{
Cell[440215, 8818, 213, 2, 40, "MathCaption",ExpressionUUID->"801a19b0-ea91-4885-b370-744c2e3ea415",
 CellID->82809759],
Cell[CellGroupData[{
Cell[440453, 8824, 635, 15, 61, "Input",ExpressionUUID->"266fbc21-21bf-45b9-ae3d-e414b988de8d",
 CellID->326042921],
Cell[441091, 8841, 378, 10, 24, "Output",ExpressionUUID->"b40c00d9-f487-4fa9-8ed3-ec30a4ba7172",
 CellID->258809478]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[441518, 8857, 573, 12, 47, "MathCaption",ExpressionUUID->"7363f704-fa89-445b-aff5-f61e19017c10",
 CellID->167270438],
Cell[CellGroupData[{
Cell[442116, 8873, 694, 16, 83, "Input",ExpressionUUID->"791cacf7-7939-45a9-bc5e-d4f013793396",
 CellID->50332621],
Cell[442813, 8891, 371, 10, 38, "Output",ExpressionUUID->"a5dafd4c-414a-4451-9554-2dd856399a3c",
 CellID->976239009]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[443245, 8908, 200, 3, 45, "Section",ExpressionUUID->"817d588d-c52a-4e94-842b-c16826a791bd",
 CellID->114590234],
Cell[CellGroupData[{
Cell[443470, 8915, 470, 11, 40, "MathCaption",ExpressionUUID->"58990fce-e185-4229-969c-d7bf980499ca",
 CellID->20786854],
Cell[CellGroupData[{
Cell[443965, 8930, 706, 17, 43, "Input",ExpressionUUID->"070f4149-e60c-4a73-a192-640f23a6b3e7",
 CellID->712923585],
Cell[444674, 8949, 1208, 30, 24, "Output",ExpressionUUID->"d92e36e3-51fb-455a-86c5-54f5096577f7",
 CellID->221917247]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[445931, 8985, 169, 2, 42, "Subsection",ExpressionUUID->"d31d1b69-5656-4134-971d-3bb63864b95b",
 CellID->529009126],
Cell[CellGroupData[{
Cell[446125, 8991, 189, 2, 43, "Subsubsection",ExpressionUUID->"aeca03e3-99da-4e15-89a8-5b13c1f9a2e6",
 CellID->278556927],
Cell[CellGroupData[{
Cell[446339, 8997, 460, 8, 74, "MathCaption",ExpressionUUID->"6075fe4f-193e-4df9-9253-8bd556f0b2ac",
 CellID->138860351],
Cell[CellGroupData[{
Cell[446824, 9009, 408, 8, 25, "Input",ExpressionUUID->"b1b55d79-e63b-4a94-bca7-cd08ad44707f",
 CellID->282822165],
Cell[447235, 9019, 15039, 251, 139, "Output",ExpressionUUID->"24fc6116-1fcd-4782-a001-82bf806c6c8e",
 CellID->83022609]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[462323, 9276, 185, 2, 40, "MathCaption",ExpressionUUID->"ad812f14-edcb-46ca-a7b9-10d9d51d9ae0",
 CellID->80522523],
Cell[CellGroupData[{
Cell[462533, 9282, 403, 8, 25, "Input",ExpressionUUID->"8a3c04b3-7fcc-438f-9a13-cc415d98eb0d",
 CellID->57533203],
Cell[462939, 9292, 227, 4, 24, "Output",ExpressionUUID->"5c0c1500-966e-45b5-b058-6b1ea91dc530",
 CellID->224896994]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[463215, 9302, 193, 2, 40, "MathCaption",ExpressionUUID->"6abc5169-45bb-477b-ba23-4adc5e00e0ca",
 CellID->458749474],
Cell[CellGroupData[{
Cell[463433, 9308, 359, 7, 25, "Input",ExpressionUUID->"4bf525df-0b49-4c5a-b22b-7d3d6caab2e9",
 CellID->175618304],
Cell[463795, 9317, 198, 3, 24, "Output",ExpressionUUID->"75ed71c0-ad04-4af4-a1be-03080fa660d9",
 CellID->101962785]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[464042, 9326, 207, 2, 40, "MathCaption",ExpressionUUID->"3bd74ddd-9426-40a3-aec1-cf7261a0d99b",
 CellID->415210772],
Cell[CellGroupData[{
Cell[464274, 9332, 331, 7, 25, "Input",ExpressionUUID->"fc85464e-5626-441c-9a8f-6b265ee4874e",
 CellID->636305125],
Cell[464608, 9341, 195, 3, 24, "Output",ExpressionUUID->"e787140b-f9aa-4819-805a-05dc04991bb7",
 CellID->158571967]
}, Open  ]],
Cell[CellGroupData[{
Cell[464840, 9349, 397, 8, 25, "Input",ExpressionUUID->"1b0e212f-990b-4a38-ae6b-d3299df40787",
 CellID->292353289],
Cell[465240, 9359, 224, 4, 24, "Output",ExpressionUUID->"a135fc76-412c-4e10-b183-b5722908b411",
 CellID->667086174]
}, Open  ]]
}, Open  ]],
Cell[465491, 9367, 359, 9, 40, "MathCaption",ExpressionUUID->"d9300174-a555-472e-81cd-cad3f180599f",
 CellID->19329075]
}, Closed]],
Cell[CellGroupData[{
Cell[465887, 9381, 199, 2, 43, "Subsubsection",ExpressionUUID->"dc3a3081-25ce-47e2-8694-dc9339f163fb",
 CellID->426728163],
Cell[CellGroupData[{
Cell[466111, 9387, 282, 5, 57, "MathCaption",ExpressionUUID->"cf6a04bf-71bc-4c6b-b550-75d212435306",
 CellID->76587251],
Cell[CellGroupData[{
Cell[466418, 9396, 387, 9, 25, "Input",ExpressionUUID->"c24656bd-5bb8-499c-8c0e-a51677699294",
 CellID->560951652],
Cell[466808, 9407, 7548, 128, 66, "Output",ExpressionUUID->"88309cfb-bb67-4fe3-b8bd-23b08cfeef86",
 CellID->38801890]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[474405, 9541, 187, 2, 40, "MathCaption",ExpressionUUID->"98cd6fb9-18bf-4f70-b962-352d55e0360b",
 CellID->506692511],
Cell[CellGroupData[{
Cell[474617, 9547, 386, 9, 25, "Input",ExpressionUUID->"8004a5ce-36fd-4a2b-9acd-4c9b43863de6",
 CellID->194604109],
Cell[475006, 9558, 172, 3, 24, "Output",ExpressionUUID->"c4ed137e-0fcf-413c-9835-84dbbd208838",
 CellID->793551999]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[475227, 9567, 603, 17, 71, "MathCaption",ExpressionUUID->"d5339388-10c8-436e-b01e-453b467cb621",
 CellID->660007025],
Cell[CellGroupData[{
Cell[475855, 9588, 334, 8, 25, "Input",ExpressionUUID->"6bc12bc7-dc01-425c-a57d-038033662ede",
 CellID->36135894],
Cell[476192, 9598, 173, 3, 24, "Output",ExpressionUUID->"885d35a7-2867-4d45-b060-1607ebe31fe7",
 CellID->99800880]
}, Open  ]]
}, Open  ]],
Cell[476392, 9605, 871, 18, 91, "MathCaption",ExpressionUUID->"f7ca8087-8d23-4ee9-b2c8-0494eb1543cb",
 CellID->106049717]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[477312, 9629, 172, 2, 42, "Subsection",ExpressionUUID->"e478b64c-7b60-4363-bee6-2430b919a40c",
 CellID->198781856],
Cell[477487, 9633, 208, 2, 40, "MathCaption",ExpressionUUID->"11d8a72c-b16f-4f6a-ac77-87deb7cc5af8",
 CellID->133148963],
Cell[CellGroupData[{
Cell[477720, 9639, 247, 4, 40, "MathCaption",ExpressionUUID->"ec48c60e-0185-4371-b2cc-22991196ade7",
 CellID->57908701],
Cell[CellGroupData[{
Cell[477992, 9647, 308, 6, 25, "Input",ExpressionUUID->"861c6930-24d9-450e-b8ff-492cecf38028",
 CellID->407433582],
Cell[478303, 9655, 3441, 90, 24, "Output",ExpressionUUID->"3c12c15a-f69a-4157-95c5-181aa4ea6567",
 CellID->898697144]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[481805, 9752, 174, 2, 42, "Subsection",ExpressionUUID->"e45ef553-7bf5-4f08-bba6-9d5cf5a243aa",
 CellID->78398657],
Cell[CellGroupData[{
Cell[482004, 9758, 252, 4, 40, "MathCaption",ExpressionUUID->"79f05979-2c68-4e3f-bab4-4135e0ab0567",
 CellID->708478496],
Cell[CellGroupData[{
Cell[482281, 9766, 321, 6, 25, "Input",ExpressionUUID->"92e5d00f-ec71-4325-a442-547765e12750",
 CellID->450230421],
Cell[482605, 9774, 878, 22, 24, "Output",ExpressionUUID->"918b6fcf-e55f-4b27-98e6-2d4d8465cb26",
 CellID->559918355]
}, Open  ]],
Cell[CellGroupData[{
Cell[483520, 9801, 379, 8, 25, "Input",ExpressionUUID->"0bc2d1a9-a708-49e5-9b03-624687358ee1",
 CellID->212638519],
Cell[483902, 9811, 1281, 31, 24, "Output",ExpressionUUID->"8c96e5f9-ccb6-40bd-b4f9-2377f7b695f3",
 CellID->399220382]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[485232, 9848, 214, 2, 40, "MathCaption",ExpressionUUID->"92ece283-ca8d-4bfc-a0e2-c926a94bd189",
 CellID->19185935],
Cell[CellGroupData[{
Cell[485471, 9854, 413, 8, 25, "Input",ExpressionUUID->"3cb5f31d-ffe6-4da3-a9ce-89e7634a9b28",
 CellID->140398203],
Cell[485887, 9864, 11812, 198, 131, "Output",ExpressionUUID->"03419548-580b-4f43-af3a-9b3873e464a4",
 CellID->949633236]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[497748, 10068, 176, 2, 40, "MathCaption",ExpressionUUID->"b0d59f53-da6c-4f94-a7b9-052913501059",
 CellID->26153898],
Cell[CellGroupData[{
Cell[497949, 10074, 306, 6, 25, "Input",ExpressionUUID->"2da36c32-091a-4b0d-a5a5-59996abcf186",
 CellID->167639408],
Cell[498258, 10082, 195, 3, 24, "Output",ExpressionUUID->"b99d2df1-4daa-4af6-a817-44cda6c0b777",
 CellID->357676866]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[498502, 10091, 186, 2, 40, "MathCaption",ExpressionUUID->"228f7900-92d4-4303-8e29-7fc5e6d5f3ca",
 CellID->288178981],
Cell[CellGroupData[{
Cell[498713, 10097, 383, 7, 25, "Input",ExpressionUUID->"c95be784-0e12-4246-831c-32bcf35bd2ec",
 CellID->82120594],
Cell[499099, 10106, 197, 3, 24, "Output",ExpressionUUID->"c8f100ea-8e92-416d-be5d-7deeca540871",
 CellID->63825070]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[499345, 10115, 255, 3, 40, "MathCaption",ExpressionUUID->"ce9bdeae-7144-4ac6-a716-5780d256be51",
 CellID->194380331],
Cell[CellGroupData[{
Cell[499625, 10122, 276, 5, 25, "Input",ExpressionUUID->"70bbcf11-5ce4-4700-a7a4-8a2203ac88cf",
 CellID->653333490],
Cell[499904, 10129, 229, 4, 24, "Output",ExpressionUUID->"765ad395-184a-40a7-b3d1-8853dd7fddea",
 CellID->221162590]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[500182, 10139, 206, 2, 40, "MathCaption",ExpressionUUID->"666ab59d-67bf-4418-b36d-5ccfa4ffde01",
 CellID->158717184],
Cell[CellGroupData[{
Cell[500413, 10145, 345, 6, 25, "Input",ExpressionUUID->"d0ddbee2-1cf2-49a2-9d95-0dd7a15cc24b",
 CellID->414886273],
Cell[500761, 10153, 230, 4, 24, "Output",ExpressionUUID->"26463a7f-2099-494c-b5e7-6c43008d9b53",
 CellID->227415575]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[501040, 10163, 189, 2, 43, "Subsubsection",ExpressionUUID->"d2d60db9-617e-490b-b40c-906ab076b36a",
 CellID->79335839],
Cell[CellGroupData[{
Cell[501254, 10169, 289, 5, 40, "MathCaption",ExpressionUUID->"3dbd323c-2f91-4dff-abf1-43f749acaea1",
 CellID->68146688],
Cell[CellGroupData[{
Cell[501568, 10178, 455, 8, 25, "Input",ExpressionUUID->"e0e90ea5-207d-48c3-b65a-d5b28dd00d3d",
 CellID->848151591],
Cell[502026, 10188, 9816, 165, 100, "Output",ExpressionUUID->"4e329417-2b70-400e-a2d9-46073930d97d",
 CellID->231675266]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[511891, 10359, 178, 2, 40, "MathCaption",ExpressionUUID->"1369ae87-fc46-4ca7-a932-c40819915d56",
 CellID->36066100],
Cell[CellGroupData[{
Cell[512094, 10365, 374, 7, 25, "Input",ExpressionUUID->"158d7060-d640-45c2-9ec2-b5051682c40f",
 CellID->361232442],
Cell[512471, 10374, 224, 4, 24, "Output",ExpressionUUID->"d9e4e9d8-dfb5-4b4a-8b2b-86eb75299583",
 CellID->38610816]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[512744, 10384, 187, 2, 40, "MathCaption",ExpressionUUID->"b2be7646-8ac5-4d6d-a3ac-e2b82a66a0a2",
 CellID->49896177],
Cell[CellGroupData[{
Cell[512956, 10390, 350, 6, 25, "Input",ExpressionUUID->"9640d49f-7348-4f94-aa19-6c3525bbbeed",
 CellID->511712627],
Cell[513309, 10398, 172, 3, 24, "Output",ExpressionUUID->"87ba33de-51d6-4068-9463-1e0ec6b4b4f4",
 CellID->224550050]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[513530, 10407, 291, 5, 40, "MathCaption",ExpressionUUID->"c2177158-72e1-41bf-a8dd-d9645f470d79",
 CellID->402703826],
Cell[CellGroupData[{
Cell[513846, 10416, 294, 5, 25, "Input",ExpressionUUID->"f0bb993c-b961-429a-81e6-5837a170bcda",
 CellID->1592074],
Cell[514143, 10423, 263, 4, 24, "Output",ExpressionUUID->"b432ec56-82fe-4738-9c74-531133f42699",
 CellID->108392481]
}, Open  ]]
}, Open  ]],
Cell[514433, 10431, 308, 6, 40, "MathCaption",ExpressionUUID->"920b6ca0-1edd-4e50-b065-34d8f26c0552",
 CellID->211204775],
Cell[CellGroupData[{
Cell[514766, 10441, 206, 2, 40, "MathCaption",ExpressionUUID->"6f2de5fc-8881-4375-bd20-50b5aabca4e7",
 CellID->103140816],
Cell[CellGroupData[{
Cell[514997, 10447, 342, 7, 25, "Input",ExpressionUUID->"ff583f61-fbbf-4764-a591-a033b1fef0b1",
 CellID->631127211],
Cell[515342, 10456, 8378, 142, 85, "Output",ExpressionUUID->"24c4948f-fd4b-49f2-a089-e7cba01cb51b",
 CellID->80019259]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[523805, 10607, 252, 3, 45, "Section",ExpressionUUID->"2adf9ab2-7129-4974-961c-6893223cc3c5",
 CellID->59969200],
Cell[CellGroupData[{
Cell[524082, 10614, 449, 7, 91, "MathCaption",ExpressionUUID->"5ea5f57e-8689-430e-aab9-94b3ff6aac24",
 CellID->305515986],
Cell[CellGroupData[{
Cell[524556, 10625, 238, 5, 25, "Input",ExpressionUUID->"1225205f-43a5-4f3e-b5fa-3dcf40dcda74",
 CellID->39383660],
Cell[524797, 10632, 172, 3, 24, "Output",ExpressionUUID->"8aa48063-6950-413d-b93a-2c530d6e81c9",
 CellID->103072013]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[525018, 10641, 235, 4, 40, "MathCaption",ExpressionUUID->"b7817b72-b479-4c0b-bd53-e5f4386c86c8",
 CellID->17219148],
Cell[CellGroupData[{
Cell[525278, 10649, 220, 4, 25, "Input",ExpressionUUID->"a4f91814-1c43-4adc-9968-7211c2b9b18d",
 CellID->47120929],
Cell[525501, 10655, 173, 3, 24, "Output",ExpressionUUID->"16bfd78e-9def-4875-8130-52427c0b1a67",
 CellID->64792566]
}, Open  ]]
}, Open  ]],
Cell[525701, 10662, 457, 13, 52, "MathCaption",ExpressionUUID->"55a96f20-509c-4cd8-8413-0f69269f3162",
 CellID->94970839],
Cell[CellGroupData[{
Cell[526183, 10679, 301, 5, 74, "MathCaption",ExpressionUUID->"60c8a798-9f47-4f70-b987-7b5869fdf4f6",
 CellID->14643919],
Cell[CellGroupData[{
Cell[526509, 10688, 656, 14, 78, "Input",ExpressionUUID->"078d409d-b639-4f1e-adb8-0bada5d27ea7",
 CellID->37517731],
Cell[527168, 10704, 172, 3, 24, "Output",ExpressionUUID->"4180692d-2826-43fe-a927-20302b07210e",
 CellID->530337700]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[527389, 10713, 243, 4, 40, "MathCaption",ExpressionUUID->"4e41fccb-1872-482a-ad28-6ad05091fcca",
 CellID->125191938],
Cell[CellGroupData[{
Cell[527657, 10721, 238, 4, 25, "Input",ExpressionUUID->"3996feb2-fa6f-4310-9699-0af933842f60",
 CellID->62500105],
Cell[527898, 10727, 175, 3, 24, "Output",ExpressionUUID->"237bda7e-ce06-44ba-8cc4-d61b63543458",
 CellID->137339370]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[528122, 10736, 232, 3, 40, "MathCaption",ExpressionUUID->"6ff6e65a-eeb9-41da-9032-0ab8abea8348",
 CellID->968157184],
Cell[CellGroupData[{
Cell[528379, 10743, 455, 10, 25, "Input",ExpressionUUID->"d5ce45de-3ec2-4be1-98f9-a71c7ab5701f",
 CellID->702446134],
Cell[528837, 10755, 688, 17, 24, "Output",ExpressionUUID->"ed247986-77e0-43aa-9a7e-756924643b06",
 CellID->306566547]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[529574, 10778, 213, 3, 40, "MathCaption",ExpressionUUID->"779af4d7-1efc-44ff-9d54-d221f84df0cc",
 CellID->505671602],
Cell[CellGroupData[{
Cell[529812, 10785, 419, 10, 25, "Input",ExpressionUUID->"192d43bc-36f3-420c-95fd-1ac5678c7a85",
 CellID->618773088],
Cell[530234, 10797, 1914, 52, 77, "Output",ExpressionUUID->"e99e8e59-1ec2-4372-9aad-45078339f040",
 CellID->525838052]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[532197, 10855, 322, 6, 40, "MathCaption",ExpressionUUID->"d9197dce-04a1-46b8-a322-dec1b4dacd71",
 CellID->330285041],
Cell[CellGroupData[{
Cell[532544, 10865, 329, 7, 25, "Input",ExpressionUUID->"c229ce77-cd25-4941-bc8b-f7fb6e596f60",
 CellID->149666305],
Cell[532876, 10874, 225, 5, 24, "Output",ExpressionUUID->"1ccad662-e426-48df-997a-e9e72611fd63",
 CellID->164357416]
}, Open  ]],
Cell[CellGroupData[{
Cell[533138, 10884, 329, 7, 25, "Input",ExpressionUUID->"a297bb40-accc-4b26-9af8-01db3fcac5d1",
 CellID->279831655],
Cell[533470, 10893, 226, 5, 24, "Output",ExpressionUUID->"eb867f17-6de1-4603-8a65-5da575ab39ea",
 CellID->240178721]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[533745, 10904, 244, 4, 40, "MathCaption",ExpressionUUID->"cb4c5f0a-8e98-4ee2-81ee-83b8b5229de6",
 CellID->377750434],
Cell[CellGroupData[{
Cell[534014, 10912, 452, 10, 43, "Input",ExpressionUUID->"f57e03a6-21f1-4235-95c2-2e986517fcaa",
 CellID->80880133],
Cell[534469, 10924, 818, 22, 42, "Output",ExpressionUUID->"a597f984-67db-415a-93f5-cc8a4c17e260",
 CellID->99913589]
}, Open  ]],
Cell[CellGroupData[{
Cell[535324, 10951, 496, 11, 43, "Input",ExpressionUUID->"3473a1a9-4e2e-46a6-ae00-509c463b60d9",
 CellID->281231649],
Cell[535823, 10964, 650, 18, 24, "Output",ExpressionUUID->"5e2726d8-1054-4fce-b832-cfb0d6fbde8d",
 CellID->480068261]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[536522, 10988, 205, 2, 40, "MathCaption",ExpressionUUID->"d1647e90-dfaa-42b7-b8ad-26fba6ddfc16",
 CellID->88233538],
Cell[CellGroupData[{
Cell[536752, 10994, 375, 8, 25, "Input",ExpressionUUID->"e19a5b82-bf36-4234-8359-04f2b48ef314",
 CellID->926616109],
Cell[537130, 11004, 625, 18, 24, "Output",ExpressionUUID->"4fe5c88f-1499-4ed2-9d31-3ca9ae7e59e0",
 CellID->78903040]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[537804, 11028, 195, 2, 40, "MathCaption",ExpressionUUID->"93405352-b02b-4b20-9e88-587d3d058267",
 CellID->97113938],
Cell[CellGroupData[{
Cell[538024, 11034, 430, 10, 43, "Input",ExpressionUUID->"72102507-d9a9-415c-a9e6-d60539767db6",
 CellID->22984984],
Cell[538457, 11046, 626, 18, 24, "Output",ExpressionUUID->"f47a0b2b-3f04-43ef-b02c-ffc71472b5b1",
 CellID->239111319]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[539132, 11070, 210, 2, 40, "MathCaption",ExpressionUUID->"8269cbed-325f-485d-843d-be139e1086d3",
 CellID->396413639],
Cell[CellGroupData[{
Cell[539367, 11076, 599, 13, 61, "Input",ExpressionUUID->"3b64f990-bd2b-48c3-866c-bca494b91bdd",
 CellID->229833682],
Cell[539969, 11091, 896, 25, 21, "Echo",ExpressionUUID->"b25b2795-fee1-473e-9411-e446c1e44c9e",
 CellID->834526706],
Cell[540868, 11118, 624, 18, 24, "Output",ExpressionUUID->"5180b357-0d0a-4f64-8c83-25436aa00830",
 CellID->630516631]
}, Open  ]],
Cell[CellGroupData[{
Cell[541529, 11141, 477, 10, 43, "Input",ExpressionUUID->"a34abd73-cfa1-4b08-9c65-131cdb6ab634",
 CellID->162857240],
Cell[542009, 11153, 930, 25, 21, "Echo",ExpressionUUID->"2f7e5e03-c0a2-4182-bb47-785e1e00e171",
 CellID->267038778],
Cell[542942, 11180, 625, 18, 24, "Output",ExpressionUUID->"5ea7219e-6a6b-403b-b0d3-76becbf2e52e",
 CellID->51852502]
}, Open  ]],
Cell[CellGroupData[{
Cell[543604, 11203, 626, 14, 61, "Input",ExpressionUUID->"265bbe0e-3df5-4ad0-afcd-cd8174b9bee2",
 CellID->306376386],
Cell[544233, 11219, 910, 25, 21, "Echo",ExpressionUUID->"7076c2e5-901f-4489-9e7f-5e65b454a91d",
 CellID->448272658]
}, Open  ]],
Cell[CellGroupData[{
Cell[545180, 11249, 496, 11, 43, "Input",ExpressionUUID->"f428c231-93fc-42cc-8ee5-880d3b0b4361",
 CellID->3601619],
Cell[545679, 11262, 911, 25, 21, "Echo",ExpressionUUID->"cd4d116f-6fb7-4712-a36c-54af46c1214c",
 CellID->88055709]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[546639, 11293, 337, 6, 57, "MathCaption",ExpressionUUID->"663ee3fe-596d-4d2a-a7eb-09731c709d57",
 CellID->100378946],
Cell[CellGroupData[{
Cell[547001, 11303, 610, 14, 61, "Input",ExpressionUUID->"2c1a3040-cb92-4333-be4e-12bb4ea80ef0",
 CellID->268140765],
Cell[547614, 11319, 917, 25, 21, "Echo",ExpressionUUID->"a19e8ced-1b0a-40a2-9e5a-eea4f2973c89",
 CellID->434075465]
}, Open  ]],
Cell[CellGroupData[{
Cell[548568, 11349, 478, 11, 43, "Input",ExpressionUUID->"102b64b7-4454-4e12-8f12-990c7622c952",
 CellID->589080666],
Cell[549049, 11362, 915, 25, 21, "Echo",ExpressionUUID->"294c9639-d817-47a7-97a2-68e1caf5c21c",
 CellID->323976790]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[550025, 11394, 180, 2, 45, "Section",ExpressionUUID->"47db4cff-b5be-4f80-b232-2458935d031e",
 CellID->139191236],
Cell[CellGroupData[{
Cell[550230, 11400, 214, 2, 40, "MathCaption",ExpressionUUID->"9bccd181-e618-417a-b3b6-e5b9f8235a2d",
 CellID->478421323],
Cell[CellGroupData[{
Cell[550469, 11406, 413, 9, 25, "Input",ExpressionUUID->"c8b6daab-da34-4e61-a47f-4d129c6e69c0",
 CellID->542729463],
Cell[550885, 11417, 3962, 91, 250, "Output",ExpressionUUID->"340668c1-667b-4c26-8054-a3160f8471ca",
 CellID->25169857]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[554896, 11514, 215, 3, 40, "MathCaption",ExpressionUUID->"dd382b7c-0a1b-4fdd-bc0d-92ab2a4edb64",
 CellID->59602588],
Cell[CellGroupData[{
Cell[555136, 11521, 303, 6, 25, "Input",ExpressionUUID->"ac51ac44-7bd4-4544-aacc-82c4e811684f",
 CellID->141527026],
Cell[555442, 11529, 728, 14, 69, "Output",ExpressionUUID->"df6e1693-85b8-4644-8d07-6e9c2af984b3",
 CellID->387932858]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[556219, 11549, 254, 6, 40, "MathCaption",ExpressionUUID->"f38281b9-fbdb-4cc2-946f-11699909ed7f",
 CellID->909413053],
Cell[CellGroupData[{
Cell[556498, 11559, 392, 8, 25, "Input",ExpressionUUID->"b532b741-a352-4336-b84a-89608831d50f",
 CellID->285728069],
Cell[556893, 11569, 2310, 42, 235, "Output",ExpressionUUID->"0012ca9c-37e2-4848-97df-7ae0086ab50b",
 CellID->291815495]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[559264, 11618, 182, 2, 45, "Section",ExpressionUUID->"fff6d5b4-c4e7-4dab-9b99-7dade22af8e3",
 CellID->3656217],
Cell[CellGroupData[{
Cell[559471, 11624, 394, 8, 57, "MathCaption",ExpressionUUID->"4354c4e1-d12b-46ac-b346-6d8ddbba8cae",
 CellID->123284224],
Cell[CellGroupData[{
Cell[559890, 11636, 624, 13, 25, "Input",ExpressionUUID->"6669ab30-ade7-4e92-a6e0-3ded406257d2",
 CellID->841619866],
Cell[560517, 11651, 1959, 43, 77, "Output",ExpressionUUID->"19167270-2be2-483c-b38f-15fe38fbd73c",
 CellID->89679823]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[562525, 11700, 183, 2, 40, "MathCaption",ExpressionUUID->"f2f8f22e-9c43-4122-91bd-6e12288f3b32",
 CellID->24958883],
Cell[CellGroupData[{
Cell[562733, 11706, 456, 10, 25, "Input",ExpressionUUID->"69fd66db-4571-4ba8-aef8-1227dc35dbaf",
 CellID->484647955],
Cell[563192, 11718, 435, 9, 42, "Output",ExpressionUUID->"b064dac1-3a34-4778-9d12-1614a9585687",
 CellID->123777944]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[563676, 11733, 216, 3, 40, "MathCaption",ExpressionUUID->"5540ead2-6393-4740-a895-a294df2d7418",
 CellID->837471449],
Cell[CellGroupData[{
Cell[563917, 11740, 541, 12, 25, "Input",ExpressionUUID->"e5b1dba1-7e96-4784-bbc7-82a54d2f70a4",
 CellID->724085147],
Cell[564461, 11754, 868, 22, 24, "Output",ExpressionUUID->"60ec549a-273d-4fd9-88d2-a2a08007181e",
 CellID->96753963]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[565378, 11782, 187, 2, 40, "MathCaption",ExpressionUUID->"4ceb201e-3050-442d-8adf-7606de4e12c5",
 CellID->505704633],
Cell[CellGroupData[{
Cell[565590, 11788, 493, 11, 25, "Input",ExpressionUUID->"e728bbee-cf4c-4529-ab1a-5ad45e6f454b",
 CellID->220964068],
Cell[566086, 11801, 288, 7, 24, "Output",ExpressionUUID->"627b5b56-b760-45af-8f38-f4daa8596ae6",
 CellID->74427375]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[566423, 11814, 277, 4, 40, "MathCaption",ExpressionUUID->"302074b2-53bf-412b-b378-0d9dd6af2ccc",
 CellID->733329592],
Cell[CellGroupData[{
Cell[566725, 11822, 640, 14, 25, "Input",ExpressionUUID->"48030e11-2693-464d-a385-8febe1f6caf1",
 CellID->472360365],
Cell[567368, 11838, 1788, 45, 60, "Output",ExpressionUUID->"320e1c85-3ab3-4d6e-ae3a-c595dd565b99",
 CellID->45157847]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[569205, 11889, 187, 2, 40, "MathCaption",ExpressionUUID->"a6a119c0-552b-4efb-8525-cc57e5a43159",
 CellID->232625522],
Cell[CellGroupData[{
Cell[569417, 11895, 515, 12, 25, "Input",ExpressionUUID->"7d958271-927d-423e-9287-5d8c0674c251",
 CellID->129412639],
Cell[569935, 11909, 438, 9, 42, "Output",ExpressionUUID->"a11a8500-f148-473b-8a06-24ee49e2daad",
 CellID->294220470]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[570422, 11924, 293, 6, 57, "MathCaption",ExpressionUUID->"ff109d32-603f-4c5b-8e05-95f98b94889f",
 CellID->979377819],
Cell[CellGroupData[{
Cell[570740, 11934, 728, 21, 25, "Input",ExpressionUUID->"be432af3-2f08-46ff-b697-f1512e8cb0be",
 CellID->174898405],
Cell[571471, 11957, 990, 24, 42, "Output",ExpressionUUID->"589f9702-e116-43e7-bdb7-d413e1c17514",
 CellID->408943794]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[572510, 11987, 286, 6, 40, "MathCaption",ExpressionUUID->"a43f3540-f32b-4aa8-8c54-95db8425bd25",
 CellID->559719523],
Cell[CellGroupData[{
Cell[572821, 11997, 606, 15, 25, "Input",ExpressionUUID->"ac9aa9b0-66b6-4742-bc66-874ea2f18d1e",
 CellID->359245144],
Cell[573430, 12014, 1157, 28, 42, "Output",ExpressionUUID->"eed62582-7a78-4769-8e99-f7bdea20165b",
 CellID->162633939]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[574636, 12048, 459, 12, 41, "MathCaption",ExpressionUUID->"cdab7a3c-f45a-4f45-901b-26ef56083726",
 CellID->306011383],
Cell[CellGroupData[{
Cell[575120, 12064, 908, 26, 43, "Input",ExpressionUUID->"0caf7b72-3268-491d-b1a2-8a6371ce5171",
 CellID->884651642],
Cell[576031, 12092, 5531, 190, 136, "Output",ExpressionUUID->"40ea0673-2881-4791-8a49-212bd297141a",
 CellID->320654796]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[581611, 12288, 188, 2, 40, "MathCaption",ExpressionUUID->"4ac846aa-77a9-49f7-8054-98baf0677b0d",
 CellID->22585214],
Cell[CellGroupData[{
Cell[581824, 12294, 230, 4, 25, "Input",ExpressionUUID->"1fcb191a-59d4-4050-8321-c72cd2563f77",
 CellID->548368980],
Cell[582057, 12300, 2374, 67, 83, "Output",ExpressionUUID->"576e9095-ab15-4b4c-a959-44f27bd0e87b",
 CellID->266909173]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[584480, 12373, 208, 2, 40, "MathCaption",ExpressionUUID->"d63b06af-1456-44ac-9378-62dba7c9700a",
 CellID->305030941],
Cell[CellGroupData[{
Cell[584713, 12379, 275, 5, 25, "Input",ExpressionUUID->"038fbc44-8b6f-4fa1-bfaf-7b23417d9106",
 CellID->206631954],
Cell[584991, 12386, 380, 10, 28, "Output",ExpressionUUID->"d5f634fd-68fd-4783-8c83-e8bbe07f5a24",
 CellID->390480037]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[585420, 12402, 194, 2, 40, "MathCaption",ExpressionUUID->"85619cf8-d735-4f37-abb9-d45bc6e04bcb",
 CellID->240106575],
Cell[CellGroupData[{
Cell[585639, 12408, 556, 15, 25, "Input",ExpressionUUID->"59bb25db-be50-4465-baad-8667d4a28c8c",
 CellID->154729335],
Cell[586198, 12425, 47128, 829, 264, "Output",ExpressionUUID->"4e7502ee-86ad-48c8-9f99-15d636a5d6e2",
 CellID->256275073]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[633375, 13260, 454, 12, 41, "MathCaption",ExpressionUUID->"b66e5aca-dd0a-487a-9041-3934211532d4",
 CellID->700662694],
Cell[CellGroupData[{
Cell[633854, 13276, 385, 11, 25, "Input",ExpressionUUID->"55d24978-3d99-4ecb-aff4-805fb17ef499",
 CellID->70632808],
Cell[634242, 13289, 728, 13, 42, "Output",ExpressionUUID->"3c570a3f-f5d2-429c-9220-f1246ef149b8",
 CellID->542659924]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[635019, 13308, 223, 3, 40, "MathCaption",ExpressionUUID->"a2687098-5ec8-463b-9fff-5a86631beb32",
 CellID->444986081],
Cell[CellGroupData[{
Cell[635267, 13315, 691, 17, 25, "Input",ExpressionUUID->"2a029c60-13fd-407b-8659-f003aac3977e",
 CellID->991815813],
Cell[635961, 13334, 734, 17, 24, "Output",ExpressionUUID->"c55abc0b-303c-44b6-97b1-4d7c6c979f39",
 CellID->33854908]
}, Open  ]],
Cell[636710, 13354, 260, 6, 26, "ExampleDelimiter",ExpressionUUID->"ad55efe8-6529-42f3-bf34-50fbab66cf0a",
 CellID->14107563]
}, Open  ]],
Cell[CellGroupData[{
Cell[637007, 13365, 1741, 50, 60, "MathCaption",ExpressionUUID->"acde014d-3d04-44c4-a3d6-ddb0bff5b1a9",
 CellID->771301361],
Cell[CellGroupData[{
Cell[638773, 13419, 656, 17, 25, "Input",ExpressionUUID->"90003962-a32f-4327-a6c1-e0be21ea25ca",
 CellID->535666113],
Cell[639432, 13438, 412, 7, 24, "Output",ExpressionUUID->"6d2c51e4-a3c6-4122-a84d-58d4e2020341",
 CellID->27544576]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[639893, 13451, 1384, 40, 41, "MathCaption",ExpressionUUID->"7585bdc1-c8e4-475e-8fa6-62fb2b5e8f84",
 CellID->444708281],
Cell[CellGroupData[{
Cell[641302, 13495, 645, 18, 25, "Input",ExpressionUUID->"3e83ec76-e0e7-402e-ab90-5f49cfef91c4",
 CellID->887464862],
Cell[641950, 13515, 361, 6, 24, "Output",ExpressionUUID->"ba74d64f-f99f-426a-ac6d-0920e0e6d922",
 CellID->141130879]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[642360, 13527, 221, 3, 40, "MathCaption",ExpressionUUID->"ad87b6cc-c941-4fdb-b881-574d5ac1fcc7",
 CellID->486162817],
Cell[CellGroupData[{
Cell[642606, 13534, 270, 5, 25, "Input",ExpressionUUID->"27305d48-9802-48fd-b5da-17643a346196",
 CellID->615462631],
Cell[642879, 13541, 340, 6, 24, "Output",ExpressionUUID->"4d933469-c713-4730-a0ea-b5712d5be3da",
 CellID->86302315]
}, Open  ]],
Cell[643234, 13550, 260, 6, 26, "ExampleDelimiter",ExpressionUUID->"575ba920-4532-42fb-a37c-f1d4fcc33440",
 CellID->14107564]
}, Open  ]],
Cell[CellGroupData[{
Cell[643531, 13561, 1317, 39, 41, "MathCaption",ExpressionUUID->"41364d4a-2ac4-485d-a982-3a094b6d0841",
 CellID->177535240],
Cell[CellGroupData[{
Cell[644873, 13604, 713, 18, 25, "Input",ExpressionUUID->"5358031e-d959-4779-8d3c-6570e69976c5",
 CellID->661797484],
Cell[645589, 13624, 680, 17, 24, "Output",ExpressionUUID->"5346b332-1572-4e3a-a2d7-f195cee1243e",
 CellID->4477802]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[646318, 13647, 1172, 30, 60, "MathCaption",ExpressionUUID->"f96e0de9-a41a-4cfb-a776-8989acaf3294",
 CellID->445973593],
Cell[CellGroupData[{
Cell[647515, 13681, 1302, 33, 96, "Input",ExpressionUUID->"ec887f98-2e41-4ca2-8653-fc330f60bd25",
 CellID->869163183],
Cell[648820, 13716, 606, 14, 38, "Output",ExpressionUUID->"1abab16f-c336-4ec9-8ca8-568a61810409",
 CellID->56459738]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[649475, 13736, 324, 7, 40, "MathCaption",ExpressionUUID->"75f3b4b2-75b9-4bfa-81c5-77bcd9476c47",
 CellID->686745089],
Cell[CellGroupData[{
Cell[649824, 13747, 1249, 33, 96, "Input",ExpressionUUID->"f38b2180-d3bb-4aff-82dd-159bacdd9d4e",
 CellID->674295727],
Cell[651076, 13782, 630, 15, 38, "Output",ExpressionUUID->"95503ba9-e8aa-4352-a734-cf4634fb974c",
 CellID->504109667]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[651767, 13804, 178, 2, 45, "Section",ExpressionUUID->"f012b046-8c6d-49ef-b73c-eb6d9f0cc60e",
 CellID->57462884],
Cell[CellGroupData[{
Cell[651970, 13810, 286, 4, 40, "MathCaption",ExpressionUUID->"d35bf0dd-1622-4595-8cac-90e4a33e78d5",
 CellID->694507399],
Cell[CellGroupData[{
Cell[652281, 13818, 505, 13, 25, "Input",ExpressionUUID->"085ee258-2ac5-49e7-a18d-e0cf197096a7",
 CellID->875714386],
Cell[652789, 13833, 598, 14, 24, "Output",ExpressionUUID->"f41ef0aa-cf80-43e1-b1c5-6ac0e0387392",
 CellID->242003258]
}, Open  ]],
Cell[653402, 13850, 261, 6, 26, "ExampleDelimiter",ExpressionUUID->"98045c18-9cea-4110-abe1-a11a8bbbd2af",
 CellID->112658320]
}, Open  ]],
Cell[CellGroupData[{
Cell[653700, 13861, 236, 3, 40, "MathCaption",ExpressionUUID->"a432d77e-46b6-43b7-abb9-43ce5604527e",
 CellID->327143208],
Cell[CellGroupData[{
Cell[653961, 13868, 576, 13, 25, "Input",ExpressionUUID->"b112bd39-babe-4936-8539-f902397204de",
 CellID->283656556],
Cell[654540, 13883, 973, 26, 24, "Output",ExpressionUUID->"03cb8aa8-0509-469c-b3dc-fb19d782ed30",
 CellID->121246890]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[655562, 13915, 233, 3, 40, "MathCaption",ExpressionUUID->"9faddb86-b75d-4ae8-9854-3d68d51f75dc",
 CellID->158433383],
Cell[CellGroupData[{
Cell[655820, 13922, 536, 14, 25, "Input",ExpressionUUID->"ad625bb7-7399-4152-80f4-cdc4ce40fee0",
 CellID->499374772],
Cell[656359, 13938, 461, 12, 24, "Output",ExpressionUUID->"bc35552c-0ff9-4de6-90de-cd88bf0f9a89",
 CellID->171051003]
}, Open  ]],
Cell[656835, 13953, 261, 6, 26, "ExampleDelimiter",ExpressionUUID->"02a227e0-6dd8-4bd9-963f-82064f5cb603",
 CellID->519906287]
}, Open  ]],
Cell[CellGroupData[{
Cell[657133, 13964, 270, 4, 40, "MathCaption",ExpressionUUID->"e3598301-1166-410a-8acd-19f923f8d0cc",
 CellID->858830434],
Cell[CellGroupData[{
Cell[657428, 13972, 603, 17, 25, "Input",ExpressionUUID->"8bb50304-9503-424c-8675-eac234fec677",
 CellID->634576773],
Cell[658034, 13991, 2422, 77, 77, "Output",ExpressionUUID->"5f87c149-ef5c-4e3d-b11b-8de196a62ca3",
 CellID->226659544]
}, Open  ]],
Cell[660471, 14071, 261, 6, 26, "ExampleDelimiter",ExpressionUUID->"34cb6a12-c051-4797-8ea3-545eeb95e1da",
 CellID->490055446]
}, Open  ]],
Cell[CellGroupData[{
Cell[660769, 14082, 339, 5, 40, "MathCaption",ExpressionUUID->"5f361163-3e09-42bd-b368-1da38d92e3a0",
 CellID->535860945],
Cell[CellGroupData[{
Cell[661133, 14091, 667, 16, 25, "Input",ExpressionUUID->"eb406a50-819f-47ab-8ad6-156a22481379",
 CellID->630622865],
Cell[661803, 14109, 3466, 110, 95, "Output",ExpressionUUID->"1516dbfe-5038-4c48-9864-b03bc0bf4b38",
 CellID->313507277]
}, Open  ]],
Cell[665284, 14222, 260, 6, 26, "ExampleDelimiter",ExpressionUUID->"1c382a7b-9364-4700-aa32-9671ff68958e",
 CellID->14107565]
}, Open  ]],
Cell[CellGroupData[{
Cell[665581, 14233, 335, 5, 40, "MathCaption",ExpressionUUID->"00956277-227d-41b0-b8b3-c42cd6548b37",
 CellID->792813693],
Cell[CellGroupData[{
Cell[665941, 14242, 545, 13, 25, "Input",ExpressionUUID->"657ed7e0-b3ad-4e5c-8632-31de0eeb8ee4",
 CellID->885845820],
Cell[666489, 14257, 783, 21, 24, "Output",ExpressionUUID->"beabcbb4-bdd5-409c-b32f-23dffa58535c",
 CellID->9609939]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[667321, 14284, 214, 3, 40, "MathCaption",ExpressionUUID->"9d14a032-1cb3-4d80-87ba-ec0d6376794d",
 CellID->221442697],
Cell[CellGroupData[{
Cell[667560, 14291, 497, 13, 25, "Input",ExpressionUUID->"84524238-7b20-425e-84bc-0484b11bda6c",
 CellID->874035320],
Cell[668060, 14306, 651, 17, 24, "Output",ExpressionUUID->"7bda93af-4630-4f03-8253-cd9a6eb4979b",
 CellID->272543979]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[668760, 14329, 1604, 46, 58, "MathCaption",ExpressionUUID->"80b39b9f-3ac9-44c7-a368-9c01c5bcb3a1",
 CellID->132229044],
Cell[CellGroupData[{
Cell[670389, 14379, 637, 16, 25, "Input",ExpressionUUID->"c8665ccb-92de-43bf-933b-3eb32df67b93",
 CellID->982577960],
Cell[671029, 14397, 411, 8, 24, "Output",ExpressionUUID->"2a3253c6-f3bb-4954-887f-6510889dcde5",
 CellID->70864155]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[671489, 14411, 351, 7, 40, "MathCaption",ExpressionUUID->"8f34e36b-c468-443d-ae6c-03f7552737cd",
 CellID->361259892],
Cell[CellGroupData[{
Cell[671865, 14422, 554, 15, 25, "Input",ExpressionUUID->"83a871b1-a5e9-4272-9d96-cba576914a37",
 CellID->823753171],
Cell[672422, 14439, 446, 8, 24, "Output",ExpressionUUID->"7491dbe4-e628-4a7c-8742-f49e91f85f3c",
 CellID->877496089]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[672917, 14453, 214, 3, 40, "MathCaption",ExpressionUUID->"82380b98-5d36-4ce7-b837-10d620ee71ab",
 CellID->324048877],
Cell[CellGroupData[{
Cell[673156, 14460, 260, 5, 25, "Input",ExpressionUUID->"1ceecf07-8a91-4135-8b39-78ed48552035",
 CellID->183907914],
Cell[673419, 14467, 293, 5, 24, "Output",ExpressionUUID->"55b6e787-f154-41be-8858-db2101298239",
 CellID->386927958]
}, Open  ]],
Cell[673727, 14475, 260, 6, 26, "ExampleDelimiter",ExpressionUUID->"194665b6-9bad-4da2-be1a-2cebdb7b7ae4",
 CellID->14107566]
}, Open  ]],
Cell[CellGroupData[{
Cell[674024, 14486, 1131, 30, 41, "MathCaption",ExpressionUUID->"7f52d5cf-95c4-449f-9f10-d831ec30cbd3",
 CellID->273207191],
Cell[CellGroupData[{
Cell[675180, 14520, 562, 13, 25, "Input",ExpressionUUID->"e6070dde-e791-46f7-888a-f855f4278204",
 CellID->1112728],
Cell[675745, 14535, 362, 6, 24, "Output",ExpressionUUID->"672e0de6-7ad7-4e17-828d-902e95869d9f",
 CellID->381398679]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[676156, 14547, 564, 12, 41, "MathCaption",ExpressionUUID->"555c3576-ad29-4208-8203-c50ea6f5d245",
 CellID->306503519],
Cell[CellGroupData[{
Cell[676745, 14563, 583, 13, 25, "Input",ExpressionUUID->"b096e59e-ff57-41e4-82db-973fc7915a7a",
 CellID->999001902],
Cell[677331, 14578, 655, 16, 24, "Output",ExpressionUUID->"fd816349-f302-4b6e-bcf9-da8aef78aee4",
 CellID->185246950]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[678035, 14600, 214, 3, 40, "MathCaption",ExpressionUUID->"eb3df44c-82f1-47e5-8470-e0d8346da39a",
 CellID->90617371],
Cell[CellGroupData[{
Cell[678274, 14607, 685, 17, 43, "Input",ExpressionUUID->"ec29e0f7-3977-4e72-9c74-7abbf30bd7f8",
 CellID->760328926],
Cell[678962, 14626, 967, 24, 24, "Output",ExpressionUUID->"45a448a2-1394-41ff-a842-950a3ef5d362",
 CellID->1214865]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[679978, 14656, 271, 4, 40, "MathCaption",ExpressionUUID->"2a5fb8af-3b25-4abe-9b79-25c80da31a83",
 CellID->809946818],
Cell[CellGroupData[{
Cell[680274, 14664, 410, 9, 25, "Input",ExpressionUUID->"c9a67940-8c8f-47db-b3fb-ef46a1054d0c",
 CellID->628177917],
Cell[680687, 14675, 18403, 366, 163, "Output",ExpressionUUID->"c03f1bd3-8a73-496c-a505-aa7eab72255a",
 CellID->552668493]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[699151, 15048, 180, 2, 45, "Section",ExpressionUUID->"cb2826a3-be44-4864-967d-6cfe95cef84e",
 CellID->289460114],
Cell[CellGroupData[{
Cell[699356, 15054, 229, 3, 40, "MathCaption",ExpressionUUID->"46595f70-1aa2-4f75-a735-8ac0a369266b",
 CellID->806991552],
Cell[CellGroupData[{
Cell[699610, 15061, 520, 10, 25, "Input",ExpressionUUID->"0ceca8dd-2329-4213-a039-750abf393f27",
 CellID->777243378],
Cell[700133, 15073, 2749, 85, 77, "Output",ExpressionUUID->"508bc9e3-4fb7-4046-91e3-9c1ce88c23e2",
 CellID->24878681]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[702931, 15164, 260, 4, 40, "MathCaption",ExpressionUUID->"14b50fe8-cbe1-433a-a932-3d6c7a387d9d",
 CellID->962257849],
Cell[CellGroupData[{
Cell[703216, 15172, 410, 10, 25, "Input",ExpressionUUID->"96d120b1-8fd8-4e51-9de2-364bb8d95f57",
 CellID->574613800],
Cell[703629, 15184, 658, 18, 24, "Output",ExpressionUUID->"15dc1200-c68e-4838-b087-3d71514fc082",
 CellID->22940605]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[704336, 15208, 336, 5, 40, "MathCaption",ExpressionUUID->"96f180d7-b267-46ae-a545-665121cb8aaf",
 CellID->817657987],
Cell[CellGroupData[{
Cell[704697, 15217, 493, 11, 25, "Input",ExpressionUUID->"e20a305b-6504-409b-93d1-27399e992ac1",
 CellID->88400611],
Cell[705193, 15230, 1767, 39, 42, "Output",ExpressionUUID->"085173c3-0f36-49d3-9204-f0a0dc461347",
 CellID->264187089]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[707009, 15275, 229, 3, 40, "MathCaption",ExpressionUUID->"ca05bbcc-ac52-4d4c-a311-b766c231f44f",
 CellID->834775918],
Cell[CellGroupData[{
Cell[707263, 15282, 518, 14, 25, "Input",ExpressionUUID->"06d46076-3e1e-42b7-91b3-157ef90d2fd9",
 CellID->283080979],
Cell[707784, 15298, 2942, 50, 249, "Output",ExpressionUUID->"30252242-88aa-4aa4-9b50-3594ee579d0e",
 CellID->104575]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[710775, 15354, 1597, 45, 58, "MathCaption",ExpressionUUID->"5022c6ce-4125-4a81-ba93-631a93cd03a6",
 CellID->405355337],
Cell[CellGroupData[{
Cell[712397, 15403, 475, 12, 25, "Input",ExpressionUUID->"155026ff-7b6c-4330-9930-1fc3bc6d336c",
 CellID->811262678],
Cell[712875, 15417, 286, 5, 24, "Output",ExpressionUUID->"4ae735af-e8fb-425a-98e9-82ebeadf0293",
 CellID->9194802]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[713210, 15428, 218, 3, 40, "MathCaption",ExpressionUUID->"abb2d6ae-f39a-4d32-bd66-8f6c13aa36c3",
 CellID->376441899],
Cell[CellGroupData[{
Cell[713453, 15435, 428, 12, 25, "Input",ExpressionUUID->"f872ea36-d88f-4d7a-ab8e-9d8431fb44e8",
 CellID->695357144],
Cell[713884, 15449, 295, 6, 24, "Output",ExpressionUUID->"f8e90af1-7239-46dc-990f-2cb92780f7ba",
 CellID->11269696]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[714228, 15461, 469, 11, 40, "MathCaption",ExpressionUUID->"82deaa7c-4bcc-45ef-8672-b79fb5edb96a",
 CellID->449563358],
Cell[CellGroupData[{
Cell[714722, 15476, 488, 13, 25, "Input",ExpressionUUID->"fe283606-6f86-481e-8d84-3f9ecdab1f90",
 CellID->168888283],
Cell[715213, 15491, 765, 22, 24, "Output",ExpressionUUID->"fdb97683-43b0-4121-a84d-8969373cddd1",
 CellID->83774134]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[716039, 15520, 176, 2, 45, "Section",ExpressionUUID->"5f70f9f5-4da6-49fb-9328-ec9669282558",
 CellID->404991189],
Cell[CellGroupData[{
Cell[716240, 15526, 183, 2, 42, "Subsection",ExpressionUUID->"573857fb-bcbe-4adc-ad35-6179b63825c3",
 CellID->179141702],
Cell[716426, 15530, 499, 12, 52, "MathCaption",ExpressionUUID->"963b398e-1bb9-435a-a6c4-3c2fb3a14fbf",
 CellID->14992587],
Cell[CellGroupData[{
Cell[716950, 15546, 260, 3, 40, "MathCaption",ExpressionUUID->"9e3281a5-11c5-463b-b3ed-b38727ee90e4",
 CellID->537854770],
Cell[CellGroupData[{
Cell[717235, 15553, 579, 15, 25, "Input",ExpressionUUID->"066599f8-a35d-452b-ae69-5503100c7113",
 CellID->400353117],
Cell[717817, 15570, 1039, 21, 178, "Output",ExpressionUUID->"6b0059cf-6836-47bb-a182-a09bddf39a43",
 CellID->283072746]
}, Open  ]]
}, Open  ]],
Cell[718883, 15595, 395, 6, 74, "MathCaption",ExpressionUUID->"8bd7f09b-00ea-42a2-93df-a713182a63d5",
 CellID->132269626],
Cell[CellGroupData[{
Cell[719303, 15605, 211, 2, 40, "MathCaption",ExpressionUUID->"5d00bc42-527e-4a6b-94ae-b06743a3e412",
 CellID->301311780],
Cell[719517, 15609, 624, 16, 43, "Input",ExpressionUUID->"6d70c1e7-73c3-4344-adf6-3575d6b66466",
 CellID->126412119],
Cell[CellGroupData[{
Cell[720166, 15629, 584, 15, 25, "Input",ExpressionUUID->"66f9de82-7fdd-4f88-8e07-c05373d809ac",
 CellID->510581302],
Cell[720753, 15646, 679, 16, 128, "Output",ExpressionUUID->"07ff3837-d775-4e34-add0-ed88535235b0",
 CellID->689144998]
}, Open  ]],
Cell[CellGroupData[{
Cell[721469, 15667, 264, 5, 25, "Input",ExpressionUUID->"e8591297-01bf-46a2-a254-e7786838902f",
 CellID->71339483],
Cell[721736, 15674, 173, 3, 24, "Output",ExpressionUUID->"03e90848-028f-40ab-acec-a3dc39c42825",
 CellID->78236725]
}, Open  ]],
Cell[CellGroupData[{
Cell[721946, 15682, 259, 5, 25, "Input",ExpressionUUID->"0e55c127-a9f6-4aa4-b446-5b6013bb9bd6",
 CellID->100290537],
Cell[722208, 15689, 172, 3, 24, "Output",ExpressionUUID->"0a0523d1-255f-47c6-a076-dcf6a32dc4be",
 CellID->228273421]
}, Open  ]],
Cell[CellGroupData[{
Cell[722417, 15697, 265, 5, 25, "Input",ExpressionUUID->"ed6021a2-2558-439a-8766-3d4c42098e7f",
 CellID->836940776],
Cell[722685, 15704, 10879, 246, 429, "Output",ExpressionUUID->"98a8bab2-6f8d-4f1a-b47f-c412f336ae0e",
 CellID->829730471]
}, Open  ]],
Cell[CellGroupData[{
Cell[733601, 15955, 462, 12, 25, "Input",ExpressionUUID->"e1a18118-a560-4f59-8283-9426829ac34b",
 CellID->3554992],
Cell[734066, 15969, 2515, 58, 112, "Output",ExpressionUUID->"ceba9e7d-5085-4a40-8187-73030fac171e",
 CellID->306806291]
}, Open  ]],
Cell[CellGroupData[{
Cell[736618, 16032, 503, 13, 25, "Input",ExpressionUUID->"fab3a327-2654-466d-a69c-fc6334212be9",
 CellID->116240924],
Cell[737124, 16047, 174, 3, 24, "Output",ExpressionUUID->"8fcf8f70-0b7f-417c-a887-39f8d8f2803f",
 CellID->725004005]
}, Open  ]],
Cell[CellGroupData[{
Cell[737335, 16055, 310, 6, 25, "Input",ExpressionUUID->"efc2d090-af6d-4b41-801a-386aeb9700cf",
 CellID->168645274],
Cell[737648, 16063, 172, 3, 24, "Output",ExpressionUUID->"551bdedb-9d85-4412-8ae6-9f27f9ec8427",
 CellID->8442855]
}, Open  ]]
}, Open  ]],
Cell[737847, 16070, 538, 13, 52, "MathCaption",ExpressionUUID->"a7a8420c-ca29-4335-b91c-7a723e91503b",
 CellID->50294008],
Cell[CellGroupData[{
Cell[738410, 16087, 298, 5, 40, "MathCaption",ExpressionUUID->"ad26a576-ad07-47dc-a4d9-ea9f26b337fb",
 CellID->426907475],
Cell[CellGroupData[{
Cell[738733, 16096, 595, 15, 25, "Input",ExpressionUUID->"8d8cfa44-1df7-4d53-8846-a448df3438f6",
 CellID->283987963],
Cell[739331, 16113, 983, 21, 161, "Output",ExpressionUUID->"b2c32cbc-6e93-478f-9f50-ec37c0355a24",
 CellID->74394165]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[740375, 16141, 189, 2, 42, "Subsection",ExpressionUUID->"586707b2-b597-400d-ac4d-146274f43bf8",
 CellID->958739859],
Cell[740567, 16145, 198, 2, 40, "MathCaption",ExpressionUUID->"364d5566-ead6-4f10-9117-d6651012242b",
 CellID->39057588],
Cell[740768, 16149, 613, 15, 57, "MathCaption",ExpressionUUID->"357249ae-4728-40e5-9930-ca5a845ee7ff",
 CellID->236283598],
Cell[741384, 16166, 205, 2, 40, "MathCaption",ExpressionUUID->"0d3eafc1-b44e-48eb-b6bd-657159a291a6",
 CellID->3969473],
Cell[741592, 16170, 576, 16, 40, "MathCaption",ExpressionUUID->"5b4ac876-5081-4000-aa06-951507956812",
 InitializationCell->True,
 CellID->442612299],
Cell[742171, 16188, 549, 15, 40, "MathCaption",ExpressionUUID->"5949baee-ebb8-4626-9f04-83776844aaa6",
 CellID->90642782],
Cell[742723, 16205, 261, 5, 40, "MathCaption",ExpressionUUID->"d2eed230-684c-4381-9e0d-8b3dd039feb3",
 CellID->112995886],
Cell[CellGroupData[{
Cell[743009, 16214, 555, 14, 57, "MathCaption",ExpressionUUID->"c454b495-5e56-40ea-b3ff-a34b7f14b98c",
 CellID->129906996],
Cell[CellGroupData[{
Cell[743589, 16232, 500, 13, 25, "Input",ExpressionUUID->"aaf71d3b-6337-4164-9259-9ff037a4e5ab",
 CellID->239135585],
Cell[744092, 16247, 83975, 1596, 617, "Output",ExpressionUUID->"69903780-cc20-4be5-a3c5-fbdfc291f6e8",
 CellID->375946613]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[828116, 17849, 209, 2, 40, "MathCaption",ExpressionUUID->"ffabd081-fa73-4a1c-8c3b-07a894f23675",
 CellID->248059269],
Cell[CellGroupData[{
Cell[828350, 17855, 513, 14, 42, "Input",ExpressionUUID->"f3f0fd0e-e851-425c-a4c1-6e309840f8c4",
 CellID->843803446],
Cell[828866, 17871, 935, 16, 165, "Output",ExpressionUUID->"01fe40e6-5c12-4b2f-88b0-8cc25e928a9c",
 CellID->122557646]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[829850, 17893, 738, 20, 58, "MathCaption",ExpressionUUID->"a4df2c28-0199-4e87-b494-3005ca93a38f",
 CellID->447100541],
Cell[830591, 17915, 512, 14, 56, "Input",ExpressionUUID->"49f8a47e-5fc8-4640-9fc0-4d60362cb493",
 CellID->79518550]
}, Open  ]],
Cell[831118, 17932, 212, 2, 40, "MathCaption",ExpressionUUID->"e794d416-e188-44cc-9cc3-e01743e33a32",
 CellID->113019311],
Cell[CellGroupData[{
Cell[831355, 17938, 440, 11, 40, "MathCaption",ExpressionUUID->"1d62e89e-a37b-4290-b4cf-7aa022b83105",
 CellID->327405570],
Cell[CellGroupData[{
Cell[831820, 17953, 380, 10, 25, "Input",ExpressionUUID->"e58ad85c-0c02-4958-9ae9-e868844107d1",
 CellID->314758953],
Cell[832203, 17965, 438, 12, 24, "Output",ExpressionUUID->"56f3123d-472f-4d1a-8e0b-58423005b93c",
 CellID->249993023]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[832690, 17983, 237, 4, 40, "MathCaption",ExpressionUUID->"ac8a99fe-786d-4d02-a4da-6bae8edf6252",
 CellID->517916511],
Cell[CellGroupData[{
Cell[832952, 17991, 262, 6, 25, "Input",ExpressionUUID->"903e0d4a-554c-4103-81c2-c44f518ec992",
 CellID->171428329],
Cell[833217, 17999, 193, 4, 24, "Output",ExpressionUUID->"5e1fdb6b-65be-4b66-9b87-443be2b45618",
 CellID->6785543]
}, Open  ]],
Cell[CellGroupData[{
Cell[833447, 18008, 419, 9, 25, "Input",ExpressionUUID->"511a88a3-38fb-41a0-aab6-ca407b1cc32a",
 CellID->311630952],
Cell[833869, 18019, 224, 4, 24, "Output",ExpressionUUID->"952c571e-def0-4041-91fd-ad95c7790211",
 CellID->338263666]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[834142, 18029, 264, 5, 40, "MathCaption",ExpressionUUID->"3c42651d-2512-488f-8fbd-dd9ef712869c",
 CellID->779487772],
Cell[CellGroupData[{
Cell[834431, 18038, 472, 12, 25, "Input",ExpressionUUID->"f25c67d7-a5ef-41f4-b3c7-b3e8be6a6867",
 CellID->655868708],
Cell[834906, 18052, 2448, 63, 95, "Output",ExpressionUUID->"ce74def9-8822-4323-8892-ec08a65a2f7f",
 CellID->741484463]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[837403, 18121, 216, 2, 40, "MathCaption",ExpressionUUID->"bfd0a063-18d3-46b3-83be-6911396d7629",
 CellID->143933992],
Cell[CellGroupData[{
Cell[837644, 18127, 636, 18, 43, "Input",ExpressionUUID->"a70a8572-942b-4827-8dad-3dbd68a564d6",
 CellID->82442157],
Cell[838283, 18147, 1236, 33, 42, "Output",ExpressionUUID->"07dec28a-8b04-4731-b7d3-4d8ba433c107",
 CellID->346860608]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[839568, 18186, 185, 2, 40, "MathCaption",ExpressionUUID->"d46bc443-381d-4c58-8096-0c7849bbd1d5",
 CellID->107438884],
Cell[CellGroupData[{
Cell[839778, 18192, 682, 19, 43, "Input",ExpressionUUID->"0375f1dd-6644-4f07-8cf4-8aa592f34bcb",
 CellID->179484555],
Cell[840463, 18213, 219, 5, 24, "Output",ExpressionUUID->"3dbc6645-7fbd-4951-948e-dd0bea35b41f",
 CellID->379778846]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[840731, 18224, 204, 2, 40, "MathCaption",ExpressionUUID->"7aec1c82-fdbd-404d-ab83-c995a2f90994",
 CellID->327991168],
Cell[CellGroupData[{
Cell[840960, 18230, 713, 20, 61, "Input",ExpressionUUID->"c243ba52-d182-4c7b-a953-1f2a662b61bf",
 CellID->757716190],
Cell[841676, 18252, 218, 5, 24, "Output",ExpressionUUID->"7affec09-19ee-4590-968d-62d8a9c39325",
 CellID->49954112]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[841943, 18263, 216, 2, 40, "MathCaption",ExpressionUUID->"8f971496-3750-4c41-be45-1e0f1a9fcd04",
 CellID->83317278],
Cell[CellGroupData[{
Cell[842184, 18269, 275, 5, 25, "Input",ExpressionUUID->"3f1658d7-5604-4e6d-8cdd-d36279cace9a",
 CellID->347618743],
Cell[842462, 18276, 219, 5, 24, "Output",ExpressionUUID->"036a396d-3507-45da-8816-6de47262632f",
 CellID->152525666]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[842730, 18287, 212, 2, 40, "MathCaption",ExpressionUUID->"b7926694-b593-4319-914f-3d15e66ced72",
 CellID->180959260],
Cell[CellGroupData[{
Cell[842967, 18293, 687, 20, 61, "Input",ExpressionUUID->"90eaa98d-e94e-4c37-a5d9-d0265d97eb88",
 CellID->330306634],
Cell[843657, 18315, 244, 5, 24, "Output",ExpressionUUID->"df0dc613-f6ce-477b-8d99-af5f732522d9",
 CellID->44465621]
}, Open  ]],
Cell[CellGroupData[{
Cell[843938, 18325, 249, 5, 25, "Input",ExpressionUUID->"d2b2c824-c4c4-4577-8245-73834ef8bbb6",
 CellID->8875213],
Cell[844190, 18332, 242, 5, 24, "Output",ExpressionUUID->"74c46790-ff26-4ec6-93fe-561c08907bd3",
 CellID->44432488]
}, Open  ]]
}, Open  ]],
Cell[844459, 18341, 202, 2, 40, "MathCaption",ExpressionUUID->"14c55720-174e-406a-ab38-df6a9eae910a",
 CellID->228334012],
Cell[CellGroupData[{
Cell[844686, 18347, 210, 2, 40, "MathCaption",ExpressionUUID->"8b245492-acff-4fbf-8976-bd37d5f3f108",
 CellID->583761365],
Cell[CellGroupData[{
Cell[844921, 18353, 822, 22, 78, "Input",ExpressionUUID->"d0bd1e06-b274-4a07-ae30-fed0aefda3d0",
 CellID->160529426],
Cell[845746, 18377, 901, 25, 21, "Echo",ExpressionUUID->"c57b210c-dcfd-4306-bc88-6a2fcafdd26f",
 CellID->767409760],
Cell[846650, 18404, 243, 5, 24, "Output",ExpressionUUID->"6c706746-284b-40d0-aad5-c0f1980512a1",
 CellID->279516212]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[846942, 18415, 298, 5, 40, "MathCaption",ExpressionUUID->"59a04592-2757-4dd2-94c9-2b425490739d",
 CellID->294337803],
Cell[CellGroupData[{
Cell[847265, 18424, 457, 12, 25, "Input",ExpressionUUID->"c13f11e4-a2b5-49cd-9831-93a80f4bfa5e",
 CellID->131315058],
Cell[847725, 18438, 1067, 27, 42, "Output",ExpressionUUID->"601a7f72-502d-42c0-9092-4efc36b23262",
 CellID->549480932]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[848841, 18471, 189, 2, 40, "MathCaption",ExpressionUUID->"d6816ba2-a0f1-4885-a3a0-4e70af6e634a",
 CellID->104618558],
Cell[CellGroupData[{
Cell[849055, 18477, 811, 22, 78, "Input",ExpressionUUID->"b9a4d87b-dd35-4a6b-afdd-eb62cbfd0642",
 CellID->278353137],
Cell[849869, 18501, 900, 25, 21, "Echo",ExpressionUUID->"c4e494b0-2dbe-4fe7-90d9-6b224cfc7d49",
 CellID->715813367],
Cell[850772, 18528, 297, 6, 24, "Output",ExpressionUUID->"1dccdd77-473b-4b4e-af72-42984d0b875d",
 CellID->178250625]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[851118, 18540, 210, 2, 40, "MathCaption",ExpressionUUID->"22fbdb83-6b6e-4996-b1e3-a50b23470d1f",
 CellID->70002204],
Cell[CellGroupData[{
Cell[851353, 18546, 848, 23, 78, "Input",ExpressionUUID->"b8f17aec-b28e-409b-9785-51ab324f936f",
 CellID->461525729],
Cell[852204, 18571, 899, 25, 21, "Echo",ExpressionUUID->"4cb281f2-5be1-48fa-a769-3bbb442a7085",
 CellID->662120071],
Cell[853106, 18598, 264, 5, 24, "Output",ExpressionUUID->"abfdab54-9e3a-4c73-a4e8-2668f1c9209d",
 CellID->269153066]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[853419, 18609, 188, 2, 40, "MathCaption",ExpressionUUID->"c8cbe7df-af44-4e44-b1e6-9cceed0dd45b",
 CellID->126026160],
Cell[CellGroupData[{
Cell[853632, 18615, 354, 8, 53, "Input",ExpressionUUID->"6cc49719-320e-4d05-aa66-046611d445e1",
 CellID->344252507],
Cell[853989, 18625, 202, 4, 40, "Output",ExpressionUUID->"d33f1178-5480-4a6f-b9c4-1b82e84f6510",
 CellID->159789048]
}, Open  ]],
Cell[CellGroupData[{
Cell[854228, 18634, 387, 9, 53, "Input",ExpressionUUID->"059425f5-da0f-4efb-84cd-77923e6861eb",
 CellID->24082651],
Cell[854618, 18645, 191, 3, 24, "Output",ExpressionUUID->"a3b270e3-1ca1-4f9a-bc62-97ad53ef489d",
 CellID->494659481]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[854858, 18654, 277, 4, 40, "MathCaption",ExpressionUUID->"7123c87c-4e9b-4e12-bed9-032b3f2e10ce",
 CellID->69975013],
Cell[CellGroupData[{
Cell[855160, 18662, 627, 16, 25, "Input",ExpressionUUID->"ab6f2f65-b49d-4f4c-bc00-2ff3e765726b",
 CellID->447664363],
Cell[855790, 18680, 1664, 30, 244, "Output",ExpressionUUID->"4326caa7-78a6-44a6-9238-399167a1a193",
 CellID->405832833]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[857503, 18716, 216, 2, 40, "MathCaption",ExpressionUUID->"5fbdf2f5-ff70-4feb-b59e-4905136d52ec",
 CellID->629424924],
Cell[CellGroupData[{
Cell[857744, 18722, 675, 16, 25, "Input",ExpressionUUID->"4ecf9c5b-624c-447f-8c19-5155cb263b78",
 CellID->282716016],
Cell[858422, 18740, 1433, 43, 161, "Output",ExpressionUUID->"6f67f530-af92-4fa9-867a-d8eb35cbcfb3",
 CellID->18739418]
}, Open  ]],
Cell[CellGroupData[{
Cell[859892, 18788, 674, 16, 25, "Input",ExpressionUUID->"35178df8-40ec-4ccd-9b48-30af464681a3",
 CellID->28645306],
Cell[860569, 18806, 891, 19, 161, "Output",ExpressionUUID->"672b57aa-163c-456b-9035-4443af827f1a",
 CellID->120305284]
}, Open  ]]
}, Open  ]],
Cell[861487, 18829, 240, 4, 40, "MathCaption",ExpressionUUID->"eeb33d11-1170-4e9e-9b51-4ce5492a9167",
 CellID->688126866],
Cell[861730, 18835, 492, 12, 40, "MathCaption",ExpressionUUID->"384e8684-0a99-4c38-b2e3-9505602bc589",
 CellID->462783584],
Cell[CellGroupData[{
Cell[862247, 18851, 209, 2, 40, "MathCaption",ExpressionUUID->"6c79f1df-7d85-45be-907e-4340e0c0df3e",
 CellID->161103956],
Cell[CellGroupData[{
Cell[862481, 18857, 297, 5, 25, "Input",ExpressionUUID->"2698a9a6-52ce-4a1e-ab71-d08f5ff1188a",
 CellID->630387027],
Cell[862781, 18864, 1031, 27, 34, "Output",ExpressionUUID->"38465ee3-7943-447d-9f99-7473bdc04ba8",
 CellID->401184551]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[863861, 18897, 414, 10, 40, "MathCaption",ExpressionUUID->"12b4d93f-9218-4cf8-acf0-37e019cdd78c",
 CellID->478852567],
Cell[CellGroupData[{
Cell[864300, 18911, 350, 8, 25, "Input",ExpressionUUID->"03b4c96f-e29c-4b16-8b2c-b1469097a3fc",
 CellID->2173387],
Cell[864653, 18921, 640, 11, 60, "Output",ExpressionUUID->"0fa62489-7731-4ed6-b7af-34c6ccbc212b",
 CellID->59007347]
}, Open  ]],
Cell[CellGroupData[{
Cell[865330, 18937, 419, 10, 25, "Input",ExpressionUUID->"29f6e7f2-8584-47a7-9e8c-b22f30b700a8",
 CellID->48490791],
Cell[865752, 18949, 348, 8, 24, "Output",ExpressionUUID->"96b12a47-351d-4267-acda-6c2efee748ef",
 CellID->249968189]
}, Open  ]],
Cell[CellGroupData[{
Cell[866137, 18962, 454, 11, 25, "Input",ExpressionUUID->"6862f901-2190-4ed8-8a71-d9bc4336d766",
 CellID->144665321],
Cell[866594, 18975, 179, 3, 24, "Output",ExpressionUUID->"b9dc6cc4-9753-4bc6-b22c-459e3e79dae4",
 CellID->495057432]
}, Open  ]]
}, Open  ]],
Cell[866800, 18982, 183, 2, 40, "MathCaption",ExpressionUUID->"eb527550-d0b1-4ead-87d1-33d4224801da",
 CellID->66692240],
Cell[CellGroupData[{
Cell[867008, 18988, 491, 12, 40, "MathCaption",ExpressionUUID->"91ccb177-e294-4e3e-8bce-b5399a6f8459",
 CellID->308194261],
Cell[CellGroupData[{
Cell[867524, 19004, 288, 6, 25, "Input",ExpressionUUID->"fe555130-ae1d-497d-a9c7-a8e28aca2b4d",
 CellID->88352769],
Cell[867815, 19012, 225, 5, 24, "Output",ExpressionUUID->"5791d5b5-2f51-4f0d-91b2-acb2f87f85c6",
 CellID->253919081]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[868089, 19023, 191, 2, 40, "MathCaption",ExpressionUUID->"94a79e8f-7210-4770-b555-3329e9e5160f",
 CellID->402833805],
Cell[CellGroupData[{
Cell[868305, 19029, 293, 6, 25, "Input",ExpressionUUID->"13db1630-db0c-428c-8e1f-0579c81dbed8",
 CellID->133361772],
Cell[868601, 19037, 222, 5, 24, "Output",ExpressionUUID->"f890be8d-4f48-48d3-917b-c2ad4edbb9d6",
 CellID->98606068]
}, Open  ]],
Cell[CellGroupData[{
Cell[868860, 19047, 300, 6, 25, "Input",ExpressionUUID->"c9f893e7-633e-40ce-b587-9c88dee34d52",
 CellID->282609746],
Cell[869163, 19055, 233, 5, 24, "Output",ExpressionUUID->"181cdf29-224c-4161-9cd7-cccf866ddeec",
 CellID->184445757]
}, Open  ]],
Cell[CellGroupData[{
Cell[869433, 19065, 301, 6, 25, "Input",ExpressionUUID->"8ac73c1a-67a7-45b7-95dc-fa9afbae2cfd",
 CellID->170282164],
Cell[869737, 19073, 233, 5, 24, "Output",ExpressionUUID->"029a86c4-9bcf-4057-9bcc-f1ae62368821",
 CellID->586261813]
}, Open  ]]
}, Open  ]],
Cell[869997, 19082, 300, 5, 57, "MathCaption",ExpressionUUID->"ad5e03ab-df7b-4f39-8404-cdb6e362a2b2",
 CellID->406463550],
Cell[CellGroupData[{
Cell[870322, 19091, 282, 4, 40, "MathCaption",ExpressionUUID->"ffa8003b-ae45-437e-bf1f-faadda5a368d",
 CellID->300631353],
Cell[870607, 19097, 495, 12, 25, "Input",ExpressionUUID->"f529a12c-8feb-46c2-bf55-cd504346a8be",
 CellID->518707108]
}, Open  ]],
Cell[CellGroupData[{
Cell[871139, 19114, 1249, 31, 40, "MathCaption",ExpressionUUID->"65a00e1b-4fbf-4f11-926c-6c56a0f393f4",
 CellID->8375492],
Cell[CellGroupData[{
Cell[872413, 19149, 413, 7, 25, "Input",ExpressionUUID->"abafbe6d-f6ac-4d3c-a38d-679d484028c9",
 CellID->835168205],
Cell[872829, 19158, 568, 11, 24, "Output",ExpressionUUID->"4e01406f-f771-4ff0-8351-4d4ec25a5c08",
 CellID->111339732]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[873446, 19175, 261, 4, 40, "MathCaption",ExpressionUUID->"16ef4b47-c6ce-4046-ad97-7454b588886a",
 CellID->258727906],
Cell[CellGroupData[{
Cell[873732, 19183, 410, 10, 25, "Input",ExpressionUUID->"4dfc7ff5-a1fa-4b42-b565-b9a929f63b5e",
 CellID->97985540],
Cell[874145, 19195, 350, 7, 24, "Output",ExpressionUUID->"0d28a3f0-44b1-4d44-869a-a99bc68fb360",
 CellID->107056388]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[874544, 19208, 202, 2, 40, "MathCaption",ExpressionUUID->"41bf1235-6ba5-4d2c-a072-76370d919c35",
 CellID->892397338],
Cell[CellGroupData[{
Cell[874771, 19214, 288, 5, 25, "Input",ExpressionUUID->"a1914b3d-e223-49b2-889c-50ae51c7a608",
 CellID->70290140],
Cell[875062, 19221, 237, 5, 24, "Output",ExpressionUUID->"96273587-0da3-498d-9480-8b15bc4a399b",
 CellID->100322807]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[875348, 19232, 265, 3, 40, "MathCaption",ExpressionUUID->"2ecbccee-516a-486b-8433-3ee1294016cf",
 CellID->819912601],
Cell[CellGroupData[{
Cell[875638, 19239, 475, 12, 25, "Input",ExpressionUUID->"310e5b99-5e98-409f-af17-a1809b5dc2b7",
 CellID->375659687],
Cell[876116, 19253, 802, 21, 42, "Output",ExpressionUUID->"2b20873a-ad2c-44b1-95e7-81bedc1c3ad0",
 CellID->223206235]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[876967, 19280, 191, 2, 40, "MathCaption",ExpressionUUID->"fec99baa-a9c0-453e-bfc0-fb08ec02b252",
 CellID->652840542],
Cell[CellGroupData[{
Cell[877183, 19286, 524, 14, 25, "Input",ExpressionUUID->"c1511a11-39a2-486c-9fcd-c34ff51dbd6b",
 CellID->115721087],
Cell[877710, 19302, 679, 16, 128, "Output",ExpressionUUID->"8f11e2ae-c003-4ad1-bd50-188fcf20fdb2",
 CellID->424564025]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[878438, 19324, 182, 2, 40, "MathCaption",ExpressionUUID->"452df1f8-38da-4540-9535-364d1404299e",
 CellID->395670977],
Cell[CellGroupData[{
Cell[878645, 19330, 233, 4, 25, "Input",ExpressionUUID->"0856a9a0-8f0f-446f-8c13-bc2c7a2425d7",
 CellID->566799357],
Cell[878881, 19336, 195, 3, 24, "Output",ExpressionUUID->"be4919eb-9797-4eaf-831d-427bae0f0d99",
 CellID->63581800]
}, Open  ]]
}, Open  ]],
Cell[879103, 19343, 1968, 55, 92, "MathCaption",ExpressionUUID->"e8594239-0842-4d01-9de2-d3c265f967e4",
 CellID->255766314],
Cell[CellGroupData[{
Cell[881096, 19402, 540, 12, 57, "MathCaption",ExpressionUUID->"b90014a2-14da-45c1-8bfc-a073c0c96a49",
 CellID->561182461],
Cell[CellGroupData[{
Cell[881661, 19418, 429, 10, 25, "Input",ExpressionUUID->"e39f510a-5778-4ede-a975-14860319b21b",
 CellID->178093661],
Cell[882093, 19430, 159, 2, 23, "EchoTiming",ExpressionUUID->"e6e75721-d0ad-4fd5-825c-e6ac2bbe4bd6",
 CellID->11277768],
Cell[882255, 19434, 205, 3, 24, "Output",ExpressionUUID->"2b4fbdb5-e280-4438-95b5-0ee6ad0aed4f",
 CellID->135146785]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[882509, 19443, 472, 10, 40, "MathCaption",ExpressionUUID->"11a956f8-1102-4084-a828-247fa8361fca",
 CellID->102959412],
Cell[CellGroupData[{
Cell[883006, 19457, 484, 11, 29, "Input",ExpressionUUID->"99eddf63-14a0-4261-92eb-c0bc0f02f3b2",
 CellID->65194424],
Cell[883493, 19470, 159, 2, 23, "EchoTiming",ExpressionUUID->"cdf13766-e4ce-4883-acf1-90b6b2b02375",
 CellID->593897543],
Cell[883655, 19474, 995, 17, 109, "Output",ExpressionUUID->"5061c2f8-83be-4483-97b1-a96485e6ab08",
 CellID->74761761]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[884699, 19497, 202, 2, 40, "MathCaption",ExpressionUUID->"8cfecd30-4615-40c6-a8f4-0e8ed296f892",
 CellID->298809539],
Cell[CellGroupData[{
Cell[884926, 19503, 254, 5, 25, "Input",ExpressionUUID->"237f3dcf-a337-4ba7-8888-21bc94d4719f",
 CellID->7216617],
Cell[885183, 19510, 180, 3, 24, "Output",ExpressionUUID->"80b0c5f7-2753-42d9-b41c-785301897916",
 CellID->150133947]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[885412, 19519, 191, 2, 40, "MathCaption",ExpressionUUID->"9178fa02-627a-4d70-b442-5bce9e4fa569",
 CellID->6621231],
Cell[CellGroupData[{
Cell[885628, 19525, 231, 4, 25, "Input",ExpressionUUID->"3deba83f-bd41-4cfb-8843-8c9e80d8b854",
 CellID->238009890],
Cell[885862, 19531, 175, 3, 24, "Output",ExpressionUUID->"dd0d9739-5eb9-4820-8f82-43181de2b578",
 CellID->441155702]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[886086, 19540, 192, 2, 40, "MathCaption",ExpressionUUID->"b2e113be-e729-4813-9abb-34432e3fb5ca",
 CellID->784853736],
Cell[CellGroupData[{
Cell[886303, 19546, 229, 4, 25, "Input",ExpressionUUID->"20fa1ab2-96c8-4806-97c9-200b25b29850",
 CellID->610437364],
Cell[886535, 19552, 188, 3, 24, "Output",ExpressionUUID->"69688976-d005-46f5-8303-30e59067b819",
 CellID->38186909]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[886772, 19561, 588, 15, 41, "MathCaption",ExpressionUUID->"7f188b03-c8e0-4693-bd52-737d02e32596",
 CellID->393571408],
Cell[CellGroupData[{
Cell[887385, 19580, 290, 6, 25, "Input",ExpressionUUID->"55b8abb1-b471-497a-beea-cc11be16d1bb",
 CellID->878786336],
Cell[887678, 19588, 221, 4, 24, "Output",ExpressionUUID->"d63b1508-9ef5-4b9a-97fe-540ede387b14",
 CellID->369524703]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[887948, 19598, 278, 4, 40, "MathCaption",ExpressionUUID->"a1d4e0a3-4fd2-457f-9bff-e01f62f59045",
 CellID->394823239],
Cell[CellGroupData[{
Cell[888251, 19606, 274, 6, 25, "Input",ExpressionUUID->"0308cc42-4347-43bf-a51c-9a5d9b070e8c",
 CellID->627889596],
Cell[888528, 19614, 402, 9, 24, "Output",ExpressionUUID->"4c4c6a8d-d0a6-4875-828b-df37c519088f",
 CellID->95453950]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[888979, 19629, 145, 2, 40, "MathCaption",ExpressionUUID->"a1c43117-792f-47da-bdf5-291136f787e2",
 CellID->731096908],
Cell[CellGroupData[{
Cell[889149, 19635, 604, 16, 25, "Input",ExpressionUUID->"2fbe5a52-7c79-4b71-86d0-d2347e354d0c",
 CellID->219626058],
Cell[889756, 19653, 194, 4, 24, "Output",ExpressionUUID->"05a793eb-789e-42bb-8ad0-be5c7dd60758",
 CellID->169546956]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[889999, 19663, 674, 17, 44, "MathCaption",ExpressionUUID->"6342e889-ff23-431d-b058-242a097e56fa",
 CellID->575191782],
Cell[CellGroupData[{
Cell[890698, 19684, 537, 14, 25, "Input",ExpressionUUID->"4ab2d6cd-040d-497f-b214-611b7e5ecd79",
 CellID->154121207],
Cell[891238, 19700, 194, 4, 24, "Output",ExpressionUUID->"62304be8-13a8-44c0-9f42-429513b59385",
 CellID->179973804]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[891481, 19710, 347, 10, 40, "MathCaption",ExpressionUUID->"3ab3501f-b3c3-4015-9a6b-727a69539672",
 CellID->812166021],
Cell[CellGroupData[{
Cell[891853, 19724, 392, 10, 25, "Input",ExpressionUUID->"84ac4f50-dbb4-41fc-8d2c-93dd72989dee",
 CellID->624985202],
Cell[892248, 19736, 238, 6, 25, "Output",ExpressionUUID->"1682fdb5-f8a0-4940-9e02-6e07479a2685",
 CellID->51179190]
}, Open  ]],
Cell[CellGroupData[{
Cell[892523, 19747, 251, 5, 25, "Input",ExpressionUUID->"6b99a0e4-a601-4c43-a31a-6b3f5d5a970b",
 CellID->368150137],
Cell[892777, 19754, 238, 6, 25, "Output",ExpressionUUID->"67897d8c-7744-4596-80a5-6d58a183515b",
 CellID->288813044]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[893064, 19766, 294, 5, 40, "MathCaption",ExpressionUUID->"86f7aec4-3c3b-4969-a5b7-b9c9181e09f4",
 CellID->230671479],
Cell[CellGroupData[{
Cell[893383, 19775, 787, 19, 43, "Input",ExpressionUUID->"5444c1a6-1613-4243-85fc-e683fae0f53a",
 CellID->968332860],
Cell[894173, 19796, 10281, 174, 155, "Output",ExpressionUUID->"2f92316c-02bd-4d31-ade7-04ae66a77eca",
 CellID->548382202]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[904503, 19976, 361, 9, 40, "MathCaption",ExpressionUUID->"ec326ff9-1ec0-4556-bd54-825648a643d0",
 CellID->201723607],
Cell[CellGroupData[{
Cell[904889, 19989, 1540, 41, 42, "Input",ExpressionUUID->"0be0422e-8e4d-4f16-9c4c-deb2b1c1e5a3",
 CellID->746283470],
Cell[906432, 20032, 32572, 629, 164, "Output",ExpressionUUID->"e1373eb8-1583-40b1-b68e-010d25160935",
 CellID->405154369]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[939053, 20667, 198, 2, 40, "MathCaption",ExpressionUUID->"d763c5c3-32fc-4360-a086-879460dae990",
 CellID->142308320],
Cell[CellGroupData[{
Cell[939276, 20673, 222, 4, 25, "Input",ExpressionUUID->"6e0ece63-6a17-428f-92a9-1b21aad3d590",
 CellID->317076608],
Cell[939501, 20679, 16732, 399, 86, "Output",ExpressionUUID->"1e8f7b52-99a9-4b53-a468-dddb95e0b2d2",
 CellID->38873197]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[956282, 21084, 419, 11, 40, "MathCaption",ExpressionUUID->"bd54cf11-be91-45e1-a12a-cc9f126b123d",
 CellID->199205649],
Cell[CellGroupData[{
Cell[956726, 21099, 390, 9, 25, "Input",ExpressionUUID->"2dc714d6-fe2a-4eae-824f-54b76bc9e92d",
 CellID->444434879],
Cell[957119, 21110, 159, 2, 23, "EchoTiming",ExpressionUUID->"45d064d5-a2a0-4a5b-a61d-26dc916ee879",
 CellID->24383746],
Cell[957281, 21114, 542, 10, 42, "Output",ExpressionUUID->"d67007a7-b388-4016-b39f-b5aaa9f1df6b",
 CellID->280470809]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[957872, 21130, 244, 3, 40, "MathCaption",ExpressionUUID->"feed23a4-79a8-4ec8-8c32-7ba84c6863ae",
 CellID->48779360],
Cell[CellGroupData[{
Cell[958141, 21137, 366, 9, 25, "Input",ExpressionUUID->"6afbf48f-fe18-49e5-8751-08136abc3bb2",
 CellID->59766089],
Cell[958510, 21148, 480, 9, 42, "Output",ExpressionUUID->"7283dd31-97b2-49cc-9097-693b24fdad3d",
 CellID->6049817]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[959039, 21163, 187, 2, 40, "MathCaption",ExpressionUUID->"cf6bb608-f6f0-4505-a475-fec981e98981",
 CellID->234878772],
Cell[CellGroupData[{
Cell[959251, 21169, 413, 9, 25, "Input",ExpressionUUID->"e1fde8fa-c5b4-4a5a-9d78-57bb94ecd196",
 CellID->148202768],
Cell[959667, 21180, 158, 2, 23, "EchoTiming",ExpressionUUID->"2cc580e5-7229-429b-8f51-84e5f88953a7",
 CellID->510846472],
Cell[959828, 21184, 216, 5, 24, "Output",ExpressionUUID->"bba3ca55-8282-434b-a7a0-aadd87c2e61a",
 CellID->23869527]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[960093, 21195, 194, 2, 40, "MathCaption",ExpressionUUID->"664a15f1-c4c3-4ef6-8497-2bee41607e8b",
 CellID->10558311],
Cell[CellGroupData[{
Cell[960312, 21201, 700, 18, 43, "Input",ExpressionUUID->"d2db13ad-d747-4304-9403-8814065631f5",
 CellID->58237670],
Cell[961015, 21221, 159, 2, 23, "EchoTiming",ExpressionUUID->"bdb74d8b-ec2f-420b-b60f-3d8e01a5d8dd",
 CellID->74044636],
Cell[961177, 21225, 315, 7, 24, "Output",ExpressionUUID->"0102b35c-395b-4067-afeb-90aecb6dbb26",
 CellID->51587048]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[961541, 21238, 202, 2, 40, "MathCaption",ExpressionUUID->"269b00b6-4e18-462e-a94f-59a641212329",
 CellID->74692364],
Cell[CellGroupData[{
Cell[961768, 21244, 372, 8, 25, "Input",ExpressionUUID->"5f814beb-5f3a-4948-b9e8-004736c7fad7",
 CellID->436274302],
Cell[962143, 21254, 250, 6, 24, "Output",ExpressionUUID->"d74d7489-7613-4e1c-927d-e2d3faf1dfae",
 CellID->581705438]
}, Open  ]],
Cell[962408, 21263, 242, 5, 26, "ExampleDelimiter",ExpressionUUID->"dcc9c0bc-4f95-446c-b76b-6d0ed92c7aa8",
 CellID->376301338]
}, Open  ]],
Cell[CellGroupData[{
Cell[962687, 21273, 423, 11, 40, "MathCaption",ExpressionUUID->"e5e50464-c62c-43a2-8457-6082865e7519",
 CellID->228255672],
Cell[CellGroupData[{
Cell[963135, 21288, 387, 9, 25, "Input",ExpressionUUID->"3d5b7ff7-817d-4093-aab3-df91b5018f49",
 CellID->72949216],
Cell[963525, 21299, 158, 2, 23, "EchoTiming",ExpressionUUID->"7a012a89-1276-478e-bda6-75d9dd0a8930",
 CellID->196950653],
Cell[963686, 21303, 494, 9, 42, "Output",ExpressionUUID->"fad2aab7-a387-40bb-a167-10cfe61ee7f0",
 CellID->157710615]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[964229, 21318, 187, 2, 40, "MathCaption",ExpressionUUID->"0d19e735-ca80-4015-970c-017bc26d1508",
 CellID->63779103],
Cell[CellGroupData[{
Cell[964441, 21324, 370, 8, 25, "Input",ExpressionUUID->"380cf6d7-a1d7-4a95-8604-7c25f7dbad7b",
 CellID->559477600],
Cell[964814, 21334, 437, 13, 39, "Output",ExpressionUUID->"e832e323-9237-4e32-95ec-a22e65a20038",
 CellID->854014107]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[965300, 21353, 185, 2, 40, "MathCaption",ExpressionUUID->"b41c1a1c-3759-41af-b72d-95931d08d3d4",
 CellID->297234162],
Cell[CellGroupData[{
Cell[965510, 21359, 435, 10, 25, "Input",ExpressionUUID->"6a3bd978-b472-4b86-90f9-ec108c5977cb",
 CellID->384199976],
Cell[965948, 21371, 471, 9, 42, "Output",ExpressionUUID->"0413abcf-7127-400d-b8a1-7571fe700f22",
 CellID->60351254]
}, Open  ]],
Cell[966434, 21383, 241, 5, 26, "ExampleDelimiter",ExpressionUUID->"9d24c3f4-b6a8-4cc1-b28a-4a95af50619b",
 CellID->64234199]
}, Open  ]],
Cell[CellGroupData[{
Cell[966712, 21393, 399, 10, 40, "MathCaption",ExpressionUUID->"aa1b0702-3741-4180-a99b-8b6a35aff39a",
 CellID->71222372],
Cell[CellGroupData[{
Cell[967136, 21407, 368, 9, 25, "Input",ExpressionUUID->"19d28af1-c8a9-4370-9da1-b2a4f93c5e27",
 CellID->612463501],
Cell[967507, 21418, 158, 2, 23, "EchoTiming",ExpressionUUID->"a551050f-79ac-4811-8d04-25f86d469d3d",
 CellID->339196886],
Cell[967668, 21422, 502, 9, 42, "Output",ExpressionUUID->"a1d80b2f-b77e-4f4f-af41-0130ee470973",
 CellID->244982401]
}, Open  ]],
Cell[968185, 21434, 242, 5, 26, "ExampleDelimiter",ExpressionUUID->"f466c188-d27b-4c36-873d-9f43c6d89744",
 CellID->795616469]
}, Open  ]],
Cell[CellGroupData[{
Cell[968464, 21444, 428, 10, 40, "MathCaption",ExpressionUUID->"29c169bd-1468-424c-b31d-b46724656bfe",
 CellID->29412029],
Cell[CellGroupData[{
Cell[968917, 21458, 370, 9, 25, "Input",ExpressionUUID->"d505f02b-eff4-4a07-b910-516d5096b73d",
 CellID->13291710],
Cell[969290, 21469, 157, 2, 23, "EchoTiming",ExpressionUUID->"7b033bf5-f834-4f82-9817-c8462c88fbb4",
 CellID->61324748],
Cell[969450, 21473, 601, 11, 60, "Output",ExpressionUUID->"41d265d9-5969-44cf-868a-1a13caada2f7",
 CellID->60671734]
}, Open  ]],
Cell[970066, 21487, 242, 5, 26, "ExampleDelimiter",ExpressionUUID->"b417dd61-3c0f-41a8-ae64-8a888c8c8314",
 CellID->179371755]
}, Open  ]],
Cell[CellGroupData[{
Cell[970345, 21497, 422, 11, 40, "MathCaption",ExpressionUUID->"bfbef334-810b-446a-a423-bb34f7643885",
 CellID->68513831],
Cell[CellGroupData[{
Cell[970792, 21512, 355, 8, 25, "Input",ExpressionUUID->"ea907848-9793-41a2-a49a-ca43fd9ce092",
 CellID->691053818],
Cell[971150, 21522, 837, 25, 28, "Output",ExpressionUUID->"39028eca-282e-4f41-a0e4-a2e9bfba3b64",
 CellID->116155483]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[972036, 21553, 193, 2, 40, "MathCaption",ExpressionUUID->"28814331-4c55-42c6-a206-3d50921d955a",
 CellID->295365794],
Cell[CellGroupData[{
Cell[972254, 21559, 516, 13, 25, "Input",ExpressionUUID->"07e55695-539a-4345-9ca9-7832260d8604",
 CellID->549686470],
Cell[972773, 21574, 173, 3, 24, "Output",ExpressionUUID->"f4a2e63f-66a8-497a-961b-d8f09739ee81",
 CellID->471038115]
}, Open  ]],
Cell[972961, 21580, 242, 5, 26, "ExampleDelimiter",ExpressionUUID->"8decf2dd-2523-4ddc-9c18-d6e287e5e164",
 CellID->439332369]
}, Open  ]],
Cell[CellGroupData[{
Cell[973240, 21590, 441, 11, 40, "MathCaption",ExpressionUUID->"a32b990c-c07f-49be-aa92-f5e866eefe15",
 CellID->142865217],
Cell[CellGroupData[{
Cell[973706, 21605, 355, 8, 25, "Input",ExpressionUUID->"2e760ef4-cfb4-45e5-911a-1849f74e4466",
 CellID->819507155],
Cell[974064, 21615, 1035, 34, 28, "Output",ExpressionUUID->"f4e8b006-02cb-4920-bfba-9956991bddd1",
 CellID->451625855]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[975148, 21655, 187, 2, 40, "MathCaption",ExpressionUUID->"f9e3e5e6-e393-40ac-9674-2099d96bb635",
 CellID->38534065],
Cell[CellGroupData[{
Cell[975360, 21661, 684, 19, 43, "Input",ExpressionUUID->"328b6803-1dc9-4134-9957-4869a47a9311",
 CellID->391099469],
Cell[976047, 21682, 174, 3, 24, "Output",ExpressionUUID->"0f0d7b57-ba19-43c8-8809-f7067e15c92b",
 CellID->22022784]
}, Open  ]],
Cell[976236, 21688, 241, 5, 26, "ExampleDelimiter",ExpressionUUID->"95f8daed-a49b-4f22-b921-b75d2ccd707b",
 CellID->86887181]
}, Open  ]],
Cell[CellGroupData[{
Cell[976514, 21698, 426, 11, 40, "MathCaption",ExpressionUUID->"5e33fcef-075f-45bc-84f6-3666a8beacd2",
 CellID->119722245],
Cell[CellGroupData[{
Cell[976965, 21713, 385, 9, 25, "Input",ExpressionUUID->"064f4f8e-bc53-4b5b-82f2-8ad3eac1fa2f",
 CellID->681843340],
Cell[977353, 21724, 1213, 33, 48, "Output",ExpressionUUID->"9298094e-5502-4d55-90c0-d345105f1a11",
 CellID->567660469]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[978615, 21763, 194, 2, 40, "MathCaption",ExpressionUUID->"e9aebbee-2239-49ca-9d0d-72b8d0904fa2",
 CellID->69391295],
Cell[CellGroupData[{
Cell[978834, 21769, 322, 7, 25, "Input",ExpressionUUID->"d3a0983c-5a34-413b-aee9-2b430463fa5a",
 CellID->139948453],
Cell[979159, 21778, 479, 9, 42, "Output",ExpressionUUID->"fdb9aaa3-43c5-47cd-a5fe-3e588605645a",
 CellID->46523418]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[979687, 21793, 199, 2, 40, "MathCaption",ExpressionUUID->"ff4fe360-4e60-4c52-ae99-b034e699df7c",
 CellID->173598441],
Cell[CellGroupData[{
Cell[979911, 21799, 417, 10, 25, "Input",ExpressionUUID->"483fcd16-57f2-49e0-96fe-d519d96d31d6",
 CellID->298773496],
Cell[980331, 21811, 173, 3, 24, "Output",ExpressionUUID->"339c346b-8558-4de6-acf7-f6a5528d1af1",
 CellID->135097200]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[980553, 21820, 441, 11, 40, "MathCaption",ExpressionUUID->"374aefa0-d808-4a50-b86c-5282cef5120c",
 CellID->6568824],
Cell[CellGroupData[{
Cell[981019, 21835, 320, 7, 25, "Input",ExpressionUUID->"16fdb760-7897-4e36-ba9f-88f01b25405f",
 CellID->354624742],
Cell[981342, 21844, 503, 10, 42, "Output",ExpressionUUID->"3d7ad857-8454-4495-af41-4bd13557883a",
 CellID->229632868]
}, Open  ]],
Cell[981860, 21857, 242, 5, 26, "ExampleDelimiter",ExpressionUUID->"f809678f-34f8-442c-8449-544264cd6c6b",
 CellID->225973015]
}, Open  ]],
Cell[CellGroupData[{
Cell[982139, 21867, 424, 11, 40, "MathCaption",ExpressionUUID->"dca78dcc-0676-437e-a389-bf24aa8c99dc",
 CellID->597709743],
Cell[CellGroupData[{
Cell[982588, 21882, 318, 7, 25, "Input",ExpressionUUID->"ecfddaff-961f-46a1-8f88-a17d24567c66",
 CellID->559137007],
Cell[982909, 21891, 480, 9, 42, "Output",ExpressionUUID->"a8dbcc2e-3caa-42d0-81f9-33bc3f1e2cd6",
 CellID->350769182]
}, Open  ]],
Cell[983404, 21903, 241, 5, 26, "ExampleDelimiter",ExpressionUUID->"b53d2b8c-e17b-4468-b36b-2aec420a1171",
 CellID->87474974]
}, Open  ]],
Cell[CellGroupData[{
Cell[983682, 21913, 628, 16, 40, "MathCaption",ExpressionUUID->"e64fd83d-93e8-4e02-abf3-2bb4c4702f35",
 CellID->655288947],
Cell[CellGroupData[{
Cell[984335, 21933, 302, 6, 25, "Input",ExpressionUUID->"c6b0ef7a-9be0-4137-bbfc-d2b79ffc4ab7",
 CellID->68325774],
Cell[984640, 21941, 505, 9, 42, "Output",ExpressionUUID->"d0518706-58f6-4b1c-a8af-3ce75845ac1b",
 CellID->411603969]
}, Open  ]],
Cell[985160, 21953, 242, 5, 26, "ExampleDelimiter",ExpressionUUID->"08faf537-ae50-4cad-bca6-17a74dac8d97",
 CellID->380977308]
}, Open  ]],
Cell[CellGroupData[{
Cell[985439, 21963, 419, 11, 40, "MathCaption",ExpressionUUID->"80cbaf4d-6b84-418f-b357-d54653ee18a7",
 CellID->206574541],
Cell[CellGroupData[{
Cell[985883, 21978, 353, 8, 25, "Input",ExpressionUUID->"09410bc9-6af4-453c-b155-a0bceb6088ea",
 CellID->571446576],
Cell[986239, 21988, 1039, 32, 28, "Output",ExpressionUUID->"e40c7898-0bab-4607-b96e-dca340b365e6",
 CellID->579836633]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[987327, 22026, 193, 2, 40, "MathCaption",ExpressionUUID->"21d0d592-72b4-4774-996c-6be8648209c8",
 CellID->849664802],
Cell[CellGroupData[{
Cell[987545, 22032, 473, 12, 25, "Input",ExpressionUUID->"9aebbb4e-8a75-4cac-9e95-11152664cc0d",
 CellID->5746910],
Cell[988021, 22046, 201, 3, 24, "Output",ExpressionUUID->"dc0be05f-4a7b-4eec-853a-be85245124a4",
 CellID->145466617]
}, Open  ]],
Cell[988237, 22052, 241, 5, 26, "ExampleDelimiter",ExpressionUUID->"8c6e05a8-288b-4450-953c-874c7df66844",
 CellID->64856443]
}, Open  ]],
Cell[CellGroupData[{
Cell[988515, 22062, 449, 11, 40, "MathCaption",ExpressionUUID->"472dd805-3876-4f16-8fa4-63a231af82b0",
 CellID->200874845],
Cell[CellGroupData[{
Cell[988989, 22077, 355, 8, 25, "Input",ExpressionUUID->"c6930b62-bc1d-43df-b2d8-0f575b1008ae",
 CellID->2790924],
Cell[989347, 22087, 1289, 43, 48, "Output",ExpressionUUID->"d6ff88e3-d199-40b6-ab01-257cf2101d53",
 CellID->749587632]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[990685, 22136, 186, 2, 40, "MathCaption",ExpressionUUID->"5f79fa01-a92b-49e0-81e3-732bed958fce",
 CellID->193111019],
Cell[CellGroupData[{
Cell[990896, 22142, 548, 16, 25, "Input",ExpressionUUID->"c3d985a9-2318-4a7c-9a92-780dd5de7486",
 CellID->257744413],
Cell[991447, 22160, 172, 3, 24, "Output",ExpressionUUID->"22069223-f5a5-4959-ac39-f0862ce331a4",
 CellID->599489833]
}, Open  ]],
Cell[991634, 22166, 242, 5, 26, "ExampleDelimiter",ExpressionUUID->"7001900e-729c-4fe1-89e9-01cc7517b93a",
 CellID->506165783]
}, Open  ]],
Cell[CellGroupData[{
Cell[991913, 22176, 550, 16, 40, "MathCaption",ExpressionUUID->"39be35a5-2e23-46ac-9416-06a52ad97ed4",
 CellID->230848754],
Cell[CellGroupData[{
Cell[992488, 22196, 358, 8, 25, "Input",ExpressionUUID->"47782e88-5a43-4e91-bbe3-b20717ac4dfa",
 CellID->4310976],
Cell[992849, 22206, 591, 18, 28, "Output",ExpressionUUID->"58c89f67-71c7-439a-af2d-7bc38930ff6d",
 CellID->362774086]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[993489, 22230, 188, 2, 40, "MathCaption",ExpressionUUID->"8d836cc8-fe3e-4794-baf5-819304197f5f",
 CellID->373578484],
Cell[CellGroupData[{
Cell[993702, 22236, 550, 15, 28, "Input",ExpressionUUID->"df881573-d883-4b7e-9e00-31339a26b26b",
 CellID->194038522],
Cell[994255, 22253, 173, 3, 24, "Output",ExpressionUUID->"0f6a17b9-f0cb-4a05-ac4b-0b77fdbb1a98",
 CellID->154595223]
}, Open  ]]
}, Open  ]],
Cell[994455, 22260, 190, 2, 40, "MathCaption",ExpressionUUID->"b3c0d08b-fcdc-41f1-9c98-7f9f025f8af7",
 CellID->554419],
Cell[CellGroupData[{
Cell[994670, 22266, 118, 1, 40, "MathCaption",ExpressionUUID->"98d91437-5ef5-4882-8e37-89175bf46493",
 CellID->55753721],
Cell[CellGroupData[{
Cell[994813, 22271, 256, 5, 25, "Input",ExpressionUUID->"f14f8af7-82b1-42bf-8f4e-b13e1eeec972",
 CellID->14566],
Cell[995072, 22278, 210, 3, 24, "Output",ExpressionUUID->"5252c67d-b7b9-4862-b989-7eef5809699c",
 CellID->18188826]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[995331, 22287, 184, 2, 40, "MathCaption",ExpressionUUID->"56d0bb3d-8510-4f16-8e51-17a4de6bf6a4",
 CellID->563784370],
Cell[CellGroupData[{
Cell[995540, 22293, 278, 6, 41, "Input",ExpressionUUID->"886e2a27-04ab-45f1-8aa0-9e0f18e98dff",
 CellID->20592017],
Cell[995821, 22301, 257, 4, 24, "Output",ExpressionUUID->"7cf3f3a5-e1e7-4222-a035-ba764c4f4c06",
 CellID->151593018]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[996127, 22311, 197, 2, 40, "MathCaption",ExpressionUUID->"7657114d-d5cd-48c3-a26e-d28e5f9226c4",
 CellID->237785666],
Cell[CellGroupData[{
Cell[996349, 22317, 288, 6, 41, "Input",ExpressionUUID->"9499401a-c94c-4e3b-80c9-029bf8c3ed3b",
 CellID->298472260],
Cell[996640, 22325, 235, 4, 24, "Output",ExpressionUUID->"c7bad1ba-9076-4960-8759-debd3cf4c75b",
 CellID->74152669]
}, Open  ]]
}, Open  ]],
Cell[996902, 22333, 193, 2, 40, "MathCaption",ExpressionUUID->"b3c0da6d-14d3-4513-9cda-eec9e22a5c3c",
 CellID->496593996],
Cell[CellGroupData[{
Cell[997120, 22339, 119, 1, 40, "MathCaption",ExpressionUUID->"84220ff2-a765-4b35-b55d-b35c6aa951ae",
 CellID->489039817],
Cell[CellGroupData[{
Cell[997264, 22344, 274, 5, 25, "Input",ExpressionUUID->"c19fcedd-b78b-44f0-8cb9-26999323e0a8",
 CellID->88658836],
Cell[997541, 22351, 321, 7, 40, "Output",ExpressionUUID->"339b42a2-fde2-4045-85db-65d58adc8b7f",
 CellID->66741005]
}, Open  ]],
Cell[CellGroupData[{
Cell[997899, 22363, 305, 6, 25, "Input",ExpressionUUID->"728106ed-73bd-4ba9-ac83-12892dbf0a2d",
 CellID->471752441],
Cell[998207, 22371, 210, 3, 24, "Output",ExpressionUUID->"3a8ade29-1075-4e1b-839d-d83b24de7bb6",
 CellID->374027243]
}, Open  ]],
Cell[CellGroupData[{
Cell[998454, 22379, 385, 9, 25, "Input",ExpressionUUID->"7baf519c-aa10-4412-8cf3-cf0fd847ee92",
 CellID->796052010],
Cell[998842, 22390, 237, 4, 24, "Output",ExpressionUUID->"649ef4c5-36f5-4d6d-9c22-e613ac88bc56",
 CellID->199263104]
}, Open  ]]
}, Open  ]],
Cell[999106, 22398, 241, 4, 40, "MathCaption",ExpressionUUID->"6c2d9d80-c54d-453b-ad9e-6032d479dbba",
 CellID->143975390],
Cell[CellGroupData[{
Cell[999372, 22406, 382, 8, 45, "MathCaption",ExpressionUUID->"e9935574-99b5-40a8-b07e-7d21854c1d15",
 CellID->27787895],
Cell[CellGroupData[{
Cell[999779, 22418, 278, 5, 41, "Input",ExpressionUUID->"9587bd11-6405-447b-ba16-674d716e4180",
 CellID->236189147],
Cell[1000060, 22425, 196, 3, 24, "Output",ExpressionUUID->"eedb5a11-b7cb-4dbe-987a-0952908bb894",
 CellID->557292175]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1000305, 22434, 187, 2, 40, "MathCaption",ExpressionUUID->"4d3f03c5-7e5e-43b8-a28a-93b63b3530f8",
 CellID->35640176],
Cell[CellGroupData[{
Cell[1000517, 22440, 245, 5, 41, "Input",ExpressionUUID->"7590f28d-925c-4c78-bb5b-c7661a65f594",
 CellID->761312723],
Cell[1000765, 22447, 197, 3, 24, "Output",ExpressionUUID->"966c106d-3901-48a3-bc5c-e54612b23120",
 CellID->290448543]
}, Open  ]],
Cell[CellGroupData[{
Cell[1000999, 22455, 279, 5, 41, "Input",ExpressionUUID->"5d1ff7e4-c1c6-47a0-a2ab-49e9129c44d6",
 CellID->60940240],
Cell[1001281, 22462, 192, 3, 24, "Output",ExpressionUUID->"ba50a0bc-6cdc-4167-b626-4209dfb41d5b",
 CellID->200714134]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1001522, 22471, 306, 5, 57, "MathCaption",ExpressionUUID->"6d83d084-a745-4b3b-a51c-01d45a57ae82",
 CellID->459322947],
Cell[CellGroupData[{
Cell[1001853, 22480, 693, 17, 41, "Input",ExpressionUUID->"70792e34-b7ce-4d15-b6da-3f3adeb428e9",
 CellID->132252402],
Cell[1002549, 22499, 50484, 962, 299, "Output",ExpressionUUID->"ba9fab94-d861-4d2b-b8cf-05f8231fe3ec",
 CellID->504232840]
}, Open  ]]
}, Open  ]],
Cell[1053060, 23465, 446, 9, 40, "MathCaption",ExpressionUUID->"4b43c065-4147-42b2-95a5-6fbd171b7047",
 CellID->142153006],
Cell[1053509, 23476, 721, 17, 62, "MathCaption",ExpressionUUID->"c3015b6c-b871-4286-a2f9-94bcc88b3efe",
 CellID->468172920],
Cell[CellGroupData[{
Cell[1054255, 23497, 527, 12, 62, "MathCaption",ExpressionUUID->"1c315583-46d8-4e6e-959d-cfd5fe3ec8c3",
 CellID->75005970],
Cell[CellGroupData[{
Cell[1054807, 23513, 912, 23, 102, "Input",ExpressionUUID->"1b980e60-0e67-40e0-bf1b-4b62c898d742",
 CellID->696606258],
Cell[1055722, 23538, 158, 2, 23, "EchoTiming",ExpressionUUID->"55d21377-1ad7-4262-87e3-c2010e1679d2",
 CellID->114796685],
Cell[1055883, 23542, 245, 5, 24, "Output",ExpressionUUID->"f8b58efa-18d2-417a-a7c2-b8ab413e2bc3",
 CellID->36436604]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1056177, 23553, 209, 2, 40, "MathCaption",ExpressionUUID->"8eb45452-f5dc-487e-bcf4-e93206ef0482",
 CellID->595536278],
Cell[CellGroupData[{
Cell[1056411, 23559, 964, 24, 129, "Input",ExpressionUUID->"1b395bb2-e846-40a1-8e59-aecf634c027c",
 CellID->135456001],
Cell[1057378, 23585, 156, 2, 23, "EchoTiming",ExpressionUUID->"1f1c7bcb-e0f5-477c-a984-7b4103ed7428",
 CellID->47425443],
Cell[1057537, 23589, 169, 3, 24, "Output",ExpressionUUID->"c8a47746-3af9-4fed-a21c-60a4623f76d4",
 CellID->3416495]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1057755, 23598, 228, 3, 40, "MathCaption",ExpressionUUID->"d4148139-f3d9-44da-b123-3cac1b6932c2",
 CellID->197268136],
Cell[CellGroupData[{
Cell[1058008, 23605, 1018, 25, 129, "Input",ExpressionUUID->"906d7570-37a1-4aa7-93e6-06c4b5133942",
 CellID->325931600],
Cell[1059029, 23632, 897, 25, 21, "Echo",ExpressionUUID->"2fb660fc-10a5-426a-b9cd-8db062ca3f54",
 CellID->211601392],
Cell[1059929, 23659, 172, 3, 24, "Output",ExpressionUUID->"d24d3e78-8a96-48b9-8998-e0775f40508b",
 CellID->24671701]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1060150, 23668, 415, 10, 40, "MathCaption",ExpressionUUID->"67f333ab-efd9-4889-9ce0-3d919deca847",
 CellID->109955765],
Cell[1060568, 23680, 241, 5, 26, "ExampleDelimiter",ExpressionUUID->"8a917589-749d-4846-b9f4-43cf283967cc",
 CellID->65014155]
}, Open  ]],
Cell[CellGroupData[{
Cell[1060846, 23690, 490, 10, 62, "MathCaption",ExpressionUUID->"78ecc554-4655-4f86-9d02-9333aee36c99",
 CellID->213110306],
Cell[1061339, 23702, 522, 13, 41, "Input",ExpressionUUID->"91b199bc-2deb-40ba-bf69-3b4b68dfd6ba",
 CellID->149658206],
Cell[CellGroupData[{
Cell[1061886, 23719, 478, 10, 25, "Input",ExpressionUUID->"2c209361-2a10-4101-bfab-ca244f91360f",
 CellID->174838792],
Cell[1062367, 23731, 816, 13, 60, "Output",ExpressionUUID->"781b304f-d387-43a1-9354-c43e5df6ed75",
 CellID->6197371]
}, Open  ]],
Cell[CellGroupData[{
Cell[1063220, 23749, 470, 11, 25, "Input",ExpressionUUID->"034acafe-f8ef-4c79-8915-28fe52f93a63",
 CellID->758948014],
Cell[1063693, 23762, 8554, 211, 366, "Output",ExpressionUUID->"4324fc94-fef8-4576-9781-0da235ca1ee6",
 CellID->52008308]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1072296, 23979, 207, 2, 40, "MathCaption",ExpressionUUID->"a5320d22-5ea7-4c1d-956b-cd6f49e0459c",
 CellID->123945420],
Cell[1072506, 23983, 475, 12, 41, "Input",ExpressionUUID->"4badf44d-cbc7-4a28-92e5-3b7d6f8a0966",
 CellID->121949185],
Cell[1072984, 23997, 476, 11, 25, "Input",ExpressionUUID->"c8c1ef7b-fc15-4d60-896d-61fe1746f4f0",
 CellID->112015657],
Cell[CellGroupData[{
Cell[1073485, 24012, 470, 11, 25, "Input",ExpressionUUID->"183d83a5-c4c5-469c-8f28-179f414da7c5",
 CellID->397875431],
Cell[1073958, 24025, 14870, 315, 359, "Output",ExpressionUUID->"b9770620-46dd-4eb1-87ff-815a70fa29cb",
 CellID->797935073]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1088901, 24348, 191, 2, 68, "TutorialMoreAboutSection",ExpressionUUID->"5f56aaf9-78db-4341-b909-8fecaee71b09",
 CellID->300332198],
Cell[1089095, 24352, 303, 6, 24, "TutorialMoreAbout",ExpressionUUID->"e9ca2037-ef5e-4655-9f9b-1a8ce38d4e44",
 CellID->353617896],
Cell[1089401, 24360, 402, 7, 24, "TutorialMoreAbout",ExpressionUUID->"30690779-ef18-4c4d-b9a2-4c115a23cab0",
 CellID->822407248]
}, Open  ]],
Cell[CellGroupData[{
Cell[1089840, 24372, 127, 1, 74, "RelatedTutorialsSection",ExpressionUUID->"bb87d0f4-b7f3-472f-a5c1-133a17fc68da",
 CellID->95960386],
Cell[1089970, 24375, 107, 1, 24, "RelatedTutorials",ExpressionUUID->"657bd0c0-a625-4084-a383-120fb375b3bb",
 CellID->657441003]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1090126, 24382, 110, 1, 72, "MetadataSection",ExpressionUUID->"0eb62a5b-9663-49cf-b5e1-c26f21dde72f",
 CellID->127671852],
Cell[1090239, 24385, 473, 11, 26, "History",ExpressionUUID->"5ecc98b4-4355-484b-89ee-c4dbfd47e69c",
 CellID->120211482],
Cell[CellGroupData[{
Cell[1090737, 24400, 122, 1, 21, "CategorizationSection",ExpressionUUID->"e03e3233-73a0-43a4-92b6-b51e1bcdbccf",
 CellID->412176238],
Cell[1090862, 24403, 137, 2, 70, "Categorization",ExpressionUUID->"94355122-d079-42ab-9312-727675d3c5af",
 CellID->244398777],
Cell[1091002, 24407, 153, 2, 70, "Categorization",ExpressionUUID->"cf5119e0-ad0e-44e6-b3a0-73c68197d608",
 CellID->35632880],
Cell[1091158, 24411, 150, 2, 70, "Categorization",ExpressionUUID->"66a7dd64-42ba-441c-a876-a158a9e65fa4",
 CellID->26538629],
Cell[1091311, 24415, 169, 2, 70, "Categorization",ExpressionUUID->"3fa411c9-52ba-4960-82cb-8c882396450d",
 CellID->149680849]
}, Closed]],
Cell[CellGroupData[{
Cell[1091517, 24422, 109, 1, 21, "KeywordsSection",ExpressionUUID->"d98ba340-4912-4f71-98e9-f6300faf4014",
 CellID->13307797],
Cell[1091629, 24425, 99, 1, 70, "Keywords",ExpressionUUID->"090c59c6-c29f-4931-9cfd-7d217ea96b73",
 CellID->559025098]
}, Closed]]
}, Open  ]]
}
]
*)

