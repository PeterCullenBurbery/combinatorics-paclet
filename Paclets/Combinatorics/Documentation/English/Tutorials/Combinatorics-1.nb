(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2019347,      42390]
NotebookOptionsPosition[   1890670,      39480]
NotebookOutlinePosition[   1891227,      39498]
CellTagsIndexPosition[   1891184,      39495]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Combinatorics", "Title",
 CellID->28422271,ExpressionUUID->"29863ea0-08dc-46b8-b497-cb6f5f528f0c"],

Cell["\<\
This paclet is for the study of combinatorics. I am a combinatorialist. That \
means I study combinatorics.\
\>", "Text",
 CellChangeTimes->{{3.8996485172153187`*^9, 3.899648553535448*^9}},
 CellID->106321115,ExpressionUUID->"c9cda3f0-8f4e-4867-9c22-5cb081f88c20"],

Cell[CellGroupData[{

Cell[TextData[{
 "The functions defined in the ",
 Cell[BoxData[
 "PeterBurbery`Combinatorics`"], "InlineFormula",ExpressionUUID->
  "52ca241b-5f2c-48bd-8a73-2dcacebef876"],
 " context provide support for finding solutions to combinatorics-related \
problems."
}], "Text",
 CellChangeTimes->{{3.899745229360871*^9, 3.8997452455618725`*^9}},
 CellID->345096676,ExpressionUUID->"2768152e-beee-4843-9be6-e009958bdc11"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<PeterBurbery`Combinatorics`\>\"", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8997452577387857`*^9, 3.8997452674639006`*^9}},
 CellLabel->"In[469]:=",
 CellID->13366579,ExpressionUUID->"e2eeb9fd-67f8-4057-a237-75c17f9df3c9"]
}, Closed]],

Cell[CellGroupData[{

Cell["Indexes", "Section",
 CellChangeTimes->{{3.8997452154486513`*^9, 3.89974521642293*^9}},
 CellID->12394907,ExpressionUUID->"94baa558-d014-4759-9107-28d629b3dc9c"],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["PermutationIndex",
      BaseStyle->"Link",
      ButtonData->"paclet:PeterBurbery/Combinatorics/ref/PermutationIndex"], 
     "[", 
     StyleBox["perm", "TI"], "]"}], Cell[TextData[{
     "gives the lexicographic index of permutation ",
     Cell[BoxData[
      StyleBox["perm", "TI"]], "InlineFormula",ExpressionUUID->
      "c3a9b2df-3536-4ba6-a032-b09c13c94405"],
     "."
    }], "TableText",ExpressionUUID->"5373f39b-27ad-4f63-9be4-43407bcaaca0"]},
   {
    RowBox[{
     ButtonBox["PermutationFromIndex",
      BaseStyle->"Link",
      ButtonData->
       "paclet:PeterBurbery/Combinatorics/ref/PermutationFromIndex"], "[", 
     RowBox[{
      StyleBox["index", "TI"], ",", 
      StyleBox["lengthInput", "TI"]}], "]"}], Cell[TextData[{
     "returns the permutation of length ",
     Cell[BoxData[
      StyleBox["lengthInput", "TI"]], "InlineFormula",ExpressionUUID->
      "5566bf9d-4ac0-4589-a567-799baccf1e46"],
     " corresponding to the ",
     Cell[BoxData[
      StyleBox["index", "TI"]], "InlineFormula",ExpressionUUID->
      "9f72b394-0f03-42b2-9680-2ddca649f2cf"],
     "th permutation in lexicographic order."
    }], "TableText",ExpressionUUID->"8834a3b8-8409-4b2e-9854-69d4ff7f8678"]},
   {
    RowBox[{
     ButtonBox["SubsetIndex",
      BaseStyle->"Link",
      ButtonData->"paclet:PeterBurbery/Combinatorics/ref/SubsetIndex"], "[", 
     StyleBox["list", "TI"], "]"}], Cell[TextData[{
     "gives the index of subset ",
     Cell[BoxData[
      StyleBox["list", "TI"]], "InlineFormula",ExpressionUUID->
      "48fd3c73-5ee7-4c63-9ce1-84af978e78dc"],
     "."
    }], "TableText",ExpressionUUID->"2d1eed3b-216e-4791-8e17-49930bb4ceb4"]},
   {
    RowBox[{
     ButtonBox["SubsetFromIndex",
      BaseStyle->"Link",
      ButtonData->"paclet:PeterBurbery/Combinatorics/ref/SubsetFromIndex"], 
     "[", 
     RowBox[{
      StyleBox["index", "TI"], ",", 
      StyleBox["len", "TI"]}], "]"}], Cell[TextData[{
     "returns a subset of length ",
     Cell[BoxData[
      StyleBox["len", "TI"]], "InlineFormula",ExpressionUUID->
      "cd32c1e8-0196-4786-8744-c82ed3f32b5f"],
     " with given ",
     Cell[BoxData[
      StyleBox["index", "TI"]], "InlineFormula",ExpressionUUID->
      "ddaa4f59-e129-4a33-8439-9bdb3e8e88b4"],
     "."
    }], "TableText",ExpressionUUID->"18fa3548-9fd2-41ce-8cb1-cdc045afd7e3"]}
  }]], "DefinitionBox",
 CellChangeTimes->{{3.8996489194866652`*^9, 3.8996489239158792`*^9}, {
  3.8996489732810745`*^9, 3.899649018075349*^9}},
 CellID->124942403,ExpressionUUID->"5cf8197e-0767-4bab-b6e7-417fa46727b6"],

Cell["Computing the index or using the index to get the thing.", "Caption",
 CellChangeTimes->{{3.899648939170776*^9, 3.899648948044263*^9}},
 CellID->520428306,ExpressionUUID->"4bfbbaaf-1b42-48b6-a4c3-a5a305a58f86"],

Cell[CellGroupData[{

Cell["Find the index of a random permutation", "MathCaption",
 CellChangeTimes->{{3.8996490265856886`*^9, 3.899649027609098*^9}, {
  3.899649101671936*^9, 3.89964910509002*^9}},
 CellID->31903801,ExpressionUUID->"f43506a1-7771-4158-a9c0-54ec169572db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PermutationIndex", "[", 
  RowBox[{"Echo", "[", 
   RowBox[{"PermutationList", "@", 
    RowBox[{"RandomPermutation", "[", "9", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.899649113130213*^9, 3.899649141332165*^9}, {
  3.899745290140775*^9, 3.89974529169009*^9}},
 CellLabel->"In[12]:=",
 CellID->2966739,ExpressionUUID->"7598acd3-6389-4c45-952d-4464965c6e07"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "6", ",", "9", ",", "1", ",", "4", ",", "8", ",", "3", ",", "5", 
   ",", "7"}], "}"}]], "Echo",
 CellChangeTimes->{3.89974529222071*^9},
 CellID->829559052,ExpressionUUID->"f066f4bb-3bf8-434a-9e49-a31946bcb20a"],

Cell[BoxData["64843"], "Output",
 CellChangeTimes->{{3.8996491225399823`*^9, 3.89964914209574*^9}, 
   3.8996520286243095`*^9, {3.899745273636671*^9, 3.899745292381153*^9}},
 CellLabel->"Out[12]=",
 CellID->9137373,ExpressionUUID->"917f2ec9-b63e-4e49-b26d-a2b29b07ae42"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get the permutation:", "MathCaption",
 CellChangeTimes->{{3.8996520511050043`*^9, 3.8996520553866453`*^9}},
 CellID->591549556,ExpressionUUID->"04b3ff9b-2b0f-4761-a60b-8aed1ef39046"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PermutationFromIndex", "[", 
  RowBox[{"%", ",", "9"}], "]"}]], "Input",
 CellChangeTimes->{{3.899652056939474*^9, 3.8996520688523808`*^9}, 
   3.899745282259115*^9},
 CellLabel->"In[13]:=",
 CellID->281752241,ExpressionUUID->"d783cff5-3a8f-4ff8-a24b-8cbc5953d7ae"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "6", ",", "9", ",", "1", ",", "4", ",", "8", ",", "3", ",", "5", 
   ",", "7"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8996520692746305`*^9, {3.8997452827484465`*^9, 3.8997452937134447`*^9}},
 CellLabel->"Out[13]=",
 CellID->69714785,ExpressionUUID->"75324d47-0bb8-4560-a357-e84a5be0cfe1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Here's a neat application of this function. We can use this to solve Project \
Euler Problem 24 Lexicographic Permutations. What is the millionth \
lexicographic permutation of the digits 0, 1, 2, 3, 4, 5, 6, 7, 8, and 9?\
\>", "MathCaption",
 CellChangeTimes->{{3.8996520754404263`*^9, 3.8996520969633904`*^9}, {
  3.8996521422657013`*^9, 3.8996521703500643`*^9}, {3.8996522111981525`*^9, 
  3.899652213145729*^9}},
 CellID->114128779,ExpressionUUID->"f2ad7b3e-b352-44eb-93a1-3b887280e5a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PermutationFromIndex", "[", 
  RowBox[{"1000000", 
   RowBox[{"(*", 
    RowBox[{"a", " ", "million", " ", "is", " ", 
     SuperscriptBox["10", "6"]}], "*)"}], ",", " ", "10"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"because", " ", 
     RowBox[{"Length", "[", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", 
        "7", ",", "8", ",", ",", "9"}], "}"}], "]"}], " ", "is", " ", "10"}], 
    ",", " ", 
    RowBox[{"not", " ", "9"}]}], "*)"}], "]"}]], "Input",
 CellChangeTimes->{{3.899652171087674*^9, 3.89965222121475*^9}},
 CellLabel->"In[6]:=",
 CellID->123225409,ExpressionUUID->"157110f4-2bfa-40c5-9452-4bedaadba74c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "8", ",", "9", ",", "4", ",", "10", ",", "2", ",", "6", ",", "5", 
   ",", "7", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.8996522223619137`*^9},
 CellLabel->"Out[6]=",
 CellID->565924694,ExpressionUUID->"dfc393ca-515e-4aa7-a026-227ca82b12ac"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Now we need to subtract 1. 10 will become 9 and 1 will become 0.\
\>", "MathCaption",
 CellChangeTimes->{{3.8996522243268967`*^9, 3.8996522450338764`*^9}},
 CellID->198474650,ExpressionUUID->"f7523c82-c609-4bd7-ac6a-101682c7d785"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PermutationFromIndex", "[", 
   RowBox[{"1000000", 
    RowBox[{"(*", 
     RowBox[{"a", " ", "million", " ", "is", " ", 
      SuperscriptBox["10", "6"]}], "*)"}], ",", " ", "10"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"because", " ", 
      RowBox[{"Length", "[", 
       RowBox[{"{", 
        RowBox[{
        "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", 
         "7", ",", "8", ",", ",", "9"}], "}"}], "]"}], " ", "is", " ", "10"}],
      ",", " ", 
     RowBox[{"not", " ", "9"}]}], "*)"}], "]"}], "-", "1"}]], "Input",
 CellChangeTimes->{{3.899652171087674*^9, 3.899652246534876*^9}},
 CellLabel->"In[7]:=",
 CellID->96415675,ExpressionUUID->"f6ee380a-4739-4721-a9c7-73721e6057cf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "7", ",", "8", ",", "3", ",", "9", ",", "1", ",", "5", ",", "4", 
   ",", "6", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.899652247281952*^9},
 CellLabel->"Out[7]=",
 CellID->187311040,ExpressionUUID->"2d250a20-2f3b-4743-912c-9184cd3d8621"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Now we can use FromDigits.", "MathCaption",
 CellChangeTimes->{{3.8996522487264442`*^9, 3.899652252784938*^9}},
 CellID->460961065,ExpressionUUID->"17bb4736-5c24-4017-850c-e27538d06e14"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FromDigits", "[", 
  RowBox[{
   RowBox[{"PermutationFromIndex", "[", 
    RowBox[{"1000000", 
     RowBox[{"(*", 
      RowBox[{"a", " ", "million", " ", "is", " ", 
       SuperscriptBox["10", "6"]}], "*)"}], ",", " ", "10"}], 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"because", " ", 
       RowBox[{"Length", "[", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",",
           "7", ",", "8", ",", ",", "9"}], "}"}], "]"}], " ", "is", " ", 
       "10"}], ",", " ", 
      RowBox[{"not", " ", "9"}]}], "*)"}], "]"}], "-", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.8996522533532248`*^9, 3.8996522551887875`*^9}},
 CellLabel->"In[8]:=",
 CellID->348169710,ExpressionUUID->"a52ff0eb-569f-4664-8c55-c62fa39b960a"],

Cell[BoxData["2783915460"], "Output",
 CellChangeTimes->{3.899652255470524*^9},
 CellLabel->"Out[8]=",
 CellID->12882949,ExpressionUUID->"36c2d559-21c4-4959-9b9a-f77a2523a960"]
}, Open  ]]
}, Open  ]],

Cell["And that's the answer!", "MathCaption",
 CellChangeTimes->{{3.89965225662661*^9, 3.8996522596513786`*^9}},
 CellID->215938530,ExpressionUUID->"bcb88308-d60b-448d-85d9-7cb5da93ed7b"],

Cell[CellGroupData[{

Cell["Find a subset's index.", "MathCaption",
 CellChangeTimes->{{3.8996522652356243`*^9, 3.8996522782278132`*^9}},
 CellID->142381604,ExpressionUUID->"2353ef8d-02c7-40d7-813d-2f1ec64d119b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SubsetIndex", "[", 
  RowBox[{"{", 
   RowBox[{"2", ",", "4", ",", "6"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.899649113130213*^9, 3.899649141332165*^9}, {
  3.8996492440052633`*^9, 3.8996492489526763`*^9}, {3.899652340536313*^9, 
  3.8996523429820943`*^9}},
 CellLabel->"In[10]:=",
 CellID->347150823,ExpressionUUID->"50a8906b-1d34-4e2b-a456-bb398b05870c"],

Cell[BoxData["29"], "Output",
 CellChangeTimes->{3.899649249426399*^9, 3.8996523432964063`*^9},
 CellLabel->"Out[10]=",
 CellID->160256386,ExpressionUUID->"af55f9e2-6bed-4d19-95da-a7e33b9c2c07"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find the subset.", "MathCaption",
 CellChangeTimes->{{3.8996523033906155`*^9, 3.8996523056939783`*^9}},
 CellID->9730894,ExpressionUUID->"aa13f796-6084-4be4-b68f-69ee4bd51d4d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SubsetFromIndex", "[", 
  RowBox[{"29", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8996523072109237`*^9, 3.8996523135576286`*^9}, {
   3.899652352094467*^9, 3.899652356909275*^9}, 3.8996524416453767`*^9},
 CellLabel->"In[15]:=",
 CellID->172885937,ExpressionUUID->"cd861de1-c55b-4f65-b868-a785400a8b7b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "4", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8996523138515444`*^9, {3.899652353031444*^9, 3.8996523572976427`*^9}, 
   3.899652442068437*^9},
 CellLabel->"Out[15]=",
 CellID->13566930,ExpressionUUID->"e6a0cb59-0782-43fb-a8a8-a82b96865c08"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Central Binomial Coefficient", "Section",
 CellChangeTimes->{{3.899998156015087*^9, 3.899998160832127*^9}},
 CellID->57602827,ExpressionUUID->"791c635c-1e03-4372-949b-fa4d96525879"],

Cell[CellGroupData[{

Cell["Compute the central binomial coefficient.", "MathCaption",
 CellChangeTimes->{{3.8997476435567694`*^9, 3.8997476507177753`*^9}},
 CellID->237155657,ExpressionUUID->"b83f86d4-9d83-499b-ab40-b811d6930b35"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CentralBinomialCoefficient", "[", "54", "]"}]], "Input",
 CellChangeTimes->{{3.8997476651664467`*^9, 3.8997476699335685`*^9}},
 CellLabel->"In[18]:=",
 CellID->114626256,ExpressionUUID->"3077938e-d049-4d8d-a063-4be05b563e2d"],

Cell[BoxData["24857784491537440929618523018320"], "Output",
 CellChangeTimes->{3.899747670314257*^9},
 CellLabel->"Out[18]=",
 CellID->21111411,ExpressionUUID->"6d2b2a59-ce78-473d-bfec-f2e65f9d3bd9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CentralBinomialCoefficient", "[", "n", "]"}]], "Input",
 CellChangeTimes->{{3.8997476651664467`*^9, 3.8997476753389606`*^9}},
 CellLabel->"In[19]:=",
 CellID->72962348,ExpressionUUID->"c4b67cc6-ff82-4326-9aca-1b660f7fcf40"],

Cell[BoxData[
 RowBox[{"Binomial", "[", 
  RowBox[{
   RowBox[{"2", " ", "n"}], ",", "n"}], "]"}]], "Output",
 CellChangeTimes->{3.8997476756374416`*^9},
 CellLabel->"Out[19]=",
 CellID->144120138,ExpressionUUID->"a2a6b74a-9608-4542-8d81-ef5b97813ba2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find the generating function.", "MathCaption",
 CellChangeTimes->{{3.8997476899312167`*^9, 3.8997476938746185`*^9}},
 CellID->172959633,ExpressionUUID->"df0d52ca-bffd-45a1-b519-758e939bc207"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeneratingFunction", "[", 
  RowBox[{
   RowBox[{"CentralBinomialCoefficient", "[", "n", "]"}], ",", "n", ",", 
   "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997476816627703`*^9, 3.8997476852531166`*^9}},
 CellLabel->"In[20]:=",
 CellID->103210421,ExpressionUUID->"6bac6800-1d14-44bc-b44b-9c6af422b49a"],

Cell[BoxData[
 FractionBox["1", 
  SqrtBox[
   RowBox[{"1", "-", 
    RowBox[{"4", " ", "x"}]}]]]], "Output",
 CellChangeTimes->{3.8997476858034697`*^9},
 CellLabel->"Out[20]=",
 CellID->78156444,ExpressionUUID->"0c88aaef-5c05-4d5b-855f-86576afe9105"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Make a table of values.", "MathCaption",
 CellChangeTimes->{{3.899747695855169*^9, 3.8997477013055053`*^9}},
 CellID->452686366,ExpressionUUID->"8860ba47-aeb6-4f5b-b590-f7dec769ca82"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{"\"\<n\>\"", "->", 
       RowBox[{"CentralBinomialCoefficient", "[", "#", "]"}]}], "|>"}], "&"}],
     "]"}], "[", 
   RowBox[{"Range", "[", "21", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997477026804385`*^9, 3.899747753265658*^9}},
 CellLabel->"In[22]:=",
 CellID->422387114,ExpressionUUID->"ce3c5df2-0acd-4351-a168-d4b9b9224a22"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      1 -> <|"n" -> 2|>, 2 -> <|"n" -> 6|>, 3 -> <|"n" -> 20|>, 
       4 -> <|"n" -> 70|>, 5 -> <|"n" -> 252|>, 6 -> <|"n" -> 924|>, 
       7 -> <|"n" -> 3432|>, 8 -> <|"n" -> 12870|>, 9 -> <|"n" -> 48620|>, 
       10 -> <|"n" -> 184756|>, 11 -> <|"n" -> 705432|>, 
       12 -> <|"n" -> 2704156|>, 13 -> <|"n" -> 10400600|>, 
       14 -> <|"n" -> 40116600|>, 15 -> <|"n" -> 155117520|>, 
       16 -> <|"n" -> 601080390|>, 17 -> <|"n" -> 2333606220|>, 
       18 -> <|"n" -> 9075135300|>, 19 -> <|"n" -> 35345263800|>, 
       20 -> <|"n" -> 137846528820|>, 21 -> <|"n" -> 538257874440|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, "n"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 1, {All}]]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n"}, {
         TypeSystem`Atom[Integer]}], 21], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, "n"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 1, {All}]]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n"}, {
         TypeSystem`Atom[Integer]}], 21], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 1, "DataRowCount" -> 21, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["n", 
                  Style[
                  "n", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "n"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "n"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["70"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["252"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["924"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12870"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48620"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["184756"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["11"], 
                  Style[
                   RawBoxes["11"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[11]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["705432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["12"], 
                  Style[
                   RawBoxes["12"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[12]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2704156"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["13"], 
                  Style[
                   RawBoxes["13"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[13]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10400600"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["14"], 
                  Style[
                   RawBoxes["14"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[14]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["40116600"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["15"], 
                  Style[
                   RawBoxes["15"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[15]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["155117520"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["16"], 
                  Style[
                   RawBoxes["16"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[16]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["601080390"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["17"], 
                  Style[
                   RawBoxes["17"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[17]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2333606220"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["18"], 
                  Style[
                   RawBoxes["18"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[18]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9075135300"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["19"], 
                  Style[
                   RawBoxes["19"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[19]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35345263800"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["20"], 
                  Style[
                   RawBoxes["20"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[20]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["137846528820"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 21, 1], {1, 21 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 21, 1], {1, 21 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[21, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[21, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 21, 1], {1, 21 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 21, 1], {1, 21 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{167., {299.8544921875, 305.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{167., {299.8544921875, 305.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.899747734907628*^9, 3.899747753800619*^9}},
 CellLabel->"Out[22]=",
 CellID->209532304,ExpressionUUID->"cc2bb6ca-d1b9-4f35-9ca1-76c6f1a54a4e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The digits of ",
 Cell[BoxData[
  RowBox[{"(", GridBox[{
     {
      RowBox[{"2", " ", 
       SuperscriptBox["10", "n"]}]},
     {
      SuperscriptBox["10", "n"]}
    }], ")"}]], "Input",ExpressionUUID->
  "38927e40-f4ef-4697-b16f-62681046dae5"],
 " for ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"n", "=", "0"}], ",", " ", "1", ",", " ", "\[Ellipsis]"}]], 
  "InlineFormula",
  FormatType->StandardForm,ExpressionUUID->
  "fd074d53-baf5-4e3f-aacc-f3e00b1d68dd"],
 " are"
}], "MathCaption",
 CellChangeTimes->{{3.8997477689988422`*^9, 3.899747816005345*^9}},
 CellID->56151557,ExpressionUUID->"19c2ede4-6eb4-40b0-81d5-58bc4f1c47e3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{"\"\<n\>\"", "->", 
       RowBox[{"IntegerLength", "[", 
        RowBox[{"CentralBinomialCoefficient", "[", 
         SuperscriptBox["10", "#"], "]"}], "]"}]}], "|>"}], "&"}], "]"}], "[", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "8"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997477026804385`*^9, 3.899747753265658*^9}, {
  3.8997478167689037`*^9, 3.899747942424721*^9}},
 CellLabel->"In[32]:=",
 CellID->392545453,ExpressionUUID->"315ff5bc-9c19-4562-8561-5cdfe006134d"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      0 -> <|"n" -> 1|>, 1 -> <|"n" -> 6|>, 2 -> <|"n" -> 59|>, 
       3 -> <|"n" -> 601|>, 4 -> <|"n" -> 6019|>, 5 -> <|"n" -> 60204|>, 
       6 -> <|"n" -> 602057|>, 7 -> <|"n" -> 6020597|>, 
       8 -> <|"n" -> 60205995|>|>, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[9]} -> 1, {All, "n"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 1, {All}]]], 9, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n"}, {
         TypeSystem`Atom[Integer]}], 9], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[9]} -> 1, {All, "n"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 1, {All}]]], 9, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n"}, {
         TypeSystem`Atom[Integer]}], 9], "Path" -> {}, "DisplayedRowCount" -> 
     9, "DisplayedColumnCount" -> 1, "DataRowCount" -> 9, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["n", 
                  Style[
                  "n", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "n"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "n"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["59"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["601"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6019"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["60204"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["602057"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6020597"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["60205995"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{111., {140.8544921875, 146.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{111., {140.8544921875, 146.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8997479192062416`*^9, 3.899747952478814*^9}},
 CellLabel->"Out[32]=",
 CellID->242033643,ExpressionUUID->"6938d4d0-e2d1-4edf-99a6-e133788f86ff"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "These digits are converging to the digits of ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["log", "10"], "4"}]], "InlineFormula",
  FormatType->StandardForm,ExpressionUUID->
  "602a2475-7c52-48c6-a01d-ccab6572cf4a"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.8997479573414755`*^9, 3.8997479693046136`*^9}},
 CellID->100832978,ExpressionUUID->"a69dedee-e839-4836-915d-a71a2bd2e532"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"Log", "[", 
    RowBox[{"10", ",", "4"}], "]"}], ",", "40"}], "]"}]], "Input",
 CellChangeTimes->{{3.899747972700562*^9, 3.8997479800159883`*^9}},
 CellLabel->"In[34]:=",
 CellID->438135564,ExpressionUUID->"ede388b5-b5be-44c7-9b93-ba162d25e9a4"],

Cell[BoxData["0.6020599913279623904274777894489860535363797629242170826208`40.\
"], "Output",
 CellChangeTimes->{{3.8997479755106287`*^9, 3.8997479802943263`*^9}},
 CellLabel->"Out[34]=",
 CellID->287705978,ExpressionUUID->"19947191-b27a-4d1e-b954-8c5a7c725dd1"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Modified Central Binomial Coefficient", "Section",
 CellChangeTimes->{{3.899998176319814*^9, 3.8999981835522823`*^9}},
 CellID->33461597,ExpressionUUID->"043711de-c6d3-40d5-b6bb-10780552ed50"],

Cell[CellGroupData[{

Cell["Let's look at the modified central binomial coefficient.", "MathCaption",
 CellChangeTimes->{{3.899748350767112*^9, 3.899748361595912*^9}, 
   3.8997484313509865`*^9},
 CellID->139662984,ExpressionUUID->"f2fd091d-1e6f-4e71-a2ff-d6101f367dc1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{"\"\<n\>\"", "->", 
       RowBox[{"ModifiedCentralBinomialCoefficient", "[", "#", "]"}]}], 
      "|>"}], "&"}], "]"}], "[", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "21"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997484150227227`*^9, 3.8997484239360027`*^9}},
 CellLabel->"In[958]:=",
 CellID->398286937,ExpressionUUID->"3981f08a-a266-4abb-a862-b0e114c10814"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      0 -> <|"n" -> 1|>, 1 -> <|"n" -> 1|>, 2 -> <|"n" -> 2|>, 
       3 -> <|"n" -> 3|>, 4 -> <|"n" -> 6|>, 5 -> <|"n" -> 10|>, 
       6 -> <|"n" -> 20|>, 7 -> <|"n" -> 35|>, 8 -> <|"n" -> 70|>, 
       9 -> <|"n" -> 126|>, 10 -> <|"n" -> 252|>, 11 -> <|"n" -> 462|>, 
       12 -> <|"n" -> 924|>, 13 -> <|"n" -> 1716|>, 14 -> <|"n" -> 3432|>, 
       15 -> <|"n" -> 6435|>, 16 -> <|"n" -> 12870|>, 17 -> <|"n" -> 24310|>, 
       18 -> <|"n" -> 48620|>, 19 -> <|"n" -> 92378|>, 
       20 -> <|"n" -> 184756|>, 21 -> <|"n" -> 352716|>|>, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[11]} -> 1, {All, "n"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 1, {All}]]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n"}, {
         TypeSystem`Atom[Integer]}], 22], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[11]} -> 1, {All, "n"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 1, {All}]]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n"}, {
         TypeSystem`Atom[Integer]}], 22], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 1, "DataRowCount" -> 22, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["n", 
                  Style[
                  "n", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "n"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "n"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["70"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["126"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["252"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["11"], 
                  Style[
                   RawBoxes["11"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[11]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["462"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["12"], 
                  Style[
                   RawBoxes["12"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[12]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["924"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["13"], 
                  Style[
                   RawBoxes["13"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[13]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1716"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["14"], 
                  Style[
                   RawBoxes["14"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[14]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["15"], 
                  Style[
                   RawBoxes["15"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[15]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6435"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["16"], 
                  Style[
                   RawBoxes["16"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[16]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12870"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["17"], 
                  Style[
                   RawBoxes["17"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[17]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24310"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["18"], 
                  Style[
                   RawBoxes["18"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[18]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48620"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["19"], 
                  Style[
                   RawBoxes["19"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[19]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["92378"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{167., {299.8544921875, 305.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{167., {299.8544921875, 305.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.899748417919546*^9, 3.8997484245594244`*^9}},
 CellLabel->"Out[958]=",
 CellID->52134645,ExpressionUUID->"ae81a371-746d-4db3-8569-2cdc530451cb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The generating function is  ",
 Cell[BoxData[
  FractionBox[
   RowBox[{"1", "-", 
    RowBox[{"4", 
     SuperscriptBox["x", "2"]}], "-", 
    SqrtBox[
     RowBox[{"1", "-", 
      RowBox[{"4", 
       SuperscriptBox["x", "2"]}]}]]}], 
   RowBox[{"2", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", 
       SuperscriptBox["x", "3"]}], "-", 
      SuperscriptBox["x", "2"]}], ")"}]}]]], "Input",
  CellChangeTimes->{{3.899748705369384*^9, 3.8997487177386065`*^9}},
  ExpressionUUID->"196301bb-b992-4b2a-984c-ba30bd9726e4"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.8997485285983276`*^9, 3.8997485425858026`*^9}, {
  3.899748699828844*^9, 3.899748721088228*^9}, {3.8997487739717274`*^9, 
  3.8997487739717274`*^9}},
 CellID->254962743,ExpressionUUID->"bd50a358-8472-43db-92f1-56cedce74600"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SeriesCoefficient", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"1", "-", 
     RowBox[{"4", 
      SuperscriptBox["x", "2"]}], "-", 
     SqrtBox[
      RowBox[{"1", "-", 
       RowBox[{"4", 
        SuperscriptBox["x", "2"]}]}]]}], 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", 
        SuperscriptBox["x", "3"]}], "-", 
       SuperscriptBox["x", "2"]}], ")"}]}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"9", "-", "1"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.899748705369384*^9, 3.899748800970345*^9}},
 CellLabel->"In[978]:=",
 CellID->208306947,ExpressionUUID->"267bdab1-9ef9-4c49-b84e-33848c84d88e"],

Cell[BoxData["126"], "Output",
 CellChangeTimes->{{3.8997487419944305`*^9, 3.8997488023627462`*^9}},
 CellLabel->"Out[978]=",
 CellID->2750224,ExpressionUUID->"cb1ae230-d39e-470b-a545-a1d1657fe595"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["This matches our output.", "MathCaption",
 CellChangeTimes->{{3.899748807336094*^9, 3.899748813611977*^9}},
 CellID->48756516,ExpressionUUID->"38bf2122-d295-44fe-b7d6-2b0ba09be970"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<n\>\"", "->", 
        RowBox[{"ModifiedCentralBinomialCoefficient", "[", "#", "]"}]}], ",", 
       
       RowBox[{"\"\<seriesCoefficient\>\"", "->", 
        RowBox[{"SeriesCoefficient", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"1", "-", 
            RowBox[{"4", 
             SuperscriptBox["x", "2"]}], "-", 
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{"4", 
               SuperscriptBox["x", "2"]}]}]]}], 
           RowBox[{"2", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", 
               SuperscriptBox["x", "3"]}], "-", 
              SuperscriptBox["x", "2"]}], ")"}]}]], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", 
            RowBox[{"#", "-", "1"}]}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<equal\>\"", "->", 
        RowBox[{
         RowBox[{"ModifiedCentralBinomialCoefficient", "[", "#", "]"}], "===", 
         RowBox[{"SeriesCoefficient", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"1", "-", 
             RowBox[{"4", 
              SuperscriptBox["x", "2"]}], "-", 
             SqrtBox[
              RowBox[{"1", "-", 
               RowBox[{"4", 
                SuperscriptBox["x", "2"]}]}]]}], 
            RowBox[{"2", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", 
                SuperscriptBox["x", "3"]}], "-", 
               SuperscriptBox["x", "2"]}], ")"}]}]], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", 
             RowBox[{"#", "-", "1"}]}], "}"}]}], "]"}]}]}]}], "|>"}], "&"}], 
    "]"}], "[", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "21"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997488260575113`*^9, 3.899748876670103*^9}},
 CellLabel->"In[980]:=",
 CellID->415836666,ExpressionUUID->"2641e297-6863-4235-8bc2-47fc51ba52c5"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      0 -> <|"n" -> 1, "seriesCoefficient" -> 0, "equal" -> False|>, 
       1 -> <|"n" -> 1, "seriesCoefficient" -> 1, "equal" -> True|>, 
       2 -> <|"n" -> 2, "seriesCoefficient" -> 2, "equal" -> True|>, 
       3 -> <|"n" -> 3, "seriesCoefficient" -> 3, "equal" -> True|>, 
       4 -> <|"n" -> 6, "seriesCoefficient" -> 6, "equal" -> True|>, 
       5 -> <|"n" -> 10, "seriesCoefficient" -> 10, "equal" -> True|>, 
       6 -> <|"n" -> 20, "seriesCoefficient" -> 20, "equal" -> True|>, 
       7 -> <|"n" -> 35, "seriesCoefficient" -> 35, "equal" -> True|>, 
       8 -> <|"n" -> 70, "seriesCoefficient" -> 70, "equal" -> True|>, 
       9 -> <|"n" -> 126, "seriesCoefficient" -> 126, "equal" -> True|>, 
       10 -> <|"n" -> 252, "seriesCoefficient" -> 252, "equal" -> True|>, 
       11 -> <|"n" -> 462, "seriesCoefficient" -> 462, "equal" -> True|>, 
       12 -> <|"n" -> 924, "seriesCoefficient" -> 924, "equal" -> True|>, 
       13 -> <|"n" -> 1716, "seriesCoefficient" -> 1716, "equal" -> True|>, 
       14 -> <|"n" -> 3432, "seriesCoefficient" -> 3432, "equal" -> True|>, 
       15 -> <|"n" -> 6435, "seriesCoefficient" -> 6435, "equal" -> True|>, 
       16 -> <|"n" -> 12870, "seriesCoefficient" -> 12870, "equal" -> True|>, 
       17 -> <|"n" -> 24310, "seriesCoefficient" -> 24310, "equal" -> True|>, 
       18 -> <|"n" -> 48620, "seriesCoefficient" -> 48620, "equal" -> True|>, 
       19 -> <|"n" -> 92378, "seriesCoefficient" -> 92378, "equal" -> True|>, 
       20 -> <|"n" -> 184756, "seriesCoefficient" -> 184756, "equal" -> 
         True|>, 21 -> <|
        "n" -> 352716, "seriesCoefficient" -> 352716, "equal" -> True|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[13]} -> 1, {All, "n"} -> 
        1, {All, "seriesCoefficient"} -> 1, {All, "equal"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34], "seriesCoefficient" -> 
             TypeSystem`PackageScope`AtomShape[34], "equal" -> 
             TypeSystem`PackageScope`AtomShape[36]|>], 
           DirectedInfinity[1], 3, {All}]]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n", "seriesCoefficient", "equal"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 22], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[13]} -> 1, {All, "n"} -> 
        1, {All, "seriesCoefficient"} -> 1, {All, "equal"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34], "seriesCoefficient" -> 
             TypeSystem`PackageScope`AtomShape[34], "equal" -> 
             TypeSystem`PackageScope`AtomShape[36]|>], 
           DirectedInfinity[1], 3, {All}]]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n", "seriesCoefficient", "equal"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 22], "Path" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     22, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["n", 
                  Style[
                  "n", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "n"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "n"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["seriesCoefficient", 
                  Style[
                  "seriesCoefficient", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "seriesCoefficient"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "seriesCoefficient"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["equal", 
                  Style[
                  "equal", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "equal"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "equal"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["70"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["70"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["126"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["126"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["252"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["252"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["11"], 
                  Style[
                   RawBoxes["11"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[11]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["462"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["462"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["12"], 
                  Style[
                   RawBoxes["12"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[12]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["924"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["924"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["13"], 
                  Style[
                   RawBoxes["13"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[13]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1716"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1716"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["14"], 
                  Style[
                   RawBoxes["14"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[14]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["15"], 
                  Style[
                   RawBoxes["15"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[15]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6435"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6435"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["16"], 
                  Style[
                   RawBoxes["16"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[16]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12870"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12870"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["17"], 
                  Style[
                   RawBoxes["17"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[17]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24310"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24310"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["18"], 
                  Style[
                   RawBoxes["18"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[18]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48620"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48620"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["19"], 
                  Style[
                   RawBoxes["19"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[19]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["92378"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["92378"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{256., {299.8544921875, 305.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{256., {299.8544921875, 305.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8997488503458753`*^9, 3.899748877365996*^9}},
 CellLabel->"Out[980]=",
 CellID->14127691,ExpressionUUID->"5599e82a-0cd2-4e01-ab51-4e33be1716e4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
If we start at 1, we will get all True instead of a False at 0.\
\>", "MathCaption",
 CellChangeTimes->{{3.8997488812603807`*^9, 3.8997488916654415`*^9}},
 CellID->699600308,ExpressionUUID->"2da1dd1c-e47f-4ea8-b8ba-bcf09aa5bd9d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<n\>\"", "->", 
        RowBox[{"ModifiedCentralBinomialCoefficient", "[", "#", "]"}]}], ",", 
       RowBox[{"\"\<seriesCoefficient\>\"", "->", 
        RowBox[{"SeriesCoefficient", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"1", "-", 
            RowBox[{"4", 
             SuperscriptBox["x", "2"]}], "-", 
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{"4", 
               SuperscriptBox["x", "2"]}]}]]}], 
           RowBox[{"2", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", 
               SuperscriptBox["x", "3"]}], "-", 
              SuperscriptBox["x", "2"]}], ")"}]}]], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", 
            RowBox[{"#", "-", "1"}]}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<equal\>\"", "->", 
        RowBox[{
         RowBox[{"ModifiedCentralBinomialCoefficient", "[", "#", "]"}], "===", 
         RowBox[{"SeriesCoefficient", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"1", "-", 
             RowBox[{"4", 
              SuperscriptBox["x", "2"]}], "-", 
             SqrtBox[
              RowBox[{"1", "-", 
               RowBox[{"4", 
                SuperscriptBox["x", "2"]}]}]]}], 
            RowBox[{"2", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", 
                SuperscriptBox["x", "3"]}], "-", 
               SuperscriptBox["x", "2"]}], ")"}]}]], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", 
             RowBox[{"#", "-", "1"}]}], "}"}]}], "]"}]}]}]}], "|>"}], "&"}], 
    "]"}], "[", 
   RowBox[{"Range", "[", 
    RowBox[{"2", ",", "21"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.899748892320259*^9, 3.8997488971939325`*^9}},
 CellLabel->"In[981]:=",
 CellID->6091911,ExpressionUUID->"acc42a94-28db-43b7-b697-59374793c6c2"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      2 -> <|"n" -> 2, "seriesCoefficient" -> 2, "equal" -> True|>, 
       3 -> <|"n" -> 3, "seriesCoefficient" -> 3, "equal" -> True|>, 
       4 -> <|"n" -> 6, "seriesCoefficient" -> 6, "equal" -> True|>, 
       5 -> <|"n" -> 10, "seriesCoefficient" -> 10, "equal" -> True|>, 
       6 -> <|"n" -> 20, "seriesCoefficient" -> 20, "equal" -> True|>, 
       7 -> <|"n" -> 35, "seriesCoefficient" -> 35, "equal" -> True|>, 
       8 -> <|"n" -> 70, "seriesCoefficient" -> 70, "equal" -> True|>, 
       9 -> <|"n" -> 126, "seriesCoefficient" -> 126, "equal" -> True|>, 
       10 -> <|"n" -> 252, "seriesCoefficient" -> 252, "equal" -> True|>, 
       11 -> <|"n" -> 462, "seriesCoefficient" -> 462, "equal" -> True|>, 
       12 -> <|"n" -> 924, "seriesCoefficient" -> 924, "equal" -> True|>, 
       13 -> <|"n" -> 1716, "seriesCoefficient" -> 1716, "equal" -> True|>, 
       14 -> <|"n" -> 3432, "seriesCoefficient" -> 3432, "equal" -> True|>, 
       15 -> <|"n" -> 6435, "seriesCoefficient" -> 6435, "equal" -> True|>, 
       16 -> <|"n" -> 12870, "seriesCoefficient" -> 12870, "equal" -> True|>, 
       17 -> <|"n" -> 24310, "seriesCoefficient" -> 24310, "equal" -> True|>, 
       18 -> <|"n" -> 48620, "seriesCoefficient" -> 48620, "equal" -> True|>, 
       19 -> <|"n" -> 92378, "seriesCoefficient" -> 92378, "equal" -> True|>, 
       20 -> <|"n" -> 184756, "seriesCoefficient" -> 184756, "equal" -> 
         True|>, 21 -> <|
        "n" -> 352716, "seriesCoefficient" -> 352716, "equal" -> True|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[14]} -> 1, {All, "n"} -> 
        1, {All, "seriesCoefficient"} -> 1, {All, "equal"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34], "seriesCoefficient" -> 
             TypeSystem`PackageScope`AtomShape[34], "equal" -> 
             TypeSystem`PackageScope`AtomShape[36]|>], 
           DirectedInfinity[1], 3, {All}]]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n", "seriesCoefficient", "equal"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 20], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[14]} -> 1, {All, "n"} -> 
        1, {All, "seriesCoefficient"} -> 1, {All, "equal"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34], "seriesCoefficient" -> 
             TypeSystem`PackageScope`AtomShape[34], "equal" -> 
             TypeSystem`PackageScope`AtomShape[36]|>], 
           DirectedInfinity[1], 3, {All}]]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n", "seriesCoefficient", "equal"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 20], "Path" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     20, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["n", 
                  Style[
                  "n", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "n"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "n"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["seriesCoefficient", 
                  Style[
                  "seriesCoefficient", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "seriesCoefficient"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "seriesCoefficient"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["equal", 
                  Style[
                  "equal", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "equal"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "equal"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["70"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["70"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["126"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["126"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["252"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["252"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["11"], 
                  Style[
                   RawBoxes["11"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[11]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["462"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["462"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["12"], 
                  Style[
                   RawBoxes["12"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[12]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["924"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["924"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["13"], 
                  Style[
                   RawBoxes["13"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[13]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1716"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1716"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["14"], 
                  Style[
                   RawBoxes["14"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[14]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["15"], 
                  Style[
                   RawBoxes["15"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[15]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6435"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6435"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["16"], 
                  Style[
                   RawBoxes["16"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[16]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12870"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12870"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["17"], 
                  Style[
                   RawBoxes["17"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[17]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24310"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24310"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["18"], 
                  Style[
                   RawBoxes["18"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[18]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48620"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48620"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["19"], 
                  Style[
                   RawBoxes["19"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[19]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["92378"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["92378"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["20"], 
                  Style[
                   RawBoxes["20"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[20]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["184756"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["184756"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["21"], 
                  Style[
                   RawBoxes["21"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[21]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[21]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["352716"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[21], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["352716"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[21], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[21], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{245., {289.3544921875, 294.6455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{245., {289.3544921875, 294.6455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8997488976810503`*^9},
 CellLabel->"Out[981]=",
 CellID->222447527,ExpressionUUID->"350cacfc-f3d9-4328-978d-e8b694387e77"]
}, Open  ]]
}, Closed]],

Cell[TextData[{
 "For more details, please visit ",
 ButtonBox["A001405",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://oeis.org/A001405"], None},
  ButtonNote->"https://oeis.org/A001405"],
 " on the ",
 ButtonBox["OEIS",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.oeis.org"], None},
  ButtonNote->"https://www.oeis.org"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.8997489380730906`*^9, 3.8997489629415245`*^9}},
 CellID->259341750,ExpressionUUID->"563f31ea-55ed-4d75-ab9b-003c901d5d2b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Derangements", "Section",
 CellChangeTimes->{{3.900001716707399*^9, 3.900001718337079*^9}},
 CellID->468515064,ExpressionUUID->"8f4cfabc-dce5-4c88-b354-6d94488bc0ec"],

Cell[CellGroupData[{

Cell["\<\
A derangement is a permutation in which none of the objects appear in their \
\"natural\" (i.e., ordered) place. For example, the derangements of {1,2,3}:\
\>", "MathCaption",
 CellChangeTimes->{{3.900001719532407*^9, 3.900001761585744*^9}},
 CellID->26838858,ExpressionUUID->"25a2f533-8afc-4b3c-aede-acf63b70597b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MultisetPartialDerangements", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.900001762302565*^9, 3.900001765800146*^9}},
 CellLabel->"In[80]:=",
 CellID->320045123,ExpressionUUID->"4455d744-25af-483a-ab40-62fc0937d666"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9000017661219664`*^9},
 CellLabel->"Out[80]=",
 CellID->144098166,ExpressionUUID->"3b26dff5-133d-4ef0-bf76-01aa3f3f35c3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Derangements of four elements:", "MathCaption",
 CellChangeTimes->{{3.900001773766389*^9, 3.9000017799101334`*^9}},
 CellID->502664438,ExpressionUUID->"d04fe5e1-0714-429c-a3e2-efbf84935857"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MultisetPartialDerangements", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.900001762302565*^9, 3.900001781585379*^9}},
 CellLabel->"In[81]:=",
 CellID->460674117,ExpressionUUID->"47780729-629f-4d5f-acd1-c6eac089fef1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "2", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9000017819345193`*^9},
 CellLabel->"Out[81]=",
 CellID->567622007,ExpressionUUID->"806c4663-4a79-4798-91e2-24770e3ecbcd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The have no cycles of length one.", "MathCaption",
 CellChangeTimes->{{3.9000017880964217`*^9, 3.9000017931595216`*^9}},
 CellID->318945664,ExpressionUUID->"5701f91e-7e0d-4917-a8b9-7708f920be97"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PermutationCycles", "/@", 
  RowBox[{"MultisetPartialDerangements", "[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9000017949864397`*^9, 3.9000018055689974`*^9}},
 CellLabel->"In[83]:=",
 CellID->228472135,ExpressionUUID->"f35939f1-9467-4a9e-aeae-0ac0fee32aa9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Cycles", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
   RowBox[{"Cycles", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "}"}], "]"}], ",", 
   RowBox[{"Cycles", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "4", ",", "3"}], "}"}], "}"}], "]"}], ",", 
   RowBox[{"Cycles", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "4", ",", "2"}], "}"}], "}"}], "]"}], ",", 
   RowBox[{"Cycles", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
   RowBox[{"Cycles", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "2", ",", "4"}], "}"}], "}"}], "]"}], ",", 
   RowBox[{"Cycles", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4", ",", "3", ",", "2"}], "}"}], "}"}], "]"}], ",", 
   RowBox[{"Cycles", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4", ",", "2", ",", "3"}], "}"}], "}"}], "]"}], ",", 
   RowBox[{"Cycles", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9000018008516097`*^9, 3.9000018058494134`*^9}},
 CellLabel->"Out[83]=",
 CellID->167688184,ExpressionUUID->"d36e98bf-2add-4311-85d7-52f5863d6454"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Apply", "[", "Identity", "]"}], "[", 
    RowBox[{"PermutationCycles", "[", "derangement", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"derangement", ",", 
     RowBox[{"MultisetPartialDerangements", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "]"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.900001816706499*^9, 3.9000018433125334`*^9}},
 CellLabel->"In[84]:=",
 CellID->498538805,ExpressionUUID->"41624195-a6e6-44e3-8e0a-57c6790425ed"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "4", ",", "3"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3", ",", "4", ",", "2"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3", ",", "2", ",", "4"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "4", ",", "3", ",", "2"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "4", ",", "2", ",", "3"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9000018437067103`*^9},
 CellLabel->"Out[84]=",
 CellID->488440420,ExpressionUUID->"75df63de-643c-4547-88a9-701e87b5059e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["This is one way to find derangements.", "MathCaption",
 CellChangeTimes->{{3.9000018804089394`*^9, 3.9000018875583515`*^9}},
 CellID->30430800,ExpressionUUID->"2b54ecbc-a10b-4b91-9653-1b0a6026c258"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MathWorldDerangements", "[", 
   RowBox[{"l_List", "?", "ListQ"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"perms", ",", "support"}], "}"}], ",", 
    RowBox[{
     RowBox[{"perms", "=", 
      RowBox[{"Permutations", "[", "l", "]"}]}], ";", 
     RowBox[{"support", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"PermutationSupport", "[", "perm", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"perm", ",", "perms"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"Pick", "[", 
      RowBox[{"perms", ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Length", "[", "perm", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"perm", ",", "support"}], "}"}]}], "]"}], ",", 
       RowBox[{"Length", "[", "l", "]"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9000018756561522`*^9, 3.9000019800611525`*^9}},
 CellLabel->"In[85]:=",
 CellID->338626900,ExpressionUUID->"80aee334-7f65-4353-bb1a-185d9178d61e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The support of a permutation ",
 Cell[BoxData[
  StyleBox["perm", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "5812f9fa-f953-47fa-b0e0-ea40a5e0d117"],
 " is the list of integers that are not fixed by ",
 Cell[BoxData[
  StyleBox["perm", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "5a916891-8a05-4436-856f-f1f50d6aea8a"],
 "."
}], "MathCaption",
 CellChangeTimes->{3.9000019951394978`*^9},
 CellID->33966879,ExpressionUUID->"688cd8b4-68ba-40f0-8577-1497a1c6709d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MathWorldDerangements", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.900001998444933*^9, 3.9000020053189926`*^9}},
 CellLabel->"In[86]:=",
 CellID->463235003,ExpressionUUID->"45aa8478-c27d-4605-a540-afc2ab20ae16"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.900002005678287*^9},
 CellLabel->"Out[86]=",
 CellID->130931456,ExpressionUUID->"76f48552-e3e9-4e30-ae22-490c81a9b56c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MathWorldDerangements", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.900001998444933*^9, 3.900002008204274*^9}},
 CellLabel->"In[87]:=",
 CellID->220685702,ExpressionUUID->"6bcdafe3-9b04-48a2-a43e-70dd3fe54d0e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "2", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9000020085724945`*^9},
 CellLabel->"Out[87]=",
 CellID->529899974,ExpressionUUID->"45a16a00-9b44-4196-a5b7-dd46c44cc127"]
}, Open  ]]
}, Open  ]],

Cell["\<\
A more efficient algorithm would not generate all the permutations and then \
pick the derangements, but instead just generate the derangements.\
\>", "MathCaption",
 CellChangeTimes->{{3.900002015940313*^9, 3.9000020454361534`*^9}},
 CellID->667234787,ExpressionUUID->"da8b13e2-b463-4a54-aa61-8adf809b2bad"],

Cell[CellGroupData[{

Cell[TextData[{
 "Make a random multiset of the ",
 ButtonBox["hazel",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.color-name.com/hazel.color"], None},
  ButtonNote->"https://www.color-name.com/hazel.color"],
 " color rainbow palette. My eye-color is hazel."
}], "MathCaption",
 CellChangeTimes->{{3.8997489871714535`*^9, 3.8997489916544557`*^9}, {
  3.8997490704101877`*^9, 3.8997490920400324`*^9}, {3.8999993782318583`*^9, 
  3.8999993858835297`*^9}},
 CellID->20786854,ExpressionUUID->"4c803681-4fbd-46ab-9275-3f2628f789b1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hazelRainbowPalette", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"LUVColor", "[", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"\"\<#\>\"", "<>", "color"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"color", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<c9c789\>\"", ",", "\"\<94c989\>\"", ",", "\"\<89c9b5\>\"", ",", 
        "\"\<89a7c9\>\"", ",", "\"\<c989b9\>\"", ",", "\"\<c99089\>\""}], 
       "}"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8997490958088837`*^9, 3.8997491771133757`*^9}, {
  3.899749211475692*^9, 3.8997492176574*^9}},
 CellLabel->"In[20]:=",
 CellID->712923585,ExpressionUUID->"cc518051-0b47-4527-be52-615a2377de4f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|
    "color" -> LUVColor[
      0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7621596783781963, -0.3310170840401606, 0.08359158699165539]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.6713375885659421, -0.17833924308420873`, -0.26467794346262646`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"]}], "}"}]], "Output",
 CellChangeTimes->{{3.8997491597998548`*^9, 3.8997491774983788`*^9}, 
   3.8997492179964013`*^9, 3.89975638797796*^9, 3.8999993766673307`*^9, 
   3.900004535884571*^9},
 CellLabel->"Out[20]=",
 CellID->241317559,ExpressionUUID->"8e3978c4-3cd5-4682-a41c-07c7bc826c3d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Let's find all the permutations where every element has moved. If an element \
stays in place, we name that a fixed point. A derangement is a permutation \
with 0 fixed points.\
\>", "MathCaption",
 CellChangeTimes->{{3.8999994605599117`*^9, 3.89999948938451*^9}},
 CellID->122464914,ExpressionUUID->"b2cab360-7f8e-4cb9-9c34-d8df9cad1965"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"smallerset", "=", 
  RowBox[{"RandomSample", "[", 
   RowBox[{"hazelRainbowPalette", ",", "4"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.899999489992942*^9, 3.8999994955304327`*^9}},
 CellLabel->"In[73]:=",
 CellID->435070527,ExpressionUUID->"2ea0defc-cf50-4ff4-93b4-f1b4111c4338"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|
    "color" -> LUVColor[
      0.7621596783781963, -0.3310170840401606, 0.08359158699165539]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.6713375885659421, -0.17833924308420873`, -0.26467794346262646`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8999994959641266`*^9, {3.900005885580785*^9, 3.9000059162688475`*^9}},
 CellLabel->"Out[73]=",
 CellID->680836109,ExpressionUUID->"6ddd95b4-e337-4810-a8a6-a8ad8e16fdd3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"MultisetPartialDerangements", "[", "smallerset", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.899999497895197*^9, 3.8999995033378725`*^9}, {
  3.9000058994078913`*^9, 3.9000059016331882`*^9}},
 CellLabel->"In[74]:=",
 CellID->57678985,ExpressionUUID->"f25ef3fa-9f61-49df-9215-52fe614f2ace"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnTFuG1cQQIWkSRkdIXcQkLSphFQBHAQs1MROHIONDdgGAl9AwHYuXOgG
PAFPoIodL8Ab6A7MjwkohKRdzf/zd/hn/nvYBI68+POzb2Y4FJbLH169e/H3
N2dnZx++S/968fKfn9+/f/npt+/Tf/z+9sPyzdvXf/3y9uPrN6/f//Tq2/TD
H9M/v6Y//PfnPQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiNntdovF
YrlcKs8Bew5Skp05Fkd6s+C9T/DeJ7N6h35IibTdbgvOuXp3nXVoNnl1/Snr
0MT68/oq69DEuv7jKut4vELykuxo9jDGWGJYetdfHzmW3vX5HNu7LxdyPNa7
ZQ1G7fP62pnPO/TD5eVl2TkpJ4fVRnjoh71hsxYe+ibwZTMID/2wt/k8CI+x
RioxWMDYspbeq1wfIZbeq+RzYO/uXAjxWO+WNRi1z1epnZm8Qz8w7D2AYW96
WYa9RgaMwN7duRDisd4Z9hj2IAYMew9g2JtelmGvkQEjsHd3LoR4rHeGPYY9
iAHD3gMY9qaXZdhrZMAI7N2dCyEe651hj2EPYsCw9wCGvellGfYaGTACe3fn
QojHemfYY9gD72y32+VyOf1R3IlzGPYaGfYkHrOYXpBhr5EBI7B3dy6EeKx3
hr1Ghr3q3qEfVqtVSp67u7uycxj2Ghn2kp3kKJnS7OSY6cRg2GtkwAjs3Z0L
IR7rnWGvkWGvunfoipQ/zz69Z+wcfQLf3NwIU1ffBOSx9E1AHqtKI012pid2
+X7umUgMS+/669Om9yovaoG9+3IRu94tazBqn68y7M3hHbriVPfspcw8+8ow
DM9uQNkEsmIpm0BWLIN7eLL2I1nW0rvy+jTr3eCePdfeHbkIX++WNRi1zxvc
s1fsHfrhVMPe7e3tITklG1A2gaxYyiaQFcug+WftR7KspXfl9WnWu8Gw59q7
Ixfh692yBqP2eYNhr9g79MMJP427WCxSckq+jVH/4iiPpf/1vjyWzafz5PuR
LGvpXX992vRu82lcv959uYhd75Y1GLXP23wat8w79IP9sLfb7YZhOGRmIr0l
eXYDxU2gIFZxEyiINWvzL9iPZFlL78XXp3Hvsw57Aby7cNFJvVvWYNQ+P+uw
p/QO/ZBSaPq2z7FzihP4/hfO5+fnc9+4WxCruAkUxNI3/+RlrAkU7OeYscSw
9F58fRr3rh/2Ynt34aKTereswah9Xj/szecd+iGlysXFxfRdnU+eo3ynv16v
nx0y/4+le8eXFUv5ji8rlrL5p3DJy1iBF+znmLHEsPSu/K1Cs96Vw1547y5c
dFLvljUYtc8rh71ZvUNvSB7V+OAcnrP35dTP2TN4wObjEDxnT+9dmc/hvTty
kYXHeuc5exVyTFc7PEgZTkvKyaxDFev6U9ahiZXqOuvQxEq9MevQxKqFpXfL
62Pp3TKfa2HpPaoLj/Vuueeofd6ydgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaY7fbLRaL5XJ56o3A
Qw5ekqA5Fsd7s+C9T/DeJ3jvE4n3urmRVttut49/zpfU67+MW/8F2UlNEqTZ
wxjdeTf8snJ9jtl7pwb13vW1E9u7ZW/xlWN4r+Y9XJ+vmBuXl5dP/jxd883n
QXjoX/S/bAbhoX+hGTZr4aFvAsNqIzzGEm9MkJLuvNdwIY1VI8eMvVODeu9V
aiewd8ve4i7H8F7He8Q+Xys3unvRpwlMLhvWe8QmUEALzd9dDQph2JuGYa+d
Ph/We8Q+z7BXBk1getmw3iM2gQJaaP7ualAIw940DHvt9Pmw3iP2eYa9MmgC
08uG9R6xCRTQQvN3V4NCGPamYdhrp8+H9R6xzzPslUETmF42rPeITaCAFpq/
uxoUwrA3DcNeO30+rPeIfV6fG9vtdrlcPvlRnX3gF31vTWBaUwGdevfWBIy9
U4ONDHuBvTPstdPnw3qP2Of1ubFardIKd3d3T/5t2Bd9b00gCUqakizNTo7p
1Lu3JmDsnRpsZNgL7J1hr50+H9Z7xD5fJTfSImOPcNELurm5EW5Pn3jyWHpB
GbFqJF4SNFawufu5p0fvaheWObY3904N6r1XeVEL7N2yt/jKsT3ea3kP1+eF
50iY6d6tdMXOvjIMw7N7UCZeViyloLxY89/LkbUfybJhvetcWObYAWPv1KDe
u8E9e669W/YWRzl2AO91vMfq8/JzJMz0on97e3u4aJJ9KhMvK5ZSUF6s+ZtA
1n4ky4b1rnNhmWMHjL1Tg3rvBsOea++WvcVRjh3Aex3vsfq8/BwJ830qc7FY
pIsm+VY+/a+U5bH0gjJimXxKS74fybJhvatdWObY3tw7Naj3bvNpXL/eLXuL
rxzb472W93B9XniOhOov+rvdbhiGwxVLpFH52T0UJ15BrGJBJbHmbAIF+5Es
G9Z7qQvLHDvG2Ds1qPc+67AXwLtlb3GRY8fgvY73KH0+9xwJaZ0n7/0rFnT/
i9Dz8/O5b9QviFUsqCSWugkkNWOiC/ZzTHfeS11Y5tg99t6pQb13/bAX27tl
b3GRY/fgvZr3KH0+6xwh6f/x4uLi8e2Iyml8vV7LPz+ifJeRFUv5ji8vlq4J
pHBJzVjiFeznmO68697x2eTYgZN4pwb13pXDXnjvlr3FRY4dwHtN71H6vPyc
XB4/ry/s89b8PH+p4gM2x+jIu5/nL53EOzWo966snfDeec5eO30+rPdYfd4g
N/ZfBWUdmlgpl7IOTax0zbMOVax311mHJlYtwno3dGGZY7WgBvXeLWunFpbe
La9P1ByrRVjv9HkAAAAAAAAAAABomH8B83lHbw==
    "], {{0, 33.}, {508.2, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{508.2, 33.},
  PlotRange->{{0, 508.2}, {0, 33.}}]], "Output",
 CellChangeTimes->{
  3.8999995035773416`*^9, {3.9000058957072554`*^9, 3.900005920405921*^9}},
 CellLabel->"Out[74]=",
 CellID->286795089,ExpressionUUID->"48374ff9-80d3-4199-bf5d-33df1cf54901"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["What is the length?", "MathCaption",
 CellChangeTimes->{{3.8999995068329773`*^9, 3.899999510003465*^9}},
 CellID->169212145,ExpressionUUID->"b5db532c-5b12-428a-8047-8d7ed3ec3697"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"MultisetPartialDerangements", "[", "smallerset", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8999995106824245`*^9, 3.899999511928542*^9}},
 CellLabel->"In[75]:=",
 CellID->228145050,ExpressionUUID->"29b12264-aa72-4b91-950e-204a57731fae"],

Cell[BoxData["9"], "Output",
 CellChangeTimes->{3.89999951223448*^9, 3.900005924854972*^9},
 CellLabel->"Out[75]=",
 CellID->41944856,ExpressionUUID->"1b9b0e4e-2f35-4976-8786-f12da0890e2b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Subfactorial", "Subsection",
 CellChangeTimes->{{3.9000060446289835`*^9, 3.900006046359832*^9}},
 CellID->65054791,ExpressionUUID->"7964692a-f66d-43d8-bd6e-31183ceaad41"],

Cell[CellGroupData[{

Cell["\<\
How can we compute the length faster and more efficiently? We can compute \
this with the subfactorial. The subfactorial is written ! n. The subfactorial \
is also called the derangement number for this reason. The nth subfactorial \
is the number of permutations of n objects in which no object appears in its \
natural place (i. e., \"derangements\").\
\>", "MathCaption",
 CellChangeTimes->{{3.899999513424281*^9, 3.8999995447138405`*^9}, {
  3.8999997145466285`*^9, 3.899999727745224*^9}, {3.8999998001117473`*^9, 
  3.8999998244090023`*^9}},
 CellID->388376040,ExpressionUUID->"e46c66a5-2766-4954-9944-b13364048067"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "smallerset", "]"}]], "Input",
 CellChangeTimes->{{3.8999997372328978`*^9, 3.899999740040417*^9}},
 CellLabel->"In[38]:=",
 CellID->131012795,ExpressionUUID->"30941f9f-c17b-4025-9772-6958f334e206"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.899999740318926*^9},
 CellLabel->"Out[38]=",
 CellID->127222859,ExpressionUUID->"a54c3a5d-cd55-42de-a46d-15ad174eb052"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Subfactorial", "[", 
  RowBox[{"Length", "[", "smallerset", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.899999731550415*^9, 3.899999743174319*^9}},
 CellLabel->"In[39]:=",
 CellID->844247,ExpressionUUID->"ed706a44-1e0c-470f-bb07-e5dc2ff3e781"],

Cell[BoxData["9"], "Output",
 CellChangeTimes->{3.899999743495629*^9},
 CellLabel->"Out[39]=",
 CellID->91695846,ExpressionUUID->"abf2aa04-ea46-4ecb-88f2-0f16b70d15a7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here's a table:", "MathCaption",
 CellChangeTimes->{{3.900000206167984*^9, 3.9000002082387094`*^9}},
 CellID->205495515,ExpressionUUID->"131e48ad-c5e6-463f-9395-427428e2ce8e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Subfactorial", "[", 
  RowBox[{"Range", "[", "10", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.900000212608915*^9, 3.900000214762991*^9}},
 CellLabel->"In[57]:=",
 CellID->13581624,ExpressionUUID->"7370dbc8-be79-4fca-8536-f60e78b6bbdf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "2", ",", "9", ",", "44", ",", "265", ",", "1854", ",", 
   "14833", ",", "133496", ",", "1334961"}], "}"}]], "Output",
 CellChangeTimes->{3.900000215093608*^9},
 CellLabel->"Out[57]=",
 CellID->1801989,ExpressionUUID->"b73e2606-54b0-4022-ad6d-4ed9e37b62d8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Now we can find the number of derangements for a set with many elements.\
\>", "MathCaption",
 CellChangeTimes->{{3.899999747618002*^9, 3.899999761060192*^9}},
 CellID->488934143,ExpressionUUID->"b9520254-c771-4867-9a75-614aa379f44f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Subfactorial", "[", "100", "]"}]], "Input",
 CellChangeTimes->{{3.899999761604085*^9, 3.8999997635205793`*^9}},
 CellLabel->"In[40]:=",
 CellID->52403940,ExpressionUUID->"bfd55d51-7841-4011-9092-e06c75ab8b50"],

Cell[BoxData[\
"34332795984163804765195977526776142032365783805375784983543400282685180793327\
632432791396429850988990237345920155783984828001486412574060553756854137069878\
601"], "Output",
 CellChangeTimes->{3.8999997638379545`*^9},
 CellLabel->"Out[40]=",
 CellID->27588445,ExpressionUUID->"b264de4b-8983-403f-bad7-16aeeed29009"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["We couldn't do this the other way.", "MathCaption",
 CellChangeTimes->{{3.899999765010272*^9, 3.8999997697004747`*^9}},
 CellID->733937479,ExpressionUUID->"f634ca6c-b4f6-43f6-83b3-40a64266a75a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MultisetPartialDerangements", "[", 
  RowBox[{"Range", "[", "100", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.899999770312089*^9, 3.8999997758190117`*^9}},
 CellLabel->"In[41]:=",
 CellID->288697611,ExpressionUUID->"be835312-ef17-42d8-8f5e-91b127dea32d"],

Cell[BoxData[
 TemplateBox[{
  "Permutations", "fac", 
   "\"In \\!\\(\\*RowBox[{\\\"Permutations\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \
\\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"11\\\", \\\",\\\", \\\"12\\\", \\\",\\\", \\\"13\\\", \\\",\\\", \\\"14\\\
\", \\\",\\\", \\\"15\\\", \\\",\\\", \\\"16\\\", \\\",\\\", \\\"17\\\", \
\\\",\\\", \\\"18\\\", \\\",\\\", \\\"19\\\", \\\",\\\", \\\"20\\\", \
\\\",\\\", \\\"21\\\", \\\",\\\", \\\"22\\\", \\\",\\\", \\\"23\\\", \
\\\",\\\", \\\"24\\\", \\\",\\\", \\\"25\\\", \\\",\\\", \\\"26\\\", \
\\\",\\\", \\\"27\\\", \\\",\\\", \\\"28\\\", \\\",\\\", \\\"29\\\", \
\\\",\\\", \\\"30\\\", \\\",\\\", \\\"31\\\", \\\",\\\", \\\"32\\\", \
\\\",\\\", \\\"33\\\", \\\",\\\", \\\"34\\\", \\\",\\\", \\\"35\\\", \
\\\",\\\", \\\"36\\\", \\\",\\\", \\\"37\\\", \\\",\\\", \\\"38\\\", \
\\\",\\\", \\\"39\\\", \\\",\\\", \\\"40\\\", \\\",\\\", \\\"41\\\", \
\\\",\\\", \\\"42\\\", \\\",\\\", \\\"43\\\", \\\",\\\", \\\"44\\\", \
\\\",\\\", \\\"45\\\", \\\",\\\", \\\"46\\\", \\\",\\\", \\\"47\\\", \
\\\",\\\", \\\"48\\\", \\\",\\\", \\\"49\\\", \\\",\\\", \\\"50\\\", \
\\\",\\\", \\\"51\\\", \\\",\\\", \\\"52\\\", \\\",\\\", \\\"53\\\", \
\\\",\\\", \\\"54\\\", \\\",\\\", \\\"55\\\", \\\",\\\", \\\"56\\\", \
\\\",\\\", \\\"57\\\", \\\",\\\", \\\"58\\\", \\\",\\\", \\\"59\\\", \
\\\",\\\", \\\"60\\\", \\\",\\\", \\\"61\\\", \\\",\\\", \\\"62\\\", \
\\\",\\\", \\\"63\\\", \\\",\\\", \\\"64\\\", \\\",\\\", \\\"65\\\", \
\\\",\\\", \\\"66\\\", \\\",\\\", \\\"67\\\", \\\",\\\", \\\"68\\\", \
\\\",\\\", \\\"69\\\", \\\",\\\", \\\"70\\\", \\\",\\\", \\\"71\\\", \
\\\",\\\", \\\"72\\\", \\\",\\\", \\\"73\\\", \\\",\\\", \\\"74\\\", \
\\\",\\\", \\\"75\\\", \\\",\\\", \\\"76\\\", \\\",\\\", \\\"77\\\", \
\\\",\\\", \\\"78\\\", \\\",\\\", \\\"79\\\", \\\",\\\", \\\"80\\\", \
\\\",\\\", \\\"81\\\", \\\",\\\", \\\"82\\\", \\\",\\\", \\\"83\\\", \
\\\",\\\", \\\"84\\\", \\\",\\\", \\\"85\\\", \\\",\\\", \\\"86\\\", \
\\\",\\\", \\\"87\\\", \\\",\\\", \\\"88\\\", \\\",\\\", \\\"89\\\", \
\\\",\\\", \\\"90\\\", \\\",\\\", \\\"91\\\", \\\",\\\", \\\"92\\\", \
\\\",\\\", \\\"93\\\", \\\",\\\", \\\"94\\\", \\\",\\\", \\\"95\\\", \
\\\",\\\", \\\"96\\\", \\\",\\\", \\\"97\\\", \\\",\\\", \\\"98\\\", \
\\\",\\\", \\\"99\\\", \\\",\\\", \\\"100\\\"}], \\\"}\\\"}], \\\"]\\\"}]\\) \
there are at least \\!\\(\\*RowBox[{\\\"21\\\"}]\\) distinct elements in the \
input list, and the requested permutation lengths include one that is at \
least \\!\\(\\*RowBox[{\\\"21\\\"}]\\). The result cannot be computed because \
it has length at least \\!\\(\\*RowBox[{\\\"21\\\"}]\\) factorial, which is \
not a machine integer.\"", 2, 41, 2, 34168874147026512227, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8999997761276746`*^9},
 CellLabel->"During evaluation of In[41]:=",
 CellID->508655313,ExpressionUUID->"eb03a001-eb05-4126-8be1-a47c35a7b8dc"],

Cell[BoxData[
 TemplateBox[{
  "Permutations", "argt", 
   "\"\\!\\(\\*RowBox[{\\\"Permutations\\\"}]\\) called with \
\\!\\(\\*RowBox[{\\\"0\\\"}]\\) arguments; \\!\\(\\*RowBox[{\\\"1\\\"}]\\) or \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"", 2, 41, 3, 
   34168874147026512227, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8999997761757793`*^9},
 CellLabel->"During evaluation of In[41]:=",
 CellID->488314992,ExpressionUUID->"8c315424-6119-4c6a-be76-0118a3361aa9"],

Cell[BoxData[
 TemplateBox[{
  "Permutations", "argt", 
   "\"\\!\\(\\*RowBox[{\\\"Permutations\\\"}]\\) called with \
\\!\\(\\*RowBox[{\\\"0\\\"}]\\) arguments; \\!\\(\\*RowBox[{\\\"1\\\"}]\\) or \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"", 2, 41, 4, 
   34168874147026512227, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8999997761857786`*^9},
 CellLabel->"During evaluation of In[41]:=",
 CellID->360908914,ExpressionUUID->"a70ed6f7-b889-45e0-b65b-fcd4aaee31e5"],

Cell[BoxData[
 RowBox[{"Permutations", "[", "]"}]], "Output",
 CellChangeTimes->{3.8999997761957803`*^9},
 CellLabel->"Out[41]=",
 CellID->45875794,ExpressionUUID->"2ee198b6-fa5d-41a1-bab7-34fc069c743b"]
}, Open  ]]
}, Open  ]],

Cell["Euler calculated the first ten terms of the subfactorial.", \
"MathCaption",
 CellChangeTimes->{{3.8999998337748055`*^9, 3.899999842134406*^9}},
 CellID->101847644,ExpressionUUID->"89c8a6d0-1629-4d05-86c3-7f1dce4810a9"],

Cell["Here are representations of the subfactorial.", "MathCaption",
 CellChangeTimes->{{3.899999852981732*^9, 3.899999862513861*^9}, {
  3.900000092183587*^9, 3.900000097601494*^9}},
 CellID->211580469,ExpressionUUID->"60d27db5-1fbc-4e2c-a589-58af5e8efd2d"],

Cell[TextData[Cell[BoxData[
 RowBox[{"!", 
  RowBox[{"n", "\[Congruent]", 
   RowBox[{
    RowBox[{"n", "!"}], 
    RowBox[{"(", 
     TemplateBox[{
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "k"], 
        RowBox[{"k", "!"}]], "k", "0", "n"},
      "InactiveSum",
      DisplayFunction->(RowBox[{
         UnderoverscriptBox[
          StyleBox["\[Sum]", "Inactive"], 
          RowBox[{#2, "=", #3}], #4], #}]& ),
      InterpretationFunction->(RowBox[{
         RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
         RowBox[{#, ",", 
           RowBox[{"{", 
             RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )], 
     ")"}]}]}]}]], \
"InlineFormula",ExpressionUUID->"6d15bf91-f7e7-4bfe-aeb0-7e7ba979e64a"]], \
"MathCaption",
 CellChangeTimes->{{3.8999998703353233`*^9, 3.8999999083280025`*^9}},
 CellID->247846069,ExpressionUUID->"d141e79b-8e3d-45b9-84ae-d63e372347fc"],

Cell[TextData[Cell[BoxData[
 RowBox[{"!", 
  RowBox[{"n", "\[Congruent]", 
   TemplateBox[{
     RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
        RowBox[{
          RowBox[{"-", "k"}], "+", "n"}]], " ", 
       RowBox[{"k", "!"}], 
       FormBox[
        RowBox[{"(", 
          GridBox[{{"n"}, {"k"}}], ")"}], TraditionalForm]}], "k", "0", "n"},
    "InactiveSum",
    DisplayFunction->(RowBox[{
       UnderoverscriptBox[
        StyleBox["\[Sum]", "Inactive"], 
        RowBox[{#2, "=", #3}], #4], #}]& ),
    InterpretationFunction->(RowBox[{
       RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
       RowBox[{#, ",", 
         RowBox[{"{", 
           RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]}]}]], "Input",
 CellChangeTimes->{{3.900000012636448*^9, 
  3.9000000135435376`*^9}},ExpressionUUID->"f15665d8-371b-41a4-998c-\
746e1b139bee"]], "MathCaption",
 CellChangeTimes->{{3.900000032845299*^9, 3.9000000622998285`*^9}},
 CellID->819467623,ExpressionUUID->"28dcdd6a-88d4-4bbe-a344-576de62be056"],

Cell[CellGroupData[{

Cell["\<\
Here we use the incomplete gamma function for the subfactorial.\
\>", "MathCaption",
 CellChangeTimes->{{3.9000000999208097`*^9, 3.900000108064492*^9}},
 CellID->153350675,ExpressionUUID->"22d8fd18-d5ac-4fe8-8cfe-d2923f2de50e"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    TemplateBox[{
      RowBox[{"n", "+", "1"}], 
      RowBox[{"-", "1"}]},
     "Gamma2"], "\[ExponentialE]"], ";"}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.900000072723094*^9, 3.9000000817699757`*^9}},
 CellLabel->"In[49]:=",
 CellID->151625861,ExpressionUUID->"de71060d-ee80-4001-b9fe-96f844497276"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RecurrenceTable", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"subfactorial", "[", "1", "]"}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{"subfactorial", "[", "n", "]"}], "==", 
      RowBox[{
       RowBox[{"n", " ", "*", 
        RowBox[{"subfactorial", "[", 
         RowBox[{"n", "-", "1"}], "]"}]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "n"]}]}]}], "}"}], ",", "subfactorial", 
   ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9000001196612787`*^9, 3.9000001721396823`*^9}, {
  3.900000221153844*^9, 3.90000022924975*^9}},
 CellLabel->"In[58]:=",
 CellID->41007170,ExpressionUUID->"4e696657-b4e1-4707-ab65-b6bb538c2fce"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "2", ",", "9", ",", "44", ",", "265", ",", "1854", ",", 
   "14833", ",", "133496", ",", "1334961"}], "}"}]], "Output",
 CellChangeTimes->{{3.9000001443351784`*^9, 3.9000001871423364`*^9}, 
   3.9000002296746855`*^9},
 CellLabel->"Out[58]=",
 CellID->123741561,ExpressionUUID->"a18f075b-0b45-4eee-b6d8-5f38f33bda61"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["We can solve for the representation of the subfactorial.", "MathCaption",
 CellChangeTimes->{{3.9000003320324445`*^9, 3.9000003409815083`*^9}},
 CellID->107675305,ExpressionUUID->"59e87db0-90ba-4b00-811f-d57ca8f752b1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"subfactorial", "[", "1", "]"}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{"subfactorial", "[", "n", "]"}], "==", 
      RowBox[{
       RowBox[{"n", " ", "*", 
        RowBox[{"subfactorial", "[", 
         RowBox[{"n", "-", "1"}], "]"}]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "n"]}]}]}], "}"}], ",", "subfactorial", 
   ",", "n"}], "]"}]], "Input",
 CellChangeTimes->{{3.9000001196612787`*^9, 3.9000001721396823`*^9}, {
  3.900000221153844*^9, 3.90000022924975*^9}, {3.9000003197300806`*^9, 
  3.9000003271115737`*^9}},
 CellLabel->"In[60]:=",
 CellID->295429183,ExpressionUUID->"b810ec76-1643-4ac8-9775-7b8e961d8af7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"subfactorial", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "n", "}"}], ",", 
      FractionBox[
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{"1", "+", "n"}], ",", 
         RowBox[{"-", "1"}]}], "]"}], "\[ExponentialE]"]}], "]"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.900000327909628*^9},
 CellLabel->"Out[60]=",
 CellID->211184276,ExpressionUUID->"39e11a19-c0ad-4448-8d9c-091c1eb7cd9b"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "For details, please visit ",
 ButtonBox["OEIS A000166",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://oeis.org/A000166"], None},
  ButtonNote->"https://oeis.org/A000166"],
 ", Subfactorial or rencontres numbers, or derangements: number of \
permutations of n elements with no fixed points."
}], "MathCaption",
 CellChangeTimes->{{3.900000361763604*^9, 3.9000003651089954`*^9}, {
  3.900000438467683*^9, 3.9000004527974234`*^9}},
 CellID->136909599,ExpressionUUID->"d996454b-eb77-46f3-ab4f-fad8ba7d5b0e"],

Cell["\<\
There is a connection with rook polynomials and the subfactorial. The \
subfactorial can be considered a special case of a restricted rooks problem.\
\>", "MathCaption",
 CellChangeTimes->{{3.900000468188266*^9, 3.900000508179043*^9}},
 CellID->207794795,ExpressionUUID->"bc1376bc-a10e-4655-8c50-2dac3a2d812f"],

Cell[TextData[{
 "One equation we can use is based on the nearest integer function, \
implemented in the Wolfram Language as round with support for rounding to the \
nearest even number to prevent a bias when you round up at ",
 Cell[BoxData[
  FractionBox["1", "2"]], "InlineFormula",ExpressionUUID->
  "1aed49a7-88a9-4249-be8e-1a38892dd04e"],
 ", or 0.5. The notation is ",
 Cell[BoxData[
  RowBox[{"[", "x", "]"}]], "InlineFormula",ExpressionUUID->
  "6773f563-1d3c-4118-959b-612eec5aaded"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.9000009148975897`*^9, 3.9000009769294276`*^9}},
 CellID->93210004,ExpressionUUID->"64bef330-666a-431d-a8b5-cf9dc31bad9d"],

Cell[TextData[Cell[BoxData[
 RowBox[{
  RowBox[{"!", " ", "n"}], "=", 
  RowBox[{"[", 
   FractionBox[
    RowBox[{"n", "!"}], "\[ExponentialE]"], 
   "]"}]}]], \
"InlineFormula",ExpressionUUID->"fa7b145f-25c5-444c-a5f6-223be601cfa6"]], \
"MathCaption",
 CellChangeTimes->{{3.9000009803947773`*^9, 3.900000992112981*^9}},
 CellID->597830687,ExpressionUUID->"f8bd1c77-3243-4d94-b4c4-c13f5470025e"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   RowBox[{"!", " ", "n"}], "=", 
   RowBox[{"[", 
    FractionBox[
     RowBox[{
      RowBox[{"n", "!"}], "+", "1"}], "\[ExponentialE]"], "]"}]}]], 
  "InlineFormula",ExpressionUUID->"cbda88b1-32bc-43c6-9c03-3f6f27162bbe"],
 " for ",
 Cell[BoxData[
  RowBox[{"n", ">=", "1"}]], "InlineFormula",ExpressionUUID->
  "58af6114-9e9e-419a-a455-4bb8b0d63b05"],
 " and ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"!", "n"}], " ", "=", 
   RowBox[{
    RowBox[{"\[LeftFloor]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[ExponentialE]", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", "1"}]]}], ")"}], 
      RowBox[{"n", "!"}]}], "\[RightFloor]"}], "-", 
    RowBox[{"\[LeftFloor]", 
     RowBox[{"\[ExponentialE]", " ", 
      RowBox[{"n", "!"}]}], "\[RightFloor]"}]}]}]], "InlineFormula",
  ExpressionUUID->"c4464239-b867-43a4-a72e-75296f476927"],
 " for ",
 Cell[BoxData[
  RowBox[{"n", "!=", "1"}]], "InlineFormula",ExpressionUUID->
  "97ec6db6-45fb-4f7d-8dae-557c52989086"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.9000009803947773`*^9, 3.9000010659775224`*^9}},
 CellID->267850361,ExpressionUUID->"779d1592-5df5-4174-b855-d9eee90c54cb"],

Cell[CellGroupData[{

Cell["Here is an integral form.", "MathCaption",
 CellChangeTimes->{{3.900001072265133*^9, 3.9000010799972725`*^9}},
 CellID->238909488,ExpressionUUID->"c85cf143-b6ef-43ad-a761-714af583dc96"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "n"], 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"x", "+", "1"}], ")"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.90000108648118*^9, 3.900001100450207*^9}},
 CellLabel->"In[70]:=",
 CellID->520558764,ExpressionUUID->"d0b140e6-006d-4ffd-8114-9925bb9872e2"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"Subfactorial", "[", "n", "]"}], 
   RowBox[{
     RowBox[{"Re", "[", "n", "]"}], ">", 
     RowBox[{"-", "1"}]}]},
  "ConditionalExpression"]], "Output",
 CellChangeTimes->{3.9000011074748*^9},
 CellLabel->"Out[70]=",
 CellID->350941219,ExpressionUUID->"261754d1-d7c8-448e-8dce-31f8f050f21c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Refine", "[", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "n"], 
      RowBox[{"Exp", "[", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"x", "+", "1"}], ")"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "Infinity"}], "}"}]}], "]"}], ",", 
   RowBox[{
    RowBox[{"Re", "[", "n", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9000011132716355`*^9, 3.900001118838806*^9}},
 CellLabel->"In[71]:=",
 CellID->8825156,ExpressionUUID->"a764e2da-4d34-4fa4-9060-85c867b2fe51"],

Cell[BoxData[
 RowBox[{"Subfactorial", "[", "n", "]"}]], "Output",
 CellChangeTimes->{3.900001124508664*^9},
 CellLabel->"Out[71]=",
 CellID->278680919,ExpressionUUID->"7c5cc788-4c73-4765-be42-eaa807ea03a7"]
}, Open  ]]
}, Open  ]],

Cell["Here is a continued fraction:", "MathCaption",
 CellChangeTimes->{{3.900001128551899*^9, 3.900001138221001*^9}},
 CellID->806936389,ExpressionUUID->"aec865ba-1459-409a-985c-331aee82498e"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"n", "!=", 
   RowBox[{
    FractionBox[
     RowBox[{"n", "!"}], "\[ExponentialE]"], "+", 
    FractionBox[
     RowBox[{"(", 
      RowBox[{"-", 
       SuperscriptBox["1", "n"]}], ")"}], 
     RowBox[{"n", "+", "2", "-", 
      FractionBox["1", 
       RowBox[{"n", "+", "3", "-", 
        FractionBox["2", 
         RowBox[{"n", "+", "4", "-", 
          FractionBox["3", 
           RowBox[{"n", "+", "5", "-", "\[Ellipsis]"}]]}]]}]]}]]}]}]], 
  "InlineFormula",ExpressionUUID->"1e033e2a-334d-41e4-903f-0e78b186978e"],
 "."
}], "MathCaption",
 InitializationCell->True,
 CellChangeTimes->{{3.900001141201212*^9, 3.900001185458708*^9}},
 CellID->25842481,ExpressionUUID->"13375b9b-d61f-4045-a06e-a37140df0cb9"],

Cell[CellGroupData[{

Cell["Let's look at the generating function.", "MathCaption",
 CellChangeTimes->{{3.900000514277068*^9, 3.9000005201866913`*^9}},
 CellID->14619546,ExpressionUUID->"56c4fe20-6fbe-438f-95bb-8ee0cd42111c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeneratingFunction", "[", 
  RowBox[{
   RowBox[{"Subfactorial", "[", "n", "]"}], ",", "n", ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9000005210333204`*^9, 3.9000005259807887`*^9}},
 CellLabel->"In[61]:=",
 CellID->367209639,ExpressionUUID->"3f8c22ed-6964-4d30-9d8f-73c34b3b8d21"],

Cell[BoxData[
 RowBox[{"GeneratingFunction", "[", 
  RowBox[{
   RowBox[{"Subfactorial", "[", "n", "]"}], ",", "n", ",", "x"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.9000005275661*^9},
 CellLabel->"Out[61]=",
 CellID->19629526,ExpressionUUID->"9e7c3954-25f7-408a-b9ae-965af732727b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot the sequence: ", "MathCaption",
 CellID->339981277,ExpressionUUID->"9d51d7d5-6cab-4e28-a987-b585696fe39e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Rasterize", "[", 
   RowBox[{"DiscretePlot", "[", 
    RowBox[{
     RowBox[{"Subfactorial", "[", "n", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "5"}], "}"}]}], "]"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "I", " ", "have", " ", "to", " ", "use", " ", "Rasterize", " ", "for", " ",
     "the", " ", "documentation", " ", "to", " ", 
    RowBox[{"work", "."}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.900004900775457*^9, 3.9000049138595595`*^9}},
 CellLabel->"In[39]:=",
 CellID->558391696,ExpressionUUID->"fe4ccaea-c5e8-4c4a-b63f-f0d4b3aa36c9"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
9r1GO6ZX5Xweh3OiP776yvd/qVexGF9xody68/a1l169fO36k8/deO31N/Qq
Fr3iAvrL3/6Zd3u9ikWvuID0Kii94gLSq6D0igtIr4LSKy4gvQpq0F7dfevd
ay+9+ugz11Ovbt15e+f3z0C6By59bfKB06ugBu1V2tvzRJfUq++8+Oud3z8D
6R64dHn6hVf2vTq7p1dBDdqr9ALd9erS1es7v38G0j1w6dLkA6dXQVUbX5nf
Hkh/fPWN5xf7Xp3d06ugBu3Vzdv3vvXDX6UX6FSq3//x7zu/fwaSHrhv/+jD
B+7J52787g9v7nt1dk+vghr6/cF8/6lXb/7j30PcPwNJT+S8Y6Sn9r7XZff0
Kii9YiO9Ckqvyu9fr8LRq6D0qvz+9SocvQpKr8rvv+FetfqmZ+5V2rpWe5U2
reFe5a1rtVf355/r1Sk0P3Vfr4LSq53c/5a9OtVwZaAbb3PL/tSyq1tP3d/j
Cp/2xqft1Xl44La/8Wl7FeiBO0Ov9rvCp7qxXp3tlmebuh9ot9eroddhoLvV
q1P9UYC9KC9Yq+evbt6+9/QLL6eR1TefX/zpr3f3vTq75/3BoLw/WG4n6QOo
QK+AKPQKiEKvgCj0CohCr4Ao2u7VaDSaz+f7XotdWi6Xo57Foql/YjQ9WN2m
TafTfa/OUNKmpQ3c91rs0mw2Gz0oLRniDzXcq/F43FivUp36e0J+djezgXlz
ugKn65PJZL+rNIT8IDbWq/RI1Xl92eEE1POj2yVaejof3n9dThHuL0n7ycqS
uNKG9Pf5nK80ntzjKg2h2zP3vSK7NNyAakVjpTr86Igp7fm5Wi31at16wZrR
ZK/S45WHIi31Kj/jGjs1Ud9F6FWKVZMHTd2Lzr5XZJe6AjfWq7xd+fRLk6dV
62i+V/kkZ2Mb2H9DYd/rsmPdg9VYr/LmdI1qcresoO1e5Re1xkYgfXm3b+aV
enJfvt5Yr9a1dFq1moZ7lZ/LDccqa+ZoN7+4dN8236vmN3AIrfYq7wx13o7Z
r2Z6lbZitEmrD6JenUGTvWo4Vuvb1eoYsrGnc/9QN2vmhaam9nqVDyuajNXh
2gmr/H7TfldpII31amW3zFvX2ESUCtrrVf8t475m9o3+53EaPmHbWK8OH5yh
3dimAQAAAHAR/B+MK0Uu
    "], {{0, 150.}, {240., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{240., 150.},
  PlotRange->{{0, 240.}, {0, 150.}}]], "Output",
 CellChangeTimes->{3.900001251019622*^9, 3.9000049146675053`*^9},
 CellLabel->"Out[39]=",
 CellID->716575968,ExpressionUUID->"caf7dae4-0e96-48bf-b1c0-e72f1cab75ab"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot over a subset of the complexes:", "MathCaption",
 CellID->214227103,ExpressionUUID->"5157761f-0549-4d0a-8238-9c4d06355392"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"ComplexPlot3D", "[", 
   RowBox[{
    RowBox[{"Subfactorial", "[", 
     RowBox[{"z", "^", "2"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"z", ",", 
      RowBox[{
       RowBox[{"-", "2"}], "-", 
       RowBox[{"2", "I"}]}], ",", 
      RowBox[{"2", "+", 
       RowBox[{"2", "I"}]}]}], "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}], "]"}]], "Input",\

 CellChangeTimes->{{3.900006110877515*^9, 3.9000061140960045`*^9}},
 CellLabel->"In[76]:=",
 CellID->618289619,ExpressionUUID->"a95d847f-466e-45a6-9995-e4f139e143db"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3QVclVnC+PH5v7vvSCkGoHQ3l750d3e3SoOCdHd3h0h3twFKSjcYhIoB
mFOOszs77i7/c++jLC86s3plFPX8Pmf8wHXEi+iXc8/zPOehP+GmZ/8/33zz
jSce+EHvuK+sh8dxf/2D4B3D055ODqftbFVPe9k52HmInPgLePDM//vmm1/B
f5i3N2EwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaD
wWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAw
GAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwG
g8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8Fg
MBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgM
BoPBYDDYl9gPP/zQ29tbXFwMfvzUzwUGg8FguxywnY6O7uDBg+DHb775hpeX
d2Zm5lM/KRgMBoPtTmAmD4SXkZEBb4B3V1dX6bB96ucFg8FgsN2pubkZzOG3
T+CLi4vBIwD8T/ekYDAYDLabAeSRyTxSamoqdB4Gg8G+1AD4vLy8MjIyn/qJ
wGAwGGz3A8jr6OgcPHgQnnUDg8FgX15byDc3N3/q5wKDwWCwXW5mZgY5tRIi
D4PBYF9eCPK8vLzw2CsMBoN9eSEHXkHbT7mBwWAw2BdTaGjoN998c/DgQd7/
G5zbw2Aw2JdRcXGxzduCzsNgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPB
YDAYDAaDvXz5srOzs6amZnR09MWLF5/66cBgMBhsN3v+/Lmvr6+Li0tycnJC
QkIYto6Ojrm5OWg+DAaDfe5dv37d29u7p6cnKysLTObBI8D25eXlurq6sNdB
82EwGOwzrb293cfHBzi/trZWUlICtN/xPzx79gwIv8N88F3gt99++yRPGAb7
vAL/uOz/sKGhoU/9HGF7q97e3l2861NNTY2vr+/du3eB3sB5gHlKSkpxcXFq
aur2W8duhZgPvh0g4CckJIDvC8D83Xo+MNiX18rKyiZWe/B6eevBaGyf7knB
9m5b28V/+Id6/vx5ZGQk8Bx5F6ANuE5PTychIbGysvoGG/iNbGxsAPtv3dMS
mD86Orplfk5ODngXPPjhzw0G+wgxRiV/yAATpPm39Xu/HZi3l5eX/967MBgS
8Pbg6z7wQ127ds3HxwdM5rceATNzPz8/8JFra2u/++67Fy9egO8p4G15eXnE
fPAiwt3d/fduLAheC4CJ/dYBXPC6AJ60A9vjAav5L4/hPEJCQt799xoaGtq+
PgNm+ODd9vb2P+czg32ugYk3QDg0NBRg+4HOA6sdHR2BxluPgOm6ubm5srLy
8PDwizcC7F+5cgVM9bfM19HRAc/kreYjB3A7OjrgAVzYHo8pOkHgyhDO472c
B1N3APvWu0B48C6yngODbTWDbRO7b/yHOI8syDc3N285v7q6CubqwHDw8d9E
fkc3b94E5kdGRn7zOsT8ty7m/95JO/AALmwvxBwdi+7px3m8l/M7VuOh87A/
DmfnX758ubUgD6QF5G5i5/Z0dHQeHh4bGxv/FfkdAdvBX9cd5oOP/9Yd7H/v
pJ0P+8OAwXCPJSZaqPcKzuPdnUdWabavxiPTe+g87PfCzXlgL5jGFxQUbH8Q
WQsqLCxEFuQ/JGQxH3y/2DqA6+7uDl41/N4B3DdP2llbW8P9DwUGe/9YYyKE
ey/hPN7d+aysrO2LNptvLNfDYDvCwXkwaXdwcNh+0AfwCxwGIF+5cuUDhd8R
+JYxPDz8XgdwR0dHdxzAhSftwD5CrLEhwn0dOI93dB45ef7NU2uQM+fhlB72
1t7XeWRBHgSm0MgjAHkdHZ13XJD/kDY2NpADuDsW83/PfOQALtx1AfZxYo0N
EulvwXm81/o8DPZevbvzWwvy4I2SkhJkQwPkDHwPD4/V1dU/Ffkd7coBXGg+
bBdjjfMXGWjAeUDnYX9e7+g8si/ZjgV5MJEGvxZg++EL8h/SjgO4yNVY4PvR
Hyzmw10XYLsea7yPyGANzgM6D/vzehfnx8bGvL29dyyPIL9w6zKoPdKOA7jg
tQZyAPetnxfcdQG2i7HGe4gMluM8oPOwPy8w6X3riYtbgamys7NzRETE9l8C
Jszy8vJvvQxqj4QcwC0sLHzHA7hw1wXYB8aa4C5ytRjnsWPfg0/92cC+ll6+
fJmamgr++lVUVOB2GdQeCVnMf/cDuHDXBRgOsSacEhkqwHnA+Tzs47d9Qf63
335DthdGFuRxuwxqj/R7V2O99QAu+MThrguwd4w10Vl4OBfnAZ2HfeSuX78O
kN8x3UUug9prC/IfEmL+9qux/mA7zRdw1wXYH8aaZC88koHzgM7DPmaAPicn
p4mJia1HkMug5OXld/0yqL0TcgB3awtlZDH/rZP8TXjSDuxtsSTZCo2k4Dyg
87CPVkFBgY+Pj5+f39YhyI92GdQeCdlOEwEfaP/HB6k34a4LsNcxJx1Hjybg
PKDzsI8QsiCPXAaF3A1qc9tlUJ/vgvx7BT5NZI+FQ5RSbAYhgPrfm9K/NeSk
HbjrwtcZc7Kl4Fg0zgM6D/uz27Egj6w/NDc374XLoD5ON2/eRNZtaIkkdWSq
9TxuyUcPvK/z2wPfKHfsugBP2vmyY0wx5x8Px3lA52F/aoB3gDygfvuDoaGh
QLkv6ajr74UIDz5ZawWbULbaENlld7M1Q+8HSvHj4MHfO/fy3XsBd134OoLO
w/ZsNTU1jo6OAwMDW498FpdBfXjg+9fWyTYif6HOO+zbQttZLDAbKXfX3XTN
yGtNKW53nN8ePID7BceQYsw3EYTzgM7D/oy27twdGxu7tfnkzMzMZ3cZ1PuG
TODB5yh5BM+bmqGJSW2CznuY8ux5uu4SgdkoudUzpmsmnmuqSXPA+d/bM+HD
22E+3HXhc48+xYBnwg/nAZ2H7XrIgjxyGVRJSckXcxnUHwQ+qa0JvBTrX2rN
qa8ZC6zIKN3ksZxj8B2mzL9A11XKPxstu+phsmbm8cr54uLij/DlgLsufAHR
peqiJj1xHnDfg6+5/7r/DA4Bz52dncfHx5F3wZSyo6Pjy7sMCgl8OuC1CXjl
AibwKPQ3Ph5/bUklXs2lfRjOec9aaEVW6SavxTyDzwhl3kXarjL+mRjZVU/j
NfMza+qpix/N+e3BXRc+0xhStfgm3XAecD7/1ebu7g7sRa7cCQ0N3ZWPWVVV
5ePj8+TJk61H+vv7kQX5L+kyKIR3MHtH9jHjdSCwz91X04c32k+01Eq2fo7u
YQTnfRuhW3JKi7zm8wzeI5S5l2gulfPPxMre8TRat3BfR5xHboD7qYK7LnxG
MadpoKdccR7Q+a8zZONf5EbY4McPXytGbhTi6ura3d299eCXdBkUsP3mzZvb
tzIgPSnKniip0CRsPUATdXV/wzD+CHC+jXStkPZRFMf9E+hb8oqLfOYLjF6j
lDld1Jcq+KbjZO54Ga1bua1rpC5SUnN9Wue3egF3XdjzsaWpik454jyg819h
gF9k7/StR8CUG4cbdm8FJvDIgnxxcTEgAnnwy7gMCrmCFVmZAbaTCKtTHndl
SYlGVYbydXuI95io9UpZDdBFDu2vB84PEC21k64V0T6K5nhgi76lAJw3W2D0
HKPM7qa6WMk7HQ+cN1y3ObWukbJEQYParZdRuxg8aWdvxpGmLDFlh/OAzn+F
AYF3TODB2+AR3NbqkQV55BTBtbU15Oyaz/oyqO1Td4R3Hl5PMZ0iee8eubQ+
oaqL/C2VAp3JfF2eYj2man3SlgP04UP764bxhweIFjtI14ppHseyr9kL3lZU
WOQ3vcboMUaZhXGeZypB+ra3wbqN64ZG8jILj9wedH57cNeFvRNXmoL01HGc
B3T+KwzMuneojsiPw+ncyJ27d3yD+LwugwJPEjx/8CeAbCOP2M75Fx7W/xVQ
OeZiyVfuqD1nY7Oo77aoHjankDkiXHmJv6VKoDOFr8tLrMdMtU/GYoAxdGh/
7Qj+EOJ8Cc3jOPY1R8HbyvJLGOfPjFNmXqa8UM09lSR920d//YTLhmbSCkpC
b/tLqj0ectJOTk4O3HXhk8SdJis3ZYnzgM5/hSEL8ttxBm+/7+kfL1++jMD2
/Pnz7Y8j30SsrKyA88PDwzexgY+/R8zfrjpyE8Cte0IJ/OWo8bdoVwK9cGLv
TIpzuezdSULjgbILrjo3jwPnTy+qh84rZo6KVHbxt1QLdKbydXmL9pir9sma
DzAFD+2vRpzvJFkro3kcz77uLHBHRW5JwOQ6k/sEZcYVys4a1GQycF5v3db5
oWbiLU5JAxsbm136kn7U4Ek7Hz/edGnFaTOcB3T+KwyhePtG6Mh8/t2dR/Yl
O336dHt7+46foqOjE/grn+g+KbK/0G/dbmPLUvAG+BYQGRmZjg1ICz7C8Otm
sIHvCxsbG99h28D23eu2c4387Cq2m9sCHwF8KPBha19XWFgIfsftpGMuU6X+
izXqgC+KPAPF2sgl2c6sfZn2ZA+F3yXypDbyklratnOcvclC40GyC6eA89ZL
BhjnFxQzxkQruvlbagQ60/i6fER7LFT65MwGWIKGDlQB5weJbp4nWS+nfpzA
tu4qsKoqi3XebYIqvYeyo45rIkXqlq/ehp3TQ63427yqJz5T57d6AXdd+Fjx
p0soTxvhPKDzX2HIavz2TbTeXLH/g8bHx5F9ybYfdd2Kl5dXi1DjzDF/O/po
I45UZf54cfFYbpkgNk1fBgMXcgOjo6ZqxGrchzWYSBVJD/L99SDD/9uyl5X6
P29vj+V/SN76+PbvINvf/Ssb2V/ZD5GoUhyRJDom9VdOzb+o2f7FxO5/fLz/
mhqM355wuC+KfCaYYcqJY1yfd0RGdFhQ+Sqn0QC9fQ+F7yXyxHby4lra1kKO
3hT0eLDMwintmyeslwxPLWqELCilj4mVX+ZvqRXoTOfr9hXtsVTpUzAdYA0Y
OlAxQnAVOH+BZL2C+nEi28Yp/lV1mWVB4xtMbpNUab2U7Q0c46lSt/x0N+wd
H2nH3QHO6+jo7ObX9ZP21gO48KSd3UogXUx1Wg/nAZ3/CgMz+R2r8W+u2P9e
YJ68tSAP/mm/eSk9cF6ZQNnjqJ89XbQxe6oGOkNONktEM5PfIpnLOZrFy58x
yJE+zJAlUoE3mk80lkInfr9LIl544r70GIJcf+J8Z5Jc02MJclQRPHQxTOzR
1OjIo7Lhh7SDiS38iF1OHfa0pQgyog3WYUvQEMxUli2Q1SoVMy0Wti/g8cxk
i05jTYhgSz3Des6evcRAqExBtoJPrZrCtpY4tIEgrxGvsR7/Ujnx1XzSyWTK
mRCGaWeOCQPeUVmRYbQS1nm7XgrfLqzzdbStRRy9qejxEJmF09qLJ6yA80sa
wdeU0sbFy6/wN9cLdGbwdfuJ9Fgr9ymaDLD5DRGXjRIMXCW8eeHIeiXV42TW
DTf+uxrSy2ijG0ynJ6lS+yhbm9jH0iRv+elsODg80o5Z5VP5opzf3pu7LiAn
7Xzq5/UZh04X1pjWwnnA62G/zujo6LYvGgBwgM9//Eu27ty9/TKoN5MB4csC
5x0wzqdoojPkMc5n8ZunoJxjMM4HOtGHGbFEKvJG84vGUmrHH3BOxAsDzsfi
FwQfLPMgrbKlqtBlLJPiKOYWKGKWOUetlX/UMpvkdBpJWBx5agjD2TOc5XaC
debSTXrqLSpGbbInmyXP1KFDyziT8jkyEznz/IHzbCWGQmWKMhX8qtUUJ2sP
hjQQ5DbiNTTgX6ogHgTOp1DMhjJMu3BMGL5yfojLcJABOO/TRZ7QQV5UT9Na
zNGbJjgWKr3gprV40mrJyHVJM/iactqEeFmPQHODQGcmX7e/SI+Ncr+S8SC7
z/ChklGC/quENy4eWa+iepzC+tCd/66m1DLa8AbzqSmqlH7Klma2sXTJFX/t
DUeHRzrR9wT03cAf1e58OfdwO3ZdAObDA7g4JJwuoDWtivOA8/mvM+RQLHKd
lLu7+3+9NvP58+fe3t5paWn/9SMDu6QJZD3JfB1oo0yA84IZ8jJZohpY552A
8wGMgc70YcYsEYo80QKisVTAeadEvNDEb9OA8yGI85QVeoxl0sB5/iJm6XPU
mq+dD40jTwHOe2Cdt5Bq0ldrUQXOn2iRdK9Dh5RzJZ3lxDgfwHrOgbXECHFe
pZryBNb5nC3nzyLO00+7ckwa8Y7KiQwLKSLO91F6d79yvqWEvTddcCwMOK+5
eNJyyRg4H3RdOXVCoqxXsLlRoDOLrztApPe4Ur+y4SCn9/Dh4lGCviHCG5eO
rFVTPk5leejBd09LckXIAOM8dfIAZVMr62gGcF5rw8n+sW7UfX6bkK/B+e2t
ra29easUuJj/Lomk8+rMKOI8oPNfbQj132BvUf3HyCP7knl4eMzOzv7XDwte
GgjjiXmS+TjSRpmyJWsJZiggzpulopxiWbwCGQNd6MNMWCKUeKIFRWKpteKJ
Hbc770labUdZoQ+cZy/h4S9ikT5HA5y3yCY5BZyPJ08JZTjryVlmL/DaecM2
OYzz9UKvnE/izAtkPecInEeXKclUCKhUUx2vPRgMnG/Cq2/Ev1R5AON8KsVc
GP3MKfZJY94xeZER4DzKYJDRFut8fCd5YQNNSyl7D8Z5qQV3zUVb4LzLshZw
PmVSsrRfsKlJoDObrztQpPeEUr+KwSCX5/CRwlHCvmGCG12H12ooH6exPPLk
u6ctsSKsf5PFdZo6aZCysY15JEtiOUDrobPdY93IB7yuif/1NdQXHNx14b0S
S0fpzcjgPKDzX3nbz7p5a8iCPKB+a+fJP87GxkYYX9yLzMeJNsoMOC+QoSCd
JaaeJWCWyu0Yy+IJnHelDzNliVDGOk+jGU/skIgXkvRtahx+QSgxxnl7ykp9
hjIZ4DxfEYvUORqNs0ctcjDOh8STJ4fSn/XkKHNAnFdtfeW8G3C+ApVYwJmZ
zJUXxHbOibXEGF2mLFMhqFJNbVN3KKiBMHvL+QLSyTSKuXD6mdPskya8YwrC
I0IKwyiDq4y2/ZTel8njgPON1C1lbD0ZAmPhUgtnNBbtLJZMgPOBN1SSpyRL
B9BNzQKduXzdQSK9JxX71fQHUWeGSQtGCXtHCK53H16rpXySwfzIm+++jvgt
UV2s84mDlPUdTCM54suBmg9dbB/rha9xn06ho6PbpS/jZxw8aeddEk/nMJiR
wHlA52F/UEFBwdaCPHjR/S7Lqu7u7jz7BLzIvJ1oIs3ZkrUFMhQR503TgPOs
nkGMgacYQoHzKtzRaJFYWo34g/aJeMFbznuRVDtQVBowlMm+cr7wlfOu6cD5
Y8lh9PleWOctJZsMVFvVgPPHW6Tc6oWDK7gxzqdw5gWznXNmKzEBzktXooHz
1nWHAl85j3epCnGefC6CbsaNfcqUd1xReEQYOK9/lelkP5XXZYq48+TnGqmb
y9iuZAqMRUgueADnzZdNnJe1A4Dz01Ilg+imVoHOfN7uYOFeW8V+db1Bbvdh
svxRwh7g/OXDD+oonmQyP/ble6ArdktM5yarywx1wlWquk7G4XyxpUCNhy4n
HxuEraHcUqHzO4K7Lvxe0HnYn9HWjULe9xcC55n/l92b1NsZOM+apM2foSiV
Ja6eDZzncYhj9QxmDDzNEGqGdV5IOJYOOG+HOB+PdzaMuMwb67whQ7kcewkv
bxGrZCEtcN4c63xwwmvnHflfO2/QLn+8VcqtAev8OazzIWznXIDzgmUqWOdp
reoOBTQQZjXj1TXiXQTOnyOZTCefj6SbdWebMuMZVxIeFZYf5n7l/BWK2PPk
BU1UzeWsV7IERiMlFzzVF+3Nl02dV7QDbqomTUsVX0U3tgl2nuXtDhXutVPo
19Ad5Dk9fDR3lPDKKP61K4ce1FM8yWJ67Mf7QF/0trj2IpvzLHXcEFXNBYbh
AtHFQPWHriceG4au8Xnlf8ieQl98cNeF7UmksxjOCOE8oPOwN7t27Zq3t/eb
10C9S6Ghocf+QulN6uVCHWnBmqTDn6EEnFfLFjRJ3+a8OXOEKipaWDiWXj3+
kG0iXlDStylbzjtSVBptd1694Bhw3gXrfFI4Xb431nkr4LxKqzpw3qZV6jRw
vpInATifypkXyo5x3lSwTFW6Uki5ms6y7pB/I2EmcL4J72L1gcFCrPNRtMD5
aXOecWXgvNwwt94Q84kBas8rFDEXyAuaqZorWK5k849GSSx4qS06mC2bOq3o
+N9UTZyRLr4q1Ngu2HmOrztMqNdeoV9Td5Dv1PDRnDHCy2P4Cz0HMc7nMD0J
4F0zFL0jobXI7jRLHTtMVX2RfqhIZDFI/RHG+ZB1Pq+z0Pl3DN4qRTKdwXiG
D+cBnYftqLe318fHBziP2wIpcP7oXyh9SD1dqSMsWZJ0+TKUJV87bx/P6hHC
GOjGEGrBHKGGihYRjmVQiz9sm4gfiDgfTlzmQ1LtRF5lRF8uz1bCx1P8ynmz
XBKXDJKgRMR59lIn4LxEs+Er59ukTjeKBAHnC7ky0zjzgfOubCVmWOeFlWvo
LesO+2Gdr91yPoN8Ppp29gzbtAXPhArG+REeXazzHj0Y58+2UDZVslzO4R+N
lljwxjpv5nhLx39RLXFWumhYqLFTsLOQrztCqNdRfkBbZ5DfefhY1hjR5XG8
+d6D9xvJn+YyPgnkXTcWvSOpucThOEcTPUJVeYluqFToZrDaw1MnnhgHr6P9
y7/55ptd//J98X2duy5IZdCYzHLiPKDzsO0h+5LdvXsX/AvC7cIW5DQeHxJP
V6oIK5ZEXb504LyEKsZ5XozzoYyB7gyhlswR6qhoUaFYRuD8yUT8AOB8AnD+
AHC+xpm8ypi+XIGtFDjPJlFEp4Z13hlxPoIu3wfjfC3ivIZBuwJw/hRwvor3
lfNh7OdOsZeYCZSpSVWKKNcwWGCdzwDON+NdqNk/UEQymUm+EEM758E2bckz
oSo0KiILnB9mOY51Pvoi4jzz5Vz+0RiJeW/VRUfTZXPgvN+SWsKcTCFw/rxg
ZzFfdxS611l+QEfnqoDTMHnGGFHXBN5cH/H9ZvKneYxPg3k2zERWpTSWOB3m
aaJGqSq6aa+Wo2+Eqj48ffyJadCGRFTHjt0nYO8VcgD3KzlpRzqD3GyWCecB
nYchITcK2VqQx/mKdeTSWl8Sj1NY5/V405UlMM6jjTN47ROwzp9hCLVijtDg
wjjPpBp/5ARwPvnbZOB8xIEy3yMY503oK4Dz/K+cP3fM9JXzRxMjafOA8878
tdYSzUbKbRr6HQo27VKnmjDOxxdxZaZz5odzFJ5mLzEXKFOXqhRVrmE0rzvs
20iY3oxXs935WJo5T9YZK4zzYxjndYDzg9RneoHzFPmtFE1VzJfz+EZjxed9
VJcwzjvc0vVdUo+fkz03ItR4UbCzlK87WrDXVX5AV+eqoOMwefoY0SXg/ADx
vdZjT88yPA3h2bAQWZVWX+ayW6CJGKMsu0w7UClwI1x1w83miWnghlTc5R27
T8Bw7ovfdUEmg8R8lgrnAZ2Hbf7fO3d/YK+dP3OaMtyaGeO8ikSWpGoOxnm7
BLYzYQyBHgyh1ljnxYRimVXiSY4n4vtvd97lWJUpfYUicJ67mE0ccT6PxCmT
JDAJ67wvcJ6v1loc47ymfoeiTbs0cD6wmg/jfAZnfgRHoRt7iQXWeTHlGibz
uiM+jYRpzfgY52v3DxSTTGYdwzjvxTpjzTOpJjQmKjPKC5y3GaQBzkddoshr
o2isZr6czzcSJz7vq7LkZLJiAZz3WVaPm5c9NyrUeEmws4y/O1ag77TcgL72
VSH7YfLUMaILE3izgwfutR97VkD/NIz7oZXIXRm1ZZTtNZqwccrSK7T91XzX
o1Q23KyfmAc8VEgfx20vaNgf93sn7Xzq5/VByWbst5w9jPPw9PRs29an/mxg
n6Cenh4nJ6etO3d/YIjzfljnbZgT9HnSVcSzJFVy0EaZvHaJWOc9GUJtmCM0
OaPFhWJZgPM2ifh+wPnEfWcjD5T5Hal1Bc7TVSixlgpwF7OLF9GrbnM+IZIm
z5et1IWv1mbLeesOadcmUYzzxVyZmZz5kRyF7hwllgJlGljnmc3qjnhjna9u
wTuPcf4Ixvk4mnlv1hkb7kl19JgYcF57hNX6Ko17H0XkK+eZus/yjcSLz/sp
LzmbrFjaA+dX1OMW5ArGhBq6BTvL+bvj+fvcZAcMta8K2w5TJI/t75zAm7m6
/17n0WeF9M/CuR/aCN+VVV3hPnmdJmSCsqSHtreG91qM8rq71RML/4cq2fOf
/BaxX3xv7roA/rZ/jgdwlTOJ7OYO4TzgfP4rr6amxtnZOSIiYrc+IOK81+FT
bhRhx5kSDHjSVcWzpVRyhIwy+WyB8+EMAV5Y57U4oyXQsazK8aTWifi+yd8m
Je7LR5w/dazajK5CGeN8CbsYxnlykzxS4HwAcD6KJs/vtfPGSm1ar5xvFg2o
5otDnI/iKDzDUWLFX6YpWSmuXMNiWk/i1UiY2oJ1vm7/QMmRiWys8z6ss8e5
JzXQ4+Iyo3z/cb6LIredoqGGqbuAdyRBbN5PacnFGOu894pG7IL8WeD8ZXRn
JX93Im/fGZlBY+D8iWGKxLH97RP4M0NEd8+TfVdC+ywC9ei48D05lRWeEzdp
Aicpi3ppe+p4rsUrrZ2xemLp+0g9d5mEiR86/9H6rHdd0MgkdJ07iPOAzn+1
bS3IDw0Ngb/2u/VhEee9D7u8cp4b67xyjpAhcD6JzT0COM8Yepw5QhvrPJtS
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
OO9FbA2cd6GJseRI0wXOy+aJY51HuSYwBYRinTdljlXiixeQQpxPxTqfCJw/
WONNVmdHU6fHXCXBgXVevpQKOH88n8QT4zx5bjhTiReq1h7dZolx/qKaeZe8
40VpnxahqGpUehFXfipXcQhHmTOqykS0Rlm+jl+j4RhwPrKVoLAdrw3jPDHi
/M1IxuvunPOmfK+c5zYeZ3QYwTif3E1R1kbTWc12NR89Eyuz7Kdx19XigY3L
mmHgPc2UJYWyKdG2XnR3tWBfEnrIQ3bMVG9CzHGKInVu/8V5/MWJ/Q+7jj6v
oP85lvsHO7HH8qr3+WzvMIZepy4ZZBisRd9KVXnqZ/XzCd9fjDKfcUUXwUti
P3nIfsU7tv7YOydVgmJyvu29jofzgPuYfRb9sfOAVhcXlz1y2uqW836kAa40
MVbAecFsJeC8FnA+E+WSyBQQxhx2iinKDOu8oHQirW4ykWsqXhTW+ZJwjPP1
WOerJTkqeYXKWYDzukVY57Mwzudsd94Q43y3vOMl4LxwVA0qvRiVn8ZVHMpR
7oKqMhWpUZGvE9BoILcDzrdhnW/D76sjHi8mW8ikvBnFgHHejG9WUXRaWGmS
22icCTjvN7DN+bOCM3HSy/4ad0+ZPzjuvG4YcF8reVmxdEastR/dXYfuT0EP
e8mMmetOSDpMUyfN7e9cwL8+RbRx+ejzKvpfElA/OYk+VVF+wH9ylSn4BnXh
EH1/o8BKhtLTQIsXdt5/M077XiC9FV4S+2lbW1t763k1ON8i+c8oIed/r17f
h/OAzn8W/YHzyIL84ODgLu45+SHNzMxgzqsktvIjwThvzZGmJ5ijJJMnoZUv
ZIE4H84cdpop2ow5TpkvHi2VSKeTTOSCdT4nCeu8D1m9PU29PnO1FHAeXc4i
hzh/FuN8dDJ5TgRTiTeq1gE4L3veUOuiunm3Asb5VozzGSWvnXdFVZmJ1KrK
1wlqNFDYNu+PaCM414Fxvrce63wW5c1ohhsenNcs+eZURGdEFCd5gPP2I1S+
AxRJlylK22k6a7DOx0svB6jfPW324ITzulHAA+2kFaWSWbGWQaHuRnR/OnrY
R3rMUmdC2m6aLn7uQPs1/IVpoo0rZM9r6f6WwvXcVeQ7TaV1QZu7zEGL1GdH
6fpa+ZazFJ4Gm71w8Py7ScqPItld4I9rx+EY2Mdsx7I80p46qRKUnPO/Y9f3
4Tyg859LwM8dGuy4c3dJScmect6fJOAUdaw1ezpwXhk4r4k4n4R13o0p2pwp
ToU3XkgqiU47mdA5FS8yDThPUBKBcb7BgbregLlGmrOKD+N8GbVu0VEb4Hz2
a+d9ULWO6Dar184rOl6S8WkTjqpFZZSi8tJRxWEc5adeOV+P1migPNm8P7yN
EDjf2o51voR0IZtyKYbhpifHdWu+eVXRWVGFaV7DCWb7UWrfQYrEyxQlHdQd
tayDBYIzCVLLgWr33MzWTjptGPuvaSfeVi6eF28ZEupuQfdnCQ77SY9ba0/K
nZxmjJk/0HyNYG6GaL2X9Hk97d8zuH52F/5eR/GhkOVdloBl6rxxmp7zPIt5
ck/CTF44n/m7adJzmaIJeEnsJwzZ3+DNx5HNuj/+8/m90nP+On39W5wHdP4z
bRfv3L27Ic77YJ0/TR1rw56uj3E+XxI4b57F7ZLE7B/BHObOFG2x5bxWymvn
k7HO+5I1OFI3GDLXymCcr2AFzusUH7UpIPUAzqeQZ0cy/sd5I62LGmbA+S4Z
n3aRyDrudOB8Bqo4nKP8NKraXKRWTa5eSKOR6kTz/rA2wgKM83i9DcTjpaTX
ciiW4+gXvTluHOe7pi4yJyY/w2cwxWI3Ru1zlTLhymvnzwlMJ0ktBandczdd
s3XcMPFb10m4o1K0INEyItzdju7PFRwOlBo/rjWpcHyGJWL+QP11gpk5ovUB
kueNNL9mc77wFPpRX/6RiPk9Vr8VmuxJ6stdqBtFMo8jjV6ccvvVLP4Xlapb
8JLYT9Xc3Byyv8GbP7WnTqoEZeX8deH6tziPHdfDfurPBvZOITcK2a07d+9u
iPO+xJYBJP7A+ePAeYFclf84n8zsH8kSDpy3ZIpT5U0Qlkqm00whdErDi0Cc
jzxY60vWiHGeqVaWs4of6zzNK+dzsM5HMZb4omqd0G3WGOcvaZhdVnLskvUG
ztfzpJeh8jJRxRFY5y1EatXl6oXVG2mONx8Azp8Fznfg9TYeGC8nvZZHsZJA
v+zLsXiS77qmyIKE/Cy//jSr7TiN9zBlfC9F8QWq9nqWwUKB6WTJpWDVe2dM
1u0cNkx9N3TjV1ULr0u0jAt3nxfqPyswEiI5flJzStl6hj1s/mDNDcKpecK1
q0eet1D/msf+N1/0T0ZyT8RMHrB736LJnKbu6uG4Vi75KNrghdupf5jH/l2r
Zh1eEvtJ2r6/wZuNjo5uXTC1F8rJ+vbGAh7OA87nP7uqqqqcnJw+2r5k7xvi
vOcBs4Aj/m4Y5zMMgPPS+VIaZ4XNs7mdEefPYJ1X400QkUym/4/zKVjn/cga
nagbjZjqZDmr+dGVrLJlNNolx2zOYZyPSqUAzpf6cdU5A+dlzhtrXtLEON8t
690hGlnPC5zPz0IVR3KUu6GqLYXrNOTqRdUbaW2aiUOB8514rZ14vU0HJipI
r+dT3EqiX/FnX7Lju6ElfE1Sfl5Af4bt5CSt1whlXB9F0SXK9kbmgWL+6VSJ
pRCVex7G6/YOD019HurG3VU7d0OieVK4+5JQfxH/SLjEhL3GlJrFDGfwwuHK
G4QT1wgejBz5uZ3qH2fZ/h4o+NxU5pmk4TqHx23ajDnq84Ns87XiD+N1f/Fw
+c0i6jedqocHOYXgJbEfP8D4H+xFuadOqgTlZe5bnCPAeUDnP6OQBfmoqKjA
wMA9cjuzN0Oc9zpgGnjEz50q9gTG+TxV6bMY582yeZxTWPyjWMI9mKKtmOLV
eBMxzmukYpwPTwfO45dEEQPnm5ypG42Z6uQ4qwUEK9lky185fyaXNCqNIjsa
67wLus0G67wWcN4BON8pFtnAm16Oys/GOF/hjqq2wjjfIKbeSH+85WBIO2H+
ebzW8/t6mw9MVJFeL6C4lUx3K5B92Z73po7wdWm5BUG9OfYTU7SeY5SxAxSF
XZRtzUwDZfzTGRJLYcoPPI3WHewfmnk/0ou9r16wKNU0JdTdLTxQyj8SJT7h
pDatZTqDClggKb9BNH4D/8H44ecXKP9RxPprqMDPFtLfy+g/RLndoUu9Rt02
wjzbLLqRrPk3b6eXluH/1Ct/Qq1nDS+V+sht39/grYGf7enp+WjP57+Wn46/
PL0f5wGd/1zafufuPXXG1462O3+GKu4kcJ4f47w0xvkcHudUVozznkzR1ozx
6ryJopIpDOqphI7pGOezU/FLoolr/cmaXKibTJjq5TlrBASr2GQraLVLj1kX
kp7JwzifFcNY6s9V54puOy5z3gTrvLLDZazzjXxpFaj8HFRxFGfFGVS1tXCd
pmyDuHoTo03r4eAOwrwLeK0X9/W1HpisJrlxjuJ2Kt3tYPYVR94lXaEbsnLX
0LrzHCdmaD3GqWKuUp67TNnayjhQwTudJb4cobjubfjQ0e6Ruddj/ZgHmvnL
0o0zQt09IgMVAqOxYpOuqjN6JrO8vgtkJTeJRhfx7k0e+qmL4mU582+R/L9Y
Sf4or/OY59RdhqSbNE0TDNPnhdbT1f7uZ//SJvRfBiXfsfjGwFPoP2Y79jd4
a3vq5HnQ2VSCW5MHcB7Q+c+iHXfu3rPIb74+BdTrgEnQ4VfOG/LnqUkXSGsU
iJjl8GKcj8Y4H2PDFK/Bm7TT+dJo4roAsmbEeYVXzlducz4dOM+w5fwFE41L
2qZXMM57nRePbOJPq+DOz0UVR3NWeKBqbITqtGQbJDSamW3ajgR1AufxWy7i
9bXtn6wluVFEcTuN7k4o+y1n3mV9oUU52RtCOgtcx2dpz0xSRQ9TFvRQtbQz
DFTxzOSKL8corvsZPHKxfWwBnI9e18pbkWmYFeruFxmoERxNFJl0U5k1MpoT
9Fo4WniTaHgJ7+70wZ+ukP+zhvFlLP/fTkg8V9Z6wud8nzF+maZuhnayi/9B
jvLfg07+62Twvw0Lf+QurIOn0H+03tzf4K3tqZMqQedSCO+MH8R5QOf3fm+9
c/eebcv54MN+HlRxtmyZhvz5wHkZjPO5vM5pbBjnvTDOJwDnxSRSGdXSiBwy
8MMz9mWn4ZfGYJ13pWo2ZWpQ5KwVFKxmk6mk0ykjty4iPZNPGgmcj2UoDeCq
O4VuOyFz0VSjC+O8/RVZrwtY5yu58/NQxTGcFZ4Y5+u1ZRslNZpZrduPBHYS
5V7Eb76E19+xf7KO5GYx+Z0Murvh7HdceVcMhZbkZW4Ka19H2czTu09RRY1Q
nu2laj5PP1jDPXNWbDleYT1A78npk0+tPZ/qR21o596Wq58X6h4UGahHj6YI
TXkozZoazou4Xzt29ub+gWW81VniH/uO/buJ/l/JvH+3F/9ZTeOZoMM6U/Rt
mqoF2tFennvnFH8Js/63XeC/jQp+lr40D0+t/Gi9ub/BmyEnz++ppdHCpP13
Rw7jPKDzezlkQR70MW8U8oEhznsfMAbOe1LF2bFlGvHnq0sB58+JmOfxOqWx
+cWwhHszxRxnStDkTRbHOr8fcT4nHQ/jfCBZyymqZjOmBiXgvEA1u2wVnTbW
eXfgfAZ5VhxDaSBX3Wl0+0mZS6Ya3TqmV1Tsr8h5XZCIaBZIq+I+m48qjuWq
8ELVHEfX68g2SWm0sFt1HAk4T5RzCb+5C6///P6phiM3S8lXs2jvRbKtnua9
ZSy0rCC9KKJ1g9t6gcFthipyjDKvn6rpIt1AHWrmnOhyksJ6kO5T9xPfHff4
ziDiiXbOHfm6a0LdwyIDTejRdMFpb4U5S4MFSefr5LmL+3tW8G8v7P9x8Ni/
22g3M7n/4Sz2i4ba90J2j5jD79GU3aC9OsR1t0z+RZT5ppP/pnHeL0pdq8eY
heGh2I/QW/c3eDPkCtmP85TeseKE/feHjuA8oPN7tufPn/v4+Jw6dernn3/+
1M/lPdpyPuSwvydVPMZ5vrPqUudkNQpFzfP5nNPZ/WJZwn2YYk4wJWhhnE9j
Uks/gHE+c19uBl5pLNb501QtZkyNWOdr2GWr6XTKya2LSd3PbjnPWeeGbreV
7jLTuIx1vkfO66JERItAWjXq7Fnu4jiuCm9U7Ul0g65sk7RGK4dl5xH/C0Q5
XfhN3Xj9F4imGo8slpHfzaG9H8161533jqnQiqL0kqjmTR6ra4xus9Th45S5
g1SNXXT9jVwzxaLLKfLroTrfedh8b+v+vWHYdzrZ9xRrrwt3jYoMtAqNZglM
+8vN2+hdk7O9QZ6xeKB7Bf/WDcIfRo7+u5N2M4/r5RnRX7SUfxQ58ZQl+AFt
4RJt3zjrnRrZn2ONN0/7bJpk/6p+fp3F5jQ8FPtn93v7G7wZct/Aj/CU3r2S
OOK1AVKcB3R+b4ZcBgVeYIIv0J56/fhfe+28Uehhfy+qeHu2LGPEec0iUfOz
fM4ZwHlWjPMnGRO1eFMkJNKY1dKJ7TPxwzL35WXuK4sjrg8ibQXOmzM1KnPW
CQrUAufpdSpeO59JnhVPXxrEWeeO7gDOm2tc1jXpUbHrkfO8JBnRKohxvoC7
JJ6r0gdVa4tu1JNpltFo5TQ/f9jvIlF2N37TZbyBS0RTzUcWK8jv5dGsxbLe
9+BZtRC6pSy1LKaxxGd5g/n0PHXYJGXOEGVDN21/C+dMqchyutxGhPb3XtY/
Orj9aBL6vW7mmkrNouilcZGBduGxPMGZIJmFk7rXVaxvUCYtEV+8RXBrCf/7
cbJ/XaTZLOL4t6/I33QUfxK3/o7df4Mu/zbt5VnG203SzxP1Nz09N83T/qXT
9pQjNw8eiv2ze5dleaQ9tSMxEpj/bPSR4Tyg83uw7Xfu3sun1rw1xHmP/fph
h/29XzlfoCFVKIdxvoDfOZPDL4413Bc4z5SozZsiKZ4OnD8InA/P2peXta8s
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
eAN9+DMXD600Hl0vpX6cwfQ4hHvDAf1AR+KerMpdIZM7XE4r9IE3qFNnqCpH
qC73MM608q+USj1MU30eYfyrj+NvDn4vzRJ+0St+pNx+S2JgXGyyXXQ+V+xm
gMqylcktOfdVqvz7xIPrhBv3iX6bPbp5iWGziHszWGLTXHlTxvofqJCf6Eoe
0g3NcTzulPvXWcPN6NObbsmbZm2bSlO34RL97oacHvm+M/O9tiMxUk3IkR/a
KXEe0PlP2I47d4OJx+d1CuVbQ/a3CSA2ijoS4P/K+SJt6TJF7QoxyzJB1zxU
QBJrTAhzvCNrsgFvuoxYJrtaFqlDLmHU2X0FeXhVKcTNEaSdXpQdNoxt6hzN
QhjnGxh1asmtgPPFZFH5R3NT6SoiuZq8Mc73WWsMGJoMqtkOKnr2yEZeEM5o
5imq4K3M5K4N42hy5W81k25XUb0gaNpN49lLnNZP2DCI199PMHvp4Erz0Y1y
qieZTE/CuB85Ca7rid+XU7knbLKKcrpFH3CTJmWOqmKMuruPfradb6VC6mGm
ys9RRr/52//TyfefFnG/GhQ+U2lblRyYEZ+6KLpQJLoYprRia3xb8fRdxsw1
4t6HhPfWif5xnXSzj26zgmszRnTTXnFT8f+z995hUaRbu/c5f5xvRkDBiBm6
yVFyDt1NTpKDIEEEkaSIgmJOgBFUFBFEUZKAAQRBFFQkigiiqAQFEcm5ycn7
VNtne/mN876vm3H2MHt7X+viarqKomiqfs+q9axnrTWfpAOGSZHt3I/eCLY8
VJ2IM8WJjfAPglMSjCr6BTdvkZCQ+Kv/gf8m+s76Bt9qBiZVEkravaA/bfm0
7Sfn/yn19vbeunWLIPO+ffv+YBYcM0N+JnTu/rFi9ofdz2H3mfPHPAXC7SQu
mzA4H69sHyvrfUFs10mB4H38x9wFQiwlTlOVwoT1zy3aGMEaGMXgfGIoe+qh
hZnblt1Zx5tuIJwqJ3lLjHqDxyR5iUP8Ip8riw5Hckac4oo/LHrLXybbXe2R
k8FjK5sCA9dC7W151EPZ8mfSJC7FS8SfW5V8QPiWt9RtO/UMPb0sWZv7XL4P
2UMfs6YU/Jr3mOX5fY63qYta4pd3nuPtPCDW7inTYqH8UUPng4L1e/GN9TwB
NStPvlwe+3TFvXyu53dW1SWqtp7TGQiymNjlOuXl/8k+aMIqqlc/9YNqfpXy
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
R9/zbHWVkJD4D3EP/rh+SOfumZlUSeimx/LR84LTtp+c/1oEkCV+T1/KzhCQ
JzjGwcFBjAj/49EGBgb8/PyYnbv/c0R8PkasUpELt51afPQQd4Sv8FVnuWRL
jeu6pjfU1qUobosVC4oQDA0SIjz987ZSF7XUL60yu7zYM4b12NVfYi6zpJ7n
yDmxKG/3ykcb+XPMRO+pyWav0sjkN8tYsT51sX8K57G4JdGRpOsnRe/uk3u8
hfpkg9Eze7sK842V+jue6xx9ohbxUDr+tuT1K1K3QySydkrkuKk+sNR/RDHP
F/AsWnjsyezEpywMzpewNeQu7ExbNhBHGj4jPLRHmr5Bqc+E1kM16ZJf1ynm
285z+CPXhfqVqa+4Sp7y1z2QabtBHbpggGO22O8F391wOQn7K7DMGtN72kOp
qaY05qi1XaH2BJr0uzkP6uwc4YqfmFsBtkGwgr4A70goFMFVZQTowNoaWlsh
HQr+NPC+m+DDR2U8MUGSC8IDsfMqvB9gfQ2MRqEzWicUuIXwKH4z+/9T32oa
9Q1+Vz9ksPgzdMNtxUiY8LTtJ+e/X18g/z1zZKWlpQTkt2zZQrj0/4Jzmzmi
UCjOs1UuLvQ/s/h4IHfUNpF4F/nrVlq39MxT1Z2vK/nFiQVHCp0KFjq7RSjS
TvqSFvXyKrMri7yvsp6I/eVKDMvtCI7ck5z5e1Y+dud/YCaaqy53X0LzLr/5
nZUutxf7X+c8Hr8k+iLpVqjYvQPyBb7Up26rKxzsKs3dXxrseKF77KnahTyp
xDtSN+Ok009LZO+WynVXfWSl/5hmXijkUbzoaOnshDKWvPJfq0pnN+Yt7L6z
bPgaaSxcaOyA9LCH0oA5rV/DuE/RqWfVli6+Q21cER9W3qzlKnrO+zZfqiNd
ffiyPkJtcMgDfjvhehwOl2GT8cmwdIBa857aVKTekUzpCzEc9HUYNvMbFzs/
NT8fc9oJzk9xoG0lKgVxRxanNeC6GoYboRwEgXjwlYKvZ1gM9Vp4sAax23Aq
FAGJ8MrDurcwHoYuWmSLzv+vzyKupb9XJ4J/maZX3+B3NTOT5wndcOEaDhGd
tv3k/PeLCfnvyW1mNgp5/fr1365LyB8XNzf3Zja16IXbw5acDCJd8hNNdFW8
aa19W98qg+JyU8k/QfRolNDpI8LhvkIX7WRitGlXVpnHLtwUxxqS8GvsVZaM
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
rJQvUR0HB4eZENX5gfUNflcztiIxUwmqQl3WytO27+T82bNnCbZ/+ZaJ/cLC
wj/tz/oumZiY/Gb9aW9v7759+wjgEJu+reZK7EyhUIitvykpj8+xZScnJ+YP
fluO8smTJwTkX79+TVznM/nh7i8UM2iTQ3ao5jpeseJaPrkgTao2ktIRaEr3
cxl09hu0Ota9OqZB5U65XN5dheIo2bI96hVOZpWaG15yB1Wx33jN+vQlW+OT
uT3ZS4cTyeNnRIf95fpt1bpp+p0Kjm0ivh+5g96tvPR6ZWYZ97MHom9vKbVH
aw2FmE0dcIbfFmzcD/tTsLk6YnKnm1b8QbnqhVrNfZWGOMWPJzXatpt2Ott3
63v2ih+kL4wf4igamf1xfNb48Gx0LUTDcrwkI18YqTK4oIoDWnAzhLk1dN2h
tgtSIRC6Cr674C0Hb/OY4Hi3FOopKDdEjhVS1uGyL84GIohw6a9g8214FGDd
a0b0Rn8QeuNduqjSRo4m4vQQYoEAJ6z3hIE/xIOxMB7zHoO9Fmy9jJnZWRjn
QB8nWpajjoQKPsb5ZEkwhp6LSjipjr00BvDX6cHGGKZW0LeHpgsonlDZCrkA
SO3HqiCInoDgGfCeB++lKZ64CXLSGAF/cvowKWuIlDNIejhAyu8nFfWRSvrI
pb3kpz2kZz3kz0Yq7yGXEe/0kZ70k4rppIIB0qNB8v3nS6OyFh7YNM/4C/D/
wqjOvyCfbSYnVRKKVxTuNFWZtn0n5wnIE6j/79/5F4vZ0ek3deCZJSX3fRbx
gqD6l03M/tTEDsQmbm7ur1v+EZBn7kzsw+wh8hvU+/v7b926lbjCz5w5Q7ye
yRNVf5VMTU31lwg0Cex9uzLyxYrsAsHKNPmPUVoDwdbjfh6TznsmbcLohskf
lR69VCrJUii/IPVyp8YrR6vXFPfqZSG1c7Lesr6pZWkvmzd0fxmSeHBafMJf
YdhKfUBjdZ/C+m7h7e2k4x9WxtaszKkgv3i8qvG2Sk+MzvgpCxxywfZt2HiQ
0chvTcKkaTZd42mr2utX6u8eqjYlqrSdonUFmPS4OPQZbqSL7R9cHDcyt3B8
9scplonx2ehfiI/L8YaMJ0K4I43LqgjWhLcBbKxguAG0AMgdh0g0+G+DtwS8
DeAbHhBHiwpe66LQHBn2iPdE5C6EHMP+CGxNZFQe21gChxoYt0Nr6JPOWJvu
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
Uc2DMgHkrEKyAs6r4bAGNuvCfjVMbKDnCtoWKO2F5DEIhYMv7nMHkEfj5IpB
8rtu3o5moaG3klMvlPCEigcE6o0Yw9DlNYhYh9PuOO6LwJ3Yux/bg7HpJNzO
wuUi1hO0v85IBLW7B+s8mD6ZMKwY1nnVr1nTSX3XrP6+ntL4mtpUQftYQmt+
RGvJprbeprRdV+9IVO28otx5UakrXLn7jGp3iHLPMcXeINXew9TeAwT/Kb27
NXp3a/bu1OgN0GLYDo3eHVoMC6D17iRITiX26dlP6Tmo2hOo3HNUufuEQvcp
lc5w1c4otY4rjIBM6y1qSyb14wPqhyJKYwWl4Q3l7XutN606L/tWPx00z59Y
cw9r0xjxGeeL2BgGn+OM5iYHduDoJpxxQaQNEk2QocsgfDlBeKG+j3zve0gV
Q6ScSd5rjMJr4oehvJWx5NbSHJ66OKyGy/KMXP0yclW2+v7dNo+LJUJS/o+I
5v/+tjz+9+fq/FMibsAZnlRJ6Ao/pVnObtr2t+b8v1geHh6ZmZlfUuV/rI8x
Pj7OvN5mWk4mMfQwJ14JyB9dSR0VPAmB8+C5BHICyLcmSfdGSYV00ssu8ocm
gb430hPFVGQY4fJaHN/CCFm4JMKseIzaWKvccU2tb9caukXAoGT08NziUbb2
ITZ0zce7pSjjwV1RxtLOIHVs1IKpCbTXM2ZgVx0Bf9QUOW2IVNJFbmjkH3wh
/+mxJm6tRowtzmxE0A4EBMEjjOEkO96BdTH0Xw+rN7XR2l5qdOWo9yeoD57S
HtltMeruOGbhPq4cMMkbNjU/FRxPMfsjWMYIzo9xoIcTTStQTcYzfjwUw01Z
RKvgGBX+2nDWh4U5DByh6QnV7ZA7BLEQCESB5xrImZPk/BHy835yfSdP50eB
4TrJCQL1JVTGSHfHEMmmjJniC/YI24CQTTjix+jruvsg/I4wwtcbCdpHYf1V
OCfBMRVrM7EmF1b5U6ZPxgwrhnSq+jWru6h1rWr1H9Tf11EaX9E+VFCbnlA/
FtCaH1Jb7lFb71Bb0yhtNyhtyertiWodsaodV1Q7Lql2XlTpjFLpjFTtvKDc
dUHl/7L3FmBVZl3///964/cIohioY814H1AxsIs8QXdIdwtYGCgm2GInYneN
3d2KgYkipdLSnOQECOu/176BYZwnZnjmmXF8Xde+vPBwgPvAuT/7u7977bXI
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
QL7nEO0RabNMpXMdpZM8qwKDUrzDDnuNm+8XOd875pTtqjdjjivbXVe1TanR
yKxp/bFGTaxSq5FTD6dCC5uDEEhm90AxnMogJ1HY98ZlO7nlyfr9aCPqiapf
RRNy5vIx8SbCnG7F2tKkSm8UxrzxYDgdT9EOWgZ90KJXUeumgknL61NC4HbT
FA45w/owPDo0YRMe/3e+X2P5toRC/opJ2T6TijV84Rx70QQPsW+AxDZMMmai
tE8cVfIH5O0uKto+VLZ5q2pdqFKTqFoR/oCwHZRSZ55dmJCp6ok27hve6Iei
lFBr7yhIopwnM9RcAb1sdiVCrRucoXzBIhg3kdG9oUY9Qf0wFvUroO9a0NlE
7fpdVNgfqeWcoDbORXmDtr8vZh5Rec8CP72MySLSupgwn1Pwgcl58cObW90f
nvzu0rYuB9Z22jZDM36cRnR4m2jD/xGQ0dRl1dTU1J+GKQ3/xpg6dSoRJOub
xSIaU5sF+1X/3z8Oy799T/5N6DEmSdvwzCDetZEm1/THZFgb5XkbiSebiOcZ
4l+W/KLItH6tP0705NeYSVNrKjqqZK3LVK3ScOO1zUFFu6XCnhFkzXjB1Vc8
1kU0TiCcNbpqlXHZfvLn4+W9NM8ssH0uc7+Bf9mQJJiUgClVK6NgqzeWM7rF
h1fDFbn9isjvSsFcwLoKQxdjko+tO0RYwzITODIUV5QZPaGsQ7mq1W1Fm83V
XaOlozzEXqOehP/Ssfnyu0f9MpK0gjN7rmrx+Mb53xp/uZSb5sEqGQJ5Jyen
nkP6G6RvMxImGYmXm0lnO0gnekgDA6QuoWUWEU8tIze5jZ/vOWm+59LTNkey
hz9WaRAxXFijJqpppVKog6QtZqqgh0NRSSQc6+E8bo76xmycbfqwgU2256MH
QnRgqAVWIHexR3FIgIle90S0BYbHwcAE6L2pnrNPxZyVMA9KdTLfDax4ZFh/
wh4PjcYuhKBd4HKrzirto1luCrf4jFF5kqByqZVwmoso1EfsGiwxjZAMnizt
vljWZUt1+yPydlcUbR8pNd4qEfJiAnm5OkK+TKthryHz+wYxj6ZNHyyeeWYw
Lkb20JTRNca4lTyXptxEmkOgBbjTlYi9K5X0/nj4VxCJ/Q2Npv2EeqKByavQ
XQ291zcK+931nAMs7VUcou0vkAWLnLkhawR+aa8HqT0unOqUtEpz3iS1UN5/
G7IMJzRmKX2Uxo0bN5KTk9NpfPz4sbKyUvb7Bflu5Hvm0EhvDPLjyA/duXMn
O1OQqeGzuSDEtHWsh0ZCVNukOZrX9nTIe9RRnNNOVKFRrsKNV4Jc8idYWd0x
8qRd+EZvvwqnsaJgC+H00cKlhuU7eMVneQWPTN+9s3pd5XK/1u8cBO3FYm4z
FzaI+X1uuOnw0LA+Y7CwWPs9eT9g/Zz+G3AjmCwD3cfiOmu9Af7JHvWG993q
RZo5Co1LCs3l1T3RnC/17TJ0QPPWz0Admy+/OuUvI0krLKPHuhaPb5z/rZGW
lvYXTblhS1BKpVIC+f5mViaZ1wSll7gVhwyrNhuJl5pJZjlKJ3hKA/ylTqEy
XpRs0LSckbOS+dM3jZ0y33N6nMfeO4L7+XoFNWrCmlZKhXo9or5DI+q7/wz1
RBizdv1pysy91ANZbwQJXNywm9lYNqHJ7rbyQ9TzJuAe3wiq6nU3gM7uGs4J
QsIyJp2s2W9zIckf0+Zdr4BZRp4g/wa/dK9x1VJLYYyLKMxb7BYkNh8nGTFV
2nuuVGuNrMMeebszCs1bijbPlBpZSvViAnmlGip5URPkuzX4Ti8axTy55ov0
aMChEbBrDGymjtNilvM0WSjIAqs0uNjRzQUPmngTiImFvChq1E9D92nkXDw3
NGQxbiujh0OE/UZ07LW30wT7A3VYJOGYjPmx4Pt9t7usXKwRPE3NvTnVz507
xzZK+30x/jsGOyOQINfJTgTkmslcQK6/if8XU/92V9HmmFyTLKkmpZiEJ/gE
vXN2F/nbCKMNhAv0KzbzSn7Emvk5aebpJfYpcq+rEHAUQrdgWYb5RMyPxwIX
PzrCdVPsPPhBt7ScSatmrtXp7IMBCaA/HawCwNceZvExw+eiHjxnIP87hahd
ulzjuFxztlQrVGJsttn+M8eGLGa//NZRfzcStSLe9tjU4vGN87812NTK2tra
P/tCfkM0laBkId9P4GKc+lZQ8Frw8Z6g7Cy3Yp+RcANXtNhSPNNZEuUp8Q2Q
OIRKTcbLBsRUd1sq77g+b/DaW2azV7jOiPNYsNL13F1+Vv5Apbz1T6gv+IWq
v09V/cUBDV49kcdJ+piSQVbZ82mm4gSCeopNZzZZ0QcNHH4k5tKPmYnbmoST
uuuhz65anWMy7eu5Q15cshGPO/LRLO+OWdkG86o5zqJxHmKPQLFNqMRgolRv
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
o/IfdgkTbLLkjTMJM75dNCfBhx2tzgrHnNdM5OtF5hn7F5vTymwdKlwtKjwN
SoOIwmiVnGQ5HksmkSEB/401T6TqR+RmD8sXCJR5Q0bpg87JgwGMgVhIp+/P
pb2ohHT6Z6RR//Ar93vf0W6fd7tx1/Pi86CekejO14m7UMoGlL4SxRV/dmze
jX8654XE/nXC5IfG+0cpl0JX59fjw3P+KOPvT7kZ/qUEJSIbjluZT5h/TuLU
uMSzEQlITcdivkcHWl1jnVzijhgByD+RdOarkF7DK8p2SLMhblw36fve4edO
D7Q1GDXGgas5uwiWX3lLUXoTbIyKBcdm1P1yr9vt6+73TtIffe32rNX1+TI3
KHGQEzWYkjgUzBpyzBBoThtWaBiR2/YL5B+Miw0Js2t65WEz1A1VKET5A7nq
imefb0ivpsUOShksdYVqk2VkRg3LC9JpIgIQvuMWanjvFNKB54E/45L/i3qf
Cp4Mlu6mc0m2LwYRDsock3kFyWoM7UZEaUKU5reUtW8pLW8prTjeUNa/oWx4
Q2kjY8MHgY/jR1vJM9chylp8IaKsQZTGu+pzgfMzdvkW9MQlAOcLXU7Ox5wn
trUrNe1SmrNPLeugbtxhK+8ud5vuBJNTBbqn5qp11U/+ulVq0xaRpVtFcjok
olp0w2u9YivjE3LTEnLYYdNyqIuqjObW6adNV7QO+aMDX1h22Cn0C1q2iHWm
vHEGJYQbHsmJ1+b4qadHqKemaCZk6EXkGfuRnLevcDUv9wLOF8QoZ6fIcVnS
CVESXpCV+kSybURm+bDcLIF83pAKb8gkfdA1eSAwbiAuvJ/l159PezHN6flC
52cN1Meb6A++pt89Trt1kXr9ntf558EnR2IOvEnYgRKbxt2tcj9ybIQ7Sv6u
T+wfc7DN1te6P/nk+FzH7O8ff08DQXwT+r4EZUpKipGZaP5Zqa/HpK6PSrwc
lEb3FUHMHzSCvktzsJj3ReHRkItiW4GMq99ot40QB58TF+4YPLpgNdpFheXX
tWQu5bxccGyyFyHOKkhXY+xDoSdeuv/U7walbM7ArihIpKxz7p/p15+Hb6gT
B8PSh5wzBMS04SkrSch3kb2iHo2LCYR58njGuacMtWsuasKq63GyoMFuM8ir
abJ/J+On0qF6ML7jSPJB0QFQbUao4YHwbHDgXXMgYca+FMwZjHc8VWHpbrQQ
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
4tzNoux2iYCNirQN1tYtvvprGYZrMo0bphstrzFf1OQ4daNbzjaP1N0BUV/F
RrSmRi1lJ+VzEvMyI8tLPGfP019QJp2ZJOL7r7nrSmjLB3t/wc+amJg9ITBr
UgTPK54TZco3JniWKlxXVZafOhNznknEZeiH5Jl4k5y3KXMzKfXWLQrWyI1V
zEiVSWdLxfpJUj29/qN3XOT2mNj5MfHjYxJ7R6U6RmRWDcvOFyiUDKlmDOqn
DzgkD/gy+qMj+tMCXmTT+soce+c6Pa1zfdRKu7+LduewU2W5lpbWrx2bvyfV
4Y8+Eqzbq3z7Pzk+c/63DCGN/+OXsXbt2g8fFVYzw5z/jamV76uT4ael0Wgm
ya7R9/0yBfrLRxS6xiUfjJAVIG+owvLrbjKXssQdJYYg3yTklA+Oh17TGPE1
pt993fs/WQ4dd4XmgK3krqi5eaiC7ADLbIQtJ7EHUeCZUa/Lj91vX6Lf/472
eLtT7yr7/jlCJZ8wGMYacsoUaMwcVmgakf1qTOrUuMStcbH+cdFXQ1LvVl2v
/+LVHNWDJdfNVqjZHsqRzaFCjZ0ML5RCLrYGhyN/BvjwmPBuWZBFY09aNOak
gNerRrorsHp/S1n7htIG0p2yndTte0m2H8YcxkD+hepnSZhf7CUuPSOuPCWu
PSWuPyFuPCZuPiZuPSZuC+MRcUcYjyFuPyFuPSFu4tPwyU+Jq/hCfDl+EpL/
50jyn96v2Aicn9Ppn9WTEHuK63uqxLl7qcnetWodHUorditN26fGPWgQcdiW
1uVr2Z1q3FOi3b1I+cBquZ1tYs1bJs3eLMpql/BvU6att7Vq8TdojjdqzDZe
OcOwrtZiQZNj5Ua3rO0eKbsDIvdE+u+Op+5Mt9uWRW/IDazKYGRnxmWWBOVW
0bPqNZgz5byZMsb/OruuhGWHbY3+K4c9iZc1MSFrQhTfKYkTTefZ6fP0tLiW
yhzMeX91ZrR6EpOIzdAPzjPxKrZ0KbO3LnMzLvXWKQzRyImdwk+VSWNLxXhK
OjOT/mtkRPz5mOi9cdFLY+I9oxIHRiW3jUg3DcsuFsiVDSpkD1LYA9ap/Z4J
LyIiXyQH9mV49BW79FY5PV3m+qjZct/iz47Nr0e8bfvMgP5PjoKCgt0fjH/2
X/MvOjDkscA4e/YsJnNuLmyf/7Bo3v8q5eY95LGIws+pnU4Pf8ZIH3KaP6yF
5fTVcfGXwxKw/CrcGLXOFs2iIlYACowDflrNRAYryRybE490b1416z/pBLZ8
G1l8eEE2mjoVmjUwG6BYWewBFHR6zPvSE/rty7QHAHnn3lUO/XN8APJpiYOh
7CHHbIHG7GH5daOy+8akfhiXuDcuBttdB6ShzvCdX7yabrK88E4zkPErHdFC
V6g2mesJOZOxASg0DPa0vie8UyGY8FYzIO/dcBHSq0U6DUi7Gav3nykdLyk7
SOn+7QjRKSC6BolurLox2LFE7yV+IqmOkY5hfvchcf8B5cF9yqN72k9w3NV+
dpfy/I5O7x2d58K4rfv89rvve+/qPLtHeXZP+yk+8z7l8X3KwwfE/YfEvUcw
I2D4C8l/aa/i+inKepjzAZk9CdEk552OVxt/vVa1Y7NS3W6lym9V2QcNww/Z
Ubv8LLvTjHtKKccXK+1fLbdjo+iazZNmdYimbZLwa1Olrre3XBdg0JxotDrH
qH6mYV2d5bxmx/JNbpnbPZN3B0bsifTbleC2g2W7Nde0rVyvqUpjxTS36SVB
OdmxnOxY1rTApMWu4Y16zlO1dePVFP7pu67wnYWG/H9mxYnl80S4WRMSMnVT
OBGhPHczviLmvCbXSpnjpprur54arZHIJGIy9IPyTDyLLJ1L7a1L3YxKvLUL
QtRz4ibzUqWZbKkoNwn70uwv3/RLj4+IDY6LPBoTvTYm9sOo+JFRyd0j0q3D
MrUCuZlDivmDBHfAgtlPTXwRHNMXH/qc4/U83+XZNPt78zSNKfgj9uFHRujY
/Ls2fv2Ng2HfPiN44JPjs57/m0NYmvVDDY/5/GG619DQ0G9sICgsQfm+zjBR
HOz/lJMy5D9t2KhlVOb0uET/qDhUObikAZuPOizQIleU6YNCwskcm0pkWPOa
0i4gjj7RuXLDuO+M/c8HPFF7KDTfWZSBplfAbvH0ekiwifsWBfeM+fz0lH77
ihDyTu8gXxA5wEwaDOYOOeQL1OcPQ+2aA2NS5yG1RnRsTBT1y6BHU8Crgbwa
csl1HynjmxzQMmdImyzygC7bcb7QyCkgBupJenAgVRIT3rYCdq2azCcd+OWk
gG/BL/gVgdX7VyPEfgFI92MDRA8W2CTbL2GwY5X+iLj3kHh4n/IEExuj+5Ze
302DFzcMBq4bDVwzHrxqMnTFRHDZVHDZDMfwBwEHr5jiR4euGg9dMxq8bjR4
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
3dmi0rJFcdEe5YJ9WkkHTAMPOTh1hZp38wxOzlQ7VDP5qyap9vZJNe2T8jaK
RW6Q8Wo1cFxHNWkOM2xkGq0sMqqdb7qw3mb6Ouf8TbT0bV6xO4ODd0R7bE90
2MI1byswWFOpuXy24qIFClOXyufUKKTUTYlYru67Qtt1hYF1vaXRSlfdVQHE
6hi11cwp9Xz5ZXnSMwusivPpPH40mx+dlhERk+fuXmJsxFNTj9KcZCj9ewEf
SxQPD48kE7mpvlMqI+RKGVIZ6X5cdlhahkJkxgQPnqgVV8qIo6rDNtRg2Sqn
k5xPitOMS9MO5xv45ppQC63six3Ni6l6RT5auaEqfIY8K1UqgS0Voj1Ju618
Mjqmg05qo+8JdF5Ie1Uh7d/0yowPSAwIRB+NiFwdFj0jED80JLFjUKryGwn8
d2EV9OFnZzM5/nGf6z/WiKC3FycOfHJ85vzfHL/m/K8d+1OnTvH5fEz1DyX9
r+sMm25a6vqsmdpfETXIyBY41YyoYeQ+HBd9+0Ia3VRDJ/SgIFi1M8rxQjFR
sPZqU4kM637W3jpIdD+m3L1sNohl6m4/1ByJalhQwQZDnochv/E95B/Tb1+i
PThMe9rh9ryW2l8ZPMBjDEalDbkWCQyXjChtHJU5Oi55ZVy8/6XIK2FezS0V
uIk4pQ0yfqcFarGF3U8zqbA0wPSFbq0B0ZBOQ+NDPvw7Db8E6dWTJnz7S2L3
CLF/iPiunzj9nLj4lLj+UPvePe1nN/VfXDUZwtL9R9vx7x1+7nF5g6cnrNix
6j7gDSjGVN/lD2n/mOQY4BtDoUNcaxg0Ll8bDn9gUyRqjEBroiAao+DmpTEa
vmkkj+BHmyJQczhaF45aw9H6UNQWgjaFwCyAJwj8tDtJ7ONbAKz5D3jCnUI+
pUHfPcaj8nAoyXm+Z88M287l2jtaVdZtVVy4Rzl3H5FwwNT/kKNDV5h5N1//
xCy1ztrJe5qlNm6atLRdJGujeMR6eY9WI/u1NJOmCMPVaUb1JUbLFpguWGk7
dZ1LbjuNuc07ZmdI4I4Y921Jdpt5ZusL9VZN1aidPWX+AoWKJfKZyxSSahXD
lmt4L9d2Xm5oucLKsN5NpyFAa1WMagNzynK+3NJc6XnF4jMqJxVNm8AusUzK
80rlxSTxYqMzI31z/c0KqIopdjKBVl8oy/09u66E3QADVaUrXFUqgfOy+UnO
XFZkBsc4NePLcP5Ed56oJVfakKOmzTZSx5xPo6umBgPnY9O0w/gGPrkmbgVW
dkWOZkVU3UJfrZwwFR5DLj1VKp4tFaw6QW1XuRqYfgcNUJcuOqGNzhDoR010
SR1dV0F3lNBDhdfPZEdeSPYNiN8fEr08JNp5X8zBQPazY/PXR5hHe2HKwCfH
Z87/zSF0aT68o/w1+YWplR+m3AjvOoX7ZIXzgvmOZpenm1xfzA4bSOcN0ecN
a+4Yk77xUmy8XwaM8dPaUL99hSPUN4gLh97WduXIuOZnnc1DxLEnlFtXzPpP
uL7F7FpLQr6q6J2ST92IYvdBjTKfSw/db1+gPThIfdpGfV7t3l8WNsAi8ydt
y4a1l49M2T4q3TMucXtcfHRcBL2QgZWya2qQwHlcF+0zhko1DY6w3lrsDuXi
GeS+J58kqDzmnA+5NKDhlyDdlW8p634mNpMpNIewgCf9mSuPKHfu6Ty+ZdB3
1XTwouXIWbvx044/4xeMdTtmOxbYWGkD2AMB7BjImMwY0QDzaFhlaIhFKxlo
RTxangg5onXJ0Aa6NgU2BUAwf/kmFQ7ih5Ynw2n4ZHxJPQM1xKFVMWh1JFoT
AdMEni82YOyTsh//Rvx7v/JFmXoNBkFpnhVHQlknkiJ6+O4nZ9ocXAGcb96q
OH+PctY+CuOAmW+no31XhPnxTL3uKtWDtQq7myU3bJq0cJMIv008bP0U9xZT
u7XuJmsiDVaxjJaXGVUvMp23yraixSW7nZa6zTtqR0jA9hja1mTbDr7JukLd
lVPVls2eMneBfOkSed4yhfgapZA6Dc86Hac6Q4vlVgYrqDorA7VWxqrWMyfX
8uUW50rNLRafVjGpYOqE9MqJkRUinmUSXgV2odmBCbzEeG5SKJ/hmRFrkhmn
FBcuQ3P/tF1XNTU1RpMmFpqplbuqVPhNLokx56dFZqZRMzgTU/hfhvEm0rli
FhwZA7a6NstIPd0OOJ8SrJbI0IxJ0wnlG3jnkJwvdDQtBM5rZocpY86npUrF
saWCVDDnswnobrnNHH1ljA7oo6O6qFsbnSbQWU10UR1dU0W3ldB9hZ+fyIz0
SbwYFCnnTrawsPjs2Pz1EerVns8c+OT4zPm/OfA78MO8Svwjflt+VEYP/f8N
BIc/KEGJIa9EIyy+2eb6eCetb0nIQGbakE/lsFbbqMzFcfGhAcxbJXROC+03
RKvtUbkHSgiFBBv7EmRS/Vpn0xDR9ZS4cdXsxUnXN3t80boPIU9m18R+i4JO
j/hcvu9+9xwNCpS10vsWew0URwwwkwf9OQLTymG1xhH5b0alzo2LPxyV+HlE
HGra45nlJw10iqxjsNMcrbVDS12gEFmGFyz+hobDYqs7G7nkIttyILzBEqSz
8q126yti6xjxjYA4MkCcwgL+CXHzvs7D27p914wHsXo/Z/fylNPr425gmGAV
jeU0ZuzWQFDsWK6viwCwr44BLK9IAJhjbtekgQFVzYGuKIt5aDEfckQXZqKF
WWhBFmwKEMZCYWTBQ/gEHPjMJTy0lIuq2WhZOswFmP91QvLHAvax7F8bgVrC
QOp3BKF4nQX6sbme5UfCWCeSw09m0k/Msj6wgrK9VaVpq+Lcr5T5e7Xj9pv7
dDradUWaHc/WPTZbdX+dwq61ki0bReZuFOFsEA9tVaatM7dt9jRZE6XfwDGq
Kzdcuthk7mq7shaXzHZa8jafyO2hftti3bakWG/KMG4q0l4xVXXp7MlV8+WL
FstzqhXiapSCajTda3Ucao3M66z1l9O064M062NVljMn1/BlF+ZKzS4Wqyif
mFs5IbViYliZCL1Uwq5Y0axIx6DQgp4diDnP4DAZnPQgbjqdxTNMztPyTVMy
D/ztu646OztVv/iSo6laaqle7qZSFqCRmRKaleqXmyrG40xM5n0ZwptI5YqZ
c2QN2BoUljFwnukOnE9gaEWn6YTw9b1yTFzzrW0LHU0KqToFvhpZYcpchmxq
ilQsSypQeaLaAY4hWu6IGu1Rqw3abIl2maJ9huiwLjqmjXoo6AdNdEEdXVZF
N5TQ3clHtkpjyfRrx0a4nvV5vB8hPu25rIFPjs+c/y0jJSUFvxsx6s+ePSv8
/qN3JiJTboSple9LUKJfcu91qpe6PfzWo3dF0IvCxMHAPAHROCp7ZlziOYb8
4ymwYtVpgJpt0TSyh4h3EnIsQqZLXutsxDh9Qly/atrX4/Jmj887yM8qhuwa
bj1K7UAxB1DADyPeV+663/2e9ugbt2fNHn3z/QbyowcSmYNemQLdWcOTW0dl
D41JXnkp1jss+XZQGpZcr6vBzHJMDyrVbLSGBn9VpFGT6g8lyPzioES8aw7s
aTWvQkZLkW4DLLNSto8S+0iL5vte4vIj4u49yrMbRi8umQ+fsx0/TeL9sDv4
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
AoFAIBAIBAKBQCAQiPHh/wIY9GOF
    "], {{0, 221.4}, {302.4, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{302.4, 221.4},
  PlotRange->{{0, 302.4}, {0, 221.4}}]], "Output",
 CellChangeTimes->{3.900001265819786*^9, 3.90000611692241*^9},
 CellLabel->"Out[76]=",
 CellID->585874490,ExpressionUUID->"afcc731e-01c4-45a2-8430-0be7df637f41"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Series expansion at the origin:", "MathCaption",
 CellID->4255939,ExpressionUUID->"7ca3ca54-237a-4ef9-b10b-6751e8e3ebb0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"Subfactorial", "[", " ", "x", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "0", ",", " ", "2"}], "}"}]}], "]"}], "//", 
   "Normal"}], "//", "FullSimplify"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->340278271,ExpressionUUID->"28b49248-16e8-4451-9712-f984cc9d13d5"],

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{
   FractionBox["1", "2"], " ", "\[Pi]", " ", "x", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "+", 
     RowBox[{"\[Pi]", " ", "x"}]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "\[ExponentialE]"], 
   RowBox[{"x", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "+", 
         RowBox[{"\[Pi]", " ", "x"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"\[Pi]", "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"ExpIntegralEi", "[", "1", "]"}]}]}], ")"}]}], "+", 
      RowBox[{"x", " ", 
       RowBox[{"MeijerG", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "}"}], ",", 
         RowBox[{"-", "1"}]}], "]"}]}]}], ")"}]}]}]}]], "Output",
 CellLabel->"Out[1]=",
 CellID->394553506,ExpressionUUID->"d5c7723d-1bac-4c6e-bc3e-015078d40daf"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "8f66a9d7-e53c-4bc5-84ea-ad58610710d7"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->34228752,ExpressionUUID->"a586e236-7cd7-4bd9-afe2-64ebcfa993de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Series expansion at ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Infinity"]], "paclet:ref/Infinity"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "9e35f920-c1e2-4d86-bd8d-af785d03c168"],
 ":"
}], "MathCaption",
 CellID->758466417,ExpressionUUID->"8444117f-53b6-47c8-a2f9-a3f865d6a719"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"Subfactorial", "[", " ", "x", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "\[Infinity]", ",", " ", "2"}], "}"}]}], "]"}], "//",
    "Normal"}], "//", "FullSimplify"}]], "Input",
 CellLabel->"In[74]:=",
 CellID->11744335,ExpressionUUID->"5cd080f3-361c-4c1e-90a0-755ac06887f0"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "x"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "x"}], ")"}]}], 
   SuperscriptBox["x", "2"]], "+", 
  RowBox[{
   FractionBox["1", "144"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "1"}], "-", "x"}]], " ", 
   SqrtBox[
    FractionBox["\[Pi]", "2"]], " ", 
   SuperscriptBox["x", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["3", "2"]}], "+", "x"}]], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"24", " ", "x", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"12", " ", "x"}]}], ")"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.9000012793448853`*^9},
 CellLabel->"Out[74]=",
 CellID->112085041,ExpressionUUID->"4984f78c-6409-48f2-91f9-d57393f80d32"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Now that we can count a derangement, let's discuss partial derangements. We \
allow the number of fixed points to be a nonzero value.\
\>", "MathCaption",
 CellChangeTimes->{{3.9000016559805746`*^9, 3.9000016822010574`*^9}},
 CellID->732162013,ExpressionUUID->"8419c34b-d556-4ca9-be86-616af49f6847"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"randomSmallSet", "=", 
  RowBox[{"RandomSample", "[", 
   RowBox[{"hazelRainbowPalette", ",", "4"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.900004576552956*^9, 3.900004589487993*^9}},
 CellLabel->"In[24]:=",
 CellID->244982983,ExpressionUUID->"c8cf25a0-0305-413b-8f40-ebc1c22ebd15"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.6713375885659421, -0.17833924308420873`, -0.26467794346262646`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7621596783781963, -0.3310170840401606, 0.08359158699165539]|>,
    "LUVColorSwatchTemplate"]}], "}"}]], "Output",
 CellChangeTimes->{{3.9000045898719516`*^9, 3.900004594463586*^9}},
 CellLabel->"Out[24]=",
 CellID->851438496,ExpressionUUID->"744aa3ee-0cd1-4a6c-854c-4bd72d1488ea"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Now we can find permutations with 2 fixed points. I have to apply Rasterize \
to build the documentation without errors.\
\>", "MathCaption",
 CellChangeTimes->{{3.9000045974112844`*^9, 3.9000046281791945`*^9}},
 CellID->28447423,ExpressionUUID->"699d3a9e-554e-4700-95c9-25f6331f21f6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"MultisetPartialDerangements", "[", 
   RowBox[{"randomSmallSet", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.900004610471946*^9, 3.900004634103441*^9}},
 CellLabel->"In[25]:=",
 CellID->260451403,ExpressionUUID->"cb334c81-2895-4ec4-9c34-20129aad31aa"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnTFuE0EYhSNoKElHyx1S0FJFtEHIRRoSCNE2iRSQUC5gaTsKitzAJ/AJ
UrnzBXyD9JRmYCXLSrLrf+ZfP+/7/T4tUUCjnfG89/75LZzN2/Prk28vDg4O
vr9KX07Ofr6/uTm7/fg6/eXT1ffq8uri64erHxeXFzfvzl+mf3yT/vxJ3/z7
fimEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
7AGLxWI0GlVV5Rwj8DSiJHW2cXOJPlik+34i3fcT6b6fSPf9xKJ7ljfS4Pl8
XjBm/Pk067Ispo0v49OsyzPX6fg263LNdT3Oup7eIemS1PGsoY02YyB19++P
HS6PBdedKoN2/B7D647MRdTawph3rlzY4apjO9AdWHuhZy7Qz36PWXS3e+P4
+LhsTFrb7FdtvPxN/u9Zbbz8DVg9mxovf4NRT2bGq814FgULaLstUvde9scI
ncci686WQSO9eAysOzIXUWsLY97pcmGEro6hdQfWXuiZC/RzLx4r7sx7vJWa
/IE0GJGbvaAHDWPxpzscrXOxeUxNPl1tYcw7XS6M0NUxNflq8ttQk18GXYMR
udkLetAwFn+6w9E6F5vH1OTT1RbGvNPlwghdHVOTrya/DTX5ZdA1GJGbvaAH
DWPxpzscrXOxeUxNPl1tYcw7XS6M0NUxNflq8ttQk18GXYMRudkLetAwFn+6
w9E6F5vH1OTT1RbGvNPlwghdHVOTrya/jY1j5vN5VVXdj9bpGKMmfyANhkXH
LLpvGPUgpvNYZN3ZMmikF4+BdQ/bgLE1+WDd6XJhhK6OoXVXkz+MJt/ZnzdM
JpM04OHhoeMmHWPU5A+kwUjqJI2SUp6VrNNtjKgHMZ3HIuvOlkEjvXgMrHvY
BoytyQfrTpcLI3R1DK27mvxhNPkW3Y1jNj5ps22M/4Xc3d0Zres3g30uv8kz
5urDeEmd7ndq9vWs6DAGUnf//kT12DK27lQZRHpsCdcdmYuotYUx71y5GKjH
GHUH1l7omQv0cy9N/kbdjWOWu/tMftqxg//Udb1xAU4zZM3lNHneXNv/TH7W
eiy3Reru3J+oHmuIrDtPBpEeawDrjsxF1NrCmHeiXAzXY4y6A2sv9MwF+nk4
n8l33sr5Qu7v75tNsyzAaYasuZwmz5tr+01+1nost0Xq7tyfqB5riKw7TwaR
HmsA647MRdTawph3olwM12OMugNrL/TMBfpZTf6K0WiUNq2qqo0L8B+O9rn8
wcyYC/J0Hft6LLdF6u7fn6geW8bWnSqDSI8t4bojcxG1tjDmnSsXA/UYo+7A
2gs9c4F+VpO/WCzqum52LJHeIm1cQLEZCuYqNnnJXNts8gvWY7ktUvfi/Ynq
sXUi686QQaTH1gHrjsxF1NrCmHeKXAzdY4y6A2sv9MwF+nmATf7Gj+4/O6b4
haz+4+Pw8HDbP6BRMFexyUvmcjf5SZc2oQvWs06bMZC6F+9PVI+tCK47QwaR
HluB1x2Zi6i1hTHvFLkYuscYdQfWXuiZC/Szv8nv0D1rzOolHB0ddf80wbNj
nO+Ip9Op5eeCG5zv+LLmcr6TzZvL1+Sn6ZIubcYrWM86bcZA6u589x3PYw3x
dWfIINJjDTvRHZmLqLWFMe8UuRi6xxh1B9Ze6JkL9LOzye/W3T7mEZZftfBo
jJ6T3/buO2MuX5Pf4y/IaOPpFFGfZU3ksfi682QwC6fHdqJ72GeY8zwnfye6
E+UiC6I6thvd9Zz8XT8nv6Ab3xJpbVmXZ66kb9blmSv5NutyzXU9zro8c/UF
Unfk/kT1WF9AdQ+aQaTH+gK55qi1hTHvUXMRtY71BXLN0DMX6Gekx57yF5kx
Tp4=
    "], {{0, 14.399999999999999`}, {609., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{609., 14.399999999999999`},
  PlotRange->{{0, 609.}, {0, 14.399999999999999`}}]], "Output",
 CellChangeTimes->{3.9000046345577154`*^9},
 CellLabel->"Out[25]=",
 CellID->665869934,ExpressionUUID->"8533c48c-b6ab-41a5-90c3-434367afb3fb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Now let's look at pure derangements of a small multiset.", "MathCaption",
 CellChangeTimes->{{3.90000464235942*^9, 3.900004653154627*^9}},
 CellID->45932736,ExpressionUUID->"abe22dd1-0743-4eac-b7d6-2b9451412981"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"smallMultiset", "=", 
  RowBox[{"RandomChoice", "[", 
   RowBox[{"hazelRainbowPalette", ",", "6"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9000046541528826`*^9, 3.900004660799079*^9}},
 CellLabel->"In[27]:=",
 CellID->277919701,ExpressionUUID->"d6df016a-4f1e-48b6-bac0-8f5d6069b658"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|
    "color" -> LUVColor[
      0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7621596783781963, -0.3310170840401606, 0.08359158699165539]|>,
    "LUVColorSwatchTemplate"]}], "}"}]], "Output",
 CellChangeTimes->{{3.9000046611866455`*^9, 3.9000046759391565`*^9}},
 CellLabel->"Out[27]=",
 CellID->7493652,ExpressionUUID->"7aac0f1f-e689-4614-8715-0f7c94994231"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"MultisetPartialDerangements", "[", "smallMultiset", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.900004665260414*^9, 3.900004674170335*^9}, {
  3.900004730400802*^9, 3.9000047323641806`*^9}},
 CellLabel->"In[28]:=",
 CellID->87289371,ExpressionUUID->"5ecf6474-ec4b-4eeb-aab6-99b1dcd24fc3"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 138.}, {580.1999999999999, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{580.1999999999999, 138.},
  PlotRange->{{0, 580.1999999999999}, {0, 138.}}]], "Output",
 CellChangeTimes->{3.9000046808796973`*^9},
 CellLabel->"Out[28]=",
 CellID->172278896,ExpressionUUID->"3cbedcb2-dce4-4c89-b705-939eb8682788"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Let's count them.", "MathCaption",
 CellChangeTimes->{{3.90000468328094*^9, 3.900004685655489*^9}},
 CellID->372409988,ExpressionUUID->"e81fa305-8d0a-401e-84d0-5ead2feeac33"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"MultisetPartialDerangements", "[", "smallMultiset", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.900004665260414*^9, 3.9000046905561113`*^9}},
 CellLabel->"In[29]:=",
 CellID->204572566,ExpressionUUID->"0a62f36b-a3cb-451e-9d71-45fd5ea7c193"],

Cell[BoxData["29"], "Output",
 CellChangeTimes->{3.90000469089192*^9},
 CellLabel->"Out[29]=",
 CellID->349098055,ExpressionUUID->"1b390cf0-ef52-4665-a0eb-be3f7e79d2df"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
To compute the number of partial derangements of a multiset, we integrate \
Laguerre polynomials.\
\>", "MathCaption",
 CellChangeTimes->{{3.9000046924566197`*^9, 3.9000047140265994`*^9}},
 CellID->705395511,ExpressionUUID->"adcb0526-8890-4bc4-8997-6a94857877f2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EnumerateMultisetPartialDerangements", "[", "smallMultiset", 
  "]"}]], "Input",
 CellChangeTimes->{{3.9000047148197327`*^9, 3.900004737378882*^9}},
 CellLabel->"In[31]:=",
 CellID->197135344,ExpressionUUID->"f7d2ee00-4413-445b-a5cb-3687490cdd22"],

Cell[BoxData["29"], "Output",
 CellChangeTimes->{{3.900004721481754*^9, 3.900004738000269*^9}},
 CellLabel->"Out[31]=",
 CellID->56352306,ExpressionUUID->"98c45e96-5f82-4515-ad02-37da245a2915"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Let's compute the number of partial derangements for a multiset with too many \
elements to list the elements one by one.\
\>", "MathCaption",
 CellChangeTimes->{{3.9000047423650775`*^9, 3.900004767985769*^9}},
 CellID->311141836,ExpressionUUID->"9adcec53-f386-4f5e-bc19-b4811a89c9f3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"randomMultiset", "=", 
  RowBox[{"RandomChoice", "[", 
   RowBox[{"hazelRainbowPalette", ",", "21"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.899749235227027*^9, 3.899749241947027*^9}},
 CellLabel->"In[32]:=",
 CellID->407433582,ExpressionUUID->"f342c29b-06e2-4b88-aab6-9d0312a76538"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7621596783781963, -0.3310170840401606, 0.08359158699165539]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.6713375885659421, -0.17833924308420873`, -0.26467794346262646`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.6713375885659421, -0.17833924308420873`, -0.26467794346262646`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.6713375885659421, -0.17833924308420873`, -0.26467794346262646`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.6713375885659421, -0.17833924308420873`, -0.26467794346262646`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"]}], "}"}]], "Output",
 CellChangeTimes->{3.8997492424170275`*^9, 3.899756392273822*^9, 
  3.8999993916985245`*^9, 3.900004547187874*^9, 3.9000047736281934`*^9},
 CellLabel->"Out[32]=",
 CellID->349274851,ExpressionUUID->"f4c23f5c-5f30-4bdb-a664-d1723d3085f4"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "49e09992-2f04-4c42-8fcc-9abff76cfeaa"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->518217,ExpressionUUID->"c7696599-5a92-4dbc-bea1-5f22795159ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Count the derangements.", "MathCaption",
 CellChangeTimes->{{3.8997492487266345`*^9, 3.899749251993189*^9}},
 CellID->194380331,ExpressionUUID->"0745db30-85fe-4960-ab46-4c6f3c11242f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EnumerateMultisetPartialDerangements", "[", "randomMultiset", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8997492528242707`*^9, 3.8997492577693224`*^9}},
 CellLabel->"In[33]:=",
 CellID->653333490,ExpressionUUID->"ef5d352f-6c36-4d25-8d19-d79378083c1c"],

Cell[BoxData["46907596048"], "Output",
 CellChangeTimes->{3.89974925874524*^9, 3.89999939540909*^9, 
  3.9000047760658417`*^9},
 CellLabel->"Out[33]=",
 CellID->531801412,ExpressionUUID->"c6475e9f-1300-41ef-b41b-b9445cf66f5e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["This is the same as having 0 fixed points.", "MathCaption",
 CellChangeTimes->{{3.899749286926594*^9, 3.899749296237387*^9}},
 CellID->158717184,ExpressionUUID->"3d555f38-22ed-41cd-bb99-9dc5b439c093"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EnumerateMultisetPartialDerangements", "[", 
  RowBox[{"randomMultiset", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997492528242707`*^9, 3.8997492577693224`*^9}, {
  3.899749298277933*^9, 3.899749299605976*^9}},
 CellLabel->"In[34]:=",
 CellID->414886273,ExpressionUUID->"822c8147-07bf-4e7c-a086-0361afef6988"],

Cell[BoxData["46907596048"], "Output",
 CellChangeTimes->{3.899749300486975*^9, 3.899999397716818*^9, 
  3.900004780042593*^9},
 CellLabel->"Out[34]=",
 CellID->341067037,ExpressionUUID->"e2cd08c4-acdf-419c-a938-09ccdd491fcb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Now let's see a small example of partial derangements of a multiset.\
\>", "MathCaption",
 CellChangeTimes->{{3.90000478242581*^9, 3.9000047923958044`*^9}},
 CellID->36989666,ExpressionUUID->"442c0082-c9d1-4e1e-9b04-4d3d2cb29f18"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"MultisetPartialDerangements", "[", 
   RowBox[{"smallMultiset", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.900004792895462*^9, 3.900004805476451*^9}},
 CellLabel->"In[35]:=",
 CellID->55412944,ExpressionUUID->"71c34c98-a438-4ed1-a69b-1de79f743fa6"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
HgsP+RCiFivVyHjYFx7ygjqMvwoP+WCgFivVyM/DWHgsFdSSeELweT2fu+S9
EHe1E9jnqD0zrM893MBndz5rXkN3tbOSz1WxGEKcFZS3m1Hgph3VZ3eNVDNW
YJ+j9sywPjNUZ4nqM0M1Q/VdYoUtKG83o8BNO6rP7hqpZqzAPkftmWF9ZqjO
EtVnhmqG6rvECltQ3m5GgZt2VJ/dNVLNWIF9jtozw/rMUJ0lqs8M1QzVd4kV
tqC83YwCN+2oPrtrpJqxAvsctWeG9ZmhOktUnxmq7z5UH4/HYRhmv4p7Zghx
V1DebkZ5/RrAZ4bqO8YK7HPUnhnW5x5u4LM7nxmqNfvzLG9vbynKx8fH7J8y
hDgrKG83oyRe0i9JKFnJNfjMUH3HWIF9jtozw/rcww18duczQ7Vmf14iBVp6
fZ88Qa+vr4Vb0IwlL6iKfYllsBmrS0El8ZYabO16LuDzqj7L827T5y5NO7DP
UXtmWJ97DFf47M5nzWvoq3bO6/i8xErPOKUVfvnDOI4316AZS1hQdfuSyWA2
lsIz1VXrKTktPst9FubdrM8Kz+y59jlqzwzr8/rPVONzvLxHrZ2JlXyuiiVM
0Pv7+7TIkufDNWMJC6puXzIZzMZSGKqr1lNyWnyW+yzMu1mfFZq2a5+j9syw
Pq8/VONzvLxHrZ2JlXyuiiUvzM1mkxY5DMPNNWjGkv/TT8W+xDLYjKXz9o/y
9ZScFp/lPsvzbtNnnW+X+/U5as8M67PK2z/wOV7eo9bOeTWfq2I1J+h0Oo3j
OK0wkT4C3FyDZqzmgmrZV6sMxmOtOlQ3rKfktPgs97k578Z9XrVpB/A5as8M
6/OaQzU+x8t71Nq5ZiWfl2LNPr/dnKDLL9Kfnp7WfsC+IVZzQbXsq1UG47Hk
Q3VSbknyhvVcg8/r+dycd+M+y5t2bJ+j9sywPouHanz26LPmNXRROxfW83np
nM/Pz58fzxZ+6tnv9/nvWt4rlvBTat2+ZJ9SzcYSDtUpXFJuSeCG9VyDz+v5
LPzthFmfhU07vM9Re2ZYn2VDNT479VnzGrqonYlVfc7w+Z3YvNd39PWOSj/v
d137BeyzIfBZ7rO7d5PqxArvc9SeGdZnmRv47NRn3lN9r/5cSLrmVYeXWKlG
qg7Rvrbfqw4vsVKNVB2SWL3AZ7nPmnmPWju9iOpY1D6m6rOiG73AZ195j1o7
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
pWec0gq//GEcx5trECaoKpYwQWb3pZkvhWeqq9ZTclpH18ds3lV99tMTJvC5
i8/057vX6URgnx3lwmyd0p8zrCT5+/v7tMiS58OFCaqKJUyQ2X1p5kthqK5a
T8lpHV0fs3lX9dlPT5jA5y4+05/vXqcTgX12lAuzdUp/zrDet3E3m01a5DAM
N9cgbwLlseQJsrkvzXzpvP2jfD0lp/V1fWzmXdVnVz3hjM+dfKY/W6jTc2if
feXCZp3SnzN0l/x0Oo3jOK0wkT4C3FxDc4IaYjUnyPi+NPO16lDdsJ6S07q4
Psbzruqzh55wDT538Zn+fMc6vSawzy5yYbxO6c8ZUqzZ57ebxbv8Iv3p6Wnt
h94bYjUnyPi+NPMlH6qTckuSN6znGgs+N18f43lX9dlDT7iAz718pj/fsU4v
xPbZRS6M1yn9OUM65/Pz8+fHs4Wf5vb7ff67ln8VS/appyqW8DchZvelmS/h
UJ3CJeWWBG5YzzUWfBb+xsBs3lV99tATJvC5o8/05zvW6UR4n13kwnid0p9v
8vmd2FHf5ch7UOX5Eg7Va7+AfTaEo+tTRdQ6ddQT8Lmjz/Tnu9dpeJ8d5aIK
3lN9r/5cSHKp6hDF+rGtOiSx0jWvOrzsSzNfqR6rDkmsXkS9PlHrNGpP6EVU
n+nPvuq0F6rXJ2guVO879GcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMTpdNpsNsMw3Hsh
8ChMviXx1jg5PoMy+AyRwGeIxKo+L0U8Ho+ff77bfq86JGtQjfVjW3V4ibXd
fas6JLG+7rZVx+czJOWSeJI1LPFoPstzUY6mY77qFJ97xYrqmGad4nMefLbQ
M8uxPG/M8vLyMvvz5NJh/FV4yCXXi/Vje/g9Fh5y8dRipXocD/vCQz5U/zyM
hcfSDWJJPCGP5nOXXBSi6Zi7OsXnLrGiOqZZp/icB5+N9MxCLM8bVbGiSh5V
PIbq/Gmj+sxQbaRO8ZkhJANDdf60+OzLZ3e1w1DNUF0LQ3X+tFF9Zqg2Uqf4
zBCSgaE6f1p89uWzu9phqGaoroWhOn/aqD4zVBupU3xmCMnAUJ0/LT778tld
7TBUM1TXwlCdP21UnxmqjdQpPjOEZGCozp8Wn3357K52dIbq4/E4DMPsV3HP
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
fv7519226pCsYbf9XnWIYv3YVh1eYm1336oO0b7E+UrKJfEka1gCn1f0Oei+
5LWDz4+Z94p9ubqG+NwtF67yXo5q7Rj2eZaXl5fZnydvfx7GwkMu+WH8VXjI
xTv8HgsP+VCtFit5Ox72hYf8BiHP15J4QvB5RZ+D7qtL7eDzY+a9dF/eriE+
98mFt7wXolo7hn2uihVWcoZqGzcImrY/n4Pui6E6D3k30jNLYxkeQh7OZ295
L4ShOsPDSc5QbeMGQdP253PQfTFU5yHvRnpmaSzDQ8jD+ewt74UwVGd4OMkZ
qm3cIGja/nwOui+G6jzk3UjPLI1leAh5OJ+95b0QhuoMDyc5Q7WNGwRN25/P
QffFUJ2HvBvpmaWxDA8hD+ezt7wXwlA9y/F4HIZh9qu458CSM1TbuEHk9WsA
nxmq2+hSO/j8mHkv3Ze3a4jPDNUZ3A3V3X2e5e3tLUX5+PiY/dOwkjNU27hB
JPGSfklCyUquwWeG6ja61A4+P2beS/fl7RriM0N1BndDdXefl0iBll7fJ5f8
9fW1cAty8SpiiRNkM5Zccs18nf+8sHSpwdau5wI+r+tz0H11uUHg8wPmPeo1
PONzr1y4yrvR2rHq8xIrPeOUVvjlD+M43lyDULy6WLIEmY0llFwzXxP5Z5yq
1lNyWnzu4HPQfSk8U43P8fIe9RpO4HOfXPjJu93aMexzVSyh5O/v79MiS54P
F4pXF0uWILOxhJJr5msiH6hqPSWnxecOPgfdl8JQjc/x8h71Gk7gc59c+Mm7
3dox7HNVLPk/x2w2m7TIYRhurkE+pFXEEifIZiz5YKCZr3PBt3HL11NyWnzu
4HPQfem8/QOf4+U96jU843OvXLjKu9HaMexzVaxmyU+n0ziO0woT6SPAzTU0
i9cSqzVBxmM1S66Zr2uWxGtYT8lp8bmDz0H3tepQjc/x8h71Gl6Dz31y4SHv
1mvHsM9LsWaf326W/PKL9Kenp7Uf5m+J1Zog47GaJdfM14Wk3JLkDeu5Bp9X
9DnovuRDNT4/VN6jXsML+NwtFx7ybr12DPu8dM7n5+fPj2cLPznu9/v8dy2v
EX6aq4sl+zRnNpbwk6NOviZSuKTcksAN67kGn1f0Oei+hEM1Pj9a3qNewwl8
7pkLD3m3XjuGfc7w+Z3YYd8byXuq7/3O1bVfwD4bAp87+Bx0X8LawefHzHvd
vvxcQ3zumQs/ea/C0XuqFXwuJHlbdUhiJZeqDlGsH9uqw0us5G3VIdqXYr56
gc8dfA66L83a6QU++8p71GvYi7A+B827au049BkAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
fHE6nTabzTAM914IPAqTb0m8NU6Oz6AMPkMk8BkisarPSxGPx+Pnn3/dbasO
yRp22+9VhyTWdvet6hDt68e26nATS5yvpFwST7KGJSz4jGMWHNOMhc/dfNbM
e1SfxfvS9zlsz3SVd5v7kve69Xye5eXlZfbnaW0/D2PhIR+qD+OvwkM+VI+H
feEhL97D77HwkA88erF65GtJPCEWfMYxI45pxsLnPj5r5j2qzz32pexz2J7p
Le8G99Wl163kc1UshmpnxeutoBhCcCwXi6E6e9qwPjOE2NgXQ/Vj5t3gvhiq
G2CofsCBhyEEx3KxGKqzpw3rM0OIjX0xVD9m3g3ui6G6AYbqBxx4GEJwLBeL
oTp72rA+M4TY2BdD9WPm3eC+GKobYKh+wIGHIQTHcrEYqrOnDeszQ4iNfTFU
P2beDe7L0VB9PB6HYZj9Ku6Zodpd8XorqLx+DdjxGceMOKYZC58ZqiPtS9nn
sD3TW94N7qtLr+vu8yxvb28pysfHx+yfMlQ7K15vBZXES/olCSUrucaOzzhm
xDHNWPjMUB1pX8o+h+2Z3vJucF9del13n5dIgZZe3yffyOvra+EW5AkqjyUv
3op9iSU3GqtHQSXxlhps7XouGPEZxyw4hs8ufdbMe1SfewxXyj6H7Zmu8m5z
X12G6jV8XmKlZ/bSCr/8YRzHm2sQJqgqlrB46/Ylk9xurPWfQa1aT8lpNX3G
sbs7hs9efdbMe1Sf13+murvPYXumn7yb3ZfCM9XNPlfFEm7k/f19WmTJ8+HC
BFXFEhZv3b5kktuNtf4QUrWektNq+oxjd3cMn736rJn3qD6vP1R39zlsz/ST
d7P7Uhiqm32uiiXfyGazSYschuHmGuQ3tfJY8n9mqtiXuLkZjaXytoTy9ZSc
VtNnHLPgGD679Fkz71F9Vnn7R1+fw/ZMV3m3uS+dt3+0+VwVq3kjp9NpHMdp
hYn0EeDmGpoT1BCruXhb9tUqufVYaw4hDespOa2mzzh2R8fw2bfPmnmP6vOa
Q/VKPoftmR7ybnxfqw7VQp+XYs0+v928kcsv0p+entZ+6L0hVnPxtuyrVXLr
scRDSFJuSfKG9VxjwWccu6Nj+OzbZ828R/VZPFTr+xy2Z3rIu/F9yYfq9Xxe
Oufz8/Pnx7OFvwnZ7/f571peI/zUUxVL+Im4bl+yT452Y8mGkBQuKbckcMN6
rrHgM47d0TF89u2zZt6j+iwbqu/ic9ie6SHvxvclHKpX9TnD53di857q0df7
MP28o3LtF7DPhgj7Xl8cu/d7qvG5p8+81/fe+7qLz2F7pp+8m92XsNcp+FxI
WlvVIYmVrnnVIYmV6rHqEO3rx7bqcBNLMV+90PQZx3w5hs95VH3WzHtUnxX3
1YuwPTNo3jX3pdnrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAxOZ1Om81mGIZ7LwQehcm3
JN4aJ8dnUAafIRL4DJFY1eeliMfj8fPPt7tvVYdkDbsf26pDEuvrblt1iPa1
/V51uIklzldSLoknWcMSJnx2lYtywtYOPmfxlQubsXzVDj738tlX3itiuarT
9Xye5eXlZfbnydvxsC885EP14fdYeMib28/DWHjIJT+MvwoP+VCtF6tHvpbE
E2LCZ2+5KCRs7eBzFne5MBjLXe3gcxef3eW9NJa3Ol3J56pYDNXOJPdWUDRt
O7koJGzt4HMWd7kwGMtd7eAzQ3Uulrc6ZaimuZmOZVhyEz57y0UhYWsHn7O4
y4XBWO5qB58ZqnOxvNUpQzXNzXQsw5Kb8NlbLgoJWzv4nMVdLgzGclc7+MxQ
nYvlrU4ZqmlupmMZltyEz95yUUjY2sHnLO5yYTCWu9rBZ4bqXCxvdaozVB+P
x2EYZr+Ke2aodie5t4LK69eAIZ+95aKQsLWDz1nc5cJgLHe1g88M1blY3uq0
u8+zvL29pSgfHx+zf8pQ7UxybwWVxEv6JQklK7nGkM/eclFI2NrB5yzucmEw
lrvawWeG6lwsb3Xa3eclUqCl1/fJJX99fS3cgvyilceSS16xL7HkRmP1kDyJ
t9Rga9dzwYrPrnJB7eBzHl+5sBnLV+2c8bmTz77ybrN2zPbnJVZ6ximt8Msf
xnG8uQbhRauKJZS8bl8yye3GWv8Zp6r1lJxW1Wc/uaB2zvh8C0e5MBvLUe1M
4HMXnx3l3WztWO7PVbGEkr+/v0+LLHk+XHjRqmIJJa/bl0xyu7HWl7xqPSWn
VfXZTy6onTM+38JRLszGclQ7E/jcxWdHeTdbO5b7c1Us+T/HbDabtMhhGG6u
QX7RymPJ/zmmYl/i5mY0lsq3ccvXU3JaVZ9d5YLawec8vnJhM5av2jnjcyef
feXdZu1Y7s9VsZolP51O4zhOK0ykjwA319B80RpiNUvesq9Wya3HWlPyhvWU
nFbVZw+5oHbk1/AafHbnM7XTMFTjc7y8G68dy/15Kdbs89vNkl9+kf709LT2
g+gNsZolb9lXq+TWY4klT8otSd6wnmtM+OwhF9SO/BpewOe758J4LBe1cwGf
e/nsIu/Ga8dyf1465/Pz8+fHs4WfHPf7ff67ltcIP/VUxRJ+cqzbl+yTo91Y
MslTuKTcksAN67nGhM8eckHt/CUWPmdxkQvjsVzUzgQ+d/TZRd6N147l/pzh
8zuxeU/1T1/vjfTzjsq1X8A+GyLqe1CpnbtfQ3y2kwuzsRzVDj539NlR3uti
+alTBZ8LSd5WHZJY6TpUHZJYyduqQ7Sv7feqw00sxXz1QtXnoLkIWzv4nCVq
Lqgdeb56EdXnqHmPWqcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0MDpdNpsNsMw
3Hsh8ChMviXx1jg5PoMy+AyRwGeIRInPfZ1PZzsej59/vt19qzoka9htv1cd
bmL92FYdklhfd9uq4777Ssol8SRrWAKfY/jsq3Zi++yrtxiN5aon4HM3n6P2
Z1f7KvG5o/MvLy+zP0/ejod94SEfQg7jr8JD3nD0Yv3YHn6PhYd8MPh5GAsP
+Y1Pvq8l8YTgcwyf3dVOYJ/d9RaLsbz1BHzu43PU/uxtXyU+93LeguTuGk5p
LG+Dgea+AjdtfPY18DBU53HXWyzG8tYT8JmhOtK+GKqNN5zSWN4GA819BW7a
+Oxr4GGozuOut1iM5a0n4DNDdaR9MVQbbzilsbwNBpr7Cty08dnXwMNQncdd
b7EYy1tPwGeG6kj7Yqg23nBKY3kbDDT3Fbhp47OvgYehOo+73mIxlreegM8M
1ZH2pTNUH4/HYRhmv4p7ZggxI0Mh7m58ef0awOdIPrurncA+u+stFmN56wn4
zFAdaV8lPsudf3t7S2f4+PiY/VOGECMyFOLuxpfES/olCSUruQafI/nsrnYC
++yut1iM5a0n4DNDdaR9lfjcxfl0kqVX88klf319LVyePEFGY4llKI8lbxSa
+zr/eWHpUoOtXc8FfA7js6/aOYf22VdvMRrLVU8443Mvn6P2Z1f7Ohf4XPh3
SljpGad0xb78YRzHm2sQJshuLJkMVbGEjUJzXxP555eq1lNyWnz25bOj2pkI
7LOj3mI3lp+eMIHPfXyO2p/97GsiwBcV39/fp4tWsk5hguzGkslQFUvYKDT3
NZEPVLWektPisy+fHdXORGCfHfUWu7H89IQJfO7jc9T+7GdfEwGG6vOf36Wn
izYMw801yJuA0VhiGcpjyQcDzX2dCwQuX0/JafHZl8++aucc2mdfvcVoLFc9
4YzPvXyO2p9d7evsfKg+nU7jOE5XLJE+ktxcQ3OCrMdqlaEhVnOj0NzXNUvi
Nayn5LT47MtnF7VzTWCfXfQW67E89IRr8LmPz1H7s4d9XaM8VM8+m90s+eUX
+09PT2s/9G49VqsMDbGaG4Xmvi4k5ZYEbljPNfgcw2cXtXMhts8ueov1WB56
wgV87uZz1P7sYV8XMj5X/Z1C0h6fn58/Py4u/OS43+/Lv0cp/NRjN5bsk2NV
LOGnb519TaRwSbmlgmpYzzX4HMNnF7UzEd5nF73FeiwPPWECn3v6HLU/e9jX
RN7n8r9Ty+f3XSdvqw5J9HTNqw43sX5sqw5JrFT7Vccd99XxPyiwBD5799lR
7YT32VFvsRvLT0/A554+R+3PfvZV4rOC8wAAAAAAAAAAAAAAbfw/QFuFpg==

    "], {{0, 261.}, {580.1999999999999, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{580.1999999999999, 261.},
  PlotRange->{{0, 580.1999999999999}, {0, 261.}}]], "Output",
 CellChangeTimes->{3.9000048066882725`*^9},
 CellLabel->"Out[35]=",
 CellID->438918729,ExpressionUUID->"62818eab-fe3d-40e6-a4f4-cada704fb863"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Let's find how many partial derangements with 2 fixed points there are.\
\>", "MathCaption",
 CellChangeTimes->{{3.9000048096553173`*^9, 3.900004822467017*^9}},
 CellID->45514529,ExpressionUUID->"93c7d87f-43e8-4f80-85cb-ac6985f98e2e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"MultisetPartialDerangements", "[", 
   RowBox[{"smallMultiset", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9000048233614645`*^9, 3.900004830293564*^9}},
 CellLabel->"In[36]:=",
 CellID->274862742,ExpressionUUID->"dfa742aa-ecfc-4604-baa7-7acec611ba4b"],

Cell[BoxData["57"], "Output",
 CellChangeTimes->{3.9000048306078444`*^9},
 CellLabel->"Out[36]=",
 CellID->24836199,ExpressionUUID->"53dd09c7-5e32-4260-b444-1d25def1bf0d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Let's use Laguerre polynomials to compute this.", "MathCaption",
 CellChangeTimes->{{3.900004832533116*^9, 3.9000048415502014`*^9}},
 CellID->21262637,ExpressionUUID->"933c456b-6ccd-4ba6-ad45-f21a5c011572"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EnumerateMultisetPartialDerangements", "[", 
  RowBox[{"smallMultiset", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.9000048442870226`*^9, 3.9000048484418674`*^9}},
 CellLabel->"In[37]:=",
 CellID->3910711,ExpressionUUID->"f39b66fc-1759-4d29-a6aa-364902bf0f24"],

Cell[BoxData["57"], "Output",
 CellChangeTimes->{3.9000048494134235`*^9},
 CellLabel->"Out[37]=",
 CellID->453491458,ExpressionUUID->"ee6005cb-2184-476b-913a-162d5220bdc2"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Let's do a calculation for partial derangements where listing all \
permutations is infeasible.\
\>", "MathCaption",
 CellChangeTimes->{{3.9000048531386194`*^9, 3.9000048721539836`*^9}},
 CellID->959787810,ExpressionUUID->"3857ac4c-f462-47e9-a1d1-e04d78529e68"],

Cell[CellGroupData[{

Cell["Count partial derangements with 3 fixed points.", "MathCaption",
 CellChangeTimes->{{3.8997492626369176`*^9, 3.8997493081744137`*^9}},
 CellID->402703826,ExpressionUUID->"1e31fe0c-363d-4097-bdd1-d0e6c4ed5661"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EnumerateMultisetPartialDerangements", "[", 
  RowBox[{"randomMultiset", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997492528242707`*^9, 3.8997493033590193`*^9}},
 CellLabel->"In[38]:=",
 CellID->1592074,ExpressionUUID->"5a5c6953-948d-48cf-bec4-1ac6fecfcd17"],

Cell[BoxData["827725861632"], "Output",
 CellChangeTimes->{{3.8997492970384502`*^9, 3.8997493128744383`*^9}, 
   3.899999408609227*^9, 3.9000048808359222`*^9},
 CellLabel->"Out[38]=",
 CellID->238165924,ExpressionUUID->"8b765cb0-3374-48c8-93c4-e034668f1ca7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Let's do a smaller example again. This time, let's list all the elements of \
the set.\
\>", "MathCaption",
 CellChangeTimes->{{3.8997496568247814`*^9, 3.899749668077464*^9}, {
  3.9000050484510508`*^9, 3.900005053261454*^9}},
 CellID->708478496,ExpressionUUID->"c04673ab-f50c-46c5-b4e4-b8662a0cc74a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hazelRainbowPaletteSubset", "=", 
  RowBox[{"RandomSample", "[", 
   RowBox[{"hazelRainbowPalette", ",", "4"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8997496730949655`*^9, 3.899749684028263*^9}},
 CellLabel->"In[40]:=",
 CellID->450230421,ExpressionUUID->"1cfe25bc-a245-4a84-8930-c2f3b700e16b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.6713375885659421, -0.17833924308420873`, -0.26467794346262646`]|>,
    "LUVColorSwatchTemplate"]}], "}"}]], "Output",
 CellChangeTimes->{3.8997496845276875`*^9, 3.8997563967663803`*^9, 
  3.900005054316104*^9},
 CellLabel->"Out[40]=",
 CellID->26904101,ExpressionUUID->"b89726b5-e64d-46ba-bcc3-8ebce7cc9c17"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subsetRandomMultiset", "=", 
  RowBox[{"RandomChoice", "[", 
   RowBox[{"hazelRainbowPaletteSubset", ",", 
    RowBox[{"{", "7", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8997496909994445`*^9, 3.8997497185029545`*^9}},
 CellLabel->"In[41]:=",
 CellID->212638519,ExpressionUUID->"32b6c5ae-d310-4f36-a61f-453d64778332"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.6713375885659421, -0.17833924308420873`, -0.26467794346262646`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"]}], "}"}]], "Output",
 CellChangeTimes->{{3.899749711969803*^9, 3.8997497188631163`*^9}, 
   3.899756398909689*^9, 3.900005055251453*^9},
 CellLabel->"Out[41]=",
 CellID->295663189,ExpressionUUID->"134828a7-1a66-4b8a-aa15-03f0dc02147b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Let's find all the multiset partial derangements.", "MathCaption",
 CellChangeTimes->{{3.899749731291973*^9, 3.8997497408599186`*^9}},
 CellID->19185935,ExpressionUUID->"ababbbee-c37e-435c-9720-28e3aff14e94"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"MultisetPartialDerangements", "[", "subsetRandomMultiset", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8997497550334845`*^9, 3.8997497595874767`*^9}, {
  3.9000050579343615`*^9, 3.900005060752368*^9}},
 CellLabel->"In[42]:=",
 CellID->65654456,ExpressionUUID->"df28e7aa-723e-4f5f-b9e1-4398765bc735"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
HV/1AgAAAAAAAAAAgGn5D41vjSA=
    "], {{0, 33.}, {501., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{501., 33.},
  PlotRange->{{0, 501.}, {0, 33.}}]], "Output",
 CellChangeTimes->{3.8997497599187136`*^9, 3.8997564029297953`*^9, 
  3.9000050611659007`*^9},
 CellLabel->"Out[42]=",
 CellID->7503357,ExpressionUUID->"41c9ec2a-c2da-4b04-b640-482087ebd604"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here is the count.", "MathCaption",
 CellChangeTimes->{{3.8997497625129347`*^9, 3.8997497653791437`*^9}},
 CellID->288178981,ExpressionUUID->"5f07dd1a-7a0f-4b38-84cd-a7c6e36717cb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EnumerateMultisetPartialDerangements", "[", "subsetRandomMultiset", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8997497413474436`*^9, 3.8997497462356305`*^9}},
 CellLabel->"In[43]:=",
 CellID->153664891,ExpressionUUID->"21df450c-5d23-44a9-8b8e-79ab2c4efc69"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.8997497468018894`*^9, 3.9000050628432045`*^9},
 CellLabel->"Out[43]=",
 CellID->20629447,ExpressionUUID->"abb956a4-e623-40b5-bc2c-a1df8a9435d9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
List partial derangements with 3 points, then take the length.\
\>", "MathCaption",
 CellChangeTimes->{{3.9000050743673725`*^9, 3.900005083269141*^9}},
 CellID->669234462,ExpressionUUID->"0439089e-ec18-47d4-a9e8-6be5cc3a8fe3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"MultisetPartialDerangements", "[", 
   RowBox[{"subsetRandomMultiset", ",", "3"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9000050845194454`*^9, 3.900005096550699*^9}},
 CellLabel->"In[46]:=",
 CellID->223182031,ExpressionUUID->"064bd330-8401-4d37-a1a0-d9028dd80511"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
db7IziIq5qJ2PxudL/lBLl92fPfc7/evj9sJT9qXy2X5+xp/0pKdtOO0StZl
tIfCT0vK1DXh5Jy9fWFJGM8zZCdfXUU9ZnW+yM4iKuaidj8bnS/hQS5rdhZ4
fWed63nUJVF3PY+6RFol6zLaQ+fbqOuNdeV+GeOshNV5L1lXUY9ZnS+ys4ii
uYjTYo979x5XIDsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFTIMQ9M0bdu+eyAA6zN525k8x83J
DhiG7ACkkTU7PsW+719//nn8GXVJxvD54xh1qdEq2MPjH59Rl5a65PPl7O1M
LhmDD7JjIzsl69KVU7KjMTu6PBahpWr9yZedWQ6Hw+zP3dhu3e/ASz5Bt19d
4CUPVDmtgj10eezOt8BLHl5d3vCZXAjZsZGdknWpyynZUZcddR4L1dK2/mTK
TpSW2QnSZoZACC8HObJTf13qckp21GVHncdCtbStPxzkbASKg1wl3mAzIjuV
1KUup2RHXXbUeSxUS9v6w0HORqA4yFXiDTYjslNJXepySnbUZUedx0K1tK0/
HORsBIqDXCXeYDMiO5XUpS6nZEdddtR5LFRL2/pT5iDX933btrNfHRoNT5A2
MwRCeBfma9nqCZAdS9lhk13oIdlRlx11HgvV0rb+rJ6dWc7ns1O53++z/2p2
grSZIRDCuzBfzuTO6s7wkpE8Q3YsZYdNdqGHZEdddtR5LFRL2/qzenZ8OCHf
q07khZxOp8AS5BNUqVbBHsrDW2ddq4TXmdy3ccSO5wHZMZOdknXpyulIdhRm
R5fH6uxhtdnxkelZBTfCjy+6rvt2DMIJqlerYA+F4a22rgLPyEWNJ+S2ivpT
r5bRHirK6QTZUZcdRR6rtoc1ZydKS1jI9XqdBhnyvJ9wgurVKthDYXirravA
QS5qPCG3VdSferWM9lBRTifIjrrsKPJYtT2sOTtRWvJCmqZxgwz5a3ryzbpS
rYI9lH+cXmddZb61Gj6ekNvq6k+lWkZ7qCunI9lRmB1dHquzhzVnJ0oruZBh
GLqum0bocMfOb8eQPEG1axXsYXJ4K68r60EuYTwht1XRn9q1jPZQRU6fITvq
sqPCY5X3sObs+LRmn8dLLuTxgeFut8v9EGPtWgV7mBzeyuuSH+ScvX2BShjP
M2THRnZK1qUipw/IjsbsqPBY5T2sOTu+e+73+9fH7YQn7cvlsvx9jT9pyU7a
9WoV7KHwt7Bq6xIe5Jycs7cvLAnjeYbs2MhOybpU5HSC7CjNjgqPVd7DmrOz
wOs761b5aDGQou+H0fYumkB4d9DsfOV+GeOshKL+1KtltIeKckp2lGZHkcfi
tPSsPwWyE4gbW9Ql0vpxjLrUaBXsoctj1KWlrpLztRZW+2M1OyXrsprTtbA6
73hM2XwpzA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAgCWGYWiapm3bdw8EYH0mbzuT57g52QHDkB2ANLJm
x6fY9/3rz83+MVyjWmb/ULJYy9nbmVwyBh9byw4e0zVfci2yozI7Rv+4vK66
8mVnlsPhMPtzN7Zb9zvwkk/Q7VcXeMkXN5NaLvvd+RZ4yTfZct5YQ8tnciFb
yw4e0zVfq2iRHX3ZKekxo/NV874TpWV2goxqsclykMNjCrS0rT9kR192tB14
rNbFQa7yxa1CLTZZDnJ4TIGWtvWH7OjLjrYDj9W6OMhVvrhVqMUmy0EOjynQ
0rb+kB192dF24LFaFwe5yhe3CrXYZDnI4TEFWtrWH7KjLzvaDjxW6ypzkOv7
vm3b2a8OjYYnyKgWm+yC1rLVE9hmdvCYrvlaRYvs6MuOtgOP1bpWz84s5/PZ
qdzv99l/NTtBRrXYZBe0nMmd1Z3hJSN5ZpvZwWO65msVLbKjLzvaDjxW61o9
Oz6ckO9VJ/JCTqdTYAnyCUJLvlBE1FXSG2sEypnct3HEjufBBrODx3TN1yob
H9nRl52SHjM6X9XuOz4yPavgRvjxRdd1345BOEFojeKFIq6ukt7I/6xC1HhC
bms1O3hM13wVeEaO7NSYnZIeMzpfNe87UVrCQq7X6zTIkOf9hBOE1iheKOLq
KumN/IGKGk/Iba1mB4/pmq8CBzmyU2N2SnrM6HzVvO9EackLaZrGDTLkr+nJ
Fxy05B/dR9RV0htFvj0UPp6Q21rNDh7TNV9lvrVKdqrLTkmPGZ2vmvedKK3k
QoZh6LpuGqHDHTu/HUPyBKH1IHmhSKmrpDdyBiphPCG3tZodPKZrvrIe5MhO
vdkp6TGj81XzvuPTmn0eL7mQxweGu90u90OMaD1IXihS6irpDXGgnL19gUoY
zzNbyw4e0zVf8oMc2VGZnZIeMzpfNe87vnvu9/vXx+2EJ+3L5bL8fY0/aclO
2miN4t/44uoq6Q1ZoJycs7cvLAnjeWZr2cFjuuZLeJAjO1qzU9JjRuer5n1n
gdd31q3y0WIgRd8PY1SLd3zNauV+GeOshNXs4DFd8yXUIjtas6PtfWv26iqQ
nUDc2KIukdaPY9SF1isu+1GXqK6S3iiotRZWs4PHdM1XSa21sDoXRbNT0mNG
50vjvgMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAADwdoZhaJqmbdt3DwRgfSZvO5PnuDnZAcOQHYA0
smbHp9j3/evPP48/oy7JGI5/fEZdEq2SdX3+OEZdarRU9dDZ25lcMgYfm8sO
HttYXWRHZXasapXMjlgrX3ZmORwOsz93Y7t1vwMveaC68y3wkh/kitXlfHv7
1QVe8kCV09LWQ5/JhWwuO3hse3WRHX3ZsapVMjtraGXKTpSW2UBpW0hr1NLW
QzYjfZuRNo9ZrYvs6MuOVS0Ocn42FyhtC2mNWtp6yGakbzPS5jGrdZEdfdmx
qsVBzs/mAqVtIa1RS1sP2Yz0bUbaPGa1LrKjLztWtTjI+dlcoLQtpDVqaesh
m5G+zUibx6zWRXb0ZceqFge5Ofq+b9t29qtDo+FAaVtIa9TS1sNlqyew0ezg
se3VRXb0ZceqlraD3OrZmeV8PjuV+/0++69mA6VtIa1RS1sPncmd1Z3hJSN5
ZqPZwWPbq4vs6MuOVS1tB7nVs+PDCfledSIv5HQ6BZYgD1S4Vsm65CavVEtV
D8evl1b5No7Y8TzYYnbw2MbqGsmOxuxY1SqZnTUOcjmy4yPTswpuhB9fdF33
7RiEgYrSKlmX0OT1aunp4cTyswpR4wm5rdns4LEt1TVBdvRlx6pWyezkf0Yu
OTtRWsJCrtfrNMiQ5/2EgYrSKlmX0OT1aunp4cSyUNR4Qm5rNjt4bEt1TZAd
fdmxqlUyO/kPcsnZidKSF9I0jRtkyF/Tk3/EHa5Vsi75QlqplqoejgHfHgof
T8htzWYHj22srpHsaMyOVa2S2SnyrdW07ERpJRcyDEPXddMIHe7Y+e0YkgOV
oFWyrmST166loYfP+EyeMJ6Q25rNDh7bRl3PkB192bGqVTI7OQ9ywuz4tGaf
x0su5PGB4W63y/3QaYJWybqSTV67loYePnD29gUqYTzPbC47eGwbdT0gOyqz
Y1WrZHbEB7l82fHdc7/fvz5uJzz9Xi6X5e9rPCP8zShKq2Rdwt9W6tXS0MMJ
J+fs7QtLwnie2Vx28Ng26pogO1qzY1WrZHZkB7ms2Vng9Z11bmxRl0TdZSTq
kmiVrMv5NupSo6Wnh7lfxjgrYTY7eGxLdZEdrdmxqlUyOzKtAtkBAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAqJBhGJqmadv23QMBWJ/J287kOW5OdsAwZAcgjazZ8Sn2ff/6888f
x6hLMobP48+oS42W1R4WrOv4x2fU9XoHZ29ncskYfJAdPBZdl6oekh2yU4+W
rpzmy84sh8Nh9ueu57dfXeAlD9St+x14yQNVTstqDwvW5fLYnW+Bly+8PpML
ITt4LLoubT0kO2SnEi11Oc2UnSgtAqUsUEbr4iC3DNmpxGOhdWnrIdkhO5Vo
qcspBzkCRV0THOSWITuVeCy0Lm09JDtkpxItdTnlIEegqGuCg9wyZKcSj4XW
pa2HZIfsVKKlLqcc5AgUdU1wkFuG7FTisdC6tPWQ7JCdSrTU5bTMQa7v+7Zt
Z786NBIodYEyWtcq4V22egJkB48l1qWth2SH7FSipS6nq2dnlvP57FTu9/vs
vxIoZYEyWtcq4XUmd1Z3hpeM5Bmyg8cS69LWQ7JDdirRUpfT1bPjwwn5XnUi
n6DT6RRYgrxplWpZ7WHBulYJrzO5b+OIHc8DsoPHUupS1cOR7JCdarR05XTM
kx0fmZ5VcCP8+KLrum/HIGxavVpWe1iwrgLPyEWNJ+S2Zucdj815zGoPJ8gO
2alES1FOJzJlJ0pLOEHX63UaZMjzfsKm1atltYcF6ypwkIsaT8htzc47Hpvz
mNUeTpAdslOJlqKcTmTKTpSWfBFomsYNMuSv6cmbVqmW1R4WrKvMt1bDxxNy
W7Pzjsc8HrPaw5HskJ1qtHTldMyWnSit5AkahqHrummEDnfs/HYMyU2rXctq
DwvWlfUglzCekNuanXc89mePWe3hM2SH7FSipSKnz2TKjk9r9nm85Al6fGC4
2+1yP1hYu5bVHhasS36Qc/b2BSphPM+QnY17zGoPH5AdslOPloqcPsiXHd89
9/v96+N2wpP25XJZ/r7Gn7Rkv63Uq2W1hwXrEh7knJyzty8sCeN5huxs3GNW
ezhBdshOVVoqcjqRNTsLvL6zzvU86pKouz5EXWq0rPawYF0uj1HX3/2/534Z
46yE2XnHY3Mei6tLTw/JDtmpSktRTgtkBwAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKBChmFomqZt
23cPBGB9Jm87k+e4OdkBw5AdgDSyZsen2Pf9688/fxyjLskYPo8/oy60ZrQK
ztfxj8+o6711OXs7k0vG4IPs5NMq6jGjOSU7y5idd6Nrgq49Ll92ZjkcDrM/
d324/eoCL7nxbt3vwEtuPJtaBefL+bY73wIv+UFOXpfP5ELITj6toh4zmlOy
s4zZeTe6Jqjb4zJlJ0oL4ynT0mbyknWxGanzMwc5DnKmsmO1LqM95CCXgFnj
YXIOcmQnCQ5yHORMZcdqXUZ7yEEuAbPGw+Qc5MhOEhzkOMiZyo7Vuoz2kINc
AmaNh8k5yJGdJDjIcZAzlR2rdRntoaKDXN/3bdvOfnVoxHjqtLSZvGRdy1ZP
gOxwkEvU0naQIzv65t3omqBuj1s9O7Ocz2encr/fZ/8V4ynT0mbyknU5kzur
O8NLRvIM2eEgl6il7SBHdvTNu9E1Qd0et3p2fDgh36tO5E07nU6BJcjNgFbJ
+ZKbvGRd49dLq3wbR+x4HpCdrFpFPWY0p2RnGbPzbnRN0LXHjXmy4yPTswpu
hB9fdF337RiEZkBrLDtfQpOXrGti+VmFqPGE3JbsyLWKesxoTsnOMmbn3eia
oGiPm8iUnSgtYdOu1+s0yJDn/YRmQGssO19Ck5esa2JZKGo8IbclO3Ktoh4z
mlOys4zZeTe6Jija4yYyZSdKS74INE3jBhny1/TkH8+iVXK+5CYvWdcY8O2h
8PGE3JbsyLWKesxoTsnOMmbn3eiaoGuPG7NlJ0oruWnDMHRdN43Q4Y6d344h
2Qxo/U2r4Hwlm7xkXc/4TJ4wnpDbkh25VlGPGc0p2VnG7LwbXRNU7HHPZMqO
T2v2ebzkpj0+MNztdrkfmETrb1oF5yvZ5CXreuDs7QtUwnieITv5tIp6zGhO
yc4yZufd6JqgYo97kC87vnvu9/vXx+2Ep9/L5bL8fY0/aclO9WiNZedL+GlJ
mbomnJyzty8sCeN5huzk0yrqMaM5JTvLmJ13o2uCij1uImt2Fnh9Z13Jd7YU
fReNVS1t79gpU1fulzHOSpAduRbvkVvBG2RnEbPzbnRNULTHFchOIK4PUZdI
6/gz6kJrRqvgfDnfRl1a6loLsiPXKuoxozklO99oWZ13o2uC1T0OAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AABeGYahaZq2bd89EID1mbztTJ7j5mQHDEN2ANLImh2fYt/3rz83+0d+jdbF
Hxn3zZeztzO5ZAw+yA51xaIrp2QHj31Tl9Ee1pydWQ6Hw+zPXR9uv7rAS960
W/c78JKbwWRdLo/d+RZ4ycOra758JhdCdqgrFnU5JTt4bKkuoz2sOTtRWuqa
FqpltC7Cy0FOxVxsvC51OSU7eGypLqM9rDk7UVrqmhaqZbQuwstBTsVcbLwu
dTklO3hsqS6jPaw5O1Fa6poWqmW0LsLLQU7FXGy8LnU5JTt4bKkuoz2sOTtR
WuqaFqpltC7Cy0FOxVxsvC51OSU7eGypLqM9rDk7f0ff923bzn51aFTYtFAt
o3UR3oX5WrZ6AmSHutJQl1Oyg8eW6jLawzqzM8v5fHYq9/t99l/VNS1Uy2hd
hHdhvpzJndWd4SUjeYbsUFca6nJKdvDYUl1Ge1hndnw4Id+rTuRNO51OgSXI
mxahZbQueXjrrGuV8DqT+zaO2PE8IDvUlaClK6cj2cFjy3UZ7WG12fGR6VkF
N8KPL7qu+3YMwqbFaRmtSxjeausq8Ixc1HhCbmvVY9Qlr0tRTifIDh5bqsto
D2vOTpSWsGnX63UaZMjzfsKmxWkZrUsY3mrrKnCQixpPyG2teoy65HUpyukE
2cFjS3UZ7WHN2YnSkm+gTdO4QYb8NT150yK0jNYl/zi9zrrKfGs1fDwht7Xq
MeqS16UrpyPZwWPLdRntYc3ZidJKbtowDF3XTSN0uGPnt2NIblqKltG6ksNb
eV1ZD3IJ4wm5rVWPUZe8LhU5fYbs4LEN9rDm7Pi0Zp/HS27a4wPD3W6X+8HC
FC2jdSWHt/K65Ac5Z29foBLG8wzZoS6TOX1AdvDYNntYc3Z899zv96+P2wlP
v5fLZfn7Gn/Skp3q47SM1iX8LazauoQHOSfn7O0LS8J4niE71GUypxNkB499
X5fRHtacnQVe31mn7p0toVpG6+LdQbPzlftljLMSVj1GXfK6FOWU7OCx7+sy
2sP6sxOI60PUJdI6/oy6qOsVl8eoS0tdJedrLax6jLrkdVnN6VrgMTzm1TLq
DQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAzDMPQNE3btu8eCMD6TN52Js9xc7IDhiE7AGlkzY5P
se/7159//jhGXZIxfB5/Rl0irZJ1FdQ6/vEZdYnqKjlfYi1nb2dyyRh8bC07
eGxr6w/ZUZkdoz3UVVe+7MxyOBxmf+76cPvVBV7ypt2634GX3Azl6iqo5bLf
nW+Bl3yTLTdfa2j5TC5ka9nBYxtcf8iOvuwY7aG6ujJlJ0pLXdNCtbQtpIGw
yXKQM7UZafNYqJa29Yfs6MuO0R6qq4uDnBEzcJCrY5NlM9K3GWnzWKiWtvWH
7OjLjtEeqquLg5wRM3CQq2OTZTPStxlp81iolrb1h+zoy47RHqqri4OcETNw
kKtjk2Uz0rcZafNYqJa29Yfs6MuO0R6qq6vMQa7v+7ZtZ786NCpsWqiWtoU0
EDbZBa1lqyewzezgsQ2uP2RHX3aM9lBdXatnZ5bz+exU7vf77L+qa1qolraF
NBA22QUtZ3JndWd4yUie2WZ28NgG1x+yoy87Rnuorq7Vs+PDCfledSJv2ul0
CixB3rQIrZJ1FdSSLxSVztcagXIm920cseN5sMHs4LGtrT8j2dGYHaM91FXX
mCc7PjI9q+BG+PFF13XfjkHYtDitknUV1BIuFPXOV/5nFaLGE3Jbq9nBY5ta
fybIjr7sGO2horomMmUnSkvYtOv1Og0y5Hk/YdPitErWVVBLuFDUO1/5AxU1
npDbWs0OHtvU+jNBdvRlx2gPFdU1kSk7UVryRaBpGjfIkL+mJ29ahFbJugpq
yT+6r3S+inx7KHw8Ibe1mh08trX1ZyQ7GrNjtIe66hqzZSdKK7lpwzB0XTeN
0OGOnd+OIblpKVol6yqolbxQ1D5fOQOVMJ6Q21rNDh7byPrzDNnRlx2jPVRR
1zOZsuPTmn0eL7lpjw8Md7td7gcLU7RK1lVQK3mhqH2+xIFy9vYFKmE8z2wt
O3hsI+vPA7KjMjtGe6iirgf5suO7536/f33cTnj6vVwuy9/X+JOW7FQfp1Wy
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
EJeRqEui5foQdanR+nGMutRoGe3hWpjNDh6jrsyQHWV7gdXsFNQCAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAMMMwDE3TtG377oEArM/kbWfyHDcnO2AYsgOQRkh21s2Xu1vf968/
P/7xGXVJxvD54xh1ibSOP6Mu6nqzlriHzt7O5JIx+NhcdvCzLi2ys4jZ7JDT
CrRCsrNivg6Hw+zPXUa68y3wkgfq9qsLvOTGu3W/Ay/5QmqzLm099JlcyOay
g591aZGdRcxmh5zWoRWSnbXytblAaVtIa6xLWw/ZjNggtqhFdhYxmx1yWocW
BzkjxrNal7YeshmxQWxRi+wsYjY75LQOLQ5yRoxntS5tPWQzYoPYohbZWcRs
dshpHVoc5IwYz2pd2nrIZsQGsUUtsrOI2eyQ0zq0yhzk+r5v23b2q0Oj4UBp
W0hrrEtbD5etnsBGs4OfdWmRnUXMZoec1qEVkh15vs7ns7vD/X6f/VezgdK2
kNZYl7YeOpM7qzvDS0byzEazg591aZGdRcxmh5zWoRWSnVXy5W7ie42JPFCn
0ylweHLjRWiJJ4i6dPVw/HpplW/jiB3Pgy1mBz/r0iI7i5jNDjmtQGsMyE7g
fxNCpmcVXMc+vui67tsxCI0XpyWbIOoqrZX/OZ+o8YTc1mx28LMuLbKziNns
kNN3a00Y+LLD9XqdmhYyTqHx4rRkE0RdpbXyb0ZR4wm5rdns4GddWmRnEbPZ
Iafv1powcJAbvz4zdE0L+Wt68gUnQks8QdSlq4djQFjCxxNyW7PZwc+6tMjO
ImazQ04r0BqVH+SGYei6buqYwx2Dvx1DsvFStFIniLp09fAZn8kTxhNyW7PZ
wc+6tMjOImazQ07fp/VM4YPc7LN2yYF6fIC52+1yP5yZopU6QdSlq4cPnL19
YUkYzzObyw5+1qVFdhYxmx1y+j6tBwvZifpvAnE17vf718f/hL8ZXS6X8O9i
CH+DiNOSneqpq7SWbDNycs7evvAmjOeZzWUHP+vSIjuLmM0OOX2f1sRydsL/
m1he30fnMhJ1SdSdl6IukdbxZ9RFXW/WkvVwxReZ+thQdvCzLi2ys4jZ7JDT
d2uFZKdAvgAAAAAAAAAAACCE/weqeMUk
    "], {{0, 261.}, {501., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{501., 261.},
  PlotRange->{{0, 501.}, {0, 261.}}]], "Output",
 CellChangeTimes->{{3.900005089830348*^9, 3.9000050975137625`*^9}},
 CellLabel->"Out[46]=",
 CellID->108341859,ExpressionUUID->"614fe19b-a10f-452a-bd15-65741258b7a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"MultisetPartialDerangements", "[", 
   RowBox[{"subsetRandomMultiset", ",", "3"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9000051009749923`*^9, 3.9000051100419436`*^9}},
 CellLabel->"In[47]:=",
 CellID->34464176,ExpressionUUID->"5a58b5bf-fc0b-4445-9c01-30019b93cfab"],

Cell[BoxData["45"], "Output",
 CellChangeTimes->{3.9000051106366253`*^9},
 CellLabel->"Out[47]=",
 CellID->192324916,ExpressionUUID->"ec441529-6937-4073-89c9-ba0ef46ec4fd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
If we compute partials derangements with 3 fixed points, we will get 101 \
elements.\
\>", "MathCaption",
 CellChangeTimes->{{3.899749767505232*^9, 3.899749797173949*^9}},
 CellID->211204775,ExpressionUUID->"7d457294-8757-4484-a281-a6b5a4f497c8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EnumerateMultisetPartialDerangements", "[", 
  RowBox[{"subsetRandomMultiset", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997497413474436`*^9, 3.8997497462356305`*^9}, {
  3.8997497872156754`*^9, 3.8997497920646453`*^9}},
 CellLabel->"In[44]:=",
 CellID->16120653,ExpressionUUID->"517b5a4c-16a7-41e6-861b-ce6e69d026d2"],

Cell[BoxData["45"], "Output",
 CellChangeTimes->{{3.8997497893636208`*^9, 3.899749793416091*^9}, 
   3.900005065905396*^9},
 CellLabel->"Out[44]=",
 CellID->16473884,ExpressionUUID->"4fef00c0-c6b7-4490-9411-a91b9d2a2960"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
I will limit the output to 20 this time. This is the third argument.\
\>", "MathCaption",
 CellChangeTimes->{{3.899749811680395*^9, 3.8997498170165954`*^9}, {
  3.90000511775278*^9, 3.9000051213178015`*^9}},
 CellID->103140816,ExpressionUUID->"84d97388-9e4e-48ba-b0e4-9b05f048fda3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"MultisetPartialDerangements", "[", 
   RowBox[{"subsetRandomMultiset", ",", "3", ",", "20"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9000051229526443`*^9, 3.900005132206579*^9}},
 CellLabel->"In[48]:=",
 CellID->217632446,ExpressionUUID->"6fa94dd5-148e-4352-8174-a46ff7edf46d"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
S62lwM/4WYVWQ28AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAMAj4zhut9uu6549EIDluXo7mLzGzckOOIbs
AJRRNTtzisMwPH6dP168wB8vbjmHXv94sVgr2DuYXDKGOVRkx+kfkqYueV3y
vY7s4LE4nKftz51JNpvN5NfDPJz674mXdNIaagUv9ftT4iU3Xrs5fH87fesT
L3lzZUtrzuRCVGSn5VpQl6m6FtnryA4ei8B52v7cydKikXtB43nV4jDiMHrB
umjk4uAxJR5LrcvaHNLI0chla1lrrlpqcRhxGL1gXTRycfCYEo+l1mVtDmnk
aOSytaw1Vy21OIw4jF6wLhq5OHhMicdS67I2hzRyNHLZWtaaq5ZaHEYcRi9Y
F41cHDymxGOpdVmbwzaN3DAMXddNfnToQiP3ksbzqhW3egGKssNhRF0zLLLX
kR08FoHztOW5M8l+vw8q5/N58l9p5F7QeF61gsmD1YPhJSO5R1F2OIyoa4ZF
9jqyg8cicJ62PHfmCEJzrzqRT9put0ssoaWW3Hg665Ibz6vW5cdLq+YOjtzx
3NCSnZZrQV2m6lrkkCU7eCwC52njc2eOSs8qhBF++UHf95+OoaWW0Hhq6xIa
z6vWlfizClnjSbmt23WnLlN1NXhGjuzgMc7TxudOlpZw0o7H43WQKc/7tdQS
Gk9tXULjedW6EhfKGk/Kbd2uO3WZqqtBI0d28BjnaeNzJ0tL/mvM7XYbBpny
1/Raask3N511yY3nVeuS8Omh9PGk3NbtulOXqbrafGqV7OAxztPJm1TKTpZW
8aSN49j3/XWEgdB2fjqGllrFxlNeV7HxvGrdM2fygvGk3NbtulOXqbqqNnJk
B49dOE+fce7MaU0+j1c8abdfGK5Wq9oPMRZoFRtPeV3FxvOqdSPYey5QBeO5
R0V2Wq4FdZmqS97IkR08FofztP25M3fP9Xr9+LidsPs9HA7xz2s8S0v4E4Ta
uoQ/hfnTuhLkgr3nwlIwnntUZKflWlCXqbqEjRzZwWOfwnna/tyJ8PjOuqbv
bOE9cjree+NPq/bLGCcl3K47dZmqS7jXkR089imcp886dxIJ85B1WdEKXsq6
rNQVvJR1oVUPt+tOXabqarnXLYXXtfBaF+epnnMHAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4OmM
47jdbruue/ZAAJbn6u1g8ho3JzvgGLIDUEbV7MwpDsPw+PWPt9+zLskYPt7f
si6Rlte6Gmq9ff3IukR1idcr2DuYXDKGOchOxbqczmHT7IjrIjsWs2Nrf87Q
MnWe1svOJJvNZvLrYc5P/ffES75Ap2994iUPlM+6GmqF7Pf7U+Il3yjk6zVn
ciFkp2JdTuewaXaWqIvsmMuOuf05VcvaeVopO1labhfIa11eDyMauShus+N0
Dmnk4rf1uu40csbWS3F2srTcLpDXurweRjRyUdxmx+kc0sjFb+t13WnkjK2X
4uxkabldIK91eT2MaOSiuM2O0zmkkYvf1uu608gZWy/F2cnScrtAXuvyehjR
yEVxmx2nc0gjF7+t13WnkTO2Xoqz8xPDMHRdN/nRoYvjBfJal9fDaIn1ilu9
ALJDI1eGuUaO7JjLjrn9OVXL2nm6eHYm2e/3QeV8Pk/+q9sF8lqX18NoifUK
Jg9WD4aXjOQeskMjV4a5Ro7smMuOuf05Vcvaebp4duYIQnOvOpEv0G63SyxB
PmkZWl7raqgl3yhartflx0ur5g6O3PHcIDt163I6h02zs8RhRHbMZcfW/qx0
vbRmZ45KzyqEEX75Qd/3n45BOGl5Wl7raqgl3CharteV+LMKWeNJua1bj7Ws
y+kcNs1O/ed8yI5CPxvan/Wul+LsZGkJF+h4PF4HmfK8n3DS8rS81tVQS7hR
tFyvK3GhrPGk3Natx1rW5XQOm2an/mFEdhT62dD+rHe9FGcnS0t+gG632zDI
lL+mJ5+0DC2vdTXUkv/qvuV6XRI+PZQ+npTbuvVYy7qczmHT7DT55B3Z0eZn
W/uz0vVSnJ0sreIFGsex7/vrCAOh7fx0DMWTVqLlta6GWsUbRcv1umfO5AXj
SbmtW4+1rMvpHDbNTs3DiOyo9bOJ/Vn7einOzpzW5PN4xQt0+4XharWq/WBh
iZbXuhpqFW8ULdfrRrD3XKAKxnMP2alYl9M5bJod8WFEdixmx8T+rH29FGdn
7p7r9frxcTthp304HOKf1/iDlqzTztPyWldDLeFPfG3W60qQC/aeC0vBeO4h
OxXrcjqHTbMjO4zIjtHsmNifta+X4uxEeHxnXZjzrEuiHuYh6xJpea2roVbI
ftYlqku2XrVfxjgp4dZjLetyOodNsyOri+wYzY6h/TlPy8552iA7AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAoZx3G73XZd9+yBACzP1dvB5DVuTnbAMWQHoIyq2ZlTHIbh8esf
b79nXZIxfLy/ZV1mtFrOodP1evv6kXU93iHYO5hcMoY5yI6P7Mg9prMu+XqR
HbKjpy5bOa2XnUk2m83k18PYTv33xEtuhtO3PvGSB6qdVss5dLpeIY/9/pR4
zYV3zuRCyI6P7CziMYV1LbJeZIfsKKnLXE4rZSdLy6sZ3AbK6XrRyMUhOzRy
s1o0clHIjq05NJdTGjkCpVrLWng5jMhOBHMHRKoWjVwUsmNrDs3llEaOQKnW
shZeDiOyE8HcAZGqRSMXhezYmkNzOaWRI1CqtayFl8OI7EQwd0CkatHIRSE7
tubQXE7bNHLDMHRdN/nRoYtfM7gNlNP1WiS8casXQHY8ZcfcAZGqtcR6kR2y
o6QuczldPDuT7Pf7oHI+nyf/1asZ3AbK6XotEt5g8mD1YHjJSO4hO56yY+6A
SNVaYr3IDtlRUpe5nC6enTmC0NyrTuSF7Ha7xBLkZlCq1XIOna7XIuENJp87
OHLHc4PsuMmO3GM661rkkCU7ZEdJXbZyeqmTnTkqPasQRvjlB33ffzoGoRn0
arWcQ6fr1eAZuazxpNzW61p4zY7QY2rravCMHNnRqOV0Dg3l9Eql7GRpCQs5
Ho/XQaY87yc0g16tlnPodL0aNHJZ40m5rde18JodocfU1tWgkSM7GrWczqGh
nF6plJ0sLXkh2+02DDLlr+nJNxylWi3n0Ol6tfnUavp4Um7rdS28ZkfuMZ11
tfnUKtlRp+V0Dm3l9FItO1laxYWM49j3/XWEgdB2fjqGYjNo12o5h07Xq2oj
VzCelNt6XQuv2Sn2mPK6qjZyZEevltM5NJHTeyplZ05r8nm84kJuvzBcrVa1
H5jUrtVyDp2ul7yRC/aeC1TBeO4hOz6yU+wx5XXJGzmyQ3b01GUipzfqZWfu
nuv1+vFxO2FXfzgc4p/X+IOWrKvXq9VyDp2ul7CRC3LB3nNhKRjPPWTHR3aE
P+mrrUvYyJEdsqOqLhM5vVI1OxEe31m3yK8WE2n5LpqmWrxH7tnvDqr9MsZJ
Ca9r4TU75t5PlaolWy+yQ3ZU1WUopw2yk0gYW9Yl0np/y7rMaLWcQ6frFfKY
dUm0lsLrWnjNTkuPefXGUnidH6/Z8XoWtJxDAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4ZBzH7Xbbdd2z
BwKwPFdvB5PXuDnZAceQHYAyqmZnTnEYhseve/3Du/yRX2PrJa4r2DuYXDKG
OciODy23OSU7UfCYBo9laJnaf+plZ5LNZjP59TDnp/574iVfoNO3PvGSL1Az
rZDHfn9KvOTh9bleS9Q1Z3IhZMeHltuckp0oeEyJx1K1rO0/lbKTpcUCEd5Z
LRq56G3droVTLbc5JTtR8JgSj6VqWdt/aOSUL1AibsNLIxe9rdu1cKrlNqdk
JwoeU+KxVC1r+w+NnPIFSsRteGnkord1uxZOtdzmlOxEwWNKPJaqZW3/oZFT
vkCJuA0vjVz0tm7XwqmW25ySnSh4TInHUrWs7T9tGrlhGLqum/zo0IUFIrwR
LWuNXNzqBZAdT1puc0p2ouAxJR5L1bK2/yyenUn2+31QOZ/Pk//KAhHeWS1r
jVwwebB6MLxkJPeQHU9abnNKdqLgMSUeS9Wytv8snp05gtDcq07kC7Tb7RJL
kE+aTi15eDPq8rpeS2wUweRzB0fueG6QHTdabnNKdqLgMQ0e07leizRyNbIz
R6VnFcIIv/yg7/tPxyCcNLVawvDm1eV1veo/55M1npTbul0Lp1puc0p2ouCx
p3tM7Xo1eEauODtZWsIFOh6P10GmPO8nnDS1WsLw5tXldb3qH0ZZ40m5rdu1
cKrlNqdkJwoee7rH1K5Xg0auODtZWvJNYLvdhkGm/DU9+aTp1JL/Oj2jLq/r
1eSTd+njSbmt27VwquU2p2QnCh7T4DGd69XmU6tl2cnSKl6gcRz7vr+OMBDa
zk/HUDxpyrWKw1tSl9f1qnkYFYwn5bZu18Kpltuckp0oeOyJHlO+XlUbOWF2
5rQmn8crXqDbLwxXq1XtBwuVaxWHt6Qur+slPoyCvecCVTCee8iODy23OSU7
UfDYEz2mfL3kjVy97Mzdc71ePz5uJ+y0D4dD/PMaf9CSddpqtYQ/heXV5XW9
ZIdRkAv2ngtLwXjuITs+tNzmlOxEwWNP9Jjy9RI2clWzE+HxnXW8H0au5fbd
QXbeI1f7ZYyTEm7XwqmW25ySnSh47Okey9Oys/80yE4iYc6zLpHW+1vWZUUr
5DHrEtXldb0a1rUUbtfCqZbbnJKduBYeM+Uxr/sPAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgBvG
cdxut13XPXsgAMtz9XYweY2bkx1wDNkBKCMlO8vmK9xtGIbHr3+8/Z51Scbw
8f6WdUm03r5+ZF1W6vK6XvK6gr2DySVjmENDdpr62avHTPm5ZV1kh7OAuupl
Z8F8bTabya+HeTj13xMv+aSdvvWJl9AMIY/9/pR4ycPbrC6v67VIXXMmF6Ih
O0397NVj1vzcsi6yw1lAXfWys1S+NASKRu4FTd6yLg4jGjktWtbmkOxwFlAX
jVwKNHIvaPKWdXEY0chp0bI2h2SHs4C6aORSoJF7QZO3rIvDiEZOi5a1OSQ7
nAXURSOXAo3cC5q8ZV0cRjRyWrSszSHZ4SygLs2N3DAMXddNfnToYnDSEiG8
ttZrkbriVi9AT3Zo5GjkqtZFdjgLqKteduT52u/34Q7n83m6EGuTlgjhtbVe
i9QVTB6sHgwvGck9erJDI0cjV7UussNZQF31srNIvsJN5l5jIp+03W6XODz5
pKVrycOrsy6v67VIeIPJ5w6O3PHcUJKdpn726jFTfm5Z14XscBZQV7XsJH5P
CpWeVQgz9uUHfd9/OgbhpGVpCcOrti6v69XgGbms8aTctuVaNPWzV4/Z8XPL
uq6QHc4C6qqRnfTvSaFSoI7H43XSUsYpnLQsLWF41dbldb0aNHJZ40m5bcu1
aOpnrx6z4+eWdV0hO5wF1PWyjdzlx+8Mw6Sl/DU9+aSla8l/na6zLq/r1eZT
q+njSblty7Vo6mevHjPl55Z1XcgOZwF1vWQjN45j3/fXGQuENvjTMRRPWoFW
cXiV1+V1vao2cgXjSblty7Vo6mevHrPg55Z13UN2OAuoy0QjN/msXfGk3X6B
uVqtaj9YWKBVHF7ldXldL3kjF+w9F5aC8dyjITtN/ezVYxb83LKuG2SHs4C6
Fs9O1vckEmpcr9ePj/8Ju9/D4ZD+WQxhV5+lJfwpTG1dXtdL2MgFuWDvufAW
jOceDdlp6mevHrPg55Z1XSE7nAXUVSM76d+Ty+P76MI8ZF0S9TAPWZdEK+Qx
67JSl9f1Eta14ItM53hudpr62avH7Pi5ZV1kh7OAuuplp0G+AAAAAAAAAAAA
IIX/A/i41Ng=
    "], {{0, 120.6}, {501., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{501., 120.6},
  PlotRange->{{0, 501.}, {0, 120.6}}]], "Output",
 CellChangeTimes->{3.9000051327835135`*^9},
 CellLabel->"Out[48]=",
 CellID->707156688,ExpressionUUID->"db8298b3-2885-410b-974d-dded3d30d939"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Multichoose", "Section",
 CellChangeTimes->{{3.9000051388588085`*^9, 3.9000051403191433`*^9}},
 CellID->399341884,ExpressionUUID->"9e280db4-c641-46b9-bcf5-4aa1fd810235"],

Cell["\<\
There are four candies: gummy bears, gummy worms, chocolate bars,and \
marshmallows. There are three children named Peter, James, and Andrew (after \
the apostles from the Bible). How many ways can the four candies be \
distributed among the four children?\
\>", "MathCaption",
 CellChangeTimes->{{3.9000052021232843`*^9, 3.900005242148095*^9}},
 CellID->469287308,ExpressionUUID->"54f27349-1ed0-4e77-9324-f274311a24bd"],

Cell[CellGroupData[{

Cell["Let's list all the orderless combinations.", "MathCaption",
 CellChangeTimes->{{3.9000051829467325`*^9, 3.9000051887700224`*^9}},
 CellID->504481481,ExpressionUUID->"360f1035-1233-4d69-9ee5-347fba9babf7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"OrderlessCombinations", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<gummy-bears\>\"", ",", "\"\<gummy-worms\>\"", ",", 
      "\"\<chocolate-bars\>\"", ",", "\"\<marshmallows\>\""}], "}"}], ",", 
    RowBox[{"{", "3", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9000051895239744`*^9, 3.9000051906945868`*^9}, {
  3.900005245923474*^9, 3.9000052633893604`*^9}, {3.900005678093049*^9, 
  3.9000056812037115`*^9}},
 CellLabel->"In[62]:=",
 CellID->204438902,ExpressionUUID->"da421a35-0363-4242-8f47-b3fb3dfdd164"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
AAAAAABgcf5/3uFAVg==
    "], {{0, 173.4}, {634.1999999999999, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{634.1999999999999, 173.4},
  PlotRange->{{0, 634.1999999999999}, {0, 173.4}}]], "Output",
 CellChangeTimes->{3.9000052637556524`*^9, 3.9000056815598564`*^9},
 CellLabel->"Out[62]=",
 CellID->81764621,ExpressionUUID->"2ce3a670-c988-4fee-9212-c4508c56a204"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"OrderlessCombinations", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<gummy-bears\>\"", ",", "\"\<gummy-worms\>\"", ",", 
      "\"\<chocolate-bars\>\"", ",", "\"\<marshmallows\>\""}], "}"}], ",", 
    RowBox[{"{", "3", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9000052664025607`*^9, 3.9000052676705875`*^9}},
 CellLabel->"In[50]:=",
 CellID->1607685,ExpressionUUID->"db4e61b9-e63c-4918-bb44-38468764fa68"],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{3.900005268049462*^9},
 CellLabel->"Out[50]=",
 CellID->162408320,ExpressionUUID->"1e237630-3784-4030-ac4d-85839ba26076"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "We can compute 4 multichoose 3, written as ",
 Cell[BoxData[
  RowBox[{"(", 
   RowBox[{"(", GridBox[{
      {"4"},
      {"3"}
     }], ")"}], ")"}]], "Input",
  CellChangeTimes->{{3.9000052863856974`*^9, 3.900005289415719*^9}},
  ExpressionUUID->"18d47a17-af36-426b-93aa-2394575a45ac"],
 "."
}], "MathCaption",
 CellChangeTimes->{
  3.9000052444175262`*^9, {3.900005277779028*^9, 3.900005292375095*^9}},
 CellID->418159723,ExpressionUUID->"bff5b926-f987-4c45-95f1-40dc1f0acecb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multichoose", "[", 
  RowBox[{"4", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.900005297282395*^9, 3.9000052992852163`*^9}},
 CellLabel->"In[51]:=",
 CellID->22090076,ExpressionUUID->"fc922e8d-de4b-444b-a0b4-a0d7ba1360ba"],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{3.9000052996111326`*^9},
 CellLabel->"Out[51]=",
 CellID->25208491,ExpressionUUID->"03d3e6fd-de1f-4bca-97d5-cd55c160ed03"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
There are ten candies: licorice, peppermint drops, lemon drops, truffles, \
gummy bears, gummy worms, chocolate bars, jelly beans, peanut butter cups, \
and marshmallows. There are four children named Peter, James, John, and \
Andrew. How many ways can the ten candies be distributed among the four \
children?\
\>", "MathCaption",
 CellChangeTimes->{3.90000531673953*^9},
 CellID->305515986,ExpressionUUID->"b013918c-4a2e-4d17-a7cf-95b8954d4bdf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"OrderlessCombinations", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<licorice\>\"", ",", "\"\<peppermint-drops\>\"", ",", 
      "\"\<lemon drops\>\"", ",", "\"\<truffles\>\"", ",", 
      "\"\<gummy-bears\>\"", ",", "\"\<gummy-worms\>\"", ",", 
      "\"\<chocolate-bars\>\"", ",", "\"\<jelly-beans\>\"", ",", 
      "\"\<peanut-butter-cups\>\"", ",", "\"\<marshmallows\>\""}], "}"}], ",", 
    RowBox[{"{", "4", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9000053227633057`*^9, 3.900005361714833*^9}},
 CellLabel->"In[52]:=",
 CellID->904920670,ExpressionUUID->"26072508-28bc-42dc-b7de-6fb8870399e8"],

Cell[BoxData["715"], "Output",
 CellChangeTimes->{3.9000053629609995`*^9},
 CellLabel->"Out[52]=",
 CellID->18002359,ExpressionUUID->"d840c82f-1020-4e1a-80d6-96a7716a4d50"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[" We can compute 10 multichoose 4.", "MathCaption",
 CellChangeTimes->{3.9000053202555513`*^9},
 CellID->572182296,ExpressionUUID->"91f0974b-b429-4dbb-b881-6b87bf991194"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multichoose", "[", 
  RowBox[{"10", ",", "4"}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`Combinatorics`"],
 CellLabel->"In[53]:=",
 CellID->39383660,ExpressionUUID->"5c6b411a-c055-443f-ae00-5fc1fa8600a2"],

Cell[BoxData["715"], "Output",
 CellChangeTimes->{3.899749385891509*^9, 3.9000053663594093`*^9},
 CellLabel->"Out[53]=",
 CellID->481380362,ExpressionUUID->"74876ce8-9d83-443f-9730-f2689228a8ac"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Another way of entering it is like this is infix notation, written as ",
 Cell[BoxData[
  RowBox[{"(", 
   RowBox[{"(", GridBox[{
      {"10"},
      {"4"}
     }], ")"}], ")"}]], "Input",
  CellChangeTimes->{{3.9000052863856974`*^9, 3.900005289415719*^9}},
  ExpressionUUID->"49b5331a-e3fd-4729-b677-892d69ce64ac"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.900005369842291*^9, 3.9000053893247538`*^9}},
 CellID->17219148,ExpressionUUID->"dae02b5c-3d50-4dd7-bc42-cdfd6e4c3dac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"10", "~", "Multichoose", "~", "4"}]], "Input",
 CellProlog:>Needs["PeterBurbery`Combinatorics`"],
 CellLabel->"In[992]:=",
 CellID->47120929,ExpressionUUID->"e47033b7-c500-4939-9cfe-e88f155e3694"],

Cell[BoxData["715"], "Output",
 CellChangeTimes->{3.8997493866190166`*^9},
 CellLabel->"Out[992]=",
 CellID->64792566,ExpressionUUID->"082d05bf-acdb-4c19-9f06-2e94a6ebe0f9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
We can also generate all the combinations and count them. Since there are a \
lot of combinations, I am not listing them all here and then using Length. \
I'm just going to use Length immediately.\
\>", "MathCaption",
 CellID->14643919,ExpressionUUID->"44580e7e-41d4-4562-b481-a7ad60178081"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"OrderlessCombinations", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<licorice\>\"", ",", "\"\<peppermint drops\>\"", ",", 
      "\"\<lemon drops\>\"", ",", "\"\<truffles\>\"", ",", 
      "\"\<gummy bears\>\"", ",", "\"\<gummy worms\>\"", ",", 
      "\"\<chocolate bars\>\"", ",", "\"\<jelly beans\>\"", ",", 
      "\"\<peanut butter cups\>\"", ",", "\"\<marshmallows\>\""}], "}"}], ",", 
    RowBox[{"{", "4", "}"}]}], "]"}]}]], "Input",
 CellProlog:>Needs["PeterBurbery`Combinatorics`"],
 CellLabel->"In[993]:=",
 CellID->37517731,ExpressionUUID->"70ff0a6c-d458-42c7-8c99-5c6a9e50d3d8"],

Cell[BoxData["715"], "Output",
 CellChangeTimes->{3.899749387095017*^9},
 CellLabel->"Out[993]=",
 CellID->530337700,ExpressionUUID->"71a3b817-6565-4275-9e5d-7ea2bdea12ae"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get length four sets from a list of length two:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.875713092380643*^9, 3.8757131054083443`*^9}},
 CellID->968157184,ExpressionUUID->"70cf6342-3c4b-4d2b-b269-ca7a19b464ff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OrderlessCombinations", "[", 
  RowBox[{
   RowBox[{"Range", "[", "2", "]"}], ",", 
   RowBox[{"{", "4", "}"}]}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.8757130813149757`*^9, 3.875713083065956*^9}, {
  3.875713163776183*^9, 3.875713164021326*^9}, {3.898421107568678*^9, 
  3.89842111327289*^9}},
 CellLabel->"In[1015]:=",
 CellID->702446134,ExpressionUUID->"7ba54b35-ed04-4668-a272-06c024b4c6c9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.8757130696328373`*^9, 3.875713083332706*^9}, 
   3.8984211136238894`*^9, 3.8997498737485714`*^9},
 CellLabel->"Out[1015]=",
 CellID->306566547,ExpressionUUID->"5cca346d-7d0a-4f2e-827f-b6543aea294b"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "d0d4b40d-af72-4694-86d2-eb65c6284077"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->14107562,ExpressionUUID->"b8d544be-ab51-49a3-b0d0-259ecf14aa98"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Elements need not be integers:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.875713136035513*^9, 3.875713142128128*^9}},
 CellID->505671602,ExpressionUUID->"7e175591-2abd-42c1-8c80-44e10684f4a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"OrderlessCombinations", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<dog\>\"", ",", "\"\<cat\>\"", ",", "\"\<bird\>\""}], "}"}], 
    ",", "3"}], "]"}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.875713124983794*^9, 3.875713133759502*^9}, 
   3.898421125793764*^9, {3.9000063228530025`*^9, 3.900006327318783*^9}},
 CellLabel->"In[77]:=",
 CellID->618773088,ExpressionUUID->"f933d93a-5e6c-4230-a7ab-1232a8d6cfe2"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 50.4}, {622.1999999999999, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{622.1999999999999, 50.4},
  PlotRange->{{0, 622.1999999999999}, {0, 50.4}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.875713134316802*^9, 3.898421126716824*^9, 
  3.8997498744259176`*^9, 3.9000063276705365`*^9},
 CellLabel->"Out[77]=",
 CellID->161706846,ExpressionUUID->"ce69c458-5d26-4ab0-8075-a5c2a60c3b55"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Orderless combinations of plain indistinguishable unmarked unlabeled elements\
\
\>", "Section",
 CellChangeTimes->{{3.900006433950635*^9, 3.9000064506748*^9}},
 CellID->530745392,ExpressionUUID->"88d508aa-9464-4cd0-a7d3-5e183e0c5a64"],

Cell[CellGroupData[{

Cell["\<\
We could consider {\"cat\", \"cat\", \"cat\"} and {\"dog\", \"dog\", \"dog\"} \
as partly equal.\
\>", "MathCaption",
 CellChangeTimes->{{3.8997498828965025`*^9, 3.8997498907152777`*^9}, {
  3.8997499307985764`*^9, 3.89974994322063*^9}},
 CellID->330285041,ExpressionUUID->"f33eda08-fae3-4479-a6c4-e636cede7441"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CanonicalMultiset", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<cat\>\"", ",", "\"\<cat\>\"", ",", "\"\<cat\>\""}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8997498914598007`*^9, 3.899749901145748*^9}},
 CellLabel->"In[1017]:=",
 CellID->149666305,ExpressionUUID->"56cd4124-2cba-4cc3-9cc9-2d894388b1fa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.89974990145318*^9},
 CellLabel->"Out[1017]=",
 CellID->164357416,ExpressionUUID->"29d6c201-3240-429e-bda2-f44a1eee1902"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CanonicalMultiset", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<dog\>\"", ",", "\"\<dog\>\"", ",", "\"\<dog\>\""}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8997498914598007`*^9, 3.899749909292178*^9}},
 CellLabel->"In[1018]:=",
 CellID->279831655,ExpressionUUID->"c29e76db-da18-4009-a1a9-00b2f6268e11"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.899749909631289*^9},
 CellLabel->"Out[1018]=",
 CellID->240178721,ExpressionUUID->"506a5827-d849-47d1-96a2-7cae7399f25b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
If we delete duplicates by CanonicalMultiset, we get fewer elements.\
\>", "MathCaption",
 CellChangeTimes->{{3.8997499119156322`*^9, 3.8997499288560653`*^9}},
 CellID->377750434,ExpressionUUID->"77c588f9-414c-40a5-b716-15302bd28261"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{
   RowBox[{"DeleteDuplicatesBy", "[", "CanonicalMultiset", "]"}], "[", 
   RowBox[{"OrderlessCombinations", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<dog\>\"", ",", "\"\<cat\>\"", ",", "\"\<bird\>\""}], "}"}],
      ",", "3"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997499753112793`*^9, 3.899750004350798*^9}, {
  3.9000063321503677`*^9, 3.9000063347816505`*^9}},
 CellLabel->"In[78]:=",
 CellID->80880133,ExpressionUUID->"b149bf79-ed77-4cbb-8feb-b7afb792d0d1"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnU+O3DYaxQvJJsv0EYK+QgPJdlaebD0Y9DrBeAJvPIATIEjdQDfwDXyC
PoEv0BfoG/gOmpd66A9sUqIoiSp9VL8fYKNaYlHv+8MiRVHSD7/+7+1/vzmd
Tr9/h//e/vLnPz5+/OWvf32PP/794ff3v31495+fP/zx7rd3H3/69Vts/BH/
/onyf3/uhRBCCCGEEEIIIYQQ4qA8PDx8+vRpbxW70a757Sqvwis33zONhqZR
2X3LyufSdd3nz58niz0+Pp4ulBSeBJXguOvrWU+75rervAqv3HzPNBqaRmX3
LSvfDpj55s2byWJ1fYIjOlkA06757Sqvwis3H3y5sLeKARoNTaOy+5aV53l6
erq/v3///v2CMoU+6auew6Y+oTaIrFJ/inPzF+BH+aaxO17gqoAeDUryA2a1
qVk0Krv3pLxuyqE29MXLypT7pCKDPoE8iNzoiP7Nn4sr5dvF7niBq0JJv9ar
Tc2hUdm9M+UVU67EqLEy5hPo6S5EvS1aUBeQ9sUswM8YD4xN9qJ+DBWwF//f
3d0N+mS76DRh/iy8Kd8odscLnMGDgsHewfSj2NevX207N2JUTA+ENg4eRW2q
kEZlO1ReK+XW92tsJgZMswKwItyVTumzAHxFSwk+WwG0SvTgp4RlhiyjCfNn
4U35Lv2aH/Nngd+H29vbsM7z+Wx7YcXNzU24F39a35fq2SUumZobDU2jsh0q
d9KvmRWwjuLR6KyA9fU88RzzCdspfIs/+dl6fLRZFsAHDjXZbJcZsowmzJ+F
N+XX79dcmV8Ofj1YD2qmQpgQmklhsMj28k/b6/98rcXQNCrboXI//VrYKOiW
dG6Eto/5BC61r2CoYHWiFXNvOJcyNje7Vxt0Yv4svCnfpV/zY345/ImIlluE
svE5PCjA7wl+RsIthdfXerWpYhqV7VC5k34t2oU++vTyNJbkfRJuh/nYyC30
TzRb66pf82P+LLwp3+v6mtFK4PD7EHVSKVBiV99s8BwWcN6vtRiaRmU7VL4+
5dC9YuCXXwyZL5P6hE0mXQ5a7pPJvZm1NJPmzKUh82fhTXn12L2ewEWk19dI
WKa8X1ObKqRR2Q6Vr0859KGoIZq1mFUm9Qm8Mcv2vE9YWzRyGFtLA5GQWuW2
QaMh82fhTXn12B01cLcXMgXYqYXXztacr6lNFdKobIfKq6QcV6osLhP5BCXZ
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
    "], {{0, 33.}, {350.4, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{350.4, 33.},
  PlotRange->{{0, 350.4}, {0, 33.}}]], "Output",
 CellChangeTimes->{3.89975000499255*^9, 3.900006335150128*^9},
 CellLabel->"Out[78]=",
 CellID->848765034,ExpressionUUID->"042f0bc5-163c-4ba3-8132-f75f266f7d87"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"CanonicalMultiset", "/@", 
   RowBox[{
    RowBox[{"DeleteDuplicatesBy", "[", "CanonicalMultiset", "]"}], "[", 
    RowBox[{"OrderlessCombinations", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<dog\>\"", ",", "\"\<cat\>\"", ",", "\"\<bird\>\""}], 
       "}"}], ",", "3"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.89975007676978*^9, 3.899750085997959*^9}, {
  3.900006339008835*^9, 3.90000634134684*^9}},
 CellLabel->"In[79]:=",
 CellID->281231649,ExpressionUUID->"24db643a-a35a-4577-81ab-92455c12558f"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnTFu20AQRYWkSRl1aQNdwUXaVEZaB4FrG3EMNQ5gBwjiG+gCAW+gE+gE
voAuoBvwDpuJBljYJjmcXe5Q5O5/QAwrWv2Z/zX2UhIlf7z+efHjzWKxeHhH
Xy6ufn++v7/68/U9Xfh297C+vbv5/uXu183tzf2n67f0nx/o319a//97BwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAA5Mh2u91sNk9PT6dupAWj3kqzvNvtNkf2
+31C2YRYuC5weNx8kixwJo0sI8kk1HXNfVZVNVqSh8Ph8vJyvV7HraGGV6vV
4gh13npzvi2JpOk4aW8RlGaZRtFrMq2lTS270V3nOjwuiyQLnEmlZSNZJNkL
HRIsXhKdZFDatLj3aKF1Den7HM7OzuR46eYkouknlOG96SnQMnF+fs7TSIL0
lUvQj1VzpZ1lN6LrvIfHzT9JV95MuhDLRrJIUobUlsull6XvhySpT5vsRK+h
JukqqkU998arKRRBkt70FGj5cMRfrKqKxLumy8iyoGzhOuPhEZRnlGSBMxlk
2UgWSQpQk3Vd+4v8kLyr4SHbbkIp/6rEBLezoN70FGi5WYXEu3oY/2fcwnXG
wyMozyjJZpXsZ7JZQrBsJIsk9fCBAe3jrddOZAf3THA78xjd9QVaZrbbLYnT
fLZeO/7PuMfCdX7Do1GeUZJMUTPJyJaNZJGkDD2057Pj6BE9aT4+PnatxA6u
l83vl/AJp72u69VqtVwunz9fFNRbNDntO9jBE1LaTDqFZSNZJCnDD+cZ0ux6
AO6wg4fI5vdL+IQ7OJ/4MXAy48hp38EOnpDSZtIpLBvJIkkZ/xjcn8lm+jr4
fr+nQvKJ6Jo1ThevUkpPwt4iKNAyT7t80mZyy3rNGe07JxkeveaMkixwJjWW
jWSRpB7azZdHWq9NsvlS57RAfvZAs8bp4iURkkoYV8LeIijKMlXkV3Z6vSS3
7E56R+c0PC6vJAucSb1lI1kkGQS/ba2rgd4klWt6z6LXrNHESyLy3VRVVWie
SXqLqKuRdblYpor8ZkzNTSwsu9Pd0ZkNj8slyQJnUm8ZSfaWs0iyWWV1pPXa
3iSVa9ywJ+T5E+QIPtigr3yx9cNk5EJ87n3EUdbA3kLrFmiZp52+bl7S+gmH
RpYFZQvXGQ+PoDyjJAucSaVlJNlbyyjJ51LyJ7oIfkPXDJTiVJtE3Pv+LL7Q
kyUG9hZat0DLrZpdg21kWVC2cJ3x8AjKM0qyVXOR9UwqLSPJ3lrjJEk7uPD4
fSI7uD9AekXEYwp3fNJgEf4RtcN7C6pboOVWzeYhq9xbXGmNsoXrjIdHUJ5R
kgXOpN4ykpQZIcnek9snsoMH0SXCZ+BzVs2DK7veBtbVAMsJS0/KNZJEkoJy
L0hSqdxLZkmGruFlvS+Xa9bI0M27+vFPVshPOyTvbWDdXmA5belJuUaSSNIh
yXSlkWTEGoa65df0B64RoBvSzbui4AOe3W4XfQ/G9TawrgwsJy89KddIMq70
OJoeJJkKJJkKOUn9mldo3qQf/Ub+Ef7W+dT+MD0sz7rKaUGSqUCSqUCSqTDd
agEAAAAwTf4BioPsKg==
    "], {{0, 14.399999999999999`}, {397.2, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{397.2, 14.399999999999999`},
  PlotRange->{{0, 397.2}, {0, 14.399999999999999`}}]], "Output",
 CellChangeTimes->{{3.8997500812424703`*^9, 3.899750086329784*^9}, 
   3.9000063416833315`*^9},
 CellLabel->"Out[79]=",
 CellID->213598105,ExpressionUUID->"c0fe9207-69ca-40dc-a102-e65430fbbb73"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here's what we would get something like.", "MathCaption",
 CellChangeTimes->{{3.899750063823572*^9, 3.8997500740194883`*^9}},
 CellID->88233538,ExpressionUUID->"0a4a5c63-eac7-46e4-9838-4db8022b656c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OrderlessCombinationsOfUnmarkedElements", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<dog\>\"", ",", "\"\<cat\>\"", ",", "\"\<bird\>\""}], "}"}], 
   ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.899750048228162*^9, 3.89975005715495*^9}},
 CellLabel->"In[1020]:=",
 CellID->926616109,ExpressionUUID->"6fbc3631-04e7-4667-bf57-374fd925a058"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8997500577748804`*^9},
 CellLabel->"Out[1020]=",
 CellID->78903040,ExpressionUUID->"a217b7b3-0f3e-406c-ab37-e7c7ef5a9c3b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["These produce the same output.", "MathCaption",
 CellChangeTimes->{{3.899750098684269*^9, 3.8997501037767563`*^9}},
 CellID->97113938,ExpressionUUID->"4ee85dcc-da93-4d49-b9de-456690e750cd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CanonicalMultiset", "/@", 
  RowBox[{
   RowBox[{"DeleteDuplicatesBy", "[", "CanonicalMultiset", "]"}], "[", 
   RowBox[{"OrderlessCombinations", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<dog\>\"", ",", "\"\<cat\>\"", ",", "\"\<bird\>\""}], "}"}],
      ",", "3"}], "]"}], "]"}]}]], "Input",
 CellLabel->"In[1023]:=",
 CellID->22984984,ExpressionUUID->"898e048a-fe61-4538-b291-e76d75a22734"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8997501087394667`*^9},
 CellLabel->"Out[1023]=",
 CellID->239111319,ExpressionUUID->"91a2c43c-0a49-4a0f-84c9-1bbd64d855a7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Let's compare the performance for a large set.", "MathCaption",
 CellChangeTimes->{{3.899750123113118*^9, 3.899750129791135*^9}},
 CellID->396413639,ExpressionUUID->"74e5a1b3-aa91-4119-baeb-242f085774eb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<EchoPerformance\>\"", "]"}], "[", 
  RowBox[{"CanonicalMultiset", "/@", 
   RowBox[{
    RowBox[{"DeleteDuplicatesBy", "[", "CanonicalMultiset", "]"}], "[", 
    RowBox[{"OrderlessCombinations", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<dog\>\"", ",", "\"\<cat\>\"", ",", "\"\<bird\>\""}], 
       "}"}], ",", "3"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8997501310771832`*^9, 3.89975013486598*^9}},
 CellLabel->"In[1024]:=",
 CellID->229833682,ExpressionUUID->"e2f71c0e-42b9-49c7-84d8-b7c41c1ae607"],

Cell[BoxData[
 RowBox[{
  TagBox["Map",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    StyleBox[
     TemplateBox[{"0.0005623`", "\" s\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]], ",", 
    StyleBox[
     TemplateBox[{"7168", "\" B\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]]}], "}"}]}]], "Echo",
 CellChangeTimes->{3.8997501387702274`*^9},
 CellID->834526706,ExpressionUUID->"453344bc-2da8-40c0-8181-f2a5297bbfb2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.899750139293807*^9},
 CellLabel->"Out[1024]=",
 CellID->630516631,ExpressionUUID->"26e85f3b-38bc-435b-a0a9-df6218359c78"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<EchoPerformance\>\"", "]"}], "[", 
  RowBox[{"OrderlessCombinationsOfUnmarkedElements", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<dog\>\"", ",", "\"\<cat\>\"", ",", "\"\<bird\>\""}], "}"}], 
    ",", "3"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997501310771832`*^9, 3.8997501417967834`*^9}},
 CellLabel->"In[1025]:=",
 CellID->162857240,ExpressionUUID->"61dccad2-9386-42ce-8468-30c7b3d07ce2"],

Cell[BoxData[
 RowBox[{
  TagBox["OrderlessCombinationsOfUnmarkedElements",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    StyleBox[
     TemplateBox[{"0.0003973`", "\" s\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]], ",", 
    StyleBox[
     TemplateBox[{"7280", "\" B\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]]}], "}"}]}]], "Echo",
 CellChangeTimes->{3.899750142693967*^9},
 CellID->267038778,ExpressionUUID->"8592ff58-114a-4072-8309-fbfbd35cfbed"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8997501432299366`*^9},
 CellLabel->"Out[1025]=",
 CellID->51852502,ExpressionUUID->"8f61954f-183e-4433-8b6d-3ae9ffcd9a05"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<EchoPerformance\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"CanonicalMultiset", "/@", 
    RowBox[{
     RowBox[{"DeleteDuplicatesBy", "[", "CanonicalMultiset", "]"}], "[", 
     RowBox[{"OrderlessCombinations", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<dog\>\"", ",", "\"\<cat\>\"", ",", "\"\<bird\>\""}], 
        "}"}], ",", "7"}], "]"}], "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997501666691236`*^9, 3.899750174714215*^9}},
 CellLabel->"In[1028]:=",
 CellID->306376386,ExpressionUUID->"a9656146-6819-4835-8c73-1994d049d83d"],

Cell[BoxData[
 RowBox[{
  TagBox["CompoundExpression",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    StyleBox[
     TemplateBox[{"0.0026763`", "\" s\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]], ",", 
    StyleBox[
     TemplateBox[{"40688", "\" B\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]]}], "}"}]}]], "Echo",
 CellChangeTimes->{3.899750176058378*^9},
 CellID->448272658,ExpressionUUID->"de4d32a2-fda2-4058-8440-0f057c70bc4e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<EchoPerformance\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"OrderlessCombinationsOfUnmarkedElements", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<dog\>\"", ",", "\"\<cat\>\"", ",", "\"\<bird\>\""}], "}"}],
      ",", "7"}], "]"}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997501310771832`*^9, 3.899750179741675*^9}},
 CellLabel->"In[1029]:=",
 CellID->3601619,ExpressionUUID->"e4437f9b-a46b-41fc-8db7-0244ce2f3101"],

Cell[BoxData[
 RowBox[{
  TagBox["CompoundExpression",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    StyleBox[
     TemplateBox[{"0.0021079`", "\" s\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]], ",", 
    StyleBox[
     TemplateBox[{"40272", "\" B\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]]}], "}"}]}]], "Echo",
 CellChangeTimes->{3.8997501802011633`*^9},
 CellID->88055709,ExpressionUUID->"118d84c1-73c1-4e04-a98f-0302a47d25eb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The definition of the function is significantly faster and uses significantly \
less memory.\
\>", "MathCaption",
 CellChangeTimes->{{3.8997502844391108`*^9, 3.8997503008520737`*^9}},
 CellID->100378946,ExpressionUUID->"adb2da3f-fc1b-4721-8aab-2dc30747aed8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<EchoPerformance\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"CanonicalMultiset", "/@", 
    RowBox[{
     RowBox[{"DeleteDuplicatesBy", "[", "CanonicalMultiset", "]"}], "[", 
     RowBox[{"OrderlessCombinations", "[", 
      RowBox[{
       RowBox[{"RandomWord", "[", 
        RowBox[{"\"\<Noun\>\"", ",", "7"}], "]"}], ",", "17"}], "]"}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997502399302263`*^9, 3.8997502466353493`*^9}},
 CellLabel->"In[1030]:=",
 CellID->268140765,ExpressionUUID->"c6c5a97b-d069-4211-b5d1-7372b4b935fa"],

Cell[BoxData[
 RowBox[{
  TagBox["CompoundExpression",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    StyleBox[
     TemplateBox[{"16.5168917`", "\" s\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]], ",", 
    StyleBox[
     TemplateBox[{"148109320", "\" B\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]]}], "}"}]}]], "Echo",
 CellChangeTimes->{3.8997502637371936`*^9},
 CellID->434075465,ExpressionUUID->"858ceb05-cacb-4cba-aca3-f4d7b308f244"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<EchoPerformance\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"OrderlessCombinationsOfUnmarkedElements", "[", 
    RowBox[{
     RowBox[{"RandomWord", "[", 
      RowBox[{"\"\<Noun\>\"", ",", "7"}], "]"}], ",", "17"}], "]"}], ";"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.899750261218817*^9, 3.899750262644846*^9}},
 CellLabel->"In[1031]:=",
 CellID->589080666,ExpressionUUID->"e3c8de3b-c47d-4149-8e7a-e15d13339f24"],

Cell[BoxData[
 RowBox[{
  TagBox["CompoundExpression",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    StyleBox[
     TemplateBox[{"9.0295319`", "\" s\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]], ",", 
    StyleBox[
     TemplateBox[{"84408424", "\" B\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]]}], "}"}]}]], "Echo",
 CellChangeTimes->{3.8997502756494303`*^9},
 CellID->323976790,ExpressionUUID->"a7a9a0a2-4119-4393-9072-546c55af6cfc"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Monotonic function
and weakly decreasing\
\>", "Section",
 CellChangeTimes->{{3.9000068597246532`*^9, 3.900006862703184*^9}, {
  3.9000100563377943`*^9, 3.9000100649144993`*^9}},
 CellID->12288536,ExpressionUUID->"1e827476-a038-43c2-8781-124faa9fbdb1"],

Cell[CellGroupData[{

Cell["\<\
In calculus, a function f defined on a subset of the real numbers (here we \
define subset as being allowed to be the whole set, that is the real numbers) \
with real values is called monotonic if and only if it is either entirely \
non-increasing, or entirely non-decreasing. That is, as per Figure 1, a \
function that increases monotonically does not exclusively have to increase, \
it simply must not decrease.\
\>", "MathCaption",
 CellChangeTimes->{{3.9000072050107355`*^9, 3.9000072865456843`*^9}},
 CellID->3829791,ExpressionUUID->"d8dbec77-14e8-407a-acb4-5534743784fd"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
XPSl6C3RHh2eM9PF/gcAAGhH/Zt9ubf/Uz0fcGoa/FYBs8v+BwAAaMd7Uv69
v1ieD5ht9j8AAEA7Xpryb/xh8/sBs8f+BwAAaMeK6L6Uf9uP0sPRBdErouXt
fyT0iP0PAADQnitS/k3ftDvS4PmAta1/KvSB/Q8AANCe96f8O76N6ucDzo32
affjISP7HwAAoD2/lfJv9zbz+wHlsP8BAADa87yUf7N3VanPB6xPg/sdFuuq
6MohuywNrpkM24ejTUP212nwZzBM74vW7dBH0uJ/vpemwTshh+mM6PQh+/Xo
xCH71ei4ETosOnTInhntPWRrEgAAwOLq78g3p/xbvcvm0mAPnxU9rZ2PLauP
pfyfqcqrvnfm3iG7K/r2CN2Ylr5mtb2r0/DXri5Jo127qt8dOuy1q41p+GtX
69MTr10tVv2c0rDXrerOTMNfu6rvexr22tXxabRrVy9Iw1+7OjANf+1q1wQA
wCTVfz/PvT0muXG2Px+woo0PL4NPpvyfoyRNulGuUY16naqra1SjXqfqwzWq
Ua9TdXWNatTrVF1do1qVAKAsX0r5/16Xo+3PBxwx/kc4UfXfEXN/dpIk6Wfr
6l6qUa5RdXkv1SjXqPpyL9Uo16i6vJdqlGtUo16n8s4rYBQfT/n/fZm77b8f
sO+Yn+UkXJzyf16SJEmavjzv179rVLPwvN/KRJ/U/3nO/d9FfenR6BPRSdHy
cT7UDv1byv85SZIkSVLbed6v+TWqYa9TXdqDP+c+dufC531U6pf6P1u5PxtJ
kiRJkkqsT88H1NeMHk/5PxNJkiRJkkqt/q3Eaf/9gO1Wp+Gf2amf7xn2WaD6
uaFRnjOqn0va2fNK706L/1n8S1r82aj6Oaphn7mqr+2M8m7s9Wn4e3Dqe0iG
vb+nvhdolOfb6ntBhr0nqb6Hadj7nep7o4a9j6q+52qUe7TmlvhzlSRJkqS+
1dfnA0rxyrT45/8X+Q6NCen7NaqdVV8bHPb9PaNcoxr1OtX65BpV0+tUW1P+
f79IkiSpv10TnZFok/0P9F1X16hGvU7V1TWqLu+lWp+6uUY16nWqrq5RdXkv
1ZaU/+89kiTNYvX3RPXfCeq/H61JtMn+B4DxjHKNqst7qUa5RtXlvVRdXaPq
8l6qUa5R9eV5v/r97bn/ji5JbVb/92X974ZnJLpi/wMAlM/zft5J5Z1U6mO3
pcH/7xyRmAT7HwAAmJT6/e6j3DN1SBr+etSL0vDXol6ahr8W9ao02nN9b40+
l/Jv675W/87e16NfipYlJsn+BwAAaFd9j0fund2n6t/4q+9hqa+PrBzjc2U8
9j8AAEC7Lk/5N3cfqp8xqZ+52W+8j5OW2P8AAADtuinl3965qs99fXTYuB8i
rbP/AQAA2vVwyr/DJ9k9afDMw/FtfHh0xv4HAABozwEp/x6fRI9EH49OSYP3
OtJ/9j8AAEB7XpPyb/Ou2pYGvy9Z/5bmnm19YEyM/Q8AANCe81L+nd52N6bB
M/3Pbe1TIgf7HwAAoD2fSfn3ehvdEW2Mjm334yEj+x8AAKA99W7Ovd2b9kD0
D9ErouVtfzBkZ/8DAAC044iUf8OP2tboyujMaE37Hwk9Yv8DAAC0450p/54f
tvqZ/nXRMzv5JOgj+x8AAKAdl6b8u36xbo82REd29QHQa/Y/AADA+FZFj6T8
G//J3RddEJ0YLevs7JkG9j8AAMD4Xpvyb/3tbY4ujl4XrezypJkq9j8AAMD4
Lkr5d/9Xo3Oj/To+V6aT/Q8AADCefdLgO/ccm/+maH10eNcnydSz/wEAAMZz
Tprs5r8n2hQdnzzTz/DsfwAAgPHU9913vfnrdwt+Mnp1tGIyp0Vh7H8AAIDm
Xp662/zboqujs6OnTeqEKJb9DwAA0Nzlqf3df2MaPNP/3ImdBbPA/gcAAGjm
6GgutbP574w2RsdN9AyYJfY/AABAMxem8Tb/g9H5abDLlk/42Jk99j8AAMDo
jk2D5/NH3fxboyujM6M9Jn7UzDL7HwAAYHRfTqM/078uOiDHwUKy/wEAAEb1
pjTc5r89DZ7pPzrPYcIT2P8AAADDWx3dmp56Q90bbYqOj5ZlOkbYGfsfAABg
eB9IP7ubNkeXpMEz/bvnOzRYlP0PAAAwnJelJ77z76vRudH+OQ8KhmT/AwAA
LG1NdEv03WhDdHjWo4HR2f8AAABLe0n0i7kPAsZg/wMAAED57H8AAAAon/0P
AAAA5bP/AQAAoHz2PwAAAJTP/gcAAIDy2f8AAABQPvsfAAAAymf/AwAAQPns
fwAAACif/Q8AAADls/8BAACgfPY/AAAAlM/+BwAAgPLZ/wAAAFA++x8AAADK
Z/8DAABA+ex/AAAAKJ/9DwAAAOWz/wEAAKB89j8AAACUz/4HAACA8j0zOmOR
XpTv0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAyvR/mrwXVA==
    "], {{0, 592.1999999999999}, {614.4, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{120., 120.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{614.4, 592.1999999999999},
  PlotRange->{{0, 614.4}, {0, 592.1999999999999}}]], "Input",
 CellID->40301758,ExpressionUUID->"5a5859b9-a490-42c2-b858-736980ab6aff"]
}, Open  ]],

Cell["Figure 1: A monotonically non-decreasing function.", "MathCaption",
 CellChangeTimes->{{3.9000073429069138`*^9, 3.9000073532646313`*^9}},
 CellID->579141544,ExpressionUUID->"bb29eb06-0040-4bbb-adf9-8957a7ad0c54"],

Cell[CellGroupData[{

Cell[TextData[{
 "A function is called ",
 StyleBox["monotonically increasing",
  FontSlant->"Italic"],
 " (also ",
 StyleBox["increasing",
  FontSlant->"Italic"],
 " or ",
 StyleBox["non-decreasing",
  FontSlant->"Italic"],
 ") if for all x and y such that x \[LessEqual] y one has f(x) \[LessEqual] \
f(y), so ",
 StyleBox["f",
  FontSlant->"Italic"],
 " preserves the order (see Figure 1). Likewise, a function is called ",
 StyleBox["monotonically decreasing",
  FontSlant->"Italic"],
 " (also ",
 StyleBox["decreasing",
  FontSlant->"Italic"],
 " or ",
 StyleBox["non-increasing",
  FontSlant->"Italic"],
 ") if, whenever x \[LessEqual] y one has f(x) \[GreaterEqual] f(y), so that \
it ",
 StyleBox["reverses",
  FontSlant->"Italic"],
 " the order (see Figure 2)."
}], "MathCaption",
 CellChangeTimes->{{3.90000736566333*^9, 3.9000075494952364`*^9}},
 CellID->720303488,ExpressionUUID->"1cf02fdb-b219-411b-b6f2-4466d0ed356c"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
D4vsGdmxmbvfAQAAYGTsfyZI71n88pzIWR3Y9qPI1U3/GwVnR74d+WrkmMg/
zZ8dxH8/lldHXtb0n0N4VmT/yJ9GHhX5o8j9mv57C3aP7BS5zXrZLPvfxcGV
zRe4rjvMX/O62XP+91g3+8z/VuvmSfO/47p5zvxvvG5eMf/7r5vDm/5zIevm
fZEPVeTopv9dikFz9Ab+6799gY6HLXAtr1zvep85/1s8fv53esj8b7jn/O97
x/nffovs/x8BAMCS2P9MoN57+st+kVOa/M0+Dbkmctl6+VXTf+/BuvlB0/9m
woZy9gL/mo3lFwv82evm2g78PrLxrJ7/96v37+ePIqc1/fOrzzb986v3Nv1z
h945wwub/vs143/+zH3vY9fINsn/UAEAmAX2PxOu7DW/La7owAYSkfbpvWvz
4qZ/f8/Jkc83/Xspes/MPD/yxMj9IztHVmT/kwcAYALZ/0yJ3j3Ic8/U9/6+
8boObBkRGV1679/snRX07knpfZuj93xM7/mMfZv+maD7CQAAbs3+Zwr1/nf/
8rTI/57fCNlbRUTGn0sj/xH5dNP/PsczIn8Q2TT7n1AAAEnsf6bc3LsCevcM
v6rpf0fwqg7sEhHJy42RMyKfbPrvI+i9P3OX7H9SAQCMgf3PjOk9Nzx3HvCC
pv9u9NPn90D2JhGR3Pwm8oXIoZEHN1PxrQwAgFuw/2HufuBy38jzIh+InDq/
BbL3iIjk5frIN5v+dzd79whsn/1PKgCAAdn/sEFz3zbvfe+89w303n3CvfsF
eu8lv7wD20RExptVTf9+od53DPeJLMv+JxQAQCX7H1qZOxu4d+Sxkb9o+t8o
6907cGzkO5GLmv47yrM3i4iMJr+KHBl5UOMsAACYDPY/jMzcuwZ2iuwZeWjk
KU3/O+Z/E/mHyD9Hjmv6zxucGfll494CkUlM77933xy5W/Y/dQAAFmH/QyeV
bSM7R+4R+cPIo5r+Nw2fFTkwclDTfybh75r+/cjvafrPJ3wq8pnIlyNfXSe9
55hPXy+9d6D/fL2cG7lsgdRsoRs28F9jQ7logR5r8+MFep+63rX1ctz8da+b
j8//JuvmnfO/17p53fxvuW5eOP87r5v918t+8/++rJuHNf1nRhbLvSK7V+Q2
G8mOG/jX3XMDf/5DF+jdy77rXd9fzl/3wfO/yRvnf693zf+W/zz/O38x8vX5
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
BrDjfMBXImdFVk191cwr/R8AAKCeF6V6/d/5AErQ/wEAAOq7OjWfATz2fMCx
U90B80L/BwAAqO9XUnv9f+fzATvuDzh4elth4PR/AACA+vaJfC+1PwNwPoC2
6f8AAADNvD911/93zg8iH4wcPZ1tMTD6PwAAQDNPS6N39qcxA9iRa5PzAUxG
/wcAAGju39N0+/+OPJycD2A8+j8AAEBzZ6cy/X/n3JZG9wcc1/FemU36PwAA
QHOHRjan8jOAKtsjX428PXJQh3tmtuj/AAAA7aju7Cvd/fd0PuC1aXRXAfNL
/wcAAGjHB1P5vr9UnA+Yb/o/AABAO16cynf8ceP+gPmj/wMAALRjReS+VL7b
T5IHIxdFXhZZ3v4joUf0fwAAgPb8ayrf6evm9jQ6H3B860+FPtD/AQAA2vOR
VL7Ht5HqfMB5kcPafTwUpP8DAAC0582pfHdvM+4PGA79HwAAoD3PSeU7e1cZ
6vmAtWn0vsNS+XrkqjHzpTSamYybv4pcOGY+lka/B+PkDyNrdspfp6V/f69I
o29CjpM3Rc4cM6+JnDFmXho5ZYIcGzlmzBwROXTMrEoAAABLq/6OfFMq39W7
zPY06sPvjBzSzmMr6h9S+Wcqw0v17sy9Y2ZD5PsT5Ma095nVjnwjjT+7uixN
Nruqvh067uzq/DT+7Gpt2nV2tVSqc0rjzq2qnJXGn11V7z2NO7tanSabXZ2Y
xp9dPTWNP7vaNwEAME3Vz+elu8c0O86O8wEr2nh4BVycyj9HEZFpZ5IZ1aRz
qq5mVJPOqfowo5p0TtXVjGrSOVVXM6r9EwAMy1dT+Z/rSmTH+YATmj/Cqap+
Riz97EREROTx6epdqklmVF2+SzXJjKov71JNMqPq8l2qSWZUk86pfPMKmMRn
Uvk/L0tnx/0BT2r4LKfh86n88xIRERGR2Yvzfv2bUc3Deb+ViT6p/nku/e+i
vuShyGcjr4wsb/JQO/SFVP45iYiIiIiItB3n/erPqMadU13Rg9/nPuaOxef9
vNQv1T9bpZ+NiIiIiIiIyBDTp/MB1cxoSyr/TERERERERESGmuquxFm/P2CH
A9L4Z3aq8z3jngWqzg1Ncs6oOpe0u/NKv5uW/r3457T02ajqHNW4Z66q2c4k
38Zem8Z/B6d6h2Tc93uqd4EmOd9WvQsy7jtJ1TtM477vVL0bNe57VNU7V5O8
o7V9L7+vIiIiIiIifUtfzwcMxcvT0s//j8stjSnp+4xqd6lmg+N+v2eSGdWk
c6q1yYyq7pxqayr/54uIiIiI9DffjLwp0Sb9H+i7rmZUk86puppRdfku1drU
zYxq0jlVVzOqLt+l2pzK/9wjIiIyj6n+nqj6maD6+WhVok36PwA0M8mMqst3
qSaZUXX5LlVXM6ou36WaZEbVl/N+1ffbS/+MLiLSZqp/X1Z/Njwl0RX9HwBg
+Jz3800q36SSPubWNPr/zgmJadD/AQCAaam+7z7JO1NHp/HnUc9N48+iXpzG
n0W9Ik12ru/XI19M5bt1X1Pds/dfkZdEliWmSf8HAABoV/WOR+me3adUd/xV
77BU85GVDZ4rzej/AAAA7fpyKt+5+5DqjEl15ubwZo+Tluj/AAAA7bo5le/e
pVLtfW3k2KYPkdbp/wAAAO16MJXv4dPMPWl05mF1Gw+Pzuj/AAAA7Tkyle/j
08jGyGciv5BG33Wk//R/AACA9vxiKt/Nu8q2NLpfsrpL8+C2HhhTo/8DAAC0
5w9S+Z7edm5MozP9z2rtKVGC/g8AANCef0nl+3obuT1yfuTkdh8PBen/AAAA
7al6c+nuXjf3R/428rLI8rYfDMXp/wAAAO04IZXv8JNma+SqyFmRVe0/EnpE
/wcAAGjHe1P5Pj9uqjP9ayJHdPIk6CP9HwAAoB1XpPK9fqmsj6yLPLurB0Cv
6f8AAADN7R/ZmMp3/MfmvshFkTMiyzrbPbNA/wcAAGjudal819+RTZHPR94Q
Wdnlppkp+j8AAEBzl6byvf/ayHmRwzveK7NJ/wcAAGjmsDT6O/cSnf/myNrI
cV1vkpmn/wMAADRzbppu578ncmFkdXKmn/Hp/wAAAM1U79133fmrbwteHHl1
ZMV0tsXA6P8AAAD1/XzqrvNvi3wjck7kkGltiMHS/wEAAOr7cmq/99+YRmf6
nzW1XTAP9H8AAIB6nh/Zntrp/HdEzo+cMtUdME/0fwAAgHr+MTXr/A9EPp1G
vWz5lNfO/NH/AQAAJndyGp3Pn7Tzb41cFTkrctDUV8080/8BAAAm97U0+Zn+
NZEjSywWkv4PAAAwqTem8Tr/+jQ60//8MsuEXej/AAAA4zsg8sO05w51b+TC
yOrIskJrhN3R/wEAAMb38fT43rQpclkanek/sNzSYEn6PwAAwHh+Ju36zb9r
I+dFnlxyUTAm/R8AAGDvVkW+G7klsi5yXNHVwOT0fwAAgL07LXJq6UVAA/o/
AAAADJ/+DwAAAMOn/wMAAMDw6f8AAAAwfPo/AAAADJ/+DwAAAMOn/wMAAMDw
6f8AAAAwfPo/AAAADJ/+DwAAAMOn/wMAAMDw6f8AAAAwfPo/AAAADJ/+DwAA
AMOn/wMAAMDw6f8AAAAwfPo/AAAADJ/+DwAAAMOn/wMAAMDw6f8AAAAwfPo/
AAAADJ/+DwAAAMN3RORNS+S55ZYGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAADBM/w+e0hGn
    "], {{0, 592.1999999999999}, {614.4, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{120., 120.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{614.4, 592.1999999999999},
  PlotRange->{{0, 614.4}, {0, 592.1999999999999}}]], "Input",
 CellID->88290392,ExpressionUUID->"df2adab5-8706-405c-823d-c7e15a8f5312"]
}, Open  ]],

Cell["Figure 2. A monotonically non-increasing function", "MathCaption",
 CellChangeTimes->{{3.900007561537363*^9, 3.900007562843906*^9}},
 CellID->240683520,ExpressionUUID->"70a5f93c-0c19-49ab-82d2-39508ec8e9b3"],

Cell[TextData[{
 "If the order \[LessEqual] in the definition is replaced by the strict order \
<, one obtains a stronger requirement. A function with this property is \
called ",
 StyleBox["strictly increasing",
  FontSlant->"Italic"],
 " (also ",
 StyleBox["increasing",
  FontSlant->"Italic"],
 "). Again, by inverting the order symbol, one finds a corresponding property \
called ",
 StyleBox["strictly decreasing",
  FontSlant->"Italic"],
 " (also ",
 StyleBox["decreasing",
  FontSlant->"Italic"],
 "). A function with either property is called ",
 StyleBox["strictly monotone",
  FontSlant->"Italic"],
 ". Functions that are strictly monotone are one-to-one (because for x not \
equal to y, either x<y or x>y and so, by monotonicity, either, either ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"f", 
    RowBox[{"(", "x", ")"}]}], "<", 
   RowBox[{"f", 
    RowBox[{"(", "y", ")"}]}]}]], "InlineFormula",
  FormatType->StandardForm,ExpressionUUID->
  "516cdc12-a66c-4869-ad5f-58f493387301"],
 " or ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"f", 
    RowBox[{"(", "x", ")"}]}], ">", 
   RowBox[{"f", 
    RowBox[{"(", "y", ")"}]}]}]], "InlineFormula",
  FormatType->StandardForm,ExpressionUUID->
  "188bf9f1-9911-405d-bce8-850a2354ea4e"],
 ", thus ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"f", 
    RowBox[{"(", "x", ")"}]}], "\[NotEqual]", 
   RowBox[{"f", 
    RowBox[{"(", "y", ")"}]}]}]], "InlineFormula",
  FormatType->StandardForm,ExpressionUUID->
  "015a8e2e-d43a-475b-ac50-ccc198131823"],
 ". "
}], "MathCaption",
 CellChangeTimes->{{3.900007569982814*^9, 3.9000078056970544`*^9}},
 CellID->193883768,ExpressionUUID->"0cfe9418-f82c-4af1-a015-2a3c3f6bfc04"],

Cell[TextData[{
 "To avoid ambiguity, the terms ",
 StyleBox["weakly monotone",
  FontSlant->"Italic"],
 ", ",
 StyleBox["weakly increasing",
  FontSlant->"Italic"],
 ", and ",
 StyleBox["weakly decreasing",
  FontSlant->"Italic"],
 " are often used to refer to non-strict monotonicity."
}], "MathCaption",
 CellChangeTimes->{{3.9000078087076235`*^9, 3.900007848293977*^9}, {
  3.9000079018142967`*^9, 3.9000079136984944`*^9}},
 CellID->779314723,ExpressionUUID->"4d62e537-4458-4b88-9eb6-6d0963ec216c"],

Cell["\<\
The terms \"non-decreasing\" and \"non-increasing\" should not be confused \
with the (much weaker) negative qualifications \"not decreasing\" and \"not \
increasing\". For example, the non-monotonic function shown in figure 3 first \
falls, then rises, then falls again. It is therefore not decreasing and not \
increasing, but it is neither non-decreasing nor non-increasing.\
\>", "Text",
 CellChangeTimes->{3.9000098814724193`*^9},
 CellID->120972958,ExpressionUUID->"77b15de0-9b75-4a13-83b9-57be9bd54555"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
6bpVnWOqydeu6uueJl27OqwqW7t6SDX52tWe1eRrV1tWAADMU/3v8+juMc+O
s/b+gC3aePECnFnFv44iIvNOyRpV6TrVrNaoStepurBGVbpONas1qtJ1qlmt
Ud2jAoBhuaCK/3ddRNbeH3DA9C/hXNX/Rox+7UREROTumdW1VCVrVLO8lqpk
jaor11KVrFHN8lqqkjWq0nUqe14BJc6o4r8vo7P2+QG7TvlazsNZVfzrJSIi
IiL9i/v9urdGtQj3+21V0SX1+zn6XNSV3JLzf3Ien7Nkmhd1hv6xin+dRERE
RERE2o77/ZqvUU26TnVuB/7OXcwVa17vg6puqd9b0a+NiIiIiIiIyBDTpfsD
6jWjFVX8ayIiIiIiIiIy1NTPSuz78wPW2qaa/J6d+v6eSe8Fqu8bKrnPqL4v
aX33K72i2vjf4uxq4/dG1fdRTXrPVb22U7I39rJq8mtw6mtIJr2+p74WqOT+
tvpakEmvSaqvYZr0eqf62qhJr6Oqr7kquUZr9Sb+riIiIiIiIl1LV+8PGIrH
Vht//f80bjTmpOtrVOtLvTY46f49JWtUpetUyyprVE3XqVZW8d8vIiIiItLd
fCHn6Io26f9A181qjap0nWpWa1SzvJZqWTWbNarSdapZrVHN8lqqO6r4f/eI
iIgsYurfiep/E9T/Plpa0Sb9HwCmU7JGNctrqUrWqGZ5LdWs1qhmeS1VyRpV
V+73q/dvj/43uohIm6nPl/V3w24Vs6L/AwAMn/v97EllTyrpYn5QjT87B1TM
g/4PAADMS72/e8k1U/tWk69HHVhNvhb18GrytajHVWX39T0/52NVfLfuaurn
7P17ziNyNquYJ/0fAACgXfU1HtE9u0upn/FXX8NSr49sNcXrynT0fwAAgHZ9
sorv3F1IfY9Jfc/NPad7OWmJ/g8AANCub1Xx3Tsq9bEvy7nftC8irdP/AQAA
2nVTFd/D55nrqvE9D4e18eIxM/o/AABAe/ao4vv4PHJzzhk5v16N93Wk+/R/
AACA9jypiu/ms8qqavx8yfpZmtu39YIxN/o/AABAe15bxff0tnNxNb6nf5/W
XiUi6P8AAADt+UgV39fbyPKcE3N+sd2Xh0D6PwAAQHvq3hzd3ZvmpznvynlM
zpK2XxjC6f8AAADtOKCK7/ClWZlzfs4xOUvbf0noEP0fAACgHf+jiu/zk6a+
p//4nN1n8krQRfo/AABAO86t4nv9xnJ5zgk5D5jVC0Cn6f8AAADTu0fOzVV8
x79rrs85PeeInM1mdvT0gf4PAAAwvadU8V1/bW7LOSvnyJytZnnQ9Ir+DwAA
ML0PVfG9/6Kc43LuOeNjpZ/0fwAAgOnsUo1/c4/o/N/KWZaz/6wPkt7T/wEA
AKbz0mq+nf+6nFNyDqvc08/k9H8AAIDp1Nfdz7rz13sLnpnzxJwt5nNYDIz+
DwAA0Nzh1ew6/6qcC3NelLPDvA6IwdL/AQAAmvtk1X7vv7ga39O/z9yOgkWg
/wMAADRzcM7qqp3Of0XOiTmHzPUIWCT6PwAAQDPvrabr/Dfm/H017mVL5jw7
i0f/BwAAKPeL1fj+/NLOvzLn/Jxjcrab+9QsMv0fAACg3Ger8nv6j8/ZI2JY
qPR/AACAUs+qJuv8l1fje/oPjhkT7kT/BwAAmNw2OZdVG+5QP8k5JeewnM2C
ZoT10f8BAAAm95fV3XvTbTnnVON7+reNGw02Sv8HAACYzCOrO+/5d1HOcTn3
ihwKJqT/AwAAbNrSnO/kfD/nhJz9Q6eBcvo/AADAph2a87DoIWAK+j8AAAAM
n/4PAAAAw6f/AwAAwPDp/wAAADB8+j8AAAAMn/4PAAAAw6f/AwAAwPDp/wAA
ADB8+j8AAAAMn/4PAAAAw6f/AwAAwPDp/wAAADB8+j8AAAAMn/4PAAAAw6f/
AwAAwPDp/wAAADB8+j8AAAAMn/4PAAAAw6f/AwAAwPDp/wAAADB8+j8AAAAM
n/4PAAAAw7d7ztEbyYFxowEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAADNP/B6prnvc=
    "], {{0, 592.1999999999999}, {614.4, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{120., 120.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{614.4, 592.1999999999999},
  PlotRange->{{0, 614.4}, {0, 592.1999999999999}}]], "Text",
 CellChangeTimes->{3.9000098952864676`*^9},
 CellID->383428980,ExpressionUUID->"ad5908cb-a38d-4094-a56e-6155fda3fcf6"],

Cell[TextData[{
 "Figure 3: A function that is ",
 StyleBox["not",
  FontSlant->"Italic"],
 " monotonic"
}], "MathCaption",
 CellChangeTimes->{{3.9000072952373743`*^9, 3.900007318840498*^9}},
 CellID->251669683,ExpressionUUID->"1ec80ab6-a90a-4130-b6b3-4bc792e4f2c2"],

Cell[CellGroupData[{

Cell["Here are some useful functions for this.", "MathCaption",
 CellChangeTimes->{{3.9000099090199924`*^9, 3.900009915586269*^9}},
 CellID->1161597,ExpressionUUID->"1f5f8b76-371f-4d8c-acc4-2f742652d382"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", "FunctionInjective", "]"}]], "Input",
 CellChangeTimes->{{3.9000079143666954`*^9, 3.9000079331484294`*^9}},
 CellLabel->"In[83]:=",
 CellID->15581493,ExpressionUUID->"293bb6cb-485b-4b42-96da-d891ec626e32"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/FunctionInjective",
              ButtonNote->"paclet:ref/FunctionInjective"],
             "\"paclet:ref/FunctionInjective\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FunctionInjective\\\", \\\"[\\\
\", RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"x\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) tests whether \
\\!\\(\\*RowBox[{RowBox[{\\\"f\\\", \\\"(\\\", \\\"x\\\", \\\")\\\"}], \\\"\
\[LongEqual]\\\", \\\"y\\\"}]\\) has at most one solution \
\\!\\(\\*RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\"\[Element]\\\", \
\\\"Reals\\\"}]\\) for each \\!\\(\\*StyleBox[\\\"y\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"FunctionInjective\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"x\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"dom\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
tests whether \\!\\(\\*RowBox[{RowBox[{\\\"f\\\", \\\"(\\\", \\\"x\\\", \\\")\
\\\"}], \\\"\[LongEqual]\\\", \\\"y\\\"}]\\) has at most one solution \
\\!\\(\\*RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\"\[Element]\\\", \
StyleBox[\\\"dom\\\", \\\"TI\\\"]}]\\). \
\\n\\!\\(\\*RowBox[{\\\"FunctionInjective\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", StyleBox[\\\"dom\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests \
whether \\!\\(\\*RowBox[{RowBox[{RowBox[{SubscriptBox[\\\"f\\\", \\\"1\\\"], \
\\\"(\\\", RowBox[{SubscriptBox[\\\"x\\\", \\\"1\\\"], \\\",\\\", \
SubscriptBox[\\\"x\\\", \\\"2\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\")\\\"}], \\\"\[LongEqual]\\\", SubscriptBox[\\\"y\\\", \
\\\"1\\\"]}], \\\",\\\", RowBox[{RowBox[{SubscriptBox[\\\"f\\\", \\\"2\\\"], \
\\\"(\\\", RowBox[{SubscriptBox[\\\"x\\\", \\\"1\\\"], \\\",\\\", \
SubscriptBox[\\\"x\\\", \\\"2\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\")\\\"}], \\\"\[LongEqual]\\\", SubscriptBox[\\\"y\\\", \
\\\"2\\\"]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}]\\) has \
at most one solution \\!\\(\\*RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\
\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", RowBox[{\\\"\[Ellipsis]\\\", \\\"\[Element]\\\", \
StyleBox[\\\"dom\\\", \
\\\"TI\\\"]}]}]\\).\\n\\!\\(\\*RowBox[{\\\"FunctionInjective\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"funs\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"xcons\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"ycons\
\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"xvars\\\", \\\"TI\\\
\"], \\\",\\\", StyleBox[\\\"yvars\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"dom\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests whether \
\\!\\(\\*RowBox[{RowBox[{StyleBox[\\\"funs\\\", \\\"TI\\\"], \\\"(\\\", \
StyleBox[\\\"xvars\\\", \\\"TI\\\"], \\\")\\\"}], \\\"\[LongEqual]\\\", \
StyleBox[\\\"yvars\\\", \\\"TI\\\"]}]\\) has at most one solution with \\!\\(\
\\*RowBox[{StyleBox[\\\"xvars\\\", \\\"TI\\\"], \\\"\[Element]\\\", StyleBox[\
\\\"dom\\\", \\\"TI\\\"]}]\\) restricted by the constraints \
\\!\\(\\*StyleBox[\\\"xcons\\\", \\\"TI\\\"]\\) for each \
\\!\\(\\*RowBox[{StyleBox[\\\"yvars\\\", \\\"TI\\\"], \\\"\[Element]\\\", \
StyleBox[\\\"dom\\\", \\\"TI\\\"]}]\\) restricted by the constraints \
\\!\\(\\*StyleBox[\\\"ycons\\\", \\\"TI\\\"]\\). \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/FunctionInjective", 
                    "paclet:ref/FunctionInjective", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
FunctionInjective.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
FunctionInjective.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Assumptions", "\[RuleDelayed]", "$Assumptions"}],
                     ",", 
                    RowBox[{"GenerateConditions", "\[Rule]", "True"}], ",", 
                    RowBox[{
                    "PerformanceGoal", "\[RuleDelayed]", 
                    "$PerformanceGoal"}]}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`FunctionInjective\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/FunctionInjective",
              ButtonNote->"paclet:ref/FunctionInjective"],
             "\"paclet:ref/FunctionInjective\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FunctionInjective\\\", \\\"[\\\
\", RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"x\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) tests whether \
\\!\\(\\*RowBox[{RowBox[{\\\"f\\\", \\\"(\\\", \\\"x\\\", \\\")\\\"}], \\\"\
\[LongEqual]\\\", \\\"y\\\"}]\\) has at most one solution \
\\!\\(\\*RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\"\[Element]\\\", \
\\\"Reals\\\"}]\\) for each \\!\\(\\*StyleBox[\\\"y\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"FunctionInjective\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"x\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"dom\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
tests whether \\!\\(\\*RowBox[{RowBox[{\\\"f\\\", \\\"(\\\", \\\"x\\\", \\\")\
\\\"}], \\\"\[LongEqual]\\\", \\\"y\\\"}]\\) has at most one solution \
\\!\\(\\*RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\"\[Element]\\\", \
StyleBox[\\\"dom\\\", \\\"TI\\\"]}]\\). \
\\n\\!\\(\\*RowBox[{\\\"FunctionInjective\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", StyleBox[\\\"dom\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests \
whether \\!\\(\\*RowBox[{RowBox[{RowBox[{SubscriptBox[\\\"f\\\", \\\"1\\\"], \
\\\"(\\\", RowBox[{SubscriptBox[\\\"x\\\", \\\"1\\\"], \\\",\\\", \
SubscriptBox[\\\"x\\\", \\\"2\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\")\\\"}], \\\"\[LongEqual]\\\", SubscriptBox[\\\"y\\\", \
\\\"1\\\"]}], \\\",\\\", RowBox[{RowBox[{SubscriptBox[\\\"f\\\", \\\"2\\\"], \
\\\"(\\\", RowBox[{SubscriptBox[\\\"x\\\", \\\"1\\\"], \\\",\\\", \
SubscriptBox[\\\"x\\\", \\\"2\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\")\\\"}], \\\"\[LongEqual]\\\", SubscriptBox[\\\"y\\\", \
\\\"2\\\"]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}]\\) has \
at most one solution \\!\\(\\*RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\
\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", RowBox[{\\\"\[Ellipsis]\\\", \\\"\[Element]\\\", \
StyleBox[\\\"dom\\\", \
\\\"TI\\\"]}]}]\\).\\n\\!\\(\\*RowBox[{\\\"FunctionInjective\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"funs\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"xcons\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"ycons\
\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"xvars\\\", \\\"TI\\\
\"], \\\",\\\", StyleBox[\\\"yvars\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"dom\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests whether \
\\!\\(\\*RowBox[{RowBox[{StyleBox[\\\"funs\\\", \\\"TI\\\"], \\\"(\\\", \
StyleBox[\\\"xvars\\\", \\\"TI\\\"], \\\")\\\"}], \\\"\[LongEqual]\\\", \
StyleBox[\\\"yvars\\\", \\\"TI\\\"]}]\\) has at most one solution with \\!\\(\
\\*RowBox[{StyleBox[\\\"xvars\\\", \\\"TI\\\"], \\\"\[Element]\\\", StyleBox[\
\\\"dom\\\", \\\"TI\\\"]}]\\) restricted by the constraints \
\\!\\(\\*StyleBox[\\\"xcons\\\", \\\"TI\\\"]\\) for each \
\\!\\(\\*RowBox[{StyleBox[\\\"yvars\\\", \\\"TI\\\"], \\\"\[Element]\\\", \
StyleBox[\\\"dom\\\", \\\"TI\\\"]}]\\) restricted by the constraints \
\\!\\(\\*StyleBox[\\\"ycons\\\", \\\"TI\\\"]\\). \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"FunctionInjective\", \"[\", RowBox[{StyleBox[\"f\", \"TI\
\"], \",\", StyleBox[\"x\", \"TI\"]}], \"]\"}]\) tests whether \
\!\(\*RowBox[{RowBox[{\"f\", \"(\", \"x\", \")\"}], \"\[LongEqual]\", \"y\"}]\
\) has at most one solution \!\(\*RowBox[{StyleBox[\"x\", \"TI\"], \"\
\[Element]\", \"Reals\"}]\) for each \!\(\*StyleBox[\"y\", \"TI\"]\).\n\
\!\(\*RowBox[{\"FunctionInjective\", \"[\", RowBox[{StyleBox[\"f\", \"TI\"], \
\",\", StyleBox[\"x\", \"TI\"], \",\", StyleBox[\"dom\", \"TI\"]}], \"]\"}]\) \
tests whether \!\(\*RowBox[{RowBox[{\"f\", \"(\", \"x\", \")\"}], \"\
\[LongEqual]\", \"y\"}]\) has at most one solution \!\(\*RowBox[{StyleBox[\"x\
\", \"TI\"], \"\[Element]\", StyleBox[\"dom\", \"TI\"]}]\). \n\
\!\(\*RowBox[{\"FunctionInjective\", \"[\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", StyleBox[\"dom\", \
\"TI\"]}], \"]\"}]\) tests whether \
\!\(\*RowBox[{RowBox[{RowBox[{SubscriptBox[\"f\", \"1\"], \"(\", \
RowBox[{SubscriptBox[\"x\", \"1\"], \",\", SubscriptBox[\"x\", \"2\"], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \")\"}], \"\[LongEqual]\", SubscriptBox[\
\"y\", \"1\"]}], \",\", RowBox[{RowBox[{SubscriptBox[\"f\", \"2\"], \"(\", \
RowBox[{SubscriptBox[\"x\", \"1\"], \",\", SubscriptBox[\"x\", \"2\"], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \")\"}], \"\[LongEqual]\", SubscriptBox[\
\"y\", \"2\"]}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}]\) has at most one \
solution \!\(\*RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"1\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", RowBox[{\"\[Ellipsis]\", \"\[Element]\", StyleBox[\"dom\", \
\"TI\"]}]}]\).\n\!\(\*RowBox[{\"FunctionInjective\", \"[\", \
RowBox[{RowBox[{\"{\", RowBox[{StyleBox[\"funs\", \"TI\"], \",\", \
StyleBox[\"xcons\", \"TI\"], \",\", StyleBox[\"ycons\", \"TI\"]}], \"}\"}], \
\",\", StyleBox[\"xvars\", \"TI\"], \",\", StyleBox[\"yvars\", \"TI\"], \
\",\", StyleBox[\"dom\", \"TI\"]}], \"]\"}]\) tests whether \
\!\(\*RowBox[{RowBox[{StyleBox[\"funs\", \"TI\"], \"(\", StyleBox[\"xvars\", \
\"TI\"], \")\"}], \"\[LongEqual]\", StyleBox[\"yvars\", \"TI\"]}]\) has at \
most one solution with \!\(\*RowBox[{StyleBox[\"xvars\", \"TI\"], \
\"\[Element]\", StyleBox[\"dom\", \"TI\"]}]\) restricted by the constraints \
\!\(\*StyleBox[\"xcons\", \"TI\"]\) for each \
\!\(\*RowBox[{StyleBox[\"yvars\", \"TI\"], \"\[Element]\", StyleBox[\"dom\", \
\"TI\"]}]\) restricted by the constraints \!\(\*StyleBox[\"ycons\", \
\"TI\"]\). ", 
    "Documentation" -> <|
     "Local" -> "paclet:ref/FunctionInjective", "Web" -> 
      "http://reference.wolfram.com/language/ref/FunctionInjective.html"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, 
    "Options" -> {
     Assumptions :> $Assumptions, GenerateConditions -> True, 
      PerformanceGoal :> $PerformanceGoal}, "Attributes" -> {Protected}, 
    "FullName" -> "System`FunctionInjective"|>, True]]], "Output",
 CellChangeTimes->{{3.9000079246509686`*^9, 3.900007933508765*^9}},
 CellLabel->"Out[83]=",
 CellID->188732912,ExpressionUUID->"1fa5a313-6967-4b00-830f-5ac892a4484c"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", "FunctionSurjective", "]"}]], "Input",
 CellChangeTimes->{{3.9000079143666954`*^9, 3.9000079396699*^9}},
 CellLabel->"In[84]:=",
 CellID->57991860,ExpressionUUID->"e8bf0af1-debf-4520-b26b-2eb6885ac7a5"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/FunctionSurjective",
              ButtonNote->"paclet:ref/FunctionSurjective"],
             "\"paclet:ref/FunctionSurjective\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FunctionSurjective\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"x\
\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests whether \\!\\(\\*RowBox[{RowBox[{\\\
\"f\\\", \\\"(\\\", \\\"x\\\", \\\")\\\"}], \\\"\[LongEqual]\\\", \\\"y\\\"}]\
\\) has at least one solution \\!\\(\\*RowBox[{\\\"x\\\", \\\"\[Element]\\\", \
StyleBox[\\\"\[DoubleStruckCapitalR]\\\", ShowSyntaxStyles -> False, \
FontFamily -> \\\"Times\\\"]}]\\) for each \
\\!\\(\\*RowBox[{StyleBox[\\\"y\\\", \\\"TI\\\"], \\\"\[Element]\\\", \
\\\"Reals\\\"}]\\).\\n\\!\\(\\*RowBox[{\\\"FunctionSurjective\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"x\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"dom\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
tests whether \\!\\(\\*RowBox[{RowBox[{\\\"f\\\", \\\"(\\\", \\\"x\\\", \\\")\
\\\"}], \\\"\[LongEqual]\\\", \\\"y\\\"}]\\) has at least one solution \\!\\(\
\\*RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\"\[Element]\\\", \
StyleBox[\\\"dom\\\", \\\"TI\\\"]}]\\) for each \
\\!\\(\\*RowBox[{StyleBox[\\\"y\\\", \\\"TI\\\"], \\\"\[Element]\\\", \
StyleBox[\\\"dom\\\", \
\\\"TI\\\"]}]\\).\\n\\!\\(\\*RowBox[{\\\"FunctionSurjective\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", StyleBox[\\\"dom\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests \
whether \\!\\(\\*RowBox[{RowBox[{RowBox[{SubscriptBox[\\\"f\\\", \\\"1\\\"], \
\\\"(\\\", RowBox[{SubscriptBox[\\\"x\\\", \\\"1\\\"], \\\",\\\", \
SubscriptBox[\\\"x\\\", \\\"2\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\")\\\"}], \\\"\[LongEqual]\\\", SubscriptBox[\\\"y\\\", \
\\\"1\\\"]}], \\\",\\\", RowBox[{RowBox[{SubscriptBox[\\\"f\\\", \\\"2\\\"], \
\\\"(\\\", RowBox[{SubscriptBox[\\\"x\\\", \\\"1\\\"], \\\",\\\", \
SubscriptBox[\\\"x\\\", \\\"2\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\")\\\"}], \\\"\[LongEqual]\\\", SubscriptBox[\\\"y\\\", \
\\\"2\\\"]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}]\\) has \
at least one solution \\!\\(\\*RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", RowBox[{\\\"\[Ellipsis]\\\", \\\"\[Element]\\\", \
StyleBox[\\\"dom\\\", \\\"TI\\\"]}]}]\\) for each \
\\!\\(\\*RowBox[{SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"1\
\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", RowBox[{StyleBox[\\\"\[Ellipsis]\
\\\", \\\"TR\\\"], \\\"\[Element]\\\", StyleBox[\\\"dom\\\", \
\\\"TI\\\"]}]}]\\).\\n\\!\\(\\*RowBox[{\\\"FunctionSurjective\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"funs\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"xcons\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"ycons\
\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"xvars\\\", \\\"TI\\\
\"], \\\",\\\", StyleBox[\\\"yvars\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"dom\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests whether \
\\!\\(\\*RowBox[{RowBox[{StyleBox[\\\"funs\\\", \\\"TI\\\"], \\\"(\\\", \
StyleBox[\\\"xvars\\\", \\\"TI\\\"], \\\")\\\"}], \\\"\[LongEqual]\\\", \
StyleBox[\\\"yvars\\\", \\\"TI\\\"]}]\\) has at least one solution with \
\\!\\(\\*RowBox[{StyleBox[\\\"xvars\\\", \\\"TI\\\"], \\\"\[Element]\\\", \
StyleBox[\\\"dom\\\", \\\"TI\\\"]}]\\) restricted by the constraints \
\\!\\(\\*StyleBox[\\\"xcons\\\", \\\"TI\\\"]\\) for each \
\\!\\(\\*RowBox[{StyleBox[\\\"yvars\\\", \\\"TI\\\"], \\\"\[Element]\\\", \
StyleBox[\\\"dom\\\", \\\"TI\\\"]}]\\) restricted by the constraints \
\\!\\(\\*StyleBox[\\\"ycons\\\", \\\"TI\\\"]\\). \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/FunctionSurjective", 
                    "paclet:ref/FunctionSurjective", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
FunctionSurjective.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
FunctionSurjective.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Assumptions", "\[RuleDelayed]", "$Assumptions"}],
                     ",", 
                    RowBox[{"GenerateConditions", "\[Rule]", "True"}], ",", 
                    RowBox[{
                    "PerformanceGoal", "\[RuleDelayed]", 
                    "$PerformanceGoal"}]}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`FunctionSurjective\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/FunctionSurjective",
              ButtonNote->"paclet:ref/FunctionSurjective"],
             "\"paclet:ref/FunctionSurjective\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FunctionSurjective\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"x\
\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests whether \\!\\(\\*RowBox[{RowBox[{\\\
\"f\\\", \\\"(\\\", \\\"x\\\", \\\")\\\"}], \\\"\[LongEqual]\\\", \\\"y\\\"}]\
\\) has at least one solution \\!\\(\\*RowBox[{\\\"x\\\", \\\"\[Element]\\\", \
StyleBox[\\\"\[DoubleStruckCapitalR]\\\", ShowSyntaxStyles -> False, \
FontFamily -> \\\"Times\\\"]}]\\) for each \
\\!\\(\\*RowBox[{StyleBox[\\\"y\\\", \\\"TI\\\"], \\\"\[Element]\\\", \
\\\"Reals\\\"}]\\).\\n\\!\\(\\*RowBox[{\\\"FunctionSurjective\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"x\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"dom\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
tests whether \\!\\(\\*RowBox[{RowBox[{\\\"f\\\", \\\"(\\\", \\\"x\\\", \\\")\
\\\"}], \\\"\[LongEqual]\\\", \\\"y\\\"}]\\) has at least one solution \\!\\(\
\\*RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\"\[Element]\\\", \
StyleBox[\\\"dom\\\", \\\"TI\\\"]}]\\) for each \
\\!\\(\\*RowBox[{StyleBox[\\\"y\\\", \\\"TI\\\"], \\\"\[Element]\\\", \
StyleBox[\\\"dom\\\", \
\\\"TI\\\"]}]\\).\\n\\!\\(\\*RowBox[{\\\"FunctionSurjective\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", StyleBox[\\\"dom\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests \
whether \\!\\(\\*RowBox[{RowBox[{RowBox[{SubscriptBox[\\\"f\\\", \\\"1\\\"], \
\\\"(\\\", RowBox[{SubscriptBox[\\\"x\\\", \\\"1\\\"], \\\",\\\", \
SubscriptBox[\\\"x\\\", \\\"2\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\")\\\"}], \\\"\[LongEqual]\\\", SubscriptBox[\\\"y\\\", \
\\\"1\\\"]}], \\\",\\\", RowBox[{RowBox[{SubscriptBox[\\\"f\\\", \\\"2\\\"], \
\\\"(\\\", RowBox[{SubscriptBox[\\\"x\\\", \\\"1\\\"], \\\",\\\", \
SubscriptBox[\\\"x\\\", \\\"2\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\")\\\"}], \\\"\[LongEqual]\\\", SubscriptBox[\\\"y\\\", \
\\\"2\\\"]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}]\\) has \
at least one solution \\!\\(\\*RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", RowBox[{\\\"\[Ellipsis]\\\", \\\"\[Element]\\\", \
StyleBox[\\\"dom\\\", \\\"TI\\\"]}]}]\\) for each \
\\!\\(\\*RowBox[{SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"1\
\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", RowBox[{StyleBox[\\\"\[Ellipsis]\
\\\", \\\"TR\\\"], \\\"\[Element]\\\", StyleBox[\\\"dom\\\", \
\\\"TI\\\"]}]}]\\).\\n\\!\\(\\*RowBox[{\\\"FunctionSurjective\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"funs\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"xcons\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"ycons\
\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"xvars\\\", \\\"TI\\\
\"], \\\",\\\", StyleBox[\\\"yvars\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"dom\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests whether \
\\!\\(\\*RowBox[{RowBox[{StyleBox[\\\"funs\\\", \\\"TI\\\"], \\\"(\\\", \
StyleBox[\\\"xvars\\\", \\\"TI\\\"], \\\")\\\"}], \\\"\[LongEqual]\\\", \
StyleBox[\\\"yvars\\\", \\\"TI\\\"]}]\\) has at least one solution with \
\\!\\(\\*RowBox[{StyleBox[\\\"xvars\\\", \\\"TI\\\"], \\\"\[Element]\\\", \
StyleBox[\\\"dom\\\", \\\"TI\\\"]}]\\) restricted by the constraints \
\\!\\(\\*StyleBox[\\\"xcons\\\", \\\"TI\\\"]\\) for each \
\\!\\(\\*RowBox[{StyleBox[\\\"yvars\\\", \\\"TI\\\"], \\\"\[Element]\\\", \
StyleBox[\\\"dom\\\", \\\"TI\\\"]}]\\) restricted by the constraints \
\\!\\(\\*StyleBox[\\\"ycons\\\", \\\"TI\\\"]\\). \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"FunctionSurjective\", \"[\", RowBox[{StyleBox[\"f\", \
\"TI\"], \",\", StyleBox[\"x\", \"TI\"]}], \"]\"}]\) tests whether \
\!\(\*RowBox[{RowBox[{\"f\", \"(\", \"x\", \")\"}], \"\[LongEqual]\", \"y\"}]\
\) has at least one solution \!\(\*RowBox[{\"x\", \"\[Element]\", StyleBox[\"\
\[DoubleStruckCapitalR]\", ShowSyntaxStyles -> False, FontFamily -> \
\"Times\"]}]\) for each \!\(\*RowBox[{StyleBox[\"y\", \"TI\"], \
\"\[Element]\", \"Reals\"}]\).\n\!\(\*RowBox[{\"FunctionSurjective\", \"[\", \
RowBox[{StyleBox[\"f\", \"TI\"], \",\", StyleBox[\"x\", \"TI\"], \",\", \
StyleBox[\"dom\", \"TI\"]}], \"]\"}]\) tests whether \
\!\(\*RowBox[{RowBox[{\"f\", \"(\", \"x\", \")\"}], \"\[LongEqual]\", \"y\"}]\
\) has at least one solution \!\(\*RowBox[{StyleBox[\"x\", \"TI\"], \"\
\[Element]\", StyleBox[\"dom\", \"TI\"]}]\) for each \
\!\(\*RowBox[{StyleBox[\"y\", \"TI\"], \"\[Element]\", StyleBox[\"dom\", \"TI\
\"]}]\).\n\!\(\*RowBox[{\"FunctionSurjective\", \"[\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", StyleBox[\"dom\", \
\"TI\"]}], \"]\"}]\) tests whether \
\!\(\*RowBox[{RowBox[{RowBox[{SubscriptBox[\"f\", \"1\"], \"(\", \
RowBox[{SubscriptBox[\"x\", \"1\"], \",\", SubscriptBox[\"x\", \"2\"], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \")\"}], \"\[LongEqual]\", SubscriptBox[\
\"y\", \"1\"]}], \",\", RowBox[{RowBox[{SubscriptBox[\"f\", \"2\"], \"(\", \
RowBox[{SubscriptBox[\"x\", \"1\"], \",\", SubscriptBox[\"x\", \"2\"], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \")\"}], \"\[LongEqual]\", SubscriptBox[\
\"y\", \"2\"]}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}]\) has at least \
one solution \!\(\*RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"1\
\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", RowBox[{\"\[Ellipsis]\", \"\[Element]\", StyleBox[\"dom\", \
\"TI\"]}]}]\) for each \!\(\*RowBox[{SubscriptBox[StyleBox[\"y\", \"TI\"], \
StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"y\", \"TI\"], \
StyleBox[\"2\", \"TR\"]], \",\", RowBox[{StyleBox[\"\[Ellipsis]\", \"TR\"], \
\"\[Element]\", StyleBox[\"dom\", \"TI\"]}]}]\).\n\
\!\(\*RowBox[{\"FunctionSurjective\", \"[\", RowBox[{RowBox[{\"{\", \
RowBox[{StyleBox[\"funs\", \"TI\"], \",\", StyleBox[\"xcons\", \"TI\"], \
\",\", StyleBox[\"ycons\", \"TI\"]}], \"}\"}], \",\", StyleBox[\"xvars\", \
\"TI\"], \",\", StyleBox[\"yvars\", \"TI\"], \",\", StyleBox[\"dom\", \
\"TI\"]}], \"]\"}]\) tests whether \!\(\*RowBox[{RowBox[{StyleBox[\"funs\", \
\"TI\"], \"(\", StyleBox[\"xvars\", \"TI\"], \")\"}], \"\[LongEqual]\", \
StyleBox[\"yvars\", \"TI\"]}]\) has at least one solution with \
\!\(\*RowBox[{StyleBox[\"xvars\", \"TI\"], \"\[Element]\", StyleBox[\"dom\", \
\"TI\"]}]\) restricted by the constraints \!\(\*StyleBox[\"xcons\", \"TI\"]\) \
for each \!\(\*RowBox[{StyleBox[\"yvars\", \"TI\"], \"\[Element]\", StyleBox[\
\"dom\", \"TI\"]}]\) restricted by the constraints \!\(\*StyleBox[\"ycons\", \
\"TI\"]\). ", 
    "Documentation" -> <|
     "Local" -> "paclet:ref/FunctionSurjective", "Web" -> 
      "http://reference.wolfram.com/language/ref/FunctionSurjective.html"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, 
    "Options" -> {
     Assumptions :> $Assumptions, GenerateConditions -> True, 
      PerformanceGoal :> $PerformanceGoal}, "Attributes" -> {Protected}, 
    "FullName" -> "System`FunctionSurjective"|>, True]]], "Output",
 CellChangeTimes->{3.900007939999466*^9},
 CellLabel->"Out[84]=",
 CellID->347565205,ExpressionUUID->"01250af1-b485-4f93-a6c2-f314929cd9aa"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", "FunctionMonotonicity", "]"}]], "Input",
 CellChangeTimes->{{3.9000079422436543`*^9, 3.900007949081543*^9}},
 CellLabel->"In[85]:=",
 CellID->186399249,ExpressionUUID->"7e179bed-558d-4b88-b2df-33b3e0d9a299"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/FunctionMonotonicity",
              ButtonNote->"paclet:ref/FunctionMonotonicity"],
             "\"paclet:ref/FunctionMonotonicity\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FunctionMonotonicity\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"x\
\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) finds the monotonicity of the function \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) with the variable \
\\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) over the \
reals.\\n\\!\\(\\*RowBox[{\\\"FunctionMonotonicity\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"x\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"dom\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
finds the monotonicity of \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) when \
\\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) is restricted to the domain \
\\!\\(\\*StyleBox[\\\"dom\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"FunctionMonotonicity\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"cons\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\",\\\", \
StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"dom\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives the monotonicity of \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) when \\!\\(\\*StyleBox[\\\"x\\\", \
\\\"TI\\\"]\\) is restricted by the constraints \
\\!\\(\\*StyleBox[\\\"cons\\\", \\\"TI\\\"]\\). \"\>", "InformationUsageText",
             
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/FunctionMonotonicity", 
                    "paclet:ref/FunctionMonotonicity", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
FunctionMonotonicity.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
FunctionMonotonicity.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"Assumptions", "\[RuleDelayed]", "$Assumptions"}]},
                    {
                    RowBox[{"GenerateConditions", "\[Rule]", "True"}]},
                    {
                    RowBox[{
                    "PerformanceGoal", "\[RuleDelayed]", "$PerformanceGoal"}]},
                    {
                    RowBox[{"StrictInequalities", "\[Rule]", "False"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "4", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"Assumptions", "\[RuleDelayed]", "$Assumptions"}],
                     "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "4", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`FunctionMonotonicity\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/FunctionMonotonicity",
              ButtonNote->"paclet:ref/FunctionMonotonicity"],
             "\"paclet:ref/FunctionMonotonicity\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FunctionMonotonicity\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"x\
\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) finds the monotonicity of the function \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) with the variable \
\\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) over the \
reals.\\n\\!\\(\\*RowBox[{\\\"FunctionMonotonicity\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"x\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"dom\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
finds the monotonicity of \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) when \
\\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) is restricted to the domain \
\\!\\(\\*StyleBox[\\\"dom\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"FunctionMonotonicity\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"cons\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\",\\\", \
StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"dom\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives the monotonicity of \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) when \\!\\(\\*StyleBox[\\\"x\\\", \
\\\"TI\\\"]\\) is restricted by the constraints \
\\!\\(\\*StyleBox[\\\"cons\\\", \\\"TI\\\"]\\). \"\>", "InformationUsageText",
             
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"FunctionMonotonicity\", \"[\", RowBox[{StyleBox[\"f\", \
\"TI\"], \",\", StyleBox[\"x\", \"TI\"]}], \"]\"}]\) finds the monotonicity \
of the function \!\(\*StyleBox[\"f\", \"TI\"]\) with the variable \
\!\(\*StyleBox[\"x\", \"TI\"]\) over the reals.\n\
\!\(\*RowBox[{\"FunctionMonotonicity\", \"[\", RowBox[{StyleBox[\"f\", \
\"TI\"], \",\", StyleBox[\"x\", \"TI\"], \",\", StyleBox[\"dom\", \"TI\"]}], \
\"]\"}]\) finds the monotonicity of \!\(\*StyleBox[\"f\", \"TI\"]\) when \!\(\
\*StyleBox[\"x\", \"TI\"]\) is restricted to the domain \
\!\(\*StyleBox[\"dom\", \"TI\"]\).\n\!\(\*RowBox[{\"FunctionMonotonicity\", \
\"[\", RowBox[{RowBox[{\"{\", RowBox[{StyleBox[\"f\", \"TI\"], \",\", \
StyleBox[\"cons\", \"TI\"]}], \"}\"}], \",\", StyleBox[\"x\", \"TI\"], \",\", \
StyleBox[\"dom\", \"TI\"]}], \"]\"}]\) gives the monotonicity of \
\!\(\*StyleBox[\"f\", \"TI\"]\) when \!\(\*StyleBox[\"x\", \"TI\"]\) is \
restricted by the constraints \!\(\*StyleBox[\"cons\", \"TI\"]\). ", 
    "Documentation" -> <|
     "Local" -> "paclet:ref/FunctionMonotonicity", "Web" -> 
      "http://reference.wolfram.com/language/ref/FunctionMonotonicity.html"|>,
     "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, 
    "Options" -> {
     Assumptions :> $Assumptions, GenerateConditions -> True, 
      PerformanceGoal :> $PerformanceGoal, StrictInequalities -> False}, 
    "Attributes" -> {Protected}, "FullName" -> 
    "System`FunctionMonotonicity"|>, True]]], "Output",
 CellChangeTimes->{3.900007949495077*^9},
 CellLabel->"Out[85]=",
 CellID->231237187,ExpressionUUID->"595322de-da1c-494d-9b84-b1577ac5bfad"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["x is weakly increasing:", "MathCaption",
 CellChangeTimes->{{3.9000099599030943`*^9, 3.900009970296802*^9}},
 CellID->8148466,ExpressionUUID->"35875d99-047e-444a-8d56-cdca4337facf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionMonotonicity", "[", 
  RowBox[{"x", ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.90000992392301*^9, 3.9000099384223733`*^9}},
 CellLabel->"In[86]:=",
 CellID->275594361,ExpressionUUID->"e568555b-07ae-4759-b580-dc4de6bd4707"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.900009938846418*^9},
 CellLabel->"Out[86]=",
 CellID->63282592,ExpressionUUID->"61e5f87b-f01f-4203-a861-abaf7bb29cbd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["-x is weakly decreasing:", "MathCaption",
 CellChangeTimes->{{3.9000099888707247`*^9, 3.900009996775469*^9}},
 CellID->217883401,ExpressionUUID->"39a3c41b-a4a6-482d-931b-079216e38871"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionMonotonicity", "[", 
  RowBox[{
   RowBox[{"-", "x"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.90000992392301*^9, 3.9000099384223733`*^9}, {
  3.900009982837658*^9, 3.9000099847243586`*^9}},
 CellLabel->"In[88]:=",
 CellID->354045942,ExpressionUUID->"b62fb33a-e489-48be-bd6a-aa0090c38d1f"],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{3.900009985044059*^9},
 CellLabel->"Out[88]=",
 CellID->381802649,ExpressionUUID->"06b99f27-200e-464f-a2d2-a6ba64bdd7a8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["x is strictly increasing:", "MathCaption",
 CellChangeTimes->{{3.9000099733744473`*^9, 3.900010006861642*^9}},
 CellID->491856425,ExpressionUUID->"9f91dc45-7cad-42ea-8dd6-cb6b01246e47"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionMonotonicity", "[", 
  RowBox[{"x", ",", "x", ",", 
   RowBox[{"StrictInequalities", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.90000992392301*^9, 3.9000099464565067`*^9}},
 CellLabel->"In[87]:=",
 CellID->341989737,ExpressionUUID->"04504e8b-9ced-4aa1-b012-57a8cdc64894"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.9000099468580537`*^9},
 CellLabel->"Out[87]=",
 CellID->11002816,ExpressionUUID->"b502e459-84cd-4a3c-bed7-ac7f00f51592"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["-x is strictly decreasing:", "MathCaption",
 CellChangeTimes->{{3.9000100016693993`*^9, 3.900010016520794*^9}},
 CellID->1449152,ExpressionUUID->"3f9b92db-4f41-4ead-90c3-df386837ea6e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionMonotonicity", "[", 
  RowBox[{
   RowBox[{"-", "x"}], ",", "x", ",", 
   RowBox[{"StrictInequalities", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.90000992392301*^9, 3.9000099464565067`*^9}, {
  3.900010017311599*^9, 3.9000100200852594`*^9}},
 CellLabel->"In[89]:=",
 CellID->225539919,ExpressionUUID->"53b72a2c-0a97-42af-9ecb-ed216ca02ca5"],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{3.9000100205122514`*^9},
 CellLabel->"Out[89]=",
 CellID->469117548,ExpressionUUID->"ea226934-4501-402c-bfe8-824860e707e4"]
}, Open  ]]
}, Open  ]],

Cell["\<\
To say {5,4,2,2} is weakly decreasing means that every element to the right \
of every element is less than or equal to it. For example, 4, 2, and 2 are \
all less than or equal to 5. 2 and 2 are less than or equal to 2. 2 is less \
than or equal to 2. If we specify strictly decreasing, equality is not \
allowed. We used equality with 2 and 2 here, so the sequence {5,4,2,2} is not \
strictly decreasing. {6,5,3,2} is strictly decreasing. The same logic applies \
to the terms weakly increasing and strictly increasing.\
\>", "MathCaption",
 CellChangeTimes->{{3.9000069025218782`*^9, 3.900007090827738*^9}, 
   3.900007189451524*^9, {3.900007309245535*^9, 3.9000073143430176`*^9}},
 CellID->71716672,ExpressionUUID->"5503be32-87cb-4f27-9cee-e7263885a46e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Integer Partitions", "Section",
 CellChangeTimes->{{3.9000068981941795`*^9, 3.9000069002907195`*^9}, {
  3.9000073768667345`*^9, 3.9000073775425725`*^9}},
 CellID->540683708,ExpressionUUID->"ca9e0543-7782-4ad8-94eb-ec52f55ec56f"],

Cell[CellGroupData[{

Cell[TextData[{
 "In number theory and combinatorics, a partition of a non-negative integer \
",
 StyleBox["n",
  FontSlant->"Italic"],
 ", also called an integer partition, is a way of writing ",
 StyleBox["n",
  FontSlant->"Italic"],
 " as a sum of positive integers. Two sums that differ only in the order of \
their summands are considered the same partition. (If order matters, the sum \
becomes a composition.) For example, 4 can be partitioned in five distinct \
ways:"
}], "MathCaption",
 CellChangeTimes->{{3.9000725320012054`*^9, 3.9000725946804867`*^9}},
 CellID->120747263,ExpressionUUID->"ec45a5ba-1454-44b6-90cd-7d996615656b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"Column", "[", 
   RowBox[{"IntegerPartitions", "[", "4", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9000725973237476`*^9, 3.9000726023958035`*^9}},
 CellLabel->"In[960]:=",
 CellID->225888329,ExpressionUUID->"0b117f60-0997-494d-9b4b-bd8d1b1cafb2"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnc1t2zAYho320mM9QuEVfOi1p6DXFEXOCZoGvqRAUqBIgAzgDbxBJsgE
WSALeIPskL71hxKCLFIfRVKiyPcBYvj3s/SGpkXqCfPp4tfpz3eLxeL2Ay5O
z/98ubk5v/v2ETe+X99urq4vf3y9/n15dXnz+eI97nzAzx1+/l1/I4Qc2O12
2+328fFx6g2ZN/v9/uzsbLPZ2J7w9PS0OHByctJ6SF6ICom3sRAQ18vLi+3R
19fX5XK5Xq87owZ4LSqk3MBy6AzQgBgRNfK0Rd1bgRgcQUnXgY4a1xl1OLag
pOswjzLqcGxBSdeBwOUmow6nMyh0GsgWHYi5h1GHgC87HKp1Hn4sD2wbIOrV
aiXX9XWIgCEJIjJdRJOFk9aTUQF1OMBxg5Q6j4q3RzhaNSp0/r5IC2VPy746
HEY9GsqgHNNNjFpJeFCMWgmCCvlSw2sZtZLn5+f1en18XKEBr8JreZjnxbAB
CIcthBBCCCGEkHzAoBsjQQwJd7td3NGKlMVANWLN/LHZTUZqMjgMKD0IebVa
SUHbbECp0pTNbkIOy+USu4wruMR1hBMy3YHoTMiiSzkmXoqUpmzzctjZ5oyf
NPJhs1IGEUtQWc6guauVN2Go3KNjXWEApnNm1C3wkZfztvgsI5n7+/tYb8qo
W6ARmu9EfPYDm3QTRt3CtGrztRjYVxtqi9rLSkLsojxFeWtN1CVJUw67qRM0
s1h/uKSJujBpymY3dT5zdaB1P45MBqShibo8acrWJTYtMtsQRo4A9X24jMeB
fEBwKTc7B4Yl9dWCbY9ao3JEfdx6zSGKMhZJ+JjOyZB6om62asdhnhxyK6dH
TKtuUXmrdiPHgZKzrVlOsmE5M8xuMl1HZ8cSTpHS1DC7SVo1OpYUBwllS1NZ
jRSy2hhCCCGEEELIjMB4UGaEIg4rUtScBTa7CTkYQyaW3aSsWZvdJHPLxm6S
ZALnJfQ1q7Kb9gfMTTnhErj7XjXLm9lT7pHMmsbdfXfNaqPGx3zxf8msWLhr
1hm1nC5vLuUUTm/NOqOWr7CIIpmmZklRK/UhySTuORFNzarsJhFy4uasr1mP
3YSHxO1376yX3aSsKdRjN0kmcoa3SdND8LWbNDV7N2y+KO0mQzNVX7tJU7N3
w+aLxm5ytEAvu0lZ071h84V202jQbhoN2k0jk9VIIauNIYQQQgghhMyIRCZS
orWbMl8Saky76U23dlOispNLU6PZTV5rNyUqO600Nabd5LV2U6KyE04Yjmk3
ea3dlKhs/lHHtZviRu1VNvOoo9tNjNpGdLuptqgntJsmjHoSaWoSu0mYMOqp
pKmR7SZDbyZFLgk1pt2kXLup1CWhxrSblGs3lbok1Jh2k37tpiKXhMrKbipb
msrKbipbmsrKbqpBmqpBKKphHwkhhBBCSLak8FhmpNxErGlTbt7S6DETKjcp
anppPJ3KTQo9JgflJkVNvcZjm35JocfkoNykqKmfV++8P4Uek4Nyk6JmYNSG
uLGkq5moLKMerSyjHq1slKiV8gmj7q3Zm6Ty36Ux6t6aGo1H8+/S3O81L+Vm
QFlN1EqNx9bPaDyWeSk3XmVTaDyOdTJ7PZZ5KTdeZVNoPL2tukXr1zov5UZf
NoXGU4Nyk9rk0UddvHKT1OTRazw1KDfpTJ6tv8ZDHWUYzI1UxV95kEpS
    "], {{0, 75.}, {72.6, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{72.6, 75.},
  PlotRange->{{0, 72.6}, {0, 75.}}]], "Output",
 CellChangeTimes->{3.9000726027885466`*^9},
 CellLabel->"Out[960]=",
 CellID->505833116,ExpressionUUID->"4fe450aa-d876-43eb-a90c-3cd26f384c01"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The only partition of zero is the empty sum, having no parts.\
\>", "MathCaption",
 CellChangeTimes->{{3.90007260820648*^9, 3.900072616712334*^9}},
 CellID->726753596,ExpressionUUID->"a8e408c7-6bc0-443d-899f-f384cc375745"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
adNmOyePgPBkRqogSYqdM9/DwzM7O4e0/Pz84eFhVoXWNKy1c+IGRsgYhQLE
SfrGlraOXPJwwHR09b/55hsyW0dHh6GJObWJJce1trbu9evXrLonTzCeMKq0
QqkwC4GBQdTxKS8vv3nzJpntxo0bn33+JbXbVhzX1NRUVn2DdQirEdYkmQ1W
L6zh959ElM0QZZO/Itvefr+v7yeGVVYOcrnLWltvkqH6+tNicfjcj9tUlHF5
gtqWA33fPmPYhu0nQsJjqM/nK1eDg4NR8Wldh+6QfVhRuVkcnbH35BMyFLYs
tb29nVWhnp5d8bKCnsF7jFR7Tz7OXLl29eryFzR9//33P/zwA6tCzS2tKdkV
vcceMAp1H/4OTkhS82rJwwGztXO8cuUKme3QoUN872BqE2l6KVzMvlHSWRmM
J4wqWQXGH2YBiMpqfO7fv6+pbUDtdkJ6aXUNu68hWIewGmFNktlg9cIafv9J
RJkyUIb3yhTRvN8r6z87kVu6sbq6RllH9JHdK4Pxh1mg/nXSNMJ7ZayEKFNM
iDJEGSlE2TwKUaaYEGWIMlKIsnkUokwxIcoQZaQQZfMoRJliQpQhykghyuZR
iDLFhChDlJFClM2jVAdlExMT/v7+EkmhVFrJMD+/ZBMTe7E4lwwFBaVHRUXP
/bj9t+fKOHZmVg6OriKGWdq4mFlYz8FzZSdOnPDxD45OypemFU+1+LRigU+4
jYNHfGoRIwTm4ibs6OhgVWjz5i2m5jZ2TnzGkTq4CA2MLVeXlyvriBoa1hqZ
Wtk7CxiFoLSaho6Tmxd5OGAWllbXr18ns+3cuVNLW5ecIDBtXeOa2lplPVcG
i1lHz5isAuOjrqnHFmU3b9783e8+oXdbz3jq+8Q/RLAOYTXCmiSzwerlqOpP
L364VAdlL1++7OnZVVe3hrSKiqqCgsKqqhoyVF/f0Ne3f+7HbSrKHJ1cgiUy
WXYVw8JjM51cPefgaf/79+9vbW9f07CWtLLV5YUri6ih9RuaqBt/GrW3b/Pg
+SUsX8U40qSsCp53WEVFpbKOaF3jeq4wKDFjNaMQeNx4/uJwCfWImptbqD8a
2d3dbW5pS04QmLOHT339GmWhrKGhwc6JS1aBcz9bR25PTw+rbLdu3friy8Xy
up2Vlc0qG6xDWI2wJslssHphDb//JKJshihbWFKpC8w507xfYIIH/BBllQ0v
MH/CC0xEmRwhyhBlpBBl8yhEmWJClCHKSCHK5lGIMsWEKEOUkUKUzaMQZYoJ
UYYoI4Uom0chyhQTogxRRgpRNo9ClCkmRBmijBSibB6lOiibmJgIDw9Xo0sd
JCckVxoaWvJCVlY2Dx8+nMm4TUWZQCD87Iuvvlq8lGGff7nYzt7xI0OZgaHR
V4uWkAf71aKvlYiy1tZWDU3trxaRVZaCH6KssjU1NX3x5ZeUPi9e+skfPi0t
LX316pVSul1YWPjZ5/RCv/v9H7q7u6kvApanS5cu/eM//qO8boeFhbHq28NH
j5YsVYc1SWaD1WtiYvr+k4iyGaJs8g+XNm++u2fPG4aVlx/y9JRs3HiNDBUU
7HRxCSH9YKamztnZ7aQfSvB4YSMj92cyblNRBhAekyM4KFarV8X15t3vlss7
WGUBAfT69Wt5VUBsn2g9dOgQTxS458Qj0uJSi5qbW94o6azs17eTR8rIKr3H
7odGpbM9K5t8Ozm12/GpxVUsvzjevZ08el37UTJbVdNelX07+YdL1VDG9m8w
S0v73N0jSD+YhYVbYWEP6YcSAoFEiShDqbjwAvMnvMBElMkRomwBCVH2E6IM
USZHiLIFJETZT4gyRJkcIcoWkBBlPyHKEGVyhChbQEKU/YQoQ5TJEaJsAQlR
9hOibG7fTi4QCBIT12RmbmFYWFi+sbFjXFwVGfLzSzUysif9YBoaRqGheVVV
xxhWWLjLyclLiSg7e/ZsP0379u3bsWPHgQMHyNCePXs6OzsPHjxIhg4dOnT3
7l1WqxQ1vQBlTq68qqZ9pPmFxDe3KO1hDECZwCeMrFK5fg/XK4wtymAZfLlo
SWZRI2kewiAF3k7u5imMTi4ks0XEZTm7uL7/JKJshigbHR3l8/menpFeXgkM
c3DwU1MzcHMTkyFra/7SpXqkH0xdXd/JyUMmy2VYYmJmUlLq06dPZzJuU1EW
HR0TEh4bl5jFML/ACDNzq8iYFDLkGxBu7+gWFZdGC4XB5mK1SlHT69KlS1Jp
Ykp6NmkxsVL4QmH7xmF5OnbsmDQhmVIoLTsqOu7UqVOsst24ceOTP3zmFRBF
mrGZrQJvJ7e0tnPl+pPZHN29OHYO7z+JKJshyibfTr5ly3d7975lWHn5YU9P
SXPzdTJUUNDl4hJC+sG8veM3btz4jKbnz5+/fv16JuPG+MOl6o379p58zLCS
2h0OrqLt+6+RoeLaHf5hCZ0Dt8hQUuZqJT42jwK9fft2XL6U9ROyP/3XI8Ty
9Iblud+7t5PrkysELD6tmO0ige/uYHF0Y/tRMhusXi4PH5FVLsqUea/M31/W
3t4+S+P2IX+DWdG429nDZ9fREVqoN1iSAquIDKXl1SDKUD/hvTKWQpQpJkQZ
araFKGMlRJliQpShZluIMlZClCkmRBlqtoUoYyVEmWJClKFmW4gyVlI1lHV0
PB0Y+IVhtbUn+fzorVtHDh36Z4aVlOxzdw8n/WD+/slzhTLBms2HBs5NMKx8
3S4nd+/uI3fJ0Oq1PUERst3HH5Ch1JyqqipEGeo/UXbo/AvSkhVCWWhEXMvO
0+SSg9ULa/j9JxFlM0TZ2NiYQCCU94ismZlLcvK6FSu6GRYSkmNq6kz6wWxt
+XODMicnl/DYbPLJQ4CVnqG5LLuKEpLIbBw8U/NqyRDfO2wly6cfUR+lAGWL
Fi9dUbGZNIFveE1NLatsT548cXEXUB+RhdXrhK/0VR7K3j0iKwgJyY2KKmOY
n1+qnZ1rSkpKIUudO3dulsZtKso4dg5egdFRiQUM43mLtXQMxdEZZIjvE25q
6RAel02GHF1Fubl5StsPqAUruE4pkq/jx4+zyvb48WNbe2f/sARyycHqxUdk
lYiyae6VtbTckMnyr127Nr9jNVV4rwy1sIT3yhBlVCHKUAtLiDJEGVWIMtTC
EqIMUUYVogy1sIQoQ5RRhShDLSwhyhBlVCHKUAtLiDJEGVWIMtTCEqJszlA2
MTERGBjo7R0XGJjCMD5fIpHEDA8Pz+9YTdVUlFnb2GrrGhmaWjNMU8fw8y++
8g5cFhguZZgb19fUguMXEkOGnN0Ea9Y0zMdiR33MevbsmbdPgNA3jFxyPGGw
n3/g+08iymaIslevXh05cqRDjiA0Ojo6v2M1VVNR5uziFp9WUlyznWHJ2VUO
zp5tbW1dhDZt2rRu3brOzk4ytGvXLoD2fCx21Mes169fHzp0iFxvk5r6wC2i
bIYoW1j6kAtMOJmHU3o4sZ+PlYtCKShEGaIMUYb6CIQoQ5QtXJT9+OOPY6i/
J42Pj799+5a6GBBliLKFi7I//vGPoaGhjai/G61YseKbb76hLgZEGaJsQaNs
7dq1f0H93ejbb79FlCHK3iDKUAtciLLZQ9nr168fP358j6Y7d+5cv3797t27
ZOj27dtXr16ltgL/zZs3qaH79++/evVqJuPGQNnqtT1dh+8yrK61P1gcveBQ
9uc///nZs2dPaBoZGYFZgGmihr777jtqK8j2448/krvp559/llcI5miabDD+
1O05OjpKbfLgwYNbt25RQ1AFalFDz58/f/v2LbXQ06dPqU1gEGCtUkMgajYY
bRh86ucfPXo0PDwsLxssYGq2Fy9eyGsyNjYGY44om22UTUxMhIWF6erq6+kZ
MExHR1dNTV1HR48MaWnpLF26lPSDqatramhokX4oYW1tC8t7JuM2FWX+AYFq
GjpaOgYMU9fU9fDkPXv2fK6ApLimouz777+3sLDQNzAgTVtHR11DQ09fnwxp
aP4qaisTExPYNeS+g68hM3NzeYU0tbT0aYUsLC07OjqohHF2cdHV0yObQKol
S5dSC2lpa4NRQvr6Dg4OBw8epBbS1tbWo2XT0NBYqqZGLQR9oGaD0Y6OjtaB
RUk0gWNZvHgxvdtaWuvWrSOzvXz5Mi8vj5oNZk0kEt24cQNRNtsoU/prSiws
3AoLe0g/lBAIJCMj92cyblNR9hFoKsrgax1IcnhkhLT0srLQhIS+4WGG/8Ct
W3G5udL8fGorUWDg0aNHyX0H28rOyYnaJKmwMD4vD9KShZavWtW2aROVMJBt
0+AgtdsOXC61EHQ7s6qq/+5dhh+OMSkvb/eePdRCSzU191y9SmYLT0kJjI0l
/QPffSdJTd1Dyzbx4oUsI6O+u5ts1dzfr6alRe22rKhoTUMDFYx5+fk1HR1k
k95LlyLj4q5du4YoQ5RNFaIMUYYoUykhyhQTogxRhihTKSHKFBOiDFGGKFMp
IcoUE6IMUYYoUykhyhQTogxRhihTKSHKFBOiDFGGKFMpqQ7KxsbGhEJRTEy5
TNbIsMDADGNj+8jIEjLk5ZVgaMgh/WDq6gYCQSzphxLm5o4jIyMzGbepKIN9
2tHRSVp7+7ampo3bd+wgQ1u2bG1ubv41QoRaWkFt1IRgL1++nG2UwURoamrK
iotJc/fxsXZySigoYPiBPI58Pi8wsGjDBtLsXVyoKDt//ryRiQm1kItQ6Mjj
QVqyEM/ff0NTE5UwBsbGQAwym4evr66xMbVv0Ge/yMiVjY0Mf35DQ0BEhDyU
ff7VV8BtspCtq6ulgwPliIqKOO7uVJTByAcEBwfFxpKtxMnJXy5eTO22KCSk
tq6OzDY+Pp6alhYQHU1mi8/NFXh5nT17FlE2BygTCAR+fqlhYfkM8/SM1NGx
8PFJIkPOzsFaWqakH+zrr7UdHf1Jv79/mqGh9b17SkNZmDg8LDI5aXkJw/xD
Y4xNrWKS8siQX0gMx9EjTlZAhiys7V09vEg/mKGRyePHj2cbZc+fP1dXVw9L
TCSN4+ZmZGUVHBfH8MOpmr2np0AoLF61irQVhYW3bt0i992ZM2d0dHWphWxc
XIAJIVIpww8eBw+PxvXrqYTR0df3EovJbIAyCFH7Fi+VJiYnF5WWMvzgWV1e
fvnyZWqhTz//HOBDFjKxtjYwN6cekamt7e7du6nwAcJwAwLIJn5RUV8tWkTt
di6cAB8+TGaDTZSYlATHS2YLjIlxdXc/ffo0omy2UfbuAlPU3n6/r+8nhlVW
DnK5y1pbb5IhuIR0dQ0l/WBmZi65uTtIP5Tg8cRKvMDk8YW1LQf6vn3GsFX1
Ox3dvDoO3iBDpfWdAeLErsN3yZC7IChWtpL0g2nqGDx48GC2UTYxMaGlrd13
4wZp8OUOW7jnwgWGf++1a5mVlRWVla/l6E9/+hO574aHh20dHKiF4OoyOjOz
9/Jlhh88KStXyrvAhGwbDxwgs1Vs3eoXFETt2Pfv9OrVKzIEs/z+z3wYWqKh
0XX2LFkoFPizbBnp33v9ujgpiX6BOTGRmJZWtX072WrbyZMGhobyhhRmjcz2
4sWL3Ly88i1byGydZ85EREdfvXoVUTYnKFuQ98qU+5oSrldYQvoq0g+mpWs4
ByhT4F5Z/927uXV11EueaTRn98pqOzuDwsJY9W16zc29MqCloZERq47hvTJE
GVshyhBliDKVEqJMMSHKEGWIMpUSokwxIcoQZYgylRKiTDEhyhBliDKVkoqh
TLRjx5P+/r8yrKbmBI8XtXnzXTJUXLzHzU1M+sHMzV3z83eSfijB54crEWVc
nqC25cD+U88Z9u5fMEUd/TfJUGl9Z2BEcu/R+/1Df2SYpzAkPrWE9INpzdW/
YALK9t+4QZqsuDg4Lm73lSv9d+5Mtf03b2bX1LBF2fDwMMfBgVpI+u5fMKEQ
ww+elKIieSjjODpuPHiQzFbZ3h4YGsqqb9Pr13/BPHeOLBSWmOgfFcUYHDAg
MFBO3r9gJqWnV2/fTmbb9s03bFH2679g5udXbNlCZus8c0YSE4P/gjkHKIM5
9ff3T0qqz8xsY5hYnG9h4RofX0WGAgPTTUwcSD+Ytrapr28y6YcSzs6i+/eV
9tOLDo5OAt+IiLhshrkLgtTUdeDsiwx5CEOs7dxScqoyV65jmJmlvTs/kPSD
qWvqPHz4cLZRNjo6qqauHpGSQpqdu7uFg0NqaWlWZeVUyygv94+MbGD5k9pn
z57VMzCgFrJ1cbGwtwcyMPzipCQnLnf9hg3UhJDNRyIhs/ECAx1dXFj1bXp9
+vnnIVIpWciMwzGztWUMzq/jU1HhIhT29fWRqcbHx738/PhBQWQ2OMHT09dn
1THIlpSczA0IILMFx8d7cLlDQ0OTn0SUzR7KXr582dXVDd/t1dV1DKuqqikv
r4D/JUOVldWrV5eTfjDwV1ZWUUMbNmyESZ/JuDFQFhCelJixmmHegTE6+ibR
SSvIkG9wnKcnFw6qrq6eYRXQ6apq0j9p8LU72yibfEQ2ccUK0kShoTyhEMZ0
TUMDw9Y1Np6/cIHVvoNtpW9oSC3kLBA4cLlwjcnwg8fd21suygwNw5KSyGx+
kZHKRdlnX3wRk51NFgKGuHl4kIMzaXfu3iVTwTr0hq/wqCgy27L0dLYoGxsb
S5bJfCUSMlt0VpanQHDmzJnJTyLKZg9lC0szvFdW09yXk5sHy3g2uKSAPvBe
WVlb28qSEuqvyiugj+9e2Yp16zJzclilwntlyhKiTDEhymYuRNlfEGXKE6JM
MSHKZi5E2V8QZcoTokwxIcpmLkTZXxBlyhOiTDEhymYuRNlfEGXKE6JMMSHK
Zi5E2V8QZcoTokwxIcpmLkTZXxBlypPqoAx20PLlGXy+j0DgxzBnZ09TUwt3
dwEZcnJyNzAwIf1gBgbGHI4z6Yc8+vpGnp5eZIjL9Vq5svjRo0e/OW5TUWZp
Za2moaOtZ8wwNQ3dzz7/wsVd4Mn3YRjHwTUnJxcAMles+g0x3k5uamrqKRKR
ZuvgkJub+/r1a1b7S55u3bplbmFBLWRubW1sbg4TzvB7CIVObm7bd+ygJly8
ZImGjo62gQHDlmppGZuaKqXPk/rd73+vqa9PFlqirs7l8VilGhsbs7O3V9PS
IrNp6unp6umxyvb8+fOY2NglmprUbNY2NsePH5/8JKJs9lA2+YdLpaX716wZ
Ylha2kZ7e+/Cwl4yFB9fbW3NJ/1gBgY20dGrSX9u7g5jY/tVqw6SoYyMNpls
+b17935z3KaizM3dc3nh2jWbDzEsr6zVneu9b9++4zTdvHnz7du3c8Wq39BU
lP38889DQ0PfyNHt27epv6OogGAYz5w5Q61y4MABGLeTJ0+SIWjy7NkzakIz
K6uCtWvX9PQwLLW0VODlpZQ+T2rRkiWV7e1koaiMjDiplFUqGPmI6Oi0sjIy
26q2NgMDA7bZ0pcvlxUXk9nKt2zxCwq68F+PMSPKZhllc/Hn5M3Nw7a2wu7u
cTLU2Hhu+fI8tiiTd4HZ2j0UJol/+vTZXAFJcU1F2cIVXmDiBSaiDFGGKPtw
IcpUUIgyRNlPiDKWQpSpoBBliLKfEGUshShTQSHKEGU/IcpYClGmgkKUIcp+
QpSxFKJMBaU6KBsfHxcKhVlZW4qL9zIsJqYC4LNq1YHm5usMS05eZ2srIv1g
hoYcqbSW9BcV7TY1daqpOUGG8vM7UlIyFUBZ3qqW5s5TDCuu2R4QLFlwKPvT
n/4EC/4STbD+jx49euHCBYb/4sWLJ0+ePH78OLXVlStXXr58yWpLKiYbe/vS
lpbmgwcZllVVFRAcrMRCi9XUGnbtIgvF5+Utz8pileqPExPhy5bFZmcXb9zI
sKzqan2WD2NMTEwsz8iIzsggs+XW1fkGBMBMTX4SUTZ7KHv27BmXy9XRsTAw
sGGYpqbxl19+bWFh7+DgyTBzc46Ghi7pB9PQ0DE1tSH91tbO6uo6trauZIjD
cc3Kynn48OFvjttUlCUkJNrZOzs4uzPMzsFFHC4ZHR2dKyApLsYjsmZmZo6u
rqSZmJvr6OnZOzsz/A4uLgZGRmDUVhaWlrBrWG1JxeQfEPBr39zcGAZna0ky
mRILcezsfj00ohDHwaGsrIxVKlgethyOhq6ugZkZw3SNjbV1dFhlg00UFRWl
rqNDzQYTAd9Ek59ElM0eyqa5wGxpuSGT5cOpwvyO1VRNRdlHoBm+puTArVtx
ubnS/HxqK1Fg4PsdhGIILzCVJUSZYkKUIcqUIkSZsoQoU0yIMkSZUoQoU5YQ
ZYoJUYYoU4oQZcoSokwxIcoQZUoRokxZQpQpJkQZokwpQpQpS4gyxYQoQ5Qp
RYgyZUl1UDY2NiYUiiIjixMS6hgWGprj5xd64cKF+R2rqZqKsn379q3fsIG0
tevW1dTWNq5fT4Ya1q6tq6uDABmqgxGpX0NNCJqDV/qOjo5qamklFBSQ5ioS
WTk6xmZnM/zAMXtPTwcul9rKksPZvXu3khHwsQhQFh0XJ05MzKysZFjSihVs
UTY+Pi5LSfGVSMhZiM7I4IlE+ErfuUGZQCCkoiwkJNvHJ/j8+fPzO1ZTNRVl
/gFBEbEZ6fm1DAsKTzQysUpcvooMBYYnchw9k7NWkyEzS3s3nh/pB9PS0Xv0
6NFso+z58+campryUGYpD2UeHvJQZm5t3dvbq2QEfCx6+/Ztd3d3bV0d+Tbz
+jVrNsh5D7s8Tb6d3CcigpyFqIwMTz4fUTYHKJv8Fdnt2x8dOPAXhm3YcDk5
OVdlLzB5fGF9W/+BM2MMK2vodnL32jlwmxJa0xUYnrxrcIQMeQiD41KLST+Y
po7BgwcPZhtlExMT2traB27fJi2lpCQ4Lq738mWGf++1azFZWQA0aiuhv//g
4KByCfAxCcb/Bzn68ccfWaWCk/bc/PzK9nZyFuByVRITc/Xq1clPIspmGWUL
8l6ZAq8pqWjsDZak7D35mAxxvcIS0leRfjAtXcM5QBneK1u4wntliDK2QpQh
ylRQiDJEGVshyhBlKihEGaKMrRBliDIVFKIMUcZWiDJEmQoKUaYyKBNt3vzd
nj1vGbZ27bmkpByVRRmXx69u2rfnxGOGFdfucHARbuu7RgnVbPcPk3b23yRD
bvzAWNnK/aefkzY3/4I5ibL9N2+SllJSEhQXt+viRYZ/95Ur0VlZsTk51FZC
f39E2dxoEmUVW7eSs7BzaEgSE4MomwOUjY2N8fl8d/cIoTCeYc7OQTyel8o+
V2Zv7+DgKhL6RzLMxsHjq0VLPEUhZMjWkautZwwnYGRIU9uA4+gpyy4nTU/f
cA6eK4PtYGFhIVu5kjSev7+dm1tifj7Dn1RQ4CIQuAqF1Faunp5z89OLqJcv
XxauXBkSG0vOgjQnJyw8/MaNG5OfRJTNKsoEAkFSUkNW1haGRUeXBQSEq+zT
/k7OLhFx2VlF6xkGl5D6RhaynGpKKDKF48hNzasjQ1yv0NBQcdumzaRt2rQZ
ODPbKPvxxx+7urq2bN1KWnNLy4amps1btpChjRs3NjU1UVt1dHY+ffp0/vb3
35Fg7k6fOUOdBbC+vr6JiYnJTyLKZg9leK9s0tLyaqqra2aDV9Po43hNCerD
hShDlE0KUYZa0EKUIcomhShTBf35z3+GK+6XKPY6cuTIiRMnqIsBUYYoQ5TN
sV68eFFZWdmLYi8Yt46ODupiQJQhyhBlcyw4Jdu+ffs/o9jr5MmTW7dupS4G
RBmiDFE2x0KUKSxEGaJsUogyVRCiTGEhymYPZRMTEyEhIaamVhYWtgwzMbEQ
i399um9+x2qqpqIsOCTU2MTcwsqGYYZGJkvV1M3MrciQkbGpto6umQUlZGpm
vq6xca4Y9p+airKXL19yOBwza2vStHR11TQ1TS0tGX5TKysNbW11LS1qq68W
LdI3MiL9JhYWXB5PiSjj8nmmVmbmthYM09HXWbRkMekH09DR1NLXMbNh+sHj
5uk+ODhI5YChiZGZjTmZTV1bY6mGGrWQgYnhkSNHyFSwlhISE0wsTckmRubG
n372KTWboalRc0sLme3t27dFxUUmFpRs0GH/wIC7d+8iymYbZa9fv4ZxviZH
EIJ1O79jNVVTUXb//v0bNF29evX06dPXr18nQ5cuXRoaGhoeHiZDN2/efP78
+Vwx7D/F+MMlLW3trcePkxadmeklFrcMDDD8bYcPhyQkhCUlUVvpGBrmNzSQ
/qpt22wdHJSIMlsnu6q9G7Ze3suw6MIka1cO6QcLTY+KK0ndfGE3w99ypisq
U7qvbx8VZV9rLN34bSeZzTc+RBDhS/q3XNztlxDa19dHpnr16lXSctmKLZVk
q7Kehq81llC7LcmOb1i3lswGmygvPy+/pYxssuHkDnF0BCwwRNlso2xhCV9T
8uF/Tm5galrb2Un6Nw0O2jk5KRFldi4Omy70Hn55gWHp9QUOIlfSDxZXnJrZ
uLJ/4izD3/f026Ti5fJQtlRbY8+jk2S28OzYwORw0j/w4pwkJ14eylKy0+sH
2shWzad3qulqULstq8he27iOirL8FQU1fc1kk977x5YlxCDKEGUMIcoQZYgy
lRKiTDEhyhBliDKVEqJMMSHKEGWIMpUSokwxIcoQZYgylRKiTDEhyhBliDKV
kuqgDOb022+/3UtTV1dXa2trT08PGdq5c2dTUxO11caNG2Gdk/5du3ZBk97e
XmqroaGhiYmJ3xy3qSg7c+bMfpqgRFtb2759+8gQHNHmzZupoW3btrW3t1MT
Am2gh9QQdBt6pRSUjY2NqWtoJBUWkubm5WXv6VnS3FzR3j7VyjZtEoaGisRi
hn/SNHV1EwoKSH9mVZW1nZ0SUWZgaiTOjEmqyGSYqz9P18ygYvd60kRR/sGp
kvJdaxn+0s764PhweSj77KsvYotTyEJWbnYmHHPSn1ieYePpANNNpnr58mVQ
WIh/ophsFZq+7Iuvv6J22zc2ZM3aBjIbDEhaerqfNJTMFlMkE3gLL126hCib
bZQBQIKCgvj8UB+fKIa5uHjr6pp4eASSIXt7rra2IekH09TUt7FxJf3u7v7q
6jp8fhgZcnPzTUpKHhkZ+c1xm4qygMAgN08vn4Bwhjm58jS1dQXewdSQkYml
0CeEDOnqG5lZ2JB+sEWLvuaJAkm/q4cwOiZufHxcKSh7+vTpkqVLnfl80ows
LHT09AJCQkIjIqZaSHi4m6eni7s7wz9pFlZWIh8f0h8sFifJZEpEmbqWhrW7
vbO3O8NM7Sy+Vl8atiycNBcPNw8+NzRSzPCDR5qccPbcOSrKfveH39sLXchC
6nqaS7TUSL+Tt7uGgTag7JdffmGkgnNgZzcXc0crshWH6/jp559Sux0UFrx7
926yYzCPcfFxZvaWZDZ7vjPH3g7OFhBls42yaf5wqa7uFJ8f097+gAyVlva5
u0eQfjALC7fCwh7S39w8bGsr7O4eJ0ONjeeWL8+7d+/eb47bvLymZKmadteh
O6S/vm0gOSUTzqaUgrJpLjDL2tpWlpTA+fNM+KNEfeAFZu2BluDwUCqUFNPc
XGB23TlkZGLMqmN4gYkoQ5Qhyj5ciDIVFKIMUYYoYytEmQoKUYYoQ5SxFaJM
BYUoQ5QhytgKUaaCQpQhyhBlbIUoU0EhyhBliDK2QpSpoFQHZaOjowKBUCwu
iImpYJi3d6KBgW1ISA4Z4vGW6etbS6W1pKmrG3h6RpL+4OAsDQ3DyMhiMhQQ
kBYfn8QWZXb2jr7BcTGylQwT+El09E2iEvOl6asY5hUQZWHjHJNcSIb0jSzs
nQWkH+yzz7+MjM8l/X4h8ZHLYpSFsufPn2toasZkZ5PGDwqKiokB1s0vwd6L
gTJdQ70gWUTMShnDvKIDHVwcZ8Iuhj778vPIXClZyNKVY+pgKV2VzrD40jRr
dzsqyuAQvPx8vGOCyGzizBg9A31WHYOpkaXIRMv8yWySnDhPIe/s2bOTn0SU
zR7K3r2dXJiUtDYrayvDxOIVZmYu8fE1ZGjZshIHB8cWmmpr69auXUf6m5o2
VldXb9y4kQw1NzcfPNg/Pj7+m+M2FWWOTi6S+Nys4g0MA5pxHFwBEW1tmxjW
1NTU0NDQ2tpGhhrWrm1ooDQBq6qqam5uIf2Q5+DBg/CNrBSUwXeKhoZGVk0N
aYExMfEJCbD75pdg78VAmaGpUVxxStaGYoaJM6Jdue4zYRdDXyz6MrUujyzk
ExfM5fPat20jrH3Lli0PHz4kU8EhBIQFhWfFktmSK7P0DQ1YdQxQlpqWGro8
isyWUpMr9PW6cOHC5CcRZbOHsskLzI6OpwMDvzCstvYknx+9Zcs9MrRu3bmw
sHDqm/5gWuW9JBFC8t4PCCf8HzJu//0CU7Bm86GBsxMMa9l5OjQi7tGjx28J
TSYh/dOHAFZUP+iHH35QmGMMlE1MTMAF5sDdu6SVtrQUFher7AUmx8W+7WzP
wMRZhtX0bQwSh8wAXUwt1VLvfXCMLJTfujojO/OvckQ+6v/P7y4wZVlpdQdb
yWydt/qNjBW4wMyv3ttEZuv57kikNBovMOcMZWzvla1ff1Esjpj7cfuQe2Wt
3UNhkvinT5/NBDJzI7xXxkry7pWt2FSelZvNKhXeK1OWEGWKCVGmCkKUMYQo
Q5SxFaJMFYQoYwhRhihjK0SZKghRxhCiDFHGVogyVRCijCFEmcqgTNTWdru3
9yXDysr6PT0lLS3D+/b9yLC6um/nHWWeXH7l+t29R+8zrGHz4aCwqKdPn84V
kBQXE2Xa2vuuXydt5fr1Kv0vmM72Td/s2Pf0G4aV72pU7r9gLtFS33l7gCyU
3VSSmZvFKtXkezBX96ztvX+UYZvO7zI0NmKV7df3YBbklXbUkdnaL++NiI0c
Hh6e/CSibPZQNjo6yufz7ey8XVyCGWZp6aGpaRgUJIuPL2FYWFhqSkrq3I/b
VJRxOPaWti4uHr4Ms7H3MLewfvz48VwBSXFNRRnwwd7eXpqVRVpAeHjpqlWw
X+aXYO/FQJnQWyRJjZGuSGVYcHx4XEI8KyZML3NLi5icJLKQrySwuLSEVSr4
4vDkcS2cbVx8PRhmJ3DW09NjlW1iYiIhMcHc0YrM5iB0cXByHBoamvwkomz2
UDb5iGxOzrbS0v0Mk8kaBYKAdesae3p2MWzXrt7Tp0/P/bhNRZmLq5t0+arS
+k6GpebWevJ9njx5MldAUlxTUQb/OTAwsHffPqpdvnz5559/nl+CvRcDZSdO
nNh/YD/Vzsn5PVjF1N/fL6/Q9evXWaV6+fJlaKQ4riS1tLOeYTkbSw1YPiIL
A5K+PD2mMJnMlt+62jvA5+LFi5OfRJTNHsqmuVfW0nJDJsu/du3a/I7VVH3E
98oWkBgoW4jCe2XKEqJMMSHKVEGIMoYQZYgytkKUqYIQZQwhyhBlbIUoUwUh
yhhClCHK2ApRpgpClDGEKEOUsRWiTBWEKGMIUYYoYytEmSoIUcYQokwVUDYx
MSEWi5fIUUhICMzC/I7VVE1FWViYeKkc8QWC58+fzxWQFBfjaX/o+ZeLF5P2
h88++90nn3yxaBEZAv/vP/mE2up//e///ennn5P+z7/80sTERIkoMzE1+XzR
F18uWcSw33/6yf/8X/+T9IN98tkf/vD5p18u+Yrh/+LrrwyMDam/+6pcwVqK
jo6Wt35cXV1ZZRsdHY2MjPz0i8/II/1i8VfGJsaDg4OTn0SUzR7KQOPj46Ny
BCH4xpnHgWJoKspgQ03IEWDhxx9/nCsgKS4GyrTk/OFSclFRYGxs9/nzDH/v
pUtRGRkxWVnUVnomJuVbtpD+pv37OY6OSkTZuz9c6tj39FuGJVdm2/GcSD9Y
VEFSWl3enocnGP7uu0ekK1L39e1TIrWo+uWXX2D85f2iJiweVtne/eFSfnn3
WvJIO4YPRsThHy7NEcoWkKai7CPQB/45eXpZWWhCQt/wMMN/4NatuNxcaX4+
tZWBqWltZyfp3zQ4aOfkpESUyftz8vT6AgeRK+kHiytOzWxc2T9xluHve/pt
UvHyOUCZcoUXmIgytkKUIcpUUIgyRBlbIcoQZSooRBmijK0QZYgyFRSiDFHG
VogyRJkKClGGKGMrRBmiTAWFKFMFlL169Wr//v2tNDU2NsLwrl+/ngytW7eu
uLiY2mrVqlW1tbWkv6mpCZrA/1JbHTp0iO0rffv7+zfRtGHDhrKyspaWFjIE
3KioqIByZKimpqa6upqaMD8/v7m5mRoaGBhQ4it91dXVAVmk2Tg765uZBcbG
MvzB8fEW9vZuPj45dXWkqWlrh8tkpD8+L8/K1laJKNM10BNFBYSmRzHM2t3+
a82lpB/MwtmGF+GTtaE4Z2PpVMtYW+grCVqIKMvOyRZnxDAOByytPt8vOABR
Ngcom5iYCAgICA5Oj4wsYJhIFG1kZBMQICNDnp5henoWpB9MW9vIzS2I9Pv6
SjU1DUJClpMhb+/YpKSUkZGR3xy3qSjz9fP3CoiMjMtkGM8rREfPKDRSRob4
XqEW1o7iqFQyZGBswXFwJ/1gXy76OjgiifR7+UXExErHxsaUgrJnz54tVVML
josjDVBmaGHhHxXF8AfFxnLc3Nw9PbNzc0kTiUTxCQmkPys7G1CvRJRp6+sI
JL7BKREMs3LnLNFSI/1g5k7WXD4vKzcrJz/3v1tOaVnptevX5olJCurnn3/u
6enJys0mDic3Ox++PeqeP38++UlE2eyhTLHXlJSW9rm7R5B+MAsLt8LCHtLf
3Dxsayvs7h4nQ42N55Yvz7t3795vjtuH/OFSReNuZw+fXUdHaKHeYEnK3pOP
yRDXKywhfRXpB1uqpt116A7pr28bSE7JVBbKFLjA7L97N7eurraubiZcmjnK
FLjATK7I2tq+FVLNE3vmTYgyRNmkEGWIsgUtRBmibFKIMkTZb+pPf/qTwjMy
2xocHGxtbf2eppKSknGWgvXz8uXLWWbVbwhRhij7CVE2Cyj75Zdf2tvbd+zY
0a2SamxsrKio6KSpsLCwg6U2b958/PjxWWbVbwhRhihDlM0SyrZt2wYD+7NK
CiZd3g8dKPADCFevXj148OAss+o3hChDlCHKZgllcLoCWPg/fwe6e/duf3//
LLPqN6RiKBMBr/r6fmZYZeWgp2dka+tNMgSwcnUNJf1gZmYu+fmd/f1/ZVhT
0xUbG0Fn5zMy1NBwRgGUcXmC2pYDfaeeMay0fqejq6jj4A1aqDMwPLn36P3+
oXGGeQpD4lNLSD/YEjUtyEb6oXpSSoZyUdZ/5w5pqaWlwfHxu69cYfj337yZ
XVMz7yjjuNi3DnX3jw8xLLU2z17gQvrBklZnzA3K/va3v/0iR3/961//6Z/+
iRqCPGypMk0hOEy2habJBk3+9V//FVFGouzd28kF3t6JQUGZDHNzC9PSMhEI
4siQg4O/hoYR6Qf76it1R0d/sXgFw0Qi6dKlugEBy8kQnx8dGytlizIOx95d
EBwUIWOYs4fvUg0dn+A4asjQ1CY4MkUck8kwbV1jK44r6Qf7w6dfBIiTSD/X
OyxCEqVElKlraIiTk0njuLkZW1uHSKUMf1hSkotQOO8os7Cx9I4JEmfGMIzD
dVTX1ST9YNbu9ps2bZptlMGWP3bsWKEc5eXlFRQUUEMNaxtYcQyoeODAAXmF
8vPz5RVqb2+nJjx8+HBxcTG1CezcZ8+eIcpIlI2PjwsEwtzcHWVlBxkWH19j
bc3LzNxMhiSSInNzN9IP5uDgnZmZuYulTp06NTEx8ZvjNhVlzi6uCRmryxq6
GRadtMLEwq6gfBMZik0pCgoOgaW+m4327NkjLwTdhl4pBWXwn4cOHdpHU19f
H9UP2r9/P6zn+UXZiRMnDrDXw4cPJ88xZg9l//Iv/1JSUhKfK2noYq6F1W35
5rbG6aVSYo2UrWrJMzYxYoUyKJeXn5dSFEtmK2vNN7M1zq9LI0MZqxNE3kJq
QsgmzY2k9i0kyv/8hfOIMhJlSr9X5u8vg++aWRq3Gd4rq2nuy8nNA3orDB/l
Cn/bX+kiUVbfWUreAR281+MmcmwbqCdDh+50KYCywqIVzftryGyH73a7COy7
h1rJ0NbBtfJRllu7o4Tat6TcWEQZogxRphQhyhBl74UoU0yIMlUQogxR9l6I
MsWEKFMFIcoQZe+FKFNMiDJVEKIMUfZeiDLFhChTBSHKEGXvpWIoE23efHfP
ntcMKy8/5Okp2bjxGhkqKNjp4hJC+sG8vePnDGVVTXv3nHjIsOKa7Q6uwm37
rpKhsjU7c3JUFGV//vOfX7x4QX2tJ3R4bGyMbWjyNaakH4pCSN4rRN++fcsW
ZTAvL1+9Im3yRaXU0It3eglihF6+BD80pLZ6/fr1bz6/MRVlf/vb3wBlZS15
R77rYdiu85scubZrusrIEGDH2Jg1ygoK8wE+ZLaec20OnrZALWIx7mnaWyUP
ZTl5OaUbc6l9i02XnDt/DlFGogxWTnx8vFgsW7Ysg2F+fstsbJyCg6VkSCQK
s7DgkH4wNzf+7t27Z2ncpqIsLi4+KCwqKj6VYT4BYRaWNuHLEshQYIikrKwM
9tc84muqpqLs1atXERJJQkoKab4BAZ58flxSEsMfL5OJvL35IhG1lS2HExwe
TvrDJBJzS0tqE0lU1I4dO2BjskJZUnJSrEyasFzGMP/QIDtHe9IPJvAW+gT6
SdOTGf64lAQ3T/eAsCBqq8jIyB9++OHDUQb/WVRUZGJl6MS3Y5idu/UXiz43
szWmhNys9fT1WKEMCJyYlEjP5m6jrqXmH+qdkB7DsPCYkMTkRGrCX7PZGFH7
ZmJh9O2pbxFlJMpgB50/f/4ITTBKu3btGhgYIEMHDx7s6uqitgI9ePBglsZt
KsouX758nKbDhw/39vYePXqUGr158yaceMwjvqaK+XZyLa01PT2khSYkePr7
V+/YwfDXdnb6SCR+y5ZRW2np6aWWlpL+pJUr1bW1qU0kqak1tbW/eWLGQJm1
g23BpvI1hzYxLDRtmam9JekH840PCc+MqetvZfgrehut3e3iilOprWB84MSM
1VlZcXFxWmn8pkNrGLa2Z7WVo1l+fRoZWtO1ytDIkBXKYMSysrNyqlPIbOt2
lQt9+PAFcZamO3fuUBNmZmWkllC6DX0LjvI7e3YIUUaibGEJX1My89eUVLS3
65mYUJvk1tXVNzSwRZkSX1PS++CYexC/ZEcdtZW2jjYrlKnCvbJj93tjE6Nu
377NKiHeK0OULSwhyhBliDJE2UcgRBmiDFGGKPsIhChDlCHKEGUfgRBliDJE
GaLsIxCiDFGGKFMWymBt3L9//yZN165dO3fu3PXr16mhoaEhaivwX758mfQP
Dw+fOXMG/pcMXb169ezZs9TQrVu3njx58n7cpqLs8ePHd2mCVhcuXIDFQ4ag
xMWLF+/cuUOGrly5At2mJjx9+jR0g/TfuHFDXjbQ6OgoK5TB/9fU0mro7SUt
LDFRGBraduTI9lOnptqW48fDkpLCZTKGf9J0DQ0L168n/Xlr1mgZGFCbJK1c
WVtfzxZlFrZWhVsqGga3MCxseZSFk8324QOkiTNipKvS26/uY/ibz+x0FLlm
rCukttLWVgRlRY2Z+4e3H/jv1vFtk72HTfX2ogNEaPvJDWxR9sMPP+Tm5eTW
pmwZbGBY4+6KkIhgWCqsEmbnZKWVSslsDd1l/397ZxoeRbH2/U+v7zmuIPtO
WMIeIBASss5kTyb7BmTf94QAIYAQIBD2XTxiwAdFVsEgewhKREGIiAoIIiDw
gMhRz+XGcUPfD28lk2S6a+mpnszS09z/639xkaqp7prqqt901fTUHT45pL7+
OKCMRBkaQRqNpmfPAX36OGLu1q3PU0891717fzKrc+ee//zn02Q68pNPPtOx
Y3cyvXv3fv/4x5OME/V99tnnWVk5OXlt7SZEmY+Pplv33n36D8LcpVvPf/zz
qV59HMisrt17Pftcx159BpBZTz719HMdOpHpyP/nif/bs1d/Mr1T525PPvVM
r76Uo3Xu2qO0tBT1cH6UXbx4sUuXLt179ybdsVOnDh06DBg4cNDgwZj7Ozgg
k+n6LGoRlNinb19qEeSlS5eiastCWYfnO3Tu2bV7v56YO3br/GyH5wbT5DAA
1W3AoKYTioRS+vXvh7Kopdzc3FAfkIWyZcuXDXYcTBqdCLXcwEEDqbkBgQGy
yHPjxo2EhIRO3Z7v2a875u69uw4dOuTgwYOyDjh5yqROXalH69K1R9cDBw4A
yqgos3mYksrKt/390zZvvkZmlZe/kZ1NR5nNw5QUz1qtCYp9/cBFMmtm1Sty
USYxwZy1du208vLbt29LE8Zq4pxgLti5WhcVLk0es8smYUpgggkoA5QBygBl
pABlgDJAmRUEKMMEKAOUAcoAZYAyUoAyQBmgzAoClGEClAHKAGWAMkAZKUAZ
oAxQZgUByjABypSAsmvXrmk0Wi+veAQTzOPHh/TtOyw8vCg5eQFmH5+Efv1G
kOnIPXoM8PCIIdPDwvJRVlzcDDIrICDV0XF8bOx0MkurncxC2ZixzhM8AvxD
J2F2dtV269k3PqUkOacCs19IwvBREyallZFZ/QcNG+viTaYjP/Nsx9ikQjLd
Q6MbMHjEpLSpZJYmMMYElPXo2TO5tJS0Niwsr6BAsSgb7jQiIjs+uSIHc8Dk
sMCQoMcEZYVFhbpJAWT3SS1NCAz2l4uy9Iw0F5+xRNf294/yHu0y8sjRI/qX
AcowlPn4+MTHz0pNrcYcHl7s5DShoKBo/vyFmKdPL09OTibTkVNSUouLS8j0
2bNfSEpKeuGFedSjZWZmzZkzl8xasGDhnj172tpNiLJx4yeERqWl5s3FHJGQ
O3T46Fmz51QtWox5xozy7Oyc+fMXkFn5+QXIZDpyTEzMvHmVlKOVl2dlZVGP
tmDhwtraWtTD+VGGuLds2bLF1dWkqxYtQo1gdHNXqwlD2YYNG5YsXbJ02VLM
1Uuqt27d+jig7Pvvv3/77bfRW16+YhnmZcuX1dTUoI8hWQfMzMoIjvclunZq
6tR4d+2Eo8eO6l8GKOOcYK5efSY9veT999+3bVsJxTPBXLOlLiIm8fPPr0hj
RAmCMCVml01QZnbBBBNQBiizggBllhagDFAGKLOCAGWWFqAMUAYos4IAZZYW
oAxQBiizggBllhagDFAGKLOCAGWWFqDMVJRply9/75VXrmCurNyflJR36tQp
mzaVSLTo5BcxL3mxNixqkt2hTCI6+bVr165evcoKQc7K+vzzz6mBy7/88svL
ly/LPRqqW9vTIGR08ts0oSLogNQs9MbRMcn0W7du6SOqU0tduXKlOZ45Ragx
qSj7tvkpF1J3795F1btz5w6Zhd4OqgO1FNJ3331nHZTNXlNKdO3XX3t3Q1Je
PKCMijLU2by9vd3cIry9J2EePz7Yw0Nz/Phx27aVUEKUhYTo/ILjYqbkYQ4M
mxwYHHbl6lXbIYpXQpShd1dYWFhQVEQ6LT19SmJiPi03JSUlKTmZWio+ISEj
M5NMz8rJiYqOphZJTUtDR6OeqKS09PDhw1SUzayYWVBUWFRSjDkzKzM+IZ5M
R05NS03LSC8qKcLSC4sL0TvNyMygloqKiqKeKC8/r6amhkTZjz/+uHPnzoLC
gpKpJZjRqRMTE3Nyc8isgqKCmJgYMh05Pz+vtrbWCiibWVHuH6GZkh+DOSY9
LFDn19DQACgjUYY+gHx8NFOnvjpvXi3m3Ny1UVFTTp48adu2EkqIsvr6+j0M
HTlyFL3YhoziFPa0f89eveZv2kRaN2XKRH//ORs2YOlzN270jYz0j46mlurR
t29qWRmZnlRS0o1xoqC4OL+oKHRY8kSRycnr1q2jomyks1PRypkLdqzCrEuP
GTxmGJmO7JcQEp4VV7ltBZZe8UrVcFenhKmp1FLPPv/crM2LyfSYwsTc/Dwq
ysrLy9OnTV61fcGqHSIvfLl8+FjHwnnpWDrytKX5nbp2JNORI5KCliyttgLK
Pv3000OHDx2kqf5EPbo5BJSRKLPftTIVSGlhShD6EouL0WHJE+VUVKxloMxq
YUo6de/8+sWDZPrUdXPyiwpYKJMbpqTm6KoefbvRfoy7t+CF9GXLl1oBZZwC
lAHKFCJAGaCsPQKUAcoUIkCZKlH24MGDCxcuUONwmVf79u3bsGHDSZn64IMP
zDgkAWWmCVAGKFM+yj755JOXX375kOVVW1u7Z8+eAzI1b948Mw5JQJlpApQB
ypSPsvPnzx8+fPhXpaqystKMQxJQZpoAZYAyQFk7pWqUadeuPbt161eYFy06
mppaqFiUffnll5/TdPny5YsXL11mZF26dIla6lKzqFmffXbxMu1wEkeTyLpy
5Yr+kU4SZb1699568iTplKlTg+LjNx09iqXXHD8ek5UVl5NDLdVv0KCKNWvI
9OnLl/cZMIBaZFJBQWx2dk1dHX6iurrU0lIWyka7jF1S++LWT2oxp8zOdfIc
R6YjxxYlpc8r2PLRPix943vbXALci1dVUEt17NbpX+/vINPzlpTlFeaTKPvh
hx8QyipWFe39aPPej7YI/Wr92vGeo6u3zK79ZCtmxLduvbqQ6cgZ06YsXSYP
Zf/973+/+eabe/fukr5793/v3LlNzUJGHJYFqIcPH96//zXraN99953qUYZG
UHp6uk4XFxExBXNwcHROTt65c+fM+MbbKSHKUlJS/QLDdZGTMHv6BAwcPDQw
NIbMcvfyGz5yTJAulswaOmzUaGdXMh25a7ceASFRZLqru8+QYSPJo4U2ZWlG
jBobGpFAltL4Bm7fvp1E2a1bt9BnSnRCAmkfX98Jbm4RsbFYelRcnIeXl7un
J7WU0+jRfkFBZHpAcPDQYcOoRby02omenpFxcfiJ4uPDIiO3bdtGRVlEVGRY
TET05DjMPn7aUaOdyHRkD42nt58menIslh4RH+XsMk4b6Est5TjEEb2ATA8I
DZo/fz6JMvTnjPIZg0cOGO81GvNY91G9+nb38J4YnxiDOTw6dOjQIWQ6ckCQ
36ZXNslC2YMH3yQnJ0ZEoM+icMze3m4ODv3IdGSNxuPgwQOyUIbesk4XHB0d
Qh4tKEhbWTlP9Si7c+fOhx9+eIIhlIVYZ8Y33k5hP1wqnbNuzavHMeeWVY8c
O3Hx+r3ULJ+AmKUv7SeznF21YXGZZDry8527L1yzm0xPzJo5wSNgycZaMiuj
aL6/bsrqzcfIrEDdpJdeeolE2YMHD1Brv09TfX390aNHT506RWYdP3782LFj
1FIHDx585513yPSTJ0/u37+fWkTiaGfOnEG1paLs448/PkNTQ0MDGtHULPSO
UN3I9NOnT6M6vPvuu9RSqNroBdSsq1evUu/KZsyYUbwgk7yqG2uXhMcFo3fR
SAhdhUOHDpHpeqFPHFkou3fvXnS0bs2air1712DOz08YNmwgmY4cGem3Y8d2
WShDA1mrda+pWUgerawsJTMzXfUosy/ZSZiSr8oXvhyTWLin/iZZKmZyLhVl
diR7+Tm5xFrZgYuvp+UnIm4b5ZIJwlA2eXL0m2+uIdcmKyvzx44dTluz3JuW
FrVz5w65KAsJ0dbV1ZBHW7q0DFCmNAHKlCBAGaCsTYAy06QylN24caOgoGCv
vWnbtm1lZWWsH8DaXGioAsoAZQqXylCG+nm9Haquru71119/VZHasmXLnDlz
9D+4BpQByhQrlaEMZHah+zHUvHBXBihTuABlIGkByh5blN2+fRtNGahLItu3
b//Xv/61c+dOMuuNN9548cUXqaU2btyI7vPJ9F27dq1fv3737t3UtZeXX36Z
mrVv3z7hr18xlOWULl60dg/mlNw5Q0eOn714CzXLXaObu+w1MmuUs0dAWCKZ
jtyxU9eZC18h02OSisa4eCM8YulVa/dMzpjh7R+9cM0uspQ2IBpQZjmRKMsq
n9J8TUTXYenWF6Imh1sBZXfv3vXx8cjKip09OxtzSIiXg0OfLVsWkQ4O9pL7
MAYayGPGjCguTiRPFBGhTUiIUz3Krl+/rtFoRo3yHDfOF/OQIeOef77HiBET
yayBA0d16NCVTEfu0KFzv37DyPThwyc880xHJyfKiRwdx3Xp0odaB0fHsTk5
eVSUlZSUIpqRdnNzd3Ia4+HpTWZNcJ04Zqyzp5cPmYXSnce5UA/oOGSou4cX
7Whuo8c4e9JO5DLBdfSYsV7elBMFBgYjPttwsKtbGMrQR6TWT0N1SmryuXPn
LI0ydLM0aNCAYcMGohswzI6O/bt06eTnp6XZt66uThbKbt261aNH11GjHMkT
OTj00mo1jwPKWL/BXLjwiLf3pI0bPyWzZs7cPnFiNJmOPGyYW1nZq2T6qlWn
nZw0W7Z8SWZVVr7t75+2efM1Mqu8/I3sbDrKQCBSQpTZSpwTzNdeq0bUksUr
CcEEE1AGUpMAZYAyQBlIBQKUAcrsAmWlpaUzQSBJFRYWtgXyAJQBypSJMhBI
WmhEb9y4Ee7KAGWAMpBdC1AGKAOUgVQgQNlji7IvvvhCo9G6uoZ7ecVjHj1a
2737ABeXUDJr5EjPXr0cw8PzSXfp0nvsWD8y3ccnoXPnXoGBaWSWu3tE//4j
AwJSySxX11Dhc2UgkLSEKPvpp5/27t2bX5BHOjc/Nzk5KSs7k8zKycuOT4in
lkpJTUlLT6NmTZteduGTC1SU+fr6hIVpk5IiMAcFefr5+ZoLZbdu3XJw6Ovr
6xoS4oXZ2Xl4cHCQ6lF27do1Hx9Nbu666dNfw5yQMHv4cI/MzBVkVmLifBcX
102bXiFdWTl/+fLlZPqLL26cO3fuxo0vkVlr165F9aFmIR87dsyMLQ9St4Qo
+/HHHysqKhILYha+PBNzxcqioaMHZc6YQmYVzEt7vmsHMh3ZVTsuKFZLps9Z
OzUwUnvo0CESZagOhw8f2rFjx05CKPH48ePmQtnt27ddXJzmzs1dvnw65ilT
dLGxMapHmWkTzGXL3o2MjDZjg4BAZhGGMvOGKQlPCsybk0KmH7y0Lakw7uDB
AyTKrCaYYALKQGoSoAxQBigDqUCAMkAZoAykAgHKAGWAMpAKBCgDlAHKQCoQ
oOzxRpl25cr3Ec0wl5e/4eYWWV1dT2bNmfMmoAykQJEoK19RuOdszZ5zIm+p
Wz3Ow2nhpnIsHXnF9spuvTqT6ciBMZqUkjgy/bV3N8RlhNscZQEBXjt3rjx+
vAbz7NnZjwPKbty4ER+fEBmZGx9fitnff9LQoc46XQaZpdOlZmZmm7FBQCCz
CENZdXV1aGxASkEC5kmZ0Y7DB4XE+pNZkYmhXbt3JtORx7iMmqhxIdMTc2ID
dL719fU2RNm9e/cCA31TUqKzsiZhDgvznzmzXPUou3379rvvnty//23Sb71V
u2fPm2+9tZ+ae+rUKTM2CAhkFmFP+1+5cuXEOydI15+oP3zkcN3xOkpWff2B
AweopY4cPXL02FFqVkNDQ9t2HDZBGXqzp0+fbmg4STVqB9WjDARSk5T2G0wF
ClAGAilfgDKjApSBQMoXQtnatWvfe++9Rttp3759+/fvtwKU/v3vfyNsfiJT
06dPbzCfysrKHj16BCgDgcyugwcP7ty5c5fttGHDhjfffNMKKPv444/Xr19/
VKZQ3Q6bTxkZGb///jugDARSn9C9CsKpFVD26aef1tXV/WlTzZ0797fffgOU
gUDqE6DMJii7c+fO5cuXLzCE7mDlZn38MbOQqUdjlvrqq69s22lBIFJClD18
+PDrr7++zdCtW7dkpSPdvXv3p59+sjTKEJ2+/fbbewyhrD/++ENpKLtx40ZE
RKSHR7iPTyxmZ2dtnz6D3dxCyCwnJ68ePRzIdOQuXXqNHOlOpru4BHbt2tvd
PYzMGjNG07fvEGrWoEFO/foNpZ7IwcHxyJEjtu20IBApIcru378fHh7q6ztR
p9NgdnYe2b17FzIdecCAvi4uo8j0wEDPgADt6dMfWBpl169fT09NCfRyjwrU
Yg7Vek2alPDLL78oDWX632CuW9e4dettzLNn73F3j16x4hSZVVJSM2GCjkxH
dnQcn5//Ipm+aNGxESM8168/T2bNnLldo5myfv1HZFZERKm/fxr1RKNHe7/9
9tu27bQgECkhytA9TEJC5Nat1Q0NWzHPnJnh5DSETEcOCvJYsKCATK+tXZ+R
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
/3RRTbU=
    "], {{0, 312.}, {245.39999999999998`, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{120., 120.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{245.39999999999998`, 312.},
  PlotRange->{{0, 245.39999999999998`}, {0, 312.}}]], "Input",
 CellID->313056273,ExpressionUUID->"1474a759-a4d8-400a-a3ed-465a8bc4645b"]
}, Open  ]],

Cell["\<\
The order-dependent composition 1+3 is the same partition as 3+1, and the two \
distinct compositions 1+2+1 and 1+1+2 represent the same partition as 2+1+1.\
\>", "MathCaption",
 CellChangeTimes->{{3.900072617997418*^9, 3.9000726417187557`*^9}, {
  3.900072716936012*^9, 3.900072720366086*^9}},
 CellID->25000001,ExpressionUUID->"47c860e8-52d8-4e54-bf18-40fb53a468b7"],

Cell[TextData[{
 "An individual summand in a partition is called a part. The number of \
partitions of n is given by the partition function ",
 Cell[BoxData[
  RowBox[{"p", 
   RowBox[{"(", "n", ")"}]}]], "InlineFormula",
  FormatType->StandardForm,ExpressionUUID->
  "a47f4ba5-6104-49dc-b2e9-c8fba4145e96"],
 ". So ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"p", 
    RowBox[{"(", "4", ")"}]}], "=", "5"}]], "InlineFormula",
  FormatType->StandardForm,ExpressionUUID->
  "88d5569f-4e22-4dbd-9d61-c83a9ef75227"],
 ". The notation ",
 Cell[BoxData[
  RowBox[{"\[Lambda]", "\[RightTee]", "n"}]], "InlineFormula",
  FormatType->StandardForm,ExpressionUUID->
  "b6e6ea81-a129-4062-bc66-b2ec0c1ceac2"],
 " means that \[Lambda] is a partition of n."
}], "MathCaption",
 CellChangeTimes->{{3.900072721696371*^9, 3.9000728086280346`*^9}},
 CellID->23248960,ExpressionUUID->"e5f1c52f-dc6f-4d4a-a5de-ca671070e27f"],

Cell[CellGroupData[{

Cell["\<\
Partitions can be graphically represented with Young diagrams or Ferrers \
diagrams. They occur in a number of branches of mathematics and physics, \
including the study of symmetric polynomials and of the symmetric group and \
in group representation theory in general.\
\>", "MathCaption",
 CellChangeTimes->{{3.9000728101380997`*^9, 3.9000728566250877`*^9}},
 CellID->83076827,ExpressionUUID->"1fbeb423-2d51-49c1-9bd7-2d8f1909879b"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
h5VdvXq18aVXU1Mzd+5cSo8QIZw5c6aiokL5Dca2o0aN2rNnjxWkt2bNGlNI
b968eZQeIV4iOzsbbfDw4cMup6T0REHpEaIXp0+f3r59e0REhF33zyGUnigo
PUL0orKycvny5ZmZmVpqNaUnCkqPEL3YsmXLtm3b6uvrtUxM6YmC0iNEF1JS
UjZu3KjReI2UnjgoPUJ8zJkzZ7Kzs6Ojo92qzG1AetIlK7CK94NVQ8slK4jT
94HZQemRtsHp06ePHj2amJgICUjfwIHHjx932eUzu/Ski5ODgoIMLr2KiorZ
s2dPnjzZ94HZQemRNgD8lpGRsXDhwg0bNuxoIiEhAeM+l4M+U0sPJoHn0X0a
P358fHy8vrfzq9yGVlJSsmnTJhjP398/KSmpqKhIryAbKT3SJigsLJw5c+a4
cePGK8BHNLSGhgb135paerA9rF5VVVVZWYmM9iOZ3kClp4d+uDJOlxvFq1B6
pA2ARlTpiLq6Ope/NbX0DAWfp0eIKaD0REHpEWIKKD1RUHqEmAJKTxSUHiGm
wPjSy8rKevrpp9FOL7nkktsMzDXXXNO+fXvE2blzZ71jUQPFiCDh51cNz8CB
AyMjI31cIUmbx/jSS0tL69GjR8v3dJM2D8w8duxYH1dI0uYxvvQyMzOfeOKJ
drae3h8NTJcuXeSent6xqHHppZciyE6dOj1iYO64446OHTtSesQbGF96BQUF
ffv2RTtFf2+rgRk6dOgFF1yAOAcNGqR3LGo8+uijCBKD8ezs7ByjEhERcdll
l1F6xBsYX3o8kSEWU5zISExMvOKKKyg94g0oPVFQegKh9Ij3oPREQekJhNIj
3oPSEwWlJxBKj3gPSk8UlJ5AKD3iPSg9UVB6AqH0iPewlPQaGhpqFJw8ebKu
ru7MmTMezlbCc+nV19cjnprm4Mva2lrlN/joia9aLT270nMYm/TlqVOn7AJ2
N0hKj3gP60gPPhk/frzygv+uXbtGREScPn3ak9nKeC49SPjvf/+7MsIuXbqg
+T/++OPKL19++eXCwsJWx9lq6QUHB0sXNstERkZKc1NSUFDQvXt35TfPPvus
lreRKqH0iPeg9Cg9jVB6pG1A6VF6GqH0SNuA0qP0NELpkbYBpUfpaYTSI20D
60ivoaFh5cqVvRW88847aFyGkt6UKVOUEb711ltpaWlfffWV8stx48aVlpa2
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
BZaS3sGDB4cOHfqCDcwNtvG99EpLSz9TsHHjxoiIiBeaGDhwoHpIVVVV/v7+
jzTx8ccfr1ixAusifUSLXrRokfeO6Z06dWrZsmVy8P/+97+PHz/+ggLsVgID
A+WPvXv39qX04OSpU6fKS//yyy8hsTfeeEP6+Prrr69Zs+brr7+WJ8DECxcu
xL5P+ohMYmIipdfmsZT0SkpKtm7dKj0DDbbZs2eP76VXWVk5TcHu3bvxTV4T
BQUF6u9KQ8Dp6enRTSQnJ+fk5MTHx0sf4+LisrOzvXoiY9OmTXLwoaGhxcXF
eQrg5J9//ln5Tete/dY66WFZ2MTyoo8dO1ZWVoYilcsW/WR8KU+AiU+cOJGf
ny99RKa6utqtOCk9M2Ip6RlweDt27Fi35GO04S0c6+5MtMDr9Ij3oPQ8macS
Sk8glB7xHpSeJ/NUQukJhNIj3oPS82SeSig9gVB6xHtYSnowRnp6+q4msrKy
WneY3SEapXfy5Mk9CrB2bi2lrq4uISFhVhNr1qxJTU1dsGCB9HHu3Lkuz854
Ij0s/ejRo7ubwKIrKyvdnYkWKD3iPSwlvZSUFMzkRhs33XQTOi2+7+lBGpcr
mDBhgo9v/OcDBwRC6ZkRS0mvDQxvPYfSEwilZ0YoPU/mqYTSEwilR7wHpefJ
PJVQegKh9Ij3sJT0MjMzhw0bJj2FqX///gEBAb6X3s8///yqAndv9vQcSk8g
lJ4ZsZT0ysrK9u7du6OJjIwM9as73EKj9Orq6qoV1NTUiApAI5SeQCg9M2Ip
6RlheKs7lJ5AKD0zQul5Mk8llJ5AKD3iPdqA9CorK7OyslzqS0fpIcJ9+/Zt
374dg2t3n+MhHHXpoUAw6j9x4oTvA1PiUnooRhSpwM3XOig93amoqEhKStrc
RHZ2tssXnZhaenV1dYmJidOmTZszZ87JkyfVF6SX9EpLS0NCQsaNGzd69Oix
Y8fOmjWrsLBQ1EJbgTPpSbqbN2+ev79/Tk6OXuFJqEivqqoqISFhypQpQUFB
tbW1uoQnQ+npDkSHZjXKBlpZenq6yyGMqaVXVFSE3T00Mn36dC3SO3XqFPow
PzdRVlbmg9vQlixZsmHDhuLiYrhuwYIFw4cPx/869vecSQ8ywV5y8eLFiPDw
4cN6hSfhTHqIGRv94MGDMHNAQAClZ3HQnNeuXZuZmXnERkFBgZYqYWrpNdqG
OStWrNAiPW/jUHoY2MbHx8t6Qdc0ODh40qRJXrpPXwvqw9tNmzb5+fkZVnoy
KEZKz+JgGLt9+/Zt27a5ewmE2aWHztvq1asNK72Kigq7LRIbG4spDx065PMA
z6IuvcTERFNILyQkhNKzOOjmLVq0CDVh3bp1Bw4c0K6+NiC9NWvWGFZ6LUFX
aubMmRjt+iwwO9Sll5SUNGrUKONLDxNQehansLBw6dKlkydPHj58OCoDOj8a
mxWlJwqN0luwYEF0dLTLE0zeg9ITCKWnI6dPn0bvrrKy8uDBg9OmTRs5ciS8
p+VoOaUnCi3Sy8vLw44JY15fBmYHpScQSs8gwH7z588fO3ZsVlaWy4kpPVG4
lB5ch964jqcwJCg9gVB6xuHIkSMTJkzYtm2by0syKD1RqEsPnfAtW7bs27fP
94HZQekJhNIzDuXl5WFhYVu3bqX0fIaK9NA2d+/ejXah+x0EjZSeUCg944CR
1MqVKw8ePNi2L05uVEjP948rscOZ9LDfSU1NhfTkJ7qcOXOmpKREr4DbhvRC
Q0MhPWx9HwdmB6VnHHJzc6OiosrKylxOaXbpVVVVLV++PCgoCBnvB6uGQ+nB
eDt37kQLxf/y+3Q2bNjw448/6tU1VZEevomLi/Pz80tLS9P3cQTq0sNeY+rU
qePHj9f3lFAjpacfdXV1a9eujYiIKCoqQlPC//iocWdtaulhxbOyssLDw9HT
Q7dWX+85lB7agnSXqJIZM2boeHBP5d7b48ePr169GgHDyaWlpQLv0XMXFemh
hufk5MyaNUsqRn0f4EDp6QWqa2Ji4syZM0NCQpYuXYrhnvYXC5paehghHlXw
888/+yRkxziUHnZAR1uQn5+v42DcmfSwByksLJSDRLELfMKqu6hID707DGTk
OE+cOKFjp5TS0xF4r6SkBBUVO2i36oCppWco+Dw9gfB5esR7UHqioPQEQukR
70HpiYLSEwilR7yH8aVXWFj48ssvo2o988wzBQbmu+++u/DCCxHnJ598oncs
ajz77LMIskuXLvn5+XrH4pTAwMCLL764Q4cO2N/pHYsaAwYMQGHefffdSUlJ
5YZH98saDYLxpZednS2102uvvbafgbnzzjvRSBFnt27d9I5FDRQjgoSf+/bt
q3csTunevXvHjh3bt2/ftWtXvWNRA+GhMDt37oz98vuGZ+3atT5u3cbE+NJL
S0vr0aNHO0KIZ2Aw4uPWbUyML72MjIzHH38cmwz9qIsMDHomUtU677zz9I5F
DYTXzvaKEL0DUeP88883RWFKfXtsenT57jIwlJ4S40uPJzLEwhMZAnnggQdQ
mDfddNMPP/ygdyxqYB9H6clQeqKg9ARC6YmF0lNC6YmC0hMIpScWSk8JpScK
Sk8glJ5YKD0llJ4oKD2BUHpiofSUUHqioPQEQumJhdJTYinpoZnX19fXNSH2
0UnapaeMQZkHGkV0xjkuf+tSeg0NDQ7DswsVkzmbA8JQTqkyE2dBeiI97Uu3
Wx13F9TYKunZVUK7kJz9yW4yd6supafEUtKrsz148N82Ro0apeXFSdrRKD00
yR07dvy7iV27dk2bNk3Ko6WreECmtrY2ISEhLCxs8eLFUVFR+/btW7Vq1WIb
8fHxLm81cim9vLw8OTyEOnbsWCm/ZMmS1atXo+EgP3LkSCzL2bOniouLQ0ND
pV+NGTNm27Zt8gwPHDgQEBAg5RGwsyA9kV5VVdXUqVOlRUyePHnLli3Y1sgj
8nXr1s2aNUv6EyJEZfjmm2+QHzFiBDaEuwtqbJX0UGgbNmxAJZEqIcILCgqS
Q4qNjZXLKicnR86npKTIkQcGBhYVFbkVJ6WnxFLSO3Xq1BdffHG+jauvvnrT
pk0ezlCJRulhHz137tzzm4BJevToIeWxglqes4dG/f7771933XX/8z//89RT
T2G5aHrIw2ODBw92+SRVl9JLTU2Vw5s/f/71118v5QcNGvTpp59eeumlyF95
5ZVoes4Em52d3atXL+lXiDMkJESe4fr162+55RYpP2DAAGcxeCK9EydOPPjg
g9Ii7r333uDg4GuuuQZ5RD5s2DCUmPQnRIiPF1xwAfJXXHHFwoUL3V1QY6uk
h0JDDbn44ouxXAQGP993331ySP7+/nJZ7d69W86vWLHimWeekfLdunXLyMhw
K05KT4nVpPfZZ59JV6dffvnlcXFxHs5QiXbpoUXLdwaFh4ejhUr55557TqP0
XnvtNenGirvvvtvPz+/GG2+U7ljp06eP59JDp0IOD36GTqX8wIEDP/nkE+mh
ChDI+PHjnUkPXWi0UOlXaNczZ86UZ4iuqRQtwFp4SXpwnbSIu+66a8qUKXBa
O9vtxtjlSXf3tLM9vwIfpVsqsCzo3d0FNbZWev/5z3+kW04QGLp52IhSSE8/
/TT61XJZofMp55cvX/7kk09K+ZtvvvngwYNuxUnpKbGa9L788stLbKADs3nz
Zg9nqES79BYtWtS5CezBn3jiCSmkl156SaP00OmCdv7rv/7r4YcfRt/gj3/8
I/KYw+uvv+659DBevqQJ9H/QxKT8O++8A0tcddVVyMOEWF9n0sO4rG/fvtIK
3nrrrfCJvL7R0dG33367NEMIzRvSKysrQ3dOWhwUh1HhDTfcgLkhcowN0ZuS
lv6Xv/wFH//7v/9bWp2wsDB3F9TYWulhNA3dSZVw+vTpjzzyiBzS999/Lxf+
nj175HxkZOQLL7wg5e+880729DzBUtKrq6tD5fmXDext9Tqmh/Hj+CZQe1et
WjXdxrp167Q8/Ke6uhougr0xOps8eXJ8fPy4ceOQxzfz5s1z+c4Il9IrLCz8
VxNJSUmYpxReTExMQkICHIJ8aGgo+iHODv5DO0uXLpVWEKNL5foeOXIEepFn
6A3pVVRUQLPS4tBThcPnzJmDxSFyrI5c2qtXr96yZcuMGTOk1XFXIxKtO6aH
MND7xXIR2N69e5ctWyaFtGbNGgxppzeBDSHnMzMzEbCUX7x4sbtvRqD0lFhK
elAK6swzNtCtwjjOwxkq0d7Tw1DltiZQ/91dELQ2YcIElMkrr7yCrtfKlSs/
/PBD5PENen2eSy87O/uZJtavX688UfiLDZcR5ubmvv3229IK9uzZE41aXt+0
tDQt6+hhT69fv37S4rCVIT3vXZzDS1bMiKWkZ8BjeujtuLsgXx7TQ++oFddy
qBzTQ09GyxwEHtNLTk6m9Cg9JZSeKCg9GUrPaFB6SiwlPQxvJ02a9IiNP/3p
Tzt37vRwhkq0H9OD6F5qohVDbGjto48+gui6du3aq1evyZMn9+jR44Ybbvjt
b387ZMgQz4e3OTk5cnjR0dFaLni2Iz8//+OPP37Uxl/+8pfIyMhHm9B42tHD
4e3gwYOlxb311lvp6enuzkE7lJ4ZsZr0YmNjJ9mYPn26xveha0S79Hbt2jWy
iVbEUFNTs3HjxpCQEHTDFi9enJmZib5NiQ20d5cvq3UpvWPHjsnhoWPWCukh
hhMKysvL5bzGd3N7Ir26ujrl0rVc791qKD0zYinptb3hLTp4K1ascGv45oPh
refw3luxUHpKKD1RUHoCofTEQukpofREQekJhNITC6WnxFLSQ/vNyMiIt5GY
mFhWVubhDJVoP6aXl5e3rYnjx4+7u6CTJ0/u3Llz/fr1UVFRsbGxRUVFYqVX
X18vv9dVyx0i3oDSEwulp8RS0msbPT0P4fP0BELpmRFKTxSUnkAoPbFQekoo
PVFQegKh9MRC6SmxlPTq6uogmQAbQUFBeXl5Hs5QifZjeikpKQFNHD16VGAM
WqD0BELpmRGrSW/JkiV/t/Hxxx+37sEazuA7MgRC6YmF0lPSBqSHvlN1dbWW
JqzX8FaK8MSJE5WVlbqrRkV6DQ0N5eXlpaWlJ0+e1CU2GS3SQ5HqcjmNEpfS
0145vUqblB62PtrUz80pLi52eQ+RqaWHuoR1TExM3Lhxo5Yn0ekivfr6+p07
dy5btmzBggXoZ27btk1fpTiTHuoPCmTx4sWIc+XKlenp6ToqRUV6CBta3r59
+6pVqxCzLuHJqEgPTS8/Pz/Ohu5ybpPSQ/EuWrRoTnOWL1+OZq7+Q1NL7/jx
47GxsbDNjBkztJgEYhwzZswfbNx///1oOGLWwYYz6e3atWvWrFlr1qyJjIwc
N27c2LFjY2JidGwFDqWHgf+6deugu6ioKJh5xIgRQUFBXr1VXx0V6WGjb926
NSAgwN/fvxVXOYrFmfRgvKysLOyL/fz8UKoub4j2Nm1PemhBmzdvDgkJQcva
aGPDhg34uGLFCpd3W5taemi2GI5JD57VIj0U1LFjx3JsHDlyxAcXJyPChQsX
IsjTNoqKitAKpk6dmpubK3DRbuFQehgXoNlipyDFCVGjgWCn6fJBVV5CvaeH
CGESI0uv0eY91DdKz0ugO5eQkFBTU4PKIL38tLKyEsZLTU11eTDB1NJrtN2e
gB6URul5FYfSw+gbglVOtn79+sDAwAMHDvg8wLM4lF5mZmZFRYX8EYWJnebc
uXNLSkr0iNH1Mb2IiAiDS08CPVJKzxtgh2L3xJ7CwkIMUvC/y9+aXXoQPvq3
hpVeS3bs2DF58mSxT7VyCy1nb9HlQ/8ZVUhpQl/iUnrY05lCeqgVlJ4PkK4E
W7VqlZZnl1F6otAovejo6EWLFuk1bGzUJj0UJkblGD4oX5DhS1xKD9XbFNKb
NGkSpecDpIPS27dv13KinNIThRbpYdMEBwdjbKvjNQxapJefn4+xrbuv3BII
pSeWNi+9ysrKefPmaTxUTumJQov0Nm3ahNbaimcRC0SL9MLDw/fs2ePLqOyg
9MTS5qW3b9++xYsXayxnSk8U6tKD6A4fPrxs2TLdL9lSlx7CS0pKUnkjrW+g
9MTS5qW3dOnSxMREjRNTeqJQkR4EUlBQ8OOPP+p+MW2jqzsy9u/fHxsbq7uZ
KT2xtG3pVVRUTJgwoaioSOP0lJ4onEkPbkHbRPcJ/8ueqaur00sszqSHeDIz
M3fs2CGXJCZA8erS5aP0xNK2pYdKO2/ePO1HjcwuPbRQ1P/g4GC9nvEr40x6
6N1t2LAhNzcXAqm1gTXavXt3ZWWlLnE6lB4qTEZGxubNm0tKSqQgUZ7p6en4
UpcTuC6lt3z58nHjxmnfuXsJl9ILDAycP3++lnskvUoblh6qbmhoqFuvczW7
9NCzXbJkSUBAgF5XlMk4lF5ZWRm+Hz58+EgFfn5+cXFxep3OcCg9+G306NEj
RoxQxolStbuy2meoSw+Rz5kzZ+zYsdnZ2b6PTYm69NDBw7bGupSXl/s+NiVt
WHrwA/YsLu+3VWJq6aEThc7J2rVrMcKNjY3V8YrfRifSww5oTQvQ8cvPz9cr
TofSQ0gt49yyZYte3VEV6aEvmpSUJG306OhoeE/HI5Aq0sP+AnUSQSLU+Ph4
ve5tkWjD0sMYCvXBrZ+YWnqGgs/TEwifpyeWNiy9VkDpiYLSEwilJxZKTwml
JwpKTyCUnlgoPSWUnigoPYFQemKh9JQYX3r5+fl9+vTBJnvsscdSDMznn39+
wQUXIM53331X71jUePzxxxHk1VdfvWfPHr1jccrw4cOxB+nQoUPv3r31jkWN
22+/HYV53XXXBQcH6x2LGpL0Pvjgg32G58iRIy6fAirQOcaUXnp6+qOPPio9
4729gWmnQO9Y1DBXkIxTCFKE559//sWGp2/fvt5+RaDxpZeWltajR492hBAL
8MILL6Cz5zPnGFN6ubm5GOOgNO6///5VBuZvf/sb9qSI880339Q7FqcsXLjw
zjvvRJCdO3fWOxY1XnvtNRRmx44dsen1jkWNLl26oDBvueWWKVOm6B2LU/7v
//4PQXbo0OHtt9+ONTC9evWi9CR++umnV155pZ3hT2QEBARIx/SQ0TsWp5SU
lDz55JMI8vrrr9c7FjVGjBhx4YUXwnufffaZ3rGoceONN6IwH3jggYMHD+od
i1OWLl2KIM8777zRo0frHYsa6DZQehJmOXtL6QmE0hPIsmXLKD0llJ4oKD2B
UHoCofTsoPREQekJhNITCKVnB6UnCkpPIJSeQCg9Oyg9UVB6AqH0BELp2WE1
6aHV79mzJzk5Gf+79Qwul7iUXnV1dUFBQV5e3rFjx0pLS/NsOHy8JL5MT09H
kLt3787NzVUPGF+iiDArzLyiokKarbNHqjqTXkNDg7REgLlJmaysrAMHDiCz
c+dOu3conz59uri4WF6WlCkvL8eqSZFUVlbaPaS0qqoKEyBCBFxuA6uJMpHz
yvm7lB6KRQry0KFDUpAoKyxa+vLo0aPy6iAkhzfcISR5K8irgG9QRMjk5+cj
L6+Os0cfeyK9oqIieRX2798vr8KuXbukL1H+0gRYWfwJGaxpKx6W2zrpoUpI
AWDrI5OWliaXp5RBqCkpKcikpqYePnxYyks1VprA3bfpUXoyYqW3fv36Bx98
sGvXrvfee6/Yh427lF5MTEzv3r2fffbZjz/+ePz48c/aQIVpOSWaW//+/RHk
nXfeGRwc/NBDDyGPluUwYLSRt956C7Pq16/f4sWLpdnGx8c7jMGZ9OCoQYMG
dbWxbt06KfPll1++/PLLyPzhD3+YNWuWcnpE8u2330rL2rJli5RZsGDB+++/
j8xLL720fPlypSiwRt9///0//vGPYcOGRUdH/8MGMpMmTULmn//859atW5VP
VXUpPcxNChIT9OnTB5nu3bvPnj37t7/9LfKBgYFvvvkmMpDSkiVLHD78GauM
yaTIt2/fLmUw25EjRyLz3HPPYTsiNqlgnb1b0BPpwUXSKnz++ed9+/ZF5u67
70Y533bbbch/+umnX331lTTB1KlT8SdkULAa33Jot6BWSA87KWyXm266CVsf
W02qkOCHH36QMjNnzuzRowcy//u///vdd989/PDD0ipMmTJFntKtOCk9GbHS
Q2O87rrrMLcuXbr4WHpwwiWXXIIJUFUGDx4sXX8eFxfXckpZTVdcccW4ceOk
gH/zm984DHjDhg2/+93vMMFVV101ZswYabZLly51GIMz6aGv9fzzz0u/jYiI
kDIwGOozMhdddBFsoJxevmIcrF27VsqMGjXqnnvuQeayyy6DzZTSQ9dLuq3m
6quvnjx5sjQ9zC/dCIxyW7hwoVJNLqWHVibNBC3lkUcekeYcFBQkffnNN99I
V7p26NBh7ty5DqUHD7/99tvS9NgfSZl33nkHnkemY8eO2EbYP0oFm5GR4TAM
T6Q3Z84ceaHSjZZY0MSJE6VKAmm/99570gTYrPgTMhBLK56U22rpYWeKX2Hr
DxkyRKo2YOXKlVJmwoQJ0ur//ve/x378hhtuaGe76B3VQJ7SrTgpPRmx0ouK
irr//vvR5NE8DSu9EydOvPvuu/fddx9qGtosdIQ8+h4OxwtCpIcajnp7nw10
hq+3gf07OjnI3HLLLditK6fXXXqIR4r2P//5z4svvogg77rrrpCQEClybIIB
AwYgg/5GeHi4MaW3evVqaRUgcHThEC069ujpdevWDflPPvkE5S+tDvpO+BMy
KHNf9vRQJdBzxtb/4osvXnnlFSkYuXrMmDEDEkamZ8+e2MugrKRVwK5HmoA9
PS0B+EB6eXl5GzduxAgO/6Paez5DGZfSw6J//PFHLDcxMfHQoUMHbRw7dqzl
lOh3hYWFYfCFcQ1GXmjgyKOOOZQe1J2cnJyUlIQpMcMkG87ebeFMerW1tdgv
B9rATAps/GRDytuVVU1NDYbVG21gWVJm37592dnZ+DkUgfVSDlcrKioQFcaz
sbGx+/fvj7aRlZUlfQnnZGZmuiU9/FCKFm0wPz8fERYWFhYVFUnRYukFTZSV
lTk8podVTk1NlSJH90nK7NmzB8FLq4Avpc2E2Jy9u9MT6aG4pFXAjlg6cohV
kAscGXy0y2MFW/HWv9ZJD5sD9U2OSg5GLmT5S2U9UW4Fd5+QT+nJtL3hLbSj
Xh/0Hd5u27bN5co67Ol99NFHzg6ze294i95IdXW1y4Bb4rCn99hjj7n1bmIh
w9sPPvjAq6+14tlbOyg9UVB6lJ5bUHp2UHoyYqWHsRWkhCbj7+9fXFzs+Qxl
XEoPQyc0c1S8efPmYcylMiv8NTQ0FEFCYhgPTpw40c/Pb8KECQ7bIwZfWJdh
w4ZBFBg+D7Oxd6/j7ehMeqdOnZo/f/53Npwdv7KLMDw8fLSNlJSUr2ysXr3a
2aUdGCh9/fXX/fr1Q8VetWpVPxsYUH/zzTfIvPbaa4jcLelhUCxFi7m17j3v
8HNERIQUOWqFlJk5c6Zbc/NEesnJyX42UG5efWszpWeH1aSHflHPnj1///vf
P/zww+5eR6SOS+lFRkZ27969W7dub775pvrhRPx14MCBCPLuu+9esWJFbW2t
9KJwh6/KTUhIeOKJJ26++eb77rtv2rRpN9uIiopyOGeVS1beeeed39vYtWuX
y5UtLCx87733utlIT0+vtqHywFsIDcZGTxU7Gkx53AYykCcy2BB2qnEpvUmT
JknRYsrWGeOXX36RLhQEcLWUQTm79RR9T6SHhZ6ygXLz6qP7KT07rCY9cw1v
MT1+pb5c3Ye3Bw4ccDm9u/hgeCsE3pEhEEpPRnhP79FHH0Vf6KGHHvJxTw+j
udtvvx3N5PXXX3fZ0xs8ePAdd9zx4IMPYuyjvty4uDj08Tp37oxuDwbCnW1g
0OdwYpWe3vvvv3+Hjd27d6svsdH24pIBAwZIy0JPz+X07uJSepMnT77FRqt7
ekKg9ARC6cmIld6ePXu+/PJLNPDPP//cx8f0kpOTv/jiC/RM0GDRs1KZFQZ9
06dPHzZs2DfffINfqS+3oKAgIiJi9uzZixcvTk1NnW3D3UtWMLoMCQmRjgdq
ab/oXMXExEjLEluMEi6lh7XebiM7O7uhoUF4ABqh9ARC6cmIlR66QH/4wx8w
bMSQ0Mc9PagJPZNrr722X79+Loe3f/rTnzp16nTllVcuWrRIYJAqw1sMVzvZ
0DK89TZ84IBAKD07rCa9tndMzy1EHdPzNpSeQCg9O6wmvS1btgwYMKBXr179
+/f3sfQiIyPvuece9DMHDhzo8pgeBsKwUN++fX/88UeBQTqTHoarGEo/b8Ph
MxB8DKUnEErPDqtJ78CBA5DSt99+6+/v7+Pb0LDoiRMnYrkYsapfjHr69Oma
mpoqGw6fPdVqnEnvl19+qWrC269a1gKlJxBKzw6rSc8Uw1vvwYeIioXSEwil
J0PpCYTSEwulJxBKT0as9HJyclasWBEeHo7/fXzJSmZmJpa7cOHC9evXe/Ve
SxUoPbFQegKh9GTaRk/vlyYELrEVuJSeEYJs1CA9IwTZSOkJRaD01KuH2aXX
0NCAhnz06FGHD4psie+lh/IvKytLT0/fvn373r17S0tLdWywKtKrq6vLzc3d
tWsX4kStE3sCxV2cSQ+bG/3zjIyM/fv3Y6NXVlbqFaGEivSkmnno0CGNNdN7
qEuvpqamoKBAbFtoHRqlh+aD7Z6Xl+fw+RvS6kAaKnMwtfQwSExJSZkzZ05I
SIjGh2Ps2LHjgw8+6N+//5AhQ8QeWHMmPVgO41kMbENDQ0eOHDl37lyxF0W7
hcqLgVCSERERixYt+v7778eNG7dt2zYdW6tD6Z05cwa6mzdvXlBQkPS8msjI
SB0Ls9GJ9KTd3O7du1EtAwMDdT8b7kx62K9hN7d27dqJEydu3bpVr/BktEgP
zfzw4cOoqChYu5u+6+vrobsffvgBf1K/0MvU0quurkYPClVr+vTpGqWHDY2G
j5aCDoOz5yC1DofSQ/1HdcrOzpaeMbJ69Wo/P79NmzYJXK5bOJMeYsPuAP+j
taJzAqWgVL1xf5lGHEoPO/EVK1agL4pGgSCxH0Fhbty4Uexb7dzCmfTQFcnK
yvL390dlMKz0UP+PHTsWFRU1atQos0gP7bewsDAsLGzMmDF20pNGATExMagV
bVh6jTbvoSFol573cCY96E4ez8I5aM7o+OkUo9rFyfJ4FtGiBzVt2jS71z76
EofSy8/Px6hW7n+iC40u3+zZs3Xs7KkMb1GMU6ZMMbL0JNBtMJH0JBISElpK
TyIzM3Ps2LFtW3rYy6P7ZFjp2YEOAPb+6AP4MjAlGs/eYoywfPlyHW/kdyg9
mFn5REHIBHIODQ01pvTArFmzjC89jBZNJz2MSpxJD7+1gvTWrFljCumh8sfH
x8fFxRnzRIYEYsM0ixYt0vdYmZZLViTprVy50rDP0wsJCTG+9HJyckwnveTk
ZGfSO3r0KKXnM1SkV19fn5eXFxsbiz/Be+rPlfIqKtKD7hDY3r17586di+6T
vqcdtUivqqpq/vz5CFjHnQilJxBKT6YNSA/jxIKCAkl6fn5+69ev1+uCEPWe
HkbfcMjChQuHDx+OInX2UD4foEV6u3fvRjdPxyeINlJ6QqH0ZNqA9Bpt/ShU
/mPHjuGvU6ZMwabxfYSNGoa30rMO4Gd4LyYmRq/Dei6lV1paih6p2EdGtAJK
TyCUnkzbkJ7Mzp07W15i5DM0nsiA94KDgyMjI/XqR6lLDwPbBQsWFBUV+T4w
Oyg9gVB6Mm1MemiqkyZN0usErkbpYfQdERGBYbheDVZFehUVFXFxcQUFBfI3
PKanDqVnRxuQ3urVq6dNm6bvsZ1GzdLDlnL5PD3vob2nt2TJEmcvz/UBzqRX
Xl6+Y8eOw4cPy9euVFdXo4bodc5FyyUr+t7Q16jhkhU/P7/ExETfB2aHwEtW
YmJiVH5udulJFycHBQUZU3oID/2llJQUhIcOSX5+/tKlS1HN9ArSmfT27dsX
GxtbWFgImaBnkpCQgI86FqmzOzJWrVo1d+7cH374IcbGxo0bUZ6Qs8M3AvsA
delNmTJl/PjxOl5RI+Hy4mRILz4+3veB2eHWxcnSW+Zb/km6ONnZe58lTC29
EydOoOZPnDhx5MiRGOTqeNFvoxPpVVZWouZjr4T/0Vo3bNhQXFysVwttdC69
LVu2oKoEBgaicxIWFgYHGvCBA2i82ND400gF2N9hV6JXnM6kV1RUhL0GGiZ8
snLlytzcXB3H4M6kd/LkSWzoOXPmDB8+PDg4eOfOnfr6WYv00KD27NmDaBFz
aGjo/v375ZsQsbOG8RYvXowa8v3332/btq2srMzhTEwtPUOh8pQV1CVsLN2f
ttHo6ikrCFL3sZgEn6cnEAs+WkodSk8UGo/p6QsfIioWSk8glJ4MpScQSk8s
lJ5AKD0ZSk8glJ5YKD2BUHoylJ5AKD2xUHoCofRkZOl16dKlt4H54x//2KFD
B8R5++236x2LU5577rmrrroKQV500UV6x6LGrbfe2sHGzTffrHcsalx88cUo
zMsvv/ypp57SOxan3H///Qiyffv2t912m96xqNG1a1dKT0KWHiGkzUPpNdou
xgsMDOxreJ5//vlHHnnkoYcewjBc71ic0qdPn8cffxxB9uzZU+9Y1EDNf9gG
uqZ6x6KGVJj4/6WXXtI7Fqf89a9/RZAozF69eukdi2tGjRrl7bcUGV96p0+f
Li0tLTA8OTk5Bw4ckN7SpXcsakivEktPT9c7EDWwr5cKE6WqdyxqHDx4EEHi
//z8fL1jcUpubi6CRHkePnxY71hcU1JS4u0rWo0vPUIIEQilRwixFJQeIcRS
UHqEEEtB6RFCLAWlRwixFEaTHhMTE5O3k3Gkx8TExOTjROkxMTFZKlF6TExM
lkqUHhMTk6USpcfExGSpROkxMTGZK82cNevhhx9+wQn4U2xsnMrPKT0mJiZz
pWef/dOkSZOSnPDhhx+OHj1G5eeUHhNTU0oecdPvbrzpd4PCf9I7Eia19Mqr
r0ZHRzszjL+/P6XHxKQ5/eq9EUm6h8GkltqQ9H5aNOjX/WzzNHhRbiuK5aft
SWd31ttH/e7GUclN3ydvP1ufda7bv0b169r5bffO/AvCB984KKzARWmohqdh
Mu+lgqTkAl1mnhs2yGsbhcnzlF9QiNT7xReXLVv2s402ID27kcWvjdftSuhg
PrZkmJ34ry2rdTJvRWpWGqaQXnNj+3TmXl00k4cJKrv66qu7det2ww033Hzz
zcj07Nmzvr6+jUmvVaYyvPSS/LzXx1MvDUpPfea6d3GZVBJUBqEpZdKlS5e2
Lj278a/sDUwzeFG4n+3Lr8fK09jqdlM1PnuM+tfU9PGcAH/tein/qlz0uR8q
Y7N1QR1833KN7KJV/WHzA+lJfg4H+HZD12aF1qTTpmkUAZwrjbBzXzpp4Mq2
3zQStz/agO8HhYdJAUsleW7KQWGLmttDMRPl6ijL5+z3ivJp0RmWeshnN7T9
BE7iVNYNvw0qM1dWtiQ/59uISbfUUnqdO3devHjxkua88cYbppaerSaf1YXd
0bkR59qsLe/EA4pfKUWnyNtquPL7ZrOV1frrZE0tRdlVczpWVc6q2Yqo9vR+
DR7B/Nr28VuHM1d+KelauRRbXiHGFqXRfGUdNmpH8zk7K/mjbVbnYlMeiDgr
rrNR2X4lbzhFMSo3qHJBTjtjZ/dNyqUo8o7jtKsbqj29cwWLOfjs+AOT1tRS
epdffvmQIUPea84bbwzIPJSlMh+jSa/FiQynw0A7mykar3vSsx/RnDOS3WzP
/UTTkUZ7s9lp1snPpT8l+Sk6ey2nPLeCiMTW3ToX8LkInUlP0eSdjeacfa80
RvNZ2R06UIiuxamBppk3l6GTpTRLNunZLcWhtBVzsBe7ivQU3WMaz4gJ0nvu
uefGKLjkkkuqq2vcnY/RpOdyNKEcHjqymf18XEmv5UJtA6LclrO1/7n68Kdl
47KNB1VUJv9q8KAWPTcHk9m+xwQjks52DpV6UZOe3ahTi/QUw71m0pOnadEj
PfdX5W/tNlyS44GqqvScLMVpnPYHclWkZ9P44EHNe4ZMhkpjx/nbpVbMxETS
s7vMw4nN7OfjtvTOtSwV6Z1NsoFbht2icSkW5FR6Ul9X/pPzAjk7h+QRTUfw
MJlswlpx0mtaQcUBNzelp6FXLPfwHSylWXKxFIdz0C69poGwT8+tM+mQzCM9
5wMoj6TnYnirLj0pOW5HrRneNh+LqbU+29xG+Z0bQg7yG6FYa0HSs98iyiFt
y0OsjreO8lioWmo2ZndzeKsSp2bpOd3ZMbW1ZC7p2R2QdyK9FicfFUfUm+ag
9USGQ+k1772oXSHj3omM5t+fbZ5Jfg4boFQCytWxP63gyE6tkF6z3qOz4a3L
ExnNj/7JpnLcV3RWPk5PZKjE2cJgTmaujP/sqmFxvHylLSbzSM/+whJFLXVY
sc+2DvtThGebg/ZLVuodfmx2gYTTpuHgkpWm8Jy0O7uzDCozb96DsjtD0WxW
TkqjVtMxPcWlPjYDOzz3al8m9pesNDtFZXduSP7erqhvbNndsr9kxb4j7SjO
lt02xzNvtjpSifHIXhtNRpIeU9tJ587aCEw82sYkIlF6TCJS86ORWo/juZko
PSYRidJjEpOUhwi8pCZKj0lEovSYmJgslSg9JiYmSyVKj4mJyVKJ0mNiYrJU
ovSYmJgslSg9JiYmSyVKj4mJyVKJ0mNiYrJUovSYmJgslSg9JiYmSyVdpMfE
xMSkY/Kx9AghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCE+5v8BD/St1A==
    "], {{0, 228.6}, {253.79999999999998`, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{120., 120.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{253.79999999999998`, 228.6},
  PlotRange->{{0, 253.79999999999998`}, {0, 228.6}}]], "Input",
 CellID->290924591,ExpressionUUID->"6ebfb598-9a9a-4efe-ad70-d2d03ee9b168"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples", "Subsection",
 CellChangeTimes->{{3.900072878647154*^9, 3.9000728795809755`*^9}},
 CellID->358110304,ExpressionUUID->"05296ddf-c995-441a-8810-ac7dcd26db98"],

Cell[CellGroupData[{

Cell["The seven partitions of 5 are.", "MathCaption",
 CellChangeTimes->{{3.900072881589919*^9, 3.900072887844391*^9}},
 CellID->280442444,ExpressionUUID->"fc84aebc-d6a9-460e-8163-9cb2145ffd28"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"Column", "[", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", "5", "}"}], ",", 
     RowBox[{
      RowBox[{"Inactive", "[", "Plus", "]"}], "@@@", 
      RowBox[{"Rest", "[", 
       RowBox[{"IntegerPartitions", "[", "5", "]"}], "]"}]}]}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9000728894004316`*^9, 3.900072894899353*^9}, {
  3.9000729599881063`*^9, 3.9000729939919662`*^9}},
 CellLabel->"In[965]:=",
 CellID->264630673,ExpressionUUID->"935f1f13-19f4-4f64-9671-3006df85d57a"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3L9u01AUx/EKFkbyCCiv0IGVqWIFocytKFWWIrVIiL5BB8TAEmaGICGG
DllAQoisIGVjqgQLU94hHHqkK8t202v7nmv7+vtRqdI03Ovk+F+dX869g+eP
nt3a2dk5vSPfHu2/fHBysv/q8V354cnx6fTo+PDpw+MXh0eHJ/cPbsudF/Lv
jfz7f3sDwMxyuTwvkDvbXi6UkNLsFMidbS8XSmix2LJ6QYvV9lLAC8Xqkexu
cDabrVartpcI1yqeYOzt7a3X67aXCyWyp+7T6XQ0Gmm92l4u3Ey2Ka1X2wsC
L7u7uxSrFxaLhVRqPB63vSAoMZ/P3TFLDlV6jiEla3u5UMIVSMk2RaU6K7tl
cZUJAAAAAAAAADpuNpudn5/P53OLwfWKMdeKg9C3HS0CGFKm8XhM1jcUjV7o
G/oBi3V5eenKpINTrOYmk4kUa7VaBd+yZFgZUEZ2AcWAgw+Q7gDlgCW3gxfL
HaQoVnO6A3QF8i/Wjy8fK01EsZrTHaCL4PoX6/und5UmolgNya4vl2WiWJ01
upL9ZJYGnPR28fHrv7///PqpX18/vHW35f4b56JYDRU/85hVfLzUZfXtQr8+
v3/tbsv9N85FsRoqfpp4+5aVxW6wdcGPWS6XqGlS+a4/yt/LzZYU4YuVS/w6
XCRsLviF3GziN4stCwAAAAAAAAD8rddrvdxq18JusVjo9Vta5DXhgrjOdDoN
OL5Ux+U8LcYfFFnbR6ORvIDZFnYB3yXR97Pc+Fovozh98mTNz7aC1A0t4Jvv
l1fcj5qnmkwmocYfsmI4Lazlcmnx2YfhkDVfj/6ywssreXZ25vO/qiZylewA
XVQbNejaruSY5blZVU03ba5OO+VkIxsARlVuy3InGD7HrBrF0hMMWuSFIoXT
mG7pb5skcrVSnAeGpSfbpb+ql8iVnZ4eDalUWHpY8emR67kblAH1M49Uqrls
lq/SH8WexdJKyfdcbpCQZw25a01SLM9NwLNY133qgdB7Ddm13eI8rTSOy5YF
AAAAAAAAAJVESORuovTITb4Nr3UidxOlR+5A2vCaJnIj9MgdVBte60RuhB65
g23DGzyRG6FH7qDa8MZJ5NZ4JWnDWxQnkVvjlaSlYVGcRC7FCs4ukev5StKG
t5LgiVzl+UrShtdf8ESuw26wOetEbpMeubThzbFO5DbpkUsb3hzrRG6EHrm0
4QUAAAAAAABqs26LGqftavIhT+u2qHHarg4k5GndFtV6/EGFPK3bokZouzrY
kKd1W1SL8QcV8szyb4saoe0qIc8tKrVFjdB2lcDMFpXaokZou0qxruPTFjVC
21VCntv5t0WN0HaVkOcWtduiRmi7ym4wp3Zb1AhtVwl55pTGI33WzwhtVwl5
5pTGIwNeDrUef0PIEwAAAAAAAMAwREjMptF2td3Qb4TEbBptV7sQ+jVNzKbR
drU7oV/rxGwabVe7GfoNnphNo+1qN0O/doncGk8zjSmMmCZyazzNNKYwYprI
7eYr2dNiWSdyPZ9mGlPYsU7kKs+nmcYURqwTuU4391H92g1aJ3I73na1X6Hf
2onZNNqu9iv0W5plDXitMo22q4R+AQAAAAAAAHSBddY0jbhs61NYZ03TiMu2
PoV11jSNuGx3prDOmqYRl+3IFNZZ0zTisl2boupipBGX7ekUVRcjjehRT6eg
WD2awucxacRlE5jC5zFpxGUTmILdYPenqJ01TSMu268pamdN04jL9msK66xp
GnHZNKYAAABAT/0Dbj0nuw==
    "], {{0, 106.2}, {85.8, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{85.8, 106.2},
  PlotRange->{{0, 85.8}, {0, 106.2}}]], "Output",
 CellChangeTimes->{
  3.900072895314312*^9, {3.9000729661860933`*^9, 3.900072994535822*^9}},
 CellLabel->"Out[965]=",
 CellID->35628591,ExpressionUUID->"a84a74ff-2a96-40b7-94c1-9aa056d2b384"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["We can also use a list.", "MathCaption",
 CellChangeTimes->{{3.900073004710287*^9, 3.9000730089836383`*^9}},
 CellID->489125552,ExpressionUUID->"f1131df1-9430-429d-8318-ab72e645011a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"Column", "[", 
   RowBox[{"IntegerPartitions", "[", "5", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9000728894004316`*^9, 3.900072894899353*^9}, {
  3.9000729599881063`*^9, 3.9000730177860384`*^9}},
 CellLabel->"In[966]:=",
 CellID->248975590,ExpressionUUID->"5ab50ee1-7383-42b5-b863-ddb7e0448381"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 106.2}, {90., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{90., 106.2},
  PlotRange->{{0, 90.}, {0, 106.2}}]], "Output",
 CellChangeTimes->{3.9000730187234383`*^9},
 CellLabel->"Out[966]=",
 CellID->193259272,ExpressionUUID->"9d84d5c8-6ecd-46cd-874c-a11f7514e028"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Some authors treat a partition as a decreasing sequence of summands, rather \
than an expression with plus signs. For example, the partition 2+2+1 might \
instead be written as the tuple (2,2,1) or even in the more compact form ",
 Cell[BoxData[
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["2", "2"], ",", "1"}], ")"}]], "InlineFormula",
  FormatType->StandardForm,ExpressionUUID->
  "510cc188-94a2-4bb7-8658-320d40614829"],
 ", where the superscript indicates the number of repetitions of a part."
}], "MathCaption",
 CellChangeTimes->{{3.9000730211311417`*^9, 3.9000730769599915`*^9}},
 CellID->54997474,ExpressionUUID->"f67eefef-5dee-4f8a-a8f5-f87b318c5d79"],

Cell[CellGroupData[{

Cell[TextData[{
 "This multiplicity notation for a partition can be written alternatively as ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SuperscriptBox["1", 
     SubscriptBox["m", "1"]], 
    SuperscriptBox["2", 
     SubscriptBox["m", "2"]], 
    SuperscriptBox["3", 
     SubscriptBox["m", "3"]]}], "..."}]], "InlineFormula",
  FormatType->StandardForm,ExpressionUUID->
  "62acfb86-caa4-478a-b5c5-4d4faa40e99d"],
 ", where ",
 Cell[BoxData[
  SubscriptBox["m", "1"]], "InlineFormula",
  FormatType->StandardForm,ExpressionUUID->
  "454a94f7-fde6-4d43-96fa-0fa780041e22"],
 " is the number of 1's, ",
 Cell[BoxData[
  SubscriptBox["m", "2"]], "InlineFormula",
  FormatType->StandardForm,ExpressionUUID->
  "31e52fe7-bf43-4942-ba7f-de8d5a4fedec"],
 " is the number of 2's, etc. (Components with ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["m", "i"], "=", "0"}]], "InlineFormula",
  FormatType->StandardForm,ExpressionUUID->
  "9a8b323e-f7d9-4485-99c7-c9c067c15e85"],
 " may be omitted). For example, in this notation, the partitions of 5 are \
written "
}], "MathCaption",
 CellChangeTimes->{{3.900073078595463*^9, 3.9000731606718607`*^9}},
 CellID->437533660,ExpressionUUID->"cef10c47-f5ff-4fd7-a68f-29744c2be777"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Counts", "/@", 
  RowBox[{"IntegerPartitions", "[", "5", "]"}]}]], "Input",
 CellChangeTimes->{{3.9000731624008064`*^9, 3.900073180381226*^9}},
 CellLabel->"In[967]:=",
 CellID->310310876,ExpressionUUID->"019b1a15-3578-4e7e-8632-6803fa64780f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{"5", "\[Rule]", "1"}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"4", "\[Rule]", "1"}], ",", 
     RowBox[{"1", "\[Rule]", "1"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"3", "\[Rule]", "1"}], ",", 
     RowBox[{"2", "\[Rule]", "1"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"3", "\[Rule]", "1"}], ",", 
     RowBox[{"1", "\[Rule]", "2"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"2", "\[Rule]", "2"}], ",", 
     RowBox[{"1", "\[Rule]", "1"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"2", "\[Rule]", "1"}], ",", 
     RowBox[{"1", "\[Rule]", "3"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{"1", "\[Rule]", "5"}], "\[RightAssociation]"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.900073180791939*^9},
 CellLabel->"Out[967]=",
 CellID->225244872,ExpressionUUID->"829d6143-e3a9-4b2a-aa68-295df55a19d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"KeyValueMap", "[", "f", "]"}], "/@", 
  RowBox[{"Counts", "/@", 
   RowBox[{"IntegerPartitions", "[", "5", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9000731847385197`*^9, 3.900073192069762*^9}},
 CellLabel->"In[968]:=",
 CellID->423174809,ExpressionUUID->"fc84a7fb-957e-4a6d-b571-4ae1298894d7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"f", "[", 
     RowBox[{"5", ",", "1"}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"4", ",", "1"}], "]"}], ",", 
     RowBox[{"f", "[", 
      RowBox[{"1", ",", "1"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"3", ",", "1"}], "]"}], ",", 
     RowBox[{"f", "[", 
      RowBox[{"2", ",", "1"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"3", ",", "1"}], "]"}], ",", 
     RowBox[{"f", "[", 
      RowBox[{"1", ",", "2"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"2", ",", "2"}], "]"}], ",", 
     RowBox[{"f", "[", 
      RowBox[{"1", ",", "1"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"2", ",", "1"}], "]"}], ",", 
     RowBox[{"f", "[", 
      RowBox[{"1", ",", "3"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"f", "[", 
     RowBox[{"1", ",", "5"}], "]"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9000731924603643`*^9},
 CellLabel->"Out[968]=",
 CellID->121433291,ExpressionUUID->"820f1b2c-9f1c-4451-9290-964f027130c5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"KeyValueMap", "[", "Superscript", "]"}], "/@", 
  RowBox[{"Counts", "/@", 
   RowBox[{"IntegerPartitions", "[", "5", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9000731847385197`*^9, 3.9000732063358755`*^9}},
 CellLabel->"In[969]:=",
 CellID->3269446,ExpressionUUID->"6348f0ea-22e1-4cb7-94e3-487a821a2845"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    TemplateBox[{"5", "1"},
     "Superscript"], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"4", "1"},
      "Superscript"], ",", 
     TemplateBox[{"1", "1"},
      "Superscript"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"3", "1"},
      "Superscript"], ",", 
     TemplateBox[{"2", "1"},
      "Superscript"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"3", "1"},
      "Superscript"], ",", 
     TemplateBox[{"1", "2"},
      "Superscript"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"2", "2"},
      "Superscript"], ",", 
     TemplateBox[{"1", "1"},
      "Superscript"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"2", "1"},
      "Superscript"], ",", 
     TemplateBox[{"1", "3"},
      "Superscript"]}], "}"}], ",", 
   RowBox[{"{", 
    TemplateBox[{"1", "5"},
     "Superscript"], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.900073206738529*^9},
 CellLabel->"Out[969]=",
 CellID->171650254,ExpressionUUID->"5bdf2d95-4502-47b1-bae6-fb3ab454b1a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Row", "[", 
    RowBox[{
     RowBox[{"KeyValueMap", "[", "Superscript", "]"}], "[", "#", "]"}], "]"}],
    "&"}], "/@", 
  RowBox[{"Counts", "/@", 
   RowBox[{"IntegerPartitions", "[", "5", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9000731847385197`*^9, 3.900073220886936*^9}},
 CellLabel->"In[970]:=",
 CellID->314297534,ExpressionUUID->"00dae796-8049-408e-843c-c1463655fd31"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     TemplateBox[{"5", "1"}, "Superscript", SyntaxForm -> SuperscriptBox]},
    "RowDefault"], ",", 
   TemplateBox[{
     TemplateBox[{"4", "1"}, "Superscript", SyntaxForm -> SuperscriptBox], 
     TemplateBox[{"1", "1"}, "Superscript", SyntaxForm -> SuperscriptBox]},
    "RowDefault"], ",", 
   TemplateBox[{
     TemplateBox[{"3", "1"}, "Superscript", SyntaxForm -> SuperscriptBox], 
     TemplateBox[{"2", "1"}, "Superscript", SyntaxForm -> SuperscriptBox]},
    "RowDefault"], ",", 
   TemplateBox[{
     TemplateBox[{"3", "1"}, "Superscript", SyntaxForm -> SuperscriptBox], 
     TemplateBox[{"1", "2"}, "Superscript", SyntaxForm -> SuperscriptBox]},
    "RowDefault"], ",", 
   TemplateBox[{
     TemplateBox[{"2", "2"}, "Superscript", SyntaxForm -> SuperscriptBox], 
     TemplateBox[{"1", "1"}, "Superscript", SyntaxForm -> SuperscriptBox]},
    "RowDefault"], ",", 
   TemplateBox[{
     TemplateBox[{"2", "1"}, "Superscript", SyntaxForm -> SuperscriptBox], 
     TemplateBox[{"1", "3"}, "Superscript", SyntaxForm -> SuperscriptBox]},
    "RowDefault"], ",", 
   TemplateBox[{
     TemplateBox[{"1", "5"}, "Superscript", SyntaxForm -> SuperscriptBox]},
    "RowDefault"]}], "}"}]], "Output",
 CellChangeTimes->{3.9000732212812004`*^9},
 CellLabel->"Out[970]=",
 CellID->88738759,ExpressionUUID->"b4325782-4817-4e8b-840f-f2e122f9c940"]
}, Open  ]]
}, Open  ]],

Cell["I have a function for this now.", "MathCaption",
 CellChangeTimes->{{3.9000737430778646`*^9, 3.900073746964694*^9}},
 CellID->189405354,ExpressionUUID->"ee2b1b1d-b9a3-4341-971d-2db40fad492a"],

Cell[CellGroupData[{

Cell["Write a partition in plus notation.", "MathCaption",
 CellChangeTimes->{{3.9000736520519085`*^9, 3.900073656891362*^9}},
 CellID->14389982,ExpressionUUID->"bf823441-0068-483c-b241-d1a174c94efb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PartitionPlusNotation", "[", 
  RowBox[{"{", 
   RowBox[{"2", ",", "2", ",", "1"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.900073657755516*^9, 3.900073670266632*^9}},
 CellLabel->"In[1475]:=",
 CellID->551713149,ExpressionUUID->"33ce7b33-1cb9-4350-8670-428caca02ac6"],

Cell[BoxData[
 RowBox[{"2", 
  TagBox["+",
   "InactiveToken",
   BaseStyle->"Inactive",
   SyntaxForm->"+"], "2", 
  TagBox["+",
   "InactiveToken",
   BaseStyle->"Inactive",
   SyntaxForm->"+"], "1"}]], "Output",
 CellChangeTimes->{3.9000736706631765`*^9, 3.9000737516968527`*^9},
 CellLabel->"Out[1475]=",
 CellID->303061784,ExpressionUUID->"bdbb4d63-dfeb-4620-b079-6d566942da44"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Make a column of integer partitions for 5.", "MathCaption",
 CellChangeTimes->{{3.9000736886485653`*^9, 3.9000736976273384`*^9}},
 CellID->27082361,ExpressionUUID->"4fd65377-56fe-4c73-ac5e-e5bbd50d9760"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"Column", "[", 
   RowBox[{"PartitionPlusNotation", "/@", 
    RowBox[{"IntegerPartitions", "[", "5", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9000736989153876`*^9, 3.900073714340556*^9}},
 CellLabel->"In[1476]:=",
 CellID->94794786,ExpressionUUID->"3b218fd8-ced8-4a0e-8569-25b42ed9a4d4"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3L9u01AUx/EKFkbyCCiv0IGVqWIFocytKFWWIrVIiL5BB8TAEmaGICGG
DllAQoisIGVjqgQLU94hHHqkK8t202v7nmv7+vtRqdI03Ovk+F+dX869g+eP
nt3a2dk5vSPfHu2/fHBysv/q8V354cnx6fTo+PDpw+MXh0eHJ/cPbsudF/Lv
jfz7f3sDwMxyuTwvkDvbXi6UkNLsFMidbS8XSmix2LJ6QYvV9lLAC8Xqkexu
cDabrVartpcI1yqeYOzt7a3X67aXCyWyp+7T6XQ0Gmm92l4u3Ey2Ka1X2wsC
L7u7uxSrFxaLhVRqPB63vSAoMZ/P3TFLDlV6jiEla3u5UMIVSMk2RaU6K7tl
cZUJAAAAAAAAADpuNpudn5/P53OLwfWKMdeKg9C3HS0CGFKm8XhM1jcUjV7o
G/oBi3V5eenKpINTrOYmk4kUa7VaBd+yZFgZUEZ2AcWAgw+Q7gDlgCW3gxfL
HaQoVnO6A3QF8i/Wjy8fK01EsZrTHaCL4PoX6/und5UmolgNya4vl2WiWJ01
upL9ZJYGnPR28fHrv7///PqpX18/vHW35f4b56JYDRU/85hVfLzUZfXtQr8+
v3/tbsv9N85FsRoqfpp4+5aVxW6wdcGPWS6XqGlS+a4/yt/LzZYU4YuVS/w6
XCRsLviF3GziN4stCwAAAAAAAAD8rddrvdxq18JusVjo9Vta5DXhgrjOdDoN
OL5Ux+U8LcYfFFnbR6ORvIDZFnYB3yXR97Pc+Fovozh98mTNz7aC1A0t4Jvv
l1fcj5qnmkwmocYfsmI4Lazlcmnx2YfhkDVfj/6ywssreXZ25vO/qiZylewA
XVQbNejaruSY5blZVU03ba5OO+VkIxsARlVuy3InGD7HrBrF0hMMWuSFIoXT
mG7pb5skcrVSnAeGpSfbpb+ql8iVnZ4eDalUWHpY8emR67kblAH1M49Uqrls
lq/SH8WexdJKyfdcbpCQZw25a01SLM9NwLNY133qgdB7Ddm13eI8rTSOy5YF
AAAAAAAAAJVESORuovTITb4Nr3UidxOlR+5A2vCaJnIj9MgdVBte60RuhB65
g23DGzyRG6FH7qDa8MZJ5NZ4JWnDWxQnkVvjlaSlYVGcRC7FCs4ukev5StKG
t5LgiVzl+UrShtdf8ESuw26wOetEbpMeubThzbFO5DbpkUsb3hzrRG6EHrm0
4QUAAAAAAABqs26LGqftavIhT+u2qHHarg4k5GndFtV6/EGFPK3bokZouzrY
kKd1W1SL8QcV8szyb4saoe0qIc8tKrVFjdB2lcDMFpXaokZou0qxruPTFjVC
21VCntv5t0WN0HaVkOcWtduiRmi7ym4wp3Zb1AhtVwl55pTGI33WzwhtVwl5
5pTGIwNeDrUef0PIEwAAAAAAAMAwREjMptF2td3Qb4TEbBptV7sQ+jVNzKbR
drU7oV/rxGwabVe7GfoNnphNo+1qN0O/doncGk8zjSmMmCZyazzNNKYwYprI
7eYr2dNiWSdyPZ9mGlPYsU7kKs+nmcYURqwTuU4391H92g1aJ3I73na1X6Hf
2onZNNqu9iv0W5plDXitMo22q4R+AQAAAAAAAHSBddY0jbhs61NYZ03TiMu2
PoV11jSNuGx3prDOmqYRl+3IFNZZ0zTisl2boupipBGX7ekUVRcjjehRT6eg
WD2awucxacRlE5jC5zFpxGUTmILdYPenqJ01TSMu268pamdN04jL9msK66xp
GnHZNKYAAABAT/0Dbj0nuw==
    "], {{0, 106.2}, {85.8, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{85.8, 106.2},
  PlotRange->{{0, 85.8}, {0, 106.2}}]], "Output",
 CellChangeTimes->{3.9000737150910125`*^9, 3.900073756176503*^9},
 CellLabel->"Out[1476]=",
 CellID->112879944,ExpressionUUID->"36015fbe-9a93-4fc2-9da5-c671323d0df3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["There is now a function for superscript notation too now.", \
"MathCaption",
 CellChangeTimes->{{3.900074149248005*^9, 3.900074156282267*^9}},
 CellID->5883902,ExpressionUUID->"7ce923fb-f996-40bf-8d0b-e99b9a21517f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PartitionSuperscriptNotation", "/@", 
  RowBox[{"IntegerPartitions", "[", "5", "]"}]}]], "Input",
 CellChangeTimes->{{3.9000741570504484`*^9, 3.900074164580449*^9}},
 CellLabel->"In[2932]:=",
 CellID->132395633,ExpressionUUID->"55d107ba-208e-4ec6-b760-c9834c240474"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     TemplateBox[{"5", "1"}, "Superscript", SyntaxForm -> SuperscriptBox]},
    "RowDefault"], ",", 
   TemplateBox[{
     TemplateBox[{"4", "1"}, "Superscript", SyntaxForm -> SuperscriptBox], 
     TemplateBox[{"1", "1"}, "Superscript", SyntaxForm -> SuperscriptBox]},
    "RowDefault"], ",", 
   TemplateBox[{
     TemplateBox[{"3", "1"}, "Superscript", SyntaxForm -> SuperscriptBox], 
     TemplateBox[{"2", "1"}, "Superscript", SyntaxForm -> SuperscriptBox]},
    "RowDefault"], ",", 
   TemplateBox[{
     TemplateBox[{"3", "1"}, "Superscript", SyntaxForm -> SuperscriptBox], 
     TemplateBox[{"1", "2"}, "Superscript", SyntaxForm -> SuperscriptBox]},
    "RowDefault"], ",", 
   TemplateBox[{
     TemplateBox[{"2", "2"}, "Superscript", SyntaxForm -> SuperscriptBox], 
     TemplateBox[{"1", "1"}, "Superscript", SyntaxForm -> SuperscriptBox]},
    "RowDefault"], ",", 
   TemplateBox[{
     TemplateBox[{"2", "1"}, "Superscript", SyntaxForm -> SuperscriptBox], 
     TemplateBox[{"1", "3"}, "Superscript", SyntaxForm -> SuperscriptBox]},
    "RowDefault"], ",", 
   TemplateBox[{
     TemplateBox[{"1", "5"}, "Superscript", SyntaxForm -> SuperscriptBox]},
    "RowDefault"]}], "}"}]], "Output",
 CellChangeTimes->{3.900074165026705*^9},
 CellLabel->"Out[2932]=",
 CellID->56684042,ExpressionUUID->"ff785669-20e2-4aec-acbd-9f38ea79ce1e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Write {2,2,1} in partition plus notation.", "MathCaption",
 CellChangeTimes->{{3.9000746588371687`*^9, 3.900074670677653*^9}},
 CellID->149332221,ExpressionUUID->"ac107ad5-de76-427d-a00e-b417f3e58385"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PartitionPlusNotation", "[", 
  RowBox[{"{", 
   RowBox[{"2", ",", "2", ",", "1"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.9000746713833942`*^9, 3.900074674592272*^9}},
 CellLabel->"In[3442]:=",
 CellID->10961951,ExpressionUUID->"52da5fbc-1a15-49bb-8c9a-99d838f49771"],

Cell[BoxData[
 RowBox[{"2", 
  TagBox["+",
   "InactiveToken",
   BaseStyle->"Inactive",
   SyntaxForm->"+"], "2", 
  TagBox["+",
   "InactiveToken",
   BaseStyle->"Inactive",
   SyntaxForm->"+"], "1"}]], "Output",
 CellChangeTimes->{3.9000746749794264`*^9},
 CellLabel->"Out[3442]=",
 CellID->444330609,ExpressionUUID->"cedf4810-f7ba-47eb-b96a-14ac81a539a6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Go back to {2,2,1}:", "MathCaption",
 CellChangeTimes->{{3.900074676002513*^9, 3.9000746793613234`*^9}},
 CellID->415746986,ExpressionUUID->"9fd51bbb-91a7-4c01-a43c-b84a54c4d3d7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FromPartitionPlusNotation", "[", 
  RowBox[{"2", 
   TagBox["+",
    "InactiveToken",
    BaseStyle->"Inactive",
    SyntaxForm->"+"], "2", 
   TagBox["+",
    "InactiveToken",
    BaseStyle->"Inactive",
    SyntaxForm->"+"], "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.900074680500264*^9, 3.900074682897608*^9}},
 CellLabel->"In[3443]:=",
 CellID->69651621,ExpressionUUID->"e0d359b0-4716-4e40-b992-39274e83848d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "2", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.9000746832408133`*^9},
 CellLabel->"Out[3443]=",
 CellID->22352005,ExpressionUUID->"37ae216c-eddb-461d-aef8-405f3df5c999"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["List@@ would also work here:", "MathCaption",
 CellChangeTimes->{{3.9000746849016857`*^9, 3.9000746905029707`*^9}},
 CellID->124557680,ExpressionUUID->"7959f05f-32a4-41e3-8e85-b15f466a17f1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"List", "@@", "2"}], 
  TagBox["+",
   "InactiveToken",
   BaseStyle->"Inactive",
   SyntaxForm->"+"], "2", 
  TagBox["+",
   "InactiveToken",
   BaseStyle->"Inactive",
   SyntaxForm->"+"], "1"}]], "Input",
 CellChangeTimes->{{3.9000746911953273`*^9, 3.900074700153404*^9}},
 CellLabel->"In[3444]:=",
 CellID->25705024,ExpressionUUID->"43af13d4-ecb4-4271-8a2e-29fec400ace7"],

Cell[BoxData[
 RowBox[{"2", 
  TagBox["+",
   "InactiveToken",
   BaseStyle->"Inactive",
   SyntaxForm->"+"], "2", 
  TagBox["+",
   "InactiveToken",
   BaseStyle->"Inactive",
   SyntaxForm->"+"], "1"}]], "Output",
 CellChangeTimes->{3.90007470086656*^9},
 CellLabel->"Out[3444]=",
 CellID->172335873,ExpressionUUID->"55a03681-0f20-48ad-aa75-ee27b1b6e84e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
There is one time when List@@ will not work. That time is for a single \
integer.\
\>", "MathCaption",
 CellChangeTimes->{{3.900074702247138*^9, 3.9000747137973657`*^9}},
 CellID->29470894,ExpressionUUID->"b55f31a6-228c-4289-9529-0228b0704818"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"List", "@@", "5"}]], "Input",
 CellChangeTimes->{{3.9000747155411997`*^9, 3.9000747170812902`*^9}},
 CellLabel->"In[3445]:=",
 CellID->944641248,ExpressionUUID->"5f7c625a-3e9d-4e7d-8847-bd159b418a7c"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.9000747174562597`*^9},
 CellLabel->"Out[3445]=",
 CellID->3634980,ExpressionUUID->"9b477820-310b-40e3-b223-9ca3dab57bae"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["We wanted to return {5}, the way IntegerPartitions[5] does.", \
"MathCaption",
 CellChangeTimes->{{3.9000747199621677`*^9, 3.9000747317781334`*^9}},
 CellID->167370326,ExpressionUUID->"e45c785c-d492-489a-bfef-ed3aea469066"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerPartitions", "[", "5", "]"}]], "Input",
 CellChangeTimes->{{3.90007473279992*^9, 3.900074734998575*^9}},
 CellLabel->"In[3446]:=",
 CellID->5850158,ExpressionUUID->"a57924e9-9f0e-4f69-bb4c-3e5c1ad9b93e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "5", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9000747353907647`*^9},
 CellLabel->"Out[3446]=",
 CellID->726673322,ExpressionUUID->"ae5e20aa-e582-4f24-8eca-f9bf70898d3c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["We can use FromPartitionPlusNotation for this edge case.", "MathCaption",
 CellChangeTimes->{{3.900074736733077*^9, 3.9000747447719593`*^9}},
 CellID->639695839,ExpressionUUID->"44405ee1-1aa8-4999-a4ed-a82b7853c48a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PartitionPlusNotation", "/@", 
  RowBox[{"IntegerPartitions", "[", "5", "]"}]}]], "Input",
 CellChangeTimes->{{3.900074748924193*^9, 3.900074753921568*^9}},
 CellLabel->"In[3447]:=",
 CellID->849206,ExpressionUUID->"cbadf56a-0774-4f60-8d87-4d3d4d318af1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", 
   RowBox[{"4", 
    TagBox["+",
     "InactiveToken",
     BaseStyle->"Inactive",
     SyntaxForm->"+"], "1"}], ",", 
   RowBox[{"3", 
    TagBox["+",
     "InactiveToken",
     BaseStyle->"Inactive",
     SyntaxForm->"+"], "2"}], ",", 
   RowBox[{"3", 
    TagBox["+",
     "InactiveToken",
     BaseStyle->"Inactive",
     SyntaxForm->"+"], "1", 
    TagBox["+",
     "InactiveToken",
     BaseStyle->"Inactive",
     SyntaxForm->"+"], "1"}], ",", 
   RowBox[{"2", 
    TagBox["+",
     "InactiveToken",
     BaseStyle->"Inactive",
     SyntaxForm->"+"], "2", 
    TagBox["+",
     "InactiveToken",
     BaseStyle->"Inactive",
     SyntaxForm->"+"], "1"}], ",", 
   RowBox[{"2", 
    TagBox["+",
     "InactiveToken",
     BaseStyle->"Inactive",
     SyntaxForm->"+"], "1", 
    TagBox["+",
     "InactiveToken",
     BaseStyle->"Inactive",
     SyntaxForm->"+"], "1", 
    TagBox["+",
     "InactiveToken",
     BaseStyle->"Inactive",
     SyntaxForm->"+"], "1"}], ",", 
   RowBox[{"1", 
    TagBox["+",
     "InactiveToken",
     BaseStyle->"Inactive",
     SyntaxForm->"+"], "1", 
    TagBox["+",
     "InactiveToken",
     BaseStyle->"Inactive",
     SyntaxForm->"+"], "1", 
    TagBox["+",
     "InactiveToken",
     BaseStyle->"Inactive",
     SyntaxForm->"+"], "1", 
    TagBox["+",
     "InactiveToken",
     BaseStyle->"Inactive",
     SyntaxForm->"+"], "1"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9000747542826066`*^9},
 CellLabel->"Out[3447]=",
 CellID->718486876,ExpressionUUID->"35a62eac-b924-48ce-936e-a428e59e889a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FromPartitionPlusNotation", "/@", 
  RowBox[{"PartitionPlusNotation", "/@", 
   RowBox[{"IntegerPartitions", "[", "5", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.900074746299683*^9, 3.900074756876322*^9}},
 CellLabel->"In[3448]:=",
 CellID->19159316,ExpressionUUID->"07fe522e-dac7-437a-9ab1-ca6ab90887e9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "5", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9000747572257166`*^9},
 CellLabel->"Out[3448]=",
 CellID->4545005,ExpressionUUID->"dea7a06a-12c8-4b31-802e-b89fc7f59ebf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["This is the inverse of PartitionPlusNotation.", "MathCaption",
 CellChangeTimes->{{3.900074759115367*^9, 3.900074765514346*^9}},
 CellID->218489595,ExpressionUUID->"e6f0257a-06d3-4837-a6e0-a1d2d0532453"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FromPartitionPlusNotation", "/@", 
   RowBox[{"PartitionPlusNotation", "/@", 
    RowBox[{"IntegerPartitions", "[", "5", "]"}]}]}], "===", 
  RowBox[{"IntegerPartitions", "[", "5", "]"}]}]], "Input",
 CellChangeTimes->{{3.900074746299683*^9, 3.9000747731934733`*^9}},
 CellLabel->"In[3449]:=",
 CellID->178115162,ExpressionUUID->"aad9c404-d661-4397-adb1-50b70606d709"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9000747735296307`*^9},
 CellLabel->"Out[3449]=",
 CellID->643979435,ExpressionUUID->"0a6de56c-48f6-4195-9beb-5bc14b12fc7e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here are the integer partitions of 5:", "MathCaption",
 CellChangeTimes->{{3.9000753465827703`*^9, 3.9000753512690945`*^9}},
 CellID->9893500,ExpressionUUID->"1ff57aa8-3664-4b9a-a2aa-eb8c108da90b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerPartitions", "[", "5", "]"}]], "Input",
 CellLabel->"In[4450]:=",
 CellID->196076816,ExpressionUUID->"2147182e-431e-4e6a-ab99-05ebac00aa5d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "5", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.900075352301712*^9},
 CellLabel->"Out[4450]=",
 CellID->52543288,ExpressionUUID->"3d9e9592-a5b0-4930-a1bd-14ed5def8be9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Here is a list of integer partitions in superscript notation:\
\>", "MathCaption",
 CellChangeTimes->{{3.900075312855364*^9, 3.900075321823906*^9}},
 CellID->107309808,ExpressionUUID->"0a9bb846-34d9-4c35-a2cf-51581714f137"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PartitionSuperscriptNotation", "/@", 
  RowBox[{"IntegerPartitions", "[", "5", "]"}]}]], "Input",
 CellChangeTimes->{{3.9000753230036793`*^9, 3.9000753296632333`*^9}},
 CellLabel->"In[4449]:=",
 CellID->344332983,ExpressionUUID->"3c53321a-5789-40aa-a57d-ba1f297b7f92"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     TemplateBox[{"5", "1"}, "Superscript", SyntaxForm -> SuperscriptBox]},
    "RowDefault"], ",", 
   TemplateBox[{
     TemplateBox[{"4", "1"}, "Superscript", SyntaxForm -> SuperscriptBox], 
     TemplateBox[{"1", "1"}, "Superscript", SyntaxForm -> SuperscriptBox]},
    "RowDefault"], ",", 
   TemplateBox[{
     TemplateBox[{"3", "1"}, "Superscript", SyntaxForm -> SuperscriptBox], 
     TemplateBox[{"2", "1"}, "Superscript", SyntaxForm -> SuperscriptBox]},
    "RowDefault"], ",", 
   TemplateBox[{
     TemplateBox[{"3", "1"}, "Superscript", SyntaxForm -> SuperscriptBox], 
     TemplateBox[{"1", "2"}, "Superscript", SyntaxForm -> SuperscriptBox]},
    "RowDefault"], ",", 
   TemplateBox[{
     TemplateBox[{"2", "2"}, "Superscript", SyntaxForm -> SuperscriptBox], 
     TemplateBox[{"1", "1"}, "Superscript", SyntaxForm -> SuperscriptBox]},
    "RowDefault"], ",", 
   TemplateBox[{
     TemplateBox[{"2", "1"}, "Superscript", SyntaxForm -> SuperscriptBox], 
     TemplateBox[{"1", "3"}, "Superscript", SyntaxForm -> SuperscriptBox]},
    "RowDefault"], ",", 
   TemplateBox[{
     TemplateBox[{"1", "5"}, "Superscript", SyntaxForm -> SuperscriptBox]},
    "RowDefault"]}], "}"}]], "Output",
 CellChangeTimes->{3.9000753343208876`*^9},
 CellLabel->"Out[4449]=",
 CellID->915079800,ExpressionUUID->"a4b99d03-46f7-4bbf-a527-891d01c697e1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Go back to the integer partitions of 5:", "MathCaption",
 CellChangeTimes->{{3.900075335748708*^9, 3.9000753436327934`*^9}},
 CellID->211360356,ExpressionUUID->"1a2d3f56-8e3a-4f62-804e-a6acf2854b15"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FromPartitionSuperscriptNotation", "/@", 
  RowBox[{"PartitionSuperscriptNotation", "/@", 
   RowBox[{"IntegerPartitions", "[", "5", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.900075354577298*^9, 3.9000753581217937`*^9}},
 CellLabel->"In[4451]:=",
 CellID->3069427,ExpressionUUID->"182f6674-88e1-40d6-a630-010d0bae4c86"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "5", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.900075358643423*^9},
 CellLabel->"Out[4451]=",
 CellID->518866367,ExpressionUUID->"74171715-5525-4f6a-986b-805ac15750df"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["This is the inverse of PartitionSuperscriptNotation.", "MathCaption",
 CellChangeTimes->{{3.9000753598068447`*^9, 3.900075366951315*^9}},
 CellID->103518963,ExpressionUUID->"2b71ba04-5db5-4d31-b1da-a262d2d459f6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FromPartitionSuperscriptNotation", "/@", 
   RowBox[{"PartitionSuperscriptNotation", "/@", 
    RowBox[{"IntegerPartitions", "[", "5", "]"}]}]}], "===", 
  RowBox[{"IntegerPartitions", "[", "5", "]"}]}]], "Input",
 CellChangeTimes->{{3.900075354577298*^9, 3.900075371667384*^9}},
 CellLabel->"In[4452]:=",
 CellID->193845607,ExpressionUUID->"dc5fa358-d60f-499e-b48d-5d2fb8561c68"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.90007537205859*^9},
 CellLabel->"Out[4452]=",
 CellID->940371513,ExpressionUUID->"2b4ca5ca-93ad-4fcb-834c-fbc89e6fc9be"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Diagrammatic representations of partitions", "Subsection",
 CellChangeTimes->{3.900075606763029*^9},
 CellID->461086206,ExpressionUUID->"249738cc-02a9-44c1-b2cc-53abc1db15da"],

Cell[TextData[{
 "There are two common diagrammatic methods to represent partitions: as \
Ferrers diagrams, named after Norman Macleod Ferrers, and  as Young diagrams, \
named after Alfred Young. Both have several possible conventions, here we use \
",
 StyleBox["English notation",
  FontSlant->"Italic"],
 ", with diagrams aligned in the upper-left corner."
}], "MathCaption",
 CellChangeTimes->{{3.900075610198883*^9, 3.900075681299698*^9}},
 CellID->16749771,ExpressionUUID->"76f12cf5-ba76-4859-868a-b0c6374aef9a"],

Cell[CellGroupData[{

Cell["Ferrers diagram.", "Subsubsection",
 CellChangeTimes->{{3.9000756879408703`*^9, 3.9000756907004366`*^9}},
 CellID->26228644,ExpressionUUID->"36413a72-44e6-4241-8c3a-125fb720249d"],

Cell[CellGroupData[{

Cell["\<\
The partition 6+4+3+1 of the number 14 can be represented by the following \
diagram:\
\>", "MathCaption",
 CellChangeTimes->{{3.90007582964283*^9, 3.900075842672921*^9}},
 CellID->287285731,ExpressionUUID->"1c6a7563-ab9b-482b-aa60-882eeb5be12d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FerrersDiagram", "[", 
  RowBox[{"{", 
   RowBox[{"6", ",", "4", ",", "3", ",", "1"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.90007584377164*^9, 3.90007584896799*^9}},
 CellLabel->"In[4453]:=",
 CellID->248216638,ExpressionUUID->"bcfe34e5-f02c-42e7-9dbd-f907fb046c11"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\
\<\"\[FilledCircle]\"\>"},
    {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "", ""},
    {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>", "", "", ""},
    {"\<\"\[FilledCircle]\"\>", "", "", "", "", ""}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.900075849400201*^9},
 CellLabel->"Out[4453]=",
 CellID->246903645,ExpressionUUID->"65292041-fa25-4312-a865-f68a7ce03d4b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The 14 circles are lined up in 4 rows, each having the size of a part of the \
partition. The diagrams for the 5 partitions of the number 4 are shown below:\
\
\>", "MathCaption",
 CellChangeTimes->{{3.900075857719554*^9, 3.900075885729094*^9}},
 CellID->639660458,ExpressionUUID->"55f76ca7-ed2a-4be2-a4c0-edfc6ad01fe8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"FerrersDiagram", "/@", 
   RowBox[{"IntegerPartitions", "[", "4", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900075886413706*^9, 3.900075896291483*^9}},
 CellLabel->"In[4454]:=",
 CellID->58663324,ExpressionUUID->"14461f20-d2ce-4e42-bb38-edf34121efe5"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    GridBox[{{
      "\"\[FilledCircle]\"", "\"\[FilledCircle]\"", "\"\[FilledCircle]\"", 
       "\"\[FilledCircle]\""}}, AutoDelete -> False, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
   TagBox[
    GridBox[{{
      "\"\[FilledCircle]\"", "\"\[FilledCircle]\"", "\"\[FilledCircle]\""}, {
      "\"\[FilledCircle]\"", "", ""}}, AutoDelete -> False, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
   TagBox[
    GridBox[{{"\"\[FilledCircle]\"", "\"\[FilledCircle]\""}, {
      "\"\[FilledCircle]\"", "\"\[FilledCircle]\""}}, AutoDelete -> False, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
   TagBox[
    GridBox[{{"\"\[FilledCircle]\"", "\"\[FilledCircle]\""}, {
      "\"\[FilledCircle]\"", ""}, {"\"\[FilledCircle]\"", ""}}, AutoDelete -> 
     False, GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
   TagBox[
    GridBox[{{"\"\[FilledCircle]\""}, {"\"\[FilledCircle]\""}, {
      "\"\[FilledCircle]\""}, {"\"\[FilledCircle]\""}}, AutoDelete -> False, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.9000758967690215`*^9},
 CellLabel->"Out[4454]=",
 CellID->613785148,ExpressionUUID->"6f7b870d-34d3-43cc-ab44-aa5d83248af6"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
AAUATzMuTUwkEpK6j2TyiYmJ3t7eXC7ndhkBAE1UKhVVVSWfSyc8mUyma2RC
ZiWTa5rGTUMA4AmSrrPZbDwer7+dX2alT04mBwBvKZfLuq5rNTLBODkAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACA1hSXr/SHpxZeul0O
e73M3L86/ma4LxK+MHr5u8zLXbt/wa8LUwPTD3+ze7MmilsLs4nRN6Q6ff1/
ff/Gw62iXVt++ezu5fjb56tbfnPk8t1Vm2rkXIFf291+eKl/atH+j+1Obm6k
b27DI5uVDW8kR8PJTfs37LUIY3txuroj+yuZ1z4tkZHL95VnGeVf1+IDkfOX
FrZtzOcv1JkRSVOnlMyN6ryRmHv4c2b154Wb7/eH+0Zv5nY633Kt9fvjV6qB
WtXuX5ZKyTfUr2e3wK/tbiufj8o3te2pprh5d3xAWtbmVOPQZvd2ixv33qvu
v7Ync69FGNXuZd/oyIjPkvnWnYuHarTz9IakrFu2fN53i/riF/Hqp/HUkvn2
D+PV6hx8Ge0+r74y/mC7ww3vZGYHIhe/yRwk2VdP5ZXzX2c6S7uOFbimmF+Y
iffX4m9rqtnZXv3uw9qhhK2pxqHNyoZ/zdxJvGnEwd5k7rEIQ7zavDkSmfpp
ezXpr2T+cmUm/vZMuu64fuvuxb7IzVzDtX6T77Vmy8i2F6fD1T7nff3nuVNK
5lKdwf4PfjqUCJ//e7TZ7rB5s+memL8fvxC5mal/aefJ5x1/GJwr8N7rZgpf
+PD7/NOWlt9rtWU3ktURofiXK6s/TduYaixstvYZa7pkNVzhgXdn0pmHUy0m
c39GGMZQmzH4sHEWkrnxETrpp+mHpLGdF5lbcpg/cnujcXezxWSu3Zhd3CpK
nzPXSTKv7Ykn/bTWESoqn0bCF+/qzX5F292q3dpBzZWV4wPctT3xpJ+WPjn2
Ffg3dfarBb3Y8vJ7Laeae9N3nlW31jiXGt/mJ/2cvEqLmz32K5on8zuXjBMc
L+1O5i5HGO0qpq+dH7i2/Ht1+kwk8+LmD9/evnXSz/ILq9vc/4J464vlplm3
tQ/kgY6S+faySWV/yDU/UWiMSI//2HjQwkoyN4bQZ5+d8LW3vXJygW/9uNm0
xM4U2OZUs69xqinmHpwch29XGlfP7mR+sLjNydzC8rZGGO2pXolxcELqTCRz
J7zYXH6WebJ4u8F5Pesdzo6SuXU7vzyYMj+f226/8dC6T29UzxonN+07T+lo
gZukGsst61CqabZZywdrTZJ5cCIcRLWzUfX7rG+T+b7aeb3wp+rxPuRBh/Pr
6YvSe7zecofTjWRezNyuXZnz4PkrkwUO+o3XxvsiFy/daLHfuL34yRuSyb9+
au81nM4VuGmqsdyyLiXzg4O12UvvhPveu9rqwVqTZB6cCAdRNQuZfKU6cbVq
ixwbMzesftOsK3KqwyxWumGv8+3nK61dY9nyMfJucfXbd8/39Y/f22rQJ7fQ
DXOqwO0ub+sggOWOLsMs+0jmtvn9+eqzTP3P959Gwn+fq15p/Ivdd3a0zsYx
8837IxfeuZOvf2nnyVeR8MDtM5PM2x0z39GrlxM3ybeHtbYn7m4vVy8nHp1J
N+mmtTlm7liBLSzPmPlr3ogwOuG3YZbiytW+yPmvnh6kkeo5gmaXT59qMm+P
cV5yarGty7Rb2RNrNw/aeztPjWMFtrT82Ug1JPN9JHPn+C2ZH76x8cni3AcX
IuGRuQ2TYVuLTi2Z/75ydSASfuvD2Ta7gs1t3R3pi4Tj1yxcoOJOgQ+xdO1l
C1xP5u1uuOVk3i6PRRh7fkzme8afHBn5/99mSaq67QNIp5XMi+lrli9QaUy/
904Hl467UODDPJZqSOb7SOYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AADW/A+bJKKl
    "], {{0, 98.39999999999999}, {297., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{120., 120.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{297., 98.39999999999999},
  PlotRange->{{0, 297.}, {0, 98.39999999999999}}]], "Input",
 CellID->61450319,ExpressionUUID->"f377a967-33c1-43bb-b8de-5addbeef8559"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Young diagram", "Subsubsection",
 CellChangeTimes->{{3.9000759177270517`*^9, 3.900075919377103*^9}},
 CellID->583792581,ExpressionUUID->"57beac2b-9ecc-4871-9c9c-60d9880e1b0c"],

Cell[CellGroupData[{

Cell[TextData[{
 "An alternative visual representation of an integer partition is its ",
 StyleBox["Young diagram",
  FontSlant->"Italic"],
 " (often also called a Ferrers diagram). Rather than representing a \
partition with dots, as in the Ferrers diagram, the Young diagram uses boxes \
or squares. Thus, the Young diagram for the partition 5+4+1 is"
}], "MathCaption",
 CellChangeTimes->{{3.9000759208221474`*^9, 3.9000759705723696`*^9}},
 CellID->328431948,ExpressionUUID->"1b369d83-083d-4174-b365-b72331596852"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3D9Im3kcx/GYP6BS5VTUW4TcKGIiGEHQgIIZ6uDQIhwqSkpzRRTF5KQ2
CDr4b1AE4XB2aiYdCurgdAhuGRw8URFENN5gRKJCL0L7LYEby7f3DXme+/4+
L1BsoR+eX5439pmeX96Mv/rN6XA4YsX07VX4fWc0Gv7w+if6Q+9YbPjdWOTt
y7HfI+8i0dY3LvrLX+nrM319+/njX5+/ABgAqYMhkDoYAqmDIZA6GAKpgyGQ
OhjCnqlns9l0Ov232M3NzfX1dSqVsskOLdAOrQkvJi87OfQ5Pz8/W33DC8Ge
qZ+cnPT09PwsVlNT4/F4ysvLhTuVlZVut1u+Qwu0U1VVJRmpra0tKyujc9Hp
hNdDent7z8/Prb7hhWDP1I+Ojtrb230+XzQafS8wMjLicDhaW1snJyclOx0d
HZRoMBiUjJCGhoaioiKqSzISi8UCgQClPjo6KtmZmJior6/v6uo6PT21+oYX
gp1Tj0Qid3d3/whcXFxQWtT54+OjZGdpaamkpGRxcVEyQgYGBpxO587OjmTk
/v5+fHy8oqLi8vJSskOPLv39/UjdWrnUh4eHHx4eJDtXV1eU+tTUFN1Zyc7y
8jKlTt8lI2RoaMjlcu3t7UlGnp6e6BdydXU1PatLdjKZzODgIFK3FlL/DqT+
3yB1DqSuAFLnQOoKIHUOpK4AUudA6gogdQ6krgBS50DqCiB1DqSuAFLnQOoK
IHUOpK4AUudA6gogdQ6krgBS50DqCiB1DqSuAFLnQOoKIHUOpK4AUudA6gog
dQ6krgBS50DqCtgz9cPDw0Ag0NTUtLKy8ofAwsKCw+EIhUJra2uSHVpwOp1t
bW2SEeL3++l6KDDJyOrqamdnJ13P1tbWnwLb29v0ISN1a+3v79fV1VEVxcXF
JQL0z2nE7XYLd6irb++jd7kkI4QWaIfWJCN0FjqR/MPJ6e7uPjs7s/qGF4I9
U08mk42NjV6vd2ZmZkkgHo9TEsFgcG5uTrLT0tJCldIzlWSE+Hw+eqCi/yMk
I3QWOhF1Pj09Lbwekkgk0um01Te8EOyZOp7Vv4POQieSP6ubBqlzIHUFkDoH
UlcAqXMgdQWQOgdSVwCpcyB1BZA6B1JXAKlzIHUFkDoHUlcAqXMgdQWQOgdS
VwCpcyB1BZA6B1JXAKlzIHUFkDoHUlcAqXMgdQWQOgdSVwCpcyB1BZA6B1JX
AKlzIHUFkDoHUlfAnqknk0m/3+/1eqmNtwJ9fX1a3xiA1H+UPVP/9z0wLjGt
74FB6j/Knqnn3u7V3NycSCQ+CWxsbNBv0XA4LHkLVu5FWOvr65ubm8IdWqCd
3d1d4Q45ODgQPpWZxp6p5+tZPZVKlZaWzs7O5uvC4P8LqYMhkDoYAqmDIZA6
GAKpgyGQOhgCqYMhkDoYAqmDIZA6GAKpgyGQOhgCqYMhkDoYAqmDIZA6GAKp
gyGQOhgCqYMhkDoYws6pBwKBeDw+KxCLxTweD1KHL3ZN/fj4OBQKvciT+fl5
qw8E1rNn6tls9vb2NpUnmUzG6gOB9eyZOkDeIXUwBFIHQyB1MARSB0MgdTDE
V8+h6ss=
    "], {{0, 52.8}, {149.4, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{120., 120.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{149.4, 52.8},
  PlotRange->{{0, 149.4}, {0, 52.8}}]], "Input",
 CellID->163219828,ExpressionUUID->"ef00dd01-a218-45e8-84ea-59f3800adfdd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["while the Ferrers diagram for the same partition is", "MathCaption",
 CellChangeTimes->{{3.900077516393174*^9, 3.9000775246924543`*^9}},
 CellID->150773254,ExpressionUUID->"b0c70c5b-5ada-459a-babc-de9ca2855d56"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt271qIlEYxnHZNFuZNDZa5S78qLZUuyzpVEiICWlcMIGwV6Dewl6Fn1un
9KNTb0ZBkifahIQYk9PM+87/B8ocxxfmwHDeMwPP6eWfs+sfiUTi7qe+zi4e
fjWbF39/n2hw3ri7vWnUr4qN+/pNvZm9PNKPNX3+6fNy/AQAAAAAAAAAAADg
AKvVaj6f93q9fr+/WCw0pNaizWYzHo+LxWIqlTre0kGpVJpMJjpFrSG6/m63
m06n8/l8p9P5v6UDDfWjbt09E4xbbfTpLtUsarXacDh8fEXDarWqU9PplFoT
1Cy04BQKhTdT2xkMBtlstlwur9draqNP3V8tQ+vM+6nttNtt/WG5XFIbfeog
yWRyNBp9NDud0iZB3YTa6NNl6+L3zE6Lj/6gPTy10ffpytNqtb69ajmrjb7d
riCXy317RxGfWhN2O3ZtzjWXN1OrVCqZTGY2m1FrhR6W1U00Qd2WWmdGWzrQ
UFNTB9n/JB6rWhN0/Xpk1grz+k2XhrpLD3lLFqtaK9Qs1P37Wzr4Uu+IWy0A
AAAAAAAAAAAsspgH8ZolCWExD+I4SxLCYh7Ed5YkhMU8iOMsSQiLeRDfWZIQ
FvMgvrMkISzmQXxnSUJYzIP4zpKEsJgH8Z0lCWExD+I+SxLCYh7Ed5YkhMU8
iPssSQiLeZA4ZElCWMyDkCUBAAAAAAAAAADA4ch0+ECmww0yHZ6Q6XCDTIcn
ZDo8IdPhCZkOT8h0eEKmwxkyHZ6Q6XCGTIc/ZDoAAAAAAACi7xkEP4QC
    "], {{0, 56.4}, {92.39999999999999, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{120., 120.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{92.39999999999999, 56.4},
  PlotRange->{{0, 92.39999999999999}, {0, 56.4}}]], "Input",
 CellID->4980958,ExpressionUUID->"ac0e4aaf-b37e-4f51-9d83-0d67ceb0e590"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Make a Young diagram for the integer partition of 10 5+4+1:", \
"MathCaption",
 CellChangeTimes->{{3.900077425748393*^9, 3.900077440086136*^9}},
 CellID->663660797,ExpressionUUID->"a4185259-817d-4f81-b6a0-8775fcc1bf85"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"YoungDiagram", "[", 
  RowBox[{"{", 
   RowBox[{"5", ",", "4", ",", "1"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.9000774418796186`*^9, 3.9000774468018427`*^9}},
 CellLabel->"In[5083]:=",
 CellID->312690437,ExpressionUUID->"04d08c68-4410-4dfc-8a98-919d122206eb"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", ""},
    {"\<\"\"\>", "", "", "", ""}
   },
   AutoDelete->False,
   GridBoxFrame->{
    "Columns" -> None, "Rows" -> None, 
     "ItemsIndexed" -> {{1, 1} -> True, {1, 2} -> True, {1, 3} -> 
       True, {1, 4} -> True, {1, 5} -> True, {2, 1} -> True, {2, 2} -> 
       True, {2, 3} -> True, {2, 4} -> True, {3, 1} -> True}},
   GridBoxItemSize->{"Columns" -> {{1.5}}, "Rows" -> {{1.5}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.900077447178627*^9},
 CellLabel->"Out[5083]=",
 CellID->613032058,ExpressionUUID->"1d6cd92f-b7f1-4415-9b1d-b9a8cd9c4440"]
}, Open  ]]
}, Open  ]],

Cell["\<\
While this seemingly trivial variation does not appear worthy of separate \
mention, Young diagrams turn out to be extremely useful in the study of \
symmetric functions and group representation theory: filling the boxes of \
Young diagrams with numbers (or sometimes more complicated objects) obeying \
various rules leads to a family of objects called Young tableaux, and these \
tableaux have combinatorial and representation-theoretic significance. As a \
type of shape made by adjacent squares joined together, Young diagrams are a \
special kind of polyomino.\
\>", "MathCaption",
 CellChangeTimes->{{3.900077532469648*^9, 3.900077637599372*^9}},
 CellID->440131695,ExpressionUUID->"947f3e82-6cc3-40d2-88b7-5d99fa9c6f74"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Partition function", "Subsection",
 CellChangeTimes->{{3.9000776614037857`*^9, 3.9000776637430573`*^9}},
 CellID->144939533,ExpressionUUID->"d8e72b12-edbc-468d-8708-68f5fe3ea00c"],

Cell[CellGroupData[{

Cell["\<\
The partition function p(n) counts the partitions of a non-negative integer \
n. For instance, p(4)=5 because the integer 4 has the five partitions \
1+1+1+1, 1+1+2, 1+3, 2+2, and 4. The values of this function for n=0, 1, 2, \
\[Ellipsis] are:\
\>", "MathCaption",
 CellChangeTimes->{{3.900077665488679*^9, 3.900077711594753*^9}},
 CellID->112941645,ExpressionUUID->"bfade2f7-0573-4934-a7f2-798bee0c1219"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"AssociationMap", "[", "PartitionsP", "]"}], "[", 
   RowBox[{"Range", "[", "30", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9000777128404913`*^9, 3.9000777300089226`*^9}},
 CellLabel->"In[5084]:=",
 CellID->538050170,ExpressionUUID->"e6d9d140-ea56-4624-ad44-d00ff46ff038"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      1 -> 1, 2 -> 2, 3 -> 3, 4 -> 5, 5 -> 7, 6 -> 11, 7 -> 15, 8 -> 22, 9 -> 
       30, 10 -> 42, 11 -> 56, 12 -> 77, 13 -> 101, 14 -> 135, 15 -> 176, 16 -> 
       231, 17 -> 297, 18 -> 385, 19 -> 490, 20 -> 627, 21 -> 792, 22 -> 1002,
        23 -> 1255, 24 -> 1575, 25 -> 1958, 26 -> 2436, 27 -> 3010, 28 -> 
       3718, 29 -> 4565, 30 -> 5604|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`AtomShape[34]]], 20, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Atom[Integer], 30], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`AtomShape[34]]], 20, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Atom[Integer], 30], "Path" -> {}, "DisplayedRowCount" -> 20,
      "DisplayedColumnCount" -> 1, "DataRowCount" -> 30, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 11, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["11"], 
                  Style[
                   RawBoxes["11"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[11]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["56"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["12"], 
                  Style[
                   RawBoxes["12"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[12]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["77"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["13"], 
                  Style[
                   RawBoxes["13"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[13]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["101"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["14"], 
                  Style[
                   RawBoxes["14"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[14]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["135"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["15"], 
                  Style[
                   RawBoxes["15"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[15]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["176"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["16"], 
                  Style[
                   RawBoxes["16"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[16]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["231"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["17"], 
                  Style[
                   RawBoxes["17"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[17]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["297"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["18"], 
                  Style[
                   RawBoxes["18"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[18]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["385"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["19"], 
                  Style[
                   RawBoxes["19"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[19]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["490"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["20"], 
                  Style[
                   RawBoxes["20"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[20]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["627"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["21"], 
                  Style[
                   RawBoxes["21"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[21]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[21]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["792"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[21]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["22"], 
                  Style[
                   RawBoxes["22"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[22]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[22]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1002"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[22]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["23"], 
                  Style[
                   RawBoxes["23"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[23]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[23]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1255"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[23]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["24"], 
                  Style[
                   RawBoxes["24"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[24]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[24]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1575"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[24]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["25"], 
                  Style[
                   RawBoxes["25"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[25]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[25]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1958"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[25]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["26"], 
                  Style[
                   RawBoxes["26"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[26]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[26]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2436"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[26]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["27"], 
                  Style[
                   RawBoxes["27"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[27]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[27]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3010"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[27]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["28"], 
                  Style[
                   RawBoxes["28"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[28]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[28]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3718"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[28]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["29"], 
                  Style[
                   RawBoxes["29"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[29]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[29]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4565"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[29]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["30"], 
                  Style[
                   RawBoxes["30"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[30]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[30]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5604"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[30]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 30, 1], {1, 30 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 30, 1], {1, 30 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 11, "\[Dash]", 30, " of ", 
                    Style[30, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 11, "\[Dash]", 30, " of ", 
                    Style[30, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 30, 1], {1, 30 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 30, 1], {1, 30 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{172., {286.3544921875, 291.6455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{172., {286.3544921875, 291.6455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.900077730414296*^9},
 CellLabel->"Out[5084]=",
 CellID->375574792,ExpressionUUID->"bb6271f3-0f4e-4d2e-b36b-42cb9f4887ed"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "This is sequence ",
 ButtonBox["A000041",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://oeis.org/a000041"], None},
  ButtonNote->"https://oeis.org/a000041"],
 " in the ",
 ButtonBox["OEIS",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://oeis.org"], None},
  ButtonNote->"https://oeis.org"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.9000777398662157`*^9, 3.900077759136469*^9}},
 CellID->22858985,ExpressionUUID->"911eabb8-f852-433a-8ae7-7a68d2b39b26"],

Cell[CellGroupData[{

Cell["The generating function of p is ", "MathCaption",
 CellChangeTimes->{{3.9000777782625446`*^9, 3.9000777836581864`*^9}},
 CellID->168140189,ExpressionUUID->"e3da6b67-b68e-42e6-8543-27faa58cbbd7"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnQlQFMf3x/dvjMbr532CCRGDBEUJAtEY8T5QFBSIilUxJoJGjXhbKt7x
LA9MGTEemBBvxTseiBqvqFFjxBPxjpp4IaKmygP2//3tK7rmt7vszs7O7rLr
+1RBzfTO9HS/1/36dc909/tfxnWNLaLRaIa9g39de49qMXRo79ER5XASNWjY
130HxfQJGTQ8pm/M0EZfvoXA7vhb9n8azX+Ptbbm9f39ibvaRqYUa5NSrPPm
vvNOXcx+bfOH2gcXzpp6zJgxA8WsWbNmL168yM3NdXRyGIZhrMXDwyMgIKBU
qVIwbmlpaY5ODsMwjLXAQ3ut4+XLl3l5eY5ODsMwDMMwDMMwDMMwDMMwDMMw
DMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDFMoyNXx+vVr6UKC
eXl5FO7AhLkeJGe9JYBwqid8xZDW3kxVGpVtbj6OShXjEDIzMzt27KjRaHr3
7r17924UDAQ+evQIpxodn3/+OZcKVdi4cePHH3/s7u4+atSo06dPQ6qog4mJ
iZGRkSTqefPmWRN/enp6kyZNhCpJa+fOnWvdujXF/9VXX7mkKpGp8ePHe3h4
BAUFzZkz5+7du1qdMUd+KeMNGjQ4c+aMo5PJ2AmUByh96dKlt2/fnj17No5j
Y2OfPn36wQcfnDhxgq5p2LAhyoxj0+kCoL2gFWj/+OOPcePG4RhSPXDgAA4e
Pnyo1VVDHEP4yuKHKkNDQ6WqRPzPnz8vW7bsypUr6RpXVeXy5cujo6OvXr26
Y8eOsLCwunXrwohNmTKlefPm2dnZuODkyZMQiEuadMaQx48fS3dMWLNmDU7R
5O3fv18EkunjImElsCfdu3enY/IuyJHYt2+fuGb06NH9+vVTtkot4omJiRGn
s2bNQuQBAQHHjh0TgS6pSmTH09NTCO3evXv+/v6wbCjG0suQ8VevXjkigYy9
SUhI6NOnjzhFCYmLi0MB2LBhg/Qy16sL9gcypA4+gWM/Pz8EbtmyRQReunSp
UqVKyuLv1avXokWLxCn0hRA9VZJD6GKqJFstDYFIS5Uqha69NKdNmzaFE2v3
1DEOgHpG4jQ9Pb1WrVpw3dH84ZgCUS9q167tYnXB/iQlJaEPKE7RMRw7diyE
36lTJyHbkJCQuXPnKov//v37UlXu2rXLy8sLIVJVpqSkQJUutmcBmTXRZCB3
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
q6h4KItQoJZgtaqOraGTYsJbQ4tsa29NrwwDKsNbt2418UQBeWtVq1ZVXGxc
Eni8gYGBcIOtFAvEix4KzJFoXA4fPqzRvTKgmC9evKgxNj8Fv9aoUQOetkgA
dV3xH3HqfaVGY2vwzLUSa4BaLKL69NNPEQIHQ1kuChpbM8R030frCLMG4UCV
sD/WqJLWi5MudjF8+HBNvsttDUbH1oxidBKTFBW9tenTp5sYW6PPJ2z3ysD6
Mkxja1ZO03Yx0OPo1KlT165drZdJTk4Ouo3SWolSVKFChTNnztApihBO9d6E
guPHj0uLXG7+Yon0kUbDhg2lJYrehNJutgj/5ptvcComWaMMly5dulWrVtaM
LMlseS0dW7O1WVNLlTTOKVYcgtbQ4pQpU4Y+57CGQvgmFJKHL2riTejOnTtt
bdb0yvCLFy8sKsO5ujehYWFhapk1SAwaR0Fy+FCDMnJ1HnijRo3u379vfWz0
olOj+/oCMdOghHSoExUE7pxh0aIxNzGjEPe2b9++fv36Dx8+RBuUnJwsvZgq
3cGDB+kUnU2covOLp4jZ3zi1PjvWY0+zpqIq0ZOF89y5c2etrhHx8fHR6D70
LVSFXMXv1qhPoTfki8zS8uBUqKCUNGPLsKuC0TI8depUmbfn6kabZ8yYoVZ6
0PmlNOzevVutOO0GZDhmzBi4r6dPn1YlQnoTl5SUhIajaNGiaG70Xt9A/v37
92/durVeBRFvsaUhqKEffvih4Twp9LCqVq36+PFjEeeSJUsQp5+fH55Ii0Ir
XnNJXexm1nJ1+71ClX/++afVqf4vKNjR0dFubm5NmjQhX+K7775TJWa1UNGs
3b59W9oHJEgjhtiipltZhumNA/6rlR7kvW3btiEhIU73DgIpT0hIKFasmFrS
QIQwRBDv3bt3aTKd0bq5efPmkiVL6n0Tm2ewpGSeZNlqaXiu7h2E4aJGtPY1
tIBfvby8Cskgg33MGu6dP3++iqokhPxpzFyttk8t1J0TGhoaGhERoRcu5lGS
KAg18/C/z1JchuFOoPVxgfWFrId8Xb0WSj6GKr5586acIQgoq0OHDhs3blT2
3PPnz5crV066mJ6Uy5cvIw3K1kW0BXYwa6LboqIq9X6NjIw0MaLuKNRdwQOt
bfny5W/cuGGbxFoAlWG4yvIH1urVq2f4eecbyP79+ytWrAhvTfEHqxC7dJAB
JYcmBdCEUNO3oxqiF6nAv4UG0SrNmjXLaLLhJVIvGP3WQuI828GsWa/Kbt26
GfXEyH/49ddfKUno3hYqy6auWUPWwsPD0QuwTWLl8uDBgzFjxlhUhkeOHNm9
e3d21S5cuODj4zNx4kTFLg18LT8/PyHJPN1GJA0aNECbDldKY27WEn6FAzBs
2DBLq8mkSZOioqKMajAtLa1o0aKVKlXy9PT09/e35xK4JrC1Wbt48WLdunUh
FsWqhJfSunVroyLNzV9wTGD2owt7ovrquDAjtWrVcuCorIIyfPDgQW9vb8Xf
MrkMWVlZLVq0iI2NVVzr4R5A+3PnzpUG0kt5GlKTU8VQhAIDA8XcHDls3boV
ujaR7Lz8rQBlpsEO2NSsWa9KyN/NzW3OnDkmrhHDpIVEpAJb7GWAYlmtWjW9
JRntCXnIMsvwnTt3ihcvbos3s84FCmePHj3atWunrCLgrvXr15ctWxbF4+TJ
k1YmxvB1gJwEWPlQO2M7s2alKnNycmg1HlVU6RBst/NUYTPgJnCipNoIlP+4
uLg6deqgSRLvd3INtsqV/kTN9M2bN1NTU3Gv2OooKCiI+/JyyM7OpqlMAAcm
1gSWf6VWokqx97FZVdJUfahyz549/fr1q1y5slCl0zUWREJCgjBWhkthSzlw
4IC40qn3CWX0QPGeNm3aO++8ExwcbPgpDgUa/lS/fv0SJUpoDCgMs8gLOY8e
PTp16pR0DQGNbtIfAqWf51l0JQErZKhKcezyqnz69GlGRsb+/fshAWlGkpOT
09PTHzx4IL347t27R48ebdKkid6VzrurOyOATZOuC209tIY2UxA0p9IEYi9C
sayW2SsJ1VUJK+EICSmHFhctCOlCHGaX1HBSN5URpCpljwSaS4ID7tGbZu/e
vUJchkgn4Mi/UvCGq7IgWRnmSP6VDMMwDMMwDMMUTtLT08ePH+9cb8ALA5Cb
pbeINWrMYqkuzp49S0p0gZGlnJwc6Wa+cuCiy0ihtYNoicXExEQuHjK5c+eO
RrJ2mWlWr169ePHi6Ohomat70UQAmZFr/1eJ8+bNc3Yl0i4Dcr41Qk7XrVs3
ffr0Dh068PerDJGVleXm5kblAf8rV65s9NsDxigwIzK9r8jIyLS0NPokQ6bN
QeQy/S5cVrt27cOHD+P4+vXrGudcTUsKcpSUlCTnSgizX79+Hh4eGit262AK
J6KmWDoXZsGCBZ6enlR98B/HKSkpNkmiy2GpRySW+ZLprcmP+fTp08K3wY2o
4/C6LUpboULBLBX6npzNmisRHx/v6+t75syZlStXli9fvnHjxitWrKCf8kyi
1W0YISoa1Tuxnx1TEDAgI0aMQD2idSHMCpmQadZQo/v06aORbJtiNn7asJVM
gbMrkeZDValShWZ+yZQtLRfPZs1lSE1NRfmnZU5pQ+Hx48d36dIFhfz8+fPB
Jjl37lxYWJiYqJir22gAIU5aI+wDhDN27NiZM2fSYmg4hcDh5Xp5efn4+NSr
V8/Pz8/f3z8oKAjtS9OmTdeuXStuJLNm2hXZtGkTfK0ZM2bQOg9mlYgLZs+e
LfXWnFeJyEKvXr2Q8piYGEhVTt7pxoJ2CGKclKioqF27dqESiZU3QkND0dyL
tts0ZNak3pqT1gh7glYD/wcOHEhbzOghXXBVgbdGbzNhEhctWiRuNA29L5B6
a06qRLhbaKaREW9vbxoMMZ1xceONGzfYrLkYKAYVKlQgpx01okaNGuS2ac1t
cYgL0FsRFY0aeuftv9iTXN1eM+iKas1taCVukWnWtLp3rGXKlMnMzBTPMh2/
1Ky5gBJpXxV6dWU278T9+/fZrLkYGRkZpUqVoiU30TPCMWoEzXQ2PXVOq9u2
WGyuiv+VKlXiVwZygLQrVqxIu6uTVSkIMeAj36yhh0t91QkTJmjlKVFq1qDE
DRs22DT7NiUhIQEdecqO2bwTT58+ZbPmYqAYBAQEUGUZN26cu7s79BsfH6+V
4cM/fPjQw8ODqif+4xghjs2OU3Do0CF4yLSshJyOEnkXZNZoKaGCYs7TrUgM
U+nr60ttkxwl1q1b1zWUCMmgjy+8TfmypRaEPyl3GdCmi50HUarbtWtn0e72
GzdurFKlCr1+UrzBypsGBC5/rw2tTkfS1YTIDSsI2lyyTZs28pV4/PhxNzc3
F1AislyrVi35u9JQKyCVLb8PdUkUtFaGgxWMUe7cuXPt2jWqSnp7N5vF0M1Q
F2dXIo0lZmRkwDjjv/wbSaS5+W9qbJZAhnFN+vfvHx4ePnv2bC8vL15GWF0C
AwOnTZsWExMzcuRItk4MYzfGjx9ftGjRsLCws2fPOjotrkZcXFzHjh0TEhK4
vWAYeyI6O45OiAuSZ/mcKYZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZh
GIZhGIZhGIZhGIZhGIZhLOL/AeyYvQw=
    "], {{0, 52.8}, {247.79999999999998`, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{120., 120.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{247.79999999999998`, 52.8},
  PlotRange->{{0, 247.79999999999998`}, {0, 52.8}}]], "Input",
 CellID->171493722,ExpressionUUID->"541db6b0-b44c-487a-849a-2af08eca2c0b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
No closed-form expression for the partition function is known, but it has \
both asymptotic expansions that accurately approximate it and recurrence \
relations by which it can be calculated exactly. It grows an exponential \
function of the square root of its argument, as follows.\
\>", "MathCaption",
 CellChangeTimes->{{3.9000777967128954`*^9, 3.900077798867609*^9}, {
  3.900077867054182*^9, 3.9000779214768467`*^9}},
 CellID->425199380,ExpressionUUID->"2049f498-61e9-4b07-a3e5-5896a27acd18"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscreteAsymptotic", "[", 
  RowBox[{
   RowBox[{"PartitionsP", "[", "n", "]"}], ",", 
   RowBox[{"n", "->", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900077922271137*^9, 3.90007794312859*^9}},
 CellLabel->"In[5086]:=",
 CellID->567180853,ExpressionUUID->"05e3b8fd-9fbd-4279-91b9-29010d66f39a"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    SqrtBox[
     FractionBox["2", "3"]], " ", 
    SqrtBox["n"], " ", "\[Pi]"}]], 
  RowBox[{"4", " ", 
   SqrtBox["3"], " ", "n"}]]], "Output",
 CellChangeTimes->{{3.9000779350380697`*^9, 3.900077943550419*^9}},
 CellLabel->"Out[5086]=",
 CellID->171827270,ExpressionUUID->"2df18776-7826-4eda-9ee2-b47878a5f618"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
hWBUycDAwKAQ/w9h80ov
    "], {{0, 42.}, {264.59999999999997`, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{120., 120.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{264.59999999999997`, 42.},
  PlotRange->{{0, 264.59999999999997`}, {0, 42.}}]], "Input",
 CellID->205450397,ExpressionUUID->"c63e7c61-f079-4c6a-8d46-6e61b1bc9ce7"]
}, Open  ]],

Cell["\<\
The multiplicative inverse of its generating function is the Euler function; \
by Euler's pentagonal number theory this function is an alternating sum of \
pentagonal powers of its argument.\
\>", "MathCaption",
 CellChangeTimes->{{3.900077959285353*^9, 3.9000780140683603`*^9}},
 CellID->260924008,ExpressionUUID->"097f7c7a-db48-428d-ae22-44ab9e4f77c9"],

Cell[CellGroupData[{

Cell["Consider the partition {5,4,2,2}.", "MathCaption",
 CellChangeTimes->{{3.9000065157341146`*^9, 3.9000065222782693`*^9}, {
  3.9000725451908655`*^9, 3.9000725459526753`*^9}},
 CellID->570772345,ExpressionUUID->"a5692f5c-bd25-4168-b172-b2ae2232effa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{"{", 
   RowBox[{"5", ",", "4", ",", "2", ",", "2"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.9000065321780643`*^9, 3.900006534700157*^9}},
 CellLabel->"In[90]:=",
 CellID->374203769,ExpressionUUID->"b2d43888-27d6-4393-9ff2-ee8b8fbac695"],

Cell[BoxData["13"], "Output",
 CellChangeTimes->{3.90000653506013*^9, 3.9000101083605633`*^9},
 CellLabel->"Out[90]=",
 CellID->467322294,ExpressionUUID->"4b1ff8d8-7031-44c1-9eaf-1ff5ceeb8268"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Check if this is a weakly decreasing list of positive integers.\
\>", "MathCaption",
 CellChangeTimes->{{3.9000065501946516`*^9, 3.90000662208891*^9}, 
   3.900006839646222*^9},
 CellID->12645158,ExpressionUUID->"8e33ff63-35b1-435a-9f8c-e4b7bb088a94"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerPartitionQ", "[", 
  RowBox[{"{", 
   RowBox[{"5", ",", "4", ",", "2", ",", "2"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.9000065229669657`*^9, 3.9000065297566385`*^9}},
 CellLabel->"In[80]:=",
 CellID->135890274,ExpressionUUID->"b5a92f35-b9ea-4589-a437-678d3516d40b"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9000065302382145`*^9},
 CellLabel->"Out[80]=",
 CellID->241632484,ExpressionUUID->"80fe7841-b456-4359-a2d4-a0587dcc88bc"]
}, Open  ]]
}, Open  ]],

Cell["\<\
An integer partition is a multiset of positive integers and so not ordered. \
Therefore, any order can be used to represent it. Typically, the order chosen \
is weakly decreasing, as here; some people choose weakly increasing.\
\>", "MathCaption",
 CellChangeTimes->{3.9000101248082266`*^9},
 CellID->400266598,ExpressionUUID->"2d6de947-ac1f-42f0-96e2-959d87c987c8"],

Cell[CellGroupData[{

Cell["Here are the integer partitions of 13.", "MathCaption",
 CellChangeTimes->{{3.9000101320897427`*^9, 3.9000101370025883`*^9}},
 CellID->33841937,ExpressionUUID->"852f7470-90d3-437a-b27e-77217fdafaa6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", "IntegerPartitions", "]"}]], "Input",
 CellChangeTimes->{{3.900010139503587*^9, 3.900010145388351*^9}},
 CellLabel->"In[91]:=",
 CellID->70495569,ExpressionUUID->"2bcd8fbb-d48a-41a3-aa49-22f016fc7001"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/IntegerPartitions",
              ButtonNote->"paclet:ref/IntegerPartitions"],
             "\"paclet:ref/IntegerPartitions\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"IntegerPartitions\\\", \\\"[\\\
\", StyleBox[\\\"n\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives a list of all \
possible ways to partition the integer \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) into smaller integers. \
\\n\\!\\(\\*RowBox[{\\\"IntegerPartitions\\\", \\\"[\\\", RowBox[{StyleBox[\\\
\"n\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"k\\\", \\\"TI\\\"]}], \
\\\"]\\\"}]\\) gives partitions into at most \\!\\(\\*StyleBox[\\\"k\\\", \
\\\"TI\\\"]\\) integers. \\n\\!\\(\\*RowBox[{\\\"IntegerPartitions\\\", \\\"[\
\\\", RowBox[{StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
StyleBox[\\\"k\\\", \\\"TI\\\"], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives \
partitions into exactly \\!\\(\\*StyleBox[\\\"k\\\", \\\"TI\\\"]\\) integers. \
\\n\\!\\(\\*RowBox[{\\\"IntegerPartitions\\\", \\\"[\\\", RowBox[{StyleBox[\\\
\"n\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives \
partitions into between \\!\\(\\*SubscriptBox[StyleBox[\\\"k\\\", \
\\\"TI\\\"], StyleBox[\\\"min\\\", \\\"TI\\\"]]\\) and \
\\!\\(\\*SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\) integers. \\n\\!\\(\\*RowBox[{\\\"IntegerPartitions\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"kspec\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"s\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"s\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives partitions involving only \
the \\!\\(\\*SubscriptBox[StyleBox[\\\"s\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\). \
\\n\\!\\(\\*RowBox[{\\\"IntegerPartitions\\\", \\\"[\\\", RowBox[{StyleBox[\\\
\"n\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"kspec\\\", \\\"TI\\\"], \\\",\\\
\", StyleBox[\\\"sspec\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"m\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) limits the result to the first \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) partitions. \"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/IntegerPartitions", 
                    "paclet:ref/IntegerPartitions", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
IntegerPartitions.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
IntegerPartitions.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`IntegerPartitions\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/IntegerPartitions",
              ButtonNote->"paclet:ref/IntegerPartitions"],
             "\"paclet:ref/IntegerPartitions\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"IntegerPartitions\\\", \\\"[\\\
\", StyleBox[\\\"n\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives a list of all \
possible ways to partition the integer \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) into smaller integers. \
\\n\\!\\(\\*RowBox[{\\\"IntegerPartitions\\\", \\\"[\\\", RowBox[{StyleBox[\\\
\"n\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"k\\\", \\\"TI\\\"]}], \
\\\"]\\\"}]\\) gives partitions into at most \\!\\(\\*StyleBox[\\\"k\\\", \
\\\"TI\\\"]\\) integers. \\n\\!\\(\\*RowBox[{\\\"IntegerPartitions\\\", \\\"[\
\\\", RowBox[{StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
StyleBox[\\\"k\\\", \\\"TI\\\"], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives \
partitions into exactly \\!\\(\\*StyleBox[\\\"k\\\", \\\"TI\\\"]\\) integers. \
\\n\\!\\(\\*RowBox[{\\\"IntegerPartitions\\\", \\\"[\\\", RowBox[{StyleBox[\\\
\"n\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives \
partitions into between \\!\\(\\*SubscriptBox[StyleBox[\\\"k\\\", \
\\\"TI\\\"], StyleBox[\\\"min\\\", \\\"TI\\\"]]\\) and \
\\!\\(\\*SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\) integers. \\n\\!\\(\\*RowBox[{\\\"IntegerPartitions\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"kspec\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"s\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"s\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives partitions involving only \
the \\!\\(\\*SubscriptBox[StyleBox[\\\"s\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\). \
\\n\\!\\(\\*RowBox[{\\\"IntegerPartitions\\\", \\\"[\\\", RowBox[{StyleBox[\\\
\"n\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"kspec\\\", \\\"TI\\\"], \\\",\\\
\", StyleBox[\\\"sspec\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"m\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) limits the result to the first \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) partitions. \"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"IntegerPartitions\", \"[\", StyleBox[\"n\", \"TI\"], \"]\
\"}]\) gives a list of all possible ways to partition the integer \
\!\(\*StyleBox[\"n\", \"TI\"]\) into smaller integers. \n\
\!\(\*RowBox[{\"IntegerPartitions\", \"[\", RowBox[{StyleBox[\"n\", \"TI\"], \
\",\", StyleBox[\"k\", \"TI\"]}], \"]\"}]\) gives partitions into at most \
\!\(\*StyleBox[\"k\", \"TI\"]\) integers. \n\!\(\*RowBox[{\"IntegerPartitions\
\", \"[\", RowBox[{StyleBox[\"n\", \"TI\"], \",\", RowBox[{\"{\", \
StyleBox[\"k\", \"TI\"], \"}\"}]}], \"]\"}]\) gives partitions into exactly \
\!\(\*StyleBox[\"k\", \"TI\"]\) integers. \n\!\(\*RowBox[{\"IntegerPartitions\
\", \"[\", RowBox[{StyleBox[\"n\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\
\", SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \
\"}\"}]}], \"]\"}]\) gives partitions into between \
\!\(\*SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"min\", \"TI\"]]\) and \
\!\(\*SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"max\", \"TI\"]]\) \
integers. \n\!\(\*RowBox[{\"IntegerPartitions\", \"[\", \
RowBox[{StyleBox[\"n\", \"TI\"], \",\", StyleBox[\"kspec\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"s\", \"TI\"], StyleBox[\"1\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"s\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) \
gives partitions involving only the \!\(\*SubscriptBox[StyleBox[\"s\", \
\"TI\"], StyleBox[\"i\", \"TI\"]]\). \n\!\(\*RowBox[{\"IntegerPartitions\", \
\"[\", RowBox[{StyleBox[\"n\", \"TI\"], \",\", StyleBox[\"kspec\", \"TI\"], \
\",\", StyleBox[\"sspec\", \"TI\"], \",\", StyleBox[\"m\", \"TI\"]}], \"]\"}]\
\) limits the result to the first \!\(\*StyleBox[\"m\", \"TI\"]\) partitions. \
", "Documentation" -> <|
     "Local" -> "paclet:ref/IntegerPartitions", "Web" -> 
      "http://reference.wolfram.com/language/ref/IntegerPartitions.html"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
    "FullName" -> "System`IntegerPartitions"|>, True]]], "Output",
 CellChangeTimes->{3.9000101457603865`*^9},
 CellLabel->"Out[91]=",
 CellID->673523550,ExpressionUUID->"4e2ab228-392c-42f7-a647-ba772384fb1c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["These are all the partitions:", "MathCaption",
 CellChangeTimes->{{3.9000102552389517`*^9, 3.9000102612682743`*^9}},
 CellID->239448707,ExpressionUUID->"66a4129b-b8de-4223-af40-f3ba0e4a83aa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"IntegerPartitions", "[", "13", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9000101490770516`*^9, 3.9000101585199795`*^9}},
 CellLabel->"In[92]:=",
 CellID->929990369,ExpressionUUID->"2f951124-be2a-4193-ab0f-e61e62337069"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
H/ykwPJTnQh+3tA5ylXSYpTqFsovoZwZnjQT/X3ifrf82LoDvX28z05yEmwa
IOW3ZNxJsjtvIFKl6WtXZg99ft44PDWw5eOuvMldc9Nd0d30hxksWSmsEIbe
yK8lMbb2nKe8nOWxvcUoLeRkkvJyLNJCqgexTgs5sZaNkGpT2X02kB0WraOa
7GKXSZiB2PH2nvqc1yxBxMeqIr7HlL4kIIFd8MtjS2OXFnIyiK+0kOpBTNNC
TlaQVUi1tew+G8gOi9ZRTUZMMwkz0I+bPCfvCsl5zWxEVsTHHNf14+12m93Y
7YJfHlsC07SQk0F8pYVUD2KXFnKyjmwg1avI7rOB7LBoHdWkYp1JmE3Ox1sY
fQTGOp+s4e7zO1YImJxUHKVxSPUr5GQ1SLV3dujgDjfZiD1sIwAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAHjkdrudn9zv993KFsHdJl+vV5H9/f1tXLMUZNKd7HKi
6RLh4/FYLijbeH6htQ0vvtWRy+WisgU1my2eYJDJv78/3V7JpJc9RREcZTLs
r08CyKz8+vr6/v7u/V4m18fHx6HD62tmILKn06mWrG5p2Z1jZBuZDM9+FZWl
ca2maepOWN2gUC+TvmRrzcre9BGWH+LKNh5eeN3wiqVusdWKHOyp4OfnZxHB
6sUT1s1kTGCVPQWZzGGrfRIgjZTf4Ipb61Z6vtTtz8+P/rh8aoigTluRkq+l
dlX5srKxsskLhxtkA5mULhT7lR48L49zkqadO2Fdg6pn0pfs+rNSp4+aLsjL
NNS/v78lw+lKIec9hSqlbrTV4XkK93g8qtHLVwqNFE9YN5OiIzmMLV2+38zO
MfjP5Lb7JECawa6uS/Juxcq0PT1ZONzjSfzxcrnIQMuLf5JsqVNeObLuMilN
VTZEOlI85lkoOFXTyJ0xZTuDqmfSl+yas1J4PaCVRaL8cuFb/7qlC2Nbzspb
HZ7HgWK3eF1kpRDaKJ6EskUmZWO7h8evrWkeLewcE8qOMrnhPgmQZrDwtGJ7
U1V/WfbNLxmi1J4lX3bNYxJ3mYyhFmyGkzRX3lXZGVQ9k75kV14pyEpQdtAx
Qjmu+Pj4kN8sHK7xlYLRVuuRmByChqEDv3m0UDwJZaNMdtFDesltQc1QaeeY
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
FyeklqQI0qTXuXG5J61vrNvric3eRRFjnEd4rYrqst0zRV1mLHWnbk6msheD
8jM5KdTqssHM95VNr55JainUqCX9yIO3CjPGlcqMJTovttlDv1UuvtVdl9PP
t3RXPGllu/pRRHzs4NlopxbIZJK6LT1YugNpZi++xMdz5/qHUs919yUbGUvj
8nH3YJCjUHsY+b4H041kHYXaYye11GUnbZNMksmE8lscZdLvgRak+Zz7GTHx
jZ7B6x9m40tWkQSOFfDycfdgkKNQu9j5vgfTjWQdhdplP7UU2U/bJJNkMuwj
k34PtCCNZFjv9Jn6j7qIS1z/MA9fsuH5vp4kcKw4l4+7B4MchRox9X0PphvJ
Ogo1sqtaUnbVNsnkvKHX0YyQyWZlg707kAOfZDGbdVKHQa2xgiOYvhN2WEu0
zVKQyVKQyZYhbwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALAav7+/5xEe
j8dC8b+/v+v1KlKXy+V+vxcJ2E52IR4zKdxuNw2yrKxGKzkpqLkQpwYZZdKX
7GxMTQ9m08dC1ijUhXg0yC6TzMpmTVcsMunI9NYKCSyQOfj19fX9/d39pfh+
GGFhPchs7Qn2hjaV1S0t0nZe2UYmpYueTqfistJMoqzkZPA1pu6ErRiUk0lf
slualUbTx0I2U3Njs7JiJmfArGzWdMXCIEcdvnohwWqIj69L7MHV/cfHh9TD
wvW46ByPR6kc+Ua+yveiKfW2RHOSrMQvm7xwuEG2kcnPz09tpCqrTWCJrLSI
2Ex0wxNtys6d4N+gSZn0JbuZWVl8+tjJ5mtuaVbWzWQ+zMrGTbcwqAXTLTRN
Gwisg0yinJf9/f3JoU7mixNIzYhU/FHPuy6v20myy7diiWzjmXw8iT9eLheR
XTjNdXsl4PPzrFE6SCN38pVbNmhSJn3JbmNWWkwfI9lJmpuZldUzmQ+zsmXT
g41BLZhuoWnXQGAdMh3UYih+KZrOWTmIWlO2bvfzlUmJU2QXZixurIuVQssG
TcqkL9lNzsoi02cd2bTmVmfl+pmcpKPfMCvLjt6yQS2YbqHJSsE7OQ6WWtor
srrXNxZlUS8F9vPzs7Jsxe7nIpNdrterKMtRbhG19lcKXgwqux9pQXYzs7JL
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
Sq3mvFXTw+r9bduye6sli8levcPP4K3vmL6+ZoQG0g5q9OCfjsfj6XTq/kZL
4nVNJDU8e/P18rbeQK3J5pSBJCf9/uC8zdmGQfEZ0W9fPynUfNmwUYNK1bmR
QZG3M4hZOTWANftbO6Ybye6qliwme/UOb1RLmL6yZhcaSFOMXT2l7yhJ0erF
sVoSr8/v0uf15a/Rzh0SHyHUgmz8LHU9fSdf9cfBZxGkL0Kbujk5yo4MirGd
/0nvHdWpoWbKKtswyGj6GBmUOYOYlW+p2N9aMN1Idp+1ZDHZ63Z4o1oKmL66
ZqCBlH4PpRRj8ccFY0R+fF0TxXtwMu/XOPwT2eUNLqNakFX3X5lxIDp1c3KU
HRk0mMbXSbEw1DFZZRsGWbjzKlvKoMwZxKx8i4XvFu74kqWWuiyZ7BaadrL5
vmP6ypqBBtLqjc/pwG63m66SEne167tjvdtwxuiuPdN3yleXjQvGHjMWjJPG
naTswqDBNL6efFgSalo2bMWgFaZPQYPyZxCzMo2F7xbu+JKllrosmewWmnay
+b5j+sqagQYyvZbWYfYSRp/ap1s3tozavGxkLI3Lx92DQdbuhN0Y5Mh0O9nI
Tkw3knUUqp1shFpqTdNONoLprWm6k43Y1dI6SPzzHtUb3y4Zeyt8Hr5kFUng
WBksH3cPBpm6E/ZkkCPT7WSV/ZhuJOsoVDtZhVpqUNNOVsH0BjXdySqmtbQO
EqfekzL1H3UpdLvdyn4Uoy/Z8HwPThI4ZvHycfdgkJ07YWcGOTLdTjbszHQj
WUeh2skGaqlVTTvZgOmtarqTDfa1tCYePw+iEdZJHQbNBoN2CKZDKailHYLp
UApcBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcM3j8bher+cnv7+/RTRv
t5sK3u/3IoIRDbVUnHaavmSNQi2FRYkGV5l0JOsoVDvZJUgw5xeWR2gkK/z9
/WkaL5dL8Ya/BHeZDGa7zgbrPPg0yFEj2pXpXaQRiaZsfuOaTSFHWV9fX9/f
369/kg4vvz90kFQsHE762+l06moODj0D8SgqL4/TTtOXbI6m1o8UUpERX1m5
RAO1RAYaqPyxspdgDi8s33AjWTmy7WkOTmQy+RajXWf1Og9bMchRf9uh6ZHY
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
4o+Xy0U0l5ei5FMyKQFLeG+DLJLzGcplfXdkephoUEXNqbLUUgKjyW4hO0lz
G6YHVx2+hR2HhSa1lGCrpvuStStRSORWZ5DUvHxfapL20AklA7Uv+/v7WyQJ
8UK7Zpuzte+Nmz7JoIqaU2WppXxKTfYVZNOamzQ9tN3hjWSr9yVqKZ/NmO5L
lpWCHWO51bf84l8LTlJZeutdP7LiFtmfn5+WZSPX6zW2rCK02ZyNfPdoetmO
Z6eZKUst5VN8stvJpjU3Y3pw2OGNZGv1JWopn82Y7kuWlYIdY7nVt/zim3QF
J6kutxUZotRa3khWkTycTqduQpbTZnM28t2j6RtrztRSJhaT3Uj2reZmTA8O
O7yR7H5WCtRSZGM7IyNZVgp2DOb29f04i+V8vJmo1M0vFrKK3qO0/oHoys3Z
znePpm+sOVNLmVhMdiPZt5qbMT047PBGsjtZKVBLXTa2MzKSZaVgwf1+l5Ie
fObA8cm5g3gky2T9vmAMMmF1rIKaxWV14pd6knMkp/ITHs2muu8uTA+ba87U
Ug5Gk91CNkdzk6YHJx2+4o7DQpNaymFjpvuStShRkGKWrA6+QXZIUjYMfbxY
Wc1SspIcvY6x+MQPeZUvAYhHZUdvwfeWTY9srDlTS2mMJruFbL7mVk0PbXf4
6jsOC01qKc0mTfcla1GiEP5V26+/P79wGF/OXy6X2dboFX3C65+qy4qIPsL3
7evnhZpT+eJO+lrHeUPX9b1l07u8NWiGrIVmjmyglt7pWEx2C9l8zbBR00Pb
Hb76jsOiL4X91RKmtxNqjmwwK1EI2Vd2HUYuEdSLCfOXkN2Jn/jQkxZkdeLL
116/6n2e+NRQ9UPJBT2PIV/1x8GPF0y7M3XofOVIEd8dmR6yDZoka6GZL6tQ
SwmMJruFbKamsg3Tg6sOX3fHYdGXlF3VEqa3EGq+rGJXorBwksZnCOTrdJFJ
OrjEa0H2MEKvzKaGqgX/yowd/dSh85UjRXx3ZHrINmiSrIVmvmx8cUKKWhpk
4WS3kM3UVLZhenDV4Y1kK/al+OKE1MZqCdNbCDVfNr44IbWkRCEzaVLwY+/a
6LV5sjbP1ImkHw5QXfY8wmuJTgo1rpF7zFgjTx16krJSxHdHpocpBuXLWmhO
kg3UUrZsl4WT3UI2XzNsxfTgqsMbydbtS2F/tYTp1UOdJBssSxRmL6/0OWOa
+bEl3rZljULtMubO8qGb8t2R6Uay1FLjmfQlG9mJ6UayjkK1k43spJZ8uUMG
utiVKEhu530+SHwrZ+yN4Hk4kjUKNSK+jFX+8qGb8t2R6Uay1FLjmfQlq+zH
dCNZR6HaySr7qSVf7pCBiGmJguRQb8OZ+o+6TLvdbmU/1NKRrFGoiiiLL2NV
vXzopnx3ZLqRLLU0b+h1NN3Jhp2ZbiTrKFQ72bCzWvLlDhlQrEsUFD6rojXW
cQTf9wC1tEMwHUpBLUHjUDwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQisvlcj6f
r9drEbW/vz+REkGRvd/vRTQjqvz7+9u4pi9ZR6GWpWzl326385OyZe9I1ijU
QC0Vwpesr77UeImWrc9AAzGTdRSqnSyszOPx+Pr6+v7+HnuBzM3Dk8/Pz+XD
RbVIYuhJSEGeTifVlMpsVtOXbMVQtSylPksN2mPNypf9WtzegmXvSNYo1EAt
NWy6nayjFpopa1qiK+/lt9dAGpF1FGqmrHVnhlKIU4nl+d/f3/F4/Pj4KNVD
pGBEUGpDvpGv8r0oLzyPIWUWC1JDXV7tFpq+ZFsIVSpT6nP5oIOsWfmioLs2
LXvd/OWn7xzJWmhSS42bbiHbQl8ykrUr0ZX38ptsIHVlHYU6Vda0M0Mp0p1B
HJQeIlaW6iEiJX0p/qinMpYXpwQp4Ym4SJWqdgtNX7IthFqk6mYol638x5P4
4+VyEdnl7dGRrFGo1FLLphvJttCXjGSNSnTlvfxWG0hdWUehTpW168xQioRH
ehgvU1K+L9VDeuh8l4EW6sSr4ApWu4WmL9kWQq1ydGdd+ZKBncuW0qSWHJle
SraFvmQku/5KYYW9/GYaSF1ZR6FOlWWl0D5jHuk7kvGvBWf64/HQm5K+vr5E
9ufnp4isUrba7TR9yVYMdf2jO7vKj1yv17h33qdscU1qaYeyjlpopuzKK4UV
6jNsqIE0Iuso1ExZVgrtM+aRviMZrxQq2EP0bIAiQyx/Q6ELE3NjGVj/6M6u
8hVRPp1O3SH2JmuhSS3tUNZRC82UXXmlYF2fYVsNpBFZR6FmyrJSaJ9Bj14v
CrJ4TyHe0VywOJmYG8vAykd3ppWv6O14ZRfIvmQtNKmlHco6aqGZsmuuFFao
z7CtBtKIrKNQM2VZKbTM/X6XGTf4SITjk3MH8VpW8fp9wRhk1aBjlRJkYm4s
A4kqnU3Fytd9XMGHlruTNQqVWiqFI1lHLTRTtniJ1t3Lb6yBNCLrKNRMWYvO
DKWQuSbuDL5/d0hSNgx9+lkpNSbmxjIg9SlVWna/UKXyZTi9MafstjiSNQpV
oZaW40s2uGqhmbLFS7TWXn6TDaQRWUehZspadGYoiE6919+fXziMn224XC6z
LdYLDoXXP82TfVuWM2QtNH3J1go1PK+kTV+MOm/olStfhtPHSr99/aTNcSRr
FGqEWnqluul2soqjFpojG2xKdP29/CYbSDuyjkLNkQ1mnRkKknmF2GHkCka9
1jF/KdrtS4lPXpsqq58YLug7FPJVf+x99t8kWQtNX7J1Q1XS9Tl16HzlSJHK
132cfO3tmnufcT91cxzJGoVKLbVsupGsoxaaL6sYlejKe/ntNZAWZB2Fmi+r
2HVmKMXCHhIfZJSv00VWCoNLxamyWo2v9NrIJFkLTV+ydUONL05ITR06Xzky
Jj5p6MHtPby0voWzqWVZo1CppZZNN5J11ELzZeOLE1KzS7TuXr6I6Raaobbp
lH18cUJqSWeGUmQmX+bj2Ls/eung9/d3pk4k/eyCSbJxAdvjdQGbL2uh6Uu2
eqghoz4nDT1JWSlS+YPbe345ITZJ05esUajUUsumG8lW70vuSrTiXr6U6Ub1
Wd10yj5YdmYoxexlmj7sVB0cWypuW9ZRqEayRqF2GavP5UM3VfmOTDeSpZYa
z6QjWUeh9jAq0abq00jWUahGso5C7WHXmaEU4tG8jy+JbwmNXUE0D0eyjkI1
kjUKNSKVOdZDlg/dVOU7Mt1IllpqPJOOZB2F2sWuRJuqTyNZR6EayToKtYtp
Z4ZSiBd6l9DUf9Tl3u12K/s5no5kHYVqJGsUqiLKUplj/WH50E1VviPTjWSp
pXlDr6PpS9ZRqBHTEm2qPo1kHYVqJOso1Ih1Z4ay8JkX0Brr1CSVvweoJWic
FYqH+oTWoCYBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgNS6Xy/l8vl6vpQRvt9v5
yf1+L6WpSJAi+/v727imL1lHodrJlqL4bAquMukoVCNZR6EayTY7Q//+/jQ2
maQF900Wso5CVTC9TU3F6JDM7kgPVubxeHx9fX1/f4+9QLw+PPn8/Fw+nBTM
6XQ6dEgMPQmZQVFZKrNZTV+yjkLNlNVql7IvNWiXlWdTcGWQo1CNZB2FaiRb
fYaG8Uka52bZfZOFrKNQA6a3bbrRIVmmrLXvUApxKrHckzXs8Xj8+Pg4FDq2
ERGtGekY8lVLaOH5VSmzWJMa6vL9moWmL1lHoU6VlYKXsl8+6CtrzqYWMrm9
UI1kHYVqJNvIDA3jk1TikekZ903y/fJ9k5Gsl1AxvX3TLQ7JJsma+g6lSB+x
iINSkGJlqZXC40n88XK5iPLyOpEgJTyJU8qy1O7SQtOXrKNQp8qWOqU/Sbb4
bGohkxU1fck6CtVItoUZmlCWwGQtH3/UU7jLN9xC1lGomF5K1ihUo0OySbJ2
vkMpEh5pKYrF8n2pY5sev7+/RZTj1Y8F92sWmr5kHYU6VXb9lYLFbGohkxU1
fck6CtVItoUZmq+sxzYybcuObiHbcqiYbiRrFGqpQ7JJsqwU2mfMI71SIv7V
aKVwvV7j4VMRyu4u7TR9yToKNVN25ZWC9WxyZJCjUI1kHYVqJNvsQePj8Tg/
+fr6kgh/fn6KjGgh6yhUBdPb1OxR/JAsR5aVQvuMeaRXSsR3uyxWCiJ+Op26
oyyHPTsZaHClYD2bHBnkKFQjWUehGsk2e9CoZz4VmbClTthayDoKVcH0NjW7
WByS5ciyUmifQY9e39iyWCnofS5lq509OxlobaWwwmxyZJCjUI1kHYVqJNvs
QWM8ZxvvGC2y4RayjkJVML1Z0yMWh2Q5sqwUWuZ+v4uDgw8EOD45dxCjZVWo
3xcZXYun7FPlA3t2MpAnmyj+edSdTY4MchSqkayjUI1kq8zQqZpyVKYzt2AA
RrIuQsX0xk03OiTLkbXwHUoh3ok7g+8HHZIsHFdG1KvsitdkYM9OBvJkpQil
+AtWYK3ZpDgyyFGoRrKOQjWSrTJDQ3KSDqJPeiwYgJ1s+6FierOmGx2S5cta
+A4FUStff39+IXEW9HK55FssI+pzld/+yyTZbuTpdjRD1kLTl6yjUHNkw/PG
gfS+Y8bQ68+m7hBeDHIUqpGso1CNZGvN0DA+SQdfeXpSamg7WRehYnqbphsd
kuXLBjPfoSCZV4gdRq6s1muw8086afHI196xU+9D3qfK6kecC7rKlq/6Y++z
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
AAAAAAAAAAAAAAAAAAAa4e/v73q9ns/ny+Vyv98blxVut9v5SVlZjfb397eg
pi9ZR6EWwaJE7co+uDLIUahGso5CLYJR5Rt1e0eyjkItgrsjB0wPrlooJHg8
Hl9fX9/f373fS+Uc/snra2ZgJCvlfTqdistKQUZZqczlgu5kK4aqZSn1WWrQ
HmtWvlHZB2rJlSyzqUjlG3V7R7J1QzWtpZUPSDDdSDbUa6HWvW6fSFYHV5Hi
wvF4lITLN/JVvhdrxKaFwxnJfn5+aoWrrBbSElkps1iQHx8fpUrdkWwLoUpl
Sn0uH3SQNSvfQrMFg7YXqpFsC6FuZjYV7/buZKuHaldLKx+QVM/kJkOt3kJN
e90+kToZ/L2k+u/vL/6oK/rldhvJPp7EHy+Xi8guLBXpRZIcCVjCK7Vn9yXb
Qqhj9bmcNSvfqOxbMKiipi/ZFkLdxmyy6Pa+ZFsI1aiWVj4gaSGTFTXtZKu3
ULtet08y86n1I9Oz7OhGsr+/vyK7sFTiVXBl9+yOZFsIdf1jmx4WJVpKswWD
Kmr6km0h1E3OpiLd3rVslVBXXin0aPnIYR3ZxkOt3kJZKZQlkU9ZaZ6fyAJT
fPn5+SkyopFsl+v1KsrSTIqold2ze5StGGqVYxuLEjUte2rJkSyzqezQZbu9
R9kqoa6/UnB35GAq6yXUWi2UlUJZEvnU1aVyPB5Lrd+NZCN/f3+n00mUu29W
LsHRQYiR7N6ObSxK1LTsqSVHssymguMW7/buZGuFuv5Kwd2Rg52so1BZKWyD
nCV8vIGoiN1GshG9K6dgG3F0EGIku7djG4sSNS17asmRLLOp4LYX7/buZGuF
WvE9BS9HDnayjkJlpeCd+/0uhZH5+FyZpMcnZWMoLqulvvyBAF0cHYQYyVYM
dVKVZlK98otrUkuOZJlNpSrfotv7kq0YavFaqtuWMd1ItlYLteh1+0RKQjKZ
/zaTPk2reBilZGVD9PJFF6XuS7ZiqGKrVGlZT1uo/LKa1JIjWWbT8so36vaO
ZKuHWryWarXl6pmsq2knq9RqoRa9brdohWS+8vTk9U+Xy2W2HaVkRUcfsfv2
X2ZE+7Ys52XAkWytUMPz8drpfce8oetWfnFNasmRLLNpYeUbdXtHstVDDTa1
tH5brp5JR6Y7aqHBrNftlrGruc4dEh90og8ry18zGslqqcvX8z/pfd73JFn9
xHBBz13IV/2x99l/U0N1JFs3VCV9teHUoXOULUrUqOypJUeyzKZSlW/R7X3J
1g1VMaqllQ9IMN1ItmILVex63T4Zy+fhn8jEHFx/xccRZN4/so5spFcGk2S1
Gl/pzaCpoTqSrRtqfHFCaurQOcq9qIqUqIVmqG2Qo1pqQZbZdLCZTZEl3d6X
bN1QFaNaqntAgumlZCu20PjihNSSXrdPcpbw6Xvh9Qo3WebnDLeCbGJdPEk2
LmB7vC5gJ4XqSLZ6qCHjCQaThs5RtihRC83QgEGOaqm6bPVQwxZnU5cl3d6X
bPVQg1ktVTwgwfSCsnVbaLDsdftk9pJKH1mm2R5b1m1b1lGoRrJGoXYZq8/l
QzdV+Y5MN5J1FKqRLLOp8Uw6kvVbS00Vki9ZR6HayUbset0+kXzO+5SN+PbN
2PuA83Ak6yhUI1mjUCNSmWPzffnQTVW+I9ONZB2FaiTLbGo8k45k/dZSU4Xk
S9ZRqHayimmv2yeSN72ZZeo/6tLsdruV/ZRAR7KOQjWSNQpVEWWpzLG5vHzo
pirfkelGso5CNZJlNs0beh1NX7J+a6mpQvIl6yhUO9lg3+v2DJ9PAa2xTk1S
+bAHmE1QihVcppBgNhQPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzODv7+96vZ7P
58vlcr/fCyrfbrfzk/ZljUIVNLe/v7/tyzoKtQhGle+o7BVqiQwsx9dsCq4M
IlRHss3OUIC3PB6Pr6+v7+/v3u+lDx/+yetrZiBd/XQ6uZA1CjU8O0ZUltZR
RNNItmKoWpZSn6UG7bFm5Tsqe2VjtdSILLOp5dkUqKXdh2ok28IMBViC1Ofg
ORmp5+PxKKUr38hX+V6KXAp+4XCfn5/a2FVW506bshaa0gdix/j4+CjViyxk
WwhVKlPqc/mgg6xZ+Y7Kfqu1VFe2hVCZTQlaMIhQtyfbzgwFWIJ03cHfS9H+
/f3FH/XUUJGJ0101Xy4XkV0+OyxkjUKVfaXkXNIrySzV4oxkWwh1rD6Xs2bl
Oyr7sN1aqivbQqjMpgQtGFRR00jWUahGso3MUIAlZFamdmPp82VH//39Fdni
s8NCtpRmvEyxbIuzkG0h1PWPbXpYVH7jZb/VWqor20KozKa0jn5DLe0zVCPZ
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
    "], {{0, 349.2}, {622.8, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{622.8, 349.2},
  PlotRange->{{0, 622.8}, {0, 349.2}}]], "Output",
 CellChangeTimes->{3.900010158948408*^9},
 CellLabel->"Out[92]=",
 CellID->205478441,ExpressionUUID->"3400625f-4d22-4fb0-98d7-3908ce2d8524"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Between 1 and 4 parts\[LongDash]at most 4 parts:", "MathCaption",
 CellChangeTimes->{{3.900010245843835*^9, 3.900010276987325*^9}},
 CellID->236205314,ExpressionUUID->"1efcd010-f148-44f8-9840-ab9b8ad92bbb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"IntegerPartitions", "[", 
   RowBox[{"13", ",", "4"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9000101490770516`*^9, 3.9000101585199795`*^9}, {
  3.90001022966252*^9, 3.900010238668804*^9}},
 CellLabel->"In[93]:=",
 CellID->102041104,ExpressionUUID->"f5679b13-f1ae-4647-83bf-7e7b53719144"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAAIr8Pw8WyHQ=
    "], {{0, 85.8}, {583.1999999999999, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{583.1999999999999, 85.8},
  PlotRange->{{0, 583.1999999999999}, {0, 85.8}}]], "Output",
 CellChangeTimes->{3.9000102391887913`*^9},
 CellLabel->"Out[93]=",
 CellID->102153963,ExpressionUUID->"b4e0f931-04d9-40da-827e-3eabd3e22857"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exactly 4 parts:", "MathCaption",
 CellChangeTimes->{{3.900010278774005*^9, 3.900010282151736*^9}},
 CellID->804407574,ExpressionUUID->"5cfb8902-ccfd-4fef-bcd2-11b88deca8c1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"IntegerPartitions", "[", 
   RowBox[{"13", ",", 
    RowBox[{"{", "4", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9000101490770516`*^9, 3.9000101585199795`*^9}, {
  3.90001022966252*^9, 3.900010238668804*^9}, {3.9000102828568573`*^9, 
  3.900010284914009*^9}},
 CellLabel->"In[94]:=",
 CellID->187410827,ExpressionUUID->"7e3fe2f0-dfba-4235-b3de-12c421aa24ff"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
P9eQbWhQwh2l/bwvWY/B+tZpJD0DpI9rYdAU4/UtXzbHIA0Tp01kPiuD782h
afz0v67Xa2YnLxNOy4cG+bJT+MqHwt6G3V4tiRTG9NC/b3PGMIi2gmc7q5/f
FKV8WTeKQdPWBfdzcdnmBi25o7Sf9yUb6lurb51G0m/UGOnjqhs0bd1yfcuX
dRkGZX6mnKXTx/w1IgzPXU9z1xLwOf3VirHEaeECgK2y4b6XeCjiJlkfAd58
+sm/zj4iO30WviRKAxjEhYt+RlUiei7x1q5myjJjGKSxn+vJWjAo8/IYqULU
kazx+hZhOZIDp8+qssdyJNvKMhau5Uu34gcphuaus9eO+jtW9vV26Q+3yp7+
Hwr+bOQ3yUYR8OzIuJIoDWDQbBinmVVo+pIsM4ZBGvt5NdkmBhUOWBbSR0nW
eH2LsBzJgdNnVTnsbS+RrCzL2J/yhWsU6W+J4osN9n1p3WX5u5g3yYbz7fTd
oPmyYQRCdhwFb2o3U7kjg2bDONvt3aYXHgVvbTpHWcMgjf28jmwrgzKrqMh+
3pes8foWYTmSA6dPjrLvbReRbCLrepjyrcK3J3OITgvHhsPLepbCWN7uEQzS
dscdxqCOTI9QMsiUO93Jeg6SPkqy/aZPQnmVjiLZ0KCtnxHpyb4rBv0qaHo9
c2xZhgKYeDhbYbtHMEjVHXckgzoyPUTPIFPudCfLHCd9lGT7TR9nzKCOTA9J
GLTpMyLQxvIFolv/kCfGt9tN9h6TvmTdfXWXAri0n5S3ewSD9NxxBzOoI9M9
qgaZcqc7WXew9FGS7Td9nDGDOjLdkzYo/zOy6D39b3jqhA4G7QYGGadC6ODO
bpA+xoFBxskJHcILAAAAAAAAAAAAAAAAAAAAAACj8h+LJecm
    "], {{0, 50.4}, {509.4, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{509.4, 50.4},
  PlotRange->{{0, 509.4}, {0, 50.4}}]], "Output",
 CellChangeTimes->{3.9000102853194685`*^9},
 CellLabel->"Out[94]=",
 CellID->5099045,ExpressionUUID->"aeb9ff56-bf45-4d60-a066-428225429bb3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Between 1 and 4 parts:", "MathCaption",
 CellChangeTimes->{{3.9000102874502144`*^9, 3.9000102931056004`*^9}},
 CellID->10106420,ExpressionUUID->"d924e20f-c754-44d6-8614-5dadda8086e9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"IntegerPartitions", "[", 
   RowBox[{"13", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9000101490770516`*^9, 3.9000101585199795`*^9}, {
  3.90001022966252*^9, 3.900010238668804*^9}, {3.9000102828568573`*^9, 
  3.9000102958521104`*^9}},
 CellLabel->"In[95]:=",
 CellID->256027672,ExpressionUUID->"ba1263e7-3ab7-4a1b-91df-1850213b7473"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnT9uLDFyxgd24tA6gqErKHDqSHC6xkLxLrxeKFkDuwYMzw0mcjo3mBPM
CZQ6mAvoBroDXTuFR/T2H3Y1WUUWu78f8ARpNO8j+VWxyO7pbv3T7//zN//x
d6fT6S//QF9+87v//pc///l3//Nv/0g//PZPf/n845/+8O//+qf/+sMf//Dn
f/7939OL/0v//o+++ev3AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAABgv9xut8vl8vX1Nf3Vz88P//Z6vT4ej/p9WyXReeJ+v1+eqHc+3W5b
Vvtm0Xk7q7VoYotRnnhOv7DWPcoQThXKGZXm/JepUN0TxmhWIv0y2vWjaSer
gt1SQvWBZGnsurLlWAzZrip6Th51vr+/Pz4+Pj8/895DXr2+vp6ekGmj31Lc
T3/LVISVqYnCgah3npIq/nap83mk22VMbcn2RPKGDIRWu00VyRsysNAUynq2
mv7XMFXe3t5oLSjpjKRMhYN5EswKINJvFhSQTSxFkJKWIqKetEwsFO/v79Pf
7mzIwqq4FQ/JUxkazuoRyux7yIHoFYd46hi98vLyQnbRN/SVvqe3TY8BSZya
KByIeudpHnFecef5zYUHsJJ2I3a25HmyqfObkFvtMFUsbDGy2kn6hYJZeT6f
6XWqJOcnXFIK+yksU+FIngSDAoj0mwUFJIOlfQt3j1KXOkYB4h9Vxk5HUhRu
HvXsHjvsa8jyqijET/JUZilbJO8h2+lX/MHZrGP0q+ExPh8ZzRor6UYe2Z3/
fhJ/vF6vKivXaruSzheS7cmmzsvZZLXDVLGwxchqD+mXUE53j4oJ73BiVeGF
j14sOekhL1OJnpfjypNgUwCRfhnt+tHcKls5gtOZSwF6fVLeImU+jZ0Gnthj
L3VMhcpD3lQVhThJnsqU7LHj5TTCWcxVevYatvrldGvn6f3pySVkU7uV99ir
fdtqWh5pqx2mioUtRlZ7SL+Ecrp7t9uNXqQyEl+hVYDWvtGLhSTKVDiqJ0Gp
ACL9Mtr1o7lVtnIEuUujq3z5xcKDIN5hcpRd7bHthjwiXRWFOEmeypTssSMJ
xyjQlydci87nc3Y38ijp/JBpgS3E4R47sto30z122mrPqWJhi5HVDpfIIbPd
Gy0oipebCsuUpOfZePNkhG4BRPrJ23WoKZStHEHeB45SlC9zKrm9jj+tiC26
2mMbDZmRV8WtYI+99T0Jx/jsB0OJ6ufsUEQSbv78ZfgpYTnYY8+yarXnVMES
KaRkkxOeVSXe5sOXDRdewyAsU5KeZ+PNkyHqBRDpJ2/XoaZQtnIEaU/IQeGr
iOPFyYUbTr5KJGa+qz220ZAZeVXcCvbYW98jOY8dL5uffZu3cjqCDwx1n9SE
PfYsq1Z7ThUskUJKNjm8q+FveB0p3+QIy5Sk59l482SIegFE+snbdagplK0f
Qf60ZQjvObM3nNNrJFztsYPBkCPyqriVg+yxH48HWZd+qIjkPUE8iylkL0+y
G9qEVud5fVF/JKbENHVbtDwxqtsSqz2nys6WSG9W84u8iMQk4buQFP1JlKlw
SE8sCiDST96uQ02hbJMI0vyNT7HmXSL1M/vzFy4FlwGcAPx9RvcyqDzkpSYS
VXErrZKnMhQOGkI6EJL3hC2zmE8CTF+nJqgh3TJe3vl4S4vFM+clpqnbohVQ
9bott9pnqgjfkEHDJdKb1XzGZnTOkF/U7eRSmQoH88SuACL95O061BTKNoxg
pPAhG6ck0/fvYMhLJKriVlolT324hJa/RziLE0+VoSbSKUSHaRlul3Se/i9f
dLfabl7fJKZZ2KIS0NU3bOqY3OrgMlXkb8jom4WmRDb4s5ovPqQCMnx4Gn8w
Or2JPq9vYe3hV8fxxLQAIv3k7RbKHrOAhF+btNPCjbrCpi8T0uexdzDkJeWl
qtjX9K9PyfXY/AcxCT7AeX8+BZ2IBWeYmenHmKe7wddE5R2MZ3ee1xf6Oppi
o8uctvZttV1J5/OaXpVd7Zuw81s7JrQ63fm8piXKTWwxstpD+iWUV7vHKwiV
ev4jILzDmd7wvqlv8jKV6HlGu0LlJp4EmwKI9MtrN0P24AWEb1TkBNZt+lRw
PXZHQxZWxR6nf2VK9tjx7o8RsQiPXqcw5a1c8f7WjMvgtTofGcV0a99W25V0
Pq/pVdnVvgk7v7VjQqvTnc9rWqLcxBYjqz2kX0J5tXvx5Gpk9nTHpr6N2kqU
qUTPM9oVKjfxJNgUQKRfXrsZsiggp+fhz+y50JKm0/9rN0MexXepKvY4/Suj
ch57xOx57PQ96avd4MsC6XhqtbcWnR8yzYdNfVttV9L5vKZXZVf7Ju/8po7J
rU50Pq9piXITW4ys9pB+CWVh96iY8OuJO2LkfRs2tProjIN4EmwKINKvpN1N
sgcvIJSl6SsNspu+PG8t3Nqx8nYrD3kY3HRV7G76V6Zkj12hG3yTLJu5dLyT
p1xOed9WMbIFnmxSLsfCFlg9i7Ut8MRaNgKrTWWPWUAOmLQd5eQQOycrQwNZ
vV9V8p4SSHzJz/iJQPoD3AR2nS/vWxo7W+DJLH3ZAqtnMbUFnlSQZWC1tewx
C8gBk7ajnIyYOlkZ/pNVl+R145L3ZEOyJL7kFR+z3O/37JJo1/nyviUwtQWe
zNKXLbB6Fjtb4Ekd2QCrq8ges4AcMGk7yknG2skmSB70bfQw8DrPGO/uSeYV
OgxPGrbiHFg9BZ5UA1b3zgEjeMAhG3GEMQIAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAQFvu9/vlie6fmO9LVoXuhny73Uj26+vLuaYW0Unq5Pf3
d7kgDfMywdXY1Yc85Hq9srKiptv8sXDy5+eHx0tO9lI0yunLyYA6qS2rGKC+
FsdCZpcbRiVMJMKj9jZw/5B1Hx8fn5+fo9cpLd/e3k4Dpu/JgGRfX19byfJI
1bcTzD6cDM8CEpVpQlXTNI1OSAZo5CRRvjmkYZ4mTMfeKicthhyh1Y0139/f
VQSb509lJ6OBh6qTHTkZUCeVAmSxkLVdHJsEaHa5YQq3xHSISm0NBSuvYr1D
5swe5XEi0RJJfp7PZ/6xvJKQICc8ScXAlc9TuSwNloZc2NwsO3CS5kgsIHxc
UN7PTZp20QnLAWInOUAEvY17S7WlpDkuepLz2PVz0mjIDIm8vLxwrMv32E7y
p37ykIdxdtP3u6+THTmJOqkYIIuFrPniWD9As+exuZ8lp/EpuCwSJ1H9Vax3
ZhdBPvYfphBZ/fqksLnvJ/HH6/VKDZWHZpOs1rk1iWx3TtJUooHQfIlbxELB
rZpG0UkoT7eCdChUfvjPgy3sWyGVh8xQElLEKdwqe+zgI38qO0mDHW5dpmUk
D7d1MvTmJOpkUAqQxULmYXGsH6ARfK6jsBs8UtpdS46k7IbcNbO2sLGjucMv
6n4cQE1oLcRy2ZprR3dOxq4qrh2bNOuXJjreoVoUO8lH7vRKYXOe99hGQw6/
9jC0qIW5RTkPD/lT38khvEkgb3Vl/dTJ0JuTqJNGAbLYEjRZHJvvsWf3Hluh
oFOUhW/GHnuWWVu4EPFCGeHPXNRv7pg2ZC1bc+3o10nFtWOTZv3S9Hg8+BNk
egN/msynYQubG14rsnqzVeX9jNGQR2dO1NdKh3tsIyfD81zc8EP58/lcrjnC
T50M3TqJOqnbusWWoMni2HaPrXISmyYOD5O+4XvY6Wvi3CD22LPM2sLexiua
4lXEujtDvmqCMkHlKlC5bM21o18nj7N2hGeYePlQDM1lchMKdcBDTjIWQ+ar
ROIYj7DHDjZOhl8n3xjSVz+J7apOMj06iTqpiMVC1mpxbLvHVjmJzRNHfqMr
9tizLNnCh35D2GrFacWnc9XXjlXZymtHp04eZ+2ID355f5IuI3KGN6HEm62c
fC5vMeTpp/BH2GMbJU8YnH2NyaM7Gb3VyU6dRJ1UbNpiIWu1ODbcY/NJ7PJ7
vuLBKUmdz+f4SdDSAQv22CNoylD6JT7riR8Q8JMwOa+0DgY583VnqFB2deBb
2aWTrdYO9eisavLCET9J5L3iSfuCea57p4UrtCvnpMWQ+bPjywAuzvx9tuyQ
JvnjIXn4/KHita8O62SnTqJOagXIYiFruDjWD9CoeyqniU6Txx4mbnS1GHLX
UAiEt4syKk/DCM/NBh8N6Wa+XJaf96jY+s6cZFqtHerRCckAzd4Ow5VZ/TYB
XqRmf1UzJ42GfEqSLTukSf44SR4+c1iu47NO9ugkgzpZHiCLhaz54lg5QMN2
VU5ih19BHw2TX5wNusWQe4fzUPK2xGyiF+Wuxsctrv4XI9nwvGo0naWbmo4d
2IeTkdUykiErKU0W0QnLAUocqk9jlNc0ww/cWCp9NXPSaMiXCYnz2EY5GXbh
5GwHlg7M91Enu3MygjpZGCCLhaz54hiqB2jUt7SyvOnpdp2PXGZPVhsNuXcS
VxHz4sj3MZ2ez12fvi1+YCQ8kOfMp6+j5Xj00YORLJO+amhr06uyfTkZe/v+
t39xYPSB4CZZoSZjFJ0l5XgJx/vkbyuUDDkMRh0Hflq+LLBmTtoNecT0xFee
rIf8qezkcEYn/nLKbupkd06iTmoFyGIha7s4MpUDxEhOYm9qmk8JxlMl0dit
Hdva7p5I3IR1GkBHrImPkJYW0ymnBUa2G8nGoSWktja9KtuXk6PeRkbVaZOs
UDO+OSGVHZ2EMlXO4c3yp+c9HdNVuNBJKlPZ95ep56TRkEcs/UejnIxvTkj1
4uRopLOa5bIRD3WyLydRJ40CtJSTm2QtNIP7AAXZSexNTcdPBCL0Y96TiApX
k35ZPftKzqTP//Px7OhTpCUuC0yz1Eg2CO5+3dT0qmxfTg7Pvg6ZHqrLZeWa
wSw6aWWKS+wk7YSXwpTt5OozZCrnZLAZ8ojL8ybfclkP+VPZyeEw049E2E2d
DF05iTppEaB0TsplLTRDDwHiRyusKmxtmmItmUF2Q+6a7GMKfj5G/MBI60l0
RrJDloZc2PRBnLQOkFF0EsqrICd7SZ4AJ/WAkw5lI8epkxay/U6fhPIq/eZk
17wv/12MNPHM/9Knb3kYyUZosEuZUNj0QZw0DZBddIK/AEWQk1rASS3gpE9Z
5lB10kK23+kT/AWIMR1y19Dw+daArf+Rj00SHxjlYSTLXJ4X7S9FubDpgzhp
FyDT6AR/AWKQk1rASS3gpFvZcLw6aSHb7/QJ/gIU7Ie8Aw7y2PAKwzyIkxbU
sc5bgJCTWsBJLeCkZ45ZJzvigAFy1RkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAADgsX19flwW+v7/VlelFrZ7fbjddwULsnBxyvV5JkMauJXi/
37mTj8dDS7OQTp0MNjnpLc+DcYB+fn54yBQgrZy00FShOyeDZcU4WqobOdmX
rBYUDs4f3RQyknWY6hHdIdvtAx0mJFn38fHx+fk5fJF6eFqg0IdZZXqxbBB/
hRLg9fU1LcgjVdySDansZISSigXf39/L1Sgzo43MaEQMnJQgyUkLTdPohOoB
inFJ56SFJpxcRVgxMjhaqhs52Va2/krB0LEkvT7snkoFNpJtnuqVnbTYB3pI
yFmoxemGf/Yo4+3tjbpdeHTA3uoev5Bd0VvuZCJY1H8acklzS1R2kqH8f3l5
YUGVnSGJcHJSP+PMmj2vCycTbMpJC0276IQWRYNCE3OSvl/KSQtNOJlGXjHk
HDPVLZz0IFt5pQjPYs7hiNlevs0wknWS6pWdvBjsAz0k5FLHJG/jHUj53oO9
LRSZwn0j62LsEm/WOkuZJ6vlJEOpQmo0cK099veT+OP1eiXlpYSEkwk25aSF
plF05MpaAaLxklT8kU/GFvq5SRNOJthUMeQcMNWNnPQgW3ml4JyhjdYw28sx
kvWQ6k2cVBQMPhKypC32ROv4pVBkSuyYwywdoeVk+LVEUi7R91o7wxHUz4Qy
nEywKSctNJtvPBQDNISLJ4WsmiaclJOuGJt0+JvDprqWkx5kK68Ur6+vb29v
6s0ZyXpI9cpOGu0DhzRJyOy2FE8YDj8jsLjVyGGWDlF0ciRltMe+3W5x8zkF
TkpQ3GNv0my78dD9lOH7+5uLxsfHBw38fD7X1ISTctIVI4OjpXpE3cmGsjVX
CspwThj6hu9hp6/l198ayQ7xtnuxG7L1PjA0SsjsthQP0i+Ta92pA4ofQ3jL
0hGKTvK1DdE6iz02idNh7LCVEXBSwjH32Lpn9vikBEPBUjn1KteEk0JWK0YG
R0t1xsLJhrI1VwrO8NHtb0uX5soxkh3ibfdiN2TrfWCrhMxriw/SqcMqzQ3v
Fok33SiO11uWDlF0cvohr8Uem28cqL/32JmTB9xj6xaNMDj7GotGuZ9yTTgp
ZLViZHC0VGcsnGwoW39nyJvD8/kcP7IpPLIwkh3ibfdiN2TrfWCrhBzxeDyo
J6tn6Tnuuk8MjnCBOuldmSPJUuHA5dR38uXJZQBPBP6+XD/8ytJ0b+GkhFZ7
bPXoyDVNiwbtEjlq1TThpARJxcjggKlu5GRD2ZorBe8MR89toy1i4WcNRrJD
vO1eKgyZ0d0HNknIWagPq7eLGh2kD+Enw2ipSbKUn/eoWGrqO3lKUihOXeXD
1VWL4KSEVnts9egEN0WDH9NUTRNOppFXjAwOlepGTjaXrblS8M5wlDD8YslV
6EayQ7ztXioMOaKyD2yYkOkuJd4gOUgnt7O7ys9zmK1RebKSLKUhpytnRtOV
nbxMSJx93TSc+DxMyX+Bk8Im0jmZIdsqz4ODosHX2ikWjbRmgJNrIsKK0VdJ
D9UDZORkc9lQfaWYHvjw1mt63nJTu0ayEYe7F+shMyr7wOYJuUTiuhTJQTpf
zio/TRf/HCfBp1BOc5fNZMuyJn3lH2fvgU1firO1aYmshZMjTguXM22V5Syl
r6Od5+xnQ3AygTAnN8l6yPO0skWAhnmY+Mspm2SFmgycTCCsGD2W9LSyeoCM
nGwry1ReKfhqgXiqJHa1sF0jWQ+pXtlJi32gh4ScJdHWRXCQHq+KF15DHv1k
KHaz16UXykYy7N3atETWwskRS/9xq+ysjUvJBicTCHNyk6yHPE8rWwRoNFja
2Mzqb5IVajJwUq4ZGVWMHkt6Wlk9QEZOtpVlKq8U8ZRmhH6cnrfc2q6RrIdU
r+ykxT7QQ0LOkhDhJyKuKvBnB7N/Gn7K8Pglfdl8tuyQjCPBrU1LZC2cHEH6
S9V+k+ysjXkHg1ublsh25KQ8J+WyHvI8rWwRoOFI049EkMvKNQOcFGumK0Z3
JT2trB4gIyeby4YWK0V4XoGwmuoZ7arLekj1yk5a7AM9JOQs2Rt1fgYU92Tp
mMuP7JClIRc2DSe1mj6Ik9YBMopOQnkVOClUXqUjJ/stRAnlVTpyst8AuYqO
newQOKmCXcWYbSvvUYfxdHr6Y1YnshEa7JK9hU3DSa2mD+KkaYDsohMOEyAG
TjrUHHKcAHUU9CFYKbSAkyqYVoxZTb5KfOt/5A3//X7X/YtRRrLM5XnR/pJ1
hU3DSa2mD+KkXYBMoxMOE6AAJ71qRg4VoI6CHsFKoQWcVMG6Yixh/SxuJ1QY
JpzsqIm9Use6IwQITjoHAXIOVgot4KQKRxgjAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAA1Pn+/r7dbpcnX19fhWqkcJlQLhvhrioK
GmkqohugIdfrlTRJvFzq5+eHO0maj8ejXNCCLpwk7vc7d1LdyUOlulFOmqa6
5wCpTx87Jy1mkN2sLMRozTWS9bxS9OVkOPBK4QoqjB8fH5+fn9NfUbbT66cB
5Gphc6RwmlAuG55Bf319VRQUarJ7ZKNKi1MqByhC05M139/ftaQis8OBk6tQ
qYwJmXAyg6OlujAnncgGBwGqPH2MnLSYQULNVtPHaM21kHW+UnTk5L5Xir4g
N2aPcahsvr29kY0vLy9kl9axFaeT7iEbhTIGnftcnvabNMlAsrGwxSUqByiK
kyzrl+8MqWOxk/SVvifZ2ZO6cDINKXC1ZCc5PwtPjx8z1eU52VzWSYDqrxQW
AbKYQXLNJtPHYs01knW+UnTk5L5Xir5YWvc57hQdKqGKzbGsoiBDk5EGQmGN
6VpZs3z7tFXZKEAMzQ4aPo1dZWdIOsNO8smKJT/hZILvJ/HH6/VKsuWl7ICp
viknm8t6CFDl6WPkpMUM2qTZavqoN2ch28VKod6chey+V4q+WPKBDljoUEW9
OaMsjQd9invsTZr157tRgMKvykazkr5X2RmO4PlOrcz+Fk7KoRRVkT1sqkfS
Odlc1kOAGkYnmAVIawbJNbEzlONtpejXyZ2tFH0x6wMdAbGB9A3frkVfVa6u
GX4sYnFTg+Iee5Nm5fluFyC+tiE2qrUAUd846HQoTZrn83npnXBSzu12i3t4
FQ6V6vKc9CDLeNtj20UnGDvJqM+gVc1WO0P1NddI1u1KEXpzcsjOVoq+mPWB
j3pG18xrXa840qQOKH7IeJA9tl2A+NqGGBGtnSF3mCH9xPkoOCmElKnbwybK
OVSqy3PSgyzjbY9tF51g7GSwmUGrmq12huprrpGs25Ui9OZkZH8rRV8kKicX
TzqQjAeV5WEaPqYm3tSgGItD7bHVAzT9bE4rOvHsRAy6k6vsunMywney7GYL
t6RsV4vkOelBlvG5x7aITjB2MtjMoFXN+jtDozXXSNbtShF6czKyv5WiFx6P
B5k/+8EEV87Rw16ohNKLuk9E5M/TT3oXI7XaYyfMzKZ+gF6eXAbw6snfZ8uO
oCrKDc3+Fk5K4LKp9cDtyHFSfUQ6J/3INglQ8+gEAyctZpBEs/L0maK+5trJ
uloppnTh5M5Wir4g25duBufKOTKQX9S9dI3gh8BoqbXaY/MTYnUzuX6ATkmy
Zafwk4VmfwUn09Ao+FShetkMR0r1KYmc9CPbJEAeohP0nLSYQXLNytNnFt01
11TWz0oxi2cnd7lSdAdHYfZXdCT1+vo6fIXjNT0qoVqabSM/eGHUUInsaugz
ZCXpROakJ2becCoH6DIhcfY1O+58edhs0AOcXBsFl9/V9xtNn7CXAE1bX8rJ
kvqmLtsqQM1XCi0nLWaQXDO0mD4j1NdcO1lvK8UIz07ueKXojqVrZvgjhrgr
4HhNn9HE153KTx3HP7ZL8CHqae5KoWxZ1qSv/OPoDvdNskJNJn3p0dbhSJSN
AjTitHBh2CbZ4VZz9c9JwMkEsW+jDfzoc3mj6cPsI0DCnNw6HCNZDwGqPH2M
nLSYQUJNpv70sV5zFWWFQWfgZIJ9rxR9seRDPA6K0I/To5J4z4vw+vaYQgxV
5tlL8QtlI6OM2iQr1IxvTkhtHY5E2ShAI5b+4ybZkYFUORNHr3AyLTLLqEwZ
TZ/45oRULwES5uTW4RjJeghQ5elTJ0CRkhkk1GTqT586a66KrDDosQMJKTip
nufTrkYqrxR9kR4gxZqPUxI3pfIng6PbXpYYHrKlb4rJlh0yPbySy8o1g+AW
2k3DkSurB2gEKS9VObns0L3Vu5vhZFpklulUMpo+YS8BkufkpuEYyXoIUOXp
UyFAWjNIrhlaTJ8Ka66WrDzoAU4mscjz4KMQdUf2QQQ/Y4ddWjqQ2b1sZMnG
8nYPEqAInPSmOeIgAeoo6COMAuQqOt3JRg4yfexkI3DSm+YIuwD1xXvu087j
qf70Bzr7lmXIwMQTNQvbPUiAGDjpUHPIcQLUUdCH2AXIVXS6k2WOM33sZBk4
6VBziGmA+oLGyxfGb/2PfDByv98V/3hQd7Lh+aEMGbiUKuXtHiRAAU561Ywc
KkAdBT1iGiBX0elONhxs+tjJBjjpVTNiHaAeOfJzwgupY90RAgQnnYMAOaeC
dYhONpg+WsBJ58A6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABo
xdfX12UCvajYxPV6Jc3b7aaoaSebTXdO/vz8kBQJkuzj8VDRZFhWd+zldBeg
+/3OndSNjpFsOUYBMspzu+njNkCRvkq6uqzP+jbEv5NHnj6hByctZO2C7oHv
7++Pj4/Pz8/R6zTe0wR6UatdSnjWfH9/19JcleWR0pAVW4zsw8moFpmOKAOa
Qa+vr+mxm0Yn7CJAVH+ijYrREcruKUBGeW4k6yFAS9GJNCnpTmQ917eIfyd3
PH1C3QB1VN+EmpLoWEcwD+rV7IEDr2tGJ/fosOXl5eXt7U13vktkabA0ZK0W
h+zDSeobCVKi0jf0lb4n5ZLDakr4WN+4n4ndkV10wi4CRApcgjg67Gr5SQ+5
7G4CpJ7nprIeArQUHaZhSW8r67++Mf6dDLuePqFugDqqb3JNSXRMI5jHUjR5
XTNqlEwgJ8kN3fkulNU9il+V7ctJkqLJHn/kY8zCc4bUQ+obKcfNUuLNRtFJ
KHcUoO8n8cfr9Uqy5SVlk+w+AmSR53ayHgKUlm1b0tvKOq9vTBdO7nj6rCp3
4aSF7CZNiTN2Ecyj/saDPaQ8p+8V57tcdjd7bCMnh3A5ooZKROIpR59rUL8B
ImPry+4pQBGVPK8m2yRACdnmJb2trPP6FvpxcsSepk9auVMnLWTTmvvbY/PH
sroXt/NRP/+olU6bZJvssXtxMjyP+rm3dGRNsufzWUU2eF2DugtQ5Ha7xcpc
TXY3ATLKc7vpE2kSoCVZDyW9uSzjs7715eRep09CuS8nLWTlmvvbYw+hdw5P
6efBH4hEHa102iTbZI/di5Ph12E+Q00oHqX6XIO6CxBDyq+vr8Mm6sjuJkBG
eW43fZhWAVqS9VDSm8syPutbX07udfoklPty0kJWrrmnPfbweVnxQvTCzk8/
BVBJp62yldegjpxk4kFl7G35dVyMzzWouwAxfPOO+hq0KruPAAWzPLebPkyr
AM3KOinpbWUjDutbd07udfosKXfnpIWsXLOvPfbj8aARCT945Y8zTmVXRb48
uQwgQTqo5O+ryW4auITdODmFkp/bUlGTrEHq0dmq2UWAeKVQf86tRHYfARqh
m+d2sk0ClBB0UtLbykYc1rdOnWT2MX3Smp06aSeb1pRExyKCeVCmUU/kH7ny
U2VKWjwlqSZLQ6aB6/7pgX04Ocv788FHKlKSNUg9OmFfAaJR8EVruhbJZfcR
oCmKeW4h2zBAieg4KeltZSMO61unTkZ2MH1CiwBNcV7fhJqS6FhEMBtOPMk7
+b5XOrya/up6vQqHc5lwWj5kM5INz8uf0qu5vOnIPpycwlevFfZ22O3VNcgi
OmEvAaJR8PZy9f2bXJLLhr0EaNq6Yp6ryzYP0FJ0PJT05rJDfW/1rVMn46D2
MX1C9QBNW/dc34SaQRAd4XtqsnTtCv9pS4YPK05zVzHx1USrhWWJ08KlR0ay
TPpyneym9+HkcLInHgi/STY6wMOnr/zj7N9jMopOQrmjAPFKQV9HZXn0B1m2
dlUoy+wjQBZ5bifrIUDCqxwrl3QPss7r2wjPTu54+qwqRzw7aSEr1GT6uh6b
WepPXMsYOqyYvU0g3hCaN66l/2gky6Q1s5veh5Onv4USfjbbN8mOHIhklLgS
l3YQoFkbp6WsMOhLssw+AmSR59VkmwSocIfgYfoYyTqvbyM8O7nj6bOqPOxt
L06qyAo1mT3tsYfnjtJ/tpgvc8r7s/UkvuSnkWwQhCCv6X04OTyoTD+zQi47
dGBIxnmeTe0KlTsK0KyNs93ODnpaNuwlQBZ5Xke2VYCEK5dKnvcl67y+jfDs
5I6nj0Q59rYLJ7Vk5ZphX3vsVfhxK+zkaeGY3Y/skKUhFzZ9ECetA2QUnYTy
Kh052e/0SSiv0pGT/QbIVXS6k40cZPoYyfY7fRLKq3TkZKvps/U9NXnP/WsO
8eOA9Ll9J7IRGuxSCAqbPoiTpgGyi044RoD6nT7BWYA6CvoQ1Defssxxpo+R
bL/TJzgLUEdBjySis+k9lSFP+F6Arf+RD1ju97vuLZxGsgwp02CXQl/Y9EGc
tAuQaXTCMQLU7/QJzgLUUdAjqG9uZcPBpo+RbL/TJzgLUEdBZ9LRkb+nFR6e
112BCsM8iJMW1LEOAcoGAXIO6ptnMH2cgwB5RuIbvAUAAAAAAAAAAAAAAAAA
AAAAAAAAAIr8Pw8WyHQ=
    "], {{0, 85.8}, {583.1999999999999, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{583.1999999999999, 85.8},
  PlotRange->{{0, 583.1999999999999}, {0, 85.8}}]], "Output",
 CellChangeTimes->{3.9000102962610216`*^9},
 CellLabel->"Out[95]=",
 CellID->142891668,ExpressionUUID->"d7c9ef53-2a3e-4ff3-92f3-51a0ef8eac35"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Using only 5, 4, or 2:", "MathCaption",
 CellChangeTimes->{{3.90001031170502*^9, 3.900010319459613*^9}},
 CellID->35870364,ExpressionUUID->"b444fe3b-fc5b-48cc-b975-ed74710cfd17"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"IntegerPartitions", "[", 
   RowBox[{"13", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "4", ",", "2"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9000101490770516`*^9, 3.9000101585199795`*^9}, {
  3.90001022966252*^9, 3.900010238668804*^9}, {3.9000102828568573`*^9, 
  3.9000103248439245`*^9}},
 CellLabel->"In[96]:=",
 CellID->5247408,ExpressionUUID->"0d016f21-1803-40ec-93f9-fb80d3b9c55c"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztW0Fu2zAQFNpLj9Wt18Jf8KHXnoxeUxQ+J4gb+OICToEiT8gP/AO/wC/w
B/wB/cB/UKZalBAkkVybs6qdcAAbsrQZcmdXXJJSPt/9uvn5riiKxw/4urn9
83W9vn36/hE/fqwelw+rxf231e/Fw2L95e49Tn7Cp8bn73GdkZGRkZGRkZGR
kZGRkZGhw263e25wOBwumdNhs9mAebvdJvLs9/vnHnCS0kkuWC4b0f4vJauq
ms/ny+XyDBtk5mQyKVoI82hgwdkGbiuhnc1miVQIUNEDTnbMRDpomNicD9EI
El02oiUqeZLaMI6Orj4beC3JiX7iW/qcOA5YcDocj8eyLKfTKTFkmvEK6kHD
xOZ8CEeQ67IRLVdJvdqanvtsqgbuJ4ogXEiMsgWnA3gQMohDDJnSmDvq6pm5
LhvR0pVUdolIhVuVXluJnFKmcTfh+DJDdh4CzHSXjWhfQfJjcuI0YYHFKWXa
OUIv1uhhePY4fvJbuGxES1dy5OSHJlioQhYcaNrVgMgpZdrxGC3TwOnr6vjJ
b+GyES1dyZGTXxanKIiaRpVgccrCoc1DCVl7gw5dRUoEaEdOfiOXr0XJqA2K
CxoKlxiNTf0vS7nbyETOskF7JwHMqClynM4vkPmAb+6qVPIkBDiNXL4WJaM2
yCsYhGcUURtcQh3kZj6ds7+H3AalCYFs/Q1eglNQkjs+BKJj5PK1KKm0ie4i
BmxwSToZjSnKpTLuFpz9p4eB8UpP24HsgYB28Co0DI8z57Xri46Ry1ehpNKm
TptBSZbiuyNI5/GETBSLoWd243D24ZtSnkSLyLruybO5wr9CCeuc4o5yyk1x
2YiWqKTeJpHKV/46/spevU+lETgHWxn8w5NoXZgEGKkCa/MwYYo7icn/ypTU
2yRS9Yvg4ChdN2Wo0L2lY8E52IqvIutp2+NV9C2sqM5nu6MMNMVlI1qukkob
LlUfVVXBHREBoLynZ8FpR+sQeEUksd2Lio4drQM3+aNLA43NIFztK8uStdFh
wWlHK4B6vnCkt3tR0bGjFQSUPMlGgK7K6jLRZhAyCGD+Rnzsa8FpR1s3EwOo
50uD9HYvKjp2tHVMSb1NB5qHLxb/V/IWMI5ubyE6OUszMs7DC6iOULs=
    "], {{0, 14.399999999999999`}, {153., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{153., 14.399999999999999`},
  PlotRange->{{0, 153.}, {0, 14.399999999999999`}}]], "Output",
 CellChangeTimes->{3.90001032533*^9},
 CellLabel->"Out[96]=",
 CellID->269955997,ExpressionUUID->"3fdd1bd2-45f2-497d-91ba-12adcee82f01"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["I'm curious if this returns the same as above.", "MathCaption",
 CellChangeTimes->{{3.900010351405167*^9, 3.9000103598886585`*^9}},
 CellID->23229569,ExpressionUUID->"6acd888f-63dc-4d97-8f1a-358a0b122c19"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"IntegerPartitions", "[", 
   RowBox[{"13", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "4", ",", "2", ",", "2"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9000101490770516`*^9, 3.9000101585199795`*^9}, {
  3.90001022966252*^9, 3.900010238668804*^9}, {3.9000102828568573`*^9, 
  3.9000103305964036`*^9}},
 CellLabel->"In[97]:=",
 CellID->320376685,ExpressionUUID->"db3a7d47-8e5b-44a2-b29b-74436af3863b"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnU1u2zAQhYV202W1KNBt4Stk0W1XQbcpiqwTNA28SYGkQNAj+Aa5QU7g
E+QCuYBukDtMXz2oIMgiRZszFBnOA2I49uSRM58omvpxPl3+Ovv5pmmau3d4
OLu4/3J7e/Hn23v88v3mbn19c/Xj683vq+ur28+Xb/HiR/x8QPy/52QymUwm
k8lkMplMJpPJZDKZTCaTyWQymUwmk0la2+12s9Pz83POnr0eHh7g/Pj4GOnz
9PS02RNeFOmklJQqqQdIig5VDKiI4UOFACLRlJVsl6pk13Xn5+fr9fqIGGyc
q9WqGcjvEyINz6Ewstj29PQ00gqAmj3hxVEYlw41jGzOpZR09GxZgnSoSkAF
DR/KA9DsDlA2ZSVbwUoeVG0Ez35EccUgcd4+0U88cp8jJ1MNz14vLy9t256c
nIhQY2QhMz6qhxpGNudSSjp6tiRNh6oEVNDwoTwA+XeA4ikr2cpWMrzaIZ13
xXQ79b9iLYYUIilrePaCD6ihOILTR2Cw7EeXEGelSuoBkqVDVQIqaPhQHoD8
tuIpK9mKVzKwV4JWmOzEl3iCnrxaxIDC8xqmj5E06AjaitMhA5T38KE8AHls
NVJWsn0F0wfWyH1ZpCTlyavFPhHxg1foof8Y4OJ7Jw06UrYadMgA5T18KA9A
LlullEupZOLpA2VZrVaoDJ6EtBsiQU9eLfY+gtPHUPB0dXXZvZMGHUFbDTpU
PaDMhw/lAchlq5RyKZVMPH3weTqsy0IaDZSUJx8BHvqIUBteLIeuYqvw2C67
d9KgI2WrRIeqB5T58KE8AE3aKqVcUCVnY7DAQUP+ZU5IDP3fUGWvixb0bHca
XpMAZ3ww4+fx/ixelrqOQAZW8iAtSEfQNg0dqgxQccOHkgPyGCqlXFAlZ2Ow
aSHAv7CdjcFbWI7Jbvzino1XIk2w+Eq8ybeQFCopu4tYhI64bTI6VAegcocP
pQXkoaOUckGVDIyZvajPE4O3uJOzTLFqC+Su4bnZU+Oe9MNtR+ILKmA7+S5q
6J+pj2s3MR0N2zR0qA5A5Q4fWgKQi45SyqVUMjCG4o6D8YaKx1FNRrer8BG/
ZuouyDSe+2ocBwYPsgXcvnt8u1bjPtTsr3NMOinp6NkOJUKHqgRU0PChPAAF
nnqQSlnJVrCS4TGRVq5V2ChlvvjcVagEnpOtTP7hQbY9Jhbmes9pSr9hTDop
6ejZjpqIp0NVAkpAh14XoMjp4/VVMjwm0mrj0P7N8nwwNuTrdzQ8J1txLQzD
bYcz/uy3k83W+eh0UtLRsx01EU+HqgRU0PChPAAF7ielUlayla1kYIys1b66
rkM6XAdI5BsgNTz1bHu5ahjfblZ0lGy16VA1gAqCPpISoKzo6NkOJTt9zJ4i
CYmZVL8Ea9tW6pIJDU89Wxaq58IR325WdJRsVelQTYAKgj6UHqCs6OjZ9vJU
8qAYFnrLJ9oiYybFM+l2uxW8l1bDU8+WdutTVM+1JcS3mxUdJVs9OlQZoIKg
91IFlBUdPVuWv5LhMSOF3Iyj8a9nalCauhmdo2WAMleC0lVCx/bzJpPJZEqv
v1f/eAA=
    "], {{0, 14.399999999999999`}, {319.8, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{319.8, 14.399999999999999`},
  PlotRange->{{0, 319.8}, {0, 14.399999999999999`}}]], "Output",
 CellChangeTimes->{3.9000103310771675`*^9},
 CellLabel->"Out[97]=",
 CellID->63208684,ExpressionUUID->"259070bf-a979-4a5e-86ea-01e1c1a6108a"]
}, Open  ]]
}, Open  ]],

Cell["No it doesn't. We must use DeleteDuplicates.", "MathCaption",
 CellChangeTimes->{{3.9000103620416064`*^9, 3.9000103705621777`*^9}},
 CellID->549956040,ExpressionUUID->"9064cf50-2015-4005-b70c-18b5155f0b24"],

Cell[CellGroupData[{

Cell["Its not free of duplicates.", "MathCaption",
 CellChangeTimes->{{3.900010374262187*^9, 3.9000103822664466`*^9}},
 CellID->110670113,ExpressionUUID->"022d7431-92c2-4d65-b7ba-40c6419efa96"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DuplicateFreeQ", "[", 
  RowBox[{"IntegerPartitions", "[", 
   RowBox[{"13", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "4", ",", "2", ",", "2"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.900010382870309*^9, 3.9000103938458476`*^9}},
 CellLabel->"In[99]:=",
 CellID->564144304,ExpressionUUID->"25216f33-ac06-45e4-bb9e-88719457166b"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.9000103883082533`*^9, 3.9000103944551325`*^9}},
 CellLabel->"Out[99]=",
 CellID->910748,ExpressionUUID->"723792cd-b4cd-4408-9d47-f0c1ebd27802"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Delete the duplicates.", "MathCaption",
 CellChangeTimes->{{3.9000104107603855`*^9, 3.9000104133093324`*^9}},
 CellID->177927844,ExpressionUUID->"3e986bb3-0a7c-449e-a0a4-0ab6a5541478"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeleteDuplicates", "[", 
  RowBox[{"IntegerPartitions", "[", 
   RowBox[{"13", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "4", ",", "2", ",", "2"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9000103712110586`*^9, 3.9000104053881645`*^9}},
 CellLabel->"In[100]:=",
 CellID->92571359,ExpressionUUID->"e4edfe01-bc95-4a2c-a226-39ce18408673"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4", ",", "5"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.900010406488783*^9},
 CellLabel->"Out[100]=",
 CellID->194295042,ExpressionUUID->"48cb2c1f-2f44-4593-84a3-0a695f6f7a1d"]
}, Open  ]]
}, Open  ]],

Cell["\<\
We can also limit the result to the a certain number of partitions.\
\>", "MathCaption",
 CellChangeTimes->{{3.9000104428240585`*^9, 3.9000104557748995`*^9}},
 CellID->58341714,ExpressionUUID->"3892254a-83c4-4894-9890-0976a5efde86"],

Cell[CellGroupData[{

Cell["Get the first 20 partitions.", "MathCaption",
 CellChangeTimes->{{3.9000104822391458`*^9, 3.900010485788381*^9}},
 CellID->135823499,ExpressionUUID->"09e0ce8a-a0fe-43e0-9fdc-787c3e9cf893"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"IntegerPartitions", "[", 
   RowBox[{"13", ",", "Infinity", ",", "All", ",", "20"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9000104566405783`*^9, 3.90001047740658*^9}},
 CellLabel->"In[101]:=",
 CellID->247630327,ExpressionUUID->"10fe80bb-7a77-48b9-b049-41b3b0d618f8"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
3t/fPz4+Ru/T6PT6+noYMN0mB6oNln17e5v+lkMqXjOemr32PS3uJFXs8Xhk
TSrd2W325CRp+v4WdFIoCyclSGpSSVY1QfXHyYZOWtAUyjbcK0d7EJE5G6E+
HiZMO76nLg8JTwlisVA8raB+zZ5dsiFkLxlyOp34v6V22Mfj8fLywoPhUgYp
KoqtSHNTavaa/pw6S8VDL+gnvc7fF6gOfcWyjYEgd+MkqfFBk50sNarIZeFk
gKiaVJLVS1DN7FhwckOhNtkreQ/ivBO0GUdLh7bktnhSJ1mp202XPZIpgRA7
xdOKWQN5zjy0gjw/PinSKNlIGSQ/wxksMmOXKyv1mro5LPtpK2mQgdQLEvdD
QWDjfTh5f+L/e7lcqJX8XTJKFk4GiKpJJVmlBFUeJy042VAzVrbyXklMj1w0
pac3cz7p455mBpZPzS57hFMCIUaKpxWzPWIrRsniN/PXKnkkpOOIm6uT1diK
UL/XHj6AkgmZOj5Og4NeHSdJv9RavVwWToZ1+EXZ47uFUq+cHQtONtSMla0/
w6F5O80cfJA0mX99faV3ctoyPqnT6DIjnxIIMVI8rZjtEU882GQPf0yTOS3n
VVbfqKlJnV6vaYQfLlnTCU6O2giDg56ek0Ou1+u0FW1ZOCmh7PE9SrbmpK5C
dho6aUFTKFt/hvP19cUX0tAGfFENLzTltDX8+HX1lrp9dNlFTgliwaTOQ5MQ
/kiar7rx14rkD1a8yuo/jjQ1qdPrNa+EMNT9/GW6IQYHPT0nPfw517CW6sjC
SQn7O763yg4mdQbHN4ayz5OcUhk/T26UoNaNDERM8S67yClBLJjUDeGT9yE8
XuXkcfrJo6lJndPptRus1PkbJQoOfTYHPSUnPbweUnZ6LJGFkxL2d3xvlR1M
6myOb/6u57cnnPrMW42GjzTxRwoj14E4nS7HTgli6W1SRzmiygksn9JUxD83
hqclh7xbXXjB9jyAx0B+nRBhAvV7PdVnH0oJSup2Z07yPKT4Ew4lsnBSQsPj
e/EEtR0xMKmzOb7x9MZ/8s6Tk0PRK135c8nDwlV2++hy7JQgllbF0woagqgv
8sEn/66uQ5Dp9hQbRVj2iFO/11P4NKeUmqRud+MkNcfXJZbti1wWTkpoeHwv
nqC2IwYmdQbHt9kbi/j8qOwlvjyPmv3VProcOyWIpVXxNIQHdslmgfTRm0JD
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
JNE=
    "], {{0, 50.4}, {503.4, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{503.4, 50.4},
  PlotRange->{{0, 503.4}, {0, 50.4}}]], "Output",
 CellChangeTimes->{3.900010477950241*^9},
 CellLabel->"Out[101]=",
 CellID->3886066,ExpressionUUID->"582e59a0-cbf6-442e-b05f-8003102716ce"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["We can compute the number of partitions with PartitionsP.", \
"MathCaption",
 CellChangeTimes->{{3.9000104893712535`*^9, 3.900010504212282*^9}},
 CellID->217747877,ExpressionUUID->"300d72be-996f-4c0c-97ec-3f3e06024ca7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"IntegerPartitions", "[", "13", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9000105117151012`*^9, 3.9000105162438755`*^9}},
 CellLabel->"In[102]:=",
 CellID->792322631,ExpressionUUID->"ece3787a-a855-432d-8b05-9681dcda6e0b"],

Cell[BoxData["101"], "Output",
 CellChangeTimes->{3.9000105170943713`*^9},
 CellLabel->"Out[102]=",
 CellID->263786884,ExpressionUUID->"4cd27576-a593-48b0-96ee-a8b953cde479"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PartitionsP", "[", "13", "]"}]], "Input",
 CellChangeTimes->{{3.9000105050509567`*^9, 3.9000105221279716`*^9}},
 CellLabel->"In[103]:=",
 CellID->98079301,ExpressionUUID->"376bace8-8272-4ce1-bf60-748b9d8508c8"],

Cell[BoxData["101"], "Output",
 CellChangeTimes->{3.9000105226029377`*^9},
 CellLabel->"Out[103]=",
 CellID->15508088,ExpressionUUID->"98c76bee-dc18-4fb7-b2f7-5845bb66f875"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here's a table.", "MathCaption",
 CellChangeTimes->{{3.900010524844239*^9, 3.900010526592042*^9}},
 CellID->391043996,ExpressionUUID->"15e17f3a-fb3a-4926-8d67-3ac302473a25"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"AssociationMap", "[", "PartitionsP", "]"}], "[", 
   RowBox[{"Range", "[", "30", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9000105271627445`*^9, 3.9000105382652903`*^9}},
 CellLabel->"In[104]:=",
 CellID->85880141,ExpressionUUID->"36fe7f46-0380-479e-b351-5c070f755e87"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      1 -> 1, 2 -> 2, 3 -> 3, 4 -> 5, 5 -> 7, 6 -> 11, 7 -> 15, 8 -> 22, 9 -> 
       30, 10 -> 42, 11 -> 56, 12 -> 77, 13 -> 101, 14 -> 135, 15 -> 176, 16 -> 
       231, 17 -> 297, 18 -> 385, 19 -> 490, 20 -> 627, 21 -> 792, 22 -> 1002,
        23 -> 1255, 24 -> 1575, 25 -> 1958, 26 -> 2436, 27 -> 3010, 28 -> 
       3718, 29 -> 4565, 30 -> 5604|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`AtomShape[34]]], 20, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Atom[Integer], 30], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`AtomShape[34]]], 20, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Atom[Integer], 30], "Path" -> {}, "DisplayedRowCount" -> 20,
      "DisplayedColumnCount" -> 1, "DataRowCount" -> 30, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["42"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["11"], 
                  Style[
                   RawBoxes["11"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[11]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["56"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["12"], 
                  Style[
                   RawBoxes["12"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[12]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["77"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["13"], 
                  Style[
                   RawBoxes["13"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[13]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["101"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["14"], 
                  Style[
                   RawBoxes["14"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[14]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["135"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["15"], 
                  Style[
                   RawBoxes["15"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[15]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["176"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["16"], 
                  Style[
                   RawBoxes["16"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[16]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["231"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["17"], 
                  Style[
                   RawBoxes["17"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[17]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["297"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["18"], 
                  Style[
                   RawBoxes["18"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[18]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["385"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["19"], 
                  Style[
                   RawBoxes["19"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[19]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["490"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["20"], 
                  Style[
                   RawBoxes["20"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[20]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["627"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 30, 1], {1, 30 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 30, 1], {1, 30 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[30, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[30, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 30, 1], {1, 30 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 30, 1], {1, 30 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{167., {286.3544921875, 291.6455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{167., {286.3544921875, 291.6455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.900010538701871*^9},
 CellLabel->"Out[104]=",
 CellID->427310048,ExpressionUUID->"02b6e5b2-4a23-43c7-9931-50817ab18794"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here's the asymptotic behavior:", "MathCaption",
 CellChangeTimes->{{3.90001054281011*^9, 3.900010553499878*^9}},
 CellID->1059363026,ExpressionUUID->"9cdbb7ae-c3ed-4fa3-904e-6949bec3dfff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscreteAsymptotic", "[", 
  RowBox[{
   RowBox[{"PartitionsP", "[", "n", "]"}], ",", 
   RowBox[{"n", "->", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9000105540797157`*^9, 3.900010563258385*^9}},
 CellLabel->"In[105]:=",
 CellID->117185868,ExpressionUUID->"805aebab-d225-46c7-b6d9-c275c4b4663e"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    SqrtBox[
     FractionBox["2", "3"]], " ", 
    SqrtBox["n"], " ", "\[Pi]"}]], 
  RowBox[{"4", " ", 
   SqrtBox["3"], " ", "n"}]]], "Output",
 CellChangeTimes->{3.9000105637475424`*^9},
 CellLabel->"Out[105]=",
 CellID->99254655,ExpressionUUID->"a76c37df-3600-4c3c-b2c0-a803d3c16ad3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscreteAsymptotic", "[", 
  RowBox[{
   RowBox[{"PartitionsP", "[", "n", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "\[Infinity]", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9000105540797157`*^9, 3.900010582072154*^9}},
 CellLabel->"In[107]:=",
 CellID->579642001,ExpressionUUID->"cab22047-403f-489c-9099-bf1fe5bf3650"],

Cell[BoxData[
 RowBox[{"PartitionsP", "[", "n", "]"}]], "Output",
 CellChangeTimes->{{3.9000105758144054`*^9, 3.9000105844920044`*^9}},
 CellLabel->"Out[107]=",
 CellID->208505507,ExpressionUUID->"adc62775-06d6-42e7-9c76-33449dd18740"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Strict partitions", "Section",
 CellChangeTimes->{{3.900010651027566*^9, 3.900010653425742*^9}, 
   3.9000793816637177`*^9},
 CellID->396359799,ExpressionUUID->"807da35a-2d0d-4879-92c8-862c4b6b937b"],

Cell[TextData[{
 "A partition in which no part occurs more than once is called ",
 StyleBox["strict",
  FontSlant->"Italic"],
 ", or is said to be a partition ",
 StyleBox["into distinct parts",
  FontSlant->"Italic"],
 ". The function ",
 StyleBox["q(n)",
  FontSlant->"Italic"],
 " gives the number of these strict partitions of the given sum ",
 StyleBox["n",
  FontSlant->"Italic"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.9000106467276087`*^9, 3.9000107410585833`*^9}},
 CellID->434343286,ExpressionUUID->"7483bfdf-16f5-4b2c-adda-385f3dc9b528"],

Cell[CellGroupData[{

Cell["Partitions of even length only:", "MathCaption",
 CellChangeTimes->{{3.900010922657089*^9, 3.9000109272277308`*^9}},
 CellID->6442517,ExpressionUUID->"497dedda-12ff-4e13-98c4-b7ca2c7f2bfa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerPartitions", "[", 
  RowBox[{"6", ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "Infinity", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[108]:=",
 CellID->97223972,ExpressionUUID->"429c3b7a-2a57-4f18-88e3-22ed5ac496d7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.900010928232665*^9},
 CellLabel->"Out[108]=",
 CellID->24553865,ExpressionUUID->"404405cb-a032-48c6-8f3c-7a1a49b4506c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Partitions of odd length:", "MathCaption",
 CellChangeTimes->{{3.9000109322085066`*^9, 3.900010935473215*^9}},
 CellID->253293210,ExpressionUUID->"805fdcf0-2bcf-4392-ae9a-cd14f80b298a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerPartitions", "[", 
  RowBox[{"6", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "Infinity", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900010930430093*^9, 3.9000109407771225`*^9}},
 CellLabel->"In[109]:=",
 CellID->63359739,ExpressionUUID->"97e2fcf4-21db-4046-8b84-a57f291d82d0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "6", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.900010942029621*^9},
 CellLabel->"Out[109]=",
 CellID->6522223,ExpressionUUID->"bc681693-fef3-4cfd-9251-a710aa77586f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Partitions with only odd elements:", "MathCaption",
 CellChangeTimes->{{3.9000109479792385`*^9, 3.9000109530509014`*^9}, {
  3.900078752151785*^9, 3.9000787665738816`*^9}},
 CellID->220844421,ExpressionUUID->"adda6eaa-8e65-40c3-9c30-f56bb26b45d4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerPartitions", "[", 
  RowBox[{"13", ",", "Infinity", ",", 
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", "13", ",", "2"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900011040350057*^9, 3.900011047443127*^9}},
 CellLabel->"In[114]:=",
 CellID->214912,ExpressionUUID->"3a3864fe-b01b-409f-ac37-399086f16bda"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "13", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "5", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "3", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "5", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "5", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3", ",", "3", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "3", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9000110478017187`*^9},
 CellLabel->"Out[114]=",
 CellID->25845793,ExpressionUUID->"0b2eb987-1041-4c45-bf8a-d5d45494b2f4"]
}, Open  ]]
}, Open  ]],

Cell["\<\
There is a bijection between the partitions of a strictly positive integer \
into odd numbers and the partitions of a number into distinct parts.\
\>", "MathCaption",
 CellChangeTimes->{{3.90007230656148*^9, 3.9000723284583626`*^9}},
 CellID->75517260,ExpressionUUID->"43d6a01c-1c16-4119-92b3-3eaf65e056d1"],

Cell[CellGroupData[{

Cell["\<\
Find the strict integer partitions of 16. List the partitions of 16 into \
distinct parts.\
\>", "MathCaption",
 CellChangeTimes->{{3.9000723300730405`*^9, 3.9000723371487017`*^9}, {
  3.9000723859891543`*^9, 3.900072386321136*^9}},
 CellID->162588612,ExpressionUUID->"fdce58ae-2231-4c2c-a614-3887fa58115d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"StrictIntegerPartitions", "[", "16", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.900072337965463*^9, 3.900072341860276*^9}},
 CellLabel->"In[959]:=",
 CellID->56544164,ExpressionUUID->"36587a29-d2d0-49c4-bad4-2c9583732f5f"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnc1tLT1yhg/sjZdWCIZS0MJbrwRvxzC0noE/D7T5DM8YMKwMTgYnA0Wg
CJSAHIAyuDnQ5VO4BG//sItkVXex+T7AFaRzW0XyrR+S/ad/+NN//OHf/+Zy
ufz17+jLH/743//0l7/88X/+5e/ph3/9/a+vf/79t3/759//67c///aXf/zT
39KH/0n//pe++f/vAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAEPD+/n69Xj8/P9cO+P7+5mPyhx3CWufpk+sMxc5vinYgkr7dbjc6ho7U
avTj44NF/vr60rKpS0aWHz9+8P+SLFr9t7Cpzs6aMEah4jklw1b3TNNHPdm1
2F8T06z0HIGbfdPtvPX8q8XOskQsUtJz+J0GWgy/vLy8vr7WHUM+enx8vNwh
Z80PoAJFv3hJmBzGlqmJxoGod54+ucxYHGMpm6IFY1laHMrQXMbHPD8/t/eH
Zq7YKLPYN7ehEtXI978Ioc2hNAniUCnl8JQMDVIbaRLJJ7vPSmWkiVFUBwcR
2DIpCGeNIoTzr9uslBxQje78GxyE3ziQjJtb9cVjSPnoo6enp0VP0Xqb/+vh
4YGctbZRJePURONA1DvPKa+7y5a0G7GTpVoThtxKDuVjVFKejPDkRS3GDdri
/t1tqMQIp6/0/Vr/5chtjqNJKAkVIU5SMjRIra5JiiTZHVYqI00sotpJBNZJ
XdT5IuTzr8OstJMlaM+/TsJvHCQuWzuG/E7/RV6I2TE5gD+n0kRB0t6NOho7
r96fzXZTjGSp1oShpKMj6TCtJff3nfjj7XYjy2up7TBU6L/SCOdTEI01tsjm
IJqEwlAR4iElM5Y3u2ehSUSY7N4qlZEmRlHtIQKrpS7qvJyi+ddhVhrJEgzm
Xw/hNw4tS+645VzzFO2eaN+k1Y06qjtvtOTebDdl5+oq6RvPMjSF0fdaKT/v
Rsayw1CZwPM7CaXYt7zNMTUJW6EiN8Lf+Fxyl0qtogkjT3aHlWpyvEWx0opq
DxFYLXWpL4Q4X3IfJYvF/Osh/MahZckdWfTU9/c3f0jf8K3+9HXtRqD9UyaS
X3Lz9SyLJ2UcVtfIWt/4klb8daMl9/v7e6wqcxyGSrhHO4fKy8sLHfP29tbe
H7nNcTSZkA+VUnwuuSPCuVtLk6Jk91apJijGiWlU9zgpyA8oomj+9ZyVirJY
z79Ycu+A3ZKbTyxMnmG5rNz55jBlrrPHN8jU5h0ycnqsrnxJK4pgseQm4xQz
aSsTHIZK+BntDHVe5XSu3OY4mqRshkopJ1hyK2pSlOzeKlWKbpyYRnWPk4L8
gCKK5l/PWakoi/X8iyX3DlgvuXnV/fb2Fk8LLJY+hymTvqQoPimj2M/uquv8
KqrFkpufdepueRnPfcVQaa+xcpvjaJKyGSqlnGDJraVJabK7qlQTdOPENKq7
mxSKDiiiaP71nJVasuww/2LJbcrX1xdFcv56jeSYkF1yT96uQ2tv+nDxpSWS
hopo6fwcvqZz0bu7W9KuuiwtmjzcuSbwfoq/V+keT475NwD4DxWalFkrvQ5u
2BxQE0molHJISsptbnZPUZPSZHdVqVIs4iSiHtXdTQpFB7SQn389Z6WWLDvM
v0cVwEGgKrT5LhHJMSG75F78cH5PHb++W/297tWdX4RfoaPUO+klUV1ZWjS5
ZGnsGHWJL4JsDraLUHm+v6NMqXfbNofSRB4qpRySkkFDanVNSpPdVaWKXTKK
kxTdTO9uUig6oJHM/OszK4UHCDGdf+VdtZB6HLgotR+z5inalNEuLP2Ea+B8
i0Sf52ObVukVXm7p/AR+UngynJa+Sdq1kKVak+uMzC67qGPx/e2SX/EfKnzv
qGKo5G2GkTSRh0rFkI9KydAmtYUmRckenFWqYBwnaSu6md7dpFB0QIvUmfk3
uMxK+QHCvtnNv/KuBjOpx6HlXu74N9x5p09f+cf4WhK+qBejgmvg4msD893g
u5jqtorVnY8HxGMuSzcElvZts11J5+ua3jRb1Lewfi9ZacdiYExKyuIfPnAY
KmmfM38go6hvQpv5nle0K7R8iCZBHCpFZj2kZMbyZvcsNJmzluz5zjc27U0T
o6j2EIHtE2W+89WaXLPzb77zdU1LLB8lS4rW/Osh/MahZckdE2FCLGvxVEOE
flzcIuW7EZ/ErLh1v7rzkwNo47CY76V922xX0vm6pjfNFvUtrKd8accWG72s
pK3DUJl8ThPx4tq4qG9Cm/meV7QrtHyIJnOza6FSZNZDSmYsl0qtosmc/C96
q1RGmkysaUW1hwjUmijXOt+oydr8m+98XdMSy0fJkrL2Wz2G3zionOWeMNkc
Uabw5y2voeA7UiYPY0qo7nx6QP7vvBf1TShavvN1TW+aLepbuJ/zWVsHFnVs
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
4Zs25afB01k481cbSs1y8NDXyUS/eBkrf2NSadObZjeV5MTk297iMxfzdw6U
diya5eaiREWdr2taYvkQWWKjsd3L0j1speMVJgsziNQTLiv3H/aY6RnLh0h9
bFHtMVk23ccP/64VzIp2hae4M32rbnrTssWohbNPj8GTsWyhpNGc5aSQno/M
ixYvS0TBNw9g4oMSwhvsJ9YoLBc3R41mI4sxkLdZ2vSm2U0l434zsripLO3Y
3GzmT0sbaZKxfIgsk0ZpRlh8ZqR0vMJkiQdnTJ1G6glrv9VjpmcsHyL1pK2d
i2qPySJ0H22FFgtmRbtX2SnuTN+qm960bDFq4ezTY/BkLFsoaTRnLcp42b2Q
no/N7diE+VnutQMifMFo8qzEGqmp/PPv1WYbt2ylTW+aFSpJavDnmYcUKjoW
zebVNtIkY/kQWdJG8w/yFI1XnixhGKknXO/PE7Xb9JDpGcuHSJ02dEhR7S5Z
Nt1HY8xfSS9tlx+pa+lbddOblu1GLZl9uguejGULJY3mLHl2B0slz4fdvoOf
xmWp17aZfsymrGnS2HR3UqcYaZKx3I6FLJB6EUgttNxOR1L368Fq9/U75Izl
TTqKyRQoqYWdkufjWfut6ZF4NWHtOqYrsxFSYy1+GpvuTuqInSahN1kg9SKQ
egKktjMbcVir+x1ycDZqKAklTwn/mTPhJa0ieIPz8fGhO/UYmWWu9+c41mKj
senupGZMNQm9yQKpF4HUEyC1nVnGZ63ud8jB2aihZF3T+9iMWCt5VvAOc2YH
HbqTep8OdyeLBZB6NyB17wxYqxG0WkBJLUYYIwAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAgB34+Pi43vn6+lI3frvdyPL7+7uKtR8/fpApMkhm
LXrbSEdKBrPesoM+Pz8VbWoRh0yd/P7+brRGY7yu0G48jKRkClnjgWuN3TQr
21FXcjEs25V0XntDP0oGy5gcs2h0tMzw5iDrWSxol3T/hSjch/zy8vL6+jr5
nDr89PR0SZgf0wKlGJt9fn5WtJbvLY9UN6Mj51CSevv4+KjeW0qEaJYyYvEY
U++ErIMmQyYaSzSN8bJCY2EZTUmGaik1l5pdG7sQYZyfTMnFsGxU0kPtDadQ
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
guy8v7+zTWpOxebHxwcb/Pr6UjHIcD+1OqmCnYMWLSuO/Xa7kUGSVMtgI90p
+ePHDw5IUlI3zsNgoR7RjUk7BxnVNy10S7p1IQoGtchh+qR04aBh0yfYLIpC
J/XNzjvespK8/PLy8vr6mn5IPbysoJJT1Fxqk5prtEluenx8TG1ORlQHOSua
Xeskq6c1+8/Z2UGLltsdxFBascHn5+f5/0LJTaKAunEehgx1Jh+T1dZ0HSSs
b6YOWvQOY1HSTQtR0Pa72/RhenHQidMn7O4gxn99M1q8Bb2s1A0MsjbfVixu
YJ+enqjnjXsQCi228/DwQKPQ2tBROLGnyFoM3ZZtHckbncUdzqQAaUIyVreV
Z2cHcSG1OLlEriencyfX0h9KbtqMiUNf6fvGOA8Dh3qQxWQRFg4KJfXNzkGL
3glmJd2uEAVVvztPn9CVg06cPmF3B4VO6pv64i0YZKViYAgdwb5r9xrnKQlL
BhtNpXzfiT/ebjdqpVEiHi9JHWtL5mCVeG6xrOugRiOLkDuoh6RnPv2hZAZS
L00cPueQj0wJY4Z6EMekHCMHFdU3IwetmTUq6XaFKGj73Xn6dOSgE6dPxrKR
g0In9c1i8RYMslIrMIR2uNvtOy/aetCmo9HIJtTP9hiLg/VZSCdoOchopuPc
pGyi750vuZ0rmcLVibRttDNmqMtjshotB03I17edl9xGJd0ufdT97jx9unNQ
5Ezpk7Fs5KBO65vK4i0YZOWeS26t00q0l+Gx0zd8Sz99tbh16v39PQZbOz4L
aYrieb/0cqHW8xGT7nlecjtXMtyTiG2+vLyQ/be3NxWzzDihXhSTRZg6iMnX
tz2X3HYl3Sh97PweXKZPdw46a/qsWTZyUL/1TXfxFvpccmudVuL9y+RWeZWb
tVIo2KgJijetyzQOC+kELQdFUynUgUYl+fJWNOJ5ye1cyfAziRhSVfcMwzih
XhSTRZg6KAjq255LbruSbpQ+dn4PLtOnOwedNX3WLBs5qNP6pr54Cx0uuXm7
RDq0txWdRdZocxQ3SroK8x34ipHgsJCmKDoo/Pq0Wnw+omV082tPbpfczpVk
4kmGaLP9XsfIIKFeGpNFmDooCOrb/ktui5JukT6mfg8u06cvB4Xzps+aZQsH
9Vvf1BdvwdOS++vriwa4eT2IO6xyIpqja/IGGAqzi9J5xfDTZbqnzSUuE4pZ
xP4OmsOLnEvDPXsPd64JXF74+/nxUFIOVT+WV8vgIKFeGpPVqDtIUt/UHZQx
uENJZ1TSx9rvDtOnLwdNOEf65G1aOKjT+maxeAt6WdkeGDS0zYdk1c/7zcfO
H7bfukNd5e3hIS7j92rqNr2/gxbhd+xU//oly/x4KFkEv2FJy9ogoV4aky1o
OUhe39QdlPGOaUmf0J4+1n53mD59OWjOCdIn7O6g7uqb3eIt6GWlSmDwSDMH
SE4rUWDIuzGfNFnq+d6hyGx8s+XmrxSZZSQuo1HkFwwV7YYjHDSBn3peXOcI
zV5nXLI7bigph+98U7Q5SKgXxWSL07UcJK9vwcZBGe8YlfQJKulj7Xef6dOR
gyacJn3Cvg7qq76ZLt6CUlYKj5GQuUFFclqJ7xraHFGErx1E77PU8zfklJqN
diaRNrk0U2Q2/ulV3sfRV/5x8Wni/H0+pcMRWrZwUBx1HPhl6d6qlhFdGu7l
HlzJNLYzf4mguqtDhXrKWkyW2jRykLC+MUYOWjNrVNJ3KERBye/O06cjB504
fTKWjRyU4rm+WSzegmpWyo+RkLFzFZxWijf/C/sTdzQR+nG+dyg1e1lh4p0i
s7GMTKjI09LhCC1bOGgyaqoDi88ytIwo/1tQMsMkFKniLfa5sauDhHrK2m81
FiItBy1657Iy+xg5aO14o5K+QyEKSn53nj4dOejE6ZOxbOSgFJU4DzYOEnrn
wElNfoywY2v/xW+J3LTAF0Em9//nodzkHUfm0dQis9cV5vLKzaa7+JS6XVKF
SpuWLRyUjjr/+Eb1iMhyZu0EJTOkcZh/rLu6q+OEekomJqsLkaKD5PUtmDko
b1a9pO9QiIKS3/2nT+jEQSdOn03L6g5K8Vzf5N45cFITHiOh2g6/K4ZFWNs7
nN5sZE3G9nYHcVAESnqzOWEQB3Xk9AlGDnLlne7MRgZJHyOz/aZPxvImHSnZ
UVdTdl5y190THs/zr11cqKMvswwJuOaO9nYHcRADJR3aTBnHQR05PcXOQa68
051ZZpz0MTLbb/oEZw6C0yMZpxcdI4SGwzeul/4ibz0+Pj4U/4pNd2bD/bII
CbgWCe3tDuKgACW92owM5aCOnB4xdZAr73RnNgyWPkZm+02f4MxBcDqTd7r8
mFJ0X/w+FPtIN4KDoKRz4CDn7CAdvFMN0sc5cNCASNwBlwEAAAAAAAAAAAAA
AAA4Jf8HJbnAqg==
    "], {{0, 67.8}, {586.1999999999999, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{586.1999999999999, 67.8},
  PlotRange->{{0, 586.1999999999999}, {0, 67.8}}]], "Output",
 CellChangeTimes->{3.9000723451968317`*^9},
 CellLabel->"Out[959]=",
 CellID->456381390,ExpressionUUID->"feaf95a5-0376-4000-8d2e-337e540c5350"]
}, Open  ]]
}, Open  ]],

Cell["\<\
A strict integer partition has no duplicate parts. For example, {5,3,1,1} has \
a duplicated 1. Therefore, {5,3,1,1} is not a strict integer partition. \
{6,4,2,1} has all unique parts so it is a strict integer partition.\
\>", "MathCaption",
 CellChangeTimes->{3.9000723700415845`*^9},
 CellID->608704478,ExpressionUUID->"dd4f666c-8caf-4b0b-9a7a-d177bb6ae7ea"],

Cell[CellGroupData[{

Cell["\<\
The number of strict integer partitions is given by the partition function \
q(n).\
\>", "MathCaption",
 CellChangeTimes->{{3.9000690996932354`*^9, 3.9000691405698757`*^9}},
 CellID->473619221,ExpressionUUID->"4778d41a-2c3b-4fb7-98c0-c04e49030aba"],

Cell[BoxData[
 FormBox[
  RowBox[{"q", "(", "n", ")"}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.9000691321626005`*^9, 3.900069134315406*^9}},
 CellID->106841266,ExpressionUUID->"7193699f-cbad-48df-ae80-547c41f3828f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"StrictIntegerPartitions", "[", "16", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9000691525609365`*^9, 3.900069157978324*^9}},
 CellLabel->"In[949]:=",
 CellID->61033979,ExpressionUUID->"12df89f7-1acc-479e-8c80-1b027e732a8f"],

Cell[BoxData["32"], "Output",
 CellChangeTimes->{{3.900069154951561*^9, 3.9000691583523364`*^9}},
 CellLabel->"Out[949]=",
 CellID->59630373,ExpressionUUID->"5969c65f-c99f-4f08-a2b6-79434c8759b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PartitionsQ", "[", "16", "]"}]], "Input",
 CellChangeTimes->{{3.9000691487913933`*^9, 3.9000691607986884`*^9}},
 CellLabel->"In[950]:=",
 CellID->538171443,ExpressionUUID->"04fe40e9-6fd1-4489-b464-f197385d75e5"],

Cell[BoxData["32"], "Output",
 CellChangeTimes->{3.900069161189311*^9},
 CellLabel->"Out[950]=",
 CellID->90431125,ExpressionUUID->"b78f9e6b-3b13-4372-abe9-df66008806a7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The function can generate large numbers of partitions quickly and efficiently:\
\>", "MathCaption",
 CellChangeTimes->{{3.900069243488905*^9, 3.900069256041125*^9}, {
  3.9000693247768126`*^9, 3.9000693373424797`*^9}},
 CellID->379632069,ExpressionUUID->"87914f41-0615-4642-bf4b-3652853ac9e5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PartitionsQ", "[", "80", "]"}]], "Input",
 CellChangeTimes->{{3.900069186360506*^9, 3.900069188383721*^9}, {
   3.9000692254250755`*^9, 3.900069225870653*^9}, 3.9000693054009495`*^9},
 CellLabel->"In[957]:=",
 CellID->232513693,ExpressionUUID->"5a37a233-6af9-4c4f-9c88-6e0f3517e70b"],

Cell[BoxData["77312"], "Output",
 CellChangeTimes->{3.9000691886392155`*^9, 3.900069226944871*^9, 
  3.9000693063401814`*^9},
 CellLabel->"Out[957]=",
 CellID->627297665,ExpressionUUID->"83eb7cad-6477-41ff-a2b5-866e4f35b450"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<EchoPerformance\>\"", "]"}], "[", 
  RowBox[{"Length", "[", 
   RowBox[{"StrictIntegerPartitions", "[", "80", "]"}], "]"}], "]"}]], "Input",\

 CellChangeTimes->{{3.9000693080830784`*^9, 3.900069321257531*^9}},
 CellLabel->"In[958]:=",
 CellID->108164460,ExpressionUUID->"0821aeb8-897b-4547-bb56-5ff5b51392d4"],

Cell[BoxData[
 RowBox[{
  TagBox["Length",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    StyleBox[
     TemplateBox[{"3.0216282`", "\" s\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]], ",", 
    StyleBox[
     TemplateBox[{"26677952", "\" B\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]]}], "}"}]}]], "Echo",
 CellChangeTimes->{3.900069325468849*^9},
 CellID->106645799,ExpressionUUID->"5914f933-8bb3-4e9c-92a7-a955d60b36ec"],

Cell[BoxData["77312"], "Output",
 CellChangeTimes->{3.900069325682794*^9},
 CellLabel->"Out[958]=",
 CellID->590840625,ExpressionUUID->"9436890c-b37d-46b2-a05f-b321d727978f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test this for the first 80 numbers:", "MathCaption",
 CellChangeTimes->{{3.9000691641020117`*^9, 3.9000691713729935`*^9}, {
   3.90006923842896*^9, 3.9000692394699645`*^9}, 3.900069303218977*^9},
 CellID->81068847,ExpressionUUID->"8900585a-20a4-4f56-90a7-6545ae7adadd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"AllTrue", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"StrictIntegerPartitions", "[", "#", "]"}], "]"}], "===", 
     RowBox[{"PartitionsQ", "[", "#", "]"}]}], "&"}], "]"}], "[", 
  RowBox[{"Range", "[", "80", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.900069172316986*^9, 3.9000691932643323`*^9}, {
  3.900069228828887*^9, 3.900069229233568*^9}, {3.9000692596925488`*^9, 
  3.9000692638213525`*^9}},
 CellLabel->"In[956]:=",
 CellID->34391304,ExpressionUUID->"a97179cc-6b85-48a4-9487-ce2d06a5b126"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.9000692222376747`*^9, 3.900069232866205*^9}, 
   3.9000692673023796`*^9, 3.9000692992559156`*^9},
 CellLabel->"Out[956]=",
 CellID->571946354,ExpressionUUID->"88470a52-4c04-4dce-a470-249d380bcc0a"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "For more details, please visit my Mathematica Stack Exchange post ",
 ButtonBox["Design a function that gives all strict partitions of an integer",
  
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://mathematica.stackexchange.com/questions/288361/design-a-\
function-that-gives-all-strict-partitions-of-an-integer/288362#288362"], None},
  ButtonNote->
   "https://mathematica.stackexchange.com/questions/288361/design-a-function-\
that-gives-all-strict-partitions-of-an-integer/288362#288362"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.9000724606674423`*^9, 3.900072471502365*^9}},
 CellID->667377072,ExpressionUUID->"99e3f5c6-22ed-4c8f-a5e5-6b0d02c799ba"]
}, Closed]],

Cell[CellGroupData[{

Cell["Ferrers diagrams", "Section",
 CellChangeTimes->{{3.9000064678984003`*^9, 3.9000064705517635`*^9}, 
   3.900079380033536*^9},
 CellID->645694398,ExpressionUUID->"49888560-4acf-40f7-acbe-4c29c877ef2a"],

Cell[CellGroupData[{

Cell["Make a Ferrers diagram for every partition of 5.", "MathCaption",
 CellChangeTimes->{{3.899749400851626*^9, 3.8997494092761846`*^9}},
 CellID->478421323,ExpressionUUID->"dab32751-7fe4-42f8-988e-18e668dc4f85"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{"FerrersDiagram", "/@", 
     RowBox[{"IntegerPartitions", "[", "5", "]"}]}], ",", 
    RowBox[{"UpTo", "[", "3", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.899749559219838*^9, 3.8997495620700817`*^9}},
 CellLabel->"In[1005]:=",
 CellID->542729463,ExpressionUUID->"56fcecae-9ed5-4142-a8f2-3f3fb4dda47c"],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      TagBox[GridBox[{
         {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>"}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], {29.5625, -40.3125}, {Center, Center}, {55., 75.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      TagBox[GridBox[{
         {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>", "", "", ""}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], {88.6875, -40.3125}, {Center, Center}, {55., 75.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      TagBox[GridBox[{
         {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", ""}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], {147.8125, -40.3125}, {Center, Center}, {55., 75.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {
     InsetBox[
      TagBox[GridBox[{
         {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>", "", ""},
         {"\<\"\[FilledCircle]\"\>", "", ""}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], {29.5625, -120.9375}, {Center, Center}, {55., 75.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      TagBox[GridBox[{
         {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>", ""}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], {88.6875, -120.9375}, {Center, Center}, {55., 75.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      TagBox[GridBox[{
         {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>", ""},
         {"\<\"\[FilledCircle]\"\>", ""},
         {"\<\"\[FilledCircle]\"\>", ""}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], {147.8125, -120.9375}, {Center, Center}, {55., 75.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {
     InsetBox[
      TagBox[GridBox[{
         {"\<\"\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>"}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], {29.5625, -201.5625}, {Center, Center}, {55., 75.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     TagBox[InsetBox["", {88.6875, -201.5625}, {Center, Center}, {55., 75.},
       BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}],
      "InsetString"], 
     TagBox[InsetBox["", {147.8125, -201.5625}, {Center, Center}, {55., 75.},
       BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}],
      "InsetString"]}}, {}},
  ImageSize->Automatic,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.8997495625907516`*^9},
 CellLabel->"Out[1005]=",
 CellID->25169857,ExpressionUUID->"eec87719-43d3-42cc-a766-9784791c77ca"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rows 1 to 4 have 5, 4, 2, 2 dots:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.765829554031358*^9, 3.765829573726055*^9}},
 CellID->59602588,ExpressionUUID->"88786608-25c5-45d8-8697-ffb397f6d0e9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FerrersDiagram", "[", 
  RowBox[{"{", 
   RowBox[{"5", ",", "4", ",", "2", ",", "2"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8983577165611973`*^9, 3.8983577214598713`*^9}},
 CellLabel->"In[18]:=",
 CellID->141527026,ExpressionUUID->"715a7406-b524-4f24-aa11-9f368e1dcfb0"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>"},
    {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", ""},
    {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "", "", ""},
    {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "", "", ""}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.898357721742388*^9, 3.8993962051168375`*^9},
 CellLabel->"Out[18]=",
 CellID->387932858,ExpressionUUID->"0dff4e2e-84e5-46d4-823b-54b73c2e9565"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Here is a",
 StyleBox[" ", "MathCaption"],
 "random choice of one of the 204226 partitions of 50:"
}], "MathCaption",
 CellChangeTimes->{3.8993962334151325`*^9},
 CellID->909413053,ExpressionUUID->"9a7bb339-5acc-450c-90aa-457b2e7a0a8b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Framed", "@", 
  RowBox[{"FerrersDiagram", "@", 
   RowBox[{"RandomChoice", "[", 
    RowBox[{"IntegerPartitions", "@", "50"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8983577165611973`*^9, 3.8983577348146467`*^9}, {
  3.899396215343503*^9, 3.8993962297246037`*^9}},
 CellLabel->"In[20]:=",
 CellID->285728069,ExpressionUUID->"20bac007-b674-4699-9022-8c0f5d30c013"],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\
\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", \
"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", \
"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>"},
     {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\
\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", \
"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", \
"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>"},
     {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\
\<\"\[FilledCircle]\"\>", "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\
\<\"\[FilledCircle]\"\>", "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>", "", "", "", "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "", "", "", "", 
      "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "", "", "", "", 
      "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "", "", "", "", 
      "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "", "", "", "", 
      "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "", "", "", "", "", "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "", "", "", "", "", "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "", "", "", "", "", "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "", "", "", "", "", "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "", "", "", "", "", "", "", "", "", ""}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.8983577351541634`*^9, {3.8993962200654726`*^9, 3.8993962305310087`*^9}},
 CellLabel->"Out[20]=",
 CellID->291815495,ExpressionUUID->"478ab664-36b3-4451-b715-fd5da17c7ce2"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Select permutations", "Section",
 CellChangeTimes->{{3.900079266767185*^9, 3.900079271809374*^9}},
 CellID->32678798,ExpressionUUID->"eac1bd43-a23c-4346-94e1-517a54020881"],

Cell[CellGroupData[{

Cell["\<\
Select from the list {5,6,7,8,9} those permutations that form a prime when \
concatenating the digits: \
\>", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.775568205955653*^9, 3.775568227320828*^9}, {
  3.775568257522637*^9, 3.775568284776268*^9}, {3.775568406638788*^9, 
  3.7755684078891897`*^9}},
 CellID->123284224,ExpressionUUID->"e54e82a6-dbce-4362-9169-a9975857f455"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"PrimeQ", "@*", "FromDigits"}]}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.775568168324977*^9, 3.775568246840334*^9}, {
   3.775568343294755*^9, 3.7755683487998447`*^9}, {3.775568398156794*^9, 
   3.775568423898609*^9}, {3.776529126287918*^9, 3.77652913001302*^9}, 
   3.898627106119957*^9},
 CellLabel->"In[1033]:=",
 CellID->841619866,ExpressionUUID->"3a40e6c4-01d6-4f96-8bd0-a7f195673010"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "8", ",", "9", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "7", ",", "6", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8", ",", "6", ",", "7", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8", ",", "9", ",", "6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "5", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "7", ",", "5", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "8", ",", "5", ",", "9", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "9", ",", "8", ",", "5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "5", ",", "6", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "5", ",", "8", ",", "6", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8", ",", "5", ",", "6", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "6", ",", "5", ",", "7", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "9", ",", "5", ",", "6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "9", ",", "6", ",", "5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "6", ",", "5", ",", "8", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "6", ",", "8", ",", "5", ",", "7"}], "}"}]}], 
  "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.775568183396497*^9, 3.775568201638604*^9}, {
   3.775568255076702*^9, 3.775568263439975*^9}, {3.775568380685358*^9, 
   3.775568424252521*^9}, 3.7756595100280657`*^9, {3.776529095525774*^9, 
   3.776529130338461*^9}, 3.776529313866888*^9, 3.777914407196706*^9, 
   3.8986271159046593`*^9, {3.899750326409789*^9, 3.8997503438722515`*^9}},
 CellLabel->"Out[1033]=",
 CellID->89679823,ExpressionUUID->"d40d7588-7387-4503-990c-25053f44c00b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here are the numbers.", "MathCaption",
 CellChangeTimes->{{3.899750347468344*^9, 3.89975035017175*^9}},
 CellID->24958883,ExpressionUUID->"93c199ef-1dcf-4716-a2f7-32565162c0eb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FromDigits", "/@", 
  RowBox[{
   StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
    RowBox[{"PrimeQ", "@*", "FromDigits"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.899750351130355*^9, 3.8997503536065807`*^9}},
 CellLabel->"In[1036]:=",
 CellID->484647955,ExpressionUUID->"a05b1c3d-d8fa-43fb-ab74-5b0e0d9534c1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "56897", ",", "57689", ",", "58679", ",", "58967", ",", "65789", ",", 
   "67589", ",", "68597", ",", "69857", ",", "75689", ",", "75869", ",", 
   "78569", ",", "86579", ",", "89567", ",", "89657", ",", "96587", ",", 
   "96857"}], "}"}]], "Output",
 CellChangeTimes->{3.899750353965536*^9},
 CellLabel->"Out[1036]=",
 CellID->123777944,ExpressionUUID->"dfc55999-6db3-493f-95aa-675d46d6f0a3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Select permutations of length 3:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.77556848444596*^9, 3.7755685001038637`*^9}},
 CellID->837471449,ExpressionUUID->"51599647-8f38-4c09-ba4b-d079463656aa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"PrimeQ", "@*", "FromDigits"}]}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.7755684786907463`*^9, 3.7755684795515823`*^9}, 
   3.8986271076058855`*^9, 3.8997503780590734`*^9},
 CellLabel->"In[1034]:=",
 CellID->724085147,ExpressionUUID->"a74b27e6-7e06-41c1-8edf-440bf1936693"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "5", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "6", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "6", ",", "7"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.7755684799271097`*^9, 3.775568497623534*^9}, 
   3.775659511887641*^9, 3.7765291338475637`*^9, 3.77652931593814*^9, 
   3.777914412861889*^9, 3.8986271164919386`*^9, 3.8997503446104565`*^9},
 CellLabel->"Out[1034]=",
 CellID->96753963,ExpressionUUID->"a1d9c8f1-a109-4904-a164-af271fee0430"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here are the numbers.", "MathCaption",
 CellChangeTimes->{{3.8997503847406015`*^9, 3.899750387408563*^9}},
 CellID->505704633,ExpressionUUID->"44b0e377-0c8c-46e7-91f5-5640159abd91"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FromDigits", "/@", 
  RowBox[{
   StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
    RowBox[{"{", "3", "}"}], ",", 
    RowBox[{"PrimeQ", "@*", "FromDigits"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8997503882187953`*^9, 3.8997503919935703`*^9}},
 CellLabel->"In[1039]:=",
 CellID->220964068,ExpressionUUID->"81ae2a2e-003a-4e0e-b19c-dd1fa212fff1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "569", ",", "587", ",", "659", ",", "769", ",", "857", ",", "859", ",", 
   "967"}], "}"}]], "Output",
 CellChangeTimes->{3.8997503924270816`*^9},
 CellLabel->"Out[1039]=",
 CellID->74427375,ExpressionUUID->"90f5a01e-f50c-4e1a-ac65-0307a3e292da"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Select permutations with length 3\[LongDash]4:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.77556848444596*^9, 3.775568509805202*^9}, {
  3.775568557163394*^9, 3.775568581141801*^9}},
 CellID->733329592,ExpressionUUID->"ef31bdc3-7a7b-478d-a9df-6d13a2c6e136"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"PrimeQ", "@*", "FromDigits"}]}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.7755684786907463`*^9, 3.7755684795515823`*^9}, {
   3.7755685117029343`*^9, 3.775568514832704*^9}, {3.775568548776168*^9, 
   3.775568573740428*^9}, 3.8986271097288756`*^9},
 CellLabel->"In[1035]:=",
 CellID->472360365,ExpressionUUID->"037bf1b1-4429-4ecb-8d0a-49b30135a33c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "5", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "6", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8", ",", "6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8", ",", "6", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8", ",", "7", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8", ",", "9", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "9", ",", "8", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "8", ",", "5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "5", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5", ",", "9", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "5", ",", "8", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "8", ",", "5", ",", "7"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.7755684799271097`*^9, 3.775568515310902*^9}, {
   3.7755685510649137`*^9, 3.775568573972561*^9}, 3.77565951429523*^9, 
   3.7765291361641808`*^9, 3.77652931673779*^9, 3.777914421493857*^9, 
   3.8986271173406982`*^9, 3.8997503452354593`*^9},
 CellLabel->"Out[1035]=",
 CellID->45157847,ExpressionUUID->"d65f0a6a-bdcf-4a7f-85f8-ae6da196fa34"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here are the numbers.", "MathCaption",
 CellChangeTimes->{{3.8997503986814213`*^9, 3.899750401894279*^9}},
 CellID->232625522,ExpressionUUID->"068eeb79-7927-4169-be98-c524cd2500ea"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FromDigits", "/@", 
  RowBox[{
   StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}], ",", 
    RowBox[{"PrimeQ", "@*", "FromDigits"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.899750402509916*^9, 3.899750408302501*^9}},
 CellLabel->"In[1040]:=",
 CellID->129412639,ExpressionUUID->"0efe243a-63d2-4cdc-85cf-1f19f74ea8e1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "569", ",", "587", ",", "659", ",", "769", ",", "857", ",", "859", ",", 
   "967", ",", "5689", ",", "5867", ",", "5869", ",", "5879", ",", "5897", 
   ",", "5987", ",", "6857", ",", "7589", ",", "8597", ",", "9587", ",", 
   "9857"}], "}"}]], "Output",
 CellChangeTimes->{3.899750408595244*^9},
 CellLabel->"Out[1040]=",
 CellID->294220470,ExpressionUUID->"d0d3a66b-109a-421b-9050-78f24f1c1453"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Select permutations for which the first two elements and the last elements \
add up to the same value:\
\>", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.775568615672393*^9, 3.775568642910595*^9}},
 CellID->979377819,ExpressionUUID->"4b9a050f-32fa-451a-bac4-d8ef338e7ebb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "2"}], "]"}], "]"}], "]"}], "==", 
     RowBox[{"Total", "[", 
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"3", ";;", "4"}], "]"}], "]"}], "]"}]}], "&"}]}], 
  "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.775568591553537*^9, 3.7755686112570133`*^9}, 
   3.898627111559018*^9},
 CellLabel->"In[1041]:=",
 CellID->174898405,ExpressionUUID->"db9223bc-91e4-4f53-a226-b4e760d7eda0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "3", ",", "2"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.775568611591529*^9, 3.775568644008772*^9, 
  3.775659516424469*^9, 3.7765291414916773`*^9, 3.77652931856979*^9, 
  3.8986271181438427`*^9, 3.8997504412437253`*^9},
 CellLabel->"Out[1041]=",
 CellID->408943794,ExpressionUUID->"e3291f4d-e4f6-4261-8a8d-df5edf23dde4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Select the first ten permutations of length 4 for which the elements add up \
to an odd number:\
\>", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.775568753645933*^9, 3.775568812706834*^9}},
 CellID->559719523,ExpressionUUID->"c1f934dc-d3e6-449f-b0b9-64c63eb50be6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}], 
   ",", 
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"OddQ", "@*", "Total"}], ",", "10"}], "]"}]], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{
  3.775568390327188*^9, {3.775568657121542*^9, 3.775568658024325*^9}, {
   3.7755687157418547`*^9, 3.7755687754639063`*^9}, 3.898627183585071*^9},
 CellLabel->"In[1042]:=",
 CellID->359245144,ExpressionUUID->"616ed975-f9df-42c3-9189-7aa024bf0bd5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "5", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "6", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "5", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "5", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "6", ",", "5"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.7755687038053503`*^9, 3.7755688138863287`*^9}, 
   3.7756595189226503`*^9, 3.776529143745932*^9, 3.7765293197019567`*^9, 
   3.898627205694783*^9, 3.8997505791303563`*^9},
 CellLabel->"Out[1042]=",
 CellID->162633939,ExpressionUUID->"ccfeaaf9-a77c-49e6-b431-80aa0267357b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Select polynomials for which the slope is 1 at ",
 Cell[BoxData[
  RowBox[{
   StyleBox["x", "TI"], "=", "0"}]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "76f05bbe-7ce6-4ea4-87d4-a127ae521545"],
 ":"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.775568978297995*^9, 3.775568990453267*^9}, 
   3.7779148648834963`*^9},
 CellID->306011383,ExpressionUUID->"49b0ae1b-f115-420e-a74a-9f0a60daa6bd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"out", "=", 
  RowBox[{"Total", "/@", 
   RowBox[{
    StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"4", "x"}], ",", "1", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "-", "2"}], ")"}], "^", "2"}]}], "}"}], ",", "4", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"Total", "[", "#", "]"}], ",", "x"}], "]"}], ")"}], "/.", 
         
         RowBox[{"x", "\[Rule]", "0"}]}], ")"}], "\[Equal]", "1"}], "&"}]}], 
    "]"}]}]}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.7755690066041317`*^9, 3.775569013725047*^9}, 
   3.8986271855484247`*^9},
 CellLabel->"In[1043]:=",
 CellID->884651642,ExpressionUUID->"d89d3e87-2f7e-4938-a750-d180213c8877"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"1", "+", "x"}], ",", 
   RowBox[{"1", "+", "x"}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.775568996876224*^9, 3.775569014097753*^9}, 
   3.775659522403158*^9, 3.7756596276060133`*^9, 3.776529146850255*^9, 
   3.776529321528561*^9, 3.8986272065335693`*^9, 3.899750596239173*^9},
 CellLabel->"Out[1043]=",
 CellID->320654796,ExpressionUUID->"555a95b2-dad9-4348-abe6-9fc80ab72fd2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Expand the polynomials.", "MathCaption",
 CellChangeTimes->{{3.8997506020821342`*^9, 3.899750605125643*^9}},
 CellID->22585214,ExpressionUUID->"97f20388-d472-480e-9907-179c765d3fc5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", "out", "]"}]], "Input",
 CellChangeTimes->{{3.8997506056179447`*^9, 3.899750608200514*^9}},
 CellLabel->"In[1045]:=",
 CellID->548368980,ExpressionUUID->"78c44ea5-b68d-4257-aafc-7352432ccaf2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"1", "+", "x"}], ",", 
   RowBox[{"1", "+", "x"}], ",", 
   RowBox[{"4", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"4", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"4", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"4", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"4", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"4", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.899750608675965*^9},
 CellLabel->"Out[1045]=",
 CellID->266909173,ExpressionUUID->"b21eae70-47a7-4c6a-a07f-b35f1c609c75"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["There are really only three unique ones.", "MathCaption",
 CellChangeTimes->{{3.8997506924034615`*^9, 3.8997506979678574`*^9}},
 CellID->305030941,ExpressionUUID->"cdbcd419-8839-43cd-bab5-048193b552f0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeleteDuplicates", "[", 
  RowBox[{"Expand", "[", "out", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997506844197226`*^9, 3.8997506878270464`*^9}},
 CellLabel->"In[1050]:=",
 CellID->206631954,ExpressionUUID->"54844170-c23b-4eb7-bedb-63f808af91e0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"1", "+", "x"}], ",", 
   RowBox[{"4", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.899750688145549*^9},
 CellLabel->"Out[1050]=",
 CellID->390480037,ExpressionUUID->"b500366e-f9a0-4c94-ac23-8a4ac6367df0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Make a graph of all of them.", "MathCaption",
 CellChangeTimes->{{3.8997506154916935`*^9, 3.899750619080804*^9}},
 CellID->240106575,ExpressionUUID->"c038b589-14ad-4b1d-9f1b-71965f63bb06"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Expand", "[", "out", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "2"}], "Pi"}], ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8997506592409725`*^9, 3.8997506687715807`*^9}, 
   3.8997507016913366`*^9},
 CellLabel->"In[1051]:=",
 CellID->154729335,ExpressionUUID->"09639f36-1c3f-4b05-8983-809a44c7eef4"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1:eJxF1OlLE3AcgPHpnJut6S53WK1WJJhiSia2mTNCU0NS05wvUhJcS3FODSNm
2Mi0UElpUPMqqZkHOjMkaV7VdGllU0SHEmKbOkxqznvqqKB9fy8ePv/Bw03P
SchwxmAwsX/7Z0y0+/kdLnvAIb+r0ELgIP24P+sYXkj3bd1WIBU51iRvFzsj
hYR19uQPFnhdN2PpeIEsjmiuFx1H5k7YqI9pTHDkqpfZRGOAe30tHTy2J2js
XKmKd6ODwQ2uExVEGhh6dNy/bIsCHpS53ylfIoP62kCh6LsH+E38ZvG0hgQ2
+oyFxPUSwYBqvTRv2A3kBpydZrTiwaV3ETjX1zjwQJbm2q1yLGgfoaosuU5g
vmB/4o1Ne7/D7lNfB9a7bKCaMtTB7N0A83lKbFiOFeTdT4syZy6Dv8W7j4oe
mMB72hqeYGsKnNSEaluwA2CaX+ReYlWfwOFclDBJUm8A19QCNYtvAqdVHMmK
fhmUSTRRSc+soPD5yeTaig1QVDrsPKu3gR+LfX3LP9vBVMr8B3qKU7jDVZ4u
bK4AC6pzSNvpUhzoUrQgT1fgQbnyWDRT4QZedCny0T4kgu3R2YZfzSQwpLp/
cFTlAbanj4czFsig6Eii77k1CthpxHdFWqhgDB3nXeZEBwtigoJbMJ7gcJM1
YdCGFN+0XTm8jwnWRATZLuNZYEtb8pM+IrLbUxbkQ0ZOzr+X2FlIcsklY9MJ
ZMlQ5pe9WGTehYb6VwqkXK3lU5XISqbZUFiHbFv0pyU0Is2lPaW7b5Gpn6ak
8TPI7IAdUs8ssvApp9XbhFSKM+Z3lpEThNWURjvSKGVskrFs0Go4o5DhkR7N
d0fjyEgO5WWWho70u60jeLOR/LklVeUh5P9vgX8AEpM2Xw==
          "]], LineBox[CompressedData["
1:eJwt1P9P1HUcwHHgPA84D+7b5+79kc9R2KQRRLiIERifVxYENEMJAX8A6xZ4
iQJqkQZFVyY1cMmCKaCYC+jACYQxXHz5vBOEICWg62C4hsjXAPFABDzgrNbr
h+ce/8HTS58Rm+Lk4OCw+9/+MzrK7bU1L5b+L0NDG3Oszp4sylA/r9mLmq0s
ylC3x12rO5QsytB+k7HW4MSiDE10fsRa7hFUTQ923bHWf09QNT0VXl2eup2g
anrUbFN+q9KiKtqTtHV6XKVBlXSjraY+hGVQBR1rWCjc66JG5TTo8mbzGamK
Ht4lM3lo3ejObQP++asKeuL1iiTNgpRy2W6fFMzIafAyZyN/utC+CzsSU/9y
RyX0d8O1qZeaZaiYVvn0B+9plaIiGlDal3ms2wV1pF4Brwxrrkjornc+/un5
+CfCzM/h4s0/iqn5w3zXLfo1wSOt+d2PCkQ0yJLVPk9WBHuPstJ61JGuF2+P
Hh1bFI7zW+LeX7ELk58S08D8feH6i7fpo0abkHmw1DibNiHUKTrrta3LQksE
aU9eGhaOh5SIwjIWhfN/dHPWk+1CyJcHIqcPzQkBFlFrq6mFf2BY/yb3q3Fh
m7/krsMDC/9FR1kIvzootOka9HdF47yleWdHjYgKrv3Wt5gns/wBv4iNuMI2
vlNvjmH+XuBHIxP3pZcP8cHK+OKyZ5f5pTq+joSO87bBSwkFOhs/XOmZvtA3
x9+PdW86YbDz2enNkfsuLfJhTUkVNTGOkPjdCwkXzizzfn3nfHsjRJCa1+00
0mfjr7W/Z8wwiKH9lK9vwW92Xn+jmOlMkUCyYuKGer8j6gIPQ7rCRrNEqBTq
MmSP9ZliVAabcieN+iIJ6g7GkmeitEUuQG8VVkh75PDmplyfjq+l4P25oL7X
oYDaqCND89UyGKwIOrxiVkJwqXCzt9IduNsj+qkBFdTqB0AzKUfVkPp0nO+r
SwqUgYYxSWOEVYlqIFot9s53VKMEsqIDg2ocGJSFbtNi7E0bg7Jg+MAW/5Sr
FvWAsvBA29sSgnJQczXhXJuUoBxcZ7IDfeQE5cAy8Uu6nRCUA/npmDHTcwTl
4HTnoVsbuwnKwbE3Lpf/UERQDox1HaHKEoJycFY7PZRzkaAcXJ3yV8VWEZSD
6byWvPUmgnKQ/Otg5t47BOXgSMCarGWEoBzknPe84j1OUA5KDCkTa3ME5cDs
/HB/lZ2gHIxlalbkIhbVweLQy0XZEhbVgXv1Z7175CyqA09FRVqzmkV14Hey
y9mbZVEdhI7OVJ7VsagO8F+oDv4BHdg3PA==
          "]], LineBox[CompressedData["
1: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
          "]], LineBox[CompressedData["
1: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
Ffz//wu4v5dGC3e3gv8BbCq7cg==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
      Slot["HighlightElements"], 
      Slot["LayoutOptions"], 
      Slot["Meta"], 
      Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1:eJxF1OlLE3AcgPHpnJut6S53WK1WJJhiSia2mTNCU0NS05wvUhJcS3FODSNm
2Mi0UElpUPMqqZkHOjMkaV7VdGllU0SHEmKbOkxqznvqqKB9fy8ePv/Bw03P
SchwxmAwsX/7Z0y0+/kdLnvAIb+r0ELgIP24P+sYXkj3bd1WIBU51iRvFzsj
hYR19uQPFnhdN2PpeIEsjmiuFx1H5k7YqI9pTHDkqpfZRGOAe30tHTy2J2js
XKmKd6ODwQ2uExVEGhh6dNy/bIsCHpS53ylfIoP62kCh6LsH+E38ZvG0hgQ2
+oyFxPUSwYBqvTRv2A3kBpydZrTiwaV3ETjX1zjwQJbm2q1yLGgfoaosuU5g
vmB/4o1Ne7/D7lNfB9a7bKCaMtTB7N0A83lKbFiOFeTdT4syZy6Dv8W7j4oe
mMB72hqeYGsKnNSEaluwA2CaX+ReYlWfwOFclDBJUm8A19QCNYtvAqdVHMmK
fhmUSTRRSc+soPD5yeTaig1QVDrsPKu3gR+LfX3LP9vBVMr8B3qKU7jDVZ4u
bK4AC6pzSNvpUhzoUrQgT1fgQbnyWDRT4QZedCny0T4kgu3R2YZfzSQwpLp/
cFTlAbanj4czFsig6Eii77k1CthpxHdFWqhgDB3nXeZEBwtigoJbMJ7gcJM1
YdCGFN+0XTm8jwnWRATZLuNZYEtb8pM+IrLbUxbkQ0ZOzr+X2FlIcsklY9MJ
ZMlQ5pe9WGTehYb6VwqkXK3lU5XISqbZUFiHbFv0pyU0Is2lPaW7b5Gpn6ak
8TPI7IAdUs8ssvApp9XbhFSKM+Z3lpEThNWURjvSKGVskrFs0Go4o5DhkR7N
d0fjyEgO5WWWho70u60jeLOR/LklVeUh5P9vgX8AEpM2Xw==
             "]], 
            Line[CompressedData["
1:eJwt1P9P1HUcwHHgPA84D+7b5+79kc9R2KQRRLiIERifVxYENEMJAX8A6xZ4
iQJqkQZFVyY1cMmCKaCYC+jACYQxXHz5vBOEICWg62C4hsjXAPFABDzgrNbr
h+ce/8HTS58Rm+Lk4OCw+9/+MzrK7bU1L5b+L0NDG3Oszp4sylA/r9mLmq0s
ylC3x12rO5QsytB+k7HW4MSiDE10fsRa7hFUTQ923bHWf09QNT0VXl2eup2g
anrUbFN+q9KiKtqTtHV6XKVBlXSjraY+hGVQBR1rWCjc66JG5TTo8mbzGamK
Ht4lM3lo3ejObQP++asKeuL1iiTNgpRy2W6fFMzIafAyZyN/utC+CzsSU/9y
RyX0d8O1qZeaZaiYVvn0B+9plaIiGlDal3ms2wV1pF4Brwxrrkjornc+/un5
+CfCzM/h4s0/iqn5w3zXLfo1wSOt+d2PCkQ0yJLVPk9WBHuPstJ61JGuF2+P
Hh1bFI7zW+LeX7ELk58S08D8feH6i7fpo0abkHmw1DibNiHUKTrrta3LQksE
aU9eGhaOh5SIwjIWhfN/dHPWk+1CyJcHIqcPzQkBFlFrq6mFf2BY/yb3q3Fh
m7/krsMDC/9FR1kIvzootOka9HdF47yleWdHjYgKrv3Wt5gns/wBv4iNuMI2
vlNvjmH+XuBHIxP3pZcP8cHK+OKyZ5f5pTq+joSO87bBSwkFOhs/XOmZvtA3
x9+PdW86YbDz2enNkfsuLfJhTUkVNTGOkPjdCwkXzizzfn3nfHsjRJCa1+00
0mfjr7W/Z8wwiKH9lK9vwW92Xn+jmOlMkUCyYuKGer8j6gIPQ7rCRrNEqBTq
MmSP9ZliVAabcieN+iIJ6g7GkmeitEUuQG8VVkh75PDmplyfjq+l4P25oL7X
oYDaqCND89UyGKwIOrxiVkJwqXCzt9IduNsj+qkBFdTqB0AzKUfVkPp0nO+r
SwqUgYYxSWOEVYlqIFot9s53VKMEsqIDg2ocGJSFbtNi7E0bg7Jg+MAW/5Sr
FvWAsvBA29sSgnJQczXhXJuUoBxcZ7IDfeQE5cAy8Uu6nRCUA/npmDHTcwTl
4HTnoVsbuwnKwbE3Lpf/UERQDox1HaHKEoJycFY7PZRzkaAcXJ3yV8VWEZSD
6byWvPUmgnKQ/Otg5t47BOXgSMCarGWEoBzknPe84j1OUA5KDCkTa3ME5cDs
/HB/lZ2gHIxlalbkIhbVweLQy0XZEhbVgXv1Z7175CyqA09FRVqzmkV14Hey
y9mbZVEdhI7OVJ7VsagO8F+oDv4BHdg3PA==
             "]], 
            Line[CompressedData["
1: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
             "]], 
            Line[CompressedData["
1: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
Ffz//wu4v5dGC3e3gv8BbCq7cg==
             "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{(-2) Pi, 2 Pi}, {-6.283185050723043, 
            50.76159943235257}}, "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
          "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>]]& )[<|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{(-2) Pi, 2 Pi}, {-6.283185050723043, 
           50.76159943235257}}, "Frame" -> {{False, False}, {False, False}}, 
         "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
         "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
         "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}}]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJxF1OlLE3AcgPHpnJut6S53WK1WJJhiSia2mTNCU0NS05wvUhJcS3FODSNm
2Mi0UElpUPMqqZkHOjMkaV7VdGllU0SHEmKbOkxqznvqqKB9fy8ePv/Bw03P
SchwxmAwsX/7Z0y0+/kdLnvAIb+r0ELgIP24P+sYXkj3bd1WIBU51iRvFzsj
hYR19uQPFnhdN2PpeIEsjmiuFx1H5k7YqI9pTHDkqpfZRGOAe30tHTy2J2js
XKmKd6ODwQ2uExVEGhh6dNy/bIsCHpS53ylfIoP62kCh6LsH+E38ZvG0hgQ2
+oyFxPUSwYBqvTRv2A3kBpydZrTiwaV3ETjX1zjwQJbm2q1yLGgfoaosuU5g
vmB/4o1Ne7/D7lNfB9a7bKCaMtTB7N0A83lKbFiOFeTdT4syZy6Dv8W7j4oe
mMB72hqeYGsKnNSEaluwA2CaX+ReYlWfwOFclDBJUm8A19QCNYtvAqdVHMmK
fhmUSTRRSc+soPD5yeTaig1QVDrsPKu3gR+LfX3LP9vBVMr8B3qKU7jDVZ4u
bK4AC6pzSNvpUhzoUrQgT1fgQbnyWDRT4QZedCny0T4kgu3R2YZfzSQwpLp/
cFTlAbanj4czFsig6Eii77k1CthpxHdFWqhgDB3nXeZEBwtigoJbMJ7gcJM1
YdCGFN+0XTm8jwnWRATZLuNZYEtb8pM+IrLbUxbkQ0ZOzr+X2FlIcsklY9MJ
ZMlQ5pe9WGTehYb6VwqkXK3lU5XISqbZUFiHbFv0pyU0Is2lPaW7b5Gpn6ak
8TPI7IAdUs8ssvApp9XbhFSKM+Z3lpEThNWURjvSKGVskrFs0Go4o5DhkR7N
d0fjyEgO5WWWho70u60jeLOR/LklVeUh5P9vgX8AEpM2Xw==
          "]], 
         Line[CompressedData["
1:eJwt1P9P1HUcwHHgPA84D+7b5+79kc9R2KQRRLiIERifVxYENEMJAX8A6xZ4
iQJqkQZFVyY1cMmCKaCYC+jACYQxXHz5vBOEICWg62C4hsjXAPFABDzgrNbr
h+ce/8HTS58Rm+Lk4OCw+9/+MzrK7bU1L5b+L0NDG3Oszp4sylA/r9mLmq0s
ylC3x12rO5QsytB+k7HW4MSiDE10fsRa7hFUTQ923bHWf09QNT0VXl2eup2g
anrUbFN+q9KiKtqTtHV6XKVBlXSjraY+hGVQBR1rWCjc66JG5TTo8mbzGamK
Ht4lM3lo3ejObQP++asKeuL1iiTNgpRy2W6fFMzIafAyZyN/utC+CzsSU/9y
RyX0d8O1qZeaZaiYVvn0B+9plaIiGlDal3ms2wV1pF4Brwxrrkjornc+/un5
+CfCzM/h4s0/iqn5w3zXLfo1wSOt+d2PCkQ0yJLVPk9WBHuPstJ61JGuF2+P
Hh1bFI7zW+LeX7ELk58S08D8feH6i7fpo0abkHmw1DibNiHUKTrrta3LQksE
aU9eGhaOh5SIwjIWhfN/dHPWk+1CyJcHIqcPzQkBFlFrq6mFf2BY/yb3q3Fh
m7/krsMDC/9FR1kIvzootOka9HdF47yleWdHjYgKrv3Wt5gns/wBv4iNuMI2
vlNvjmH+XuBHIxP3pZcP8cHK+OKyZ5f5pTq+joSO87bBSwkFOhs/XOmZvtA3
x9+PdW86YbDz2enNkfsuLfJhTUkVNTGOkPjdCwkXzizzfn3nfHsjRJCa1+00
0mfjr7W/Z8wwiKH9lK9vwW92Xn+jmOlMkUCyYuKGer8j6gIPQ7rCRrNEqBTq
MmSP9ZliVAabcieN+iIJ6g7GkmeitEUuQG8VVkh75PDmplyfjq+l4P25oL7X
oYDaqCND89UyGKwIOrxiVkJwqXCzt9IduNsj+qkBFdTqB0AzKUfVkPp0nO+r
SwqUgYYxSWOEVYlqIFot9s53VKMEsqIDg2ocGJSFbtNi7E0bg7Jg+MAW/5Sr
FvWAsvBA29sSgnJQczXhXJuUoBxcZ7IDfeQE5cAy8Uu6nRCUA/npmDHTcwTl
4HTnoVsbuwnKwbE3Lpf/UERQDox1HaHKEoJycFY7PZRzkaAcXJ3yV8VWEZSD
6byWvPUmgnKQ/Otg5t47BOXgSMCarGWEoBzknPe84j1OUA5KDCkTa3ME5cDs
/HB/lZ2gHIxlalbkIhbVweLQy0XZEhbVgXv1Z7175CyqA09FRVqzmkV14Hey
y9mbZVEdhI7OVJ7VsagO8F+oDv4BHdg3PA==
          "]], 
         Line[CompressedData["
1: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
          "]], 
         Line[CompressedData["
1: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
Ffz//wu4v5dGC3e3gv8BbCq7cg==
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PlotRange" -> {{(-2) Pi, 2 Pi}, {-6.283185050723043, 
         50.76159943235257}}, "Frame" -> {{False, False}, {False, False}}, 
       "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
       "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
       "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{411., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{(-2) Pi, 2 Pi}, {-6.283185050723043, 
     50.76159943235257}}, {{-6.283185307179586, 
    6.283185307179586}, {-6.283185050723043, 50.76159943235257}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8997506629712496`*^9, 3.8997506699964204`*^9}, 
   3.8997507025033484`*^9},
 CellLabel->"Out[1051]=",
 CellID->256275073,ExpressionUUID->"f154aec9-1c63-4687-af42-d0ccf2bb4af5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Confirm that the slope is indeed unity at ",
 Cell[BoxData[
  RowBox[{
   StyleBox["x", "TI"], "=", "0"}]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "658d9069-052d-4a78-807d-b2307ffbbeeb"],
 ":"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.775569032362935*^9, 3.775569042022148*^9}, 
   3.7779148702157297`*^9},
 CellID->700662694,ExpressionUUID->"c49c47bb-07bf-4089-86bb-5876026c9710"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"#", ",", "x"}], "]"}], "/.", 
    RowBox[{"x", "\[Rule]", "0"}]}], "&"}], "/@", "out"}]], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.775569008779991*^9, 3.775569029774448*^9}},
 CellLabel->"In[1044]:=",
 CellID->70632808,ExpressionUUID->"a98557a9-9b98-4467-9b05-2a75aa7ee5c5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1"}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.775569024986065*^9, 3.77556903028509*^9}, 
   3.775659524049831*^9, 3.7756596295261593`*^9, 3.776529148801647*^9, 
   3.776529322629979*^9, 3.898627207716029*^9, 3.89975059849707*^9},
 CellLabel->"Out[1044]=",
 CellID->542659924,ExpressionUUID->"e8303556-47fa-44dc-be41-04fab469a82a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Duplicated items are treated the same:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.7756596329305153`*^9, 3.775659640189417*^9}},
 CellID->444986081,ExpressionUUID->"cad94071-5735-4208-946d-8633c71f82c6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"6", ",", "7", ",", "7", ",", "7", ",", "8"}], "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Total", "[", "#", "]"}], "\[Equal]", "14"}], ")"}], "&"}]}], 
  "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.775658730148959*^9, 3.775658747520253*^9}, {
   3.7756590438565607`*^9, 3.775659044412951*^9}, {3.7756596525277853`*^9, 
   3.7756596527056847`*^9}, 3.898627188198241*^9},
 CellLabel->"In[1053]:=",
 CellID->991815813,ExpressionUUID->"c0c0989c-ee18-4052-b455-a6d37724b89c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"6", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "6"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.775658748232149*^9, 3.775658894579425*^9, 3.775658982885504*^9, {
   3.77565902072548*^9, 3.775659044907261*^9}, {3.7756591949370537`*^9, 
   3.775659233580648*^9}, {3.7756593450669947`*^9, 3.775659400072006*^9}, 
   3.7756595071964903`*^9, 3.7756596532496367`*^9, 3.77652915012943*^9, 
   3.776529324231215*^9, 3.8986272089147067`*^9, 3.8997507439514027`*^9},
 CellLabel->"Out[1053]=",
 CellID->33854908,ExpressionUUID->"0f978c9a-ffce-47f3-a31b-a17e7d767b52"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "ea1496de-4c52-4528-a5df-1ae739e31dc8"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->14107563,ExpressionUUID->"26a11390-68be-4741-bd0b-257c701cdbaa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The main difference between ",
 Cell[BoxData[
  RowBox[{
   StyleBox["SelectPermutations", "InlineResourceFunction"], "[", 
   RowBox[{
    StyleBox["list", "TI"], ",", 
    StyleBox["crit", "TI"]}], "]"}]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "575193c7-2d6b-4b72-b26a-9f8c49c1cedc"],
 " and ",
 Cell[BoxData[
  RowBox[{
   TagBox[
    ButtonBox[
     StyleBox["Select", "SymbolsRefLink",
      ShowStringCharacters->True,
      FontFamily->"Source Sans Pro"],
     BaseStyle->Dynamic[
       FEPrivate`If[
        CurrentValue["MouseOver"], {
        "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
        "Link"}]],
     ButtonData->"paclet:ref/Select",
     ContentPadding->False],
    MouseAppearanceTag["LinkHand"]], "[", 
   RowBox[{
    RowBox[{
     TagBox[
      ButtonBox[
       StyleBox["Permutations", "SymbolsRefLink",
        ShowStringCharacters->True,
        FontFamily->"Source Sans Pro"],
       BaseStyle->Dynamic[
         FEPrivate`If[
          CurrentValue["MouseOver"], {
          "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
          "Link"}]],
       ButtonData->"paclet:ref/Permutations",
       ContentPadding->False],
      MouseAppearanceTag["LinkHand"]], "[", 
     StyleBox["list", "TI"], "]"}], ",", 
    StyleBox["crit", "TI"]}], "]"}]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "7cc33c01-f687-4a53-a8a7-75038c8e46e8"],
 " is the memory usage:"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.775659692231538*^9, 3.775659737034504*^9}, {
  3.777915104180867*^9, 3.7779151337974873`*^9}},
 CellID->771301361,ExpressionUUID->"88cb37a6-3315-4822-b6f3-13fb9720dfb8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MaxMemoryUsed", "[", 
  RowBox[{
   RowBox[{"result1", "=", 
    RowBox[{
     StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"3", ",", "13"}], "]"}], ",", "6", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Total", "[", "#", "]"}], "\[Equal]", "24"}], "&"}]}], 
     "]"}]}], ";"}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.7756597419331837`*^9, 3.775659859377911*^9}, 
   3.775659965227964*^9, 3.898627193741088*^9},
 CellLabel->"In[1063]:=",
 CellID->535666113,ExpressionUUID->"f7552833-4362-40df-b886-80a1a576e5dd"],

Cell[BoxData["76800"], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.77565978044046*^9, 3.775659822081428*^9}, {
   3.775659853998701*^9, 3.775659866096383*^9}, 3.775659977992035*^9, 
   3.7756600199457493`*^9, 3.776529154597158*^9, 3.776529328657302*^9, 
   3.8986272131614175`*^9, 3.8997509658672943`*^9},
 CellLabel->"Out[1063]=",
 CellID->27544576,ExpressionUUID->"835b6aa8-cabc-4a9d-8fcc-ef6f20ff0999"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Using ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Select", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Select",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "609a9553-afc8-4b93-b5f7-f27c23da1735"],
 " and ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Permutations", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Permutations",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "bf22e393-8fbf-45bf-9958-79244de6b856"],
 " uses 500 times more memory:"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.775659958690896*^9, 3.775660003727075*^9}, {
  3.777914890455714*^9, 3.777914892938813*^9}},
 CellID->444708281,ExpressionUUID->"507f59f5-e50f-482c-82e3-a22514659678"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MaxMemoryUsed", "[", 
  RowBox[{
   RowBox[{"result2", "=", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"Permutations", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"3", ",", "13"}], "]"}], ",", "6"}], "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Total", "[", "#", "]"}], "\[Equal]", "24"}], "&"}]}], 
     "]"}]}], ";"}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.775659826770007*^9, 3.775659862367159*^9}, 
   3.775659967831942*^9},
 CellLabel->"In[1064]:=",
 CellID->887464862,ExpressionUUID->"5b6fc599-e64c-4912-894b-4ca97226a080"],

Cell[BoxData["37563192"], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.775659833819317*^9, 3.775659867629966*^9}, 
   3.775659978889728*^9, 3.775660020843718*^9, 3.776529158151636*^9, 
   3.776529329564918*^9, 3.898627215249345*^9, 3.899750968308219*^9},
 CellLabel->"Out[1064]=",
 CellID->141130879,ExpressionUUID->"f697d21b-748f-4239-8677-d899dbb70ca3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Verify that the results are identical:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.775660014046246*^9, 3.775660019525916*^9}},
 CellID->486162817,ExpressionUUID->"dbb75bbd-ba6c-4d7e-810c-301c7eef1ecd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result1", "\[Equal]", "result2"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.775659839679294*^9, 3.775659844204294*^9}},
 CellLabel->"In[1065]:=",
 CellID->615462631,ExpressionUUID->"ad01a415-f04d-42f8-9562-c0fdbb2a247c"],

Cell[BoxData["True"], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.775659844726769*^9, 3.775659872379087*^9}, 
   3.775660021901587*^9, 3.7765291614553967`*^9, 3.776529330743194*^9, 
   3.8986272164723682`*^9, 3.8997509725188107`*^9},
 CellLabel->"Out[1065]=",
 CellID->86302315,ExpressionUUID->"ba76ab0b-b0b0-4a5c-9eaa-34d8c0e08a80"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "40f75d6c-e9dd-4b4d-bf54-e2488aeb7efa"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->14107564,ExpressionUUID->"0c2ec0db-99f8-49c3-ad10-05c18b8ff704"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Head", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Head",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "0c9cc0d5-9bbb-413f-981b-0d420a0728bb"],
 " does not have to be ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["List", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/List",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "459be08e-fa7e-4eda-a808-dd883f313b03"],
 ":"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.775659940349708*^9, 3.77565995308701*^9}, 
   3.77791491092492*^9},
 CellID->177535240,ExpressionUUID->"12d95e0b-3357-46b9-8228-02dbd8d5f70e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "]"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Plus", "@@", "#"}], ")"}], "\[Equal]", "6"}], "&"}], ")"}]}], 
  "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.775564501355146*^9, 3.77556453064013*^9}, {
   3.775564595079977*^9, 3.775564596369431*^9}, {3.775564628426854*^9, 
   3.775564631573576*^9}, 3.8986271968174934`*^9},
 CellLabel->"In[1066]:=",
 CellID->661797484,ExpressionUUID->"eb5243ad-37c4-464d-8548-9ddc6f6ee58b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "5"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"2", ",", "4"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"4", ",", "2"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"5", ",", "1"}], "]"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.77556451988704*^9, 3.77556463182666*^9}, 
   3.7755676679041758`*^9, 3.775567712707305*^9, 3.775567818332111*^9, 
   3.77565941046673*^9, 3.776529163330064*^9, 3.776529331852521*^9, 
   3.898627217703313*^9, 3.899750978216648*^9},
 CellLabel->"Out[1066]=",
 CellID->4477802,ExpressionUUID->"cf32f940-542b-4426-a494-db342588d3ce"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  StyleBox["SelectPermutations", "InlineResourceFunction"]], "Text", 
  "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "06008863-4ecb-4021-b597-21fe7ab712be"],
 " might take longer as it is written in higher-level code as compared to the \
implementation of ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Permutations", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Permutations",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "9c580542-aff4-4e5b-b8ea-91da70e846aa"],
 ":"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.775660090968472*^9, 3.775660098838415*^9}, {
   3.7756601400967207`*^9, 3.7756601913190613`*^9}, {3.775660772370102*^9, 
   3.775660773132094*^9}, 3.777914921223103*^9},
 CellID->445973593,ExpressionUUID->"9833fc09-0507-48b0-9628-3da3e6ba1653"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"MaxMemoryUsed", "[", 
   RowBox[{"time", "=", 
    RowBox[{
     RowBox[{"AbsoluteTiming", "[", 
      RowBox[{
       RowBox[{"result1", "=", 
        RowBox[{
         StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"3", ",", "13"}], "]"}], ",", "6", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Total", "[", "#", "]"}], "\[Equal]", "24"}], "&"}]}], 
         "]"}]}], ";"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<Time [sec]:\>\"", ",", "time"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Memory usage [bytes]:\>\"", ",", "%"}], "}"}]}], "}"}], 
  "]"}]}], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.7756597419331837`*^9, 3.775659859377911*^9}, 
   3.775659965227964*^9, {3.775660049700783*^9, 3.775660083250841*^9}, {
   3.775660118779077*^9, 3.775660124189692*^9}, {3.775660205971373*^9, 
   3.7756602250985403`*^9}, {3.77566028295162*^9, 3.775660290393875*^9}, 
   3.89862720069182*^9},
 CellLabel->"In[1067]:=",
 CellID->869163183,ExpressionUUID->"567e5de2-e258-4c15-b489-04cabbda0e04"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Time [sec]:\"\>", "3.1487261`"},
    {"\<\"Memory usage [bytes]:\"\>", "76800"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.775660067861252*^9, 3.775660096264962*^9}, 
   3.7756601377891083`*^9, 3.7756602380948133`*^9, 3.775660304651354*^9, 
   3.776529168387677*^9, 3.776529336205114*^9, 3.8986272219757886`*^9, 
   3.8997509844159756`*^9},
 CellLabel->"Out[1068]=",
 CellID->56459738,ExpressionUUID->"6a7ba05b-87fd-43d7-80f7-f59039185438"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Using the built-in functions is faster at the expense of 500\[Times] more \
memory:\
\>", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.77566024669878*^9, 3.775660272888628*^9}, {
  3.777914945795113*^9, 3.7779149479544086`*^9}},
 CellID->686745089,ExpressionUUID->"91c3c161-1737-4015-8ba4-ac5c75fb472a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"MaxMemoryUsed", "[", 
   RowBox[{"time", "=", 
    RowBox[{
     RowBox[{"AbsoluteTiming", "[", 
      RowBox[{
       RowBox[{"result2", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Permutations", "[", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"3", ",", "13"}], "]"}], ",", "6"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Total", "[", "#", "]"}], "\[Equal]", "24"}], "&"}]}], 
         "]"}]}], ";"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<Time [sec]:\>\"", ",", "time"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Memory usage [bytes]:\>\"", ",", "%"}], "}"}]}], "}"}], 
  "]"}]}], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.775659826770007*^9, 3.775659862367159*^9}, 
   3.775659967831942*^9, {3.775660053118082*^9, 3.775660079464134*^9}, {
   3.7756601315275993`*^9, 3.7756601353531027`*^9}, 3.775660229163328*^9, 
   3.7756602943707857`*^9},
 CellLabel->"In[1069]:=",
 CellID->674295727,ExpressionUUID->"08342840-648c-44c8-8431-aa966b2c60ee"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Time [sec]:\"\>", "0.8987349`"},
    {"\<\"Memory usage [bytes]:\"\>", "37562680"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.775660054335277*^9, 3.775660097146056*^9, 3.775660138701022*^9, 
   3.775660239000139*^9, {3.7756602757471437`*^9, 3.775660305548664*^9}, 
   3.77652917555011*^9, 3.776529337090541*^9, 3.898627224045477*^9, 
   3.8997509877837687`*^9},
 CellLabel->"Out[1070]=",
 CellID->504109667,ExpressionUUID->"88ab02f2-9c85-4be6-a491-3d0a77cdbd08"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Select subsets", "Section",
 CellChangeTimes->{{3.900079283797263*^9, 3.900079285996025*^9}, 
   3.900079378916499*^9},
 CellID->844981579,ExpressionUUID->"dae49e06-dc2a-467f-a85c-5603202a1d0a"],

Cell[CellGroupData[{

Cell["Select subsets from {1,2,3,4,5} that add up to 10:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.774377556261836*^9, 3.774377571610763*^9}, {
  3.7743825672646627`*^9, 3.7743825749572763`*^9}},
 CellID->694507399,ExpressionUUID->"a944aa67-117c-410d-b531-213c1b4d9d91"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{
    RowBox[{"EqualTo", "[", "10", "]"}], "@*", "Total"}]}], "]"}]], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.774377514175353*^9, 3.774377539686349*^9}, 
   3.8986289091988754`*^9},
 CellLabel->"In[1074]:=",
 CellID->875714386,ExpressionUUID->"65ef81a9-6627-48fc-91e1-199beb392379"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.7743775399626503`*^9, 3.774377572599545*^9, 
  3.774382562333807*^9, 3.7743825923753223`*^9, 3.774383108881587*^9, 
  3.774383664600209*^9, 3.8986289784282913`*^9, 3.899751485943525*^9},
 CellLabel->"Out[1074]=",
 CellID->242003258,ExpressionUUID->"72a11c81-e6d6-4596-9748-82ccbcde0016"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "42069ed7-25f8-4267-9f1c-d7e89a13ca5d"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->112658320,ExpressionUUID->"548c40d2-9bc6-4475-9cb7-2618ace248d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Select subsets of length 2 to 4 that sum up to a prime:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.7743775973721*^9, 3.774377624079948*^9}},
 CellID->327143208,ExpressionUUID->"969c7aee-e0a9-493f-a91b-b62746b479be"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}], ",", 
   RowBox[{"PrimeQ", "@*", "Total"}]}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.774377581956209*^9, 3.774377591869701*^9}, {
   3.7743776266628532`*^9, 3.774377627761312*^9}, 3.898628910302684*^9},
 CellLabel->"In[1075]:=",
 CellID->283656556,ExpressionUUID->"2ec72d0c-2952-4567-94b4-a6b2ef859521"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4", ",", "5"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.77437758448147*^9, 3.774377592288989*^9}, 
   3.774377628288271*^9, {3.774382594017756*^9, 3.774382604215788*^9}, 
   3.774383665638774*^9, 3.898628978962482*^9, 3.8997514883851013`*^9},
 CellLabel->"Out[1075]=",
 CellID->121246890,ExpressionUUID->"9ccc8339-e6e4-4fc9-8763-f1dcc98a0af8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Select all subsets of length 2 that add up to 6:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.774377856274754*^9, 3.7743778645252533`*^9}},
 CellID->158433383,ExpressionUUID->"155e1765-89ad-4e48-a483-0c47f2abb86b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{
    RowBox[{"EqualTo", "[", "6", "]"}], "@*", "Total"}]}], "]"}]], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.774377841675405*^9, 3.774377854019011*^9}, 
   3.898628961576196*^9},
 CellLabel->"In[1076]:=",
 CellID->499374772,ExpressionUUID->"920b9332-cd2e-4a1a-95aa-3af1ed757202"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.774377849782387*^9, 3.7743778542105103`*^9}, 
   3.7743826085223103`*^9, 3.7743836678169823`*^9, 3.8986289801927896`*^9, 
   3.899751538139284*^9},
 CellLabel->"Out[1076]=",
 CellID->171051003,ExpressionUUID->"75276d12-dd1c-49ae-81b3-12bbc18fadac"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "a81654a1-5849-4b98-9049-ce2941f63c0c"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->519906287,ExpressionUUID->"be682dd5-00fa-4cc4-acda-8b7f313209dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Select all subsets that add up to 0:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.774377856274754*^9, 3.7743778645252533`*^9}, {
  3.774377902691346*^9, 3.774377906025693*^9}},
 CellID->858830434,ExpressionUUID->"e0d777b5-2516-4700-aa24-aff6f1513f46"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", "3"}], "}"}], ",",
    "All", ",", 
   RowBox[{
    RowBox[{"EqualTo", "[", "0", "]"}], "@*", "Total"}]}], "]"}]], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.774377841675405*^9, 3.774377896589973*^9}, 
   3.8986289631204348`*^9},
 CellLabel->"In[1077]:=",
 CellID->634576773,ExpressionUUID->"893e219a-b964-4906-b220-e837d68eab36"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "0", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", "0", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", "3"}], "}"}]}], 
  "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.774377849782387*^9, 3.774377908556069*^9}, 
   3.774382617659729*^9, 3.774383668810137*^9, 3.89862898140742*^9, 
   3.899751539652976*^9},
 CellLabel->"Out[1077]=",
 CellID->226659544,ExpressionUUID->"4c2140e6-c76c-4560-9789-02b32634e170"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "22a9640c-9cb2-408b-9efb-388bedf32e0f"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->490055446,ExpressionUUID->"00957d36-3b2d-46bc-95dd-91866f27fe0e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Select all subsets of odd length that add up to a prime:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.774377856274754*^9, 3.7743778645252533`*^9}, {
  3.774377902691346*^9, 3.774377906025693*^9}, {3.774378907011655*^9, 
  3.774378913566503*^9}},
 CellID->535860945,ExpressionUUID->"4342f691-4bc1-465a-a81f-8ef916ea81ce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "7", ",", "2"}], "}"}], ",", 
   RowBox[{"PrimeQ", "@*", "Total"}]}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.774377841675405*^9, 3.774377896589973*^9}, {
   3.774378891824779*^9, 3.774378898435511*^9}, 3.898628965480707*^9},
 CellLabel->"In[1078]:=",
 CellID->630622865,ExpressionUUID->"1caefee4-4a4d-4150-bd62-4f7e22ad8ff3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "2"}], "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", "0", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "0", ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", "3"}], "}"}]}], 
  "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.774377849782387*^9, 3.774377908556069*^9}, {
   3.77437889899336*^9, 3.7743789152159243`*^9}, 3.7743826211880007`*^9, 
   3.7743836699801273`*^9, 3.8986289827357345`*^9, 3.8997515419697137`*^9},
 CellLabel->"Out[1078]=",
 CellID->313507277,ExpressionUUID->"7a3df43e-f6cc-4c9e-be6e-17a80c545361"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "ece61615-44e4-4439-ad3d-b012421a1971"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->14107565,ExpressionUUID->"e1f489ff-f249-4336-bcb1-ef172450e1dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Select the first 8 subsets that add up to a prime:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.774377856274754*^9, 3.7743778645252533`*^9}, {
  3.774378958793374*^9, 3.774378962816297*^9}, {3.7754935372817483`*^9, 
  3.775493549274748*^9}},
 CellID->792813693,ExpressionUUID->"f0356223-7d11-43f9-9048-e35539618d9b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", "All", 
   ",", 
   RowBox[{"PrimeQ", "@*", "Total"}], ",", "8"}], "]"}]], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.774377841675405*^9, 3.774377854019011*^9}, {
   3.774378935746251*^9, 3.774378950423832*^9}, 3.8986289674630723`*^9},
 CellLabel->"In[1079]:=",
 CellID->885845820,ExpressionUUID->"a17f5670-cc1e-4099-92dc-0686fd6a1d80"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "5", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.774377849782387*^9, 3.7743778542105103`*^9}, {
   3.7743789452190866`*^9, 3.7743789508251123`*^9}, 3.77438262853036*^9, 
   3.774383671888269*^9, 3.8986289841118546`*^9, 3.899751544580207*^9},
 CellLabel->"Out[1079]=",
 CellID->9609939,ExpressionUUID->"35cb148e-f11d-4987-a7cd-0f780f760801"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find subsets that add up to 25:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.774380923158021*^9, 3.774380936623066*^9}},
 CellID->221442697,ExpressionUUID->"7b2b434d-690b-4139-ad9f-7e5c4b03e086"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
  RowBox[{
   RowBox[{"Range", "[", 
    RowBox[{"6", ",", "13"}], "]"}], ",", "All", ",", 
   RowBox[{
    RowBox[{"EqualTo", "[", "25", "]"}], "@*", "Total"}]}], "]"}]], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.774380939157793*^9, 3.774380947925907*^9}, 
   3.8986289690058613`*^9},
 CellLabel->"In[1080]:=",
 CellID->874035320,ExpressionUUID->"286f7bd4-4d6e-4fc6-98b2-311a5775b450"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"12", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "7", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "8", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "9", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8", ",", "10"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.7743809487705793`*^9, 3.774382631762011*^9, 
  3.774383672942788*^9, 3.898628985317514*^9, 3.8997515472324176`*^9},
 CellLabel->"Out[1080]=",
 CellID->272543979,ExpressionUUID->"7f814eb0-9c6a-418b-83fd-cc4e9e11e07c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The main difference between ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Select", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Select",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "fc129c75-923e-42e9-91c6-8229128f88b2"],
 " and ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Subsets", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Subsets",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "32dd2f03-3e4f-4cdd-90f7-0753fb1aefb6"],
 ", and ",
 Cell[BoxData[
  StyleBox["SelectSubsets", "InlineResourceFunction"]], "Text", 
  "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "28b2ee1a-1671-4c03-bd7a-90c57388c669"],
 " is the amount of memory used:"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.7726296304422207`*^9, 3.772629664458939*^9}, {
  3.774379347610264*^9, 3.7743793649880533`*^9}},
 CellID->132229044,ExpressionUUID->"69692191-aab4-4299-952f-c1cc1c89509f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MaxMemoryUsed", "[", 
  RowBox[{"res1", "=", 
   RowBox[{
    StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"6", ",", "24"}], "]"}], ",", 
     RowBox[{
      RowBox[{"EqualTo", "[", "25", "]"}], "@*", "Total"}]}], "]"}]}], 
  "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.772629670778248*^9, 3.772629671369946*^9}, 
   3.774379337870599*^9, {3.774382643977002*^9, 3.774382644702136*^9}, 
   3.8986289701953135`*^9},
 CellLabel->"In[1081]:=",
 CellID->982577960,ExpressionUUID->"e473066b-12ac-4029-b1f9-3063d00a0763"],

Cell[BoxData["62528"], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.7726296235280437`*^9, 3.772629671969466*^9, 3.772629715408601*^9, 
   3.774379339973384*^9, 3.7743807847608547`*^9, {3.77438263735252*^9, 
   3.774382658368615*^9}, 3.774383676625927*^9, 3.898628988163995*^9, 
   3.899751551147758*^9},
 CellLabel->"Out[1081]=",
 CellID->70864155,ExpressionUUID->"7033a7e9-5bbc-4577-83de-084d9f274c16"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Compared to naive implementation, which requires roughly a 1000 times more \
memory:\
\>", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.7726296903922853`*^9, 3.772629709456338*^9}, {
   3.7743807903788853`*^9, 3.774380813852593*^9}, 3.778178311176044*^9},
 CellID->361259892,ExpressionUUID->"01d99b74-67fc-4c7e-a702-d948e589dc42"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MaxMemoryUsed", "[", 
  RowBox[{"res2", "=", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Subsets", "[", 
      RowBox[{"Range", "[", 
       RowBox[{"6", ",", "24"}], "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"EqualTo", "[", "25", "]"}], "@*", "Total"}]}], "]"}]}], 
  "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{
  3.77437934183204*^9, {3.7743826476812143`*^9, 3.774382648958578*^9}},
 CellLabel->"In[1082]:=",
 CellID->823753171,ExpressionUUID->"fd138c29-3c6c-4ca5-9a35-b6408e129f2e"],

Cell[BoxData["65071816"], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.772629673452551*^9, {3.772629713806848*^9, 3.772629716740141*^9}, 
   3.774379343504323*^9, {3.7743807869974127`*^9, 3.7743808003930397`*^9}, {
   3.774382639578573*^9, 3.774382659670002*^9}, 3.774383677920752*^9, 
   3.8986289908461523`*^9, 3.8997515538620896`*^9},
 CellLabel->"Out[1082]=",
 CellID->877496089,ExpressionUUID->"2eb1c1d4-4eee-41d0-b5d2-18fd98ea0206"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Verify the result is the same:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.77438266300908*^9, 3.7743826728563538`*^9}},
 CellID->324048877,ExpressionUUID->"b7a75d80-b305-450d-8fa1-ecf87acb9afc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"res1", "===", "res2"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.77438265102254*^9, 3.7743826546547613`*^9}},
 CellLabel->"In[1083]:=",
 CellID->183907914,ExpressionUUID->"b042107b-7011-4203-af01-f18a94cfe317"],

Cell[BoxData["True"], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.7743826597498617`*^9, 3.774382674752039*^9}, 
   3.774383678022294*^9, 3.8986289921520443`*^9, 3.8997515565494585`*^9},
 CellLabel->"Out[1083]=",
 CellID->386927958,ExpressionUUID->"48448890-250e-4c48-bd77-4ed4143c8ec0"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "c338bf61-e974-4e4b-a845-76553f3c0681"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->14107566,ExpressionUUID->"32ec51a3-cc5b-45d9-bc7a-6b390b2e9f99"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "With a criterion that is a tautology, ",
 Cell[BoxData[
  StyleBox["SelectSubsets", "InlineResourceFunction"]], "Text", 
  "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "da93b773-2604-457a-b7e6-9f8ec3c61216"],
 " and ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Subsets", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Subsets",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "369669dd-4542-47fc-8ccc-f3edb5698fe8"],
 " give the same results:"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.7743831646282253`*^9, 3.774383165613443*^9}, {
   3.774383218747665*^9, 3.7743832578468533`*^9}, {3.774383300556407*^9, 
   3.774383302606948*^9}, 3.775493571076748*^9},
 CellID->273207191,ExpressionUUID->"ff04ed52-8585-41d4-86d1-ef63a3cb6c19"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
   RowBox[{
    RowBox[{"Range", "[", "5", "]"}], ",", 
    RowBox[{"True", "&"}]}], "]"}], "\[Equal]", 
  RowBox[{"Subsets", "[", 
   RowBox[{"Range", "[", "5", "]"}], "]"}]}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.774383124585257*^9, 3.7743831608382473`*^9}, {
   3.7743832633529577`*^9, 3.7743832703549023`*^9}, 3.898628972313793*^9},
 CellLabel->"In[1084]:=",
 CellID->1112728,ExpressionUUID->"a31f1c2c-9660-4aea-b6ba-f484fcc76302"],

Cell[BoxData["True"], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.774383136530876*^9, 3.7743831612961407`*^9}, {
   3.774383266376502*^9, 3.774383270711432*^9}, 3.774383303641717*^9, 
   3.774383682922467*^9, 3.8986289934246645`*^9, 3.89975155882432*^9},
 CellLabel->"Out[1084]=",
 CellID->381398679,ExpressionUUID->"09abf768-1f85-4170-bd9e-24709506b4e0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  StyleBox["SelectSubsets", "InlineResourceFunction"]], "Text", 
  "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "5f9114f0-341c-4352-9030-044342c1aa49"],
 " might not be able to return the number of elements that are requested:"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.7743811090220003`*^9, 3.774381126724887*^9}, {
  3.7743826862521563`*^9, 3.774382697600087*^9}, {3.774383471964933*^9, 
  3.7743834779987783`*^9}},
 CellID->306503519,ExpressionUUID->"995a27ef-339b-460d-9fb8-3fa3567a57a0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
  RowBox[{
   RowBox[{"Range", "[", "5", "]"}], ",", "All", ",", 
   RowBox[{
    RowBox[{"EqualTo", "[", "8", "]"}], "@*", "Total"}], ",", "5"}], 
  "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.774381098378119*^9, 3.7743811032164707`*^9}, {
   3.7743811955738783`*^9, 3.774381201752266*^9}, {3.7743827127951603`*^9, 
   3.774382744158292*^9}, 3.8986289737215967`*^9},
 CellLabel->"In[1085]:=",
 CellID->999001902,ExpressionUUID->"8d8ff493-9d70-4d9b-8d48-71d887b781e3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.774381103686401*^9, 3.774381202198485*^9, 3.774381255469967*^9, 
   3.774381356640648*^9, {3.774382698578134*^9, 3.7743827444732037`*^9}, 
   3.7743833149168043`*^9, 3.774383473640765*^9, 3.774383684739236*^9, 
   3.898628994693178*^9, 3.8997515614040847`*^9},
 CellLabel->"Out[1085]=",
 CellID->185246950,ExpressionUUID->"1f8aab64-0291-4aba-a70a-da1900cc6eb0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find subsets that add up to 0:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.774381620287119*^9, 3.7743816282503433`*^9}},
 CellID->90617371,ExpressionUUID->"ca47c3ed-690f-4d1e-b3ef-81c36d7c99bd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sets", "=", 
   RowBox[{
    StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"-", "7"}], ",", "7"}], "]"}], ",", "All", ",", 
     RowBox[{
      RowBox[{"EqualTo", "[", "0", "]"}], "@*", "Total"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Short", "[", "sets", "]"}]}], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.774381633867979*^9, 3.774381720649877*^9}, {
   3.77438179319016*^9, 3.774381812143701*^9}, 3.8986289752821407`*^9},
 CellLabel->"In[1086]:=",
 CellID->760328926,ExpressionUUID->"4f7fd09b-2206-4822-a61d-59674520a617"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{"{", "0", "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "1517", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "7"}], ",", 
      RowBox[{"-", "6"}], ",", 
      RowBox[{"-", "5"}], ",", 
      RowBox[{"-", "4"}], ",", 
      RowBox[{"-", "3"}], ",", 
      RowBox[{"-", "2"}], ",", 
      RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", "3", ",", "4", 
      ",", "5", ",", "6", ",", "7"}], "}"}]}], "}"}],
  Short]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.774381629319241*^9, 3.774381673123691*^9}, {
   3.7743817044773073`*^9, 3.774381721065008*^9}, {3.774381793599496*^9, 
   3.7743818127478447`*^9}, 3.774382747724327*^9, 3.774383317482757*^9, 
   3.774383686985428*^9, 3.898628996052253*^9, 3.899751574419077*^9},
 CellLabel->"Out[1087]//Short=",
 CellID->1214865,ExpressionUUID->"bb6dfa57-c34a-4848-9c93-5922335b537b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualize the lengths of the lists:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.7743817794255047`*^9, 3.774381789402781*^9}, {
  3.7743818477074833`*^9, 3.774381847781249*^9}},
 CellID->809946818,ExpressionUUID->"a06af547-0bad-4bc3-83bc-345397bee2b1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Length", "/@", "sets"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.774381679403244*^9, 3.7743816864694767`*^9}, {
  3.774381826625986*^9, 3.7743818352648973`*^9}},
 CellLabel->"In[1088]:=",
 CellID->628177917,ExpressionUUID->"89fc304b-f038-4fae-858d-28194346e998"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.0055000000000000005`], AbsoluteThickness[2], 
         LineBox[CompressedData["
1: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
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
          Annotation[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.0055000000000000005`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1: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
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0., 1520.}, {0, 15.}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0., 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              PointSize[0.0055000000000000005`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0., 1520.}, {0, 15.}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0., 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
          "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             PointSize[0.0055000000000000005`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0., 1520.}, {0, 15.}}, 
        "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0., 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.0055000000000000005`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentSet", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 1520.}, {0, 15.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.7743816758186827`*^9, 3.7743817224137497`*^9}, {
   3.774381795222584*^9, 3.774381835626437*^9}, 3.77438275208463*^9, 
   3.774383318260276*^9, 3.774383688634159*^9, 3.8986289973046284`*^9, 
   3.8997515766784544`*^9},
 CellLabel->"Out[1088]=",
 CellID->552668493,ExpressionUUID->"9f53ab79-4611-48b9-99ab-610bc2af6563"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Select tuples", "Section",
 CellChangeTimes->{{3.9000793686194515`*^9, 3.9000793724587774`*^9}},
 CellID->256230342,ExpressionUUID->"8929f0b5-f27a-491f-908d-ebf6b8597a59"],

Cell[CellGroupData[{

Cell["Find out for which 2-tuple the sum is a prime:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.772560838695931*^9, 3.772560867647614*^9}},
 CellID->806991552,ExpressionUUID->"819a6a83-54b9-4ab8-a960-250e2a2866d8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SelectTuples", "[", 
  RowBox[{
   RowBox[{"Range", "[", "10", "]"}], ",", "2", ",", 
   RowBox[{"PrimeQ", "@*", "Total"}]}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.772560169898979*^9, 3.7725603348923473`*^9}, {
  3.772560535903418*^9, 3.7725605499799557`*^9}, {3.772560804010477*^9, 
  3.772560830351927*^9}, {3.8986282672093997`*^9, 3.8986282696925507`*^9}},
 CellLabel->"In[1089]:=",
 CellID->777243378,ExpressionUUID->"f18850c4-776d-403a-a5fc-282dee5f7090"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "9"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.772560181084918*^9, 3.772560287787828*^9}, {
   3.772560327593536*^9, 3.7725603351983356`*^9}, 3.772560418889901*^9, {
   3.772560530285694*^9, 3.772560550932457*^9}, {3.772560819766128*^9, 
   3.7725608306922693`*^9}, 3.772560869515587*^9, 3.772568343227582*^9, 
   3.772568772360887*^9, 3.772629527836937*^9, 3.8986282700030937`*^9, 
   3.8997516451754384`*^9},
 CellLabel->"Out[1089]=",
 CellID->24878681,ExpressionUUID->"50c014f8-c941-4601-95d5-7f1ab20dacca"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Only get the first five:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.7725608886651154`*^9, 3.7725608936419907`*^9}, {
  3.774373154577928*^9, 3.774373156681644*^9}},
 CellID->962257849,ExpressionUUID->"9ff9bc64-f194-4624-bfbb-b54bda29aa4b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SelectTuples", "[", 
  RowBox[{
   RowBox[{"Range", "[", "10", "]"}], ",", "2", ",", 
   RowBox[{"PrimeQ", "@*", "Total"}], ",", "5"}], "]"}]], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.772560882315424*^9, 3.7725608829022818`*^9}, 
   3.8986282753509865`*^9},
 CellLabel->"In[1090]:=",
 CellID->574613800,ExpressionUUID->"86224c05-d668-451c-a1b5-7009814611ca"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "10"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.7725608840518217`*^9, 3.772560895589939*^9}, 
   3.772568344151428*^9, 3.7725687729580717`*^9, 3.772629529325654*^9, 
   3.898628276250498*^9, 3.8997516493280225`*^9},
 CellLabel->"Out[1090]=",
 CellID->22940605,ExpressionUUID->"43a001ad-90dc-4a57-a242-d95bce0cb527"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find the first 15 three-letter palindromic lists:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.772629550274045*^9, 3.772629563747054*^9}, {
  3.7726296033890467`*^9, 3.772629603748204*^9}, {3.7743731655642247`*^9, 
  3.7743731673291416`*^9}},
 CellID->817657987,ExpressionUUID->"432586f1-953d-4930-833f-b4880144191b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SelectTuples", "[", 
  RowBox[{
   RowBox[{"CharacterRange", "[", 
    RowBox[{"\"\<a\>\"", ",", "\"\<e\>\""}], "]"}], ",", "3", ",", 
   RowBox[{"PalindromeQ", "@*", "StringJoin"}], ",", "15"}], "]"}]], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.7725683636034107`*^9, 3.7725684402232647`*^9}, 
   3.772629612092914*^9, 3.8986282877921963`*^9},
 CellLabel->"In[1091]:=",
 CellID->88400611,ExpressionUUID->"fa81e9bc-8688-493c-a7d8-41a4e2340a14"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"a\"\>", ",", "\<\"a\"\>", ",", "\<\"a\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"a\"\>", ",", "\<\"b\"\>", ",", "\<\"a\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"a\"\>", ",", "\<\"c\"\>", ",", "\<\"a\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"a\"\>", ",", "\<\"d\"\>", ",", "\<\"a\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"a\"\>", ",", "\<\"e\"\>", ",", "\<\"a\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"b\"\>", ",", "\<\"a\"\>", ",", "\<\"b\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"b\"\>", ",", "\<\"b\"\>", ",", "\<\"b\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"b\"\>", ",", "\<\"c\"\>", ",", "\<\"b\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"b\"\>", ",", "\<\"d\"\>", ",", "\<\"b\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"b\"\>", ",", "\<\"e\"\>", ",", "\<\"b\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"c\"\>", ",", "\<\"a\"\>", ",", "\<\"c\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"c\"\>", ",", "\<\"b\"\>", ",", "\<\"c\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"c\"\>", ",", "\<\"c\"\>", ",", "\<\"c\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"c\"\>", ",", "\<\"d\"\>", ",", "\<\"c\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"c\"\>", ",", "\<\"e\"\>", ",", "\<\"c\"\>"}], "}"}]}], 
  "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.772568401049097*^9, 3.7725684406116247`*^9}, 
   3.7726295343540792`*^9, {3.7726296053209476`*^9, 3.772629612517418*^9}, 
   3.8986282886796703`*^9, 3.8997516540595984`*^9},
 CellLabel->"Out[1091]=",
 CellID->264187089,ExpressionUUID->"c6b5a596-dc4f-45e1-a87f-fd6fee152b19"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find vectors for which the norm is an integer:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.772560565558001*^9, 3.772560572703558*^9}},
 CellID->834775918,ExpressionUUID->"a90f562e-98cb-4ff2-8efc-a486c208bd1f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SelectTuples", "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"-", "100"}], ",", "100"}], "]"}], ",", "2", ",", 
     RowBox[{"IntegerQ", "@*", "Norm"}]}], "]"}], "//", "Point"}], "//", 
  "Graphics"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.77256058780375*^9, 3.772560609761799*^9}, 
   3.8986283045498886`*^9},
 CellLabel->"In[1092]:=",
 CellID->283080979,ExpressionUUID->"24588ed6-8736-46f3-a39a-27cf0bee4417"],

Cell[BoxData[
 GraphicsBox[PointBox[CompressedData["
1:eJx92fuXVlUdx/GtggqiTDRjY07TkJNOE6NTkqBNAYaGojYqlYkXkn6uv6P/
IbtqeeliKV28DZplkFYaKuaFySRNEQEFQrRpf1bv95rdWmfNrHXWa+19zpnn
OWffvvv7LL3pG1d9/dhSyjePKyV+a2ZmZks9YqG8vnpzdU89bqY+9la/Tfk7
+N3qr+sRd+LL6PkBHMF11e9x/vv4A7ylel89bmnKF1VvrT5Sj1upjxPVH1b/
UI/4FyzUj+PK6o+ov636YD1ua8oXVm+nfAfeiT+u3lWP+BC+gG+h152MZ+Aq
nKz+hOt+ij9D//ddPF98Fvei1y3Bs3ACN1R/znW/wLurz9fj7qY8XL2n+mg9
7qE+nl+1D2yhHbdwfgvtFr9W/SX1v0LbPk7hdnwJX0ev78NBPA/X4Kbqb7j+
3uqr9bi3KfdX7SP3UR+vq95ffbwe91Mfz60+QNm2f7ApX1P1u09RP0U/3Uq/
2kr9VvqVfeEh2i3uw8L5HpzAtNPDnP8t2qdt+0ea//lXnMZX8CB6/0l4Gg7h
GK7CSdxY/R33/x7tE4825cuqjq34NO7CwvmlOIrXVrfx3rZx3Tbem31jO/Xb
ec9/pPzYzP/6/2NNOf3dNn2c+ri2+ifKf0bnANvM7xCfxz14AL3vFOzFYVyB
qzHP9wT3PYm2VXwZX0XP9+MApl/s4H3u4LodvM+nKPvO4060fgQzvz1DvXOw
Y3hnc+9LeBi9fgEO4iiux4xH5yTb5lnuj8sx/etv1D+HzkG++7gb96PXLcbT
cRwvrzrnxrexUL8IM75epN4+6rvd1dQvw7w3x9Y07TXNddO01zTt9HfqndN8
l3Efer4HRzD9+x+cd220j8TX0fN9OIZ5/76z3Vy3m/75T8rODa805Xxv5077
os8Y9+IhPIKF+07AhbgEh3AML67+i/teQ+d8ny3uQc/34gDmPRlzOEb3NPfu
x8J1i7EPx3Fz9Q2ucw31Wfc29f2Yfvsm9c7htuk++tu+5vwiHMTMr/bl/c13
/TcWzp+IvZj2cw46wHUHeA5ji7eoj+nf9v23m+92GI9i4br5uAB7MPGJa8hB
rj9If7EvHKL+EO/JOeNw85mF+kWY/u4zx3ewUH88pt3sa0c4f4TPeae5t1DO
e/PZjlJ/lM99t/pePd6lPtbQtlj3HvVxXvU/lGcwf8a+xrpdMW6cK2aNxqbG
oG3MGeeKMeNcMWLsivGisZwxW1eMFtuYKho7GSu1MVKcmpmNeaKxTVcME7ti
imisYCzg2t+u+dG1vWtNj11rbnTtbNfM2K6J0TWra42KrintGhJdE9o1ILZz
enRubufk6JzaNUdG57R2zortnBSdS5wrnBsc845lx65j1DHoWHNsOZYcO46V
rjGSv2PwWDwO5+F8PB5PwBNxAS7Ek3ARnoyn4GLswffhEnw/9mIfnoofwH48
DT+Ip+MAfggH8cM4hEvxI3gGDuNH8Uw8C0fwYziKH8dlOIZn4zk4jp/AT+K5
uBw/hefhClyJ5+MF+GmcwM/gZ3EVrsY1eCF+DtfiRXgxfh7X4SV4Ka7Hy/By
vAK/gJN4JV6FV+MG/CJ+Cb+M1+BX8FrciNfh9XgD3oib8Kt4E27G7Iu7xoZr
keV5HK5FhXLOuVY7hmLGhWumYypmPBmbOcZiP+eMNVw7C/Xem3FlzG9s4Nhc
wOfG9FtjP8fsQj7HPadjOE5wrzG5sZIxgmt24br5zWfFHsy4MpfinBDTzu7R
nCPiOM/kHsLY0FijcN5n78VhPtO9urG7sVJpvlMcxIyLdi4yN2OMbH0/pv+2
c5W5NPeaxsLGhl7nd+3DcdxMnbkU9wzGwqW5Jw5gxmHX3GhOxT2qex9jZGNA
YzTvs8/ZJ3zmIRzDzAfmJpyDY/pLOxe797M8zHc3h+je2T1DaZ5tgM+Lm8r/
z+XmmtzjGrt73rYdwbyndu43p+Lex3qfNc9hDiS6hy/UL8PMw+3aYa7QmNx6
x8AG3oG5O3MS7v3cQxSus0/77sYx82rX2mQu0RyL9ctxkndi7tZcoLkH97jG
/oXrnTt8p6O4HtM+7Vpo7sjcQ2nuGeW9tWtl4rJlTTnv1lyXe2b3pq6p9kX7
SEy7da215o7N9Zm7MifhXtO9mvc5FzlWbYMVuBqz/nSt5eYqLa+lLcyxlKZt
2rXeHKrldXymuavSfIeVZTYnbu5oFxbO21d99/m+iR3MFRfKWbe7Yglz8+ao
zYGa8zKnYo7Cvaf3u5Y4RwyhbbYKJzHreFfsYg7eHKh7dc/3NP8rZrytLrO5
vlJm28zctDHQGt5zYiF/QyiUE2+0sZG5Sstp28RK/rZRKCcOyVxpTqVQTr9t
Yyl/Q5lCc6jmmsyleL1zv3ObfcRn2FS6YzN/CzIXaL1jOXFP+oC54kI5fSNz
jrm7QjnjoSu28zcSc9TmEs3NeJ1rqXOTfSDtNlds6G8k5uDNFZpT8TpjDOde
+0Q+Y67Y0t8QLKcPtLGmOXFzx9Y7F2SMbSyzuflCOc+XPuFvG4Vy+spcsaq/
oZi7NYfoeddI5+L0ga7Y1lya5cxraXN/CyqU0xf+C5AC+pk=
   "]]]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.772560575788533*^9, 3.7725606104735947`*^9}, 
   3.772629620279973*^9, 3.8986283058261824`*^9, 3.899751659924828*^9},
 CellLabel->"Out[1092]=",
 CellID->104575,ExpressionUUID->"0fb15520-1537-468b-a205-ed45140da02d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The main difference between ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Select", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Select",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "c026349b-190a-453d-948c-adeda1c5ad65"],
 " and ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Tuples", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Tuples",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "f4738fa6-3f25-44e6-bf7c-46c9a33a0240"],
 " and ",
 Cell[BoxData[
  StyleBox["SelectTuples", "InlineResourceFunction"]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "51570b3b-22b0-451e-b7d9-b8911d7808e2"],
 " is the amount of memory used:"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.7726296304422207`*^9, 3.772629664458939*^9}, {
  3.774373207290767*^9, 3.7743732347630005`*^9}},
 CellID->405355337,ExpressionUUID->"d7c0f20f-806d-41a6-95b5-378593ce6d19"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MaxMemoryUsed", "[", 
  RowBox[{"SelectTuples", "[", 
   RowBox[{
    RowBox[{"Range", "[", "10", "]"}], ",", "5", ",", 
    RowBox[{
     RowBox[{"EqualTo", "[", "30", "]"}], "@*", "Total"}]}], "]"}], 
  "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.772629670778248*^9, 3.772629671369946*^9}, 
   3.8986283222064795`*^9},
 CellLabel->"In[1093]:=",
 CellID->811262678,ExpressionUUID->"71fee645-3cca-4e3a-beef-ac702671b9c6"],

Cell[BoxData["1049416"], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.7726296235280437`*^9, 3.772629671969466*^9, 
  3.772629715408601*^9, 3.898628327190708*^9, 3.89975167027073*^9},
 CellLabel->"Out[1093]=",
 CellID->9194802,ExpressionUUID->"ccad7069-24bf-427f-85ef-9d76ffe771ca"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compared to naive implementation:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.7726296903922853`*^9, 3.772629709456338*^9}},
 CellID->376441899,ExpressionUUID->"9bd2bd94-323f-4e1f-a362-6038ff2bfe1b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MaxMemoryUsed", "[", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Tuples", "[", 
     RowBox[{
      RowBox[{"Range", "[", "10", "]"}], ",", "5"}], "]"}], ",", 
    RowBox[{
     RowBox[{"EqualTo", "[", "30", "]"}], "@*", "Total"}]}], "]"}], 
  "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellLabel->"In[1094]:=",
 CellID->695357144,ExpressionUUID->"e86e35a3-cf64-453c-9bbd-f05f70b03ee1"],

Cell[BoxData["21711208"], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.772629673452551*^9, {3.772629713806848*^9, 3.772629716740141*^9}, 
   3.8986283299944687`*^9, 3.899751672441455*^9},
 CellLabel->"Out[1094]=",
 CellID->11269696,ExpressionUUID->"753dda81-e37e-4c0e-b2ab-4c814a84e7c2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The length of the results might be smaller than the argument ",
 Cell[BoxData[
  StyleBox["m", "TI"]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "63427084-2ec7-41d1-9c85-acca7019da2c"],
 ":"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.772629935083609*^9, 3.77262995964095*^9}, {
  3.772629991594735*^9, 3.772630002309466*^9}},
 CellID->449563358,ExpressionUUID->"5d8fe7cb-95c4-496a-a473-3d2d2f95152d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SelectTuples", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], ",", "3", ",", 
   RowBox[{
    RowBox[{"EqualTo", "[", "1", "]"}], "@*", "Norm"}], ",", "10"}], 
  "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.772629905261765*^9, 3.7726299223545437`*^9}, 
   3.8986283453916645`*^9},
 CellLabel->"In[1095]:=",
 CellID->168888283,ExpressionUUID->"a7ad3ebf-21e1-4949-8755-0d2a2dc4604b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.772629920099832*^9, 3.772629923277173*^9}, 
   3.8986283462813115`*^9, 3.899751674141452*^9},
 CellLabel->"Out[1095]=",
 CellID->83774134,ExpressionUUID->"fc47d679-dd56-45ef-ae30-4e9401ffa585"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Eulerian numbers and permutations and ascents and runs", "Section",
 CellChangeTimes->{{3.9000793929095864`*^9, 3.9000794191211805`*^9}},
 CellID->21619455,ExpressionUUID->"190bb90c-4914-4f4a-8d53-1b1ca4da78ad"],

Cell[TextData[{
 "In combinatorics, the Eulerian number ",
 Cell[BoxData[
  RowBox[{"A", 
   RowBox[{"(", 
    RowBox[{"n", ",", "k"}], ")"}]}]], "InlineFormula",
  FormatType->StandardForm,ExpressionUUID->
  "cb21ab36-4e2e-4b2d-9f74-cbf7df6c4699"],
 " is the number of permutations of the numbers 1 to n in which exactly k \
elements are greater than the previous element (permutations with k \"ascents\
\")."
}], "MathCaption",
 CellChangeTimes->{{3.9000806036148834`*^9, 3.9000806390965867`*^9}},
 CellID->2244898,ExpressionUUID->"114f06bd-89ef-4e85-b71f-bee398e656ee"],

Cell[TextData[{
 "Another notation used is ",
 Cell[BoxData[
  RowBox[{"\[LeftAngleBracket]", GridBox[{
     {"n"},
     {"m"}
    }], "\[RightAngleBracket]"}]], "Input",
  CellChangeTimes->{{3.899754511714775*^9, 3.899754525131752*^9}},
  ExpressionUUID->"a32e117f-dfe0-494e-ab18-f2520ec43e17"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.9000806870494127`*^9, 3.900080691093932*^9}},
 CellID->272371710,ExpressionUUID->"ebe0a907-f33a-4017-9bfc-e18d5334ba01"],

Cell[CellGroupData[{

Cell["The table of Eulerian numbers up to 10:", "MathCaption",
 CellChangeTimes->{{3.8983652566500874`*^9, 3.8983652679173603`*^9}, {
  3.8997543826100793`*^9, 3.8997543830621758`*^9}},
 CellID->537854770,ExpressionUUID->"ee7446b0-40a5-403b-bdde-215444fd24b0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"EulerianNumber", "[", 
      RowBox[{"n", ",", "k"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "n"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8983652769570837`*^9, 3.898365280619089*^9}, {
  3.8997526813472567`*^9, 3.8997526953987074`*^9}},
 CellLabel->"In[2542]:=",
 CellID->400353117,ExpressionUUID->"35180ea3-39a9-4c9e-b742-0cbcc30a4cd9"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "", "", "", "", "", "", "", "", ""},
    {"1", "1", "", "", "", "", "", "", "", ""},
    {"1", "4", "1", "", "", "", "", "", "", ""},
    {"1", "11", "11", "1", "", "", "", "", "", ""},
    {"1", "26", "66", "26", "1", "", "", "", "", ""},
    {"1", "57", "302", "302", "57", "1", "", "", "", ""},
    {"1", "120", "1191", "2416", "1191", "120", "1", "", "", ""},
    {"1", "247", "4293", "15619", "15619", "4293", "247", "1", "", ""},
    {"1", "502", "14608", "88234", "156190", "88234", "14608", "502", "1", ""},
    {"1", "1013", "47840", "455192", "1310354", "1310354", "455192", "47840", 
     "1013", "1"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.8997526858111267`*^9, 3.8997526957482176`*^9}, 
   3.899754415849376*^9},
 CellLabel->"Out[2542]=",
 CellID->283072746,ExpressionUUID->"407a9cab-8db9-45bc-9152-7890ca8ecf9f"]
}, Open  ]]
}, Open  ]],

Cell["I got kind of confused with this.", "MathCaption",
 CellChangeTimes->{{3.8997538149818234`*^9, 3.899753821019329*^9}},
 CellID->39057588,ExpressionUUID->"adb8f1b8-8d53-4dc0-b180-eb71fb028075"],

Cell[TextData[{
 "Combinatorica's ",
 Cell[BoxData[
  RowBox[{"Eulerian", "[", 
   RowBox[{"n", ",", "k"}], "]"}]], "InlineFormula",ExpressionUUID->
  "379d6396-d963-4060-878d-2486bc49d889"],
 " gives the number of permutations of length ",
 Cell[BoxData[
 "n"], "InlineFormula",ExpressionUUID->"a49d4088-bee9-476d-9b6b-44b24fb8b798"],
 " with ",
 Cell[BoxData[
 "k"], "InlineFormula",ExpressionUUID->"4a287b29-7224-4a4f-838b-42fd855c3d6a"],
 " runs."
}], "MathCaption",
 CellChangeTimes->{{3.8997538218356686`*^9, 3.899753850845626*^9}},
 CellID->236283598,ExpressionUUID->"31dfacce-571c-4333-8462-7b6da12806a9"],

Cell["This function uses a different index for k.", "MathCaption",
 CellChangeTimes->{{3.899753855598046*^9, 3.899753865750459*^9}},
 CellID->3969473,ExpressionUUID->"daaf1a1b-19dd-4322-adb4-c46706602373"],

Cell[TextData[{
 "If you have ",
 Cell[BoxData[
  RowBox[{"EulerianNumber", "[", 
   RowBox[{"n", ",", "k"}], "]"}]], "InlineFormula",ExpressionUUID->
  "11b4e866-4506-46ef-b5f8-76eeb05f23bd"],
 ", do ",
 Cell[BoxData[
  RowBox[{"Eulerian", "[", 
   RowBox[{"n", ",", 
    RowBox[{"k", "-", "1"}]}], "]"}]], "InlineFormula",ExpressionUUID->
  "6f93909d-54d5-4df1-8702-51b49e520153"],
 "."
}], "MathCaption",
 InitializationCell->True,
 CellChangeTimes->{{3.89975386688449*^9, 3.8997539026741056`*^9}},
 CellID->442612299,ExpressionUUID->"560ad241-d25d-45b1-9b0b-70a743fe8828"],

Cell[TextData[{
 "If you have ",
 Cell[BoxData[
  RowBox[{"Eulerian", "[", 
   RowBox[{"n", ",", "k"}], "]"}]], "InlineFormula",ExpressionUUID->
  "55b5d310-1e54-4518-8f18-ff4f16aefb50"],
 ", do ",
 Cell[BoxData[
  RowBox[{"EulerianNumber", "[", 
   RowBox[{"n", ",", 
    RowBox[{"k", "+", "1"}]}], "]"}]], "InlineFormula",ExpressionUUID->
  "a8d16508-a6b1-4f2a-b6da-184518d4ef1d"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.899753913756544*^9, 3.8997539246251435`*^9}},
 CellID->90642782,ExpressionUUID->"8e112108-47db-4f4f-a17b-272603f45175"],

Cell["\<\
This also affects the definition of other related functions like \
EulerianCatalanNumber.\
\>", "MathCaption",
 CellChangeTimes->{{3.899753936207406*^9, 3.899753951405362*^9}},
 CellID->112995886,ExpressionUUID->"d8db5819-e7d4-4000-8220-05521785e728"],

Cell[CellGroupData[{

Cell[TextData[{
 "One interpretation of the Eulerian Catalan number is \"Twice the number of \
permutations of ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "...", ",", 
    RowBox[{"2", "n"}]}], "}"}]], "InlineFormula",ExpressionUUID->
  "4f795f04-1282-42ac-9b49-c1f73fb39777"],
 " with ",
 Cell[BoxData[
 "n"], "InlineFormula",ExpressionUUID->"efe587a7-4955-4029-875a-90c78451f635"],
 " ascents\"."
}], "MathCaption",
 CellChangeTimes->{3.899751814585163*^9},
 CellID->129906996,ExpressionUUID->"d7dc1e25-9cbf-490a-838b-afdf48623da5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{"\"\<n\>\"", "->", 
       RowBox[{"EulerianCatalanNumber", "[", "#", "]"}]}], "|>"}], "&"}], 
    "]"}], "[", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "21"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997518381090746`*^9, 3.899751839651645*^9}},
 CellLabel->"In[2541]:=",
 CellID->239135585,ExpressionUUID->"d35217b9-167a-4854-be3b-01f5b3f105f7"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      0 -> <|"n" -> 1|>, 1 -> <|"n" -> 2|>, 2 -> <|"n" -> 22|>, 
       3 -> <|"n" -> 604|>, 4 -> <|"n" -> 31238|>, 5 -> <|"n" -> 2620708|>, 
       6 -> <|"n" -> 325024572|>, 7 -> <|"n" -> 55942352184|>, 
       8 -> <|"n" -> 12765597850950|>, 9 -> <|"n" -> 3730771315561300|>, 
       10 -> <|"n" -> 1359124435588313876|>, 
       11 -> <|"n" -> 603916464771468176392|>, 
       12 -> <|"n" -> 321511316149669476991132|>, 
       13 -> <|"n" -> 202039976682357297272094824|>, 
       14 -> <|"n" -> 147980747895225006590333244088|>, 
       15 -> <|"n" -> 124963193751534047864734415925360|>, 
       16 -> <|"n" -> 120523981455993504966525708346887750|>, 
       17 -> <|"n" -> 131671692334895976886647813958596908340|>, 
       18 -> <|"n" -> 161759954125032708920885781040309430206500|>, 
       19 -> <|"n" -> 222019441630075420847480526017947263931809000|>, 
       20 -> <|"n" -> 338476895760295138790385051321218766549279671220|>, 
       21 -> <|"n" -> 570180937724400876712836731188276811777920749126840|>|>,
      "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[16]} -> 1, {All, "n"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 1, {All}]]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n"}, {
         TypeSystem`Atom[Integer]}], 22], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[16]} -> 1, {All, "n"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 1, {All}]]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n"}, {
         TypeSystem`Atom[Integer]}], 22], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 1, "DataRowCount" -> 22, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["n", 
                  Style[
                  "n", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "n"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "n"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["604"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["31238"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2620708"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["325024572"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["55942352184"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12765597850950"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3730771315561300"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1359124435588313876"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["11"], 
                  Style[
                   RawBoxes["11"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[11]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["603916464771468176392"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["12"], 
                  Style[
                   RawBoxes["12"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[12]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["321511316149669476991132"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["13"], 
                  Style[
                   RawBoxes["13"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[13]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["202039976682357297272094824"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["14"], 
                  Style[
                   RawBoxes["14"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[14]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["147980747895225006590333244088"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["15"], 
                  Style[
                   RawBoxes["15"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[15]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124963193751534047864734415925360"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["16"], 
                  Style[
                   RawBoxes["16"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[16]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["120523981455993504966525708346887750"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["17"], 
                  Style[
                   RawBoxes["17"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[17]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["131671692334895976886647813958596908340"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["18"], 
                  Style[
                   RawBoxes["18"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[18]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["161759954125032708920885781040309430206500"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["19"], 
                  Style[
                   RawBoxes["19"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[19]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["222019441630075420847480526017947263931809000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{406., {299.8544921875, 305.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{406., {299.8544921875, 305.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8997518400024347`*^9, 3.899754214671568*^9},
 CellLabel->"Out[2541]=",
 CellID->375946613,ExpressionUUID->"66d92971-c59e-4279-a1ee-739141b70e1a"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Eulerian numbers of the second kind are written something like ",
 Cell[BoxData[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"\[LeftAngleBracket]", GridBox[{
      {"n"},
      {"m"}
     }], "\[RightAngleBracket]"}], "\[RightAngleBracket]"}]], "Input",
  CellChangeTimes->{{3.899754511714775*^9, 3.899754525131752*^9}},
  ExpressionUUID->"833b571e-bd29-424e-af58-47c158d0b537"],
 "."
}], "MathCaption",
 CellChangeTimes->{3.899754545253282*^9},
 CellID->50294008,ExpressionUUID->"7366cc46-444b-4419-b0fc-1a6407402307"],

Cell[CellGroupData[{

Cell["\<\
The first 9 rows of the triangle of Eulerian numbers of the second kind:\
\>", "MathCaption",
 CellChangeTimes->{{3.8983653125379972`*^9, 3.8983653233789577`*^9}, {
  3.89975445331875*^9, 3.8997544725110817`*^9}},
 CellID->426907475,ExpressionUUID->"b6bcc5b8-ce41-4584-801c-dbc823f6c7ce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"EulerianNumberOfTheSecondKind", "[", 
      RowBox[{"n", ",", "k"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "n"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8983653324763412`*^9, 3.8983653495079985`*^9}, {
  3.8997544554680986`*^9, 3.8997544746648426`*^9}},
 CellLabel->"In[2548]:=",
 CellID->283987963,ExpressionUUID->"a9d54f0d-8253-4746-af1a-2d0259b42734"],

Cell[BoxData[
 TagBox[GridBox[{
    {"0", "", "", "", "", "", "", "", ""},
    {"2", "0", "", "", "", "", "", "", ""},
    {"8", "6", "0", "", "", "", "", "", ""},
    {"22", "58", "24", "0", "", "", "", "", ""},
    {"52", "328", "444", "120", "0", "", "", "", ""},
    {"114", "1452", "4400", "3708", "720", "0", "", "", ""},
    {"240", "5610", "32120", "58140", "33984", "5040", "0", "", ""},
    {"494", "19950", "195800", "644020", "785304", "341136", "40320", "0", ""},
    {"1004", "67260", "1062500", "5765500", "12440064", "11026296", "3733920",
      "362880", "0"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.8983653498610387`*^9, 3.8993984461038*^9, {3.8997544363274713`*^9, 
   3.899754475002436*^9}},
 CellLabel->"Out[2548]=",
 CellID->74394165,ExpressionUUID->"20679db5-8b5f-46b8-8211-76c595af01d0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The first 14 rows of the Narayana triangle read as follows:", \
"MathCaption",
 CellChangeTimes->{{3.8982879891419973`*^9, 3.8982879983099976`*^9}, {
  3.899754576795635*^9, 3.899754589702189*^9}},
 CellID->69975013,ExpressionUUID->"2f9b2766-3d05-4472-8d69-3d01a2471a6e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"NarayanaNumber", "[", 
      RowBox[{"n", ",", "k"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "14"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "n"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8982879990979986`*^9, 3.8982880494319987`*^9}, {
  3.898288095920997*^9, 3.898288113509997*^9}, {3.89975456038793*^9, 
  3.8997545748933744`*^9}},
 CellLabel->"In[2553]:=",
 CellID->447664363,ExpressionUUID->"ed5568ec-e753-4c5c-b6e6-92635033aa7c"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "", "", "", "", "", "", "", "", "", "", "", "", ""},
    {"1", "1", "", "", "", "", "", "", "", "", "", "", "", ""},
    {"1", "3", "1", "", "", "", "", "", "", "", "", "", "", ""},
    {"1", "6", "6", "1", "", "", "", "", "", "", "", "", "", ""},
    {"1", "10", "20", "10", "1", "", "", "", "", "", "", "", "", ""},
    {"1", "15", "50", "50", "15", "1", "", "", "", "", "", "", "", ""},
    {"1", "21", "105", "175", "105", "21", "1", "", "", "", "", "", "", ""},
    {"1", "28", "196", "490", "490", "196", "28", "1", "", "", "", "", "", ""},
    {"1", "36", "336", "1176", "1764", "1176", "336", "36", "1", "", "", "", 
     "", ""},
    {"1", "45", "540", "2520", "5292", "5292", "2520", "540", "45", "1", "", 
     "", "", ""},
    {"1", "55", "825", "4950", "13860", "19404", "13860", "4950", "825", "55",
      "1", "", "", ""},
    {"1", "66", "1210", "9075", "32670", "60984", "60984", "32670", "9075", 
     "1210", "66", "1", "", ""},
    {"1", "78", "1716", "15730", "70785", "169884", "226512", "169884", 
     "70785", "15730", "1716", "78", "1", ""},
    {"1", "91", "2366", "26026", "143143", "429429", "736164", "736164", 
     "429429", "143143", "26026", "2366", "91", "1"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.898288019627*^9, 3.8982880499109974`*^9}, 
   3.898288114284998*^9, {3.899754560920267*^9, 3.8997545944756646`*^9}},
 CellLabel->"Out[2553]=",
 CellID->405832833,ExpressionUUID->"dd1f0ef3-095d-4fed-ae3f-5a73b25fcf65"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Make a table of signed and unsigned Lah numbers.", "MathCaption",
 CellChangeTimes->{{3.8997546278577337`*^9, 3.8997546348819017`*^9}},
 CellID->629424924,ExpressionUUID->"64e0c246-9433-4c95-b61f-8bfc6c54564a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"SignedLahNumber", "[", 
      RowBox[{"n", ",", "k"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "n"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8982879990979986`*^9, 3.8982880494319987`*^9}, {
  3.898288095920997*^9, 3.898288113509997*^9}, {3.89975456038793*^9, 
  3.8997545748933744`*^9}, {3.899754635482366*^9, 3.8997546509602003`*^9}},
 CellLabel->"In[2556]:=",
 CellID->282716016,ExpressionUUID->"d0aa78f7-b36d-4676-9714-b1b54804e203"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"-", "1"}], "", "", "", "", "", "", "", ""},
    {"2", "1", "", "", "", "", "", "", ""},
    {
     RowBox[{"-", "6"}], 
     RowBox[{"-", "6"}], 
     RowBox[{"-", "1"}], "", "", "", "", "", ""},
    {"24", "36", "12", "1", "", "", "", "", ""},
    {
     RowBox[{"-", "120"}], 
     RowBox[{"-", "240"}], 
     RowBox[{"-", "120"}], 
     RowBox[{"-", "20"}], 
     RowBox[{"-", "1"}], "", "", "", ""},
    {"720", "1800", "1200", "300", "30", "1", "", "", ""},
    {
     RowBox[{"-", "5040"}], 
     RowBox[{"-", "15120"}], 
     RowBox[{"-", "12600"}], 
     RowBox[{"-", "4200"}], 
     RowBox[{"-", "630"}], 
     RowBox[{"-", "42"}], 
     RowBox[{"-", "1"}], "", ""},
    {"40320", "141120", "141120", "58800", "11760", "1176", "56", "1", ""},
    {
     RowBox[{"-", "362880"}], 
     RowBox[{"-", "1451520"}], 
     RowBox[{"-", "1693440"}], 
     RowBox[{"-", "846720"}], 
     RowBox[{"-", "211680"}], 
     RowBox[{"-", "28224"}], 
     RowBox[{"-", "2016"}], 
     RowBox[{"-", "72"}], 
     RowBox[{"-", "1"}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.899754639834771*^9, 3.8997546512787457`*^9}},
 CellLabel->"Out[2556]=",
 CellID->18739418,ExpressionUUID->"56ddab65-3ea6-4ede-92a4-21daf91eafd8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"UnsignedLahNumber", "[", 
      RowBox[{"n", ",", "k"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "n"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8982879990979986`*^9, 3.8982880494319987`*^9}, {
  3.898288095920997*^9, 3.898288113509997*^9}, {3.89975456038793*^9, 
  3.8997545748933744`*^9}, {3.899754635482366*^9, 3.899754660251339*^9}},
 CellLabel->"In[2557]:=",
 CellID->28645306,ExpressionUUID->"afe0ed75-de31-4070-b748-e293016ef3ad"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "", "", "", "", "", "", "", ""},
    {"2", "1", "", "", "", "", "", "", ""},
    {"6", "6", "1", "", "", "", "", "", ""},
    {"24", "36", "12", "1", "", "", "", "", ""},
    {"120", "240", "120", "20", "1", "", "", "", ""},
    {"720", "1800", "1200", "300", "30", "1", "", "", ""},
    {"5040", "15120", "12600", "4200", "630", "42", "1", "", ""},
    {"40320", "141120", "141120", "58800", "11760", "1176", "56", "1", ""},
    {"362880", "1451520", "1693440", "846720", "211680", "28224", "2016", 
     "72", "1"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.8997546605353403`*^9},
 CellLabel->"Out[2557]=",
 CellID->120305284,ExpressionUUID->"9986148c-d0c7-4a5c-a5ae-85b81372fcb8"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Find the sum of even-valued Fibonacci numbers less than 4 million.\
\>", "MathCaption",
 CellChangeTimes->{{3.8997547344956493`*^9, 3.899754744755741*^9}},
 CellID->688126866,ExpressionUUID->"30160aeb-f07f-4485-8605-95d408a0309f"],

Cell[TextData[{
 "We aren't counting 4 million, so we need to find the inverse of ",
 Cell[BoxData[
  RowBox[{"4000000", "-", "1"}]], "InlineFormula",ExpressionUUID->
  "d12ba297-1a26-48ca-8bf6-7ffa43d25282"],
 ", or ",
 Cell[BoxData[
 "3999999"], "InlineFormula",ExpressionUUID->
  "c33a1d19-8c45-490a-aa66-f631512fd075"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.8997547465995646`*^9, 3.8997547726605234`*^9}},
 CellID->462783584,ExpressionUUID->"a9f94d20-b230-4e78-810c-a675031b5401"],

Cell[CellGroupData[{

Cell["Compute the inverse Fibonacci of 4 million.", "MathCaption",
 CellChangeTimes->{{3.899754693440962*^9, 3.8997546993037024`*^9}},
 CellID->161103956,ExpressionUUID->"19f52c75-9b28-4b66-8feb-67669209b992"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InverseFibonacci", "[", "3999999", "]"}]], "Input",
 CellChangeTimes->{{3.8997547004045286`*^9, 3.8997547052777286`*^9}, {
  3.899754775052737*^9, 3.8997547772005157`*^9}},
 CellLabel->"In[2561]:=",
 CellID->630387027,ExpressionUUID->"e64e6ac8-5592-4e72-bf79-1401a712e97b"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"Root", 
    InterpretationBox[
     StyleBox[
      TemplateBox[{"\"33.3\"", 
        DynamicBox[
         FEPrivate`FrontEndResource[
         "FEExpressions", "NumericalApproximationElider"]]}, "RowDefault"], 
      ShowStringCharacters -> False], 
     33.2629474001778504543835879303514957428`15.954589770191003, Editable -> 
     False], 
    TagBox[
     RowBox[{"Root", "[", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{
             RowBox[{
               RowBox[{"-", "3999999"}], "+", 
               RowBox[{"Fibonacci", "[", "#1", "]"}]}], "&"}], ",", 
           "33.2629474001778682831`9.663180428680144"}], "}"}], "]"}], 
     Short[#, 7]& ], 33.26294740017785},
   "NumericalApproximation"],
  Root[{-3999999 + Fibonacci[#]& , 
    33.2629474001778682831`9.663180428680144}]]], "Output",
 CellChangeTimes->{3.89975470587694*^9, 3.89975477785804*^9},
 CellLabel->"Out[2561]=",
 CellID->401184551,ExpressionUUID->"369cac84-fe2e-474b-8453-6314252ca63f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Now we can solve Project Euler Problem 2 ",
 ButtonBox["Even Fibonacci Numbers",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://projecteuler.net/problem=2"], None},
  ButtonNote->"https://projecteuler.net/problem=2"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.8997547810789165`*^9, 3.899754806210188*^9}},
 CellID->478852567,ExpressionUUID->"79cbf0ed-340e-465c-a348-5c39be9e5355"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fibonacci", "[", 
  RowBox[{"Range", "[", 
   RowBox[{"Floor", "[", 
    RowBox[{"InverseFibonacci", "[", "3999999", "]"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8997548106496086`*^9, 3.8997548179289904`*^9}},
 CellLabel->"In[2562]:=",
 CellID->2173387,ExpressionUUID->"d860018a-3cd5-4779-aa4f-006713b55d18"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "2", ",", "3", ",", "5", ",", "8", ",", "13", ",", "21",
    ",", "34", ",", "55", ",", "89", ",", "144", ",", "233", ",", "377", ",", 
   "610", ",", "987", ",", "1597", ",", "2584", ",", "4181", ",", "6765", ",",
    "10946", ",", "17711", ",", "28657", ",", "46368", ",", "75025", ",", 
   "121393", ",", "196418", ",", "317811", ",", "514229", ",", "832040", ",", 
   "1346269", ",", "2178309", ",", "3524578"}], "}"}]], "Output",
 CellChangeTimes->{3.8997548182548466`*^9},
 CellLabel->"Out[2562]=",
 CellID->59007347,ExpressionUUID->"f34e702d-4ea4-4dc5-9c4e-b8415e19b155"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", "EvenQ", "]"}], "[", 
  RowBox[{"Fibonacci", "[", 
   RowBox[{"Range", "[", 
    RowBox[{"Floor", "[", 
     RowBox[{"InverseFibonacci", "[", "3999999", "]"}], "]"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8997548210077267`*^9, 3.8997548264422503`*^9}},
 CellLabel->"In[2563]:=",
 CellID->48490791,ExpressionUUID->"d3f43468-90b7-49d8-acb6-7c0d9550dcab"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "8", ",", "34", ",", "144", ",", "610", ",", "2584", ",", "10946",
    ",", "46368", ",", "196418", ",", "832040", ",", "3524578"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.899754826763739*^9},
 CellLabel->"Out[2563]=",
 CellID->249968189,ExpressionUUID->"3528c9d3-ad6b-4e84-ad7e-f79ba7e1a3ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{
   RowBox[{"Select", "[", "EvenQ", "]"}], "[", 
   RowBox[{"Fibonacci", "[", 
    RowBox[{"Range", "[", 
     RowBox[{"Floor", "[", 
      RowBox[{"InverseFibonacci", "[", "3999999", "]"}], "]"}], "]"}], "]"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.899754828016255*^9, 3.899754828794771*^9}},
 CellLabel->"In[2564]:=",
 CellID->144665321,ExpressionUUID->"4fb3f03c-dbc9-4e66-a1b3-9a94f6426667"],

Cell[BoxData["4613732"], "Output",
 CellChangeTimes->{3.8997548290796323`*^9},
 CellLabel->"Out[2564]=",
 CellID->495057432,ExpressionUUID->"be003799-849f-4601-89bb-7ede3a8a344e"]
}, Open  ]]
}, Open  ]],

Cell["That's the answer.", "MathCaption",
 CellChangeTimes->{{3.899754833373391*^9, 3.8997548353579597`*^9}},
 CellID->66692240,ExpressionUUID->"deacbe29-c222-4820-a7ef-e80254ad01cd"],

Cell[CellGroupData[{

Cell[TextData[{
 "Let's work through the examples from the Wolfram Challenge ",
 ButtonBox["Next Permutation",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://challenges.wolframcloud.com/challenge/next-permutation"], 
    None},
  ButtonNote->
   "https://challenges.wolframcloud.com/challenge/next-permutation"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.899755010593167*^9, 3.8997550245535345`*^9}},
 CellID->308194261,ExpressionUUID->"b7319d6e-23da-44a3-98c2-50adb6177629"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NextPermutation", "[", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "1"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.899755025666424*^9, 3.899755028554405*^9}},
 CellLabel->"In[1]:=",
 CellID->88352769,ExpressionUUID->"61d58fae-a6d4-4d9d-8719-6f7a07bd3d01"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "1", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.8997550292452235`*^9},
 CellLabel->"Out[1]=",
 CellID->253919081,ExpressionUUID->"e60f72dc-21bd-4d7e-b8f8-65ff7a45c026"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here are more examples.", "MathCaption",
 CellChangeTimes->{{3.8997550337618465`*^9, 3.8997550361477757`*^9}},
 CellID->402833805,ExpressionUUID->"f99244b4-ba61-44ce-a3d9-485b3b0288cd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NextPermutation", "[", 
  RowBox[{"{", 
   RowBox[{"3", ",", "2", ",", "1"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997550307234592`*^9, 3.8997550393829036`*^9}},
 CellLabel->"In[2]:=",
 CellID->133361772,ExpressionUUID->"358f0f0d-a757-413b-982f-93ae00f34410"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.899755039745571*^9},
 CellLabel->"Out[2]=",
 CellID->98606068,ExpressionUUID->"ac6731c8-04ba-4a15-8607-5b220fb5de63"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NextPermutation", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "4", ",", "5"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997550307234592`*^9, 3.89975504421239*^9}},
 CellLabel->"In[3]:=",
 CellID->282609746,ExpressionUUID->"d1a14ee2-d45f-47b4-a7a7-fe6646a9396c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "5", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.899755044634418*^9},
 CellLabel->"Out[3]=",
 CellID->184445757,ExpressionUUID->"97ef1641-3598-4eea-8e73-e56d154c45a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NextPermutation", "[", 
  RowBox[{"{", 
   RowBox[{"4", ",", "5", ",", "1", ",", "0"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997550307234592`*^9, 3.899755049156501*^9}},
 CellLabel->"In[4]:=",
 CellID->170282164,ExpressionUUID->"b0783c2d-32f0-476e-9948-0b0f3b857b4d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "0", ",", "1", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.899755049462332*^9},
 CellLabel->"Out[4]=",
 CellID->586261813,ExpressionUUID->"1ab71d52-d06c-4b6f-8526-90cf83f1a4a3"]
}, Open  ]]
}, Open  ]],

Cell["\<\
For some reason, although I have a function that can compute the next \
permutation, I have not solved this Wolfram Challenge.\
\>", "MathCaption",
 CellChangeTimes->{{3.8997550567826686`*^9, 3.899755093968486*^9}},
 CellID->406463550,ExpressionUUID->"aea1b186-7caf-4fb9-bf2b-d09548c07a54"],

Cell[CellGroupData[{

Cell["Consider the permutation:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.761597237856369*^9, 3.7615972669041348`*^9}, {
   3.761597466489066*^9, 3.761597466737912*^9}, 3.761597945927305*^9},
 CellID->300631353,ExpressionUUID->"dc188418-c05f-44bd-8c4e-c48deb4e766c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "8", ",", "1", ",", "5", ",", "4", ",", "7", ",", "6", ",", "3",
      ",", "9"}], "}"}]}], ";"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.761597836814392*^9, 3.761597838883295*^9}, {
  3.761597939970468*^9, 3.761597940752081*^9}, {3.761598397650641*^9, 
  3.76159841461544*^9}},
 CellLabel->"In[470]:=",
 CellID->518707108,ExpressionUUID->"beb465c3-3f0f-47d3-b578-0039ef6ea163"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Its ascents are at the indices 1, 3, 5, 8, corresponding to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", " ", "<", " ", "8"}], TraditionalForm]],ExpressionUUID->
  "9191e97e-796e-43b9-8935-734e120104c6"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", " ", "<", " ", "5"}], TraditionalForm]],ExpressionUUID->
  "70c68bb2-f9d2-4edc-a3e3-e64f4ab75d8a"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"4", " ", "<", " ", "7"}], TraditionalForm]],ExpressionUUID->
  "53d0027a-4baf-456f-a44c-85dc738bec1a"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"3", " ", "<", " ", "9"}], TraditionalForm]],ExpressionUUID->
  "16f850ab-45ce-4445-bb9e-934a03054380"],
 ":"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.761596905811739*^9, 3.7615969301073914`*^9}, {
  3.761596978745027*^9, 3.7615969823929443`*^9}, {3.7615972535310698`*^9, 
  3.7615972813025627`*^9}, {3.76159782481152*^9, 3.761597923536376*^9}, {
  3.76159795718322*^9, 3.761597969952014*^9}, {3.7615984414067717`*^9, 
  3.761598489780396*^9}, {3.761598838880413*^9, 3.761598880056288*^9}, {
  3.761602486184848*^9, 3.761602499869062*^9}, {3.7699499833780417`*^9, 
  3.7699499937268114`*^9}},
 CellID->8375492,ExpressionUUID->"d97a0dea-0982-481b-9c40-f1bc7083ebad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PermutationAscents", "@", "p"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.761596946331208*^9, 3.761597112255522*^9}, {
   3.7615971931967907`*^9, 3.761597234779436*^9}, {3.761597806219575*^9, 
   3.761597807585908*^9}, 3.761600539512171*^9, 3.898623350879883*^9},
 CellLabel->"In[471]:=",
 CellID->835168205,ExpressionUUID->"719b64f1-3111-4dd4-8198-0bea21ed6d22"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "5", ",", "8"}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.761597113531955*^9, 3.7615971946051407`*^9, {3.761597285270563*^9, 
   3.761597289870308*^9}, 3.761597809358973*^9, 3.761597981316104*^9, {
   3.76159828977899*^9, 3.761598319642272*^9}, 3.761598358688444*^9, 
   3.7615984257295923`*^9, 3.7616005510462008`*^9, 3.898623358291662*^9, 
   3.898623391408491*^9, 3.899755470638731*^9},
 CellLabel->"Out[471]=",
 CellID->111339732,ExpressionUUID->"bef85f6b-e773-42cd-9469-7d840085d80b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The descents follow easily:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.761602562327414*^9, 3.7616025694787903`*^9}, {
  3.761602652306975*^9, 3.761602657659069*^9}},
 CellID->258727906,ExpressionUUID->"c959693b-6af8-419f-82b9-e61a8407052a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reverse", "[", 
  RowBox[{
   RowBox[{"Length", "@", "p"}], "-", 
   RowBox[{"PermutationAscents", "@", 
    RowBox[{"Reverse", "@", "p"}]}]}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.761602594232671*^9, 3.761602630107443*^9}, 
   3.898623352750309*^9},
 CellLabel->"In[472]:=",
 CellID->97985540,ExpressionUUID->"61a497b6-1cbd-4429-b72a-bf0811518140"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "4", ",", "6", ",", "7"}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.761602600390664*^9, 3.76160263111024*^9}, 
   3.89862335838877*^9, 3.8986233919853363`*^9, 3.8997554731217923`*^9},
 CellLabel->"Out[472]=",
 CellID->107056388,ExpressionUUID->"edc63cac-0508-4d53-97c6-5bafd3eb9a04"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["There is also a function for this.", "MathCaption",
 CellChangeTimes->{{3.8997554748443956`*^9, 3.8997554807621813`*^9}},
 CellID->892397338,ExpressionUUID->"f8b8fb5e-6178-44eb-960d-8bbc4e363658"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PermutationDescents", "[", "p", "]"}]], "Input",
 CellChangeTimes->{{3.899755481435153*^9, 3.899755485613575*^9}, {
  3.8997555345756264`*^9, 3.899755534833783*^9}},
 CellLabel->"In[938]:=",
 CellID->70290140,ExpressionUUID->"2d3edf4c-7cbb-4b61-8ee9-8e3db183b436"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "4", ",", "6", ",", "7"}], "}"}]], "Output",
 CellChangeTimes->{3.8997555351846294`*^9},
 CellLabel->"Out[938]=",
 CellID->100322807,ExpressionUUID->"e8cc5950-dbc9-4133-9a15-99363811d554"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["A triangular table of Gauss factorials up to 7::", "MathCaption",
 CellChangeTimes->{{3.898287633382123*^9, 3.8982876396171246`*^9}, {
  3.898287710712999*^9, 3.8982877200009975`*^9}},
 CellID->819912601,ExpressionUUID->"62f1ea29-4de0-47ea-9170-9ca4830dd1b2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"GaussFactorial", "[", 
    RowBox[{"n", ",", "k"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "n"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.898287641041126*^9, 3.8982876458911333`*^9}, {
  3.8982877004174843`*^9, 3.898287739485997*^9}},
 CellLabel->"In[940]:=",
 CellID->375659687,ExpressionUUID->"7f18710c-a721-438e-b20a-3774e8f82efc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "3", ",", "8", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"120", ",", "15", ",", "40", ",", "15", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"720", ",", "15", ",", "40", ",", "15", ",", "144", ",", "5"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5040", ",", "105", ",", "280", ",", "105", ",", "1008", ",", "35", ",", 
     "720"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8982877397829976`*^9, 3.899755684540824*^9},
 CellLabel->"Out[940]=",
 CellID->223206235,ExpressionUUID->"6ba019bc-b907-4a05-a53d-2633d532511e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Make a grid with a frame:", "MathCaption",
 CellChangeTimes->{{3.8982877492739983`*^9, 3.898287753486998*^9}},
 CellID->652840542,ExpressionUUID->"28484c4f-addc-4141-9242-12772d48ed02"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"GaussFactorial", "[", 
      RowBox[{"n", ",", "k"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "n"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.898287754085997*^9, 3.8982877577249966`*^9}},
 CellLabel->"In[939]:=",
 CellID->115721087,ExpressionUUID->"2f24e8ff-2a22-411d-bf7d-01ddee90b250"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "", "", "", "", "", ""},
    {"2", "1", "", "", "", "", ""},
    {"6", "3", "2", "", "", "", ""},
    {"24", "3", "8", "3", "", "", ""},
    {"120", "15", "40", "15", "24", "", ""},
    {"720", "15", "40", "15", "144", "5", ""},
    {"5040", "105", "280", "105", "1008", "35", "720"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.8982877579349985`*^9, 3.899755682601363*^9},
 CellLabel->"Out[939]=",
 CellID->424564025,ExpressionUUID->"7fc46201-42cf-4a42-aa1a-b16fdd99b76d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Phitorial of 10:", "MathCaption",
 CellChangeTimes->{{3.898185095765943*^9, 3.8981850985319686`*^9}},
 CellID->395670977,ExpressionUUID->"6525585c-3051-4328-9726-48e3658d8a86"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Phitorial", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.8981823174928827`*^9, 3.8981823210471945`*^9}},
 CellLabel->"In[941]:=",
 CellID->566799357,ExpressionUUID->"90cc6718-063c-4fc2-9d6e-b95c4373cac5"],

Cell[BoxData["189"], "Output",
 CellChangeTimes->{3.898182321406195*^9, 3.8997557207368183`*^9},
 CellLabel->"Out[941]=",
 CellID->63581800,ExpressionUUID->"00be94c9-5930-4123-9ff1-2c1777d1373a"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 ButtonBox["Project Euler Problem 754 Product of Gauss Factorials",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://projecteuler.net/problem=754"], None},
  ButtonNote->"https://projecteuler.net/problem=754"],
 " states, \"The Gauss Factorial of a number ",
 Cell[BoxData[
 "n"], "InlineFormula",ExpressionUUID->"1b9e3d4c-25d3-4f55-964f-918412d24b28"],
 " is defined as the product of all positive numbers ",
 Cell[BoxData[
  RowBox[{"<=", "n"}]], "InlineFormula",ExpressionUUID->
  "3150269c-115d-4a66-8fc2-3b699d787996"],
 "  that are relatively prime to ",
 Cell[BoxData[
 "n"], "InlineFormula",ExpressionUUID->"b40294b4-be1a-494f-b46e-4372e4db001f"],
 ". For example, ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"g", 
    RowBox[{"(", "10", ")"}]}], "=", 
   RowBox[{
    RowBox[{"1", " ", "3", " ", "7", " ", "9"}], "=", "189"}]}]], 
  "InlineFormula",ExpressionUUID->"a9c79401-fe3b-4947-b18a-728f6529350b"],
 ". Also, we define ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"G", 
    RowBox[{"(", "n", ")"}]}], "=", 
   RowBox[{
    UnderoverscriptBox["\[Product]", 
     RowBox[{"i", "=", "1"}], "n"], 
    RowBox[{"g", 
     RowBox[{"(", "i", ")"}]}]}]}]], "InlineFormula",ExpressionUUID->
  "c39c3920-c4f7-4c98-baf5-25b1bf512ced"],
 ". You are given ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"G", 
    RowBox[{"(", "10", ")"}]}], "=", "23044331520000"}]], "InlineFormula",
  ExpressionUUID->"c8c0d004-bb7e-43af-92f1-bb42461dc0d0"],
 ". Find ",
 Cell[BoxData[
  RowBox[{"G", 
   RowBox[{"(", 
    SuperscriptBox["10", "8"], ")"}]}]], "InlineFormula",ExpressionUUID->
  "825ac4ce-7ccb-4929-9e84-7fca6517e31b"],
 ". Give your answer modulo ",
 Cell[BoxData[
 "1000000007"], "InlineFormula",ExpressionUUID->
  "bf421c7c-4ace-46d1-bf8c-994beb70b091"],
 ".\""
}], "MathCaption",
 CellChangeTimes->{
  3.8981858511231184`*^9, {3.8981859052781706`*^9, 3.8981859134084463`*^9}},
 CellID->255766314,ExpressionUUID->"e0e4efa2-fc2f-462f-878a-346871875012"],

Cell[CellGroupData[{

Cell[TextData[{
 "Compute the products of the first 10 phitorials to verify the statement ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"G", 
    RowBox[{"(", "10", ")"}]}], "=", "23044331520000"}]], "InlineFormula",
  ExpressionUUID->"935c09f3-964b-468b-9180-e8dabd9cc3d4"],
 ":"
}], "MathCaption",
 CellChangeTimes->{{3.8981823481516457`*^9, 3.8981826497216463`*^9}, {
  3.8981857747223787`*^9, 3.898185774725379*^9}, {3.898185847991984*^9, 
  3.8981858756097927`*^9}},
 CellID->561182461,ExpressionUUID->"06f221c4-3a6e-420e-9281-132cd2c5f8ae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EchoTiming", "@", 
  RowBox[{"Product", "[", 
   RowBox[{
    RowBox[{"Phitorial", "[", "n", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8981823275966673`*^9, 3.8981823327943587`*^9}, {
  3.8981858807017317`*^9, 3.8981858834697604`*^9}},
 CellLabel->"In[127]:=",
 CellID->178093661,ExpressionUUID->"b26267a8-a88e-4b11-998c-c9f3ed3a96e0"],

Cell[BoxData["0.0002024`"], "EchoTiming",
 CellChangeTimes->{3.8981858836947327`*^9},
 CellID->11277768,ExpressionUUID->"75b36053-ebab-4fd4-84c3-4a96f58d6a14"],

Cell[BoxData["23044331520000"], "Output",
 CellChangeTimes->{3.898182333114361*^9, 3.898185884430244*^9},
 CellLabel->"Out[127]=",
 CellID->135146785,ExpressionUUID->"043dbcd8-910f-46bb-b1e2-ce4a21954487"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compute the phitorial product up to ",
 Cell[BoxData[
  SuperscriptBox["10", "4"]], "InlineFormula",ExpressionUUID->
  "9535ecda-4472-404d-9f5f-f908dabfbf96"],
 ":"
}], "MathCaption",
 CellChangeTimes->{{3.8981851638771286`*^9, 3.898185172710628*^9}, {
   3.898185264681044*^9, 3.8981852655001383`*^9}, {3.8981854925875683`*^9, 
   3.8981854925875683`*^9}, 3.898185815695145*^9},
 CellID->102959412,ExpressionUUID->"f58db4b4-936e-4b86-aada-cea71209cfce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EchoTiming", "[", 
  RowBox[{"Product", "[", 
   RowBox[{
    RowBox[{"Phitorial", "[", "n", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", 
      SuperscriptBox["10", "4"]}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8981851746411724`*^9, 3.8981851767278247`*^9}, {
   3.898185224134492*^9, 3.8981852458837285`*^9}, 3.8981854881131086`*^9},
 CellLabel->"In[124]:=",
 CellID->65194424,ExpressionUUID->"b585f376-455e-4f06-b10c-ef2bd26cdb38"],

Cell[BoxData["43.6647207`"], "EchoTiming",
 CellChangeTimes->{3.898185532497261*^9},
 CellID->593897543,ExpressionUUID->"af637982-a044-45ec-97bb-ad1e6624cc54"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{
      "59164868729671610938246087809704188976914193685488458108710146404740892\
822379871539934845489808218821604928896809249436472645406000833488216177847592\
980464286442442444398876837616", 
       TemplateBox[{"101789813"}, "OutputSizeLimit`Skeleton"], 
       "0000000000000000000000000000000000000000000000000000000000000000000000\
000000000000000000000000000000000000000000000000000000000000000000000000000000\
00000000000000000000000000000000"}], Short[#, 8]& ], "line" -> 124, 
   "sessionID" -> 34156895453523762438, "byteCount" -> 42267528, "size" -> 8, 
   "stored" -> False, "expr" -> Missing["NotAvailable", "NewSessionID"], 
   "wrap" -> OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.8981852421794868`*^9, 3.898185482734152*^9, 
  3.898185569325807*^9},
 CellLabel->"Out[124]=",
 CellID->74761761,ExpressionUUID->"67310363-e70b-466f-8b52-b90d651fa870"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compute the answer mod 1000000007:", "MathCaption",
 CellChangeTimes->{{3.8981858186942124`*^9, 3.8981858247879715`*^9}},
 CellID->298809539,ExpressionUUID->"dde14458-f295-4034-b96c-42c1ac1c0293"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mod", "[", 
  RowBox[{"%", ",", "1000000007"}], "]"}]], "Input",
 CellChangeTimes->{{3.8981857050918465`*^9, 3.898185718490545*^9}},
 CellLabel->"In[125]:=",
 CellID->7216617,ExpressionUUID->"24512014-d96b-4551-b5aa-7a0f6b459a9f"],

Cell[BoxData["517055464"], "Output",
 CellChangeTimes->{3.8981857200855713`*^9},
 CellLabel->"Out[125]=",
 CellID->150133947,ExpressionUUID->"d369b39a-78bb-460c-aef1-c5cf8726addb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Product of primes up to 20:", "MathCaption",
 CellChangeTimes->{{3.898286862664509*^9, 3.8982868671685095`*^9}},
 CellID->6621231,ExpressionUUID->"7ba554c1-8774-4fdf-ba30-250586c1dbac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Primorial", "[", "20", "]"}]], "Input",
 CellChangeTimes->{{3.898286869160511*^9, 3.8982868720735087`*^9}},
 CellLabel->"In[893]:=",
 CellID->238009890,ExpressionUUID->"b499c1cc-970e-4ba7-8fc5-afa7ca346ad9"],

Cell[BoxData["9699690"], "Output",
 CellChangeTimes->{3.89828687246351*^9},
 CellLabel->"Out[893]=",
 CellID->441155702,ExpressionUUID->"b2f4ef0a-b277-4457-ac6a-7e6142c0dc0a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Product of primes up to 54:", "MathCaption",
 CellChangeTimes->{{3.8982868743455095`*^9, 3.89828687863951*^9}},
 CellID->784853736,ExpressionUUID->"7f518fad-62a5-498a-b432-f6a13fb51be6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Primorial", "[", "54", "]"}]], "Input",
 CellChangeTimes->{{3.898286869160511*^9, 3.898286881339834*^9}},
 CellLabel->"In[894]:=",
 CellID->610437364,ExpressionUUID->"c47d54bf-f526-45d8-86c0-15fc82c21df9"],

Cell[BoxData["32589158477190044730"], "Output",
 CellChangeTimes->{3.898286881785511*^9},
 CellLabel->"Out[894]=",
 CellID->38186909,ExpressionUUID->"b96e6d6d-52c5-4995-ae59-13e4feda1f86"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compute the primorial ",
 Cell[BoxData[
  StyleBox[
   TagBox[
    RowBox[{"23", "#"}],
    "ForceRasterization"], "MarkedForRasterization"]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "0b43250e-1803-49d1-b39c-1c0476c6ede8"],
 ":"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.838213237329423*^9, 3.8382132721147633`*^9}, 
   3.852826799559807*^9, {3.852827136061099*^9, 3.8528271360611362`*^9}, {
   3.85954974574284*^9, 3.8595497489212027`*^9}},
 CellID->393571408,ExpressionUUID->"9027f44a-5a42-40d6-b0d8-272bdc6bbdcd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Primorial", "[", "23", "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.838213221919333*^9, 3.838213231771694*^9}, 
   3.899454504994316*^9},
 CellLabel->"In[125]:=",
 CellID->878786336,ExpressionUUID->"bf26b9c2-a90b-40a6-9edc-15853409fe61"],

Cell[BoxData["223092870"], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8382132471136208`*^9, 3.899454505747471*^9},
 CellLabel->"Out[125]=",
 CellID->369524703,ExpressionUUID->"d1ea0b12-49dd-4c79-9485-c3963fb6bde0"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "61750141-3daa-4d1a-9344-d608821bd480"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->404754789,ExpressionUUID->"ba87e999-f67c-40da-a475-c2ab4398ea57"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compute a list of the first 15 primorials:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.838213205491308*^9, 3.8382132135686007`*^9}, {
  3.8382132894174967`*^9, 3.838213290610783*^9}},
 CellID->394823239,ExpressionUUID->"d4e3f1c0-4936-41b8-b9f2-641ef783b90e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Primorial", "[", 
  RowBox[{"Range", "[", "15", "]"}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{3.8994545102426972`*^9},
 CellLabel->"In[126]:=",
 CellID->627889596,ExpressionUUID->"277c5bb1-140a-4367-8f49-95e8f595bc53"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "6", ",", "6", ",", "30", ",", "30", ",", "210", ",", 
   "210", ",", "210", ",", "210", ",", "2310", ",", "2310", ",", "30030", ",",
    "30030", ",", "30030"}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.899454510931697*^9},
 CellLabel->"Out[126]=",
 CellID->95453950,ExpressionUUID->"2942f647-ab50-4d31-bef9-d43e7d7fd636"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compare with the definition:", "MathCaption",
 TaggingRules->{},
 CellID->731096908,ExpressionUUID->"46f4d3a9-a5cc-4a21-ba7d-c1bbf723259a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"k", "=", "7"}], "}"}], ",", 
   RowBox[{
    RowBox[{"Product", "[", 
     RowBox[{
      RowBox[{"Prime", "[", "j", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", 
        RowBox[{"PrimePi", "[", "k", "]"}]}], "}"}]}], "]"}], "\[Equal]", 
    RowBox[{"Primorial", "[", "k", "]"}]}]}], "]"}]], "Input", "ExampleInput",
 
 TaggingRules->{},
 CellChangeTimes->{{3.899454545881302*^9, 3.8994545491140113`*^9}},
 CellLabel->"In[128]:=",
 CellID->219626058,ExpressionUUID->"a99f34f5-1dd9-4cfd-bec7-d4eb4f90db18"],

Cell[BoxData["True"], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8994545497240176`*^9},
 CellLabel->"Out[128]=",
 CellID->169546956,ExpressionUUID->"5a6ed990-717c-465b-90e8-b4868cf4cce5"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "2c6cbec8-1f0c-4a9e-a60c-e982ff9c31a2"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->96742026,ExpressionUUID->"a89fbfd0-d78a-461c-96cb-a46b935d33cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The resource function ",
 Cell[BoxData[
  ButtonBox["ChebyshevTheta",
   BaseStyle->"Hyperlink",
   ButtonData->{
     URL["https://resources.wolframcloud.com/FunctionRepository/resources/\
ChebyshevTheta/"], None},
   ButtonNote->
    "https://resources.wolframcloud.com/FunctionRepository/resources/\
ChebyshevTheta/"]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "1d162309-b740-435d-b59b-74e4d228d368"],
 " is the logarithm of the primorial:"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.859549840016568*^9, 3.85954984001661*^9}},
 CellID->575191782,ExpressionUUID->"cfb986fe-9b39-47ba-b733-186f5d3aaf67"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"k", "=", "7"}], "}"}], ",", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"ResourceFunction", "[", "\"\<ChebyshevTheta\>\"", "]"}], "[", 
      "k", "]"}], "]"}], "\[Equal]", 
    RowBox[{"Primorial", "[", "k", "]"}]}]}], "]"}]], "Input", "ExampleInput",
 
 TaggingRules->{},
 CellChangeTimes->{{3.899454623634669*^9, 3.899454625862824*^9}},
 CellLabel->"In[129]:=",
 CellID->154121207,ExpressionUUID->"9b2e32bd-e83c-46ba-971b-f2624e8e809b"],

Cell[BoxData["True"], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8994546268223934`*^9},
 CellLabel->"Out[129]=",
 CellID->179973804,ExpressionUUID->"21e21422-7732-4605-b3a3-256caf1da68b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Evaluate the ",
 ButtonBox["infinite primorial",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://doi.org/10.1007/s00220-007-0350-z"], None},
  ButtonNote->"https://doi.org/10.1007/s00220-007-0350-z"],
 ":"
}], "MathCaption",
 TaggingRules->{},
 CellID->812166021,ExpressionUUID->"af105472-3a2c-49ad-a9f3-e60c9a7f1cf0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Product", "[", 
  RowBox[{
   RowBox[{"Prime", "[", "k", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"Regularization", "\[Rule]", "\"\<Dirichlet\>\""}]}], 
  "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellLabel->"In[130]:=",
 CellID->624985202,ExpressionUUID->"194a904e-1a03-43e5-82ed-58a7c855999c"],

Cell[BoxData[
 RowBox[{"4", " ", 
  SuperscriptBox["\[Pi]", "2"]}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.899454725862358*^9},
 CellLabel->"Out[130]=",
 CellID->51179190,ExpressionUUID->"a35cef06-10a6-4353-8849-a3e29372d31b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Primorial", "[", "\[Infinity]", "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{3.8994547227226877`*^9},
 CellLabel->"In[131]:=",
 CellID->368150137,ExpressionUUID->"3bbb094f-afd8-4d9e-917e-8fc00b5c1fe7"],

Cell[BoxData[
 RowBox[{"4", " ", 
  SuperscriptBox["\[Pi]", "2"]}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.89945472690936*^9},
 CellLabel->"Out[131]=",
 CellID->288813044,ExpressionUUID->"e27c18fa-0ace-473f-9850-2802dbfcb17b"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "ff9b8a83-8699-4408-815a-7ebed94fb21b"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->758872197,ExpressionUUID->"300ccbfc-a465-43c1-909a-cf81d5cf8e29"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compare the growth rate of the primorial versus factorial:", \
"MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.837685686619939*^9, 3.837685697646296*^9}, {
  3.859549849581889*^9, 3.8595498543322144`*^9}},
 CellID->230671479,ExpressionUUID->"22c43446-717d-427c-8724-8ef85c36a4c5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"DiscretePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Primorial", "[", "n", "]"}], ",", 
      RowBox[{"Factorial", "[", "n", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "50"}], "}"}], ",", 
    RowBox[{"ScalingFunctions", "\[Rule]", "\"\<Log\>\""}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<n#\>\"", ",", "\"\<n!\>\""}], "}"}]}]}], "]"}], 
  "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.8376857012163343`*^9, 3.837685761905402*^9}, 
   3.899454732174096*^9, {3.9000056041055765`*^9, 3.900005606681326*^9}},
 CellLabel->"In[61]:=",
 CellID->968332860,ExpressionUUID->"766cbd30-55d6-4147-a59d-1cc1785998ec"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAAAAAAAAAEDz/D8xbDE0=
    "], {{0, 145.2}, {288., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{288., 145.2},
  PlotRange->{{0, 288.}, {0, 145.2}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.837685717431341*^9, 3.8376857624300327`*^9}, 
   3.899454733868168*^9, 3.900005607492854*^9},
 CellLabel->"Out[61]=",
 CellID->202642854,ExpressionUUID->"51dace37-36f8-49d3-b97f-bd4f6a4a668c"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "b55dd7d1-20b9-41e7-9b62-57206541d086"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->115354593,ExpressionUUID->"f24c0561-8ff7-4952-b8ff-995eb85767e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Plot the differences between the factorial and the primorial up to ",
 Cell[BoxData[
  StyleBox["n", "TI"]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "769dc863-5e1c-4d12-b108-3901a5e8ba7f"],
 ":"
}], "MathCaption",
 TaggingRules->{},
 CellID->201723607,ExpressionUUID->"18159654-2701-405c-b018-8a78c437bab8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Differences", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Log", "[", 
       FractionBox[
        RowBox[{"n", "!"}], 
        RowBox[{"Primorial", "[", "n", "]"}]], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", "100", ",", "1"}], "}"}]}], "]"}], "]"}], 
   ",", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       RowBox[{
         DynamicBox[
          FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]], 
         "\[Rule]", 
         DynamicBox[
          FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]]}], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["Rule", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["56", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    Filling -> Axis,
    SelectWithContents->True,
    Selectable->False]}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.899454746792905*^9, 3.899454757563745*^9}},
 CellLabel->"In[134]:=",
 CellID->746283470,ExpressionUUID->"c83f1248-66a4-4918-b1bf-caa29000eb9c"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[GraphicsComplexBox[CompressedData["
1:eJztlYtPU2cYhytMUSuXOdeJ9YZMp1jZKCIisP5aoHItvVJkuOASohEMKmUY
ccuRGJ0xJoLExGu8BRQEo4kKVi5jKXMuM0G0LovLtkAMaowkIBRF2Izvm6Vf
4n/Qk5yc/N7nPO93Tk6+84Z9U2Iu9JPJZD//d769vjsGNDLvA95xKl7EvRrX
RQ7TfSECnwW/hRGv5A1jxGcLfC5KG+I1V89y34WQ+zfufHp4EuVFUNiuOa8U
+VH+VPCX4LtTPbcU//hTfanAI1DnfKi4M3cy1VVYkJoVp6jnHEnPP4XyF4If
hb1VRWsqFgRQXS3waFT1llboRpivxJWmkprIr6ZSjsFtV2K54ybnVYIfi1FV
9a664mlUX43og89HtB2c4/DbnIGnNSHTKa/BoT3+zX+t5xyP8PQj7rwLnBOE
/ok47paP1sbIqf6lwDUout3c1tPCHOhufjD0u4eyBAwHtuwei5lBXAvXYLAl
bxtlSUvfl7nOu7+kwwXtT66u0ECqJ8Ed+MOmUQNlKQmB29XxPZXMkwU/GSsS
I63tj5mnCDwFSdaxVZP1QVTX4/wv576VOyhLehTrDrUGnWG+VvDXosxpTFjt
YZ4Ke566afuiYPJTcVl56ca9DMqyNEzITBMFDuZpSLvYVL/4BPN0oX86ZnzU
Wb71CfMMDI7fXFcZQPtEyoCxOOLXl6G8bzKx7ljjmY9VzDORpe9y9SUyzxL6
Z+GAuvDR8QLmBoEb8OzRZ3s+r2SeDeXs3v6qau6fTfuPuRFly2oOV1+lDCNq
w9P/WNnJ9xu9+3cYEXfXebrrb/ZNcM6pOdnygn0TwrQb95eNs28SfBM09qF8
g/JDqpu9OcyY1zDmzo8lLpmRH3D2mDKFcocZM/s7OhvM7FuQoM7cF1RAGRYs
M4TPStnCvkVY34JkacebqH3sW+n/w74VhSdr/SpOs28VfCvuFw5PW9rCvg3T
z3m+1rvYt0Hf+mQzutm34Z6m+oNP/uTnt6Fg2/rXd/rZzxHePwchqijl3Qn2
c9CWv/jH+fKZ5OfAsamuLVtBWWbHVvdg54YwyrDjaHtduU1FWbKj99YbaXks
+3Z4zgd836dlP1dYPxebHZ7rk+zs52L5PEXoxg3s59L/+f/s5fvmh29++OaH
b3745gf5vvnxvvnxL9XJezc=
       "], {{{}, 
         {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
          None], GraphicsGroupBox[{
            PolygonBox[{{2, 4, 3}, {4, 6, 5}, {16, 18, 17}, {28, 30, 29}, {10,
              12, 11}, {70, 72, 71}, {40, 42, 41}, {58, 60, 59}}], 
            PolygonBox[{{12, 16, 15, 14, 13}, {66, 70, 69, 68, 67}, {18, 22, 
             21, 20, 19}, {6, 10, 9, 8, 7}, {96, 100, 99, 98, 97}, {36, 40, 
             39, 38, 37}, {42, 46, 45, 44, 43}, {78, 82, 81, 80, 79}}], 
            PolygonBox[{{60, 66, 65, 64, 63, 62, 61}, {22, 28, 27, 26, 25, 24,
              23}, {46, 52, 51, 50, 49, 48, 47}, {82, 88, 87, 86, 85, 84, 
             83}, {72, 78, 77, 76, 75, 74, 73}, {52, 58, 57, 56, 55, 54, 
             53}, {30, 36, 35, 34, 33, 32, 31}}], 
            PolygonBox[{{88, 96, 95, 94, 93, 92, 91, 90, 
             89}}]}]}, {}, {}}, {{}, {}, 
         TagBox[
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[2], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
             18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
            34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
            50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 
            66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 
            82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 
            98, 99}]},
          Annotation[#, "Charting`Private`Tag#1"]& ]}}],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", 
        GraphicsComplex[CompressedData["
1:eJztlYtPU2cYhytMUSuXOdeJ9YZMp1jZKCIisP5aoHItvVJkuOASohEMKmUY
ccuRGJ0xJoLExGu8BRQEo4kKVi5jKXMuM0G0LovLtkAMaowkIBRF2Izvm6Vf
4n/Qk5yc/N7nPO93Tk6+84Z9U2Iu9JPJZD//d769vjsGNDLvA95xKl7EvRrX
RQ7TfSECnwW/hRGv5A1jxGcLfC5KG+I1V89y34WQ+zfufHp4EuVFUNiuOa8U
+VH+VPCX4LtTPbcU//hTfanAI1DnfKi4M3cy1VVYkJoVp6jnHEnPP4XyF4If
hb1VRWsqFgRQXS3waFT1llboRpivxJWmkprIr6ZSjsFtV2K54ybnVYIfi1FV
9a664mlUX43og89HtB2c4/DbnIGnNSHTKa/BoT3+zX+t5xyP8PQj7rwLnBOE
/ok47paP1sbIqf6lwDUout3c1tPCHOhufjD0u4eyBAwHtuwei5lBXAvXYLAl
bxtlSUvfl7nOu7+kwwXtT66u0ECqJ8Ed+MOmUQNlKQmB29XxPZXMkwU/GSsS
I63tj5mnCDwFSdaxVZP1QVTX4/wv576VOyhLehTrDrUGnWG+VvDXosxpTFjt
YZ4Ke566afuiYPJTcVl56ca9DMqyNEzITBMFDuZpSLvYVL/4BPN0oX86ZnzU
Wb71CfMMDI7fXFcZQPtEyoCxOOLXl6G8bzKx7ljjmY9VzDORpe9y9SUyzxL6
Z+GAuvDR8QLmBoEb8OzRZ3s+r2SeDeXs3v6qau6fTfuPuRFly2oOV1+lDCNq
w9P/WNnJ9xu9+3cYEXfXebrrb/ZNcM6pOdnygn0TwrQb95eNs28SfBM09qF8
g/JDqpu9OcyY1zDmzo8lLpmRH3D2mDKFcocZM/s7OhvM7FuQoM7cF1RAGRYs
M4TPStnCvkVY34JkacebqH3sW+n/w74VhSdr/SpOs28VfCvuFw5PW9rCvg3T
z3m+1rvYt0Hf+mQzutm34Z6m+oNP/uTnt6Fg2/rXd/rZzxHePwchqijl3Qn2
c9CWv/jH+fKZ5OfAsamuLVtBWWbHVvdg54YwyrDjaHtduU1FWbKj99YbaXks
+3Z4zgd836dlP1dYPxebHZ7rk+zs52L5PEXoxg3s59L/+f/s5fvmh29++OaH
b3745gf5vvnxvvnxL9XJezc=
         "], {{{}, {
            EdgeForm[], 
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             Opacity[0.2]], 
            GraphicsGroup[{
              
              Polygon[{{2, 4, 3}, {4, 6, 5}, {16, 18, 17}, {28, 30, 29}, {10, 
               12, 11}, {70, 72, 71}, {40, 42, 41}, {58, 60, 59}}], 
              
              Polygon[{{12, 16, 15, 14, 13}, {66, 70, 69, 68, 67}, {18, 22, 
               21, 20, 19}, {6, 10, 9, 8, 7}, {96, 100, 99, 98, 97}, {36, 40, 
               39, 38, 37}, {42, 46, 45, 44, 43}, {78, 82, 81, 80, 79}}], 
              
              Polygon[{{60, 66, 65, 64, 63, 62, 61}, {22, 28, 27, 26, 25, 24, 
               23}, {46, 52, 51, 50, 49, 48, 47}, {82, 88, 87, 86, 85, 84, 
               83}, {72, 78, 77, 76, 75, 74, 73}, {52, 58, 57, 56, 55, 54, 
               53}, {30, 36, 35, 34, 33, 32, 31}}], 
              
              Polygon[{{88, 96, 95, 94, 93, 92, 91, 90, 
               89}}]}]}, {}, {}}, {{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[1, 60]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             
             Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
              18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
              34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
              50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 
              66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 
              82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 
              98, 99}]}, "Charting`Private`Tag#1"]}}], <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0., 99.}, {0, 4.605170185988092}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0., 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              PointSize[
               Rational[1, 60]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {{{}, {
               EdgeForm[], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                Opacity[0.2]], 
               GraphicsGroup[{{
                  Polygon[{{2., 0.}, {4., 0.}, {3., 1.3862943611198906`}}], 
                  Polygon[{{4., 0.}, {6., 0.}, {5., 1.791759469228055}}], 
                  Polygon[{{16., 0.}, {18., 0.}, {17., 2.8903717578961645`}}], 
                  Polygon[{{28., 0.}, {30., 0.}, {29., 3.4011973816621555`}}], 
                  Polygon[{{10., 0.}, {12., 0.}, {11., 2.4849066497880004`}}], 
                  Polygon[{{70., 0.}, {72., 0.}, {71., 4.276666119016055}}], 
                  Polygon[{{40., 0.}, {42., 0.}, {41., 3.7376696182833684`}}], 
                  Polygon[{{58., 0.}, {60., 0.}, {59., 4.0943445622221}}]}, {
                  
                  Polygon[{{12., 0.}, {16., 0.}, {15., 2.772588722239781}, {
                   14., 2.70805020110221}, {13., 2.6390573296152584`}}], 
                  
                  Polygon[{{66., 0.}, {70., 0.}, {69., 4.248495242049359}, {
                   68., 4.23410650459726}, {67., 4.219507705176107}}], 
                  
                  Polygon[{{18., 0.}, {22., 0.}, {21., 3.091042453358316}, {
                   20., 3.044522437723423}, {19., 2.995732273553991}}], 
                  
                  Polygon[{{6., 0.}, {10., 0.}, {9., 2.302585092994046}, {8., 
                   2.1972245773362196`}, {7., 2.0794415416798357`}}], 
                  
                  Polygon[{{96., 0.}, {99., 0.}, {99., 4.605170185988092}, {
                   98., 4.59511985013459}, {97., 4.584967478670572}}], 
                  
                  Polygon[{{36., 0.}, {40., 0.}, {39., 3.6888794541139363`}, {
                   38., 3.6635616461296463`}, {37., 3.6375861597263857`}}], 
                  
                  Polygon[{{42., 0.}, {46., 0.}, {45., 3.828641396489095}, {
                   44., 3.8066624897703196`}, {43., 3.784189633918261}}], 
                  
                  Polygon[{{78., 0.}, {82., 0.}, {81., 4.406719247264253}, {
                   80., 4.394449154672439}, {79., 4.382026634673881}}]}, {
                  
                  Polygon[{{60., 0.}, {66., 0.}, {65., 4.189654742026425}, {
                   64., 4.174387269895637}, {63., 4.1588830833596715`}, {62., 
                   4.143134726391533}, {61., 4.127134385045092}}], 
                  
                  Polygon[{{22., 0.}, {28., 0.}, {27., 3.332204510175204}, {
                   26., 3.295836866004329}, {25., 3.258096538021482}, {24., 
                   3.2188758248682006`}, {23., 3.1780538303479458`}}], 
                  
                  Polygon[{{46., 0.}, {52., 0.}, {51., 3.9512437185814275`}, {
                   50., 3.9318256327243257`}, {49., 3.912023005428146}, {48., 
                   3.8918202981106265`}, {47., 3.871201010907891}}], 
                  
                  Polygon[{{82., 0.}, {88., 0.}, {87., 4.477336814478207}, {
                   86., 4.465908118654584}, {85., 4.454347296253507}, {84., 
                   4.442651256490317}, {83., 4.430816798843313}}], 
                  
                  Polygon[{{72., 0.}, {78., 0.}, {77., 4.356708826689592}, {
                   76., 4.343805421853684}, {75., 4.330733340286331}, {74., 
                   4.31748811353631}, {73., 4.30406509320417}}], 
                  
                  Polygon[{{52., 0.}, {58., 0.}, {57., 4.060443010546419}, {
                   56., 4.04305126783455}, {55., 4.02535169073515}, {54., 
                   4.007333185232471}, {53., 3.9889840465642745`}}], 
                  
                  Polygon[{{30., 0.}, {36., 0.}, {35., 3.58351893845611}, {
                   34., 3.5553480614894135`}, {33., 3.5263605246161616`}, {
                   32., 3.4965075614664802`}, {31., 3.4657359027997265`}}]}, {
                 
                  
                  Polygon[{{88., 0.}, {96., 0.}, {95., 4.564348191467836}, {
                   94., 4.553876891600541}, {93., 4.543294782270004}, {92., 
                   4.532599493153256}, {91., 4.5217885770490405`}, {90., 
                   4.51085950651685}, {89., 
                   4.499809670330265}}]}}]}, {}, {}}, {{}, {}, 
              Annotation[{
                Hue[0.67, 0.6, 0.6], 
                Directive[
                 PointSize[
                  Rational[1, 60]], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[2]], 
                Line[CompressedData["
1:eJxdlH1MzHEcx08hnJJw5DwljznRkaRy77vq9HjdY5fEwhpT5umSCftp5mFm
U5rN4zytkLJsKEeSXfMwNuKYMSyzMGOLXKQwn88f9/1tt9vr8/q9Pr/f7fb7
hSxbY87zkclky/9+/n3/P75qZN4HvLEfvkT/7NaFd9B5gYIfCp9xYT/lVV3k
Rwh+FDZUxWguneK94yD3rd788UAv4vFQ2C47a/N9iCcI/SRsPd5yXfHWl+ZT
BB+GSuczxb1RfWiuwtik9GjFeeZwuv++xDOFPgI7S/PnFY/1o7la8LNQ2rqh
WPeD/WzU1qwpD1/UjzgSd1xxRY5rzHOEPgqdqrItlQX9aT4Xs/Z9/qFtZI7G
g5FfP5YHDiCeh/07fOteL2aOQWjKQXf2WeZYYX8cjrjlnRWRcprPF7wG+Xfq
Glrq2QOP6p5+e+4hloAO//rtXZEDyWvhah9kyV5HLGnp/2Wv894v6XBWe9vV
HOxP83i4/Xev7DQQS/HwX6+OaSlhnyD0CZgeF269+Z59ouATEW/tmtNHH0Bz
Pc7cPb1R7iCW9CjQ7b8RcJL9AqFfgEKnMXauh30S7NnqmvXjB1GfhIvKC1cf
pxLLktEjM/XkOtgnI/lczfmJR9mnCPtTMHBIU9HaD+xT0d59bWGJHz0nUiqM
BWH3vwfzc5OGhYerTw5TsU9Dur7Z9S6OfbqwPx171Xkvj+SyNwjegE8vJ++Y
UcI+A8oRrW2lZbw/g54/9kYUTi0/UHaJGEZUhKa8mN3E5xu99zcaEf3QeaL5
DfcmOEeWH6v/wr0JIdoVewq7uTcJvQka+7ccg3Iwzc3eHmaMrupy50SRl8zI
8Tt1WJlI3GhGUFtjU5WZewti1Wm7AnKJYcFUQ+jQxNXcW4TrW5AgbfodsYt7
K71/uLci71iFT/EJ7q1Cb8WTvI7+U+q5t2HAac8SvYt7G/Q3PqzCI+5teKwp
6z38Fd+/DbnrFv+618Z9pvD7MxGoilA+7OE+Ew05E2+NkQdRnwnHysqGDAWx
zI617vampSHEsOPQzcoim4pYsqP1+m9pWhT3dnjO+G17p+U+S7h+FlY5PFd6
2bnPwrTRiuAVS7nPovdzEP4AqJo9xg==
                 "]]}, "Charting`Private`Tag#1"]}}, "GCFlag" -> True|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0., 99.}, {0, 4.605170185988092}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0., 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
          "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             PointSize[
              Rational[1, 60]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {{{}, {
              EdgeForm[], 
              Directive[
               RGBColor[0.368417, 0.506779, 0.709798], 
               Opacity[0.2]], 
              GraphicsGroup[{{
                 Polygon[{{2., 0.}, {4., 0.}, {3., 1.3862943611198906`}}], 
                 Polygon[{{4., 0.}, {6., 0.}, {5., 1.791759469228055}}], 
                 Polygon[{{16., 0.}, {18., 0.}, {17., 2.8903717578961645`}}], 
                 
                 Polygon[{{28., 0.}, {30., 0.}, {29., 3.4011973816621555`}}], 
                 
                 Polygon[{{10., 0.}, {12., 0.}, {11., 2.4849066497880004`}}], 
                 
                 Polygon[{{70., 0.}, {72., 0.}, {71., 4.276666119016055}}], 
                 Polygon[{{40., 0.}, {42., 0.}, {41., 3.7376696182833684`}}], 
                 
                 Polygon[{{58., 0.}, {60., 0.}, {59., 4.0943445622221}}]}, {
                 
                 Polygon[{{12., 0.}, {16., 0.}, {15., 2.772588722239781}, {
                  14., 2.70805020110221}, {13., 2.6390573296152584`}}], 
                 
                 Polygon[{{66., 0.}, {70., 0.}, {69., 4.248495242049359}, {
                  68., 4.23410650459726}, {67., 4.219507705176107}}], 
                 
                 Polygon[{{18., 0.}, {22., 0.}, {21., 3.091042453358316}, {
                  20., 3.044522437723423}, {19., 2.995732273553991}}], 
                 
                 Polygon[{{6., 0.}, {10., 0.}, {9., 2.302585092994046}, {8., 
                  2.1972245773362196`}, {7., 2.0794415416798357`}}], 
                 
                 Polygon[{{96., 0.}, {99., 0.}, {99., 4.605170185988092}, {
                  98., 4.59511985013459}, {97., 4.584967478670572}}], 
                 
                 Polygon[{{36., 0.}, {40., 0.}, {39., 3.6888794541139363`}, {
                  38., 3.6635616461296463`}, {37., 3.6375861597263857`}}], 
                 
                 Polygon[{{42., 0.}, {46., 0.}, {45., 3.828641396489095}, {
                  44., 3.8066624897703196`}, {43., 3.784189633918261}}], 
                 
                 Polygon[{{78., 0.}, {82., 0.}, {81., 4.406719247264253}, {
                  80., 4.394449154672439}, {79., 4.382026634673881}}]}, {
                 
                 Polygon[{{60., 0.}, {66., 0.}, {65., 4.189654742026425}, {
                  64., 4.174387269895637}, {63., 4.1588830833596715`}, {62., 
                  4.143134726391533}, {61., 4.127134385045092}}], 
                 
                 Polygon[{{22., 0.}, {28., 0.}, {27., 3.332204510175204}, {
                  26., 3.295836866004329}, {25., 3.258096538021482}, {24., 
                  3.2188758248682006`}, {23., 3.1780538303479458`}}], 
                 
                 Polygon[{{46., 0.}, {52., 0.}, {51., 3.9512437185814275`}, {
                  50., 3.9318256327243257`}, {49., 3.912023005428146}, {48., 
                  3.8918202981106265`}, {47., 3.871201010907891}}], 
                 
                 Polygon[{{82., 0.}, {88., 0.}, {87., 4.477336814478207}, {
                  86., 4.465908118654584}, {85., 4.454347296253507}, {84., 
                  4.442651256490317}, {83., 4.430816798843313}}], 
                 
                 Polygon[{{72., 0.}, {78., 0.}, {77., 4.356708826689592}, {
                  76., 4.343805421853684}, {75., 4.330733340286331}, {74., 
                  4.31748811353631}, {73., 4.30406509320417}}], 
                 
                 Polygon[{{52., 0.}, {58., 0.}, {57., 4.060443010546419}, {
                  56., 4.04305126783455}, {55., 4.02535169073515}, {54., 
                  4.007333185232471}, {53., 3.9889840465642745`}}], 
                 
                 Polygon[{{30., 0.}, {36., 0.}, {35., 3.58351893845611}, {34.,
                   3.5553480614894135`}, {33., 3.5263605246161616`}, {32., 
                  3.4965075614664802`}, {31., 3.4657359027997265`}}]}, {
                 
                 Polygon[{{88., 0.}, {96., 0.}, {95., 4.564348191467836}, {
                  94., 4.553876891600541}, {93., 4.543294782270004}, {92., 
                  4.532599493153256}, {91., 4.5217885770490405`}, {90., 
                  4.51085950651685}, {89., 
                  4.499809670330265}}]}}]}, {}, {}}, {{}, {}, 
             Annotation[{
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[1, 60]], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]], 
               Line[CompressedData["
1:eJxdlH1MzHEcx08hnJJw5DwljznRkaRy77vq9HjdY5fEwhpT5umSCftp5mFm
U5rN4zytkLJsKEeSXfMwNuKYMSyzMGOLXKQwn88f9/1tt9vr8/q9Pr/f7fb7
hSxbY87zkclky/9+/n3/P75qZN4HvLEfvkT/7NaFd9B5gYIfCp9xYT/lVV3k
Rwh+FDZUxWguneK94yD3rd788UAv4vFQ2C47a/N9iCcI/SRsPd5yXfHWl+ZT
BB+GSuczxb1RfWiuwtik9GjFeeZwuv++xDOFPgI7S/PnFY/1o7la8LNQ2rqh
WPeD/WzU1qwpD1/UjzgSd1xxRY5rzHOEPgqdqrItlQX9aT4Xs/Z9/qFtZI7G
g5FfP5YHDiCeh/07fOteL2aOQWjKQXf2WeZYYX8cjrjlnRWRcprPF7wG+Xfq
Glrq2QOP6p5+e+4hloAO//rtXZEDyWvhah9kyV5HLGnp/2Wv894v6XBWe9vV
HOxP83i4/Xev7DQQS/HwX6+OaSlhnyD0CZgeF269+Z59ouATEW/tmtNHH0Bz
Pc7cPb1R7iCW9CjQ7b8RcJL9AqFfgEKnMXauh30S7NnqmvXjB1GfhIvKC1cf
pxLLktEjM/XkOtgnI/lczfmJR9mnCPtTMHBIU9HaD+xT0d59bWGJHz0nUiqM
BWH3vwfzc5OGhYerTw5TsU9Dur7Z9S6OfbqwPx171Xkvj+SyNwjegE8vJ++Y
UcI+A8oRrW2lZbw/g54/9kYUTi0/UHaJGEZUhKa8mN3E5xu99zcaEf3QeaL5
DfcmOEeWH6v/wr0JIdoVewq7uTcJvQka+7ccg3Iwzc3eHmaMrupy50SRl8zI
8Tt1WJlI3GhGUFtjU5WZewti1Wm7AnKJYcFUQ+jQxNXcW4TrW5AgbfodsYt7
K71/uLci71iFT/EJ7q1Cb8WTvI7+U+q5t2HAac8SvYt7G/Q3PqzCI+5teKwp
6z38Fd+/DbnrFv+618Z9pvD7MxGoilA+7OE+Ew05E2+NkQdRnwnHysqGDAWx
zI617vampSHEsOPQzcoim4pYsqP1+m9pWhT3dnjO+G17p+U+S7h+FlY5PFd6
2bnPwrTRiuAVS7nPovdzEP4AqJo9xg==
                "]]}, "Charting`Private`Tag#1"]}}, "GCFlag" -> True|>, 
        "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListLinePlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[
     GraphicsComplex[CompressedData["
1:eJztlYtPU2cYhytMUSuXOdeJ9YZMp1jZKCIisP5aoHItvVJkuOASohEMKmUY
ccuRGJ0xJoLExGu8BRQEo4kKVi5jKXMuM0G0LovLtkAMaowkIBRF2Izvm6Vf
4n/Qk5yc/N7nPO93Tk6+84Z9U2Iu9JPJZD//d769vjsGNDLvA95xKl7EvRrX
RQ7TfSECnwW/hRGv5A1jxGcLfC5KG+I1V89y34WQ+zfufHp4EuVFUNiuOa8U
+VH+VPCX4LtTPbcU//hTfanAI1DnfKi4M3cy1VVYkJoVp6jnHEnPP4XyF4If
hb1VRWsqFgRQXS3waFT1llboRpivxJWmkprIr6ZSjsFtV2K54ybnVYIfi1FV
9a664mlUX43og89HtB2c4/DbnIGnNSHTKa/BoT3+zX+t5xyP8PQj7rwLnBOE
/ok47paP1sbIqf6lwDUout3c1tPCHOhufjD0u4eyBAwHtuwei5lBXAvXYLAl
bxtlSUvfl7nOu7+kwwXtT66u0ECqJ8Ed+MOmUQNlKQmB29XxPZXMkwU/GSsS
I63tj5mnCDwFSdaxVZP1QVTX4/wv576VOyhLehTrDrUGnWG+VvDXosxpTFjt
YZ4Ke566afuiYPJTcVl56ca9DMqyNEzITBMFDuZpSLvYVL/4BPN0oX86ZnzU
Wb71CfMMDI7fXFcZQPtEyoCxOOLXl6G8bzKx7ljjmY9VzDORpe9y9SUyzxL6
Z+GAuvDR8QLmBoEb8OzRZ3s+r2SeDeXs3v6qau6fTfuPuRFly2oOV1+lDCNq
w9P/WNnJ9xu9+3cYEXfXebrrb/ZNcM6pOdnygn0TwrQb95eNs28SfBM09qF8
g/JDqpu9OcyY1zDmzo8lLpmRH3D2mDKFcocZM/s7OhvM7FuQoM7cF1RAGRYs
M4TPStnCvkVY34JkacebqH3sW+n/w74VhSdr/SpOs28VfCvuFw5PW9rCvg3T
z3m+1rvYt0Hf+mQzutm34Z6m+oNP/uTnt6Fg2/rXd/rZzxHePwchqijl3Qn2
c9CWv/jH+fKZ5OfAsamuLVtBWWbHVvdg54YwyrDjaHtduU1FWbKj99YbaXks
+3Z4zgd836dlP1dYPxebHZ7rk+zs52L5PEXoxg3s59L/+f/s5fvmh29++OaH
b3745gf5vvnxvvnxL9XJezc=
      "], {{{}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroup[{
           
           Polygon[{{2, 4, 3}, {4, 6, 5}, {16, 18, 17}, {28, 30, 29}, {10, 12,
             11}, {70, 72, 71}, {40, 42, 41}, {58, 60, 59}}], 
           
           Polygon[{{12, 16, 15, 14, 13}, {66, 70, 69, 68, 67}, {18, 22, 21, 
            20, 19}, {6, 10, 9, 8, 7}, {96, 100, 99, 98, 97}, {36, 40, 39, 38,
             37}, {42, 46, 45, 44, 43}, {78, 82, 81, 80, 79}}], 
           
           Polygon[{{60, 66, 65, 64, 63, 62, 61}, {22, 28, 27, 26, 25, 24, 
            23}, {46, 52, 51, 50, 49, 48, 47}, {82, 88, 87, 86, 85, 84, 83}, {
            72, 78, 77, 76, 75, 74, 73}, {52, 58, 57, 56, 55, 54, 53}, {30, 
            36, 35, 34, 33, 32, 31}}], 
           
           Polygon[{{88, 96, 95, 94, 93, 92, 91, 90, 
            89}}]}]}, {}, {}}, {{}, {}, 
        Annotation[{
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[1, 60]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]], 
          
          Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
            19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
           35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
            52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 
           68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
            85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99}]}, 
         "Charting`Private`Tag#1"]}}], <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0., 99.}, {0, 4.605170185988092}}, 
        "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0., 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[
            Rational[1, 60]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {{{}, {
            EdgeForm[], 
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             Opacity[0.2]], 
            GraphicsGroup[{{
               Polygon[{{2., 0.}, {4., 0.}, {3., 1.3862943611198906`}}], 
               Polygon[{{4., 0.}, {6., 0.}, {5., 1.791759469228055}}], 
               Polygon[{{16., 0.}, {18., 0.}, {17., 2.8903717578961645`}}], 
               Polygon[{{28., 0.}, {30., 0.}, {29., 3.4011973816621555`}}], 
               Polygon[{{10., 0.}, {12., 0.}, {11., 2.4849066497880004`}}], 
               Polygon[{{70., 0.}, {72., 0.}, {71., 4.276666119016055}}], 
               Polygon[{{40., 0.}, {42., 0.}, {41., 3.7376696182833684`}}], 
               Polygon[{{58., 0.}, {60., 0.}, {59., 4.0943445622221}}]}, {
               
               Polygon[{{12., 0.}, {16., 0.}, {15., 2.772588722239781}, {14., 
                2.70805020110221}, {13., 2.6390573296152584`}}], 
               
               Polygon[{{66., 0.}, {70., 0.}, {69., 4.248495242049359}, {68., 
                4.23410650459726}, {67., 4.219507705176107}}], 
               
               Polygon[{{18., 0.}, {22., 0.}, {21., 3.091042453358316}, {20., 
                3.044522437723423}, {19., 2.995732273553991}}], 
               
               Polygon[{{6., 0.}, {10., 0.}, {9., 2.302585092994046}, {8., 
                2.1972245773362196`}, {7., 2.0794415416798357`}}], 
               
               Polygon[{{96., 0.}, {99., 0.}, {99., 4.605170185988092}, {98., 
                4.59511985013459}, {97., 4.584967478670572}}], 
               
               Polygon[{{36., 0.}, {40., 0.}, {39., 3.6888794541139363`}, {
                38., 3.6635616461296463`}, {37., 3.6375861597263857`}}], 
               
               Polygon[{{42., 0.}, {46., 0.}, {45., 3.828641396489095}, {44., 
                3.8066624897703196`}, {43., 3.784189633918261}}], 
               
               Polygon[{{78., 0.}, {82., 0.}, {81., 4.406719247264253}, {80., 
                4.394449154672439}, {79., 4.382026634673881}}]}, {
               
               Polygon[{{60., 0.}, {66., 0.}, {65., 4.189654742026425}, {64., 
                4.174387269895637}, {63., 4.1588830833596715`}, {62., 
                4.143134726391533}, {61., 4.127134385045092}}], 
               
               Polygon[{{22., 0.}, {28., 0.}, {27., 3.332204510175204}, {26., 
                3.295836866004329}, {25., 3.258096538021482}, {24., 
                3.2188758248682006`}, {23., 3.1780538303479458`}}], 
               
               Polygon[{{46., 0.}, {52., 0.}, {51., 3.9512437185814275`}, {
                50., 3.9318256327243257`}, {49., 3.912023005428146}, {48., 
                3.8918202981106265`}, {47., 3.871201010907891}}], 
               Polygon[{{82., 0.}, {88., 0.}, {87., 4.477336814478207}, {86., 
                4.465908118654584}, {85., 4.454347296253507}, {84., 
                4.442651256490317}, {83., 4.430816798843313}}], 
               
               Polygon[{{72., 0.}, {78., 0.}, {77., 4.356708826689592}, {76., 
                4.343805421853684}, {75., 4.330733340286331}, {74., 
                4.31748811353631}, {73., 4.30406509320417}}], 
               
               Polygon[{{52., 0.}, {58., 0.}, {57., 4.060443010546419}, {56., 
                4.04305126783455}, {55., 4.02535169073515}, {54., 
                4.007333185232471}, {53., 3.9889840465642745`}}], 
               
               Polygon[{{30., 0.}, {36., 0.}, {35., 3.58351893845611}, {34., 
                3.5553480614894135`}, {33., 3.5263605246161616`}, {32., 
                3.4965075614664802`}, {31., 3.4657359027997265`}}]}, {
               
               Polygon[{{88., 0.}, {96., 0.}, {95., 4.564348191467836}, {94., 
                4.553876891600541}, {93., 4.543294782270004}, {92., 
                4.532599493153256}, {91., 4.5217885770490405`}, {90., 
                4.51085950651685}, {89., 
                4.499809670330265}}]}}]}, {}, {}}, {{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[1, 60]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1:eJxdlH1MzHEcx08hnJJw5DwljznRkaRy77vq9HjdY5fEwhpT5umSCftp5mFm
U5rN4zytkLJsKEeSXfMwNuKYMSyzMGOLXKQwn88f9/1tt9vr8/q9Pr/f7fb7
hSxbY87zkclky/9+/n3/P75qZN4HvLEfvkT/7NaFd9B5gYIfCp9xYT/lVV3k
Rwh+FDZUxWguneK94yD3rd788UAv4vFQ2C47a/N9iCcI/SRsPd5yXfHWl+ZT
BB+GSuczxb1RfWiuwtik9GjFeeZwuv++xDOFPgI7S/PnFY/1o7la8LNQ2rqh
WPeD/WzU1qwpD1/UjzgSd1xxRY5rzHOEPgqdqrItlQX9aT4Xs/Z9/qFtZI7G
g5FfP5YHDiCeh/07fOteL2aOQWjKQXf2WeZYYX8cjrjlnRWRcprPF7wG+Xfq
Glrq2QOP6p5+e+4hloAO//rtXZEDyWvhah9kyV5HLGnp/2Wv894v6XBWe9vV
HOxP83i4/Xev7DQQS/HwX6+OaSlhnyD0CZgeF269+Z59ouATEW/tmtNHH0Bz
Pc7cPb1R7iCW9CjQ7b8RcJL9AqFfgEKnMXauh30S7NnqmvXjB1GfhIvKC1cf
pxLLktEjM/XkOtgnI/lczfmJR9mnCPtTMHBIU9HaD+xT0d59bWGJHz0nUiqM
BWH3vwfzc5OGhYerTw5TsU9Dur7Z9S6OfbqwPx171Xkvj+SyNwjegE8vJ++Y
UcI+A8oRrW2lZbw/g54/9kYUTi0/UHaJGEZUhKa8mN3E5xu99zcaEf3QeaL5
DfcmOEeWH6v/wr0JIdoVewq7uTcJvQka+7ccg3Iwzc3eHmaMrupy50SRl8zI
8Tt1WJlI3GhGUFtjU5WZewti1Wm7AnKJYcFUQ+jQxNXcW4TrW5AgbfodsYt7
K71/uLci71iFT/EJ7q1Cb8WTvI7+U+q5t2HAac8SvYt7G/Q3PqzCI+5teKwp
6z38Fd+/DbnrFv+618Z9pvD7MxGoilA+7OE+Ew05E2+NkQdRnwnHysqGDAWx
zI617vampSHEsOPQzcoim4pYsqP1+m9pWhT3dnjO+G17p+U+S7h+FlY5PFd6
2bnPwrTRiuAVS7nPovdzEP4AqJo9xg==
              "]]}, "Charting`Private`Tag#1"]}}, "GCFlag" -> True|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListLinePlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 99.}, {0, 4.605170185988092}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.8994547479849467`*^9, 3.899454760946744*^9}},
 CellLabel->"Out[134]=",
 CellID->405154369,ExpressionUUID->"fa80da1c-1b49-43f0-b904-8d01c79e3abc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "LucasNumberU1"}]], "Input",
 CellChangeTimes->{{3.899755852976594*^9, 3.899755855718154*^9}},
 CellLabel->"In[942]:=",
 CellID->317076608,ExpressionUUID->"2145833e-270d-417d-8a73-dfcd1238268f"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              
              ButtonData->
               "paclet:PeterBurbery/Combinatorics/ref/LucasNumberU1",
              
              ButtonNote->
               "paclet:PeterBurbery/Combinatorics/ref/LucasNumberU1"],
             "\"paclet:PeterBurbery/Combinatorics/ref/LucasNumberU1\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"LucasNumberU1[n, p, q] calculates the term of the \
Lucas sequence of the first kind U_n(p, q).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"LucasNumberU1", "[", 
                    
                    RowBox[{
                    "0", ",", "PeterBurbery`Combinatorics`Private`p_", ",", 
                    "PeterBurbery`Combinatorics`Private`q_"}], "]"}], ":=", 
                    "0"}]}, {" "}, {
                    RowBox[{
                    RowBox[{"LucasNumberU1", "[", 
                    
                    RowBox[{
                    "1", ",", "PeterBurbery`Combinatorics`Private`p_", ",", 
                    "PeterBurbery`Combinatorics`Private`q_"}], "]"}], ":=", 
                    "1"}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"LucasNumberU1", "[", 
                    
                    RowBox[{
                    "PeterBurbery`Combinatorics`Private`n_", ",", 
                    "PeterBurbery`Combinatorics`Private`p_", ",", 
                    "PeterBurbery`Combinatorics`Private`q_"}], "]"}], "/;", 
                    
                    RowBox[{
                    "PeterBurbery`Combinatorics`Private`n", ">", "1"}]}], 
                    ":=", 
                    RowBox[{
                    RowBox[{"LucasNumberU1", "[", 
                    
                    RowBox[{
                    "PeterBurbery`Combinatorics`Private`n", ",", 
                    "PeterBurbery`Combinatorics`Private`p", ",", 
                    "PeterBurbery`Combinatorics`Private`q"}], "]"}], "=", 
                    RowBox[{
                    RowBox[{"PeterBurbery`Combinatorics`Private`p", " ", 
                    RowBox[{"LucasNumberU1", "[", 
                    RowBox[{
                    
                    RowBox[{"PeterBurbery`Combinatorics`Private`n", "-", 
                    "1"}], ",", "PeterBurbery`Combinatorics`Private`p", ",", 
                    "PeterBurbery`Combinatorics`Private`q"}], "]"}]}], "-", 
                    RowBox[{"PeterBurbery`Combinatorics`Private`q", " ", 
                    RowBox[{"LucasNumberU1", "[", 
                    RowBox[{
                    
                    RowBox[{"PeterBurbery`Combinatorics`Private`n", "-", 
                    "2"}], ",", "PeterBurbery`Combinatorics`Private`p", ",", 
                    "PeterBurbery`Combinatorics`Private`q"}], 
                    "]"}]}]}]}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:PeterBurbery/Combinatorics/ref/LucasNumberU1", 
                    "paclet:PeterBurbery/Combinatorics/ref/LucasNumberU1", 
                    "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"Listable", ",", "NumericFunction"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], \
"\<\"PeterBurbery`Combinatorics`LucasNumberU1\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              
              ButtonData->
               "paclet:PeterBurbery/Combinatorics/ref/LucasNumberU1",
              
              ButtonNote->
               "paclet:PeterBurbery/Combinatorics/ref/LucasNumberU1"],
             "\"paclet:PeterBurbery/Combinatorics/ref/LucasNumberU1\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"LucasNumberU1[n, p, q] calculates the term of the \
Lucas sequence of the first kind U_n(p, q).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "LucasNumberU1[n, p, q] calculates the term of the Lucas sequence of the \
first kind U_n(p, q).", 
    "Documentation" -> <|
     "Local" -> "paclet:PeterBurbery/Combinatorics/ref/LucasNumberU1"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, PeterBurbery`Combinatorics`LucasNumberU1, {
      PeterBurbery`Combinatorics`LucasNumberU1[0, 
         Pattern[PeterBurbery`Combinatorics`Private`p, 
          Blank[]], 
         Pattern[PeterBurbery`Combinatorics`Private`q, 
          Blank[]]] :> 0, PeterBurbery`Combinatorics`LucasNumberU1[1, 
         Pattern[PeterBurbery`Combinatorics`Private`p, 
          Blank[]], 
         Pattern[PeterBurbery`Combinatorics`Private`q, 
          Blank[]]] :> 1, Condition[
         PeterBurbery`Combinatorics`LucasNumberU1[
          Pattern[PeterBurbery`Combinatorics`Private`n, 
           Blank[]], 
          Pattern[PeterBurbery`Combinatorics`Private`p, 
           Blank[]], 
          Pattern[PeterBurbery`Combinatorics`Private`q, 
           Blank[]]], PeterBurbery`Combinatorics`Private`n > 1] :> (
        PeterBurbery`Combinatorics`LucasNumberU1[
         PeterBurbery`Combinatorics`Private`n, 
          PeterBurbery`Combinatorics`Private`p, 
          PeterBurbery`Combinatorics`Private`q] = 
        PeterBurbery`Combinatorics`Private`p 
          PeterBurbery`Combinatorics`LucasNumberU1[
           PeterBurbery`Combinatorics`Private`n - 1, 
            PeterBurbery`Combinatorics`Private`p, 
            PeterBurbery`Combinatorics`Private`q] - 
         PeterBurbery`Combinatorics`Private`q 
         PeterBurbery`Combinatorics`LucasNumberU1[
          PeterBurbery`Combinatorics`Private`n - 2, 
           PeterBurbery`Combinatorics`Private`p, 
           PeterBurbery`Combinatorics`Private`q])}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Listable, NumericFunction}, 
    "FullName" -> "PeterBurbery`Combinatorics`LucasNumberU1"|>, 
   False]]], "Output",
 CellChangeTimes->{3.8997558561149435`*^9},
 CellLabel->"Out[942]=",
 CellID->38873197,ExpressionUUID->"c37bf87a-01a3-4546-a389-5f8ae6b80033"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["U", "n"], 
   RowBox[{"(", 
    RowBox[{"2", ",", 
     RowBox[{"-", "1"}]}], ")"}]}]], "InlineFormula",ExpressionUUID->
  "6f9b7c69-5579-44b0-83e6-ff329cde63ac"],
 " represents the Pell numbers:"
}], "MathCaption",
 CellChangeTimes->{{3.8983670800389123`*^9, 3.8983670947313766`*^9}},
 CellID->199205649,ExpressionUUID->"9f339b50-5073-46ab-b559-6afbfc68508c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EchoTiming", "[", 
  RowBox[{"LucasNumberU1", "[", 
   RowBox[{
    RowBox[{"Range", "[", "21", "]"}], ",", "2", ",", 
    RowBox[{"-", "1"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8983672432194366`*^9, 3.8983672460506954`*^9}, 
   3.8983673772102027`*^9},
 CellLabel->"In[332]:=",
 CellID->444434879,ExpressionUUID->"38468ac1-a3c6-435d-8492-6dbcba6d534b"],

Cell[BoxData["0.0000281`"], "EchoTiming",
 CellChangeTimes->{3.8983673895559545`*^9},
 CellID->24383746,ExpressionUUID->"518b49fb-79a4-422e-b727-5d95afdd5fc1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "5", ",", "12", ",", "29", ",", "70", ",", "169", ",", 
   "408", ",", "985", ",", "2378", ",", "5741", ",", "13860", ",", "33461", 
   ",", "80782", ",", "195025", ",", "470832", ",", "1136689", ",", "2744210",
    ",", "6625109", ",", "15994428", ",", "38613965"}], "}"}]], "Output",
 CellChangeTimes->{3.8983671006181746`*^9, 3.8983672470662675`*^9, 
  3.8983673903880253`*^9},
 CellLabel->"Out[332]=",
 CellID->280470809,ExpressionUUID->"7c84ceb6-4536-4e6e-bc1c-df00b7167423"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["You can also do the Pell numbers with LinearRecurrence:", "MathCaption",
 CellChangeTimes->{{3.898969895073705*^9, 3.898969932391634*^9}, 
   3.899755842603794*^9},
 CellID->48779360,ExpressionUUID->"c5b0573b-d75e-4cac-833a-0813e8bbc5bd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearRecurrence", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", "21"}], "]"}]], "Input",
 CellChangeTimes->{{3.898969874381728*^9, 3.898969874567844*^9}},
 CellLabel->"In[104]:=",
 CellID->59766089,ExpressionUUID->"46b6b145-6b17-48ad-8dfa-5a7beaa89a94"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "2", ",", "5", ",", "12", ",", "29", ",", "70", ",", 
   "169", ",", "408", ",", "985", ",", "2378", ",", "5741", ",", "13860", ",",
    "33461", ",", "80782", ",", "195025", ",", "470832", ",", "1136689", ",", 
   "2744210", ",", "6625109", ",", "15994428"}], "}"}]], "Output",
 CellChangeTimes->{3.898969875425189*^9},
 CellLabel->"Out[104]=",
 CellID->6049817,ExpressionUUID->"a4668739-8315-40bc-a691-1b7eb76e9e8c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find a linear recurrence:", "MathCaption",
 CellChangeTimes->{{3.8989700205156*^9, 3.898970024371616*^9}},
 CellID->234878772,ExpressionUUID->"dd62178d-8c1c-4ba1-aca1-740c63f138b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindLinearRecurrence", "[", 
  RowBox[{"EchoTiming", "[", 
   RowBox[{"LucasNumberU1", "[", 
    RowBox[{
     RowBox[{"Range", "[", "21", "]"}], ",", "2", ",", 
     RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8989699774957495`*^9, 3.8989700130435724`*^9}},
 CellLabel->"In[107]:=",
 CellID->148202768,ExpressionUUID->"2079eaf2-d394-48cd-83a5-5d4d53a10096"],

Cell[BoxData["0.0001767`"], "EchoTiming",
 CellChangeTimes->{3.898970015456313*^9},
 CellID->510846472,ExpressionUUID->"3d17b65d-ba4a-4e2d-bffd-d26b33670772"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.8989700167549405`*^9},
 CellLabel->"Out[107]=",
 CellID->23869527,ExpressionUUID->"943f211b-bacd-44a6-8e54-217377f4b7fa"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generate a linear recurrence:", "MathCaption",
 CellChangeTimes->{{3.898970028733661*^9, 3.8989700339301763`*^9}},
 CellID->10558311,ExpressionUUID->"af58ae10-9fd4-4365-b0f2-7866760e00ab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearRecurrence", "[", 
  RowBox[{
   RowBox[{"FindLinearRecurrence", "[", 
    RowBox[{"EchoTiming", "[", 
     RowBox[{"LucasNumberU1", "[", 
      RowBox[{
       RowBox[{"Range", "[", "21", "]"}], ",", "2", ",", 
       RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"LucasNumberU1", "[", 
      RowBox[{
       RowBox[{"Range", "[", "2", "]"}], ",", "2", ",", 
       RowBox[{"-", "1"}]}], "]"}], ",", "2"}], "]"}], ",", "10"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8989699774957495`*^9, 3.8989700723910227`*^9}},
 CellLabel->"In[108]:=",
 CellID->58237670,ExpressionUUID->"ee973644-c5f8-4937-8527-17a00cc833d9"],

Cell[BoxData["0.0000285`"], "EchoTiming",
 CellChangeTimes->{3.8989700727470245`*^9},
 CellID->74044636,ExpressionUUID->"9f8dfc6d-d741-4c75-b946-7ae824d87aad"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "5", ",", "12", ",", "29", ",", "70", ",", "169", ",", 
   "408", ",", "985", ",", "2378"}], "}"}]], "Output",
 CellChangeTimes->{3.8989700740910244`*^9},
 CellLabel->"Out[108]=",
 CellID->51587048,ExpressionUUID->"2922147b-7600-46da-b2d9-b4fde2a85e24"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["We can also find a Fibonacci function:", "MathCaption",
 CellChangeTimes->{{3.89897022986347*^9, 3.8989702359980965`*^9}},
 CellID->74692364,ExpressionUUID->"57e21972-6e19-4fef-b01e-fdce50c226f8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindSequenceFunction", "[", 
  RowBox[{"LucasNumberU1", "[", 
   RowBox[{
    RowBox[{"Range", "[", "21", "]"}], ",", "2", ",", 
    RowBox[{"-", "1"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8989701511268773`*^9, 3.8989701743986173`*^9}},
 CellLabel->"In[109]:=",
 CellID->436274302,ExpressionUUID->"9211cf51-4147-46b6-aed7-1f17900d35d2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Fibonacci", "[", 
   RowBox[{"#1", ",", "2"}], "]"}], "&"}]], "Output",
 CellChangeTimes->{3.8989701754857283`*^9},
 CellLabel->"Out[109]=",
 CellID->581705438,ExpressionUUID->"fab75de9-b937-447b-805b-dc5a6b556450"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "af82e7a9-a3d8-4a96-b67a-798107f6215b"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->376301338,ExpressionUUID->"59e2a5ae-fce3-4dd7-b8c6-45272d4df550"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["U", "n"], 
   RowBox[{"(", 
    RowBox[{"1", ",", 
     RowBox[{"-", "2"}]}], ")"}]}]], "InlineFormula",ExpressionUUID->
  "868e6daf-152b-45e2-ae89-a3e326efe572"],
 " represents the Jacobsthal numbers:"
}], "MathCaption",
 CellChangeTimes->{{3.8983671110132236`*^9, 3.898367124461734*^9}},
 CellID->228255672,ExpressionUUID->"7e6b4922-3269-49ee-976d-91c2f31eeac8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EchoTiming", "[", 
  RowBox[{"LucasNumberU1", "[", 
   RowBox[{
    RowBox[{"Range", "[", "21", "]"}], ",", "1", ",", 
    RowBox[{"-", "2"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8983671300857515`*^9, 3.898367132068262*^9}, 
   3.8983673772202024`*^9},
 CellLabel->"In[333]:=",
 CellID->72949216,ExpressionUUID->"3e60e04b-d5e7-4afc-81c5-3c23a3d969a3"],

Cell[BoxData["0.0000269`"], "EchoTiming",
 CellChangeTimes->{3.898367393013151*^9},
 CellID->196950653,ExpressionUUID->"efe29f3c-9060-4c81-903a-465db95e4031"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "3", ",", "5", ",", "11", ",", "21", ",", "43", ",", 
   "85", ",", "171", ",", "341", ",", "683", ",", "1365", ",", "2731", ",", 
   "5461", ",", "10923", ",", "21845", ",", "43691", ",", "87381", ",", 
   "174763", ",", "349525", ",", "699051"}], "}"}]], "Output",
 CellChangeTimes->{3.8983671330884094`*^9, 3.898367393858669*^9},
 CellLabel->"Out[333]=",
 CellID->157710615,ExpressionUUID->"1d0c998b-4a0d-4ad7-8e2a-90d14435d9c3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["We can find a pattern:", "MathCaption",
 CellChangeTimes->{{3.8989702556265726`*^9, 3.898970260919688*^9}},
 CellID->63779103,ExpressionUUID->"1e4b92f7-e518-4c7a-bbb9-af945ea9513e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindSequenceFunction", "[", 
  RowBox[{"LucasNumberU1", "[", 
   RowBox[{
    RowBox[{"Range", "[", "21", "]"}], ",", "1", ",", 
    RowBox[{"-", "2"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8989701511268773`*^9, 3.898970189719262*^9}},
 CellLabel->"In[111]:=",
 CellID->559477600,ExpressionUUID->"24bb35b4-afa1-4f7a-9260-d471bb36ee13"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "3"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "#1"]}], "+", 
     SuperscriptBox["2", "#1"]}], ")"}]}], "&"}]], "Output",
 CellChangeTimes->{3.8989701907678776`*^9, 3.8989702637720766`*^9},
 CellLabel->"Out[111]=",
 CellID->854014107,ExpressionUUID->"0a8e641f-0530-4c91-817d-323af6a72a95"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generate a new array:", "MathCaption",
 CellChangeTimes->{{3.898970289670638*^9, 3.898970298856121*^9}},
 CellID->297234162,ExpressionUUID->"dc41bc03-1bd8-49a6-8ed4-83d4ed3271d0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Array", "[", 
  RowBox[{
   RowBox[{"FindSequenceFunction", "[", 
    RowBox[{"LucasNumberU1", "[", 
     RowBox[{
      RowBox[{"Range", "[", "21", "]"}], ",", "1", ",", 
      RowBox[{"-", "2"}]}], "]"}], "]"}], ",", "21"}], "]"}]], "Input",
 CellChangeTimes->{{3.8989702780491457`*^9, 3.898970284887712*^9}},
 CellLabel->"In[112]:=",
 CellID->384199976,ExpressionUUID->"2e0a4f58-ddfe-45ed-ae5b-5472d94c4f0a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "3", ",", "5", ",", "11", ",", "21", ",", "43", ",", 
   "85", ",", "171", ",", "341", ",", "683", ",", "1365", ",", "2731", ",", 
   "5461", ",", "10923", ",", "21845", ",", "43691", ",", "87381", ",", 
   "174763", ",", "349525", ",", "699051"}], "}"}]], "Output",
 CellChangeTimes->{3.8989702858027115`*^9},
 CellLabel->"Out[112]=",
 CellID->60351254,ExpressionUUID->"35f46a67-f7d6-408d-ba5c-b2d5fc60d1d1"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "ebdb3caf-bb2e-4c61-92b9-3270e157d14c"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->64234199,ExpressionUUID->"6756b5f4-9657-4abf-9450-75f41a9b31c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["U", "n"], 
   RowBox[{"(", 
    RowBox[{"3", ",", "2"}], ")"}]}]], "InlineFormula",ExpressionUUID->
  "754fb512-4dba-4201-b0dc-0d48a48f5e43"],
 " represents the Mersenne numbers:"
}], "MathCaption",
 CellChangeTimes->{{3.898367254104355*^9, 3.8983672665886517`*^9}},
 CellID->71222372,ExpressionUUID->"e1005b44-bded-426d-b06c-955f31c1b9ca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EchoTiming", "[", 
  RowBox[{"LucasNumberU1", "[", 
   RowBox[{
    RowBox[{"Range", "[", "21", "]"}], ",", "3", ",", "2"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.89836727403951*^9, 3.898367275955843*^9}, 
   3.8983673772252007`*^9},
 CellLabel->"In[334]:=",
 CellID->612463501,ExpressionUUID->"3d5ac883-7de1-4322-b013-6d0302ae5697"],

Cell[BoxData["0.0000259`"], "EchoTiming",
 CellChangeTimes->{3.898367396431939*^9},
 CellID->339196886,ExpressionUUID->"6c8ae07b-ea38-46d2-918c-6d744ea62f5b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "3", ",", "7", ",", "15", ",", "31", ",", "63", ",", "127", ",", 
   "255", ",", "511", ",", "1023", ",", "2047", ",", "4095", ",", "8191", ",",
    "16383", ",", "32767", ",", "65535", ",", "131071", ",", "262143", ",", 
   "524287", ",", "1048575", ",", "2097151"}], "}"}]], "Output",
 CellChangeTimes->{3.8983672770729*^9, 3.8983673972694945`*^9},
 CellLabel->"Out[334]=",
 CellID->244982401,ExpressionUUID->"58b0c377-8151-4d4b-99f7-35587cce3e3a"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "a3b27b86-0f25-46b8-b398-2245a28aab87"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->795616469,ExpressionUUID->"2570f326-9c45-4e15-8cf7-1f6510d72ec0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["U", "n"], 
   RowBox[{"(", 
    RowBox[{"6", ",", "1"}], ")"}]}]], "InlineFormula",ExpressionUUID->
  "85729f71-3192-4bbe-bbeb-3d53745e71f2"],
 " represents the square roots of the square triangular numbers:"
}], "MathCaption",
 CellChangeTimes->{{3.898367299427387*^9, 3.8983673148057985`*^9}},
 CellID->29412029,ExpressionUUID->"38fd6c99-0323-48d5-8c8a-ee87bc0b0f8e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EchoTiming", "[", 
  RowBox[{"LucasNumberU1", "[", 
   RowBox[{
    RowBox[{"Range", "[", "21", "]"}], ",", "6", ",", "1"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8983673233671265`*^9, 3.898367324400962*^9}, 
   3.8983673772322025`*^9},
 CellLabel->"In[335]:=",
 CellID->13291710,ExpressionUUID->"1388e7bc-4f63-4e15-844d-ed41ed1f9c1f"],

Cell[BoxData["0.0000271`"], "EchoTiming",
 CellChangeTimes->{3.898367399885043*^9},
 CellID->61324748,ExpressionUUID->"6c6180b0-5e78-474c-a16f-fd85e6470520"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "6", ",", "35", ",", "204", ",", "1189", ",", "6930", ",", 
   "40391", ",", "235416", ",", "1372105", ",", "7997214", ",", "46611179", 
   ",", "271669860", ",", "1583407981", ",", "9228778026", ",", "53789260175",
    ",", "313506783024", ",", "1827251437969", ",", "10650001844790", ",", 
   "62072759630771", ",", "361786555939836", ",", "2108646576008245"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.898367325627042*^9, 3.8983674007140956`*^9},
 CellLabel->"Out[335]=",
 CellID->60671734,ExpressionUUID->"b4142020-309e-4611-b400-ff0a860c47a4"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "19413891-d3ca-4337-9dd7-654b8bd02b82"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->179371755,ExpressionUUID->"a9f4da8b-9717-4440-97a3-a81a826cf0b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["U", "n"], 
   RowBox[{"(", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}]}], ")"}]}]], "InlineFormula",ExpressionUUID->
  "4ac13cac-63c6-4051-9d07-eacba9dd9560"],
 " represents the Fibonacci polynomials:"
}], "MathCaption",
 CellChangeTimes->{{3.89836740837278*^9, 3.898367423134612*^9}},
 CellID->68513831,ExpressionUUID->"25526e0b-41f0-4cd4-989a-d8d5c8e51715"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"LucasNumberU1", "[", 
   RowBox[{
    RowBox[{"Range", "[", "7", "]"}], ",", "x", ",", 
    RowBox[{"-", "1"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.898367424608721*^9, 3.8983674415427437`*^9}},
 CellLabel->"In[337]:=",
 CellID->691053818,ExpressionUUID->"ff80815c-36a8-4530-8230-5c00f280538b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "x", ",", 
   RowBox[{"1", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{
    RowBox[{"2", " ", "x"}], "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"1", "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    SuperscriptBox["x", "4"]}], ",", 
   RowBox[{
    RowBox[{"3", " ", "x"}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["x", "3"]}], "+", 
    SuperscriptBox["x", "5"]}], ",", 
   RowBox[{"1", "+", 
    RowBox[{"6", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["x", "4"]}], "+", 
    SuperscriptBox["x", "6"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.898367432493326*^9, 3.898367442001221*^9}},
 CellLabel->"Out[337]=",
 CellID->116155483,ExpressionUUID->"f0631126-44c7-401b-9618-3b06bd748545"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Verify the statement up to 7:", "MathCaption",
 CellChangeTimes->{{3.898367463130916*^9, 3.898367469978275*^9}},
 CellID->295365794,ExpressionUUID->"f8c0947b-4543-44e6-a7b6-b8997177e4a7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SameQ", "[", 
  RowBox[{
   RowBox[{"Expand", "[", 
    RowBox[{"LucasNumberU1", "[", 
     RowBox[{
      RowBox[{"Range", "[", "7", "]"}], ",", "x", ",", 
      RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
   RowBox[{"Fibonacci", "[", 
    RowBox[{
     RowBox[{"Range", "[", "7", "]"}], ",", "x"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.898367449151556*^9, 3.8983674593141036`*^9}},
 CellLabel->"In[338]:=",
 CellID->549686470,ExpressionUUID->"85cb8bb3-a6cd-4c32-96d2-de7e5e27511d"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.898367459634065*^9},
 CellLabel->"Out[338]=",
 CellID->471038115,ExpressionUUID->"a90adbf7-efd0-411c-894b-a20ce11596c8"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "e651a264-b428-4fb1-988d-a062a2a417c3"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->439332369,ExpressionUUID->"c2fce5b9-644d-46b4-8060-9f61b38cc84d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["U", "n"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", "x"}], ",", "1"}], ")"}]}]], "InlineFormula",ExpressionUUID->
  "c1987dd4-67ab-4b71-845a-9abe41782b8b"],
 " represents Chebyshev polynomials of the second kind:"
}], "MathCaption",
 CellChangeTimes->{{3.898367480189353*^9, 3.8983675009637966`*^9}},
 CellID->142865217,ExpressionUUID->"c31c990b-0888-4526-b3a1-34c1f0418da9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"LucasNumberU1", "[", 
   RowBox[{
    RowBox[{"Range", "[", "7", "]"}], ",", 
    RowBox[{"2", "x"}], ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8983675040851383`*^9, 3.898367517301791*^9}},
 CellLabel->"In[339]:=",
 CellID->819507155,ExpressionUUID->"09dae856-fd1b-4cf1-ae42-6ea2c672de93"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"2", " ", "x"}], ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["x", "2"]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "4"}], " ", "x"}], "+", 
    RowBox[{"8", " ", 
     SuperscriptBox["x", "3"]}]}], ",", 
   RowBox[{"1", "-", 
    RowBox[{"12", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"16", " ", 
     SuperscriptBox["x", "4"]}]}], ",", 
   RowBox[{
    RowBox[{"6", " ", "x"}], "-", 
    RowBox[{"32", " ", 
     SuperscriptBox["x", "3"]}], "+", 
    RowBox[{"32", " ", 
     SuperscriptBox["x", "5"]}]}], ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"24", " ", 
     SuperscriptBox["x", "2"]}], "-", 
    RowBox[{"80", " ", 
     SuperscriptBox["x", "4"]}], "+", 
    RowBox[{"64", " ", 
     SuperscriptBox["x", "6"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.898367518416844*^9},
 CellLabel->"Out[339]=",
 CellID->451625855,ExpressionUUID->"4b1bf549-7600-4542-94bb-12c0ffdf9a8d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Verify this statement:", "MathCaption",
 CellChangeTimes->{{3.8983675214470387`*^9, 3.898367525470948*^9}},
 CellID->38534065,ExpressionUUID->"feaee20e-bee1-46f5-8faf-4ea37940d83a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SameQ", "[", 
  RowBox[{
   RowBox[{"Expand", "[", 
    RowBox[{"LucasNumberU1", "[", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{
        RowBox[{"1", "+", "1"}], ",", 
        RowBox[{"7", "+", "1"}]}], "]"}], ",", 
      RowBox[{"2", "x"}], ",", "1"}], "]"}], "]"}], ",", 
   RowBox[{"ChebyshevU", "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"1", "+", "0"}], ",", 
       RowBox[{"7", "+", "0"}]}], "]"}], ",", "x"}], "]"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.898367527086715*^9, 3.898367606828323*^9}},
 CellLabel->"In[341]:=",
 CellID->391099469,ExpressionUUID->"28b056e8-f157-4c59-9aaa-664b1d2bc637"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8983676073878665`*^9},
 CellLabel->"Out[341]=",
 CellID->22022784,ExpressionUUID->"c48deaaf-96ea-4676-aee0-3bd9787e56ce"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "d917d1a0-a28c-421c-a889-16b4f147f283"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->86887181,ExpressionUUID->"17971e2f-7b7f-48ef-a4f3-d49652c07cc7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["U", "n"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"x", "+", "1"}], ",", "x"}], ")"}]}]], "InlineFormula",
  ExpressionUUID->"65152c4a-2c89-4df7-afbd-1379009a0acf"],
 " represents repunits in base x:"
}], "MathCaption",
 CellChangeTimes->{{3.8983676211160293`*^9, 3.8983676338884525`*^9}},
 CellID->119722245,ExpressionUUID->"5eee0843-df34-4f8c-a3a2-e7168839c76d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"LucasNumberU1", "[", 
   RowBox[{
    RowBox[{"1", "+", 
     RowBox[{"Range", "[", "7", "]"}]}], ",", 
    RowBox[{"x", "+", "1"}], ",", "x"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.89836763581566*^9, 3.8983676864726696`*^9}},
 CellLabel->"In[347]:=",
 CellID->681843340,ExpressionUUID->"01505b88-07d1-431a-a852-1294a171456c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "+", "x"}], ",", 
   RowBox[{"1", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"1", "+", "x", "+", 
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"1", "+", "x", "+", 
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["x", "3"], "+", 
    SuperscriptBox["x", "4"]}], ",", 
   RowBox[{"1", "+", "x", "+", 
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["x", "3"], "+", 
    SuperscriptBox["x", "4"], "+", 
    SuperscriptBox["x", "5"]}], ",", 
   RowBox[{"1", "+", "x", "+", 
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["x", "3"], "+", 
    SuperscriptBox["x", "4"], "+", 
    SuperscriptBox["x", "5"], "+", 
    SuperscriptBox["x", "6"]}], ",", 
   RowBox[{"1", "+", "x", "+", 
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["x", "3"], "+", 
    SuperscriptBox["x", "4"], "+", 
    SuperscriptBox["x", "5"], "+", 
    SuperscriptBox["x", "6"], "+", 
    SuperscriptBox["x", "7"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.898367646861583*^9, 3.898367686943242*^9}},
 CellLabel->"Out[347]=",
 CellID->567660469,ExpressionUUID->"6eb35a37-fba9-43d0-90f5-a710145fbdf9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The first 21 Lucas numbers:", "MathCaption",
 CellChangeTimes->{{3.8983679050281706`*^9, 3.8983679108337193`*^9}},
 CellID->69391295,ExpressionUUID->"8c1b2aff-269f-4c6b-af50-4a86de808117"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LucasNumberV2", "[", 
  RowBox[{
   RowBox[{"Range", "[", "21", "]"}], ",", "1", ",", 
   RowBox[{"-", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8983679132862287`*^9, 3.8983679216508017`*^9}},
 CellLabel->"In[381]:=",
 CellID->139948453,ExpressionUUID->"9c0d56ee-42a7-4f16-b8a3-b2279a311707"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "3", ",", "4", ",", "7", ",", "11", ",", "18", ",", "29", ",", 
   "47", ",", "76", ",", "123", ",", "199", ",", "322", ",", "521", ",", 
   "843", ",", "1364", ",", "2207", ",", "3571", ",", "5778", ",", "9349", 
   ",", "15127", ",", "24476"}], "}"}]], "Output",
 CellChangeTimes->{3.898367922385843*^9, 3.898368150548594*^9},
 CellLabel->"Out[381]=",
 CellID->46523418,ExpressionUUID->"9654a30c-14f9-4c13-ab1d-2a847e830e06"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compare the function to LucasL:", "MathCaption",
 CellChangeTimes->{{3.8983681706800504`*^9, 3.8983681751458673`*^9}},
 CellID->173598441,ExpressionUUID->"367843e9-a815-41e6-b3cc-4777dd3252b9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"LucasL", "[", 
   RowBox[{"Range", "[", "21", "]"}], "]"}], "===", 
  RowBox[{"LucasNumberV2", "[", 
   RowBox[{
    RowBox[{"Range", "[", "21", "]"}], ",", "1", ",", 
    RowBox[{"-", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8983681634404774`*^9, 3.8983681670258126`*^9}},
 CellLabel->"In[382]:=",
 CellID->298773496,ExpressionUUID->"66eb091e-693d-4f63-9d90-f31cbddc3525"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.898368167735422*^9},
 CellLabel->"Out[382]=",
 CellID->135097200,ExpressionUUID->"9d57d837-12d4-49d6-8062-69e239b60866"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["V", "n"], 
   RowBox[{"(", 
    RowBox[{"2", ",", 
     RowBox[{"-", "1"}]}], ")"}]}]], "InlineFormula",ExpressionUUID->
  "a7739914-33cd-45f9-90e5-09dcfc116dee"],
 " gives the Pell-Lucas numbers (companion Pell numbers):"
}], "MathCaption",
 CellChangeTimes->{{3.898368189629094*^9, 3.8983682085144124`*^9}},
 CellID->6568824,ExpressionUUID->"70ee95cb-344b-4b70-9b67-cdd0249948f4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LucasNumberV2", "[", 
  RowBox[{
   RowBox[{"Range", "[", "21", "]"}], ",", "2", ",", 
   RowBox[{"-", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.898368211028144*^9, 3.8983682182333207`*^9}},
 CellLabel->"In[383]:=",
 CellID->354624742,ExpressionUUID->"df58bb67-34d7-4b0a-ae20-3d3034890527"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "6", ",", "14", ",", "34", ",", "82", ",", "198", ",", "478", ",",
    "1154", ",", "2786", ",", "6726", ",", "16238", ",", "39202", ",", 
   "94642", ",", "228486", ",", "551614", ",", "1331714", ",", "3215042", ",",
    "7761798", ",", "18738638", ",", "45239074", ",", "109216786"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8983682186423745`*^9},
 CellLabel->"Out[383]=",
 CellID->229632868,ExpressionUUID->"c01b9325-6497-40d3-988f-a42401cdad92"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "e4260891-ada5-4ba1-b48b-819f17fdfcc7"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->225973015,ExpressionUUID->"6f45ae32-8d1d-4b6f-91d2-30ad57ac8372"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["V", "n"], 
   RowBox[{"(", 
    RowBox[{"1", ",", 
     RowBox[{"-", "2"}]}], ")"}]}]], "InlineFormula",ExpressionUUID->
  "f129809c-21ff-453d-b497-ddac54d3148e"],
 " gives the Jacobsthal-Lucas numbers:"
}], "MathCaption",
 CellChangeTimes->{{3.8983682494105635`*^9, 3.898368277246179*^9}},
 CellID->597709743,ExpressionUUID->"299d3497-c448-425f-ae4d-27ef21071ec5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LucasNumberV2", "[", 
  RowBox[{
   RowBox[{"Range", "[", "21", "]"}], ",", "1", ",", 
   RowBox[{"-", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.898368281755721*^9, 3.898368288887227*^9}},
 CellLabel->"In[384]:=",
 CellID->559137007,ExpressionUUID->"1da378d8-f1a4-495c-909f-94f97c138c73"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "5", ",", "7", ",", "17", ",", "31", ",", "65", ",", "127", ",", 
   "257", ",", "511", ",", "1025", ",", "2047", ",", "4097", ",", "8191", ",",
    "16385", ",", "32767", ",", "65537", ",", "131071", ",", "262145", ",", 
   "524287", ",", "1048577", ",", "2097151"}], "}"}]], "Output",
 CellChangeTimes->{3.898368289297815*^9},
 CellLabel->"Out[384]=",
 CellID->350769182,ExpressionUUID->"625a3339-8cc6-4a3d-ab76-ccc991fe8e37"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "d83bb69d-adee-452f-a926-7e89aaecd763"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->87474974,ExpressionUUID->"9977a560-b8fc-4002-8f54-361c61b49e18"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["V", "n"], 
   RowBox[{"(", 
    RowBox[{"3", ",", "2"}], ")"}]}]], "InlineFormula",ExpressionUUID->
  "2a049677-28ef-4b37-9795-894c5b232616"],
 " gives number of the form ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["2", "n"], "+", "1"}]], "InlineFormula",ExpressionUUID->
  "f725e993-92b2-410b-8152-d02431b5ba7b"],
 ", which includes the Fermat numbers:"
}], "MathCaption",
 CellChangeTimes->{{3.8983683017946467`*^9, 3.89836831069621*^9}, {
  3.8983683541783943`*^9, 3.898368381642344*^9}},
 CellID->655288947,ExpressionUUID->"bae659a8-c5b3-46d9-9e0d-0e2aed973301"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LucasNumberV2", "[", 
  RowBox[{
   RowBox[{"Range", "[", "21", "]"}], ",", "3", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.8983683894832077`*^9, 3.8983684033641777`*^9}},
 CellLabel->"In[386]:=",
 CellID->68325774,ExpressionUUID->"5758b2bb-27f8-486d-b229-db56cae2b888"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "5", ",", "9", ",", "17", ",", "33", ",", "65", ",", "129", ",", 
   "257", ",", "513", ",", "1025", ",", "2049", ",", "4097", ",", "8193", ",",
    "16385", ",", "32769", ",", "65537", ",", "131073", ",", "262145", ",", 
   "524289", ",", "1048577", ",", "2097153"}], "}"}]], "Output",
 CellChangeTimes->{{3.8983684003807473`*^9, 3.89836840389223*^9}},
 CellLabel->"Out[386]=",
 CellID->411603969,ExpressionUUID->"c7ee4db5-c947-4c08-910f-4fa78dbea082"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "a16ac052-3157-4e29-abfc-65de75d0e82a"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->380977308,ExpressionUUID->"d4c7db51-4321-45ef-8eb1-cb4d274232bf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["V", "n"], 
   RowBox[{"(", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}]}], ")"}]}]], "InlineFormula",ExpressionUUID->
  "72f7490b-2b52-4f52-a62a-76f07b2de12b"],
 " gives the Lucas polynomials:"
}], "MathCaption",
 CellChangeTimes->{{3.8983684207308607`*^9, 3.8983684375899196`*^9}},
 CellID->206574541,ExpressionUUID->"7c75aea6-20cf-4d96-981d-e82876598f0a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"LucasNumberV2", "[", 
   RowBox[{
    RowBox[{"Range", "[", "7", "]"}], ",", "x", ",", 
    RowBox[{"-", "1"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.898368438526023*^9, 3.898368460620308*^9}},
 CellLabel->"In[389]:=",
 CellID->571446576,ExpressionUUID->"bd59701c-0077-4452-8170-8fd2982646f2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"2", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{
    RowBox[{"3", " ", "x"}], "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"2", "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    SuperscriptBox["x", "4"]}], ",", 
   RowBox[{
    RowBox[{"5", " ", "x"}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["x", "3"]}], "+", 
    SuperscriptBox["x", "5"]}], ",", 
   RowBox[{"2", "+", 
    RowBox[{"9", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"6", " ", 
     SuperscriptBox["x", "4"]}], "+", 
    SuperscriptBox["x", "6"]}], ",", 
   RowBox[{
    RowBox[{"7", " ", "x"}], "+", 
    RowBox[{"14", " ", 
     SuperscriptBox["x", "3"]}], "+", 
    RowBox[{"7", " ", 
     SuperscriptBox["x", "5"]}], "+", 
    SuperscriptBox["x", "7"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.898368447562336*^9, 3.8983684609903994`*^9}},
 CellLabel->"Out[389]=",
 CellID->579836633,ExpressionUUID->"1afb934d-ebb3-4d12-a4a2-69b6889633bf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Let's compare this to LucasL:", "MathCaption",
 CellChangeTimes->{{3.898368464481782*^9, 3.898368469001687*^9}},
 CellID->849664802,ExpressionUUID->"397e0390-68a0-4509-bdf0-2ff48b03c862"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Expand", "[", 
   RowBox[{"LucasNumberV2", "[", 
    RowBox[{
     RowBox[{"Range", "[", "7", "]"}], ",", "x", ",", 
     RowBox[{"-", "1"}]}], "]"}], "]"}], "===", 
  RowBox[{"LucasL", "[", 
   RowBox[{
    RowBox[{"Range", "[", "7", "]"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8983684696822634`*^9, 3.898368523034341*^9}},
 CellLabel->"In[395]:=",
 CellID->5746910,ExpressionUUID->"15328761-e03b-470b-bea3-0c18054f2c6c"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.8983684770956235`*^9, 3.8983685235714645`*^9}},
 CellLabel->"Out[395]=",
 CellID->145466617,ExpressionUUID->"836000f5-01df-4a70-9154-8ebd114f9b61"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "55ee2677-c6c9-447f-9162-d3b38bfab8f4"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->64856443,ExpressionUUID->"c9244920-c2ae-4d3e-9fe6-2c3a07e364f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["V", "n"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", "x"}], ",", "1"}], ")"}]}]], "InlineFormula",ExpressionUUID->
  "e5846db9-980d-4988-8c9c-acd9ea04c5f8"],
 " gives Chebyshev polynomials of first kind multiplied by 2:"
}], "MathCaption",
 CellChangeTimes->{{3.8983689099969034`*^9, 3.8983689380434713`*^9}},
 CellID->200874845,ExpressionUUID->"5c8bcf58-2f7c-4ff7-876f-945b58039bfb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"LucasNumberV2", "[", 
   RowBox[{
    RowBox[{"Range", "[", "7", "]"}], ",", 
    RowBox[{"2", "x"}], ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8983689469733086`*^9, 3.8983689494139085`*^9}},
 CellLabel->"In[396]:=",
 CellID->2790924,ExpressionUUID->"275b987d-3cbe-4efc-82e8-a02b9fcc1db4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"2", " ", "x"}], ",", 
   RowBox[{
    RowBox[{"-", "2"}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["x", "2"]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "6"}], " ", "x"}], "+", 
    RowBox[{"8", " ", 
     SuperscriptBox["x", "3"]}]}], ",", 
   RowBox[{"2", "-", 
    RowBox[{"16", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"16", " ", 
     SuperscriptBox["x", "4"]}]}], ",", 
   RowBox[{
    RowBox[{"10", " ", "x"}], "-", 
    RowBox[{"40", " ", 
     SuperscriptBox["x", "3"]}], "+", 
    RowBox[{"32", " ", 
     SuperscriptBox["x", "5"]}]}], ",", 
   RowBox[{
    RowBox[{"-", "2"}], "+", 
    RowBox[{"36", " ", 
     SuperscriptBox["x", "2"]}], "-", 
    RowBox[{"96", " ", 
     SuperscriptBox["x", "4"]}], "+", 
    RowBox[{"64", " ", 
     SuperscriptBox["x", "6"]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "14"}], " ", "x"}], "+", 
    RowBox[{"112", " ", 
     SuperscriptBox["x", "3"]}], "-", 
    RowBox[{"224", " ", 
     SuperscriptBox["x", "5"]}], "+", 
    RowBox[{"128", " ", 
     SuperscriptBox["x", "7"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.898368949830493*^9},
 CellLabel->"Out[396]=",
 CellID->749587632,ExpressionUUID->"830d6089-c213-4047-992b-df152cbbd119"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test this statement:", "MathCaption",
 CellChangeTimes->{{3.898368975414742*^9, 3.8983689784089446`*^9}},
 CellID->193111019,ExpressionUUID->"e549e506-e7f2-4eb4-86d6-2568a21f3989"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Expand", "[", 
   RowBox[{"LucasNumberV2", "[", 
    RowBox[{
     RowBox[{"Range", "[", "7", "]"}], ",", 
     RowBox[{"2", "x"}], ",", "1"}], "]"}], "]"}], "===", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Expand", "[", 
      RowBox[{"2", "*", "#"}], "]"}], "&"}], "/@", 
    RowBox[{"ChebyshevT", "[", 
     RowBox[{
      RowBox[{"Range", "[", "7", "]"}], ",", "x"}], "]"}]}], ")"}]}]], "Input",\

 CellLabel->"In[397]:=",
 CellID->257744413,ExpressionUUID->"7ce600dc-91c5-42de-a6a3-096ad6e31d19"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.89836897922904*^9},
 CellLabel->"Out[397]=",
 CellID->599489833,ExpressionUUID->"767a9306-e04c-4ea4-8b02-9cc2fc52e8c1"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "05704c1a-3a47-462b-ac5f-b77c53269c3a"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->506165783,ExpressionUUID->"4110419f-5dc7-4931-9994-9cea2c6b3d09"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["V", "n"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"x", "+", "1"}], ",", "x"}], ")"}]}]], "InlineFormula",
  ExpressionUUID->"c59e9a0a-0d20-4e7b-baa6-4554904182c6"],
 " gives ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["x", "n"], "+", "1"}]], "InlineFormula",ExpressionUUID->
  "c570a535-bc6e-4218-ade9-e5e3a42be333"],
 ":"
}], "MathCaption",
 CellChangeTimes->{{3.8983690030490446`*^9, 3.898369040981527*^9}},
 CellID->230848754,ExpressionUUID->"d1728467-aa1e-456d-9d64-9d4cc336b306"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"LucasNumberV2", "[", 
   RowBox[{
    RowBox[{"Range", "[", "7", "]"}], ",", 
    RowBox[{"x", "+", "1"}], ",", "x"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8983690257258263`*^9, 3.898369030824967*^9}},
 CellLabel->"In[398]:=",
 CellID->4310976,ExpressionUUID->"192b318c-c5a0-4ece-955f-ad4ba72fe887"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "+", "x"}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox["x", "4"]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox["x", "5"]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox["x", "6"]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox["x", "7"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8983690313075037`*^9},
 CellLabel->"Out[398]=",
 CellID->362774086,ExpressionUUID->"0c7a55ab-d034-4ac4-8574-2ba240958473"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test this statement:", "MathCaption",
 CellChangeTimes->{{3.8983690442199492`*^9, 3.8983690472092447`*^9}},
 CellID->373578484,ExpressionUUID->"539abed6-0d82-4db2-948c-47cae4db9d5b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Expand", "[", 
   RowBox[{"LucasNumberV2", "[", 
    RowBox[{
     RowBox[{"Range", "[", "7", "]"}], ",", 
     RowBox[{"x", "+", "1"}], ",", "x"}], "]"}], "]"}], "===", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "n"], "+", "1"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "7"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8983690652477217`*^9, 3.8983690738062525`*^9}},
 CellLabel->"In[399]:=",
 CellID->194038522,ExpressionUUID->"df0e3b0f-5023-4ea7-afe1-47fcf51b32b4"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.898369074213255*^9},
 CellLabel->"Out[399]=",
 CellID->154595223,ExpressionUUID->"36f2a83e-6c64-4299-b5a5-5f0fd4cdc4f1"]
}, Open  ]]
}, Open  ]],

Cell["Evaluate the q-exponential.", "MathCaption",
 CellChangeTimes->{{3.8997559401804323`*^9, 3.899755943654093*^9}},
 CellID->554419,ExpressionUUID->"d7a05787-6f02-414a-9742-fadf8cb21e37"],

Cell[CellGroupData[{

Cell["Evaluate numerically:", "MathCaption",
 CellID->55753721,ExpressionUUID->"a1ede218-d1e2-4fab-822f-a4689f9da609"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QExponential", "[", 
  RowBox[{"3.4", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.8994754294912233`*^9, 3.8994754349701405`*^9}},
 CellLabel->"In[943]:=",
 CellID->14566,ExpressionUUID->"97527786-74ce-483b-aeae-79c170696a86"],

Cell[BoxData["29.96410004739701`"], "Output",
 CellChangeTimes->{3.8994754354061427`*^9, 3.899755950235406*^9},
 CellLabel->"Out[943]=",
 CellID->18188826,ExpressionUUID->"0478556b-8d2d-4dbd-9907-c54164d93ab5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Change q from 1 to 2.", "MathCaption",
 CellChangeTimes->{{3.89975608886849*^9, 3.899756093187092*^9}},
 CellID->563784370,ExpressionUUID->"1ffe97a1-014f-4393-a691-ef4e85d80ecd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QExponential", "[", 
  RowBox[{
   FractionBox["17", "5"], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.899756062971301*^9, 3.8997560668604345`*^9}},
 CellLabel->"In[952]:=",
 CellID->20592017,ExpressionUUID->"c226d48b-1655-40ac-895b-d55a7ff2c4e6"],

Cell[BoxData["10.59829409278693878204709467134680730861`15.954589770191003"], \
"Output",
 CellChangeTimes->{{3.899756053851441*^9, 3.8997560682078032`*^9}},
 CellLabel->"Out[952]=",
 CellID->151593018,ExpressionUUID->"95450a68-7a0a-433d-af3e-6288400520b2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ask for 40 digits of precision.", "MathCaption",
 CellChangeTimes->{{3.899756081794526*^9, 3.8997560865734963`*^9}},
 CellID->237785666,ExpressionUUID->"2926dc8e-c7b0-406f-b2ef-9b3a046ae978"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QExponential", "[", 
  RowBox[{
   FractionBox["17", "5"], ",", "2", ",", "40"}], "]"}]], "Input",
 CellChangeTimes->{{3.899756062971301*^9, 3.899756073262741*^9}},
 CellLabel->"In[953]:=",
 CellID->298472260,ExpressionUUID->"2530bc27-8969-4b41-afef-b483a4e70a43"],

Cell[BoxData["10.5982940927869387820470946713468073086211252051161675464583`\
40."], "Output",
 CellChangeTimes->{3.899756073595477*^9},
 CellLabel->"Out[953]=",
 CellID->74152669,ExpressionUUID->"cd9e5393-820c-4613-8e21-bfcec2453b1d"]
}, Open  ]]
}, Open  ]],

Cell["Evaluate the q-multinomial.", "MathCaption",
 CellChangeTimes->{{3.899756129229161*^9, 3.8997561330991883`*^9}},
 CellID->496593996,ExpressionUUID->"a16aed2f-37fa-4248-ba25-3c8378564892"],

Cell[CellGroupData[{

Cell["Evaluate numerically:", "MathCaption",
 CellID->489039817,ExpressionUUID->"25bca102-3ddb-4059-98e3-35c7aae25c7c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QMultinomial", "[", 
  RowBox[{"1", ",", "2", ",", "1", ",", "E"}], "]"}]], "Input",
 CellChangeTimes->{{3.8989739325177946`*^9, 3.89897393565014*^9}},
 CellLabel->"In[954]:=",
 CellID->88658836,ExpressionUUID->"d3fcb365-ab54-4fbc-ac80-d853920a31e6"],

Cell[BoxData[
 FractionBox[
  RowBox[{"QGamma", "[", 
   RowBox[{"5", ",", "\[ExponentialE]"}], "]"}], 
  RowBox[{"1", "+", "\[ExponentialE]"}]]], "Output",
 CellChangeTimes->{3.8989739360235424`*^9, 3.899756135009884*^9},
 CellLabel->"Out[954]=",
 CellID->66741005,ExpressionUUID->"8a1968aa-ddb9-4eab-82a9-4b0f6bf50f91"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"QMultinomial", "[", 
   RowBox[{"1", ",", "2", ",", "1", ",", "E"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.898973961576065*^9, 3.8989739620080643`*^9}},
 CellLabel->"In[955]:=",
 CellID->471752441,ExpressionUUID->"2b68496a-c06d-45c2-9723-4c9454ca991d"],

Cell[BoxData["346.469801892138`"], "Output",
 CellChangeTimes->{3.898973962364065*^9, 3.8997561370157037`*^9},
 CellLabel->"Out[955]=",
 CellID->374027243,ExpressionUUID->"2bb09ddc-01cd-4317-91ba-1578df6a351a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"QMultinomial", "[", 
    RowBox[{"1", ",", "2", ",", "1", ",", "E"}], "]"}], ",", "40"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.898973961576065*^9, 3.8989739620080643`*^9}, {
  3.8997561401337495`*^9, 3.899756141730242*^9}},
 CellLabel->"In[956]:=",
 CellID->796052010,ExpressionUUID->"793f838d-bed0-425b-a5d7-d426729ca4e0"],

Cell[BoxData["346.4698018921381259525335487344495385550883060897418205888714`\
40."], "Output",
 CellChangeTimes->{3.899756142065931*^9},
 CellLabel->"Out[956]=",
 CellID->199263104,ExpressionUUID->"1c051f22-4445-47b6-9c34-29f9148dc836"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Find the period of the decimal representation of a rational number.\
\>", "MathCaption",
 CellChangeTimes->{{3.8997561625994687`*^9, 3.899756172431783*^9}},
 CellID->143975390,ExpressionUUID->"32dfee19-2e50-4c9c-8391-d3d95a061bdd"],

Cell[CellGroupData[{

Cell[TextData[{
 "Find the period of the repetend of the repeating decimal corresponding to  ",
 Cell[BoxData[
  FractionBox["1", "983"]], "InlineFormula",ExpressionUUID->
  "3b9f4620-69cd-45f8-a3e8-f9ffe89d9032"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.8994815922892585`*^9, 3.8994816167768946`*^9}},
 CellID->27787895,ExpressionUUID->"a789702a-61b4-4bb8-81e3-852e2f8f97d6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", 
  FractionBox["1", "983"], "]"}]], "Input",
 CellChangeTimes->{{3.899481620222888*^9, 3.899481624264899*^9}},
 CellLabel->"In[957]:=",
 CellID->236189147,ExpressionUUID->"cb755224-414c-425a-9f6c-247ecbfedcd5"],

Cell[BoxData["982"], "Output",
 CellChangeTimes->{3.8994816247038984`*^9, 3.899756185325593*^9},
 CellLabel->"Out[957]=",
 CellID->557292175,ExpressionUUID->"1c882708-b36b-4dba-a0a8-1ab20f0fbad9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3/2 has a period of 0.", "MathCaption",
 CellChangeTimes->{{3.899481640751215*^9, 3.8994816498846316`*^9}},
 CellID->35640176,ExpressionUUID->"fc810b30-7b27-4ff3-956c-a06f30673832"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  FractionBox["3", "2"], "]"}]], "Input",
 CellChangeTimes->{{3.8994816505907173`*^9, 3.8994816522726297`*^9}},
 CellLabel->"In[958]:=",
 CellID->761312723,ExpressionUUID->"6a6e4854-8819-4f33-aa0c-e02cc6e28a36"],

Cell[BoxData["1.5`"], "Output",
 CellChangeTimes->{3.8994816527176285`*^9, 3.899756187295591*^9},
 CellLabel->"Out[958]=",
 CellID->290448543,ExpressionUUID->"6fe740a5-ee25-4fdc-9f9b-2741f130453f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", 
  FractionBox["3", "2"], "]"}]], "Input",
 CellChangeTimes->{{3.8994816560287375`*^9, 3.8994816593812532`*^9}},
 CellLabel->"In[959]:=",
 CellID->60940240,ExpressionUUID->"9c003edc-bebd-4a8b-9035-fb3cd9bf1f76"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.899481659814252*^9, 3.899756189227592*^9},
 CellLabel->"Out[959]=",
 CellID->200714134,ExpressionUUID->"907cd726-df94-4c9f-b6b3-fdf2794e4df8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
A unit fraction contains 1 in the numerator. The decimal representation of \
the unit fractions with denominators 2 to 10 are given.\
\>", "MathCaption",
 CellChangeTimes->{{3.899481966032922*^9, 3.8994819849094625`*^9}},
 CellID->459322947,ExpressionUUID->"85ef1705-8de8-4b82-b654-9de6e4db892f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<fraction\>\"", "->", 
        FractionBox["1", "#"]}], ",", 
       RowBox[{"\"\<decimal\>\"", "->", 
        RowBox[{"N", "[", 
         FractionBox["1", "#"], "]"}]}]}], "|>"}], "&"}], "]"}], "[", 
   RowBox[{"Range", "[", 
    RowBox[{"2", ",", "10", ",", "1"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.899482148578165*^9, 3.8994821519134526`*^9}, 
   3.899482218335225*^9, {3.8994823564925113`*^9, 3.8994823679110875`*^9}},
 CellLabel->"In[38]:=",
 CellID->132252402,ExpressionUUID->"560f8828-0669-49b0-9558-6741a4dd6088"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      2 -> <|"fraction" -> Rational[1, 2], "decimal" -> 0.5|>, 
       3 -> <|"fraction" -> Rational[1, 3], "decimal" -> 0.3333333333333333|>,
        4 -> <|"fraction" -> Rational[1, 4], "decimal" -> 0.25|>, 
       5 -> <|"fraction" -> Rational[1, 5], "decimal" -> 0.2|>, 
       6 -> <|"fraction" -> Rational[1, 6], "decimal" -> 
         0.16666666666666666`|>, 
       7 -> <|"fraction" -> Rational[1, 7], "decimal" -> 
         0.14285714285714285`|>, 
       8 -> <|"fraction" -> Rational[1, 8], "decimal" -> 0.125|>, 
       9 -> <|"fraction" -> Rational[1, 9], "decimal" -> 0.1111111111111111|>,
        10 -> <|"fraction" -> Rational[1, 10], "decimal" -> 0.1|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[10]} -> 1, {All, "fraction"} -> 
        1, {All, "decimal"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "fraction" -> TypeSystem`PackageScope`AtomShape[60], "decimal" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 2, {All}]]], 9, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"fraction", "decimal"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 9], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[10]} -> 1, {All, "fraction"} -> 
        1, {All, "decimal"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "fraction" -> TypeSystem`PackageScope`AtomShape[60], "decimal" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 2, {All}]]], 9, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"fraction", "decimal"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 9], "Path" -> {}, "DisplayedRowCount" -> 9, 
     "DisplayedColumnCount" -> 2, "DataRowCount" -> 9, "DataColumnCount" -> 2,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["fraction", 
                  Style[
                  "fraction", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "fraction"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "fraction"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["decimal", 
                  Style[
                  "decimal", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "decimal"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "decimal"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1/2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["fraction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["decimal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1/3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["fraction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.333333"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["decimal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1/4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["fraction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["decimal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1/5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["fraction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["decimal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1/6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["fraction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.166667"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["decimal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1/7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["fraction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.142857"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["decimal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1/8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["fraction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.125"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["decimal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1/9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["fraction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.111111"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["decimal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1/10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["fraction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["decimal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{179., {140.8544921875, 146.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{179., {140.8544921875, 146.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.899482152345455*^9, {3.899482361305744*^9, 3.899482368658664*^9}},
 CellLabel->"Out[38]=",
 CellID->504232840,ExpressionUUID->"7ab5285a-9352-459c-be9d-f43ec23141bb"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "We can indicate the part that is repeating with a vinculum like this. ",
 Cell[BoxData[
  RowBox[{"0.", 
   OverscriptBox["142857", "_"]}]], "InlineFormula",ExpressionUUID->
  "3d9d209b-d098-4c44-9b79-c44be2444cc8"]
}], "MathCaption",
 CellChangeTimes->{{3.8994820129069304`*^9, 3.8994820237666235`*^9}, {
  3.899482390764577*^9, 3.899482404808361*^9}},
 CellID->142153006,ExpressionUUID->"4822f68f-bdbd-49ca-aeb1-0f284bddc6f5"],

Cell[TextData[{
 "Where ",
 Cell[BoxData[
  RowBox[{"0.1", 
   OverscriptBox["6", "_"]}]], "InlineFormula",ExpressionUUID->
  "d4974b7c-ca15-4776-9bbc-c5b5b86991ba"],
 " means ",
 Cell[BoxData[
  RowBox[{"0.1666666666666666666666666666666666666666", "\[Ellipsis]"}]], 
  "InlineFormula",ExpressionUUID->"1e3ae17d-c295-4787-a67a-d95835091a8f"],
 ", and has a 1 digit recurring cycle. It can be seen that ",
 Cell[BoxData[
  FractionBox["1", "7"]], "InlineFormula",ExpressionUUID->
  "e05cf72a-21a4-4ce6-bccb-8ee9f9461c73"],
 " has a 6-digit recurring cycle."
}], "MathCaption",
 CellChangeTimes->{{3.8994824079942455`*^9, 3.8994824751148434`*^9}},
 CellID->468172920,ExpressionUUID->"91d5e03c-dd1e-4838-8496-588fede3251c"],

Cell[CellGroupData[{

Cell[TextData[{
 "Find the value of ",
 Cell[BoxData[
  RowBox[{"d", "<", "1000"}]], "InlineFormula",ExpressionUUID->
  "6733914c-a056-4d11-a829-38db384ae6e8"],
 " for which ",
 Cell[BoxData[
  FractionBox["1", "d"]], "InlineFormula",ExpressionUUID->
  "dc18c714-cbea-4bb2-a23a-68cb50124a26"],
 " contains the largest recurring cycle in its decimal fraction part."
}], "MathCaption",
 CellChangeTimes->{{3.8994824773098264`*^9, 3.8994825026581497`*^9}},
 CellID->75005970,ExpressionUUID->"d5849d2a-302d-4f44-8d88-0a8920d1b70d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EchoTiming", "[", 
  RowBox[{
   RowBox[{"MaximalBy", "[", 
    RowBox[{
     RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", 
      FractionBox["1", "#"], "]"}], "&"}], "]"}], "[", 
   RowBox[{"Cases", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"#", "<", "1000"}], "&"}], "]"}], "[", 
      RowBox[{"Range", "[", "1000", "]"}], "]"}], ",", 
     RowBox[{"Except", "[", "1", "]"}]}], 
    RowBox[{"(*", 
     RowBox[{"because", " ", 
      RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", "1", "]"}], " ", 
      "just", " ", "returns", " ", 
      RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", "1", "]"}]}], 
     "*)"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8994825080449457`*^9, 3.899482622527788*^9}},
 CellLabel->"In[45]:=",
 CellID->696606258,ExpressionUUID->"eb3efec0-0d60-4152-a744-c70f2a5b7f57"],

Cell[BoxData["0.0232995`"], "EchoTiming",
 CellChangeTimes->{3.899482622874789*^9},
 CellID->114796685,ExpressionUUID->"1c686108-4c1d-4d25-8ae9-0e950cf0c285"],

Cell[BoxData[
 RowBox[{"{", "983", "}"}]], "Output",
 CellChangeTimes->{
  3.8994825676752696`*^9, {3.8994826144469543`*^9, 3.899482623915003*^9}},
 CellLabel->"Out[45]=",
 CellID->36436604,ExpressionUUID->"3c616d5a-762f-44c0-96ad-d23a12d5654a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["We can use Identity@@ to get just the number.", "MathCaption",
 CellChangeTimes->{{3.899482637059132*^9, 3.899482644152088*^9}},
 CellID->595536278,ExpressionUUID->"dfa7b79c-212e-4724-b232-3bc53429e538"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EchoTiming", "[", 
  RowBox[{"Identity", "@@", 
   RowBox[{
    RowBox[{"MaximalBy", "[", 
     RowBox[{
      RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", 
       FractionBox["1", "#"], "]"}], "&"}], "]"}], "[", 
    RowBox[{"Cases", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"#", "<", "1000"}], "&"}], "]"}], "[", 
       RowBox[{"Range", "[", "1000", "]"}], "]"}], ",", 
      RowBox[{"Except", "[", "1", "]"}]}], 
     RowBox[{"(*", 
      RowBox[{"because", " ", 
       RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", "1", "]"}], " ", 
       "just", " ", "returns", " ", 
       RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", "1", "]"}]}], 
      "*)"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8994825080449457`*^9, 3.8994826498582063`*^9}},
 CellLabel->"In[46]:=",
 CellID->135456001,ExpressionUUID->"ca927cb3-4b81-4200-9c31-5f4c1aa1ae0b"],

Cell[BoxData["0.023724`"], "EchoTiming",
 CellChangeTimes->{3.899482650165243*^9},
 CellID->47425443,ExpressionUUID->"36a881af-1c68-4087-a8eb-7e68bd359ffb"],

Cell[BoxData["983"], "Output",
 CellChangeTimes->{3.899482651158207*^9},
 CellLabel->"Out[46]=",
 CellID->3416495,ExpressionUUID->"e2f36e7c-e60b-481e-89ec-49ac22d66ff5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["We can use EchoPerformance to see how much memory we used.", \
"MathCaption",
 CellChangeTimes->{{3.8994826561954193`*^9, 3.8994826657559032`*^9}},
 CellID->197268136,ExpressionUUID->"796a24a3-e417-4b3c-98fe-717748591c11"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<EchoPerformance\>\"", "]"}], "[", 
  RowBox[{"Identity", "@@", 
   RowBox[{
    RowBox[{"MaximalBy", "[", 
     RowBox[{
      RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", 
       FractionBox["1", "#"], "]"}], "&"}], "]"}], "[", 
    RowBox[{"Cases", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"#", "<", "1000"}], "&"}], "]"}], "[", 
       RowBox[{"Range", "[", "1000", "]"}], "]"}], ",", 
      RowBox[{"Except", "[", "1", "]"}]}], 
     RowBox[{"(*", 
      RowBox[{"because", " ", 
       RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", "1", "]"}], " ", 
       "just", " ", "returns", " ", 
       RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", "1", "]"}]}], 
      "*)"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8994825080449457`*^9, 3.899482672855094*^9}},
 CellLabel->"In[47]:=",
 CellID->325931600,ExpressionUUID->"5a891e7c-bfe1-472b-9ae0-0c9444018952"],

Cell[BoxData[
 RowBox[{
  TagBox["Apply",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    StyleBox[
     TemplateBox[{"0.0227526`", "\" s\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]], ",", 
    StyleBox[
     TemplateBox[{"91480", "\" B\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]]}], "}"}]}]], "Echo",
 CellChangeTimes->{3.899482676711325*^9},
 CellID->211601392,ExpressionUUID->"510df0bd-da77-4d67-a26a-89809ac41837"],

Cell[BoxData["983"], "Output",
 CellChangeTimes->{3.8994826778391857`*^9},
 CellLabel->"Out[47]=",
 CellID->24671701,ExpressionUUID->"0fa85a32-acfd-4570-9d34-176580a3411b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "This is how I solved ",
 ButtonBox["Project Euler Problem 26 Reciprocal Cycles",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://projecteuler.net/problem=26"], None},
  ButtonNote->"https://projecteuler.net/problem=26"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.89948269322202*^9, 3.8994827104953413`*^9}},
 CellID->109955765,ExpressionUUID->"190cab5f-dcb7-4b0d-978d-730b429f839c"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "0fd81a65-891e-49c3-9a02-8c52b44a1ece"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->65014155,ExpressionUUID->"3db4bb68-5941-4591-9955-77182d8b09f2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Make a sequence of the running maximum in terms of the number with the \
maximum repeating decimal period for ",
 Cell[BoxData[
  FractionBox["1", "n"]], "InlineFormula",ExpressionUUID->
  "892153dc-7f10-429f-8f10-820bbcb21a8c"],
 " for the first 54 numbers."
}], "MathCaption",
 CellChangeTimes->{{3.8994829167186475`*^9, 3.899482936376564*^9}, {
  3.899483125559619*^9, 3.8994831303443513`*^9}},
 CellID->213110306,ExpressionUUID->"e4d643d2-0839-4e74-9736-06d85f247202"],

Cell[BoxData[
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", 
    RowBox[{"Array", "[", 
     RowBox[{
      RowBox[{
       FractionBox["1", "#"], "&"}], ",", "54", ",", "2"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.899482946860044*^9, 3.8994829477066803`*^9}, {
  3.89948304194496*^9, 3.8994830468160048`*^9}, {3.899483153572274*^9, 
  3.899483153834276*^9}},
 CellLabel->"In[36]:=",
 CellID->149658206,ExpressionUUID->"46cb4607-e799-4b0d-a013-56acf5b4beec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"runningMaximum", "=", 
  RowBox[{"Rest", "@", 
   RowBox[{"FoldList", "[", 
    RowBox[{"Max", ",", 
     RowBox[{"First", "[", "list", "]"}], ",", 
     RowBox[{"Rest", "[", "list", "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8994829421938543`*^9, 3.8994829421958556`*^9}, {
   3.89948305490635*^9, 3.899483083211236*^9}, 3.8994831567808514`*^9},
 CellLabel->"In[37]:=",
 CellID->174838792,ExpressionUUID->"ca32e6e0-fb11-4b2c-b513-e05eeae7d908"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "1", ",", "1", ",", "6", ",", "6", ",", "6", ",", "6", 
   ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "16", ",",
    "16", ",", "18", ",", "18", ",", "18", ",", "18", ",", "22", ",", "22", 
   ",", "22", ",", "22", ",", "22", ",", "22", ",", "28", ",", "28", ",", 
   "28", ",", "28", ",", "28", ",", "28", ",", "28", ",", "28", ",", "28", 
   ",", "28", ",", "28", ",", "28", ",", "28", ",", "28", ",", "28", ",", 
   "28", ",", "28", ",", "28", ",", "46", ",", "46", ",", "46", ",", "46", 
   ",", "46", ",", "46", ",", "46", ",", "46", ",", "46"}], "}"}]], "Output",
 CellChangeTimes->{3.8994831572698526`*^9, 3.899537654290551*^9},
 CellLabel->"Out[37]=",
 CellID->6197371,ExpressionUUID->"7cd37ba9-ed24-4047-aaf7-ee0fe9fb65db"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Rest", "@", 
    RowBox[{"FoldList", "[", 
     RowBox[{"Max", ",", 
      RowBox[{"First", "[", "list", "]"}], ",", 
      RowBox[{"Rest", "[", "list", "]"}]}], "]"}]}], ",", 
   RowBox[{"ImageSize", "->", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.899483061624015*^9, 3.8994831154987216`*^9}},
 CellLabel->"In[71]:=",
 CellID->758948014,ExpressionUUID->"95e69e44-66e7-4bf7-bc38-6900064555e3"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[2], 
         LineBox[CompressedData["
1:eJx1yTkKAlEQRdGHkaGBgYGBioiINE7trN3OQ+gSBGO30Et2CSqWyL9YHz6X
U696vV9uOUnx67/7eY8krNLQebgAF80lp2W4AtfgOtyAm3ALbsORteO0a+05
7cMDOLYOnY7gMTyBp/DMOne6gJdwAqehM1gr7LDW2GFtsMPaYoe1ww5rj/3r
w/9mvB+xwzphh3XG/vMTDq07nw==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
          Annotation[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              Rational[1, 60]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1:eJx1yTkKAlEQRdGHkaGBgYGBioiINE7trN3OQ+gSBGO30Et2CSqWyL9YHz6X
U696vV9uOUnx67/7eY8krNLQebgAF80lp2W4AtfgOtyAm3ALbsORteO0a+05
7cMDOLYOnY7gMTyBp/DMOne6gJdwAqehM1gr7LDW2GFtsMPaYoe1ww5rj/3r
w/9mvB+xwzphh3XG/vMTDq07nw==
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0., 53.}, {0, 46.}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0., 0}, "ImageSize" -> {680, 680/GoldenRatio}, 
           "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              PointSize[
               Rational[1, 60]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0., 53.}, {0, 46.}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0., 0}, "ImageSize" -> {680, 680/GoldenRatio}, 
          "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             PointSize[
              Rational[1, 60]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListLinePlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 60]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJx1yTkKAlEQRdGHkaGBgYGBioiINE7trN3OQ+gSBGO30Et2CSqWyL9YHz6X
U696vV9uOUnx67/7eY8krNLQebgAF80lp2W4AtfgOtyAm3ALbsORteO0a+05
7cMDOLYOnY7gMTyBp/DMOne6gJdwAqehM1gr7LDW2GFtsMPaYoe1ww5rj/3r
w/9mvB+xwzphh3XG/vMTDq07nw==
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0., 53.}, {0, 46.}}, 
        "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0., 0}, 
        "ImageSize" -> {680, 680/GoldenRatio}, "Axes" -> {True, True}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[
            Rational[1, 60]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListLinePlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Full,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 53.}, {0, 46.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8994830654607472`*^9, 3.899483115934721*^9}, 
   3.899483161479889*^9},
 CellLabel->"Out[71]=",
 CellID->52008308,ExpressionUUID->"86c4c849-7778-4e86-ab94-fbae93ada2eb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Make a list for the first 1000 numbers.", "MathCaption",
 CellChangeTimes->{{3.8994831338479533`*^9, 3.8994831390597577`*^9}},
 CellID->123945420,ExpressionUUID->"fe1eb189-4714-4b05-88df-137b19a3af94"],

Cell[BoxData[
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", 
    RowBox[{"Array", "[", 
     RowBox[{
      RowBox[{
       FractionBox["1", "#"], "&"}], ",", "1000", ",", "2"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.899482946860044*^9, 3.8994829477066803`*^9}, {
  3.89948304194496*^9, 3.8994830468160048`*^9}},
 CellLabel->"In[60]:=",
 CellID->121949185,ExpressionUUID->"28876f7c-fb90-41f5-92c7-842a30f670fd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"runningMaximum", "=", 
   RowBox[{"Rest", "@", 
    RowBox[{"FoldList", "[", 
     RowBox[{"Max", ",", 
      RowBox[{"First", "[", "list", "]"}], ",", 
      RowBox[{"Rest", "[", "list", "]"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8994829421938543`*^9, 3.8994829421958556`*^9}, {
  3.89948305490635*^9, 3.899483083211236*^9}},
 CellLabel->"In[65]:=",
 CellID->112015657,ExpressionUUID->"dcde7698-ae49-41ff-aee1-d31846a2a7af"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Rest", "@", 
    RowBox[{"FoldList", "[", 
     RowBox[{"Max", ",", 
      RowBox[{"First", "[", "list", "]"}], ",", 
      RowBox[{"Rest", "[", "list", "]"}]}], "]"}]}], ",", 
   RowBox[{"ImageSize", "->", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.899483061624015*^9, 3.8994831154987216`*^9}},
 CellLabel->"In[68]:=",
 CellID->397875431,ExpressionUUID->"16e6ca4f-f99e-4b14-8566-c369a53b95e3"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[2], 
         LineBox[CompressedData["
1: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
Xw==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
          Annotation[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1: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
Xw==
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0., 999.}, {0, 982.}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0., 0}, "ImageSize" -> {680, 680/GoldenRatio}, 
           "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              PointSize[
               Rational[1, 90]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0., 999.}, {0, 982.}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0., 0}, "ImageSize" -> {680, 680/GoldenRatio}, 
          "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListLinePlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 90]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
Xw==
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0., 999.}, {0, 982.}}, 
        "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0., 0}, 
        "ImageSize" -> {680, 680/GoldenRatio}, "Axes" -> {True, True}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[
            Rational[1, 90]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListLinePlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Full,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 999.}, {0, 982.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8994830654607472`*^9, 3.899483115934721*^9}},
 CellLabel->"Out[68]=",
 CellID->797935073,ExpressionUUID->"98dc5fd5-e3f6-42a2-9b84-6948620a4cd2"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Guides", "TutorialMoreAboutSection",
 CellChangeTimes->{{3.843042384656711*^9, 3.843042386024461*^9}},
 CellID->300332198,ExpressionUUID->"5f56aaf9-78db-4341-b909-8fecaee71b09"],

Cell[TextData[ButtonBox["Combinatorics",
 BaseStyle->"Link",
 ButtonData->
  "paclet:PeterBurbery/Combinatorics/guide/Combinatorics"]], \
"TutorialMoreAbout",
 CellChangeTimes->{{3.8997566937143073`*^9, 3.8997567173828583`*^9}},
 CellID->353617896,ExpressionUUID->"e9ca2037-ef5e-4655-9f9b-1a8ce38d4e44"],

Cell[TextData[ButtonBox["Functions I Understand in combinatorics",
 BaseStyle->"Link",
 ButtonData->
  "paclet:PeterBurbery/Combinatorics/guide/\
FunctionsIunderstandincombinatorics"]], "TutorialMoreAbout",
 CellChangeTimes->{{3.8997566937143073`*^9, 3.8997567890753345`*^9}, {
  3.899756865577198*^9, 3.8997568655792065`*^9}},
 CellID->822407248,ExpressionUUID->"30690779-ef18-4c4d-b9a2-4c115a23cab0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Tech Notes", "RelatedTutorialsSection",
 CellID->95960386,ExpressionUUID->"bb87d0f4-b7f3-472f-a5c1-133a17fc68da"],

Cell["XXXX", "RelatedTutorials",
 CellID->657441003,ExpressionUUID->"657bd0c0-a625-4084-a383-120fb375b3bb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Metadata", "MetadataSection",
 CellID->127671852,ExpressionUUID->"0eb62a5b-9663-49cf-b5e1-c26f21dde72f"],

Cell[TextData[{
 "New in: ",
 Cell["XX", "HistoryData",
  CellTags->"New",ExpressionUUID->"bab7ee90-0360-4842-a860-b7112857e620"],
 " | Modified in: ",
 Cell[" ", "HistoryData",
  CellTags->"Modified",ExpressionUUID->"4dc802a9-2f2a-44b2-841d-4ae17100b163"],
 " | Obsolete in: ",
 Cell[" ", "HistoryData",
  CellTags->"Obsolete",ExpressionUUID->"41852e3c-75aa-4481-b207-65535788d0ff"]
}], "History",
 CellID->120211482,ExpressionUUID->"5ecc98b4-4355-484b-89ee-c4dbfd47e69c"],

Cell[CellGroupData[{

Cell["Categorization", "CategorizationSection",
 CellID->412176238,ExpressionUUID->"e03e3233-73a0-43a4-92b6-b51e1bcdbccf"],

Cell["Tech Note", "Categorization",
 CellLabel->"Entity Type",
 CellID->244398777,ExpressionUUID->"94355122-d079-42ab-9312-727675d3c5af"],

Cell["PeterBurbery/Combinatorics", "Categorization",
 CellLabel->"Paclet Name",
 CellID->35632880,ExpressionUUID->"cf5119e0-ad0e-44e6-b3a0-73c68197d608"],

Cell["PeterBurbery`Combinatorics`", "Categorization",
 CellLabel->"Context",
 CellID->26538629,ExpressionUUID->"66a7dd64-42ba-441c-a876-a158a9e65fa4"],

Cell["PeterBurbery/Combinatorics/tutorial/Combinatorics", "Categorization",
 CellLabel->"URI",
 CellID->149680849,ExpressionUUID->"3fa411c9-52ba-4960-82cb-8c882396450d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Keywords", "KeywordsSection",
 CellID->13307797,ExpressionUUID->"d98ba340-4912-4f71-98e9-f6300faf4014"],

Cell["XXXX", "Keywords",
 CellID->559025098,ExpressionUUID->"090c59c6-c29f-4931-9cfd-7d217ea96b73"]
}, Closed]]
}, Open  ]]
},
WindowSize->{574.8, 579.6},
WindowMargins->{{Automatic, -4.7999999999999545`}, {Automatic, 0}},
TaggingRules-><|"Paclet" -> "PeterBurbery/Combinatorics"|>,
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (June 3, 2023)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "TechNotePageStylesExt.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"38d9f4d4-8ca4-40c0-aa21-aeeec07b578b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 104, 1, 114, "Title",ExpressionUUID->"29863ea0-08dc-46b8-b497-cb6f5f528f0c",
 CellID->28422271],
Cell[687, 25, 274, 5, 25, "Text",ExpressionUUID->"c9cda3f0-8f4e-4867-9c22-5cb081f88c20",
 CellID->106321115],
Cell[CellGroupData[{
Cell[986, 34, 415, 9, 44, "Text",ExpressionUUID->"2768152e-beee-4843-9be6-e009958bdc11",
 CellID->345096676],
Cell[1404, 45, 288, 5, 41, "Input",ExpressionUUID->"e2eeb9fd-67f8-4057-a237-75c17f9df3c9",
 InitializationCell->True,
 CellID->13366579]
}, Closed]],
Cell[CellGroupData[{
Cell[1729, 55, 167, 2, 45, "Section",ExpressionUUID->"94baa558-d014-4759-9107-28d629b3dc9c",
 CellID->12394907],
Cell[1899, 59, 2616, 67, 143, "DefinitionBox",ExpressionUUID->"5cf8197e-0767-4bab-b6e7-417fa46727b6",
 CellID->124942403],
Cell[4518, 128, 216, 2, 30, "Caption",ExpressionUUID->"4bfbbaaf-1b42-48b6-a4c3-a5a305a58f86",
 CellID->520428306],
Cell[CellGroupData[{
Cell[4759, 134, 251, 3, 40, "MathCaption",ExpressionUUID->"f43506a1-7771-4158-a9c0-54ec169572db",
 CellID->31903801],
Cell[CellGroupData[{
Cell[5035, 141, 395, 8, 25, "Input",ExpressionUUID->"7598acd3-6389-4c45-952d-4464965c6e07",
 CellID->2966739],
Cell[5433, 151, 264, 6, 21, "Echo",ExpressionUUID->"f066f4bb-3bf8-434a-9e49-a31946bcb20a",
 CellID->829559052],
Cell[5700, 159, 270, 4, 24, "Output",ExpressionUUID->"917f2ec9-b63e-4e49-b26d-a2b29b07ae42",
 CellID->9137373]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6019, 169, 188, 2, 40, "MathCaption",ExpressionUUID->"04b3ff9b-2b0f-4761-a60b-8aed1ef39046",
 CellID->591549556],
Cell[CellGroupData[{
Cell[6232, 175, 289, 6, 25, "Input",ExpressionUUID->"d783cff5-3a8f-4ff8-a24b-8cbc5953d7ae",
 CellID->281752241],
Cell[6524, 183, 345, 8, 24, "Output",ExpressionUUID->"75324d47-0bb8-4560-a357-e84a5be0cfe1",
 CellID->69714785]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6918, 197, 501, 8, 74, "MathCaption",ExpressionUUID->"f2ad7b3e-b352-44eb-93a1-3b887280e5a3",
 CellID->114128779],
Cell[CellGroupData[{
Cell[7444, 209, 719, 18, 48, "Input",ExpressionUUID->"157110f4-2bfa-40c5-9452-4bedaadba74c",
 CellID->123225409],
Cell[8166, 229, 303, 7, 24, "Output",ExpressionUUID->"dfc393ca-515e-4aa7-a026-227ca82b12ac",
 CellID->565924694]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8518, 242, 240, 4, 40, "MathCaption",ExpressionUUID->"f7523c82-c609-4bd7-ac6a-101682c7d785",
 CellID->198474650],
Cell[CellGroupData[{
Cell[8783, 250, 756, 19, 48, "Input",ExpressionUUID->"f6ee380a-4739-4721-a9c7-73721e6057cf",
 CellID->96415675],
Cell[9542, 271, 300, 7, 24, "Output",ExpressionUUID->"2d250a20-2f3b-4743-912c-9184cd3d8621",
 CellID->187311040]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9891, 284, 192, 2, 40, "MathCaption",ExpressionUUID->"17bb4736-5c24-4017-850c-e27538d06e14",
 CellID->460961065],
Cell[CellGroupData[{
Cell[10108, 290, 814, 20, 68, "Input",ExpressionUUID->"a52ff0eb-569f-4664-8c55-c62fa39b960a",
 CellID->348169710],
Cell[10925, 312, 176, 3, 24, "Output",ExpressionUUID->"36c2d559-21c4-4959-9b9a-f77a2523a960",
 CellID->12882949]
}, Open  ]]
}, Open  ]],
Cell[11128, 319, 187, 2, 40, "MathCaption",ExpressionUUID->"bcb88308-d60b-448d-85d9-7cb5da93ed7b",
 CellID->215938530],
Cell[CellGroupData[{
Cell[11340, 325, 190, 2, 40, "MathCaption",ExpressionUUID->"2353ef8d-02c7-40d7-813d-2f1ec64d119b",
 CellID->142381604],
Cell[CellGroupData[{
Cell[11555, 331, 390, 8, 25, "Input",ExpressionUUID->"50a8906b-1d34-4e2b-a456-bb398b05870c",
 CellID->347150823],
Cell[11948, 341, 194, 3, 24, "Output",ExpressionUUID->"af55f9e2-6bed-4d19-95da-a7e33b9c2c07",
 CellID->160256386]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12191, 350, 182, 2, 40, "MathCaption",ExpressionUUID->"aa13f796-6084-4be4-b68f-69ee4bd51d4d",
 CellID->9730894],
Cell[CellGroupData[{
Cell[12398, 356, 335, 6, 25, "Input",ExpressionUUID->"cd861de1-c55b-4f65-b868-a785400a8b7b",
 CellID->172885937],
Cell[12736, 364, 302, 7, 24, "Output",ExpressionUUID->"e6a0cb59-0782-43fb-a8a8-a82b96865c08",
 CellID->13566930]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[13099, 378, 187, 2, 45, "Section",ExpressionUUID->"791c635c-1e03-4372-949b-fa4d96525879",
 CellID->57602827],
Cell[CellGroupData[{
Cell[13311, 384, 209, 2, 40, "MathCaption",ExpressionUUID->"b83f86d4-9d83-499b-ab40-b811d6930b35",
 CellID->237155657],
Cell[CellGroupData[{
Cell[13545, 390, 249, 4, 25, "Input",ExpressionUUID->"3077938e-d049-4d8d-a063-4be05b563e2d",
 CellID->114626256],
Cell[13797, 396, 199, 3, 24, "Output",ExpressionUUID->"6d2b2a59-ce78-473d-bfec-f2e65f9d3bd9",
 CellID->21111411]
}, Open  ]],
Cell[CellGroupData[{
Cell[14033, 404, 247, 4, 25, "Input",ExpressionUUID->"c4b67cc6-ff82-4326-9aca-1b660f7fcf40",
 CellID->72962348],
Cell[14283, 410, 252, 6, 24, "Output",ExpressionUUID->"a2a6b74a-9608-4542-8d81-ef5b97813ba2",
 CellID->144120138]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[14584, 422, 197, 2, 40, "MathCaption",ExpressionUUID->"df0d52ca-bffd-45a1-b519-758e939bc207",
 CellID->172959633],
Cell[CellGroupData[{
Cell[14806, 428, 331, 7, 25, "Input",ExpressionUUID->"6bac6800-1d14-44bc-b44b-9c6af422b49a",
 CellID->103210421],
Cell[15140, 437, 251, 7, 42, "Output",ExpressionUUID->"0c88aaef-5c05-4d5b-855f-86576afe9105",
 CellID->78156444]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[15440, 450, 189, 2, 40, "MathCaption",ExpressionUUID->"8860ba47-aeb6-4f5b-b590-f7dec769ca82",
 CellID->452686366],
Cell[CellGroupData[{
Cell[15654, 456, 478, 12, 25, "Input",ExpressionUUID->"ce3c5df2-0acd-4351-a168-d4b9b9224a22",
 CellID->422387114],
Cell[16135, 470, 83295, 1590, 617, "Output",ExpressionUUID->"cc2bb6ca-d1b9-4f35-9ca1-76c6f1a54a4e",
 CellID->209532304]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[99479, 2066, 650, 21, 54, "MathCaption",ExpressionUUID->"19c2ede4-6eb4-40b0-81d5-58bc4f1c47e3",
 CellID->56151557],
Cell[CellGroupData[{
Cell[100154, 2091, 626, 15, 48, "Input",ExpressionUUID->"315ff5bc-9c19-4562-8561-5cdfe006134d",
 CellID->392545453],
Cell[100783, 2108, 43167, 810, 299, "Output",ExpressionUUID->"6938d4d0-e2d1-4edf-99a6-e133788f86ff",
 CellID->242033643]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[143999, 2924, 402, 10, 40, "MathCaption",ExpressionUUID->"a69dedee-e839-4836-915d-a71a2bd2e532",
 CellID->100832978],
Cell[CellGroupData[{
Cell[144426, 2938, 302, 7, 25, "Input",ExpressionUUID->"ede388b5-b5be-44c7-9b93-ba162d25e9a4",
 CellID->438135564],
Cell[144731, 2947, 262, 4, 24, "Output",ExpressionUUID->"19947191-b27a-4d1e-b954-8c5a7c725dd1",
 CellID->287705978]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[145054, 2958, 198, 2, 45, "Section",ExpressionUUID->"043711de-c6d3-40d5-b6bb-10780552ed50",
 CellID->33461597],
Cell[CellGroupData[{
Cell[145277, 2964, 248, 3, 40, "MathCaption",ExpressionUUID->"f2fd091d-1e6f-4e71-a2ff-d6101f367dc1",
 CellID->139662984],
Cell[CellGroupData[{
Cell[145550, 2971, 516, 13, 43, "Input",ExpressionUUID->"3981f08a-a266-4abb-a862-b0e114c10814",
 CellID->398286937],
Cell[146069, 2986, 83168, 1588, 617, "Output",ExpressionUUID->"ae81a371-746d-4db3-8569-2cdc530451cb",
 CellID->52134645]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[229286, 4580, 818, 24, 58, "MathCaption",ExpressionUUID->"bd50a358-8472-43db-92f1-56cedce74600",
 CellID->254962743],
Cell[CellGroupData[{
Cell[230129, 4608, 700, 22, 53, "Input",ExpressionUUID->"267bdab1-9ef9-4c49-b84e-33848c84d88e",
 CellID->208306947],
Cell[230832, 4632, 198, 3, 24, "Output",ExpressionUUID->"cb1ae230-d39e-470b-a545-a1d1657fe595",
 CellID->2750224]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[231079, 4641, 187, 2, 40, "MathCaption",ExpressionUUID->"38bf2122-d295-44fe-b7d6-2b0ba09be970",
 CellID->48756516],
Cell[CellGroupData[{
Cell[231291, 4647, 2051, 57, 174, "Input",ExpressionUUID->"2641e297-6863-4235-8bc2-47fc51ba52c5",
 CellID->415836666],
Cell[233345, 4706, 109759, 2158, 617, "Output",ExpressionUUID->"5599e82a-0cd2-4e01-ab51-4e33be1716e4",
 CellID->14127691]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[343153, 6870, 239, 4, 40, "MathCaption",ExpressionUUID->"2da1dd1c-e47f-4ea8-b8ba-bcf09aa5bd9d",
 CellID->699600308],
Cell[CellGroupData[{
Cell[343417, 6878, 2041, 56, 174, "Input",ExpressionUUID->"acc42a94-28db-43b7-b697-59374793c6c2",
 CellID->6091911],
Cell[345461, 6936, 94141, 1865, 596, "Output",ExpressionUUID->"350cacfc-f3d9-4328-978d-e8b694387e77",
 CellID->222447527]
}, Open  ]]
}, Closed]],
Cell[439629, 8805, 524, 16, 40, "MathCaption",ExpressionUUID->"563f31ea-55ed-4d75-ab9b-003c901d5d2b",
 CellID->259341750]
}, Closed]],
Cell[CellGroupData[{
Cell[440190, 8826, 172, 2, 45, "Section",ExpressionUUID->"8f4cfabc-dce5-4c88-b354-6d94488bc0ec",
 CellID->468515064],
Cell[CellGroupData[{
Cell[440387, 8832, 325, 5, 57, "MathCaption",ExpressionUUID->"25a2f533-8afc-4b3c-aede-acf63b70597b",
 CellID->26838858],
Cell[CellGroupData[{
Cell[440737, 8841, 302, 6, 25, "Input",ExpressionUUID->"4455d744-25af-483a-ab40-62fc0937d666",
 CellID->320045123],
Cell[441042, 8849, 334, 9, 24, "Output",ExpressionUUID->"3b26dff5-133d-4ef0-bf76-01aa3f3f35c3",
 CellID->144098166]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[441425, 8864, 196, 2, 40, "MathCaption",ExpressionUUID->"d04fe5e1-0714-429c-a3e2-efbf84935857",
 CellID->502664438],
Cell[CellGroupData[{
Cell[441646, 8870, 312, 6, 25, "Input",ExpressionUUID->"47780729-629f-4d5f-acd1-c6eac089fef1",
 CellID->460674117],
Cell[441961, 8878, 907, 23, 42, "Output",ExpressionUUID->"806c4663-4a79-4798-91e2-24770e3ecbcd",
 CellID->567622007]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[442917, 8907, 201, 2, 40, "MathCaption",ExpressionUUID->"5701f91e-7e0d-4917-a8b9-7708f920be97",
 CellID->318945664],
Cell[CellGroupData[{
Cell[443143, 8913, 358, 7, 25, "Input",ExpressionUUID->"f35939f1-9467-4a9e-aeae-0ac0fee32aa9",
 CellID->228472135],
Cell[443504, 8922, 1689, 50, 60, "Output",ExpressionUUID->"d36e98bf-2add-4311-85d7-52f5863d6454",
 CellID->167688184]
}, Open  ]],
Cell[CellGroupData[{
Cell[445230, 8977, 568, 14, 43, "Input",ExpressionUUID->"41624195-a6e6-44e3-8e0a-57c6790425ed",
 CellID->498538805],
Cell[445801, 8993, 1321, 41, 42, "Output",ExpressionUUID->"75df63de-643c-4547-88a9-701e87b5059e",
 CellID->488440420]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[447171, 9040, 204, 2, 40, "MathCaption",ExpressionUUID->"2b54ecbc-a10b-4b91-9653-1b0a6026c258",
 CellID->30430800],
Cell[447378, 9044, 1034, 27, 78, "Input",ExpressionUUID->"80aee334-7f65-4353-bb1a-185d9178d61e",
 CellID->338626900]
}, Open  ]],
Cell[CellGroupData[{
Cell[448449, 9076, 545, 14, 40, "MathCaption",ExpressionUUID->"688cd8b4-68ba-40f0-8577-1497a1c6709d",
 CellID->33966879],
Cell[CellGroupData[{
Cell[449019, 9094, 298, 6, 25, "Input",ExpressionUUID->"45aa8478-c27d-4605-a540-afc2ab20ae16",
 CellID->463235003],
Cell[449320, 9102, 332, 9, 24, "Output",ExpressionUUID->"76f48552-e3e9-4e30-ae22-490c81a9b56c",
 CellID->130931456]
}, Open  ]],
Cell[CellGroupData[{
Cell[449689, 9116, 306, 6, 25, "Input",ExpressionUUID->"6bcdafe3-9b04-48a2-a43e-70dd3fe54d0e",
 CellID->220685702],
Cell[449998, 9124, 907, 23, 42, "Output",ExpressionUUID->"45a16a00-9b44-4196-a5b7-dd46c44cc127",
 CellID->529899974]
}, Open  ]]
}, Open  ]],
Cell[450932, 9151, 318, 5, 57, "MathCaption",ExpressionUUID->"da8b13e2-b463-4a54-aa61-8adf809b2bad",
 CellID->667234787],
Cell[CellGroupData[{
Cell[451275, 9160, 546, 12, 40, "MathCaption",ExpressionUUID->"4c803681-4fbd-46ab-9275-3f2628f789b1",
 CellID->20786854],
Cell[CellGroupData[{
Cell[451846, 9176, 707, 17, 43, "Input",ExpressionUUID->"cc518051-0b47-4527-be52-615a2377de4f",
 CellID->712923585],
Cell[452556, 9195, 1235, 31, 24, "Output",ExpressionUUID->"8e3978c4-3cd5-4682-a41c-07c7bc826c3d",
 CellID->241317559]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[453840, 9232, 349, 6, 57, "MathCaption",ExpressionUUID->"b2cab360-7f8e-4cb9-9c34-d8df9cad1965",
 CellID->122464914],
Cell[CellGroupData[{
Cell[454214, 9242, 306, 6, 25, "Input",ExpressionUUID->"2ea0defc-cf50-4ff4-93b4-f1b4111c4338",
 CellID->435070527],
Cell[454523, 9250, 856, 22, 24, "Output",ExpressionUUID->"6ddd95b4-e337-4810-a8a6-a8ad8e16fdd3",
 CellID->680836109]
}, Open  ]],
Cell[CellGroupData[{
Cell[455416, 9277, 347, 7, 25, "Input",ExpressionUUID->"f25ef3fa-9f61-49df-9215-52fe614f2ace",
 CellID->57678985],
Cell[455766, 9286, 3477, 62, 43, "Output",ExpressionUUID->"48374ff9-80d3-4199-bf5d-33df1cf54901",
 CellID->286795089]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[459292, 9354, 185, 2, 40, "MathCaption",ExpressionUUID->"b5db532c-5b12-428a-8047-8d7ed3ec3697",
 CellID->169212145],
Cell[CellGroupData[{
Cell[459502, 9360, 292, 6, 25, "Input",ExpressionUUID->"29b12264-aa72-4b91-950e-204a57731fae",
 CellID->228145050],
Cell[459797, 9368, 189, 3, 24, "Output",ExpressionUUID->"1b9b0e4e-2f35-4976-8786-f12da0890e2b",
 CellID->41944856]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[460035, 9377, 176, 2, 42, "Subsection",ExpressionUUID->"7964692a-f66d-43d8-bd6e-31183ceaad41",
 CellID->65054791],
Cell[CellGroupData[{
Cell[460236, 9383, 631, 10, 91, "MathCaption",ExpressionUUID->"e46c66a5-2766-4954-9944-b13364048067",
 CellID->388376040],
Cell[CellGroupData[{
Cell[460892, 9397, 235, 4, 25, "Input",ExpressionUUID->"30941f9f-c17b-4025-9772-6958f334e206",
 CellID->131012795],
Cell[461130, 9403, 169, 3, 24, "Output",ExpressionUUID->"a54c3a5d-cd55-42de-a46d-15ad174eb052",
 CellID->127222859]
}, Open  ]],
Cell[CellGroupData[{
Cell[461336, 9411, 269, 5, 25, "Input",ExpressionUUID->"ed706a44-1e0c-470f-bb07-e5dc2ff3e781",
 CellID->844247],
Cell[461608, 9418, 168, 3, 24, "Output",ExpressionUUID->"abf2aa04-ea46-4ecb-88f2-0f16b70d15a7",
 CellID->91695846]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[461825, 9427, 181, 2, 40, "MathCaption",ExpressionUUID->"131e48ad-c5e6-463f-9395-427428e2ce8e",
 CellID->205495515],
Cell[CellGroupData[{
Cell[462031, 9433, 262, 5, 25, "Input",ExpressionUUID->"7370dbc8-be79-4fca-8536-f60e78b6bbdf",
 CellID->13581624],
Cell[462296, 9440, 320, 7, 24, "Output",ExpressionUUID->"b73e2606-54b0-4022-ad6d-4ed9e37b62d8",
 CellID->1801989]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[462665, 9453, 244, 4, 40, "MathCaption",ExpressionUUID->"b9520254-c771-4867-9a75-614aa379f44f",
 CellID->488934143],
Cell[CellGroupData[{
Cell[462934, 9461, 233, 4, 25, "Input",ExpressionUUID->"bfd55d51-7841-4011-9092-e06c75ab8b50",
 CellID->52403940],
Cell[463170, 9467, 333, 6, 60, "Output",ExpressionUUID->"b264de4b-8983-403f-bad7-16aeeed29009",
 CellID->27588445]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[463552, 9479, 200, 2, 40, "MathCaption",ExpressionUUID->"f634ca6c-b4f6-43f6-83b3-40a64266a75a",
 CellID->733937479],
Cell[CellGroupData[{
Cell[463777, 9485, 281, 5, 25, "Input",ExpressionUUID->"be835312-ef17-42d8-8f5e-91b127dea32d",
 CellID->288697611],
Cell[464061, 9492, 3105, 45, 136, "Message",ExpressionUUID->"eb03a001-eb05-4126-8be1-a47c35a7b8dc",
 CellID->508655313],
Cell[467169, 9539, 509, 10, 26, "Message",ExpressionUUID->"8c315424-6119-4c6a-be76-0118a3361aa9",
 CellID->488314992],
Cell[467681, 9551, 509, 10, 26, "Message",ExpressionUUID->"a70ed6f7-b889-45e0-b65b-fcd4aaee31e5",
 CellID->360908914],
Cell[468193, 9563, 203, 4, 24, "Output",ExpressionUUID->"2ee198b6-fa5d-41a1-bab7-34fc069c743b",
 CellID->45875794]
}, Open  ]]
}, Open  ]],
Cell[468423, 9571, 225, 3, 40, "MathCaption",ExpressionUUID->"89c8a6d0-1629-4d05-86c3-7f1dce4810a9",
 CellID->101847644],
Cell[468651, 9576, 258, 3, 40, "MathCaption",ExpressionUUID->"60d27db5-1fbc-4e2c-a589-58af5e8efd2d",
 CellID->211580469],
Cell[468912, 9581, 945, 26, 50, "MathCaption",ExpressionUUID->"d141e79b-8e3d-45b9-84ae-d63e372347fc",
 CellID->247846069],
Cell[469860, 9609, 1062, 28, 52, "MathCaption",ExpressionUUID->"28dcdd6a-88d4-4bbe-a344-576de62be056",
 CellID->819467623],
Cell[CellGroupData[{
Cell[470947, 9641, 237, 4, 40, "MathCaption",ExpressionUUID->"22d8fd18-d5ac-4fe8-8cfe-d2923f2de50e",
 CellID->153350675],
Cell[471187, 9647, 365, 10, 42, "Input",ExpressionUUID->"de71060d-ee80-4001-b9fe-96f844497276",
 CellID->151625861],
Cell[CellGroupData[{
Cell[471577, 9661, 799, 22, 68, "Input",ExpressionUUID->"4e696657-b4e1-4707-ab65-b6bb538c2fce",
 CellID->41007170],
Cell[472379, 9685, 378, 8, 24, "Output",ExpressionUUID->"a18f075b-0b45-4eee-b6d8-5f38f33bda61",
 CellID->123741561]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[472806, 9699, 224, 2, 40, "MathCaption",ExpressionUUID->"59e87db0-90ba-4b00-811f-d57ca8f752b1",
 CellID->107675305],
Cell[CellGroupData[{
Cell[473055, 9705, 784, 21, 48, "Input",ExpressionUUID->"b810ec76-1643-4ac8-9775-7b8e961d8af7",
 CellID->295429183],
Cell[473842, 9728, 508, 15, 40, "Output",ExpressionUUID->"39e11a19-c0ad-4448-8d9c-091c1eb7cd9b",
 CellID->211184276]
}, Open  ]]
}, Open  ]],
Cell[474377, 9747, 534, 12, 57, "MathCaption",ExpressionUUID->"d996454b-eb77-46f3-ab4f-fad8ba7d5b0e",
 CellID->136909599],
Cell[474914, 9761, 320, 5, 57, "MathCaption",ExpressionUUID->"bc1376bc-a10e-4655-8c50-2dac3a2d812f",
 CellID->207794795],
Cell[475237, 9768, 662, 14, 79, "MathCaption",ExpressionUUID->"64bef330-666a-431d-a8b5-cf9dc31bad9d",
 CellID->93210004],
Cell[475902, 9784, 396, 10, 45, "MathCaption",ExpressionUUID->"f8bd1c77-3243-4d94-b4c4-c13f5470025e",
 CellID->597830687],
Cell[476301, 9796, 1212, 36, 45, "MathCaption",ExpressionUUID->"779d1592-5df5-4174-b855-d9eee90c54cb",
 CellID->267850361],
Cell[CellGroupData[{
Cell[477538, 9836, 191, 2, 40, "MathCaption",ExpressionUUID->"c85cf143-b6ef-43ad-a761-714af583dc96",
 CellID->238909488],
Cell[CellGroupData[{
Cell[477754, 9842, 489, 14, 28, "Input",ExpressionUUID->"d0b140e6-006d-4ffd-8114-9925bb9872e2",
 CellID->520558764],
Cell[478246, 9858, 333, 9, 37, "Output",ExpressionUUID->"261754d1-d7c8-448e-8dce-31f8f050f21c",
 CellID->350941219]
}, Open  ]],
Cell[CellGroupData[{
Cell[478616, 9872, 642, 19, 28, "Input",ExpressionUUID->"a764e2da-4d34-4fa4-9060-85c867b2fe51",
 CellID->8825156],
Cell[479261, 9893, 207, 4, 24, "Output",ExpressionUUID->"7c5cc788-4c73-4765-be42-eaa807ea03a7",
 CellID->278680919]
}, Open  ]]
}, Open  ]],
Cell[479495, 9901, 193, 2, 40, "MathCaption",ExpressionUUID->"aec865ba-1459-409a-985c-331aee82498e",
 CellID->806936389],
Cell[479691, 9905, 755, 22, 78, "MathCaption",ExpressionUUID->"13375b9b-d61f-4045-a06e-a37140df0cb9",
 InitializationCell->True,
 CellID->25842481],
Cell[CellGroupData[{
Cell[480471, 9931, 203, 2, 40, "MathCaption",ExpressionUUID->"56c4fe20-6fbe-438f-95bb-8ee0cd42111c",
 CellID->14619546],
Cell[CellGroupData[{
Cell[480699, 9937, 316, 7, 25, "Input",ExpressionUUID->"3f8c22ed-6964-4d30-9d8f-73c34b3b8d21",
 CellID->367209639],
Cell[481018, 9946, 286, 7, 24, "Output",ExpressionUUID->"9e7c3954-25f7-408a-b9ae-965af732727b",
 CellID->19629526]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[481353, 9959, 117, 1, 40, "MathCaption",ExpressionUUID->"9d51d7d5-6cab-4e28-a987-b585696fe39e",
 CellID->339981277],
Cell[CellGroupData[{
Cell[481495, 9964, 609, 15, 43, "Input",ExpressionUUID->"fe4ccaea-c5e8-4c4a-b63f-f0d4b3aa36c9",
 CellID->558391696],
Cell[482107, 9981, 4160, 73, 160, "Output",ExpressionUUID->"caf7dae4-0e96-48bf-b1c0-e72f1cab75ab",
 CellID->716575968]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[486316, 10060, 134, 1, 40, "MathCaption",ExpressionUUID->"5157761f-0549-4d0a-8238-9c4d06355392",
 CellID->214227103],
Cell[CellGroupData[{
Cell[486475, 10065, 605, 17, 43, "Input",ExpressionUUID->"a95d847f-466e-45a6-9995-e4f139e143db",
 CellID->618289619],
Cell[487083, 10084, 123060, 2022, 231, "Output",ExpressionUUID->"afcc731e-01c4-45a2-8430-0be7df637f41",
 CellID->585874490]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[610192, 12112, 127, 1, 40, "MathCaption",ExpressionUUID->"7ca3ca54-237a-4ef9-b10b-6751e8e3ebb0",
 CellID->4255939],
Cell[CellGroupData[{
Cell[610344, 12117, 376, 10, 25, "Input",ExpressionUUID->"28b49248-16e8-4451-9712-f984cc9d13d5",
 CellID->340278271],
Cell[610723, 12129, 1247, 38, 74, "Output",ExpressionUUID->"d5c7723d-1bac-4c6e-bc3e-015078d40daf",
 CellID->394553506]
}, Open  ]],
Cell[611985, 12170, 241, 5, 26, "ExampleDelimiter",ExpressionUUID->"a586e236-7cd7-4bd9-afe2-64ebcfa993de",
 CellID->34228752]
}, Open  ]],
Cell[CellGroupData[{
Cell[612263, 12180, 390, 12, 42, "MathCaption",ExpressionUUID->"8444117f-53b6-47c8-a2f9-a3f865d6a719",
 CellID->758466417],
Cell[CellGroupData[{
Cell[612678, 12196, 386, 10, 25, "Input",ExpressionUUID->"5cd080f3-361c-4c1e-90a0-755ac06887f0",
 CellID->11744335],
Cell[613067, 12208, 879, 30, 44, "Output",ExpressionUUID->"4984f78c-6409-48f2-91f9-d57393f80d32",
 CellID->112085041]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[613995, 12244, 309, 5, 57, "MathCaption",ExpressionUUID->"8419c34b-d556-4ca9-be86-616af49f6847",
 CellID->732162013],
Cell[CellGroupData[{
Cell[614329, 12253, 308, 6, 25, "Input",ExpressionUUID->"c8cf25a0-0305-413b-8f40-ebc1c22ebd15",
 CellID->244982983],
Cell[614640, 12261, 829, 21, 24, "Output",ExpressionUUID->"744aa3ee-0cd1-4a6c-854c-4bd72d1488ea",
 CellID->851438496]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[615518, 12288, 295, 5, 57, "MathCaption",ExpressionUUID->"699d3a9e-554e-4700-95c9-25f6331f21f6",
 CellID->28447423],
Cell[CellGroupData[{
Cell[615838, 12297, 318, 6, 25, "Input",ExpressionUUID->"cb334c81-2895-4ec4-9c34-20129aad31aa",
 CellID->260451403],
Cell[616159, 12305, 2459, 45, 25, "Output",ExpressionUUID->"8533c48c-b6ab-41a5-90c3-434367afb3fb",
 CellID->665869934]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[618667, 12356, 218, 2, 40, "MathCaption",ExpressionUUID->"abe22dd1-0743-4eac-b7d6-2b9451412981",
 CellID->45932736],
Cell[CellGroupData[{
Cell[618910, 12362, 309, 6, 25, "Input",ExpressionUUID->"d6df016a-4f1e-48b6-bac0-8f5d6069b658",
 CellID->277919701],
Cell[619222, 12370, 1133, 29, 24, "Output",ExpressionUUID->"7aac0f1f-e689-4614-8715-0f7c94994231",
 CellID->7493652]
}, Open  ]],
Cell[CellGroupData[{
Cell[620392, 12404, 346, 7, 25, "Input",ExpressionUUID->"5ecf6474-ec4b-4eeb-aab6-99b1dcd24fc3",
 CellID->87289371],
Cell[620741, 12413, 11895, 199, 131, "Output",ExpressionUUID->"3cbedcb2-dce4-4c89-b705-939eb8682788",
 CellID->172278896]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[632685, 12618, 180, 2, 40, "MathCaption",ExpressionUUID->"e81fa305-8d0a-401e-84d0-5ead2feeac33",
 CellID->372409988],
Cell[CellGroupData[{
Cell[632890, 12624, 295, 6, 25, "Input",ExpressionUUID->"0a62f36b-a3cb-451e-9d71-45fd5ea7c193",
 CellID->204572566],
Cell[633188, 12632, 169, 3, 24, "Output",ExpressionUUID->"1b390cf0-ef52-4665-a0eb-be3f7e79d2df",
 CellID->349098055]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[633406, 12641, 273, 5, 57, "MathCaption",ExpressionUUID->"adcb0526-8890-4bc4-8997-6a94857877f2",
 CellID->705395511],
Cell[CellGroupData[{
Cell[633704, 12650, 271, 5, 25, "Input",ExpressionUUID->"f7d2ee00-4413-445b-a5cb-3687490cdd22",
 CellID->197135344],
Cell[633978, 12657, 193, 3, 24, "Output",ExpressionUUID->"98c45e96-5f82-4515-ad02-37da245a2915",
 CellID->56352306]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[634220, 12666, 295, 5, 57, "MathCaption",ExpressionUUID->"9adcec53-f386-4f5e-bc19-b4811a89c9f3",
 CellID->311141836],
Cell[CellGroupData[{
Cell[634540, 12675, 309, 6, 25, "Input",ExpressionUUID->"f342c29b-06e2-4b88-aab6-9d0312a76538",
 CellID->407433582],
Cell[634852, 12683, 3492, 90, 24, "Output",ExpressionUUID->"f4c23f5c-5f30-4bdb-a664-d1723d3085f4",
 CellID->349274851]
}, Open  ]],
Cell[638359, 12776, 239, 5, 26, "ExampleDelimiter",ExpressionUUID->"c7696599-5a92-4dbc-bea1-5f22795159ea",
 CellID->518217]
}, Open  ]],
Cell[CellGroupData[{
Cell[638635, 12786, 189, 2, 40, "MathCaption",ExpressionUUID->"0745db30-85fe-4960-ab46-4c6f3c11242f",
 CellID->194380331],
Cell[CellGroupData[{
Cell[638849, 12792, 274, 5, 25, "Input",ExpressionUUID->"ef5d352f-6c36-4d25-8d19-d79378083c1c",
 CellID->653333490],
Cell[639126, 12799, 226, 4, 24, "Output",ExpressionUUID->"c6475e9f-1300-41ef-b41b-b9445cf66f5e",
 CellID->531801412]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[639401, 12809, 206, 2, 40, "MathCaption",ExpressionUUID->"3d555f38-22ed-41cd-bb99-9dc5b439c093",
 CellID->158717184],
Cell[CellGroupData[{
Cell[639632, 12815, 343, 6, 25, "Input",ExpressionUUID->"822c8147-07bf-4e7c-a086-0361afef6988",
 CellID->414886273],
Cell[639978, 12823, 226, 4, 24, "Output",ExpressionUUID->"e2cd08c4-acdf-419c-a938-09ccdd491fcb",
 CellID->341067037]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[640253, 12833, 240, 4, 40, "MathCaption",ExpressionUUID->"442c0082-c9d1-4e1e-9b04-4d3d2cb29f18",
 CellID->36989666],
Cell[CellGroupData[{
Cell[640518, 12841, 316, 6, 25, "Input",ExpressionUUID->"71c34c98-a438-4ed1-a69b-1de79f743fa6",
 CellID->55412944],
Cell[640837, 12849, 22152, 368, 239, "Output",ExpressionUUID->"62818eab-fe3d-40e6-a4f4-cada704fb863",
 CellID->438918729]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[663038, 13223, 244, 4, 40, "MathCaption",ExpressionUUID->"93c7d87f-43e8-4f80-85cb-ac6985f98e2e",
 CellID->45514529],
Cell[CellGroupData[{
Cell[663307, 13231, 316, 6, 25, "Input",ExpressionUUID->"dfa742aa-ecfc-4604-baa7-7acec611ba4b",
 CellID->274862742],
Cell[663626, 13239, 171, 3, 24, "Output",ExpressionUUID->"53dd09c7-5e32-4260-b444-1d25def1bf0d",
 CellID->24836199]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[663846, 13248, 212, 2, 40, "MathCaption",ExpressionUUID->"933c456b-6ccd-4ba6-ad45-f21a5c011572",
 CellID->21262637],
Cell[CellGroupData[{
Cell[664083, 13254, 291, 5, 25, "Input",ExpressionUUID->"f39b66fc-1759-4d29-a6aa-364902bf0f24",
 CellID->3910711],
Cell[664377, 13261, 172, 3, 24, "Output",ExpressionUUID->"ee6005cb-2184-476b-913a-162d5220bdc2",
 CellID->453491458]
}, Open  ]]
}, Open  ]],
Cell[664576, 13268, 271, 5, 40, "MathCaption",ExpressionUUID->"3857ac4c-f462-47e9-a1d1-e04d78529e68",
 CellID->959787810],
Cell[CellGroupData[{
Cell[664872, 13277, 215, 2, 40, "MathCaption",ExpressionUUID->"1e31fe0c-363d-4097-bdd1-d0e6c4ed5661",
 CellID->402703826],
Cell[CellGroupData[{
Cell[665112, 13283, 292, 5, 25, "Input",ExpressionUUID->"5a5c6953-948d-48cf-bec4-1ac6fecfcd17",
 CellID->1592074],
Cell[665407, 13290, 258, 4, 24, "Output",ExpressionUUID->"8b765cb0-3374-48c8-93c4-e034668f1ca7",
 CellID->238165924]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[665714, 13300, 311, 6, 40, "MathCaption",ExpressionUUID->"c04673ab-f50c-46c5-b4e4-b8662a0cc74a",
 CellID->708478496],
Cell[CellGroupData[{
Cell[666050, 13310, 321, 6, 25, "Input",ExpressionUUID->"1cfe25bc-a245-4a84-8930-c2f3b700e16b",
 CellID->450230421],
Cell[666374, 13318, 855, 22, 24, "Output",ExpressionUUID->"b89726b5-e64d-46ba-bcc3-8ebce7cc9c17",
 CellID->26904101]
}, Open  ]],
Cell[CellGroupData[{
Cell[667266, 13345, 349, 7, 25, "Input",ExpressionUUID->"32b6c5ae-d310-4f36-a61f-453d64778332",
 CellID->212638519],
Cell[667618, 13354, 1335, 34, 24, "Output",ExpressionUUID->"134828a7-1a66-4b8a-aa15-03f0dc02147b",
 CellID->295663189]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[669002, 13394, 214, 2, 40, "MathCaption",ExpressionUUID->"ababbbee-c37e-435c-9720-28e3aff14e94",
 CellID->19185935],
Cell[CellGroupData[{
Cell[669241, 13400, 357, 7, 25, "Input",ExpressionUUID->"df28e7aa-723e-4f5f-b9e1-4398765bc735",
 CellID->65654456],
Cell[669601, 13409, 3277, 59, 43, "Output",ExpressionUUID->"41c9ec2a-c2da-4b04-b640-482087ebd604",
 CellID->7503357]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[672927, 13474, 186, 2, 40, "MathCaption",ExpressionUUID->"5f07dd1a-7a0f-4b38-84cd-a7c6e36717cb",
 CellID->288178981],
Cell[CellGroupData[{
Cell[673138, 13480, 280, 5, 25, "Input",ExpressionUUID->"21df450c-5d23-44a9-8b8e-79ab2c4efc69",
 CellID->153664891],
Cell[673421, 13487, 194, 3, 24, "Output",ExpressionUUID->"abb956a4-e623-40b5-bc2c-a1df8a9435d9",
 CellID->20629447]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[673664, 13496, 236, 4, 40, "MathCaption",ExpressionUUID->"0439089e-ec18-47d4-a9e8-6be5cc3a8fe3",
 CellID->669234462],
Cell[CellGroupData[{
Cell[673925, 13504, 326, 6, 25, "Input",ExpressionUUID->"064bd330-8401-4d37-a1a0-d9028dd80511",
 CellID->223182031],
Cell[674254, 13512, 18814, 313, 271, "Output",ExpressionUUID->"614fe19b-a10f-452a-bd15-65741258b7a8",
 CellID->108341859]
}, Open  ]],
Cell[CellGroupData[{
Cell[693105, 13830, 324, 6, 25, "Input",ExpressionUUID->"5a58b5bf-fc0b-4445-9c01-30019b93cfab",
 CellID->34464176],
Cell[693432, 13838, 172, 3, 24, "Output",ExpressionUUID->"ec441529-6937-4073-89c9-ba0ef46ec4fd",
 CellID->192324916]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[693653, 13847, 256, 5, 40, "MathCaption",ExpressionUUID->"7d457294-8757-4484-a281-a6b5a4f497c8",
 CellID->211204775],
Cell[CellGroupData[{
Cell[693934, 13856, 352, 6, 25, "Input",ExpressionUUID->"517b5a4c-16a7-41e6-861b-ce6e69d026d2",
 CellID->16120653],
Cell[694289, 13864, 221, 4, 24, "Output",ExpressionUUID->"4fef00c0-c6b7-4490-9411-a91b9d2a2960",
 CellID->16473884]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[694559, 13874, 292, 5, 40, "MathCaption",ExpressionUUID->"84d97388-9e4e-48ba-b0e4-9b05f048fda3",
 CellID->103140816],
Cell[CellGroupData[{
Cell[694876, 13883, 340, 7, 25, "Input",ExpressionUUID->"6fa94dd5-148e-4352-8174-a46ff7edf46d",
 CellID->217632446],
Cell[695219, 13892, 9135, 155, 130, "Output",ExpressionUUID->"db8298b3-2885-410b-974d-dded3d30d939",
 CellID->707156688]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[704427, 14055, 175, 2, 45, "Section",ExpressionUUID->"9e280db4-c641-46b9-bcf5-4aa1fd810235",
 CellID->399341884],
Cell[704605, 14059, 430, 7, 74, "MathCaption",ExpressionUUID->"54f27349-1ed0-4e77-9324-f274311a24bd",
 CellID->469287308],
Cell[CellGroupData[{
Cell[705060, 14070, 210, 2, 40, "MathCaption",ExpressionUUID->"360f1035-1233-4d69-9ee5-347fba9babf7",
 CellID->504481481],
Cell[CellGroupData[{
Cell[705295, 14076, 590, 13, 43, "Input",ExpressionUUID->"da421a35-0363-4242-8f47-b3fb3dfdd164",
 CellID->204438902],
Cell[705888, 14091, 29884, 494, 149, "Output",ExpressionUUID->"2ce3a670-c988-4fee-9212-c4508c56a204",
 CellID->81764621]
}, Open  ]],
Cell[CellGroupData[{
Cell[735809, 14590, 483, 11, 43, "Input",ExpressionUUID->"db4e61b9-e63c-4918-bb44-38468764fa68",
 CellID->1607685],
Cell[736295, 14603, 170, 3, 24, "Output",ExpressionUUID->"1e237630-3784-4030-ac4d-85839ba26076",
 CellID->162408320]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[736514, 14612, 498, 14, 52, "MathCaption",ExpressionUUID->"bff5b926-f987-4c45-95f1-40dc1f0acecb",
 CellID->418159723],
Cell[CellGroupData[{
Cell[737037, 14630, 253, 5, 25, "Input",ExpressionUUID->"fc922e8d-de4b-444b-a0b4-a0d7ba1360ba",
 CellID->22090076],
Cell[737293, 14637, 171, 3, 24, "Output",ExpressionUUID->"03d3e6fd-de1f-4bca-97d5-cd55c160ed03",
 CellID->25208491]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[737513, 14646, 457, 8, 91, "MathCaption",ExpressionUUID->"b013918c-4a2e-4d17-a7cf-95b8954d4bdf",
 CellID->305515986],
Cell[CellGroupData[{
Cell[737995, 14658, 678, 14, 78, "Input",ExpressionUUID->"26072508-28bc-42dc-b7de-6fb8870399e8",
 CellID->904920670],
Cell[738676, 14674, 172, 3, 24, "Output",ExpressionUUID->"d840c82f-1020-4e1a-80d6-96a7716a4d50",
 CellID->18002359]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[738897, 14683, 175, 2, 40, "MathCaption",ExpressionUUID->"91f0974b-b429-4dbb-b881-6b87bf991194",
 CellID->572182296],
Cell[CellGroupData[{
Cell[739097, 14689, 237, 5, 25, "Input",ExpressionUUID->"5c6b411a-c055-443f-ae00-5fc1fa8600a2",
 CellID->39383660],
Cell[739337, 14696, 195, 3, 24, "Output",ExpressionUUID->"74876ce8-9d83-443f-9730-f2689228a8ac",
 CellID->481380362]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[739581, 14705, 500, 13, 52, "MathCaption",ExpressionUUID->"dae02b5c-3d50-4dd7-bc42-cdfd6e4c3dac",
 CellID->17219148],
Cell[CellGroupData[{
Cell[740106, 14722, 220, 4, 25, "Input",ExpressionUUID->"e47033b7-c500-4939-9cfe-e88f155e3694",
 CellID->47120929],
Cell[740329, 14728, 173, 3, 24, "Output",ExpressionUUID->"082d05bf-acdb-4c19-9f06-2e94a6ebe0f9",
 CellID->64792566]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[740551, 14737, 301, 5, 74, "MathCaption",ExpressionUUID->"44580e7e-41d4-4562-b481-a7ad60178081",
 CellID->14643919],
Cell[CellGroupData[{
Cell[740877, 14746, 656, 14, 78, "Input",ExpressionUUID->"70ff0a6c-d458-42c7-8c99-5c6a9e50d3d8",
 CellID->37517731],
Cell[741536, 14762, 172, 3, 24, "Output",ExpressionUUID->"71a3b817-6565-4275-9e5d-7ea2bdea12ae",
 CellID->530337700]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[741757, 14771, 232, 3, 40, "MathCaption",ExpressionUUID->"70cf6342-3c4b-4d2b-b269-ca7a19b464ff",
 CellID->968157184],
Cell[CellGroupData[{
Cell[742014, 14778, 455, 10, 25, "Input",ExpressionUUID->"7ba54b35-ed04-4668-a272-06c024b4c6c9",
 CellID->702446134],
Cell[742472, 14790, 688, 17, 24, "Output",ExpressionUUID->"5cca346d-7d0a-4f2e-827f-b6543aea294b",
 CellID->306566547]
}, Open  ]],
Cell[743175, 14810, 260, 6, 26, "ExampleDelimiter",ExpressionUUID->"b8d544be-ab51-49a3-b0d0-259ecf14aa98",
 CellID->14107562]
}, Open  ]],
Cell[CellGroupData[{
Cell[743472, 14821, 213, 3, 40, "MathCaption",ExpressionUUID->"7e175591-2abd-42c1-8c80-44e10684f4a3",
 CellID->505671602],
Cell[CellGroupData[{
Cell[743710, 14828, 505, 11, 25, "Input",ExpressionUUID->"f933d93a-5e6c-4230-a7ab-1232a8d6cfe2",
 CellID->618773088],
Cell[744218, 14841, 8439, 143, 51, "Output",ExpressionUUID->"ce69c458-5d26-4ab0-8075-a5c2a60c3b55",
 CellID->161706846]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[752718, 14991, 245, 5, 69, "Section",ExpressionUUID->"88d508aa-9464-4cd0-a7d3-5e183e0c5a64",
 CellID->530745392],
Cell[CellGroupData[{
Cell[752988, 15000, 322, 6, 40, "MathCaption",ExpressionUUID->"f33eda08-fae3-4479-a6c4-e636cede7441",
 CellID->330285041],
Cell[CellGroupData[{
Cell[753335, 15010, 329, 7, 25, "Input",ExpressionUUID->"56cd4124-2cba-4cc3-9cc9-2d894388b1fa",
 CellID->149666305],
Cell[753667, 15019, 225, 5, 24, "Output",ExpressionUUID->"29d6c201-3240-429e-bda2-f44a1eee1902",
 CellID->164357416]
}, Open  ]],
Cell[CellGroupData[{
Cell[753929, 15029, 329, 7, 25, "Input",ExpressionUUID->"c29e76db-da18-4009-a1a9-00b2f6268e11",
 CellID->279831655],
Cell[754261, 15038, 226, 5, 24, "Output",ExpressionUUID->"506a5827-d849-47d1-96a2-7cae7399f25b",
 CellID->240178721]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[754536, 15049, 244, 4, 40, "MathCaption",ExpressionUUID->"77c588f9-414c-40a5-b716-15302bd28261",
 CellID->377750434],
Cell[CellGroupData[{
Cell[754805, 15057, 545, 12, 43, "Input",ExpressionUUID->"b149bf79-ed77-4cbb-8feb-b7afb792d0d1",
 CellID->80880133],
Cell[755353, 15071, 4307, 75, 43, "Output",ExpressionUUID->"042f0bc5-163c-4ba3-8132-f75f266f7d87",
 CellID->848765034]
}, Open  ]],
Cell[CellGroupData[{
Cell[759697, 15151, 586, 13, 61, "Input",ExpressionUUID->"24db643a-a35a-4577-81ab-92455c12558f",
 CellID->281231649],
Cell[760286, 15166, 2225, 41, 26, "Output",ExpressionUUID->"c0fe9207-69ca-40dc-a102-e65430fbbb73",
 CellID->213598105]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[762560, 15213, 205, 2, 40, "MathCaption",ExpressionUUID->"0a4a5c63-eac7-46e4-9838-4db8022b656c",
 CellID->88233538],
Cell[CellGroupData[{
Cell[762790, 15219, 375, 8, 25, "Input",ExpressionUUID->"6fbc3631-04e7-4667-bf57-374fd925a058",
 CellID->926616109],
Cell[763168, 15229, 625, 18, 24, "Output",ExpressionUUID->"a217b7b3-0f3e-406c-ab37-e7c7ef5a9c3b",
 CellID->78903040]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[763842, 15253, 195, 2, 40, "MathCaption",ExpressionUUID->"4ee85dcc-da93-4d49-b9de-456690e750cd",
 CellID->97113938],
Cell[CellGroupData[{
Cell[764062, 15259, 430, 10, 43, "Input",ExpressionUUID->"898e048a-fe61-4538-b291-e76d75a22734",
 CellID->22984984],
Cell[764495, 15271, 626, 18, 24, "Output",ExpressionUUID->"91a2c43c-0a49-4a0f-84c9-1bbd64d855a7",
 CellID->239111319]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[765170, 15295, 210, 2, 40, "MathCaption",ExpressionUUID->"74e5a1b3-aa91-4119-baeb-242f085774eb",
 CellID->396413639],
Cell[CellGroupData[{
Cell[765405, 15301, 599, 13, 61, "Input",ExpressionUUID->"e2f71c0e-42b9-49c7-84d8-b7c41c1ae607",
 CellID->229833682],
Cell[766007, 15316, 896, 25, 21, "Echo",ExpressionUUID->"453344bc-2da8-40c0-8181-f2a5297bbfb2",
 CellID->834526706],
Cell[766906, 15343, 624, 18, 24, "Output",ExpressionUUID->"26e85f3b-38bc-435b-a0a9-df6218359c78",
 CellID->630516631]
}, Open  ]],
Cell[CellGroupData[{
Cell[767567, 15366, 477, 10, 43, "Input",ExpressionUUID->"61dccad2-9386-42ce-8468-30c7b3d07ce2",
 CellID->162857240],
Cell[768047, 15378, 930, 25, 21, "Echo",ExpressionUUID->"8592ff58-114a-4072-8309-fbfbd35cfbed",
 CellID->267038778],
Cell[768980, 15405, 625, 18, 24, "Output",ExpressionUUID->"8f61954f-183e-4433-8b6d-3ae9ffcd9a05",
 CellID->51852502]
}, Open  ]],
Cell[CellGroupData[{
Cell[769642, 15428, 626, 14, 61, "Input",ExpressionUUID->"a9656146-6819-4835-8c73-1994d049d83d",
 CellID->306376386],
Cell[770271, 15444, 910, 25, 21, "Echo",ExpressionUUID->"de4d32a2-fda2-4058-8440-0f057c70bc4e",
 CellID->448272658]
}, Open  ]],
Cell[CellGroupData[{
Cell[771218, 15474, 496, 11, 43, "Input",ExpressionUUID->"e4437f9b-a46b-41fc-8db7-0244ce2f3101",
 CellID->3601619],
Cell[771717, 15487, 911, 25, 21, "Echo",ExpressionUUID->"118d84c1-73c1-4e04-a98f-0302a47d25eb",
 CellID->88055709]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[772677, 15518, 268, 5, 40, "MathCaption",ExpressionUUID->"adb2da3f-fc1b-4721-8aab-2dc30747aed8",
 CellID->100378946],
Cell[CellGroupData[{
Cell[772970, 15527, 610, 14, 61, "Input",ExpressionUUID->"c6c5a97b-d069-4211-b5d1-7372b4b935fa",
 CellID->268140765],
Cell[773583, 15543, 917, 25, 21, "Echo",ExpressionUUID->"858ceb05-cacb-4cba-aca3-f4d7b308f244",
 CellID->434075465]
}, Open  ]],
Cell[CellGroupData[{
Cell[774537, 15573, 478, 11, 43, "Input",ExpressionUUID->"e3c8de3b-c47d-4149-8e7a-e15d13339f24",
 CellID->589080666],
Cell[775018, 15586, 915, 25, 21, "Echo",ExpressionUUID->"a7a9a0a2-4119-4393-9072-546c55af6cfc",
 CellID->323976790]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[775994, 15618, 262, 6, 69, "Section",ExpressionUUID->"1e827476-a038-43c2-8781-124faa9fbdb1",
 CellID->12288536],
Cell[CellGroupData[{
Cell[776281, 15628, 588, 9, 108, "MathCaption",ExpressionUUID->"d8dbec77-14e8-407a-acb4-5534743784fd",
 CellID->3829791],
Cell[776872, 15639, 27474, 455, 503, "Input",ExpressionUUID->"5a5859b9-a490-42c2-b858-736980ab6aff",
 CellID->40301758]
}, Open  ]],
Cell[804361, 16097, 218, 2, 40, "MathCaption",ExpressionUUID->"bb29eb06-0040-4bbb-adf9-8957a7ad0c54",
 CellID->579141544],
Cell[CellGroupData[{
Cell[804604, 16103, 931, 30, 91, "MathCaption",ExpressionUUID->"1cf02fdb-b219-411b-b6f2-4466d0ed356c",
 CellID->720303488],
Cell[805538, 16135, 27738, 459, 503, "Input",ExpressionUUID->"df2adab5-8706-405c-823d-c7e15a8f5312",
 CellID->88290392]
}, Open  ]],
Cell[833291, 16597, 213, 2, 40, "MathCaption",ExpressionUUID->"70a5f93c-0c19-49ab-82d2-39508ec8e9b3",
 CellID->240683520],
Cell[833507, 16601, 1662, 50, 125, "MathCaption",ExpressionUUID->"0cfe9418-f82c-4af1-a015-2a3c3f6bfc04",
 CellID->193883768],
Cell[835172, 16653, 502, 14, 57, "MathCaption",ExpressionUUID->"4d62e537-4458-4b88-9eb6-6d0963ec216c",
 CellID->779314723],
Cell[835677, 16669, 520, 8, 82, "Text",ExpressionUUID->"77b15de0-9b75-4a13-83b9-57be9bd54555",
 CellID->120972958],
Cell[836200, 16679, 38087, 629, 520, "Text",ExpressionUUID->"ad5908cb-a38d-4094-a56e-6155fda3fcf6",
 CellID->383428980],
Cell[874290, 17310, 266, 7, 40, "MathCaption",ExpressionUUID->"1ec80ab6-a90a-4130-b6b3-4bc792e4f2c2",
 CellID->251669683],
Cell[CellGroupData[{
Cell[874581, 17321, 204, 2, 40, "MathCaption",ExpressionUUID->"1f5f8b76-371f-4d8c-acc4-2f742652d382",
 CellID->1161597],
Cell[CellGroupData[{
Cell[874810, 17327, 248, 4, 25, "Input",ExpressionUUID->"293bb6cb-485b-4b42-96da-d891ec626e32",
 CellID->15581493],
Cell[875061, 17333, 22830, 451, 315, "Output",ExpressionUUID->"1fa5a313-6967-4b00-830f-5ac892a4484c",
 CellID->188732912]
}, Closed]],
Cell[CellGroupData[{
Cell[897928, 17789, 245, 4, 21, "Input",ExpressionUUID->"e8bf0af1-debf-4520-b26b-2eb6885ac7a5",
 CellID->57991860],
Cell[898176, 17795, 24418, 471, 341, "Output",ExpressionUUID->"01250af1-b485-4f93-a6c2-f314929cd9aa",
 CellID->347565205]
}, Closed]],
Cell[CellGroupData[{
Cell[922631, 18271, 250, 4, 21, "Input",ExpressionUUID->"7e179bed-558d-4b88-b2df-33b3e0d9a299",
 CellID->186399249],
Cell[922884, 18277, 20072, 444, 295, "Output",ExpressionUUID->"595322de-da1c-494d-9b84-b1577ac5bfad",
 CellID->231237187]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[943005, 18727, 187, 2, 40, "MathCaption",ExpressionUUID->"35875d99-047e-444a-8d56-cdca4337facf",
 CellID->8148466],
Cell[CellGroupData[{
Cell[943217, 18733, 262, 5, 25, "Input",ExpressionUUID->"e568555b-07ae-4759-b580-dc4de6bd4707",
 CellID->275594361],
Cell[943482, 18740, 168, 3, 24, "Output",ExpressionUUID->"61e5f87b-f01f-4203-a861-abaf7bb29cbd",
 CellID->63282592]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[943699, 18749, 190, 2, 40, "MathCaption",ExpressionUUID->"39a3c41b-a4a6-482d-931b-079216e38871",
 CellID->217883401],
Cell[CellGroupData[{
Cell[943914, 18755, 332, 7, 25, "Input",ExpressionUUID->"b62fb33a-e489-48be-bd6a-aa0090c38d1f",
 CellID->354045942],
Cell[944249, 18764, 186, 4, 24, "Output",ExpressionUUID->"06b99f27-200e-464f-a2d2-a6ba64bdd7a8",
 CellID->381802649]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[944484, 18774, 191, 2, 40, "MathCaption",ExpressionUUID->"9f91dc45-7cad-42ea-8dd6-cb6b01246e47",
 CellID->491856425],
Cell[CellGroupData[{
Cell[944700, 18780, 317, 6, 25, "Input",ExpressionUUID->"04504e8b-9ced-4aa1-b012-57a8cdc64894",
 CellID->341989737],
Cell[945020, 18788, 170, 3, 24, "Output",ExpressionUUID->"b502e459-84cd-4a3c-bed7-ac7f00f51592",
 CellID->11002816]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[945239, 18797, 190, 2, 40, "MathCaption",ExpressionUUID->"3f9b92db-4f41-4ead-90c3-df386837ea6e",
 CellID->1449152],
Cell[CellGroupData[{
Cell[945454, 18803, 387, 8, 25, "Input",ExpressionUUID->"53b72a2c-0a97-42af-9ecb-ed216ca02ca5",
 CellID->225539919],
Cell[945844, 18813, 188, 4, 24, "Output",ExpressionUUID->"ea226934-4501-402c-bfe8-824860e707e4",
 CellID->469117548]
}, Open  ]]
}, Open  ]],
Cell[946059, 18821, 768, 11, 125, "MathCaption",ExpressionUUID->"5503be32-87cb-4f27-9cee-e7263885a46e",
 CellID->71716672]
}, Closed]],
Cell[CellGroupData[{
Cell[946864, 18837, 235, 3, 45, "Section",ExpressionUUID->"ca9e0543-7782-4ad8-94eb-ec52f55ec56f",
 CellID->540683708],
Cell[CellGroupData[{
Cell[947124, 18844, 640, 14, 91, "MathCaption",ExpressionUUID->"ec45a5ba-1454-44b6-90cd-7d996615656b",
 CellID->120747263],
Cell[CellGroupData[{
Cell[947789, 18862, 310, 6, 25, "Input",ExpressionUUID->"0b117f60-0997-494d-9b4b-bd8d1b1cafb2",
 CellID->225888329],
Cell[948102, 18870, 2220, 41, 85, "Output",ExpressionUUID->"4fe450aa-d876-43eb-a90c-3cd26f384c01",
 CellID->505833116]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[950371, 18917, 232, 4, 40, "MathCaption",ExpressionUUID->"a8e408c7-6bc0-443d-899f-f384cc375745",
 CellID->726753596],
Cell[950606, 18923, 45095, 744, 323, "Input",ExpressionUUID->"1474a759-a4d8-400a-a3ed-465a8bc4645b",
 CellID->313056273]
}, Open  ]],
Cell[995716, 19670, 378, 6, 57, "MathCaption",ExpressionUUID->"47c860e8-52d8-4e54-bf18-40fb53a468b7",
 CellID->25000001],
Cell[996097, 19678, 901, 23, 74, "MathCaption",ExpressionUUID->"e5f1c52f-dc6f-4d4a-a5de-ca671070e27f",
 CellID->23248960],
Cell[CellGroupData[{
Cell[997023, 19705, 445, 7, 74, "MathCaption",ExpressionUUID->"1fbeb423-2d51-49c1-9bd7-2d8f1909879b",
 CellID->83076827],
Cell[997471, 19714, 21698, 360, 239, "Input",ExpressionUUID->"6ebfb598-9a9a-4efe-ad70-d2d03ee9b168",
 CellID->290924591]
}, Open  ]],
Cell[CellGroupData[{
Cell[1019206, 20079, 173, 2, 42, "Subsection",ExpressionUUID->"05296ddf-c995-441a-8810-ac7dcd26db98",
 CellID->358110304],
Cell[CellGroupData[{
Cell[1019404, 20085, 194, 2, 40, "MathCaption",ExpressionUUID->"fc84aebc-d6a9-460e-8163-9cb2145ffd28",
 CellID->280442444],
Cell[CellGroupData[{
Cell[1019623, 20091, 556, 14, 25, "Input",ExpressionUUID->"935f1f13-19f4-4f64-9671-3006df85d57a",
 CellID->264630673],
Cell[1020182, 20107, 2364, 44, 116, "Output",ExpressionUUID->"a84a74ff-2a96-40b7-94c1-9aa056d2b384",
 CellID->35628591]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1022595, 20157, 189, 2, 40, "MathCaption",ExpressionUUID->"f1131df1-9430-429d-8318-ab72e645011a",
 CellID->489125552],
Cell[CellGroupData[{
Cell[1022809, 20163, 361, 7, 25, "Input",ExpressionUUID->"5ab50ee1-7383-42b5-b863-ddb7e0448381",
 CellID->248975590],
Cell[1023173, 20172, 2886, 52, 116, "Output",ExpressionUUID->"9d84d5c8-6ecd-46cd-874c-a11f7514e028",
 CellID->193259272]
}, Open  ]]
}, Open  ]],
Cell[1026086, 20228, 682, 13, 91, "MathCaption",ExpressionUUID->"f67eefef-5dee-4f8a-a8f5-f87b318c5d79",
 CellID->54997474],
Cell[CellGroupData[{
Cell[1026793, 20245, 1218, 33, 74, "MathCaption",ExpressionUUID->"cef10c47-f5ff-4fd7-a68f-29744c2be777",
 CellID->437533660],
Cell[CellGroupData[{
Cell[1028036, 20282, 267, 5, 25, "Input",ExpressionUUID->"019b1a15-3578-4e7e-8632-6803fa64780f",
 CellID->310310876],
Cell[1028306, 20289, 1187, 30, 42, "Output",ExpressionUUID->"829d6143-e3a9-4b2a-aa68-295df55a19d2",
 CellID->225244872]
}, Open  ]],
Cell[CellGroupData[{
Cell[1029530, 20324, 330, 7, 25, "Input",ExpressionUUID->"fc84a7fb-957e-4a6d-b571-4ae1298894d7",
 CellID->423174809],
Cell[1029863, 20333, 1252, 41, 42, "Output",ExpressionUUID->"820f1b2c-9f1c-4451-9290-964f027130c5",
 CellID->121433291]
}, Open  ]],
Cell[CellGroupData[{
Cell[1031152, 20379, 340, 7, 25, "Input",ExpressionUUID->"6348f0ea-22e1-4cb7-94e3-487a821a2845",
 CellID->3269446],
Cell[1031495, 20388, 1118, 41, 28, "Output",ExpressionUUID->"5bdf2d95-4502-47b1-bae6-fb3ab454b1a3",
 CellID->171650254]
}, Open  ]],
Cell[CellGroupData[{
Cell[1032650, 20434, 426, 11, 25, "Input",ExpressionUUID->"00dae796-8049-408e-843c-c1463655fd31",
 CellID->314297534],
Cell[1033079, 20447, 1402, 31, 28, "Output",ExpressionUUID->"b4325782-4817-4e8b-840f-f2e122f9c940",
 CellID->88738759]
}, Open  ]]
}, Open  ]],
Cell[1034508, 20482, 197, 2, 40, "MathCaption",ExpressionUUID->"ee2b1b1d-b9a3-4341-971d-2db40fad492a",
 CellID->189405354],
Cell[CellGroupData[{
Cell[1034730, 20488, 200, 2, 40, "MathCaption",ExpressionUUID->"bf823441-0068-483c-b241-d1a174c94efb",
 CellID->14389982],
Cell[CellGroupData[{
Cell[1034955, 20494, 298, 6, 25, "Input",ExpressionUUID->"33ce7b33-1cb9-4350-8670-428caca02ac6",
 CellID->551713149],
Cell[1035256, 20502, 383, 12, 24, "Output",ExpressionUUID->"bdbb4d63-dfeb-4620-b079-6d566942da44",
 CellID->303061784]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1035688, 20520, 209, 2, 40, "MathCaption",ExpressionUUID->"4fd65377-56fe-4c73-ac5e-e5bbd50d9760",
 CellID->27082361],
Cell[CellGroupData[{
Cell[1035922, 20526, 354, 7, 25, "Input",ExpressionUUID->"3b218fd8-ced8-4a0e-8569-25b42ed9a4d4",
 CellID->94794786],
Cell[1036279, 20535, 2339, 43, 116, "Output",ExpressionUUID->"36015fbe-9a93-4fc2-9da5-c671323d0df3",
 CellID->112879944]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1038667, 20584, 221, 3, 40, "MathCaption",ExpressionUUID->"7ce923fb-f996-40bf-8d0b-e99b9a21517f",
 CellID->5883902],
Cell[CellGroupData[{
Cell[1038913, 20591, 290, 5, 25, "Input",ExpressionUUID->"55d107ba-208e-4ec6-b760-c9834c240474",
 CellID->132395633],
Cell[1039206, 20598, 1401, 31, 28, "Output",ExpressionUUID->"ff785669-20e2-4aec-acbd-9f38ea79ce1e",
 CellID->56684042]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1040656, 20635, 207, 2, 40, "MathCaption",ExpressionUUID->"ac107ad5-de76-427d-a00e-b417f3e58385",
 CellID->149332221],
Cell[CellGroupData[{
Cell[1040888, 20641, 299, 6, 25, "Input",ExpressionUUID->"52da5fbc-1a15-49bb-8c9a-99d838f49771",
 CellID->10961951],
Cell[1041190, 20649, 359, 12, 24, "Output",ExpressionUUID->"cedf4810-f7ba-47eb-b96a-14ac81a539a6",
 CellID->444330609]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1041598, 20667, 185, 2, 40, "MathCaption",ExpressionUUID->"9fd51bbb-91a7-4c01-a43c-b84a54c4d3d7",
 CellID->415746986],
Cell[CellGroupData[{
Cell[1041808, 20673, 439, 13, 25, "Input",ExpressionUUID->"e0d359b0-4716-4e40-b992-39274e83848d",
 CellID->69651621],
Cell[1042250, 20688, 227, 5, 24, "Output",ExpressionUUID->"37ae216c-eddb-461d-aef8-405f3df5c999",
 CellID->22352005]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1042526, 20699, 196, 2, 40, "MathCaption",ExpressionUUID->"7959f05f-32a4-41e3-8e85-b15f466a17f1",
 CellID->124557680],
Cell[CellGroupData[{
Cell[1042747, 20705, 408, 13, 25, "Input",ExpressionUUID->"43af13d4-ecb4-4271-8a2e-29fec400ace7",
 CellID->25705024],
Cell[1043158, 20720, 356, 12, 24, "Output",ExpressionUUID->"55a03681-0f20-48ad-aa75-ee27b1b6e84e",
 CellID->172335873]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1043563, 20738, 254, 5, 40, "MathCaption",ExpressionUUID->"b55f31a6-228c-4289-9529-0228b0704818",
 CellID->29470894],
Cell[CellGroupData[{
Cell[1043842, 20747, 224, 4, 25, "Input",ExpressionUUID->"5f7c625a-3e9d-4e7d-8847-bd159b418a7c",
 CellID->944641248],
Cell[1044069, 20753, 171, 3, 24, "Output",ExpressionUUID->"9b477820-310b-40e3-b223-9ca3dab57bae",
 CellID->3634980]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1044289, 20762, 229, 3, 40, "MathCaption",ExpressionUUID->"e45c785c-d492-489a-bfef-ed3aea469066",
 CellID->167370326],
Cell[CellGroupData[{
Cell[1044543, 20769, 234, 4, 25, "Input",ExpressionUUID->"a57924e9-9f0e-4f69-bb4c-3e5c1ad9b93e",
 CellID->5850158],
Cell[1044780, 20775, 659, 19, 24, "Output",ExpressionUUID->"ae5e20aa-e582-4f24-8eca-f9bf70898d3c",
 CellID->726673322]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1045488, 20800, 222, 2, 40, "MathCaption",ExpressionUUID->"44405ee1-1aa8-4999-a4ed-a82b7853c48a",
 CellID->639695839],
Cell[CellGroupData[{
Cell[1045735, 20806, 278, 5, 25, "Input",ExpressionUUID->"cbadf56a-0774-4f60-8d87-4d3d4d318af1",
 CellID->849206],
Cell[1046016, 20813, 1587, 63, 24, "Output",ExpressionUUID->"35a62eac-b924-48ce-936e-a428e59e889a",
 CellID->718486876]
}, Open  ]],
Cell[CellGroupData[{
Cell[1047640, 20881, 329, 6, 25, "Input",ExpressionUUID->"07fe522e-dac7-437a-9ab1-ca6ab90887e9",
 CellID->19159316],
Cell[1047972, 20889, 657, 19, 24, "Output",ExpressionUUID->"dea7a06a-12c8-4b31-802e-b89fc7f59ebf",
 CellID->4545005]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1048678, 20914, 209, 2, 40, "MathCaption",ExpressionUUID->"e6f0257a-06d3-4837-a6e0-a1d2d0532453",
 CellID->218489595],
Cell[CellGroupData[{
Cell[1048912, 20920, 403, 8, 43, "Input",ExpressionUUID->"aad9c404-d661-4397-adb1-50b70606d709",
 CellID->178115162],
Cell[1049318, 20930, 176, 3, 24, "Output",ExpressionUUID->"0a6de56c-48f6-4195-9beb-5bc14b12fc7e",
 CellID->643979435]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1049543, 20939, 203, 2, 40, "MathCaption",ExpressionUUID->"1ff57aa8-3664-4b9a-a2aa-eb8c108da90b",
 CellID->9893500],
Cell[CellGroupData[{
Cell[1049771, 20945, 171, 3, 25, "Input",ExpressionUUID->"2147182e-431e-4e6a-ab99-05ebac00aa5d",
 CellID->196076816],
Cell[1049945, 20950, 656, 19, 24, "Output",ExpressionUUID->"3d9e9592-a5b0-4930-a1bd-14ed5def8be9",
 CellID->52543288]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1050650, 20975, 233, 4, 40, "MathCaption",ExpressionUUID->"0a9bb846-34d9-4c35-a2cf-51581714f137",
 CellID->107309808],
Cell[CellGroupData[{
Cell[1050908, 20983, 292, 5, 25, "Input",ExpressionUUID->"3c53321a-5789-40aa-a57d-ba1f297b7f92",
 CellID->344332983],
Cell[1051203, 20990, 1404, 31, 28, "Output",ExpressionUUID->"a4b99d03-46f7-4bbf-a527-891d01c697e1",
 CellID->915079800]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1052656, 21027, 205, 2, 40, "MathCaption",ExpressionUUID->"1a2d3f56-8e3a-4f62-804e-a6acf2854b15",
 CellID->211360356],
Cell[CellGroupData[{
Cell[1052886, 21033, 344, 6, 43, "Input",ExpressionUUID->"182f6674-88e1-40d6-a630-010d0bae4c86",
 CellID->3069427],
Cell[1053233, 21041, 657, 19, 24, "Output",ExpressionUUID->"74171715-5525-4f6a-986b-805ac15750df",
 CellID->518866367]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1053939, 21066, 218, 2, 40, "MathCaption",ExpressionUUID->"2b71ba04-5db5-4d31-b1da-a262d2d459f6",
 CellID->103518963],
Cell[CellGroupData[{
Cell[1054182, 21072, 415, 8, 43, "Input",ExpressionUUID->"dc5fa358-d60f-499e-b48d-5d2fb8561c68",
 CellID->193845607],
Cell[1054600, 21082, 173, 3, 24, "Output",ExpressionUUID->"2b4ca5ca-93ad-4fcb-834c-fbc89e6fc9be",
 CellID->940371513]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1054834, 21092, 181, 2, 42, "Subsection",ExpressionUUID->"249738cc-02a9-44c1-b2cc-53abc1db15da",
 CellID->461086206],
Cell[1055018, 21096, 518, 10, 91, "MathCaption",ExpressionUUID->"76f12cf5-ba76-4859-868a-b0c6374aef9a",
 CellID->16749771],
Cell[CellGroupData[{
Cell[1055561, 21110, 185, 2, 43, "Subsubsection",ExpressionUUID->"36413a72-44e6-4241-8c3a-125fb720249d",
 CellID->26228644],
Cell[CellGroupData[{
Cell[1055771, 21116, 256, 5, 40, "MathCaption",ExpressionUUID->"1c6a7563-ab9b-482b-aa60-882eeb5be12d",
 CellID->287285731],
Cell[CellGroupData[{
Cell[1056052, 21125, 299, 6, 25, "Input",ExpressionUUID->"bcfe34e5-f02c-42e7-9dbd-f907fb046c11",
 CellID->248216638],
Cell[1056354, 21133, 749, 16, 69, "Output",ExpressionUUID->"65292041-fa25-4312-a865-f68a7ce03d4b",
 CellID->246903645]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1057152, 21155, 330, 6, 57, "MathCaption",ExpressionUUID->"55f76ca7-ed2a-4be2-a4c0-edfc6ad01fe8",
 CellID->639660458],
Cell[CellGroupData[{
Cell[1057507, 21165, 304, 6, 25, "Input",ExpressionUUID->"14461f20-d2ce-4e42-bb38-edf34121efe5",
 CellID->58663324],
Cell[1057814, 21173, 1471, 32, 69, "Output",ExpressionUUID->"6f7b870d-34d3-43cc-ab44-aa5d83248af6",
 CellID->613785148]
}, Open  ]],
Cell[1059300, 21208, 4954, 86, 109, "Input",ExpressionUUID->"f377a967-33c1-43bb-b8de-5addbeef8559",
 CellID->61450319]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1064303, 21300, 181, 2, 43, "Subsubsection",ExpressionUUID->"57beac2b-9ecc-4871-9c9c-60d9880e1b0c",
 CellID->583792581],
Cell[CellGroupData[{
Cell[1064509, 21306, 517, 9, 91, "MathCaption",ExpressionUUID->"1b369d83-083d-4174-b365-b72331596852",
 CellID->328431948],
Cell[1065029, 21317, 2109, 40, 63, "Input",ExpressionUUID->"ef00dd01-a218-45e8-84ea-59f3800adfdd",
 CellID->163219828]
}, Open  ]],
Cell[CellGroupData[{
Cell[1067175, 21362, 217, 2, 40, "MathCaption",ExpressionUUID->"b0c70c5b-5ada-459a-babc-de9ca2855d56",
 CellID->150773254],
Cell[1067395, 21366, 1337, 26, 67, "Input",ExpressionUUID->"ac0e4aaf-b37e-4f51-9d83-0d67ceb0e590",
 CellID->4980958]
}, Open  ]],
Cell[CellGroupData[{
Cell[1068769, 21397, 225, 3, 40, "MathCaption",ExpressionUUID->"a4185259-817d-4f81-b6a0-8775fcc1bf85",
 CellID->663660797],
Cell[CellGroupData[{
Cell[1069019, 21404, 293, 6, 25, "Input",ExpressionUUID->"04d08c68-4410-4dfc-8a98-919d122206eb",
 CellID->312690437],
Cell[1069315, 21412, 706, 16, 78, "Output",ExpressionUUID->"1d6cd92f-b7f1-4415-9b1d-b9a8cd9c4440",
 CellID->613032058]
}, Open  ]]
}, Open  ]],
Cell[1070048, 21432, 737, 11, 142, "MathCaption",ExpressionUUID->"947f3e82-6cc3-40d2-88b7-5d99fa9c6f74",
 CellID->440131695]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1070834, 21449, 185, 2, 42, "Subsection",ExpressionUUID->"d8e72b12-edbc-468d-8708-68f5fe3ea00c",
 CellID->144939533],
Cell[CellGroupData[{
Cell[1071044, 21455, 416, 7, 74, "MathCaption",ExpressionUUID->"bfade2f7-0573-4934-a7f2-798bee0c1219",
 CellID->112941645],
Cell[CellGroupData[{
Cell[1071485, 21466, 345, 7, 25, "Input",ExpressionUUID->"e6d9d140-ea56-4624-ad44-d00ff46ff038",
 CellID->538050170],
Cell[1071833, 21475, 79092, 1496, 590, "Output",ExpressionUUID->"bb6271f3-0f4e-4d2e-b36b-42cb9f4887ed",
 CellID->375574792]
}, Open  ]]
}, Open  ]],
Cell[1150952, 22975, 499, 16, 40, "MathCaption",ExpressionUUID->"911eabb8-f852-433a-8ae7-7a68d2b39b26",
 CellID->22858985],
Cell[CellGroupData[{
Cell[1151476, 22995, 200, 2, 40, "MathCaption",ExpressionUUID->"e3da6b67-b68e-42e6-8543-27faa58cbbd7",
 CellID->168140189],
Cell[1151679, 22999, 9129, 154, 63, "Input",ExpressionUUID->"541db6b0-b44c-487a-849a-2af08eca2c0b",
 CellID->171493722]
}, Open  ]],
Cell[CellGroupData[{
Cell[1160845, 23158, 507, 8, 91, "MathCaption",ExpressionUUID->"2049f498-61e9-4b07-a3e5-5896a27acd18",
 CellID->425199380],
Cell[CellGroupData[{
Cell[1161377, 23170, 334, 7, 25, "Input",ExpressionUUID->"05e3b8fd-9fbd-4279-91b9-29010d66f39a",
 CellID->567180853],
Cell[1161714, 23179, 391, 11, 55, "Output",ExpressionUUID->"2df18776-7826-4eda-9ee2-b47878a5f618",
 CellID->171827270]
}, Open  ]],
Cell[1162120, 23193, 9541, 161, 53, "Input",ExpressionUUID->"c63e7c61-f079-4c6a-8d46-6e61b1bc9ce7",
 CellID->205450397]
}, Open  ]],
Cell[1171676, 23357, 364, 6, 74, "MathCaption",ExpressionUUID->"097f7c7a-db48-428d-ae22-44ab9e4f77c9",
 CellID->260924008],
Cell[CellGroupData[{
Cell[1172065, 23367, 254, 3, 40, "MathCaption",ExpressionUUID->"a5692f5c-bd25-4168-b172-b2ae2232effa",
 CellID->570772345],
Cell[CellGroupData[{
Cell[1172344, 23374, 292, 6, 25, "Input",ExpressionUUID->"b2d43888-27d6-4393-9ff2-ee8b8fbac695",
 CellID->374203769],
Cell[1172639, 23382, 193, 3, 24, "Output",ExpressionUUID->"4b1ff8d8-7031-44c1-9eaf-1ff5ceeb8268",
 CellID->467322294]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1172881, 23391, 261, 5, 40, "MathCaption",ExpressionUUID->"8e33ff63-35b1-435a-9f8c-e4b7bb088a94",
 CellID->12645158],
Cell[CellGroupData[{
Cell[1173167, 23400, 306, 6, 25, "Input",ExpressionUUID->"b5a92f35-b9ea-4589-a437-678d3516d40b",
 CellID->135890274],
Cell[1173476, 23408, 174, 3, 24, "Output",ExpressionUUID->"80fe7841-b456-4359-a2d4-a0587dcc88bc",
 CellID->241632484]
}, Open  ]]
}, Open  ]],
Cell[1173677, 23415, 376, 6, 74, "MathCaption",ExpressionUUID->"2d6de947-ac1f-42f0-96e2-959d87c987c8",
 CellID->400266598],
Cell[CellGroupData[{
Cell[1174078, 23425, 205, 2, 40, "MathCaption",ExpressionUUID->"852f7470-90d3-437a-b27e-77217fdafaa6",
 CellID->33841937],
Cell[CellGroupData[{
Cell[1174308, 23431, 244, 4, 25, "Input",ExpressionUUID->"2bcd8fbb-d48a-41a3-aa49-22f016fc7001",
 CellID->70495569],
Cell[1174555, 23437, 18134, 377, 273, "Output",ExpressionUUID->"4e2ab228-392c-42f7-a647-ba772384fb1c",
 CellID->673523550]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1192738, 23820, 197, 2, 40, "MathCaption",ExpressionUUID->"66a4129b-b8de-4223-af40-f3ba0e4a83aa",
 CellID->239448707],
Cell[CellGroupData[{
Cell[1192960, 23826, 276, 5, 25, "Input",ExpressionUUID->"2f951124-be2a-4193-ab0f-e61e62337069",
 CellID->929990369],
Cell[1193239, 23833, 41986, 693, 296, "Output",ExpressionUUID->"3400625f-4d22-4fb0-98d7-3908ce2d8524",
 CellID->205478441]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1235274, 24532, 212, 2, 40, "MathCaption",ExpressionUUID->"1efcd010-f148-44f8-9840-ab9b8ad92bbb",
 CellID->236205314],
Cell[CellGroupData[{
Cell[1235511, 24538, 348, 7, 25, "Input",ExpressionUUID->"f5679b13-f1ae-4647-83bf-7e7b53719144",
 CellID->102041104],
Cell[1235862, 24547, 13083, 219, 85, "Output",ExpressionUUID->"b4e0f931-04d9-40da-827e-3eabd3e22857",
 CellID->102153963]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1248994, 24772, 180, 2, 40, "MathCaption",ExpressionUUID->"5cfb8902-ccfd-4fef-bcd2-11b88deca8c1",
 CellID->804407574],
Cell[CellGroupData[{
Cell[1249199, 24778, 424, 9, 25, "Input",ExpressionUUID->"7e3fe2f0-dfba-4235-b3de-12c421aa24ff",
 CellID->187410827],
Cell[1249626, 24789, 7522, 128, 60, "Output",ExpressionUUID->"aeb9ff56-bf45-4d60-a066-428225429bb3",
 CellID->5099045]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1257197, 24923, 189, 2, 40, "MathCaption",ExpressionUUID->"d924e20f-c754-44d6-8614-5dadda8086e9",
 CellID->10106420],
Cell[CellGroupData[{
Cell[1257411, 24929, 452, 10, 25, "Input",ExpressionUUID->"ba1263e7-3ab7-4a1b-91df-1850213b7473",
 CellID->256027672],
Cell[1257866, 24941, 13083, 219, 85, "Output",ExpressionUUID->"d7c9ef53-2a3e-4ff3-92f3-51a0ef8eac35",
 CellID->142891668]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1270998, 25166, 184, 2, 40, "MathCaption",ExpressionUUID->"b444fe3b-fc5b-48cc-b975-ed74710cfd17",
 CellID->35870364],
Cell[CellGroupData[{
Cell[1271207, 25172, 521, 12, 25, "Input",ExpressionUUID->"0d016f21-1803-40ec-93f9-fb80d3b9c55c",
 CellID->5247408],
Cell[1271731, 25186, 1712, 32, 26, "Output",ExpressionUUID->"3fdd1bd2-45f2-497d-91ba-12adcee82f01",
 CellID->269955997]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1273492, 25224, 211, 2, 40, "MathCaption",ExpressionUUID->"6acd888f-63dc-4d97-8f1a-358a0b122c19",
 CellID->23229569],
Cell[CellGroupData[{
Cell[1273728, 25230, 536, 13, 25, "Input",ExpressionUUID->"db3a7d47-8e5b-44a2-b29b-74436af3863b",
 CellID->320376685],
Cell[1274267, 25245, 2160, 40, 26, "Output",ExpressionUUID->"259070bf-a979-4a5e-86ea-01e1c1a6108a",
 CellID->63208684]
}, Open  ]]
}, Open  ]],
Cell[1276454, 25289, 212, 2, 40, "MathCaption",ExpressionUUID->"9064cf50-2015-4005-b70c-18b5155f0b24",
 CellID->549956040],
Cell[CellGroupData[{
Cell[1276691, 25295, 193, 2, 40, "MathCaption",ExpressionUUID->"022d7431-92c2-4d65-b7ba-40c6419efa96",
 CellID->110670113],
Cell[CellGroupData[{
Cell[1276909, 25301, 438, 11, 25, "Input",ExpressionUUID->"25216f33-ac06-45e4-bb9e-88719457166b",
 CellID->564144304],
Cell[1277350, 25314, 198, 3, 24, "Output",ExpressionUUID->"723792cd-b4cd-4408-9d47-f0c1ebd27802",
 CellID->910748]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1277597, 25323, 190, 2, 40, "MathCaption",ExpressionUUID->"3e986bb3-0a7c-449e-a0a4-0ab6a5541478",
 CellID->177927844],
Cell[CellGroupData[{
Cell[1277812, 25329, 442, 11, 25, "Input",ExpressionUUID->"e4edfe01-bc95-4a2c-a226-39ce18408673",
 CellID->92571359],
Cell[1278257, 25342, 343, 9, 24, "Output",ExpressionUUID->"48cb2c1f-2f44-4593-84a3-0a695f6f7a1d",
 CellID->194295042]
}, Open  ]]
}, Open  ]],
Cell[1278627, 25355, 242, 4, 40, "MathCaption",ExpressionUUID->"3892254a-83c4-4894-9890-0976a5efde86",
 CellID->58341714],
Cell[CellGroupData[{
Cell[1278894, 25363, 194, 2, 40, "MathCaption",ExpressionUUID->"09e0ce8a-a0fe-43e0-9fdc-787c3e9cf893",
 CellID->135823499],
Cell[CellGroupData[{
Cell[1279113, 25369, 331, 7, 25, "Input",ExpressionUUID->"10fe80bb-7a77-48b9-b049-41b3b0d618f8",
 CellID->247630327],
Cell[1279447, 25378, 7172, 123, 60, "Output",ExpressionUUID->"582e59a0-cbf6-442e-b05f-8003102716ce",
 CellID->3886066]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1286668, 25507, 225, 3, 40, "MathCaption",ExpressionUUID->"300d72be-996f-4c0c-97ec-3f3e06024ca7",
 CellID->217747877],
Cell[CellGroupData[{
Cell[1286918, 25514, 274, 5, 25, "Input",ExpressionUUID->"ece3787a-a855-432d-8b05-9681dcda6e0b",
 CellID->792322631],
Cell[1287195, 25521, 174, 3, 24, "Output",ExpressionUUID->"4cd27576-a593-48b0-96ee-a8b953cde479",
 CellID->263786884]
}, Open  ]],
Cell[CellGroupData[{
Cell[1287406, 25529, 234, 4, 25, "Input",ExpressionUUID->"376bace8-8272-4ce1-bf60-748b9d8508c8",
 CellID->98079301],
Cell[1287643, 25535, 173, 3, 24, "Output",ExpressionUUID->"98c76bee-dc18-4fb7-b2f7-5845bb66f875",
 CellID->15508088]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1287865, 25544, 179, 2, 40, "MathCaption",ExpressionUUID->"15e17f3a-fb3a-4926-8d67-3ac302473a25",
 CellID->391043996],
Cell[CellGroupData[{
Cell[1288069, 25550, 343, 7, 25, "Input",ExpressionUUID->"36fe7f46-0380-479e-b351-5c070f755e87",
 CellID->85880141],
Cell[1288415, 25559, 79013, 1496, 590, "Output",ExpressionUUID->"02b6e5b2-4a23-43c7-9931-50817ab18794",
 CellID->427310048]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1367477, 27061, 195, 2, 40, "MathCaption",ExpressionUUID->"9cdbb7ae-c3ed-4fa3-904e-6949bec3dfff",
 CellID->1059363026],
Cell[CellGroupData[{
Cell[1367697, 27067, 336, 7, 25, "Input",ExpressionUUID->"805aebab-d225-46c7-b6d9-c275c4b4663e",
 CellID->117185868],
Cell[1368036, 27076, 365, 11, 55, "Output",ExpressionUUID->"a76c37df-3600-4c3c-b2c0-a803d3c16ad3",
 CellID->99254655]
}, Open  ]],
Cell[CellGroupData[{
Cell[1368438, 27092, 370, 8, 25, "Input",ExpressionUUID->"cab22047-403f-489c-9099-bf1fe5bf3650",
 CellID->579642001],
Cell[1368811, 27102, 235, 4, 24, "Output",ExpressionUUID->"adc62775-06d6-42e7-9c76-33449dd18740",
 CellID->208505507]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1369119, 27114, 205, 3, 45, "Section",ExpressionUUID->"807da35a-2d0d-4879-92c8-862c4b6b937b",
 CellID->396359799],
Cell[1369327, 27119, 555, 16, 74, "MathCaption",ExpressionUUID->"7483bfdf-16f5-4b2c-adda-385f3dc9b528",
 CellID->434343286],
Cell[CellGroupData[{
Cell[1369907, 27139, 195, 2, 40, "MathCaption",ExpressionUUID->"497dedda-12ff-4e13-98c4-b7ca2c7f2bfa",
 CellID->6442517],
Cell[CellGroupData[{
Cell[1370127, 27145, 258, 6, 25, "Input",ExpressionUUID->"429c3b7a-2a57-4f18-88e3-22ed5ac496d7",
 CellID->97223972],
Cell[1370388, 27153, 631, 18, 24, "Output",ExpressionUUID->"404405cb-a032-48c6-8f3c-7a1a49b4506c",
 CellID->24553865]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1371068, 27177, 191, 2, 40, "MathCaption",ExpressionUUID->"805fdcf0-2bcf-4392-ae9a-cd14f80b298a",
 CellID->253293210],
Cell[CellGroupData[{
Cell[1371284, 27183, 326, 7, 25, "Input",ExpressionUUID->"97e2fcf4-21db-4046-8b84-a57f291d82d0",
 CellID->63359739],
Cell[1371613, 27192, 526, 15, 24, "Output",ExpressionUUID->"bc681693-fef3-4cfd-9251-a710aa77586f",
 CellID->6522223]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1372188, 27213, 253, 3, 40, "MathCaption",ExpressionUUID->"adda6eaa-8e65-40c3-9c30-f56bb26b45d4",
 CellID->220844421],
Cell[CellGroupData[{
Cell[1372466, 27220, 343, 7, 25, "Input",ExpressionUUID->"3a3864fe-b01b-409f-ac37-399086f16bda",
 CellID->214912],
Cell[1372812, 27229, 1987, 52, 95, "Output",ExpressionUUID->"0b2eb987-1041-4c45-bf8a-d5d45494b2f4",
 CellID->25845793]
}, Open  ]]
}, Open  ]],
Cell[1374826, 27285, 317, 5, 57, "MathCaption",ExpressionUUID->"43d6a01c-1c16-4119-92b3-3eaf65e056d1",
 CellID->75517260],
Cell[CellGroupData[{
Cell[1375168, 27294, 317, 6, 40, "MathCaption",ExpressionUUID->"fdce58ae-2231-4c2c-a614-3887fa58115d",
 CellID->162588612],
Cell[CellGroupData[{
Cell[1375510, 27304, 278, 5, 25, "Input",ExpressionUUID->"36587a29-d2d0-49c4-bad4-2c9583732f5f",
 CellID->56544164],
Cell[1375791, 27311, 11555, 194, 69, "Output",ExpressionUUID->"feaf95a5-0376-4000-8d2e-337e540c5350",
 CellID->456381390]
}, Open  ]]
}, Open  ]],
Cell[1387373, 27509, 371, 6, 74, "MathCaption",ExpressionUUID->"dd4f666c-8caf-4b0b-9a7a-d177bb6ae7ea",
 CellID->608704478],
Cell[CellGroupData[{
Cell[1387769, 27519, 258, 5, 40, "MathCaption",ExpressionUUID->"4778d41a-2c3b-4fb7-98c0-c04e49030aba",
 CellID->473619221],
Cell[1388030, 27526, 226, 4, 24, "Input",ExpressionUUID->"7193699f-cbad-48df-ae80-547c41f3828f",
 CellID->106841266],
Cell[CellGroupData[{
Cell[1388281, 27534, 277, 5, 25, "Input",ExpressionUUID->"12df89f7-1acc-479e-8c80-1b027e732a8f",
 CellID->61033979],
Cell[1388561, 27541, 196, 3, 24, "Output",ExpressionUUID->"5969c65f-c99f-4f08-a2b6-79434c8759b4",
 CellID->59630373]
}, Open  ]],
Cell[CellGroupData[{
Cell[1388794, 27549, 235, 4, 25, "Input",ExpressionUUID->"04fe40e9-6fd1-4489-b464-f197385d75e5",
 CellID->538171443],
Cell[1389032, 27555, 170, 3, 24, "Output",ExpressionUUID->"b78f9e6b-3b13-4372-abe9-df66008806a7",
 CellID->90431125]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1389251, 27564, 303, 5, 40, "MathCaption",ExpressionUUID->"87914f41-0615-4642-bf4b-3652853ac9e5",
 CellID->379632069],
Cell[CellGroupData[{
Cell[1389579, 27573, 307, 5, 25, "Input",ExpressionUUID->"5a37a233-6af9-4c4f-9c88-6e0f3517e70b",
 CellID->232513693],
Cell[1389889, 27580, 225, 4, 24, "Output",ExpressionUUID->"83eb7cad-6477-41ff-a2b5-866e4f35b450",
 CellID->627297665]
}, Open  ]],
Cell[CellGroupData[{
Cell[1390151, 27589, 374, 8, 25, "Input",ExpressionUUID->"0821aeb8-897b-4547-bb56-5ff5b51392d4",
 CellID->108164460],
Cell[1390528, 27599, 901, 25, 21, "Echo",ExpressionUUID->"5914f933-8bb3-4e9c-92a7-a955d60b36ec",
 CellID->106645799],
Cell[1391432, 27626, 174, 3, 24, "Output",ExpressionUUID->"9436890c-b37d-46b2-a05f-b321d727978f",
 CellID->590840625]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1391655, 27635, 275, 3, 40, "MathCaption",ExpressionUUID->"8900585a-20a4-4f56-90a7-6545ae7adadd",
 CellID->81068847],
Cell[CellGroupData[{
Cell[1391955, 27642, 567, 13, 25, "Input",ExpressionUUID->"a97179cc-6b85-48a4-9487-ce2d06a5b126",
 CellID->34391304],
Cell[1392525, 27657, 251, 4, 24, "Output",ExpressionUUID->"88470a52-4c04-4dce-a470-249d380bcc0a",
 CellID->571946354]
}, Open  ]]
}, Open  ]],
Cell[1392803, 27665, 690, 14, 57, "MathCaption",ExpressionUUID->"99e3f5c6-22ed-4c8f-a5e5-6b0d02c799ba",
 CellID->667377072]
}, Closed]],
Cell[CellGroupData[{
Cell[1393530, 27684, 206, 3, 45, "Section",ExpressionUUID->"49888560-4acf-40f7-acbe-4c29c877ef2a",
 CellID->645694398],
Cell[CellGroupData[{
Cell[1393761, 27691, 214, 2, 40, "MathCaption",ExpressionUUID->"dab32751-7fe4-42f8-988e-18e668dc4f85",
 CellID->478421323],
Cell[CellGroupData[{
Cell[1394000, 27697, 413, 9, 25, "Input",ExpressionUUID->"56fcecae-9ed5-4142-a8f2-3f3fb4dda47c",
 CellID->542729463],
Cell[1394416, 27708, 3962, 91, 250, "Output",ExpressionUUID->"eec87719-43d3-42cc-a766-9784791c77ca",
 CellID->25169857]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1398427, 27805, 215, 3, 40, "MathCaption",ExpressionUUID->"88786608-25c5-45d8-8697-ffb397f6d0e9",
 CellID->59602588],
Cell[CellGroupData[{
Cell[1398667, 27812, 303, 6, 25, "Input",ExpressionUUID->"715a7406-b524-4f24-aa11-9f368e1dcfb0",
 CellID->141527026],
Cell[1398973, 27820, 728, 14, 69, "Output",ExpressionUUID->"0dff4e2e-84e5-46d4-823b-54b73c2e9565",
 CellID->387932858]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1399750, 27840, 254, 6, 40, "MathCaption",ExpressionUUID->"9a7bb339-5acc-450c-90aa-457b2e7a0a8b",
 CellID->909413053],
Cell[CellGroupData[{
Cell[1400029, 27850, 392, 8, 25, "Input",ExpressionUUID->"20bac007-b674-4699-9022-8c0f5d30c013",
 CellID->285728069],
Cell[1400424, 27860, 2310, 42, 235, "Output",ExpressionUUID->"478ab664-36b3-4451-b715-fd5da17c7ce2",
 CellID->291815495]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1402795, 27909, 178, 2, 45, "Section",ExpressionUUID->"eac1bd43-a23c-4346-94e1-517a54020881",
 CellID->32678798],
Cell[CellGroupData[{
Cell[1402998, 27915, 394, 8, 57, "MathCaption",ExpressionUUID->"e54e82a6-dbce-4362-9169-a9975857f455",
 CellID->123284224],
Cell[CellGroupData[{
Cell[1403417, 27927, 624, 13, 25, "Input",ExpressionUUID->"3a40e6c4-01d6-4f96-8bd0-a7f195673010",
 CellID->841619866],
Cell[1404044, 27942, 1959, 43, 77, "Output",ExpressionUUID->"d40d7588-7387-4503-990c-25053f44c00b",
 CellID->89679823]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1406052, 27991, 183, 2, 40, "MathCaption",ExpressionUUID->"93c199ef-1dcf-4716-a2f7-32565162c0eb",
 CellID->24958883],
Cell[CellGroupData[{
Cell[1406260, 27997, 456, 10, 25, "Input",ExpressionUUID->"a05b1c3d-d8fa-43fb-ab74-5b0e0d9534c1",
 CellID->484647955],
Cell[1406719, 28009, 435, 9, 42, "Output",ExpressionUUID->"dfc55999-6db3-493f-95aa-675d46d6f0a3",
 CellID->123777944]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1407203, 28024, 216, 3, 40, "MathCaption",ExpressionUUID->"51599647-8f38-4c09-ba4b-d079463656aa",
 CellID->837471449],
Cell[CellGroupData[{
Cell[1407444, 28031, 541, 12, 25, "Input",ExpressionUUID->"a74b27e6-7e06-41c1-8edf-440bf1936693",
 CellID->724085147],
Cell[1407988, 28045, 868, 22, 24, "Output",ExpressionUUID->"a1d9c8f1-a109-4904-a164-af271fee0430",
 CellID->96753963]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1408905, 28073, 187, 2, 40, "MathCaption",ExpressionUUID->"44b0e377-0c8c-46e7-91f5-5640159abd91",
 CellID->505704633],
Cell[CellGroupData[{
Cell[1409117, 28079, 493, 11, 25, "Input",ExpressionUUID->"81ae2a2e-003a-4e0e-b19c-dd1fa212fff1",
 CellID->220964068],
Cell[1409613, 28092, 288, 7, 24, "Output",ExpressionUUID->"90f5a01e-f50c-4e1a-ac65-0307a3e292da",
 CellID->74427375]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1409950, 28105, 277, 4, 40, "MathCaption",ExpressionUUID->"ef31bdc3-7a7b-478d-a9df-6d13a2c6e136",
 CellID->733329592],
Cell[CellGroupData[{
Cell[1410252, 28113, 640, 14, 25, "Input",ExpressionUUID->"037bf1b1-4429-4ecb-8d0a-49b30135a33c",
 CellID->472360365],
Cell[1410895, 28129, 1788, 45, 60, "Output",ExpressionUUID->"d65f0a6a-bdcf-4a7f-85f8-ae6da196fa34",
 CellID->45157847]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1412732, 28180, 187, 2, 40, "MathCaption",ExpressionUUID->"068eeb79-7927-4169-be98-c524cd2500ea",
 CellID->232625522],
Cell[CellGroupData[{
Cell[1412944, 28186, 515, 12, 25, "Input",ExpressionUUID->"0efe243a-63d2-4cdc-85cf-1f19f74ea8e1",
 CellID->129412639],
Cell[1413462, 28200, 438, 9, 42, "Output",ExpressionUUID->"d0d3a66b-109a-421b-9050-78f24f1c1453",
 CellID->294220470]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1413949, 28215, 293, 6, 57, "MathCaption",ExpressionUUID->"4b9a050f-32fa-451a-bac4-d8ef338e7ebb",
 CellID->979377819],
Cell[CellGroupData[{
Cell[1414267, 28225, 728, 21, 25, "Input",ExpressionUUID->"db9223bc-91e4-4f53-a226-b4e760d7eda0",
 CellID->174898405],
Cell[1414998, 28248, 990, 24, 42, "Output",ExpressionUUID->"e3291f4d-e4f6-4261-8a8d-df5edf23dde4",
 CellID->408943794]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1416037, 28278, 286, 6, 40, "MathCaption",ExpressionUUID->"c1f934dc-d3e6-449f-b0b9-64c63eb50be6",
 CellID->559719523],
Cell[CellGroupData[{
Cell[1416348, 28288, 606, 15, 25, "Input",ExpressionUUID->"616ed975-f9df-42c3-9189-7aa024bf0bd5",
 CellID->359245144],
Cell[1416957, 28305, 1157, 28, 42, "Output",ExpressionUUID->"ccfeaaf9-a77c-49e6-b431-80aa0267357b",
 CellID->162633939]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1418163, 28339, 459, 12, 41, "MathCaption",ExpressionUUID->"49b0ae1b-f115-420e-a74a-9f0a60daa6bd",
 CellID->306011383],
Cell[CellGroupData[{
Cell[1418647, 28355, 918, 27, 43, "Input",ExpressionUUID->"d89d3e87-2f7e-4938-a750-d180213c8877",
 CellID->884651642],
Cell[1419568, 28384, 5531, 190, 136, "Output",ExpressionUUID->"555a95b2-dad9-4348-abe6-9fc80ab72fd2",
 CellID->320654796]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1425148, 28580, 188, 2, 40, "MathCaption",ExpressionUUID->"97f20388-d472-480e-9907-179c765d3fc5",
 CellID->22585214],
Cell[CellGroupData[{
Cell[1425361, 28586, 230, 4, 25, "Input",ExpressionUUID->"78c44ea5-b68d-4257-aafc-7352432ccaf2",
 CellID->548368980],
Cell[1425594, 28592, 2374, 67, 83, "Output",ExpressionUUID->"b21eae70-47a7-4c6a-a07f-b35f1c609c75",
 CellID->266909173]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1428017, 28665, 208, 2, 40, "MathCaption",ExpressionUUID->"cdbcd419-8839-43cd-bab5-048193b552f0",
 CellID->305030941],
Cell[CellGroupData[{
Cell[1428250, 28671, 275, 5, 25, "Input",ExpressionUUID->"54844170-c23b-4eb7-bedb-63f808af91e0",
 CellID->206631954],
Cell[1428528, 28678, 380, 10, 28, "Output",ExpressionUUID->"b500366e-f9a0-4c94-ac23-8a4ac6367df0",
 CellID->390480037]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1428957, 28694, 194, 2, 40, "MathCaption",ExpressionUUID->"c038b589-14ad-4b1d-9f1b-71965f63bb06",
 CellID->240106575],
Cell[CellGroupData[{
Cell[1429176, 28700, 556, 15, 25, "Input",ExpressionUUID->"09639f36-1c3f-4b05-8983-809a44c7eef4",
 CellID->154729335],
Cell[1429735, 28717, 47128, 829, 264, "Output",ExpressionUUID->"f154aec9-1c63-4687-af42-d0ccf2bb4af5",
 CellID->256275073]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1476912, 29552, 454, 12, 41, "MathCaption",ExpressionUUID->"c49c47bb-07bf-4089-86bb-5876026c9710",
 CellID->700662694],
Cell[CellGroupData[{
Cell[1477391, 29568, 385, 11, 25, "Input",ExpressionUUID->"a98557a9-9b98-4467-9b05-2a75aa7ee5c5",
 CellID->70632808],
Cell[1477779, 29581, 728, 13, 42, "Output",ExpressionUUID->"e8303556-47fa-44dc-be41-04fab469a82a",
 CellID->542659924]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1478556, 29600, 223, 3, 40, "MathCaption",ExpressionUUID->"cad94071-5735-4208-946d-8633c71f82c6",
 CellID->444986081],
Cell[CellGroupData[{
Cell[1478804, 29607, 691, 17, 25, "Input",ExpressionUUID->"c0c0989c-ee18-4052-b455-a6d37724b89c",
 CellID->991815813],
Cell[1479498, 29626, 734, 17, 24, "Output",ExpressionUUID->"0f978c9a-ffce-47f3-a31b-a17e7d767b52",
 CellID->33854908]
}, Open  ]],
Cell[1480247, 29646, 260, 6, 26, "ExampleDelimiter",ExpressionUUID->"26a11390-68be-4741-bd0b-257c701cdbaa",
 CellID->14107563]
}, Open  ]],
Cell[CellGroupData[{
Cell[1480544, 29657, 1741, 50, 60, "MathCaption",ExpressionUUID->"88cb37a6-3315-4822-b6f3-13fb9720dfb8",
 CellID->771301361],
Cell[CellGroupData[{
Cell[1482310, 29711, 656, 17, 25, "Input",ExpressionUUID->"f7552833-4362-40df-b886-80a1a576e5dd",
 CellID->535666113],
Cell[1482969, 29730, 412, 7, 24, "Output",ExpressionUUID->"835b6aa8-cabc-4a9d-8fcc-ef6f20ff0999",
 CellID->27544576]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1483430, 29743, 1384, 40, 41, "MathCaption",ExpressionUUID->"507f59f5-e50f-482c-82e3-a22514659678",
 CellID->444708281],
Cell[CellGroupData[{
Cell[1484839, 29787, 645, 18, 25, "Input",ExpressionUUID->"5b6fc599-e64c-4912-894b-4ca97226a080",
 CellID->887464862],
Cell[1485487, 29807, 361, 6, 24, "Output",ExpressionUUID->"f697d21b-748f-4239-8677-d899dbb70ca3",
 CellID->141130879]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1485897, 29819, 221, 3, 40, "MathCaption",ExpressionUUID->"dbb75bbd-ba6c-4d7e-810c-301c7eef1ecd",
 CellID->486162817],
Cell[CellGroupData[{
Cell[1486143, 29826, 270, 5, 25, "Input",ExpressionUUID->"ad01a415-f04d-42f8-9562-c0fdbb2a247c",
 CellID->615462631],
Cell[1486416, 29833, 340, 6, 24, "Output",ExpressionUUID->"ba76ab0b-b0b0-4a5c-9eaa-34d8c0e08a80",
 CellID->86302315]
}, Open  ]],
Cell[1486771, 29842, 260, 6, 26, "ExampleDelimiter",ExpressionUUID->"0c2ec0db-99f8-49c3-ad10-05c18b8ff704",
 CellID->14107564]
}, Open  ]],
Cell[CellGroupData[{
Cell[1487068, 29853, 1317, 39, 41, "MathCaption",ExpressionUUID->"12d95e0b-3357-46b9-8228-02dbd8d5f70e",
 CellID->177535240],
Cell[CellGroupData[{
Cell[1488410, 29896, 713, 18, 25, "Input",ExpressionUUID->"eb5243ad-37c4-464d-8548-9ddc6f6ee58b",
 CellID->661797484],
Cell[1489126, 29916, 680, 17, 24, "Output",ExpressionUUID->"cf32f940-542b-4426-a494-db342588d3ce",
 CellID->4477802]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1489855, 29939, 1172, 30, 60, "MathCaption",ExpressionUUID->"9833fc09-0507-48b0-9628-3da3e6ba1653",
 CellID->445973593],
Cell[CellGroupData[{
Cell[1491052, 29973, 1302, 33, 96, "Input",ExpressionUUID->"567e5de2-e258-4c15-b489-04cabbda0e04",
 CellID->869163183],
Cell[1492357, 30008, 606, 14, 38, "Output",ExpressionUUID->"6a7ba05b-87fd-43d7-80f7-f59039185438",
 CellID->56459738]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1493012, 30028, 324, 7, 40, "MathCaption",ExpressionUUID->"91c3c161-1737-4015-8ba4-ac5c75fb472a",
 CellID->686745089],
Cell[CellGroupData[{
Cell[1493361, 30039, 1249, 33, 96, "Input",ExpressionUUID->"08342840-648c-44c8-8431-aa966b2c60ee",
 CellID->674295727],
Cell[1494613, 30074, 630, 15, 38, "Output",ExpressionUUID->"88ab02f2-9c85-4be6-a491-3d0a77cdbd08",
 CellID->504109667]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1495304, 30096, 200, 3, 45, "Section",ExpressionUUID->"dae49e06-dc2a-467f-a85c-5603202a1d0a",
 CellID->844981579],
Cell[CellGroupData[{
Cell[1495529, 30103, 286, 4, 40, "MathCaption",ExpressionUUID->"a944aa67-117c-410d-b531-213c1b4d9d91",
 CellID->694507399],
Cell[CellGroupData[{
Cell[1495840, 30111, 505, 13, 25, "Input",ExpressionUUID->"65ef81a9-6627-48fc-91e1-199beb392379",
 CellID->875714386],
Cell[1496348, 30126, 598, 14, 24, "Output",ExpressionUUID->"72a11c81-e6d6-4596-9748-82ccbcde0016",
 CellID->242003258]
}, Open  ]],
Cell[1496961, 30143, 261, 6, 26, "ExampleDelimiter",ExpressionUUID->"548c40d2-9bc6-4475-9cb7-2618ace248d1",
 CellID->112658320]
}, Open  ]],
Cell[CellGroupData[{
Cell[1497259, 30154, 236, 3, 40, "MathCaption",ExpressionUUID->"969c7aee-e0a9-493f-a91b-b62746b479be",
 CellID->327143208],
Cell[CellGroupData[{
Cell[1497520, 30161, 576, 13, 25, "Input",ExpressionUUID->"2ec72d0c-2952-4567-94b4-a6b2ef859521",
 CellID->283656556],
Cell[1498099, 30176, 973, 26, 24, "Output",ExpressionUUID->"9ccc8339-e6e4-4fc9-8763-f1dcc98a0af8",
 CellID->121246890]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1499121, 30208, 233, 3, 40, "MathCaption",ExpressionUUID->"155e1765-89ad-4e48-a483-0c47f2abb86b",
 CellID->158433383],
Cell[CellGroupData[{
Cell[1499379, 30215, 536, 14, 25, "Input",ExpressionUUID->"920b9332-cd2e-4a1a-95aa-3af1ed757202",
 CellID->499374772],
Cell[1499918, 30231, 461, 12, 24, "Output",ExpressionUUID->"75276d12-dd1c-49ae-81b3-12bbc18fadac",
 CellID->171051003]
}, Open  ]],
Cell[1500394, 30246, 261, 6, 26, "ExampleDelimiter",ExpressionUUID->"be682dd5-00fa-4cc4-acda-8b7f313209dc",
 CellID->519906287]
}, Open  ]],
Cell[CellGroupData[{
Cell[1500692, 30257, 270, 4, 40, "MathCaption",ExpressionUUID->"e0d777b5-2516-4700-aa24-aff6f1513f46",
 CellID->858830434],
Cell[CellGroupData[{
Cell[1500987, 30265, 603, 17, 25, "Input",ExpressionUUID->"893e219a-b964-4906-b220-e837d68eab36",
 CellID->634576773],
Cell[1501593, 30284, 2422, 77, 77, "Output",ExpressionUUID->"4c2140e6-c76c-4560-9789-02b32634e170",
 CellID->226659544]
}, Open  ]],
Cell[1504030, 30364, 261, 6, 26, "ExampleDelimiter",ExpressionUUID->"00957d36-3b2d-46bc-95dd-91866f27fe0e",
 CellID->490055446]
}, Open  ]],
Cell[CellGroupData[{
Cell[1504328, 30375, 339, 5, 40, "MathCaption",ExpressionUUID->"4342f691-4bc1-465a-a81f-8ef916ea81ce",
 CellID->535860945],
Cell[CellGroupData[{
Cell[1504692, 30384, 667, 16, 25, "Input",ExpressionUUID->"1caefee4-4a4d-4150-bd62-4f7e22ad8ff3",
 CellID->630622865],
Cell[1505362, 30402, 3466, 110, 95, "Output",ExpressionUUID->"7a3df43e-f6cc-4c9e-be6e-17a80c545361",
 CellID->313507277]
}, Open  ]],
Cell[1508843, 30515, 260, 6, 26, "ExampleDelimiter",ExpressionUUID->"e1f489ff-f249-4336-bcb1-ef172450e1dc",
 CellID->14107565]
}, Open  ]],
Cell[CellGroupData[{
Cell[1509140, 30526, 335, 5, 40, "MathCaption",ExpressionUUID->"f0356223-7d11-43f9-9048-e35539618d9b",
 CellID->792813693],
Cell[CellGroupData[{
Cell[1509500, 30535, 545, 13, 25, "Input",ExpressionUUID->"a17f5670-cc1e-4099-92dc-0686fd6a1d80",
 CellID->885845820],
Cell[1510048, 30550, 783, 21, 24, "Output",ExpressionUUID->"35cb148e-f11d-4987-a7cd-0f780f760801",
 CellID->9609939]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1510880, 30577, 214, 3, 40, "MathCaption",ExpressionUUID->"7b2b434d-690b-4139-ad9f-7e5c4b03e086",
 CellID->221442697],
Cell[CellGroupData[{
Cell[1511119, 30584, 497, 13, 25, "Input",ExpressionUUID->"286f7bd4-4d6e-4fc6-98b2-311a5775b450",
 CellID->874035320],
Cell[1511619, 30599, 651, 17, 24, "Output",ExpressionUUID->"7f814eb0-9c6a-418b-83fd-cc4e9e11e07c",
 CellID->272543979]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1512319, 30622, 1604, 46, 58, "MathCaption",ExpressionUUID->"69692191-aab4-4299-952f-c1cc1c89509f",
 CellID->132229044],
Cell[CellGroupData[{
Cell[1513948, 30672, 637, 16, 25, "Input",ExpressionUUID->"e473066b-12ac-4029-b1f9-3063d00a0763",
 CellID->982577960],
Cell[1514588, 30690, 411, 8, 24, "Output",ExpressionUUID->"7033a7e9-5bbc-4577-83de-084d9f274c16",
 CellID->70864155]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1515048, 30704, 351, 7, 40, "MathCaption",ExpressionUUID->"01d99b74-67fc-4c7e-a702-d948e589dc42",
 CellID->361259892],
Cell[CellGroupData[{
Cell[1515424, 30715, 554, 15, 25, "Input",ExpressionUUID->"fd138c29-3c6c-4ca5-9a35-b6408e129f2e",
 CellID->823753171],
Cell[1515981, 30732, 446, 8, 24, "Output",ExpressionUUID->"2eb1c1d4-4eee-41d0-b5d2-18fd98ea0206",
 CellID->877496089]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1516476, 30746, 214, 3, 40, "MathCaption",ExpressionUUID->"b7a75d80-b305-450d-8fa1-ecf87acb9afc",
 CellID->324048877],
Cell[CellGroupData[{
Cell[1516715, 30753, 260, 5, 25, "Input",ExpressionUUID->"b042107b-7011-4203-af01-f18a94cfe317",
 CellID->183907914],
Cell[1516978, 30760, 293, 5, 24, "Output",ExpressionUUID->"48448890-250e-4c48-bd77-4ed4143c8ec0",
 CellID->386927958]
}, Open  ]],
Cell[1517286, 30768, 260, 6, 26, "ExampleDelimiter",ExpressionUUID->"32ec51a3-cc5b-45d9-bc7a-6b390b2e9f99",
 CellID->14107566]
}, Open  ]],
Cell[CellGroupData[{
Cell[1517583, 30779, 1131, 30, 41, "MathCaption",ExpressionUUID->"ff04ed52-8585-41d4-86d1-ef63a3cb6c19",
 CellID->273207191],
Cell[CellGroupData[{
Cell[1518739, 30813, 562, 13, 25, "Input",ExpressionUUID->"a31f1c2c-9660-4aea-b6ba-f484fcc76302",
 CellID->1112728],
Cell[1519304, 30828, 362, 6, 24, "Output",ExpressionUUID->"09abf768-1f85-4170-bd9e-24709506b4e0",
 CellID->381398679]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1519715, 30840, 564, 12, 41, "MathCaption",ExpressionUUID->"995a27ef-339b-460d-9fb8-3fa3567a57a0",
 CellID->306503519],
Cell[CellGroupData[{
Cell[1520304, 30856, 583, 13, 25, "Input",ExpressionUUID->"8d8ff493-9d70-4d9b-8d48-71d887b781e3",
 CellID->999001902],
Cell[1520890, 30871, 655, 16, 24, "Output",ExpressionUUID->"1f8aab64-0291-4aba-a70a-da1900cc6eb0",
 CellID->185246950]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1521594, 30893, 214, 3, 40, "MathCaption",ExpressionUUID->"ca47c3ed-690f-4d1e-b3ef-81c36d7c99bd",
 CellID->90617371],
Cell[CellGroupData[{
Cell[1521833, 30900, 685, 17, 43, "Input",ExpressionUUID->"4f7fd09b-2206-4822-a61d-59674520a617",
 CellID->760328926],
Cell[1522521, 30919, 967, 24, 24, "Output",ExpressionUUID->"bb6dfa57-c34a-4848-9c93-5922335b537b",
 CellID->1214865]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1523537, 30949, 271, 4, 40, "MathCaption",ExpressionUUID->"a06af547-0bad-4bc3-83bc-345397bee2b1",
 CellID->809946818],
Cell[CellGroupData[{
Cell[1523833, 30957, 410, 9, 25, "Input",ExpressionUUID->"89fc304b-f038-4fae-858d-28194346e998",
 CellID->628177917],
Cell[1524246, 30968, 18403, 366, 163, "Output",ExpressionUUID->"9f53ab79-4611-48b9-99ab-610bc2af6563",
 CellID->552668493]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1542710, 31341, 177, 2, 45, "Section",ExpressionUUID->"8929f0b5-f27a-491f-908d-ebf6b8597a59",
 CellID->256230342],
Cell[CellGroupData[{
Cell[1542912, 31347, 229, 3, 40, "MathCaption",ExpressionUUID->"819a6a83-54b9-4ab8-a960-250e2a2866d8",
 CellID->806991552],
Cell[CellGroupData[{
Cell[1543166, 31354, 520, 10, 25, "Input",ExpressionUUID->"f18850c4-776d-403a-a5fc-282dee5f7090",
 CellID->777243378],
Cell[1543689, 31366, 2749, 85, 77, "Output",ExpressionUUID->"50c014f8-c941-4601-95d5-7f1ab20dacca",
 CellID->24878681]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1546487, 31457, 260, 4, 40, "MathCaption",ExpressionUUID->"9ff9bc64-f194-4624-bfbb-b54bda29aa4b",
 CellID->962257849],
Cell[CellGroupData[{
Cell[1546772, 31465, 410, 10, 25, "Input",ExpressionUUID->"86224c05-d668-451c-a1b5-7009814611ca",
 CellID->574613800],
Cell[1547185, 31477, 658, 18, 24, "Output",ExpressionUUID->"43a001ad-90dc-4a57-a242-d95bce0cb527",
 CellID->22940605]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1547892, 31501, 336, 5, 40, "MathCaption",ExpressionUUID->"432586f1-953d-4930-833f-b4880144191b",
 CellID->817657987],
Cell[CellGroupData[{
Cell[1548253, 31510, 493, 11, 25, "Input",ExpressionUUID->"fa81e9bc-8688-493c-a7d8-41a4e2340a14",
 CellID->88400611],
Cell[1548749, 31523, 1767, 39, 42, "Output",ExpressionUUID->"c6b5a596-dc4f-45e1-a87f-fd6fee152b19",
 CellID->264187089]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1550565, 31568, 229, 3, 40, "MathCaption",ExpressionUUID->"a90f562e-98cb-4ff2-8efc-a486c208bd1f",
 CellID->834775918],
Cell[CellGroupData[{
Cell[1550819, 31575, 518, 14, 25, "Input",ExpressionUUID->"24588ed6-8736-46f3-a39a-27cf0bee4417",
 CellID->283080979],
Cell[1551340, 31591, 2942, 50, 249, "Output",ExpressionUUID->"0fb15520-1537-468b-a205-ed45140da02d",
 CellID->104575]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1554331, 31647, 1597, 45, 58, "MathCaption",ExpressionUUID->"d7c0f20f-806d-41a6-95b5-378593ce6d19",
 CellID->405355337],
Cell[CellGroupData[{
Cell[1555953, 31696, 475, 12, 25, "Input",ExpressionUUID->"71fee645-3cca-4e3a-beef-ac702671b9c6",
 CellID->811262678],
Cell[1556431, 31710, 286, 5, 24, "Output",ExpressionUUID->"ccad7069-24bf-427f-85ef-9d76ffe771ca",
 CellID->9194802]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1556766, 31721, 218, 3, 40, "MathCaption",ExpressionUUID->"9bd2bd94-323f-4e1f-a362-6038ff2bfe1b",
 CellID->376441899],
Cell[CellGroupData[{
Cell[1557009, 31728, 428, 12, 25, "Input",ExpressionUUID->"e86e35a3-cf64-453c-9bbd-f05f70b03ee1",
 CellID->695357144],
Cell[1557440, 31742, 295, 6, 24, "Output",ExpressionUUID->"753dda81-e37e-4c0e-b2ab-4c814a84e7c2",
 CellID->11269696]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1557784, 31754, 469, 11, 40, "MathCaption",ExpressionUUID->"5d8fe7cb-95c4-496a-a473-3d2d2f95152d",
 CellID->449563358],
Cell[CellGroupData[{
Cell[1558278, 31769, 488, 13, 25, "Input",ExpressionUUID->"a7ad3ebf-21e1-4949-8755-0d2a2dc4604b",
 CellID->168888283],
Cell[1558769, 31784, 765, 22, 24, "Output",ExpressionUUID->"fc47d679-dd56-45ef-ae30-4e9401ffa585",
 CellID->83774134]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1559595, 31813, 217, 2, 45, "Section",ExpressionUUID->"190bb90c-4914-4f4a-8d53-1b1ca4da78ad",
 CellID->21619455],
Cell[1559815, 31817, 572, 13, 74, "MathCaption",ExpressionUUID->"114f06bd-89ef-4e85-b71f-bee398e656ee",
 CellID->2244898],
Cell[1560390, 31832, 463, 12, 52, "MathCaption",ExpressionUUID->"ebe0a907-f33a-4017-9bfc-e18d5334ba01",
 CellID->272371710],
Cell[CellGroupData[{
Cell[1560878, 31848, 260, 3, 40, "MathCaption",ExpressionUUID->"ee7446b0-40a5-403b-bdde-215444fd24b0",
 CellID->537854770],
Cell[CellGroupData[{
Cell[1561163, 31855, 579, 15, 25, "Input",ExpressionUUID->"35180ea3-39a9-4c9e-b742-0cbcc30a4cd9",
 CellID->400353117],
Cell[1561745, 31872, 1039, 21, 178, "Output",ExpressionUUID->"407a9cab-8db9-45bc-9152-7890ca8ecf9f",
 CellID->283072746]
}, Open  ]]
}, Open  ]],
Cell[1562811, 31897, 198, 2, 40, "MathCaption",ExpressionUUID->"adb8f1b8-8d53-4dc0-b180-eb71fb028075",
 CellID->39057588],
Cell[1563012, 31901, 613, 15, 57, "MathCaption",ExpressionUUID->"31dfacce-571c-4333-8462-7b6da12806a9",
 CellID->236283598],
Cell[1563628, 31918, 205, 2, 40, "MathCaption",ExpressionUUID->"daaf1a1b-19dd-4322-adb4-c46706602373",
 CellID->3969473],
Cell[1563836, 31922, 576, 16, 40, "MathCaption",ExpressionUUID->"560ad241-d25d-45b1-9b0b-70a743fe8828",
 InitializationCell->True,
 CellID->442612299],
Cell[1564415, 31940, 549, 15, 40, "MathCaption",ExpressionUUID->"8e112108-47db-4f4f-a17b-272603f45175",
 CellID->90642782],
Cell[1564967, 31957, 261, 5, 40, "MathCaption",ExpressionUUID->"d8db5819-e7d4-4000-8220-05521785e728",
 CellID->112995886],
Cell[CellGroupData[{
Cell[1565253, 31966, 555, 14, 57, "MathCaption",ExpressionUUID->"d7dc1e25-9cbf-490a-838b-afdf48623da5",
 CellID->129906996],
Cell[CellGroupData[{
Cell[1565833, 31984, 500, 13, 25, "Input",ExpressionUUID->"d35217b9-167a-4854-be3b-01f5b3f105f7",
 CellID->239135585],
Cell[1566336, 31999, 83981, 1597, 617, "Output",ExpressionUUID->"66d92971-c59e-4279-a1ee-739141b70e1a",
 CellID->375946613]
}, Open  ]]
}, Open  ]],
Cell[1650344, 33600, 538, 13, 52, "MathCaption",ExpressionUUID->"7366cc46-444b-4419-b0fc-1a6407402307",
 CellID->50294008],
Cell[CellGroupData[{
Cell[1650907, 33617, 298, 5, 40, "MathCaption",ExpressionUUID->"b6bcc5b8-ce41-4584-801c-dbc823f6c7ce",
 CellID->426907475],
Cell[CellGroupData[{
Cell[1651230, 33626, 595, 15, 25, "Input",ExpressionUUID->"a9d54f0d-8253-4746-af1a-2d0259b42734",
 CellID->283987963],
Cell[1651828, 33643, 983, 21, 161, "Output",ExpressionUUID->"20679db5-8b5f-46b8-8211-76c595af01d0",
 CellID->74394165]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1652860, 33670, 277, 4, 40, "MathCaption",ExpressionUUID->"2f9b2766-3d05-4472-8d69-3d01a2471a6e",
 CellID->69975013],
Cell[CellGroupData[{
Cell[1653162, 33678, 627, 16, 25, "Input",ExpressionUUID->"ed5568ec-e753-4c5c-b6e6-92635033aa7c",
 CellID->447664363],
Cell[1653792, 33696, 1664, 30, 244, "Output",ExpressionUUID->"dd1f0ef3-095d-4fed-ae3f-5a73b25fcf65",
 CellID->405832833]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1655505, 33732, 216, 2, 40, "MathCaption",ExpressionUUID->"64e0c246-9433-4c95-b61f-8bfc6c54564a",
 CellID->629424924],
Cell[CellGroupData[{
Cell[1655746, 33738, 675, 16, 25, "Input",ExpressionUUID->"d0aa78f7-b36d-4676-9714-b1b54804e203",
 CellID->282716016],
Cell[1656424, 33756, 1433, 43, 161, "Output",ExpressionUUID->"56ddab65-3ea6-4ede-92a4-21daf91eafd8",
 CellID->18739418]
}, Open  ]],
Cell[CellGroupData[{
Cell[1657894, 33804, 674, 16, 25, "Input",ExpressionUUID->"afe0ed75-de31-4070-b748-e293016ef3ad",
 CellID->28645306],
Cell[1658571, 33822, 891, 19, 161, "Output",ExpressionUUID->"9986148c-d0c7-4a5c-a5ae-85b81372fcb8",
 CellID->120305284]
}, Open  ]]
}, Open  ]],
Cell[1659489, 33845, 240, 4, 40, "MathCaption",ExpressionUUID->"30160aeb-f07f-4485-8605-95d408a0309f",
 CellID->688126866],
Cell[1659732, 33851, 492, 12, 40, "MathCaption",ExpressionUUID->"a9f94d20-b230-4e78-810c-a675031b5401",
 CellID->462783584],
Cell[CellGroupData[{
Cell[1660249, 33867, 209, 2, 40, "MathCaption",ExpressionUUID->"19f52c75-9b28-4b66-8feb-67669209b992",
 CellID->161103956],
Cell[CellGroupData[{
Cell[1660483, 33873, 297, 5, 25, "Input",ExpressionUUID->"e64e6ac8-5592-4e72-bf79-1401a712e97b",
 CellID->630387027],
Cell[1660783, 33880, 1031, 27, 34, "Output",ExpressionUUID->"369cac84-fe2e-474b-8453-6314252ca63f",
 CellID->401184551]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1661863, 33913, 414, 10, 40, "MathCaption",ExpressionUUID->"79cbf0ed-340e-465c-a348-5c39be9e5355",
 CellID->478852567],
Cell[CellGroupData[{
Cell[1662302, 33927, 350, 8, 25, "Input",ExpressionUUID->"d860018a-3cd5-4779-aa4f-006713b55d18",
 CellID->2173387],
Cell[1662655, 33937, 640, 11, 60, "Output",ExpressionUUID->"f34e702d-4ea4-4dc5-9c4e-b8415e19b155",
 CellID->59007347]
}, Open  ]],
Cell[CellGroupData[{
Cell[1663332, 33953, 419, 10, 25, "Input",ExpressionUUID->"d3f43468-90b7-49d8-acb6-7c0d9550dcab",
 CellID->48490791],
Cell[1663754, 33965, 348, 8, 24, "Output",ExpressionUUID->"3528c9d3-ad6b-4e84-ad7e-f79ba7e1a3ad",
 CellID->249968189]
}, Open  ]],
Cell[CellGroupData[{
Cell[1664139, 33978, 454, 11, 25, "Input",ExpressionUUID->"4fb3f03c-dbc9-4e66-a1b3-9a94f6426667",
 CellID->144665321],
Cell[1664596, 33991, 179, 3, 24, "Output",ExpressionUUID->"be003799-849f-4601-89bb-7ede3a8a344e",
 CellID->495057432]
}, Open  ]]
}, Open  ]],
Cell[1664802, 33998, 183, 2, 40, "MathCaption",ExpressionUUID->"deacbe29-c222-4820-a7ef-e80254ad01cd",
 CellID->66692240],
Cell[CellGroupData[{
Cell[1665010, 34004, 491, 12, 40, "MathCaption",ExpressionUUID->"b7319d6e-23da-44a3-98c2-50adb6177629",
 CellID->308194261],
Cell[CellGroupData[{
Cell[1665526, 34020, 288, 6, 25, "Input",ExpressionUUID->"61d58fae-a6d4-4d9d-8719-6f7a07bd3d01",
 CellID->88352769],
Cell[1665817, 34028, 225, 5, 24, "Output",ExpressionUUID->"e60f72dc-21bd-4d7e-b8f8-65ff7a45c026",
 CellID->253919081]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1666091, 34039, 191, 2, 40, "MathCaption",ExpressionUUID->"f99244b4-ba61-44ce-a3d9-485b3b0288cd",
 CellID->402833805],
Cell[CellGroupData[{
Cell[1666307, 34045, 293, 6, 25, "Input",ExpressionUUID->"358f0f0d-a757-413b-982f-93ae00f34410",
 CellID->133361772],
Cell[1666603, 34053, 222, 5, 24, "Output",ExpressionUUID->"ac6731c8-04ba-4a15-8607-5b220fb5de63",
 CellID->98606068]
}, Open  ]],
Cell[CellGroupData[{
Cell[1666862, 34063, 300, 6, 25, "Input",ExpressionUUID->"d1a14ee2-d45f-47b4-a7a7-fe6646a9396c",
 CellID->282609746],
Cell[1667165, 34071, 233, 5, 24, "Output",ExpressionUUID->"97ef1641-3598-4eea-8e73-e56d154c45a3",
 CellID->184445757]
}, Open  ]],
Cell[CellGroupData[{
Cell[1667435, 34081, 301, 6, 25, "Input",ExpressionUUID->"b0783c2d-32f0-476e-9948-0b0f3b857b4d",
 CellID->170282164],
Cell[1667739, 34089, 233, 5, 24, "Output",ExpressionUUID->"1ab71d52-d06c-4b6f-8526-90cf83f1a4a3",
 CellID->586261813]
}, Open  ]]
}, Open  ]],
Cell[1667999, 34098, 300, 5, 57, "MathCaption",ExpressionUUID->"aea1b186-7caf-4fb9-bf2b-d09548c07a54",
 CellID->406463550],
Cell[CellGroupData[{
Cell[1668324, 34107, 282, 4, 40, "MathCaption",ExpressionUUID->"dc188418-c05f-44bd-8c4e-c48deb4e766c",
 CellID->300631353],
Cell[1668609, 34113, 495, 12, 25, "Input",ExpressionUUID->"beb465c3-3f0f-47d3-b578-0039ef6ea163",
 CellID->518707108]
}, Open  ]],
Cell[CellGroupData[{
Cell[1669141, 34130, 1249, 31, 40, "MathCaption",ExpressionUUID->"d97a0dea-0982-481b-9c40-f1bc7083ebad",
 CellID->8375492],
Cell[CellGroupData[{
Cell[1670415, 34165, 413, 7, 25, "Input",ExpressionUUID->"719b64f1-3111-4dd4-8198-0bea21ed6d22",
 CellID->835168205],
Cell[1670831, 34174, 568, 11, 24, "Output",ExpressionUUID->"bef85f6b-e773-42cd-9469-7d840085d80b",
 CellID->111339732]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1671448, 34191, 261, 4, 40, "MathCaption",ExpressionUUID->"c959693b-6af8-419f-82b9-e61a8407052a",
 CellID->258727906],
Cell[CellGroupData[{
Cell[1671734, 34199, 410, 10, 25, "Input",ExpressionUUID->"61a497b6-1cbd-4429-b72a-bf0811518140",
 CellID->97985540],
Cell[1672147, 34211, 350, 7, 24, "Output",ExpressionUUID->"edc63cac-0508-4d53-97c6-5bafd3eb9a04",
 CellID->107056388]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1672546, 34224, 202, 2, 40, "MathCaption",ExpressionUUID->"f8b8fb5e-6178-44eb-960d-8bbc4e363658",
 CellID->892397338],
Cell[CellGroupData[{
Cell[1672773, 34230, 288, 5, 25, "Input",ExpressionUUID->"2d3edf4c-7cbb-4b61-8ee9-8e3db183b436",
 CellID->70290140],
Cell[1673064, 34237, 237, 5, 24, "Output",ExpressionUUID->"e8cc5950-dbc9-4133-9a15-99363811d554",
 CellID->100322807]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1673350, 34248, 265, 3, 40, "MathCaption",ExpressionUUID->"62f1ea29-4de0-47ea-9170-9ca4830dd1b2",
 CellID->819912601],
Cell[CellGroupData[{
Cell[1673640, 34255, 475, 12, 25, "Input",ExpressionUUID->"7f18710c-a721-438e-b20a-3774e8f82efc",
 CellID->375659687],
Cell[1674118, 34269, 802, 21, 42, "Output",ExpressionUUID->"6ba019bc-b907-4a05-a53d-2633d532511e",
 CellID->223206235]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1674969, 34296, 191, 2, 40, "MathCaption",ExpressionUUID->"28484c4f-addc-4141-9242-12772d48ed02",
 CellID->652840542],
Cell[CellGroupData[{
Cell[1675185, 34302, 524, 14, 25, "Input",ExpressionUUID->"2f24e8ff-2a22-411d-bf7d-01ddee90b250",
 CellID->115721087],
Cell[1675712, 34318, 679, 16, 128, "Output",ExpressionUUID->"7fc46201-42cf-4a42-aa1a-b16fdd99b76d",
 CellID->424564025]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1676440, 34340, 182, 2, 40, "MathCaption",ExpressionUUID->"6525585c-3051-4328-9726-48e3658d8a86",
 CellID->395670977],
Cell[CellGroupData[{
Cell[1676647, 34346, 233, 4, 25, "Input",ExpressionUUID->"90cc6718-063c-4fc2-9d6e-b95c4373cac5",
 CellID->566799357],
Cell[1676883, 34352, 195, 3, 24, "Output",ExpressionUUID->"00be94c9-5930-4123-9ff1-2c1777d1373a",
 CellID->63581800]
}, Open  ]]
}, Open  ]],
Cell[1677105, 34359, 1968, 55, 92, "MathCaption",ExpressionUUID->"e0e4efa2-fc2f-462f-878a-346871875012",
 CellID->255766314],
Cell[CellGroupData[{
Cell[1679098, 34418, 540, 12, 57, "MathCaption",ExpressionUUID->"06f221c4-3a6e-420e-9281-132cd2c5f8ae",
 CellID->561182461],
Cell[CellGroupData[{
Cell[1679663, 34434, 429, 10, 25, "Input",ExpressionUUID->"b26267a8-a88e-4b11-998c-c9f3ed3a96e0",
 CellID->178093661],
Cell[1680095, 34446, 159, 2, 23, "EchoTiming",ExpressionUUID->"75b36053-ebab-4fd4-84c3-4a96f58d6a14",
 CellID->11277768],
Cell[1680257, 34450, 205, 3, 24, "Output",ExpressionUUID->"043dbcd8-910f-46bb-b1e2-ce4a21954487",
 CellID->135146785]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1680511, 34459, 472, 10, 40, "MathCaption",ExpressionUUID->"f58db4b4-936e-4b86-aada-cea71209cfce",
 CellID->102959412],
Cell[CellGroupData[{
Cell[1681008, 34473, 484, 11, 29, "Input",ExpressionUUID->"b585f376-455e-4f06-b10c-ef2bd26cdb38",
 CellID->65194424],
Cell[1681495, 34486, 159, 2, 23, "EchoTiming",ExpressionUUID->"af637982-a044-45ec-97bb-ad1e6624cc54",
 CellID->593897543],
Cell[1681657, 34490, 995, 17, 109, "Output",ExpressionUUID->"67310363-e70b-466f-8b52-b90d651fa870",
 CellID->74761761]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1682701, 34513, 202, 2, 40, "MathCaption",ExpressionUUID->"dde14458-f295-4034-b96c-42c1ac1c0293",
 CellID->298809539],
Cell[CellGroupData[{
Cell[1682928, 34519, 254, 5, 25, "Input",ExpressionUUID->"24512014-d96b-4551-b5aa-7a0f6b459a9f",
 CellID->7216617],
Cell[1683185, 34526, 180, 3, 24, "Output",ExpressionUUID->"d369b39a-78bb-460c-aef1-c5cf8726addb",
 CellID->150133947]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1683414, 34535, 191, 2, 40, "MathCaption",ExpressionUUID->"7ba554c1-8774-4fdf-ba30-250586c1dbac",
 CellID->6621231],
Cell[CellGroupData[{
Cell[1683630, 34541, 231, 4, 25, "Input",ExpressionUUID->"b499c1cc-970e-4ba7-8fc5-afa7ca346ad9",
 CellID->238009890],
Cell[1683864, 34547, 175, 3, 24, "Output",ExpressionUUID->"b2f4ef0a-b277-4457-ac6a-7e6142c0dc0a",
 CellID->441155702]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1684088, 34556, 192, 2, 40, "MathCaption",ExpressionUUID->"7f518fad-62a5-498a-b432-f6a13fb51be6",
 CellID->784853736],
Cell[CellGroupData[{
Cell[1684305, 34562, 229, 4, 25, "Input",ExpressionUUID->"c47d54bf-f526-45d8-86c0-15fc82c21df9",
 CellID->610437364],
Cell[1684537, 34568, 188, 3, 24, "Output",ExpressionUUID->"b96e6d6d-52c5-4995-ae59-13e4feda1f86",
 CellID->38186909]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1684774, 34577, 588, 15, 41, "MathCaption",ExpressionUUID->"9027f44a-5a42-40d6-b0d8-272bdc6bbdcd",
 CellID->393571408],
Cell[CellGroupData[{
Cell[1685387, 34596, 290, 6, 25, "Input",ExpressionUUID->"bf26b9c2-a90b-40a6-9edc-15853409fe61",
 CellID->878786336],
Cell[1685680, 34604, 221, 4, 24, "Output",ExpressionUUID->"d1ea0b12-49dd-4c79-9485-c3963fb6bde0",
 CellID->369524703]
}, Open  ]],
Cell[1685916, 34611, 261, 6, 26, "ExampleDelimiter",ExpressionUUID->"ba87e999-f67c-40da-a475-c2ab4398ea57",
 CellID->404754789]
}, Open  ]],
Cell[CellGroupData[{
Cell[1686214, 34622, 278, 4, 40, "MathCaption",ExpressionUUID->"d4e3f1c0-4936-41b8-b9f2-641ef783b90e",
 CellID->394823239],
Cell[CellGroupData[{
Cell[1686517, 34630, 274, 6, 25, "Input",ExpressionUUID->"277c5bb1-140a-4367-8f49-95e8f595bc53",
 CellID->627889596],
Cell[1686794, 34638, 402, 9, 24, "Output",ExpressionUUID->"2942f647-ab50-4d31-bef9-d43e7d7fd636",
 CellID->95453950]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1687245, 34653, 145, 2, 40, "MathCaption",ExpressionUUID->"46f4d3a9-a5cc-4a21-ba7d-c1bbf723259a",
 CellID->731096908],
Cell[CellGroupData[{
Cell[1687415, 34659, 606, 17, 25, "Input",ExpressionUUID->"a99f34f5-1dd9-4cfd-bec7-d4eb4f90db18",
 CellID->219626058],
Cell[1688024, 34678, 194, 4, 24, "Output",ExpressionUUID->"5a6ed990-717c-465b-90e8-b4868cf4cce5",
 CellID->169546956]
}, Open  ]],
Cell[1688233, 34685, 260, 6, 26, "ExampleDelimiter",ExpressionUUID->"a89fbfd0-d78a-461c-96cb-a46b935d33cd",
 CellID->96742026]
}, Open  ]],
Cell[CellGroupData[{
Cell[1688530, 34696, 674, 17, 44, "MathCaption",ExpressionUUID->"cfb986fe-9b39-47ba-b733-186f5d3aaf67",
 CellID->575191782],
Cell[CellGroupData[{
Cell[1689229, 34717, 539, 15, 25, "Input",ExpressionUUID->"9b2e32bd-e83c-46ba-971b-f2624e8e809b",
 CellID->154121207],
Cell[1689771, 34734, 194, 4, 24, "Output",ExpressionUUID->"21e21422-7732-4605-b3a3-256caf1da68b",
 CellID->179973804]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1690014, 34744, 347, 10, 40, "MathCaption",ExpressionUUID->"af105472-3a2c-49ad-a9f3-e60c9a7f1cf0",
 CellID->812166021],
Cell[CellGroupData[{
Cell[1690386, 34758, 392, 10, 25, "Input",ExpressionUUID->"194a904e-1a03-43e5-82ed-58a7c855999c",
 CellID->624985202],
Cell[1690781, 34770, 238, 6, 25, "Output",ExpressionUUID->"a35cef06-10a6-4353-8849-a3e29372d31b",
 CellID->51179190]
}, Open  ]],
Cell[CellGroupData[{
Cell[1691056, 34781, 251, 5, 25, "Input",ExpressionUUID->"3bbb094f-afd8-4d9e-917e-8fc00b5c1fe7",
 CellID->368150137],
Cell[1691310, 34788, 238, 6, 25, "Output",ExpressionUUID->"e27c18fa-0ace-473f-9850-2802dbfcb17b",
 CellID->288813044]
}, Open  ]],
Cell[1691563, 34797, 261, 6, 26, "ExampleDelimiter",ExpressionUUID->"300ccbfc-a465-43c1-909a-cf81d5cf8e29",
 CellID->758872197]
}, Open  ]],
Cell[CellGroupData[{
Cell[1691861, 34808, 294, 5, 40, "MathCaption",ExpressionUUID->"22c43446-717d-427c-8724-8ef85c36a4c5",
 CellID->230671479],
Cell[CellGroupData[{
Cell[1692180, 34817, 785, 19, 43, "Input",ExpressionUUID->"766cbd30-55d6-4147-a59d-1cc1785998ec",
 CellID->968332860],
Cell[1692968, 34838, 10279, 174, 155, "Output",ExpressionUUID->"51dace37-36f8-49d3-b97f-bd4f6a4a668c",
 CellID->202642854]
}, Open  ]],
Cell[1703262, 35015, 261, 6, 26, "ExampleDelimiter",ExpressionUUID->"f24c0561-8ff7-4952-b8ff-995eb85767e0",
 CellID->115354593]
}, Open  ]],
Cell[CellGroupData[{
Cell[1703560, 35026, 361, 9, 40, "MathCaption",ExpressionUUID->"18159654-2701-405c-b018-8a78c437bab8",
 CellID->201723607],
Cell[CellGroupData[{
Cell[1703946, 35039, 1553, 42, 42, "Input",ExpressionUUID->"c83f1248-66a4-4918-b1bf-caa29000eb9c",
 CellID->746283470],
Cell[1705502, 35083, 32646, 633, 164, "Output",ExpressionUUID->"fa80da1c-1b49-43f0-b904-8d01c79e3abc",
 CellID->405154369]
}, Open  ]],
Cell[CellGroupData[{
Cell[1738185, 35721, 222, 4, 25, "Input",ExpressionUUID->"2145833e-270d-417d-8a73-dfcd1238268f",
 CellID->317076608],
Cell[1738410, 35727, 16718, 398, 86, "Output",ExpressionUUID->"c37bf87a-01a3-4546-a389-5f8ae6b80033",
 CellID->38873197]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1755177, 36131, 419, 11, 40, "MathCaption",ExpressionUUID->"9f339b50-5073-46ab-b559-6afbfc68508c",
 CellID->199205649],
Cell[CellGroupData[{
Cell[1755621, 36146, 390, 9, 25, "Input",ExpressionUUID->"38468ac1-a3c6-435d-8492-6dbcba6d534b",
 CellID->444434879],
Cell[1756014, 36157, 159, 2, 23, "EchoTiming",ExpressionUUID->"518b49fb-79a4-422e-b727-5d95afdd5fc1",
 CellID->24383746],
Cell[1756176, 36161, 542, 10, 42, "Output",ExpressionUUID->"7c84ceb6-4536-4e6e-bc1c-df00b7167423",
 CellID->280470809]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1756767, 36177, 244, 3, 40, "MathCaption",ExpressionUUID->"c5b0573b-d75e-4cac-833a-0813e8bbc5bd",
 CellID->48779360],
Cell[CellGroupData[{
Cell[1757036, 36184, 366, 9, 25, "Input",ExpressionUUID->"46b6b145-6b17-48ad-8dfa-5a7beaa89a94",
 CellID->59766089],
Cell[1757405, 36195, 480, 9, 42, "Output",ExpressionUUID->"a4668739-8315-40bc-a691-1b7eb76e9e8c",
 CellID->6049817]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1757934, 36210, 187, 2, 40, "MathCaption",ExpressionUUID->"dd62178d-8c1c-4ba1-aca1-740c63f138b6",
 CellID->234878772],
Cell[CellGroupData[{
Cell[1758146, 36216, 413, 9, 25, "Input",ExpressionUUID->"2079eaf2-d394-48cd-83a5-5d4d53a10096",
 CellID->148202768],
Cell[1758562, 36227, 158, 2, 23, "EchoTiming",ExpressionUUID->"3d17b65d-ba4a-4e2d-bffd-d26b33670772",
 CellID->510846472],
Cell[1758723, 36231, 216, 5, 24, "Output",ExpressionUUID->"943f211b-bacd-44a6-8e54-217377f4b7fa",
 CellID->23869527]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1758988, 36242, 194, 2, 40, "MathCaption",ExpressionUUID->"af58ae10-9fd4-4365-b0f2-7866760e00ab",
 CellID->10558311],
Cell[CellGroupData[{
Cell[1759207, 36248, 700, 18, 43, "Input",ExpressionUUID->"ee973644-c5f8-4937-8527-17a00cc833d9",
 CellID->58237670],
Cell[1759910, 36268, 159, 2, 23, "EchoTiming",ExpressionUUID->"9f8dfc6d-d741-4c75-b946-7ae824d87aad",
 CellID->74044636],
Cell[1760072, 36272, 315, 7, 24, "Output",ExpressionUUID->"2922147b-7600-46da-b2d9-b4fde2a85e24",
 CellID->51587048]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1760436, 36285, 202, 2, 40, "MathCaption",ExpressionUUID->"57e21972-6e19-4fef-b01e-fdce50c226f8",
 CellID->74692364],
Cell[CellGroupData[{
Cell[1760663, 36291, 372, 8, 25, "Input",ExpressionUUID->"9211cf51-4147-46b6-aed7-1f17900d35d2",
 CellID->436274302],
Cell[1761038, 36301, 250, 6, 24, "Output",ExpressionUUID->"fab75de9-b937-447b-805b-dc5a6b556450",
 CellID->581705438]
}, Open  ]],
Cell[1761303, 36310, 242, 5, 26, "ExampleDelimiter",ExpressionUUID->"59e2a5ae-fce3-4dd7-b8c6-45272d4df550",
 CellID->376301338]
}, Open  ]],
Cell[CellGroupData[{
Cell[1761582, 36320, 423, 11, 40, "MathCaption",ExpressionUUID->"7e6b4922-3269-49ee-976d-91c2f31eeac8",
 CellID->228255672],
Cell[CellGroupData[{
Cell[1762030, 36335, 387, 9, 25, "Input",ExpressionUUID->"3e60e04b-d5e7-4afc-81c5-3c23a3d969a3",
 CellID->72949216],
Cell[1762420, 36346, 158, 2, 23, "EchoTiming",ExpressionUUID->"efe29f3c-9060-4c81-903a-465db95e4031",
 CellID->196950653],
Cell[1762581, 36350, 494, 9, 42, "Output",ExpressionUUID->"1d0c998b-4a0d-4ad7-8e2a-90d14435d9c3",
 CellID->157710615]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1763124, 36365, 187, 2, 40, "MathCaption",ExpressionUUID->"1e4b92f7-e518-4c7a-bbb9-af945ea9513e",
 CellID->63779103],
Cell[CellGroupData[{
Cell[1763336, 36371, 370, 8, 25, "Input",ExpressionUUID->"24bb35b4-afa1-4f7a-9260-d471bb36ee13",
 CellID->559477600],
Cell[1763709, 36381, 437, 13, 39, "Output",ExpressionUUID->"0a8e641f-0530-4c91-817d-323af6a72a95",
 CellID->854014107]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1764195, 36400, 185, 2, 40, "MathCaption",ExpressionUUID->"dc41bc03-1bd8-49a6-8ed4-83d4ed3271d0",
 CellID->297234162],
Cell[CellGroupData[{
Cell[1764405, 36406, 435, 10, 25, "Input",ExpressionUUID->"2e0a4f58-ddfe-45ed-ae5b-5472d94c4f0a",
 CellID->384199976],
Cell[1764843, 36418, 471, 9, 42, "Output",ExpressionUUID->"35f46a67-f7d6-408d-ba5c-b2d5fc60d1d1",
 CellID->60351254]
}, Open  ]],
Cell[1765329, 36430, 241, 5, 26, "ExampleDelimiter",ExpressionUUID->"6756b5f4-9657-4abf-9450-75f41a9b31c0",
 CellID->64234199]
}, Open  ]],
Cell[CellGroupData[{
Cell[1765607, 36440, 399, 10, 40, "MathCaption",ExpressionUUID->"e1005b44-bded-426d-b06c-955f31c1b9ca",
 CellID->71222372],
Cell[CellGroupData[{
Cell[1766031, 36454, 368, 9, 25, "Input",ExpressionUUID->"3d5ac883-7de1-4322-b013-6d0302ae5697",
 CellID->612463501],
Cell[1766402, 36465, 158, 2, 23, "EchoTiming",ExpressionUUID->"6c8ae07b-ea38-46d2-918c-6d744ea62f5b",
 CellID->339196886],
Cell[1766563, 36469, 502, 9, 42, "Output",ExpressionUUID->"58b0c377-8151-4d4b-99f7-35587cce3e3a",
 CellID->244982401]
}, Open  ]],
Cell[1767080, 36481, 242, 5, 26, "ExampleDelimiter",ExpressionUUID->"2570f326-9c45-4e15-8cf7-1f6510d72ec0",
 CellID->795616469]
}, Open  ]],
Cell[CellGroupData[{
Cell[1767359, 36491, 428, 10, 40, "MathCaption",ExpressionUUID->"38fd6c99-0323-48d5-8c8a-ee87bc0b0f8e",
 CellID->29412029],
Cell[CellGroupData[{
Cell[1767812, 36505, 370, 9, 25, "Input",ExpressionUUID->"1388e7bc-4f63-4e15-844d-ed41ed1f9c1f",
 CellID->13291710],
Cell[1768185, 36516, 157, 2, 23, "EchoTiming",ExpressionUUID->"6c6180b0-5e78-474c-a16f-fd85e6470520",
 CellID->61324748],
Cell[1768345, 36520, 601, 11, 60, "Output",ExpressionUUID->"b4142020-309e-4611-b400-ff0a860c47a4",
 CellID->60671734]
}, Open  ]],
Cell[1768961, 36534, 242, 5, 26, "ExampleDelimiter",ExpressionUUID->"a9f4da8b-9717-4440-97a3-a81a826cf0b3",
 CellID->179371755]
}, Open  ]],
Cell[CellGroupData[{
Cell[1769240, 36544, 422, 11, 40, "MathCaption",ExpressionUUID->"25526e0b-41f0-4cd4-989a-d8d5c8e51715",
 CellID->68513831],
Cell[CellGroupData[{
Cell[1769687, 36559, 355, 8, 25, "Input",ExpressionUUID->"ff80815c-36a8-4530-8230-5c00f280538b",
 CellID->691053818],
Cell[1770045, 36569, 837, 25, 28, "Output",ExpressionUUID->"f0631126-44c7-401b-9618-3b06bd748545",
 CellID->116155483]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1770931, 36600, 193, 2, 40, "MathCaption",ExpressionUUID->"f8c0947b-4543-44e6-a7b6-b8997177e4a7",
 CellID->295365794],
Cell[CellGroupData[{
Cell[1771149, 36606, 516, 13, 25, "Input",ExpressionUUID->"85cb8bb3-a6cd-4c32-96d2-de7e5e27511d",
 CellID->549686470],
Cell[1771668, 36621, 173, 3, 24, "Output",ExpressionUUID->"a90adbf7-efd0-411c-894b-a20ce11596c8",
 CellID->471038115]
}, Open  ]],
Cell[1771856, 36627, 242, 5, 26, "ExampleDelimiter",ExpressionUUID->"c2fce5b9-644d-46b4-8060-9f61b38cc84d",
 CellID->439332369]
}, Open  ]],
Cell[CellGroupData[{
Cell[1772135, 36637, 441, 11, 40, "MathCaption",ExpressionUUID->"c31c990b-0888-4526-b3a1-34c1f0418da9",
 CellID->142865217],
Cell[CellGroupData[{
Cell[1772601, 36652, 355, 8, 25, "Input",ExpressionUUID->"09dae856-fd1b-4cf1-ae42-6ea2c672de93",
 CellID->819507155],
Cell[1772959, 36662, 1035, 34, 28, "Output",ExpressionUUID->"4b1bf549-7600-4542-94bb-12c0ffdf9a8d",
 CellID->451625855]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1774043, 36702, 187, 2, 40, "MathCaption",ExpressionUUID->"feaee20e-bee1-46f5-8faf-4ea37940d83a",
 CellID->38534065],
Cell[CellGroupData[{
Cell[1774255, 36708, 686, 20, 43, "Input",ExpressionUUID->"28b056e8-f157-4c59-9aaa-664b1d2bc637",
 CellID->391099469],
Cell[1774944, 36730, 174, 3, 24, "Output",ExpressionUUID->"c48deaaf-96ea-4676-aee0-3bd9787e56ce",
 CellID->22022784]
}, Open  ]],
Cell[1775133, 36736, 241, 5, 26, "ExampleDelimiter",ExpressionUUID->"17971e2f-7b7f-48ef-a4f3-d49652c07cc7",
 CellID->86887181]
}, Open  ]],
Cell[CellGroupData[{
Cell[1775411, 36746, 426, 11, 40, "MathCaption",ExpressionUUID->"5eee0843-df34-4f8c-a3a2-e7168839c76d",
 CellID->119722245],
Cell[CellGroupData[{
Cell[1775862, 36761, 385, 9, 25, "Input",ExpressionUUID->"01505b88-07d1-431a-a852-1294a171456c",
 CellID->681843340],
Cell[1776250, 36772, 1213, 33, 48, "Output",ExpressionUUID->"6eb35a37-fba9-43d0-90f5-a710145fbdf9",
 CellID->567660469]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1777512, 36811, 194, 2, 40, "MathCaption",ExpressionUUID->"8c1b2aff-269f-4c6b-af50-4a86de808117",
 CellID->69391295],
Cell[CellGroupData[{
Cell[1777731, 36817, 322, 7, 25, "Input",ExpressionUUID->"9c0d56ee-42a7-4f16-b8a3-b2279a311707",
 CellID->139948453],
Cell[1778056, 36826, 479, 9, 42, "Output",ExpressionUUID->"9654a30c-14f9-4c13-ab1d-2a847e830e06",
 CellID->46523418]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1778584, 36841, 199, 2, 40, "MathCaption",ExpressionUUID->"367843e9-a815-41e6-b3cc-4777dd3252b9",
 CellID->173598441],
Cell[CellGroupData[{
Cell[1778808, 36847, 417, 10, 25, "Input",ExpressionUUID->"66eb091e-693d-4f63-9d90-f31cbddc3525",
 CellID->298773496],
Cell[1779228, 36859, 173, 3, 24, "Output",ExpressionUUID->"9d57d837-12d4-49d6-8062-69e239b60866",
 CellID->135097200]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1779450, 36868, 441, 11, 40, "MathCaption",ExpressionUUID->"70ee95cb-344b-4b70-9b67-cdd0249948f4",
 CellID->6568824],
Cell[CellGroupData[{
Cell[1779916, 36883, 320, 7, 25, "Input",ExpressionUUID->"df58bb67-34d7-4b0a-ae20-3d3034890527",
 CellID->354624742],
Cell[1780239, 36892, 503, 10, 42, "Output",ExpressionUUID->"c01b9325-6497-40d3-988f-a42401cdad92",
 CellID->229632868]
}, Open  ]],
Cell[1780757, 36905, 242, 5, 26, "ExampleDelimiter",ExpressionUUID->"6f45ae32-8d1d-4b6f-91d2-30ad57ac8372",
 CellID->225973015]
}, Open  ]],
Cell[CellGroupData[{
Cell[1781036, 36915, 424, 11, 40, "MathCaption",ExpressionUUID->"299d3497-c448-425f-ae4d-27ef21071ec5",
 CellID->597709743],
Cell[CellGroupData[{
Cell[1781485, 36930, 318, 7, 25, "Input",ExpressionUUID->"1da378d8-f1a4-495c-909f-94f97c138c73",
 CellID->559137007],
Cell[1781806, 36939, 480, 9, 42, "Output",ExpressionUUID->"625a3339-8cc6-4a3d-ab76-ccc991fe8e37",
 CellID->350769182]
}, Open  ]],
Cell[1782301, 36951, 241, 5, 26, "ExampleDelimiter",ExpressionUUID->"9977a560-b8fc-4002-8f54-361c61b49e18",
 CellID->87474974]
}, Open  ]],
Cell[CellGroupData[{
Cell[1782579, 36961, 628, 16, 40, "MathCaption",ExpressionUUID->"bae659a8-c5b3-46d9-9e0d-0e2aed973301",
 CellID->655288947],
Cell[CellGroupData[{
Cell[1783232, 36981, 302, 6, 25, "Input",ExpressionUUID->"5758b2bb-27f8-486d-b229-db56cae2b888",
 CellID->68325774],
Cell[1783537, 36989, 505, 9, 42, "Output",ExpressionUUID->"c7ee4db5-c947-4c08-910f-4fa78dbea082",
 CellID->411603969]
}, Open  ]],
Cell[1784057, 37001, 242, 5, 26, "ExampleDelimiter",ExpressionUUID->"d4c7db51-4321-45ef-8eb1-cb4d274232bf",
 CellID->380977308]
}, Open  ]],
Cell[CellGroupData[{
Cell[1784336, 37011, 419, 11, 40, "MathCaption",ExpressionUUID->"7c75aea6-20cf-4d96-981d-e82876598f0a",
 CellID->206574541],
Cell[CellGroupData[{
Cell[1784780, 37026, 353, 8, 25, "Input",ExpressionUUID->"bd59701c-0077-4452-8170-8fd2982646f2",
 CellID->571446576],
Cell[1785136, 37036, 1039, 32, 28, "Output",ExpressionUUID->"1afb934d-ebb3-4d12-a4a2-69b6889633bf",
 CellID->579836633]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1786224, 37074, 193, 2, 40, "MathCaption",ExpressionUUID->"397e0390-68a0-4509-bdf0-2ff48b03c862",
 CellID->849664802],
Cell[CellGroupData[{
Cell[1786442, 37080, 473, 12, 25, "Input",ExpressionUUID->"15328761-e03b-470b-bea3-0c18054f2c6c",
 CellID->5746910],
Cell[1786918, 37094, 201, 3, 24, "Output",ExpressionUUID->"836000f5-01df-4a70-9154-8ebd114f9b61",
 CellID->145466617]
}, Open  ]],
Cell[1787134, 37100, 241, 5, 26, "ExampleDelimiter",ExpressionUUID->"c9244920-c2ae-4d3e-9fe6-2c3a07e364f6",
 CellID->64856443]
}, Open  ]],
Cell[CellGroupData[{
Cell[1787412, 37110, 449, 11, 40, "MathCaption",ExpressionUUID->"5c8bcf58-2f7c-4ff7-876f-945b58039bfb",
 CellID->200874845],
Cell[CellGroupData[{
Cell[1787886, 37125, 355, 8, 25, "Input",ExpressionUUID->"275b987d-3cbe-4efc-82e8-a02b9fcc1db4",
 CellID->2790924],
Cell[1788244, 37135, 1289, 43, 48, "Output",ExpressionUUID->"830d6089-c213-4047-992b-df152cbbd119",
 CellID->749587632]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1789582, 37184, 186, 2, 40, "MathCaption",ExpressionUUID->"e549e506-e7f2-4eb4-86d6-2568a21f3989",
 CellID->193111019],
Cell[CellGroupData[{
Cell[1789793, 37190, 550, 17, 25, "Input",ExpressionUUID->"7ce600dc-91c5-42de-a6a3-096ad6e31d19",
 CellID->257744413],
Cell[1790346, 37209, 172, 3, 24, "Output",ExpressionUUID->"767a9306-e04c-4ea4-8b02-9cc2fc52e8c1",
 CellID->599489833]
}, Open  ]],
Cell[1790533, 37215, 242, 5, 26, "ExampleDelimiter",ExpressionUUID->"4110419f-5dc7-4931-9994-9cea2c6b3d09",
 CellID->506165783]
}, Open  ]],
Cell[CellGroupData[{
Cell[1790812, 37225, 550, 16, 40, "MathCaption",ExpressionUUID->"d1728467-aa1e-456d-9d64-9d4cc336b306",
 CellID->230848754],
Cell[CellGroupData[{
Cell[1791387, 37245, 358, 8, 25, "Input",ExpressionUUID->"192b318c-c5a0-4ece-955f-ad4ba72fe887",
 CellID->4310976],
Cell[1791748, 37255, 591, 18, 28, "Output",ExpressionUUID->"0c7a55ab-d034-4ac4-8574-2ba240958473",
 CellID->362774086]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1792388, 37279, 188, 2, 40, "MathCaption",ExpressionUUID->"539abed6-0d82-4db2-948c-47cae4db9d5b",
 CellID->373578484],
Cell[CellGroupData[{
Cell[1792601, 37285, 550, 15, 28, "Input",ExpressionUUID->"df0e3b0f-5023-4ea7-afe1-47fcf51b32b4",
 CellID->194038522],
Cell[1793154, 37302, 173, 3, 24, "Output",ExpressionUUID->"36f2a83e-6c64-4299-b5a5-5f0fd4cdc4f1",
 CellID->154595223]
}, Open  ]]
}, Open  ]],
Cell[1793354, 37309, 190, 2, 40, "MathCaption",ExpressionUUID->"d7a05787-6f02-414a-9742-fadf8cb21e37",
 CellID->554419],
Cell[CellGroupData[{
Cell[1793569, 37315, 118, 1, 40, "MathCaption",ExpressionUUID->"a1ede218-d1e2-4fab-822f-a4689f9da609",
 CellID->55753721],
Cell[CellGroupData[{
Cell[1793712, 37320, 256, 5, 25, "Input",ExpressionUUID->"97527786-74ce-483b-aeae-79c170696a86",
 CellID->14566],
Cell[1793971, 37327, 210, 3, 24, "Output",ExpressionUUID->"0478556b-8d2d-4dbd-9907-c54164d93ab5",
 CellID->18188826]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1794230, 37336, 184, 2, 40, "MathCaption",ExpressionUUID->"1ffe97a1-014f-4393-a691-ef4e85d80ecd",
 CellID->563784370],
Cell[CellGroupData[{
Cell[1794439, 37342, 278, 6, 41, "Input",ExpressionUUID->"c226d48b-1655-40ac-895b-d55a7ff2c4e6",
 CellID->20592017],
Cell[1794720, 37350, 257, 4, 24, "Output",ExpressionUUID->"95450a68-7a0a-433d-af3e-6288400520b2",
 CellID->151593018]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1795026, 37360, 197, 2, 40, "MathCaption",ExpressionUUID->"2926dc8e-c7b0-406f-b2ef-9b3a046ae978",
 CellID->237785666],
Cell[CellGroupData[{
Cell[1795248, 37366, 288, 6, 41, "Input",ExpressionUUID->"2530bc27-8969-4b41-afef-b483a4e70a43",
 CellID->298472260],
Cell[1795539, 37374, 235, 4, 24, "Output",ExpressionUUID->"cd9e5393-820c-4613-8e21-bfcec2453b1d",
 CellID->74152669]
}, Open  ]]
}, Open  ]],
Cell[1795801, 37382, 193, 2, 40, "MathCaption",ExpressionUUID->"a16aed2f-37fa-4248-ba25-3c8378564892",
 CellID->496593996],
Cell[CellGroupData[{
Cell[1796019, 37388, 119, 1, 40, "MathCaption",ExpressionUUID->"25bca102-3ddb-4059-98e3-35c7aae25c7c",
 CellID->489039817],
Cell[CellGroupData[{
Cell[1796163, 37393, 274, 5, 25, "Input",ExpressionUUID->"d3fcb365-ab54-4fbc-ac80-d853920a31e6",
 CellID->88658836],
Cell[1796440, 37400, 321, 7, 40, "Output",ExpressionUUID->"8a1968aa-ddb9-4eab-82a9-4b0f6bf50f91",
 CellID->66741005]
}, Open  ]],
Cell[CellGroupData[{
Cell[1796798, 37412, 305, 6, 25, "Input",ExpressionUUID->"2b68496a-c06d-45c2-9723-4c9454ca991d",
 CellID->471752441],
Cell[1797106, 37420, 210, 3, 24, "Output",ExpressionUUID->"2bb09ddc-01cd-4317-91ba-1578df6a351a",
 CellID->374027243]
}, Open  ]],
Cell[CellGroupData[{
Cell[1797353, 37428, 385, 9, 25, "Input",ExpressionUUID->"793f838d-bed0-425b-a5d7-d426729ca4e0",
 CellID->796052010],
Cell[1797741, 37439, 237, 4, 24, "Output",ExpressionUUID->"1c051f22-4445-47b6-9c34-29f9148dc836",
 CellID->199263104]
}, Open  ]]
}, Open  ]],
Cell[1798005, 37447, 241, 4, 40, "MathCaption",ExpressionUUID->"32dfee19-2e50-4c9c-8391-d3d95a061bdd",
 CellID->143975390],
Cell[CellGroupData[{
Cell[1798271, 37455, 382, 8, 45, "MathCaption",ExpressionUUID->"a789702a-61b4-4bb8-81e3-852e2f8f97d6",
 CellID->27787895],
Cell[CellGroupData[{
Cell[1798678, 37467, 278, 5, 41, "Input",ExpressionUUID->"cb755224-414c-425a-9f6c-247ecbfedcd5",
 CellID->236189147],
Cell[1798959, 37474, 196, 3, 24, "Output",ExpressionUUID->"1c882708-b36b-4dba-a0a8-1ab20f0fbad9",
 CellID->557292175]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1799204, 37483, 187, 2, 40, "MathCaption",ExpressionUUID->"fc810b30-7b27-4ff3-956c-a06f30673832",
 CellID->35640176],
Cell[CellGroupData[{
Cell[1799416, 37489, 245, 5, 41, "Input",ExpressionUUID->"6a6e4854-8819-4f33-aa0c-e02cc6e28a36",
 CellID->761312723],
Cell[1799664, 37496, 197, 3, 24, "Output",ExpressionUUID->"6fe740a5-ee25-4fdc-9f9b-2741f130453f",
 CellID->290448543]
}, Open  ]],
Cell[CellGroupData[{
Cell[1799898, 37504, 279, 5, 41, "Input",ExpressionUUID->"9c003edc-bebd-4a8b-9035-fb3cd9bf1f76",
 CellID->60940240],
Cell[1800180, 37511, 192, 3, 24, "Output",ExpressionUUID->"907cd726-df94-4c9f-b6b3-fdf2794e4df8",
 CellID->200714134]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1800421, 37520, 306, 5, 57, "MathCaption",ExpressionUUID->"85ef1705-8de8-4b82-b654-9de6e4db892f",
 CellID->459322947],
Cell[CellGroupData[{
Cell[1800752, 37529, 693, 17, 41, "Input",ExpressionUUID->"560f8828-0669-49b0-9558-6741a4dd6088",
 CellID->132252402],
Cell[1801448, 37548, 50511, 964, 299, "Output",ExpressionUUID->"7ab5285a-9352-459c-be9d-f43ec23141bb",
 CellID->504232840]
}, Open  ]]
}, Open  ]],
Cell[1851986, 38516, 446, 9, 40, "MathCaption",ExpressionUUID->"4822f68f-bdbd-49ca-aeb1-0f284bddc6f5",
 CellID->142153006],
Cell[1852435, 38527, 721, 17, 62, "MathCaption",ExpressionUUID->"91d5e03c-dd1e-4838-8496-588fede3251c",
 CellID->468172920],
Cell[CellGroupData[{
Cell[1853181, 38548, 527, 12, 62, "MathCaption",ExpressionUUID->"d5849d2a-302d-4f44-8d88-0a8920d1b70d",
 CellID->75005970],
Cell[CellGroupData[{
Cell[1853733, 38564, 912, 23, 102, "Input",ExpressionUUID->"eb3efec0-0d60-4152-a744-c70f2a5b7f57",
 CellID->696606258],
Cell[1854648, 38589, 158, 2, 23, "EchoTiming",ExpressionUUID->"1c686108-4c1d-4d25-8ae9-0e950cf0c285",
 CellID->114796685],
Cell[1854809, 38593, 245, 5, 24, "Output",ExpressionUUID->"3c616d5a-762f-44c0-96ad-d23a12d5654a",
 CellID->36436604]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1855103, 38604, 209, 2, 40, "MathCaption",ExpressionUUID->"dfa7b79c-212e-4724-b232-3bc53429e538",
 CellID->595536278],
Cell[CellGroupData[{
Cell[1855337, 38610, 964, 24, 129, "Input",ExpressionUUID->"ca927cb3-4b81-4200-9c31-5f4c1aa1ae0b",
 CellID->135456001],
Cell[1856304, 38636, 156, 2, 23, "EchoTiming",ExpressionUUID->"36a881af-1c68-4087-a8eb-7e68bd359ffb",
 CellID->47425443],
Cell[1856463, 38640, 169, 3, 24, "Output",ExpressionUUID->"e2f36e7c-e60b-481e-89ec-49ac22d66ff5",
 CellID->3416495]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1856681, 38649, 228, 3, 40, "MathCaption",ExpressionUUID->"796a24a3-e417-4b3c-98fe-717748591c11",
 CellID->197268136],
Cell[CellGroupData[{
Cell[1856934, 38656, 1018, 25, 129, "Input",ExpressionUUID->"5a891e7c-bfe1-472b-9ae0-0c9444018952",
 CellID->325931600],
Cell[1857955, 38683, 897, 25, 21, "Echo",ExpressionUUID->"510df0bd-da77-4d67-a26a-89809ac41837",
 CellID->211601392],
Cell[1858855, 38710, 172, 3, 24, "Output",ExpressionUUID->"0fa85a32-acfd-4570-9d34-176580a3411b",
 CellID->24671701]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1859076, 38719, 415, 10, 40, "MathCaption",ExpressionUUID->"190cab5f-dcb7-4b0d-978d-730b429f839c",
 CellID->109955765],
Cell[1859494, 38731, 241, 5, 26, "ExampleDelimiter",ExpressionUUID->"3db4bb68-5941-4591-9955-77182d8b09f2",
 CellID->65014155]
}, Open  ]],
Cell[CellGroupData[{
Cell[1859772, 38741, 490, 10, 62, "MathCaption",ExpressionUUID->"e4d643d2-0839-4e74-9736-06d85f247202",
 CellID->213110306],
Cell[1860265, 38753, 522, 13, 41, "Input",ExpressionUUID->"46cb4607-e799-4b0d-a013-56acf5b4beec",
 CellID->149658206],
Cell[CellGroupData[{
Cell[1860812, 38770, 478, 10, 25, "Input",ExpressionUUID->"ca32e6e0-fb11-4b2c-b513-e05eeae7d908",
 CellID->174838792],
Cell[1861293, 38782, 816, 13, 60, "Output",ExpressionUUID->"7cd37ba9-ed24-4047-aaf7-ee0fe9fb65db",
 CellID->6197371]
}, Open  ]],
Cell[CellGroupData[{
Cell[1862146, 38800, 470, 11, 25, "Input",ExpressionUUID->"95e69e44-66e7-4bf7-bc38-6900064555e3",
 CellID->758948014],
Cell[1862619, 38813, 8554, 211, 366, "Output",ExpressionUUID->"86c4c849-7778-4e86-ab94-fbae93ada2eb",
 CellID->52008308]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1871222, 39030, 207, 2, 40, "MathCaption",ExpressionUUID->"fe1eb189-4714-4b05-88df-137b19a3af94",
 CellID->123945420],
Cell[1871432, 39034, 475, 12, 41, "Input",ExpressionUUID->"28876f7c-fb90-41f5-92c7-842a30f670fd",
 CellID->121949185],
Cell[1871910, 39048, 476, 11, 25, "Input",ExpressionUUID->"dcde7698-ae49-41ff-aee1-d31846a2a7af",
 CellID->112015657],
Cell[CellGroupData[{
Cell[1872411, 39063, 470, 11, 25, "Input",ExpressionUUID->"16e6ca4f-f99e-4b14-8566-c369a53b95e3",
 CellID->397875431],
Cell[1872884, 39076, 14870, 315, 359, "Output",ExpressionUUID->"98dc5fd5-e3f6-42a2-9b84-6948620a4cd2",
 CellID->797935073]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1887815, 39398, 191, 2, 74, "TutorialMoreAboutSection",ExpressionUUID->"5f56aaf9-78db-4341-b909-8fecaee71b09",
 CellID->300332198],
Cell[1888009, 39402, 303, 6, 24, "TutorialMoreAbout",ExpressionUUID->"e9ca2037-ef5e-4655-9f9b-1a8ce38d4e44",
 CellID->353617896],
Cell[1888315, 39410, 402, 7, 24, "TutorialMoreAbout",ExpressionUUID->"30690779-ef18-4c4d-b9a2-4c115a23cab0",
 CellID->822407248]
}, Open  ]],
Cell[CellGroupData[{
Cell[1888754, 39422, 127, 1, 74, "RelatedTutorialsSection",ExpressionUUID->"bb87d0f4-b7f3-472f-a5c1-133a17fc68da",
 CellID->95960386],
Cell[1888884, 39425, 107, 1, 24, "RelatedTutorials",ExpressionUUID->"657bd0c0-a625-4084-a383-120fb375b3bb",
 CellID->657441003]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1889040, 39432, 110, 1, 72, "MetadataSection",ExpressionUUID->"0eb62a5b-9663-49cf-b5e1-c26f21dde72f",
 CellID->127671852],
Cell[1889153, 39435, 473, 11, 26, "History",ExpressionUUID->"5ecc98b4-4355-484b-89ee-c4dbfd47e69c",
 CellID->120211482],
Cell[CellGroupData[{
Cell[1889651, 39450, 122, 1, 21, "CategorizationSection",ExpressionUUID->"e03e3233-73a0-43a4-92b6-b51e1bcdbccf",
 CellID->412176238],
Cell[1889776, 39453, 137, 2, 70, "Categorization",ExpressionUUID->"94355122-d079-42ab-9312-727675d3c5af",
 CellID->244398777],
Cell[1889916, 39457, 153, 2, 70, "Categorization",ExpressionUUID->"cf5119e0-ad0e-44e6-b3a0-73c68197d608",
 CellID->35632880],
Cell[1890072, 39461, 150, 2, 70, "Categorization",ExpressionUUID->"66a7dd64-42ba-441c-a876-a158a9e65fa4",
 CellID->26538629],
Cell[1890225, 39465, 169, 2, 70, "Categorization",ExpressionUUID->"3fa411c9-52ba-4960-82cb-8c882396450d",
 CellID->149680849]
}, Closed]],
Cell[CellGroupData[{
Cell[1890431, 39472, 109, 1, 21, "KeywordsSection",ExpressionUUID->"d98ba340-4912-4f71-98e9-f6300faf4014",
 CellID->13307797],
Cell[1890543, 39475, 99, 1, 70, "Keywords",ExpressionUUID->"090c59c6-c29f-4931-9cfd-7d217ea96b73",
 CellID->559025098]
}, Closed]]
}, Open  ]]
}
]
*)

