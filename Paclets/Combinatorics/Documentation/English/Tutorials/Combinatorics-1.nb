(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    884277,      17401]
NotebookOptionsPosition[    852451,      16672]
NotebookOutlinePosition[    852990,      16690]
CellTagsIndexPosition[    852947,      16687]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Combinatorics", "Title",
 CellID->28422271,ExpressionUUID->"29863ea0-08dc-46b8-b497-cb6f5f528f0c"],

Cell["\<\
This paclet is for the study of combinatorics. I am a combinatorialist. That \
means I study combinatorics.\
\>", "Text",
 CellChangeTimes->{{3.8996485172153187`*^9, 3.899648553535448*^9}},
 CellID->106321115,ExpressionUUID->"c9cda3f0-8f4e-4867-9c22-5cb081f88c20"],

Cell[CellGroupData[{

Cell[TextData[{
 "The functions defined in the ",
 Cell[BoxData[
 "PeterBurbery`Combinatorics`"], "InlineFormula",ExpressionUUID->
  "52ca241b-5f2c-48bd-8a73-2dcacebef876"],
 " context provide support for finding solutions to combinatorics-related \
problems."
}], "Text",
 CellChangeTimes->{{3.899745229360871*^9, 3.8997452455618725`*^9}},
 CellID->345096676,ExpressionUUID->"2768152e-beee-4843-9be6-e009958bdc11"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<PeterBurbery`Combinatorics`\>\"", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8997452577387857`*^9, 3.8997452674639006`*^9}},
 CellLabel->"In[469]:=",
 CellID->13366579,ExpressionUUID->"e2eeb9fd-67f8-4057-a237-75c17f9df3c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Indexes", "Section",
 CellChangeTimes->{{3.8997452154486513`*^9, 3.89974521642293*^9}},
 CellID->12394907,ExpressionUUID->"94baa558-d014-4759-9107-28d629b3dc9c"],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["PermutationIndex",
      BaseStyle->"Link",
      ButtonData->"paclet:PeterBurbery/Combinatorics/ref/PermutationIndex"], 
     "[", 
     StyleBox["perm", "TI"], "]"}], Cell[TextData[{
     "gives the lexicographic index of permutation ",
     Cell[BoxData[
      StyleBox["perm", "TI"]], "InlineFormula",ExpressionUUID->
      "c3a9b2df-3536-4ba6-a032-b09c13c94405"],
     "."
    }], "TableText",ExpressionUUID->"5373f39b-27ad-4f63-9be4-43407bcaaca0"]},
   {
    RowBox[{
     ButtonBox["PermutationFromIndex",
      BaseStyle->"Link",
      ButtonData->
       "paclet:PeterBurbery/Combinatorics/ref/PermutationFromIndex"], "[", 
     RowBox[{
      StyleBox["index", "TI"], ",", 
      StyleBox["lengthInput", "TI"]}], "]"}], Cell[TextData[{
     "returns the permutation of length ",
     Cell[BoxData[
      StyleBox["lengthInput", "TI"]], "InlineFormula",ExpressionUUID->
      "5566bf9d-4ac0-4589-a567-799baccf1e46"],
     " corresponding to the ",
     Cell[BoxData[
      StyleBox["index", "TI"]], "InlineFormula",ExpressionUUID->
      "9f72b394-0f03-42b2-9680-2ddca649f2cf"],
     "th permutation in lexicographic order."
    }], "TableText",ExpressionUUID->"8834a3b8-8409-4b2e-9854-69d4ff7f8678"]},
   {
    RowBox[{
     ButtonBox["SubsetIndex",
      BaseStyle->"Link",
      ButtonData->"paclet:PeterBurbery/Combinatorics/ref/SubsetIndex"], "[", 
     StyleBox["list", "TI"], "]"}], Cell[TextData[{
     "gives the index of subset ",
     Cell[BoxData[
      StyleBox["list", "TI"]], "InlineFormula",ExpressionUUID->
      "48fd3c73-5ee7-4c63-9ce1-84af978e78dc"],
     "."
    }], "TableText",ExpressionUUID->"2d1eed3b-216e-4791-8e17-49930bb4ceb4"]},
   {
    RowBox[{
     ButtonBox["SubsetFromIndex",
      BaseStyle->"Link",
      ButtonData->"paclet:PeterBurbery/Combinatorics/ref/SubsetFromIndex"], 
     "[", 
     RowBox[{
      StyleBox["index", "TI"], ",", 
      StyleBox["len", "TI"]}], "]"}], Cell[TextData[{
     "returns a subset of length ",
     Cell[BoxData[
      StyleBox["len", "TI"]], "InlineFormula",ExpressionUUID->
      "cd32c1e8-0196-4786-8744-c82ed3f32b5f"],
     " with given ",
     Cell[BoxData[
      StyleBox["index", "TI"]], "InlineFormula",ExpressionUUID->
      "ddaa4f59-e129-4a33-8439-9bdb3e8e88b4"],
     "."
    }], "TableText",ExpressionUUID->"18fa3548-9fd2-41ce-8cb1-cdc045afd7e3"]}
  }]], "DefinitionBox",
 CellChangeTimes->{{3.8996489194866652`*^9, 3.8996489239158792`*^9}, {
  3.8996489732810745`*^9, 3.899649018075349*^9}},
 CellID->124942403,ExpressionUUID->"5cf8197e-0767-4bab-b6e7-417fa46727b6"],

Cell["Computing the index or using the index to get the thing.", "Caption",
 CellChangeTimes->{{3.899648939170776*^9, 3.899648948044263*^9}},
 CellID->520428306,ExpressionUUID->"4bfbbaaf-1b42-48b6-a4c3-a5a305a58f86"],

Cell[CellGroupData[{

Cell["Find the index of a random permutation", "MathCaption",
 CellChangeTimes->{{3.8996490265856886`*^9, 3.899649027609098*^9}, {
  3.899649101671936*^9, 3.89964910509002*^9}},
 CellID->31903801,ExpressionUUID->"f43506a1-7771-4158-a9c0-54ec169572db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PermutationIndex", "[", 
  RowBox[{"Echo", "[", 
   RowBox[{"PermutationList", "@", 
    RowBox[{"RandomPermutation", "[", "9", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.899649113130213*^9, 3.899649141332165*^9}, {
  3.899745290140775*^9, 3.89974529169009*^9}},
 CellLabel->"In[12]:=",
 CellID->2966739,ExpressionUUID->"7598acd3-6389-4c45-952d-4464965c6e07"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "6", ",", "9", ",", "1", ",", "4", ",", "8", ",", "3", ",", "5", 
   ",", "7"}], "}"}]], "Echo",
 CellChangeTimes->{3.89974529222071*^9},
 CellID->829559052,ExpressionUUID->"f066f4bb-3bf8-434a-9e49-a31946bcb20a"],

Cell[BoxData["64843"], "Output",
 CellChangeTimes->{{3.8996491225399823`*^9, 3.89964914209574*^9}, 
   3.8996520286243095`*^9, {3.899745273636671*^9, 3.899745292381153*^9}},
 CellLabel->"Out[12]=",
 CellID->9137373,ExpressionUUID->"917f2ec9-b63e-4e49-b26d-a2b29b07ae42"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get the permutation:", "MathCaption",
 CellChangeTimes->{{3.8996520511050043`*^9, 3.8996520553866453`*^9}},
 CellID->591549556,ExpressionUUID->"04b3ff9b-2b0f-4761-a60b-8aed1ef39046"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PermutationFromIndex", "[", 
  RowBox[{"%", ",", "9"}], "]"}]], "Input",
 CellChangeTimes->{{3.899652056939474*^9, 3.8996520688523808`*^9}, 
   3.899745282259115*^9},
 CellLabel->"In[13]:=",
 CellID->281752241,ExpressionUUID->"d783cff5-3a8f-4ff8-a24b-8cbc5953d7ae"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "6", ",", "9", ",", "1", ",", "4", ",", "8", ",", "3", ",", "5", 
   ",", "7"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8996520692746305`*^9, {3.8997452827484465`*^9, 3.8997452937134447`*^9}},
 CellLabel->"Out[13]=",
 CellID->69714785,ExpressionUUID->"75324d47-0bb8-4560-a357-e84a5be0cfe1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Here's a neat application of this function. We can use this to solve Project \
Euler Problem 24 Lexicographic Permutations. What is the millionth \
lexicographic permutation of the digits 0, 1, 2, 3, 4, 5, 6, 7, 8, and 9?\
\>", "MathCaption",
 CellChangeTimes->{{3.8996520754404263`*^9, 3.8996520969633904`*^9}, {
  3.8996521422657013`*^9, 3.8996521703500643`*^9}, {3.8996522111981525`*^9, 
  3.899652213145729*^9}},
 CellID->114128779,ExpressionUUID->"f2ad7b3e-b352-44eb-93a1-3b887280e5a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PermutationFromIndex", "[", 
  RowBox[{"1000000", 
   RowBox[{"(*", 
    RowBox[{"a", " ", "million", " ", "is", " ", 
     SuperscriptBox["10", "6"]}], "*)"}], ",", " ", "10"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"because", " ", 
     RowBox[{"Length", "[", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", 
        "7", ",", "8", ",", ",", "9"}], "}"}], "]"}], " ", "is", " ", "10"}], 
    ",", " ", 
    RowBox[{"not", " ", "9"}]}], "*)"}], "]"}]], "Input",
 CellChangeTimes->{{3.899652171087674*^9, 3.89965222121475*^9}},
 CellLabel->"In[6]:=",
 CellID->123225409,ExpressionUUID->"157110f4-2bfa-40c5-9452-4bedaadba74c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "8", ",", "9", ",", "4", ",", "10", ",", "2", ",", "6", ",", "5", 
   ",", "7", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.8996522223619137`*^9},
 CellLabel->"Out[6]=",
 CellID->565924694,ExpressionUUID->"dfc393ca-515e-4aa7-a026-227ca82b12ac"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Now we need to subtract 1. 10 will become 9 and 1 will become 0.\
\>", "MathCaption",
 CellChangeTimes->{{3.8996522243268967`*^9, 3.8996522450338764`*^9}},
 CellID->198474650,ExpressionUUID->"f7523c82-c609-4bd7-ac6a-101682c7d785"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PermutationFromIndex", "[", 
   RowBox[{"1000000", 
    RowBox[{"(*", 
     RowBox[{"a", " ", "million", " ", "is", " ", 
      SuperscriptBox["10", "6"]}], "*)"}], ",", " ", "10"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"because", " ", 
      RowBox[{"Length", "[", 
       RowBox[{"{", 
        RowBox[{
        "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", 
         "7", ",", "8", ",", ",", "9"}], "}"}], "]"}], " ", "is", " ", "10"}],
      ",", " ", 
     RowBox[{"not", " ", "9"}]}], "*)"}], "]"}], "-", "1"}]], "Input",
 CellChangeTimes->{{3.899652171087674*^9, 3.899652246534876*^9}},
 CellLabel->"In[7]:=",
 CellID->96415675,ExpressionUUID->"f6ee380a-4739-4721-a9c7-73721e6057cf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "7", ",", "8", ",", "3", ",", "9", ",", "1", ",", "5", ",", "4", 
   ",", "6", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.899652247281952*^9},
 CellLabel->"Out[7]=",
 CellID->187311040,ExpressionUUID->"2d250a20-2f3b-4743-912c-9184cd3d8621"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Now we can use FromDigits.", "MathCaption",
 CellChangeTimes->{{3.8996522487264442`*^9, 3.899652252784938*^9}},
 CellID->460961065,ExpressionUUID->"17bb4736-5c24-4017-850c-e27538d06e14"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FromDigits", "[", 
  RowBox[{
   RowBox[{"PermutationFromIndex", "[", 
    RowBox[{"1000000", 
     RowBox[{"(*", 
      RowBox[{"a", " ", "million", " ", "is", " ", 
       SuperscriptBox["10", "6"]}], "*)"}], ",", " ", "10"}], 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"because", " ", 
       RowBox[{"Length", "[", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",",
           "7", ",", "8", ",", ",", "9"}], "}"}], "]"}], " ", "is", " ", 
       "10"}], ",", " ", 
      RowBox[{"not", " ", "9"}]}], "*)"}], "]"}], "-", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.8996522533532248`*^9, 3.8996522551887875`*^9}},
 CellLabel->"In[8]:=",
 CellID->348169710,ExpressionUUID->"a52ff0eb-569f-4664-8c55-c62fa39b960a"],

Cell[BoxData["2783915460"], "Output",
 CellChangeTimes->{3.899652255470524*^9},
 CellLabel->"Out[8]=",
 CellID->12882949,ExpressionUUID->"36c2d559-21c4-4959-9b9a-f77a2523a960"]
}, Open  ]]
}, Open  ]],

Cell["And that's the answer!", "MathCaption",
 CellChangeTimes->{{3.89965225662661*^9, 3.8996522596513786`*^9}},
 CellID->215938530,ExpressionUUID->"bcb88308-d60b-448d-85d9-7cb5da93ed7b"],

Cell[CellGroupData[{

Cell["Find a subset's index.", "MathCaption",
 CellChangeTimes->{{3.8996522652356243`*^9, 3.8996522782278132`*^9}},
 CellID->142381604,ExpressionUUID->"2353ef8d-02c7-40d7-813d-2f1ec64d119b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SubsetIndex", "[", 
  RowBox[{"{", 
   RowBox[{"2", ",", "4", ",", "6"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.899649113130213*^9, 3.899649141332165*^9}, {
  3.8996492440052633`*^9, 3.8996492489526763`*^9}, {3.899652340536313*^9, 
  3.8996523429820943`*^9}},
 CellLabel->"In[10]:=",
 CellID->347150823,ExpressionUUID->"50a8906b-1d34-4e2b-a456-bb398b05870c"],

Cell[BoxData["29"], "Output",
 CellChangeTimes->{3.899649249426399*^9, 3.8996523432964063`*^9},
 CellLabel->"Out[10]=",
 CellID->160256386,ExpressionUUID->"af55f9e2-6bed-4d19-95da-a7e33b9c2c07"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find the subset.", "MathCaption",
 CellChangeTimes->{{3.8996523033906155`*^9, 3.8996523056939783`*^9}},
 CellID->9730894,ExpressionUUID->"aa13f796-6084-4be4-b68f-69ee4bd51d4d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SubsetFromIndex", "[", 
  RowBox[{"29", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8996523072109237`*^9, 3.8996523135576286`*^9}, {
   3.899652352094467*^9, 3.899652356909275*^9}, 3.8996524416453767`*^9},
 CellLabel->"In[15]:=",
 CellID->172885937,ExpressionUUID->"cd861de1-c55b-4f65-b868-a785400a8b7b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "4", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8996523138515444`*^9, {3.899652353031444*^9, 3.8996523572976427`*^9}, 
   3.899652442068437*^9},
 CellLabel->"Out[15]=",
 CellID->13566930,ExpressionUUID->"e6a0cb59-0782-43fb-a8a8-a82b96865c08"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Central Binomial Coefficient", "Section",
 CellChangeTimes->{{3.899998156015087*^9, 3.899998160832127*^9}},
 CellID->57602827,ExpressionUUID->"791c635c-1e03-4372-949b-fa4d96525879"],

Cell[CellGroupData[{

Cell["Compute the central binomial coefficient.", "MathCaption",
 CellChangeTimes->{{3.8997476435567694`*^9, 3.8997476507177753`*^9}},
 CellID->237155657,ExpressionUUID->"b83f86d4-9d83-499b-ab40-b811d6930b35"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CentralBinomialCoefficient", "[", "54", "]"}]], "Input",
 CellChangeTimes->{{3.8997476651664467`*^9, 3.8997476699335685`*^9}},
 CellLabel->"In[18]:=",
 CellID->114626256,ExpressionUUID->"3077938e-d049-4d8d-a063-4be05b563e2d"],

Cell[BoxData["24857784491537440929618523018320"], "Output",
 CellChangeTimes->{3.899747670314257*^9},
 CellLabel->"Out[18]=",
 CellID->21111411,ExpressionUUID->"6d2b2a59-ce78-473d-bfec-f2e65f9d3bd9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CentralBinomialCoefficient", "[", "n", "]"}]], "Input",
 CellChangeTimes->{{3.8997476651664467`*^9, 3.8997476753389606`*^9}},
 CellLabel->"In[19]:=",
 CellID->72962348,ExpressionUUID->"c4b67cc6-ff82-4326-9aca-1b660f7fcf40"],

Cell[BoxData[
 RowBox[{"Binomial", "[", 
  RowBox[{
   RowBox[{"2", " ", "n"}], ",", "n"}], "]"}]], "Output",
 CellChangeTimes->{3.8997476756374416`*^9},
 CellLabel->"Out[19]=",
 CellID->144120138,ExpressionUUID->"a2a6b74a-9608-4542-8d81-ef5b97813ba2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find the generating function.", "MathCaption",
 CellChangeTimes->{{3.8997476899312167`*^9, 3.8997476938746185`*^9}},
 CellID->172959633,ExpressionUUID->"df0d52ca-bffd-45a1-b519-758e939bc207"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeneratingFunction", "[", 
  RowBox[{
   RowBox[{"CentralBinomialCoefficient", "[", "n", "]"}], ",", "n", ",", 
   "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997476816627703`*^9, 3.8997476852531166`*^9}},
 CellLabel->"In[20]:=",
 CellID->103210421,ExpressionUUID->"6bac6800-1d14-44bc-b44b-9c6af422b49a"],

Cell[BoxData[
 FractionBox["1", 
  SqrtBox[
   RowBox[{"1", "-", 
    RowBox[{"4", " ", "x"}]}]]]], "Output",
 CellChangeTimes->{3.8997476858034697`*^9},
 CellLabel->"Out[20]=",
 CellID->78156444,ExpressionUUID->"0c88aaef-5c05-4d5b-855f-86576afe9105"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Make a table of values.", "MathCaption",
 CellChangeTimes->{{3.899747695855169*^9, 3.8997477013055053`*^9}},
 CellID->452686366,ExpressionUUID->"8860ba47-aeb6-4f5b-b590-f7dec769ca82"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{"\"\<n\>\"", "->", 
       RowBox[{"CentralBinomialCoefficient", "[", "#", "]"}]}], "|>"}], "&"}],
     "]"}], "[", 
   RowBox[{"Range", "[", "21", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997477026804385`*^9, 3.899747753265658*^9}},
 CellLabel->"In[22]:=",
 CellID->422387114,ExpressionUUID->"ce3c5df2-0acd-4351-a168-d4b9b9224a22"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      1 -> <|"n" -> 2|>, 2 -> <|"n" -> 6|>, 3 -> <|"n" -> 20|>, 
       4 -> <|"n" -> 70|>, 5 -> <|"n" -> 252|>, 6 -> <|"n" -> 924|>, 
       7 -> <|"n" -> 3432|>, 8 -> <|"n" -> 12870|>, 9 -> <|"n" -> 48620|>, 
       10 -> <|"n" -> 184756|>, 11 -> <|"n" -> 705432|>, 
       12 -> <|"n" -> 2704156|>, 13 -> <|"n" -> 10400600|>, 
       14 -> <|"n" -> 40116600|>, 15 -> <|"n" -> 155117520|>, 
       16 -> <|"n" -> 601080390|>, 17 -> <|"n" -> 2333606220|>, 
       18 -> <|"n" -> 9075135300|>, 19 -> <|"n" -> 35345263800|>, 
       20 -> <|"n" -> 137846528820|>, 21 -> <|"n" -> 538257874440|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, "n"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 1, {All}]]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n"}, {
         TypeSystem`Atom[Integer]}], 21], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, "n"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 1, {All}]]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n"}, {
         TypeSystem`Atom[Integer]}], 21], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 1, "DataRowCount" -> 21, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["n", 
                  Style[
                  "n", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "n"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "n"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["70"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["252"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["924"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12870"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48620"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["184756"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["11"], 
                  Style[
                   RawBoxes["11"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[11]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["705432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["12"], 
                  Style[
                   RawBoxes["12"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[12]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2704156"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["13"], 
                  Style[
                   RawBoxes["13"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[13]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10400600"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["14"], 
                  Style[
                   RawBoxes["14"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[14]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["40116600"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["15"], 
                  Style[
                   RawBoxes["15"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[15]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["155117520"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["16"], 
                  Style[
                   RawBoxes["16"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[16]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["601080390"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["17"], 
                  Style[
                   RawBoxes["17"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[17]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2333606220"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["18"], 
                  Style[
                   RawBoxes["18"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[18]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9075135300"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["19"], 
                  Style[
                   RawBoxes["19"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[19]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35345263800"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["20"], 
                  Style[
                   RawBoxes["20"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[20]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["137846528820"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 21, 1], {1, 21 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 21, 1], {1, 21 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[21, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[21, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 21, 1], {1, 21 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 21, 1], {1, 21 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{167., {299.8544921875, 305.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{167., {299.8544921875, 305.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.899747734907628*^9, 3.899747753800619*^9}},
 CellLabel->"Out[22]=",
 CellID->209532304,ExpressionUUID->"cc2bb6ca-d1b9-4f35-9ca1-76c6f1a54a4e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The digits of ",
 Cell[BoxData[
  RowBox[{"(", GridBox[{
     {
      RowBox[{"2", " ", 
       SuperscriptBox["10", "n"]}]},
     {
      SuperscriptBox["10", "n"]}
    }], ")"}]], "Input",ExpressionUUID->
  "38927e40-f4ef-4697-b16f-62681046dae5"],
 " for ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"n", "=", "0"}], ",", " ", "1", ",", " ", "\[Ellipsis]"}]], 
  "InlineFormula",
  FormatType->StandardForm,ExpressionUUID->
  "fd074d53-baf5-4e3f-aacc-f3e00b1d68dd"],
 " are"
}], "MathCaption",
 CellChangeTimes->{{3.8997477689988422`*^9, 3.899747816005345*^9}},
 CellID->56151557,ExpressionUUID->"19c2ede4-6eb4-40b0-81d5-58bc4f1c47e3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{"\"\<n\>\"", "->", 
       RowBox[{"IntegerLength", "[", 
        RowBox[{"CentralBinomialCoefficient", "[", 
         SuperscriptBox["10", "#"], "]"}], "]"}]}], "|>"}], "&"}], "]"}], "[", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "8"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997477026804385`*^9, 3.899747753265658*^9}, {
  3.8997478167689037`*^9, 3.899747942424721*^9}},
 CellLabel->"In[32]:=",
 CellID->392545453,ExpressionUUID->"315ff5bc-9c19-4562-8561-5cdfe006134d"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      0 -> <|"n" -> 1|>, 1 -> <|"n" -> 6|>, 2 -> <|"n" -> 59|>, 
       3 -> <|"n" -> 601|>, 4 -> <|"n" -> 6019|>, 5 -> <|"n" -> 60204|>, 
       6 -> <|"n" -> 602057|>, 7 -> <|"n" -> 6020597|>, 
       8 -> <|"n" -> 60205995|>|>, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[9]} -> 1, {All, "n"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 1, {All}]]], 9, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n"}, {
         TypeSystem`Atom[Integer]}], 9], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[9]} -> 1, {All, "n"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 1, {All}]]], 9, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n"}, {
         TypeSystem`Atom[Integer]}], 9], "Path" -> {}, "DisplayedRowCount" -> 
     9, "DisplayedColumnCount" -> 1, "DataRowCount" -> 9, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["n", 
                  Style[
                  "n", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "n"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "n"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["59"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["601"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6019"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["60204"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["602057"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6020597"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["60205995"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{111., {140.8544921875, 146.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{111., {140.8544921875, 146.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8997479192062416`*^9, 3.899747952478814*^9}},
 CellLabel->"Out[32]=",
 CellID->242033643,ExpressionUUID->"6938d4d0-e2d1-4edf-99a6-e133788f86ff"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "These digits are converging to the digits of ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["log", "10"], "4"}]], "InlineFormula",
  FormatType->StandardForm,ExpressionUUID->
  "602a2475-7c52-48c6-a01d-ccab6572cf4a"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.8997479573414755`*^9, 3.8997479693046136`*^9}},
 CellID->100832978,ExpressionUUID->"a69dedee-e839-4836-915d-a71a2bd2e532"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"Log", "[", 
    RowBox[{"10", ",", "4"}], "]"}], ",", "40"}], "]"}]], "Input",
 CellChangeTimes->{{3.899747972700562*^9, 3.8997479800159883`*^9}},
 CellLabel->"In[34]:=",
 CellID->438135564,ExpressionUUID->"ede388b5-b5be-44c7-9b93-ba162d25e9a4"],

Cell[BoxData["0.6020599913279623904274777894489860535363797629242170826208`40.\
"], "Output",
 CellChangeTimes->{{3.8997479755106287`*^9, 3.8997479802943263`*^9}},
 CellLabel->"Out[34]=",
 CellID->287705978,ExpressionUUID->"19947191-b27a-4d1e-b954-8c5a7c725dd1"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Modified Central Binomial Coefficient", "Section",
 CellChangeTimes->{{3.899998176319814*^9, 3.8999981835522823`*^9}},
 CellID->33461597,ExpressionUUID->"043711de-c6d3-40d5-b6bb-10780552ed50"],

Cell[CellGroupData[{

Cell["Let's look at the modified central binomial coefficient.", "MathCaption",
 CellChangeTimes->{{3.899748350767112*^9, 3.899748361595912*^9}, 
   3.8997484313509865`*^9},
 CellID->139662984,ExpressionUUID->"f2fd091d-1e6f-4e71-a2ff-d6101f367dc1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{"\"\<n\>\"", "->", 
       RowBox[{"ModifiedCentralBinomialCoefficient", "[", "#", "]"}]}], 
      "|>"}], "&"}], "]"}], "[", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "21"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997484150227227`*^9, 3.8997484239360027`*^9}},
 CellLabel->"In[958]:=",
 CellID->398286937,ExpressionUUID->"3981f08a-a266-4abb-a862-b0e114c10814"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      0 -> <|"n" -> 1|>, 1 -> <|"n" -> 1|>, 2 -> <|"n" -> 2|>, 
       3 -> <|"n" -> 3|>, 4 -> <|"n" -> 6|>, 5 -> <|"n" -> 10|>, 
       6 -> <|"n" -> 20|>, 7 -> <|"n" -> 35|>, 8 -> <|"n" -> 70|>, 
       9 -> <|"n" -> 126|>, 10 -> <|"n" -> 252|>, 11 -> <|"n" -> 462|>, 
       12 -> <|"n" -> 924|>, 13 -> <|"n" -> 1716|>, 14 -> <|"n" -> 3432|>, 
       15 -> <|"n" -> 6435|>, 16 -> <|"n" -> 12870|>, 17 -> <|"n" -> 24310|>, 
       18 -> <|"n" -> 48620|>, 19 -> <|"n" -> 92378|>, 
       20 -> <|"n" -> 184756|>, 21 -> <|"n" -> 352716|>|>, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[11]} -> 1, {All, "n"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 1, {All}]]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n"}, {
         TypeSystem`Atom[Integer]}], 22], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[11]} -> 1, {All, "n"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 1, {All}]]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n"}, {
         TypeSystem`Atom[Integer]}], 22], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 1, "DataRowCount" -> 22, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["n", 
                  Style[
                  "n", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "n"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "n"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["70"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["126"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["252"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["11"], 
                  Style[
                   RawBoxes["11"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[11]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["462"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["12"], 
                  Style[
                   RawBoxes["12"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[12]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["924"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["13"], 
                  Style[
                   RawBoxes["13"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[13]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1716"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["14"], 
                  Style[
                   RawBoxes["14"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[14]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["15"], 
                  Style[
                   RawBoxes["15"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[15]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6435"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["16"], 
                  Style[
                   RawBoxes["16"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[16]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12870"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["17"], 
                  Style[
                   RawBoxes["17"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[17]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24310"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["18"], 
                  Style[
                   RawBoxes["18"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[18]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48620"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["19"], 
                  Style[
                   RawBoxes["19"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[19]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["92378"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{167., {299.8544921875, 305.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{167., {299.8544921875, 305.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.899748417919546*^9, 3.8997484245594244`*^9}},
 CellLabel->"Out[958]=",
 CellID->52134645,ExpressionUUID->"ae81a371-746d-4db3-8569-2cdc530451cb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The generating function is  ",
 Cell[BoxData[
  FractionBox[
   RowBox[{"1", "-", 
    RowBox[{"4", 
     SuperscriptBox["x", "2"]}], "-", 
    SqrtBox[
     RowBox[{"1", "-", 
      RowBox[{"4", 
       SuperscriptBox["x", "2"]}]}]]}], 
   RowBox[{"2", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", 
       SuperscriptBox["x", "3"]}], "-", 
      SuperscriptBox["x", "2"]}], ")"}]}]]], "Input",
  CellChangeTimes->{{3.899748705369384*^9, 3.8997487177386065`*^9}},
  ExpressionUUID->"196301bb-b992-4b2a-984c-ba30bd9726e4"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.8997485285983276`*^9, 3.8997485425858026`*^9}, {
  3.899748699828844*^9, 3.899748721088228*^9}, {3.8997487739717274`*^9, 
  3.8997487739717274`*^9}},
 CellID->254962743,ExpressionUUID->"bd50a358-8472-43db-92f1-56cedce74600"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SeriesCoefficient", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"1", "-", 
     RowBox[{"4", 
      SuperscriptBox["x", "2"]}], "-", 
     SqrtBox[
      RowBox[{"1", "-", 
       RowBox[{"4", 
        SuperscriptBox["x", "2"]}]}]]}], 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", 
        SuperscriptBox["x", "3"]}], "-", 
       SuperscriptBox["x", "2"]}], ")"}]}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"9", "-", "1"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.899748705369384*^9, 3.899748800970345*^9}},
 CellLabel->"In[978]:=",
 CellID->208306947,ExpressionUUID->"267bdab1-9ef9-4c49-b84e-33848c84d88e"],

Cell[BoxData["126"], "Output",
 CellChangeTimes->{{3.8997487419944305`*^9, 3.8997488023627462`*^9}},
 CellLabel->"Out[978]=",
 CellID->2750224,ExpressionUUID->"cb1ae230-d39e-470b-a545-a1d1657fe595"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["This matches our output.", "MathCaption",
 CellChangeTimes->{{3.899748807336094*^9, 3.899748813611977*^9}},
 CellID->48756516,ExpressionUUID->"38bf2122-d295-44fe-b7d6-2b0ba09be970"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<n\>\"", "->", 
        RowBox[{"ModifiedCentralBinomialCoefficient", "[", "#", "]"}]}], ",", 
       
       RowBox[{"\"\<seriesCoefficient\>\"", "->", 
        RowBox[{"SeriesCoefficient", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"1", "-", 
            RowBox[{"4", 
             SuperscriptBox["x", "2"]}], "-", 
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{"4", 
               SuperscriptBox["x", "2"]}]}]]}], 
           RowBox[{"2", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", 
               SuperscriptBox["x", "3"]}], "-", 
              SuperscriptBox["x", "2"]}], ")"}]}]], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", 
            RowBox[{"#", "-", "1"}]}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<equal\>\"", "->", 
        RowBox[{
         RowBox[{"ModifiedCentralBinomialCoefficient", "[", "#", "]"}], "===", 
         RowBox[{"SeriesCoefficient", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"1", "-", 
             RowBox[{"4", 
              SuperscriptBox["x", "2"]}], "-", 
             SqrtBox[
              RowBox[{"1", "-", 
               RowBox[{"4", 
                SuperscriptBox["x", "2"]}]}]]}], 
            RowBox[{"2", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", 
                SuperscriptBox["x", "3"]}], "-", 
               SuperscriptBox["x", "2"]}], ")"}]}]], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", 
             RowBox[{"#", "-", "1"}]}], "}"}]}], "]"}]}]}]}], "|>"}], "&"}], 
    "]"}], "[", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "21"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997488260575113`*^9, 3.899748876670103*^9}},
 CellLabel->"In[980]:=",
 CellID->415836666,ExpressionUUID->"2641e297-6863-4235-8bc2-47fc51ba52c5"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      0 -> <|"n" -> 1, "seriesCoefficient" -> 0, "equal" -> False|>, 
       1 -> <|"n" -> 1, "seriesCoefficient" -> 1, "equal" -> True|>, 
       2 -> <|"n" -> 2, "seriesCoefficient" -> 2, "equal" -> True|>, 
       3 -> <|"n" -> 3, "seriesCoefficient" -> 3, "equal" -> True|>, 
       4 -> <|"n" -> 6, "seriesCoefficient" -> 6, "equal" -> True|>, 
       5 -> <|"n" -> 10, "seriesCoefficient" -> 10, "equal" -> True|>, 
       6 -> <|"n" -> 20, "seriesCoefficient" -> 20, "equal" -> True|>, 
       7 -> <|"n" -> 35, "seriesCoefficient" -> 35, "equal" -> True|>, 
       8 -> <|"n" -> 70, "seriesCoefficient" -> 70, "equal" -> True|>, 
       9 -> <|"n" -> 126, "seriesCoefficient" -> 126, "equal" -> True|>, 
       10 -> <|"n" -> 252, "seriesCoefficient" -> 252, "equal" -> True|>, 
       11 -> <|"n" -> 462, "seriesCoefficient" -> 462, "equal" -> True|>, 
       12 -> <|"n" -> 924, "seriesCoefficient" -> 924, "equal" -> True|>, 
       13 -> <|"n" -> 1716, "seriesCoefficient" -> 1716, "equal" -> True|>, 
       14 -> <|"n" -> 3432, "seriesCoefficient" -> 3432, "equal" -> True|>, 
       15 -> <|"n" -> 6435, "seriesCoefficient" -> 6435, "equal" -> True|>, 
       16 -> <|"n" -> 12870, "seriesCoefficient" -> 12870, "equal" -> True|>, 
       17 -> <|"n" -> 24310, "seriesCoefficient" -> 24310, "equal" -> True|>, 
       18 -> <|"n" -> 48620, "seriesCoefficient" -> 48620, "equal" -> True|>, 
       19 -> <|"n" -> 92378, "seriesCoefficient" -> 92378, "equal" -> True|>, 
       20 -> <|"n" -> 184756, "seriesCoefficient" -> 184756, "equal" -> 
         True|>, 21 -> <|
        "n" -> 352716, "seriesCoefficient" -> 352716, "equal" -> True|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[13]} -> 1, {All, "n"} -> 
        1, {All, "seriesCoefficient"} -> 1, {All, "equal"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34], "seriesCoefficient" -> 
             TypeSystem`PackageScope`AtomShape[34], "equal" -> 
             TypeSystem`PackageScope`AtomShape[36]|>], 
           DirectedInfinity[1], 3, {All}]]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n", "seriesCoefficient", "equal"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 22], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[13]} -> 1, {All, "n"} -> 
        1, {All, "seriesCoefficient"} -> 1, {All, "equal"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34], "seriesCoefficient" -> 
             TypeSystem`PackageScope`AtomShape[34], "equal" -> 
             TypeSystem`PackageScope`AtomShape[36]|>], 
           DirectedInfinity[1], 3, {All}]]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n", "seriesCoefficient", "equal"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 22], "Path" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     22, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["n", 
                  Style[
                  "n", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "n"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "n"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["seriesCoefficient", 
                  Style[
                  "seriesCoefficient", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "seriesCoefficient"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "seriesCoefficient"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["equal", 
                  Style[
                  "equal", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "equal"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "equal"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["70"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["70"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["126"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["126"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["252"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["252"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["11"], 
                  Style[
                   RawBoxes["11"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[11]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["462"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["462"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["12"], 
                  Style[
                   RawBoxes["12"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[12]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["924"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["924"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["13"], 
                  Style[
                   RawBoxes["13"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[13]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1716"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1716"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["14"], 
                  Style[
                   RawBoxes["14"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[14]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["15"], 
                  Style[
                   RawBoxes["15"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[15]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6435"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6435"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["16"], 
                  Style[
                   RawBoxes["16"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[16]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12870"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12870"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["17"], 
                  Style[
                   RawBoxes["17"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[17]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24310"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24310"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["18"], 
                  Style[
                   RawBoxes["18"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[18]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48620"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48620"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["19"], 
                  Style[
                   RawBoxes["19"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[19]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["92378"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["92378"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{256., {299.8544921875, 305.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{256., {299.8544921875, 305.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8997488503458753`*^9, 3.899748877365996*^9}},
 CellLabel->"Out[980]=",
 CellID->14127691,ExpressionUUID->"5599e82a-0cd2-4e01-ab51-4e33be1716e4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
If we start at 1, we will get all True instead of a False at 0.\
\>", "MathCaption",
 CellChangeTimes->{{3.8997488812603807`*^9, 3.8997488916654415`*^9}},
 CellID->699600308,ExpressionUUID->"2da1dd1c-e47f-4ea8-b8ba-bcf09aa5bd9d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<n\>\"", "->", 
        RowBox[{"ModifiedCentralBinomialCoefficient", "[", "#", "]"}]}], ",", 
       RowBox[{"\"\<seriesCoefficient\>\"", "->", 
        RowBox[{"SeriesCoefficient", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"1", "-", 
            RowBox[{"4", 
             SuperscriptBox["x", "2"]}], "-", 
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{"4", 
               SuperscriptBox["x", "2"]}]}]]}], 
           RowBox[{"2", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", 
               SuperscriptBox["x", "3"]}], "-", 
              SuperscriptBox["x", "2"]}], ")"}]}]], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", 
            RowBox[{"#", "-", "1"}]}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<equal\>\"", "->", 
        RowBox[{
         RowBox[{"ModifiedCentralBinomialCoefficient", "[", "#", "]"}], "===", 
         RowBox[{"SeriesCoefficient", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"1", "-", 
             RowBox[{"4", 
              SuperscriptBox["x", "2"]}], "-", 
             SqrtBox[
              RowBox[{"1", "-", 
               RowBox[{"4", 
                SuperscriptBox["x", "2"]}]}]]}], 
            RowBox[{"2", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", 
                SuperscriptBox["x", "3"]}], "-", 
               SuperscriptBox["x", "2"]}], ")"}]}]], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", 
             RowBox[{"#", "-", "1"}]}], "}"}]}], "]"}]}]}]}], "|>"}], "&"}], 
    "]"}], "[", 
   RowBox[{"Range", "[", 
    RowBox[{"2", ",", "21"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.899748892320259*^9, 3.8997488971939325`*^9}},
 CellLabel->"In[981]:=",
 CellID->6091911,ExpressionUUID->"acc42a94-28db-43b7-b697-59374793c6c2"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      2 -> <|"n" -> 2, "seriesCoefficient" -> 2, "equal" -> True|>, 
       3 -> <|"n" -> 3, "seriesCoefficient" -> 3, "equal" -> True|>, 
       4 -> <|"n" -> 6, "seriesCoefficient" -> 6, "equal" -> True|>, 
       5 -> <|"n" -> 10, "seriesCoefficient" -> 10, "equal" -> True|>, 
       6 -> <|"n" -> 20, "seriesCoefficient" -> 20, "equal" -> True|>, 
       7 -> <|"n" -> 35, "seriesCoefficient" -> 35, "equal" -> True|>, 
       8 -> <|"n" -> 70, "seriesCoefficient" -> 70, "equal" -> True|>, 
       9 -> <|"n" -> 126, "seriesCoefficient" -> 126, "equal" -> True|>, 
       10 -> <|"n" -> 252, "seriesCoefficient" -> 252, "equal" -> True|>, 
       11 -> <|"n" -> 462, "seriesCoefficient" -> 462, "equal" -> True|>, 
       12 -> <|"n" -> 924, "seriesCoefficient" -> 924, "equal" -> True|>, 
       13 -> <|"n" -> 1716, "seriesCoefficient" -> 1716, "equal" -> True|>, 
       14 -> <|"n" -> 3432, "seriesCoefficient" -> 3432, "equal" -> True|>, 
       15 -> <|"n" -> 6435, "seriesCoefficient" -> 6435, "equal" -> True|>, 
       16 -> <|"n" -> 12870, "seriesCoefficient" -> 12870, "equal" -> True|>, 
       17 -> <|"n" -> 24310, "seriesCoefficient" -> 24310, "equal" -> True|>, 
       18 -> <|"n" -> 48620, "seriesCoefficient" -> 48620, "equal" -> True|>, 
       19 -> <|"n" -> 92378, "seriesCoefficient" -> 92378, "equal" -> True|>, 
       20 -> <|"n" -> 184756, "seriesCoefficient" -> 184756, "equal" -> 
         True|>, 21 -> <|
        "n" -> 352716, "seriesCoefficient" -> 352716, "equal" -> True|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[14]} -> 1, {All, "n"} -> 
        1, {All, "seriesCoefficient"} -> 1, {All, "equal"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34], "seriesCoefficient" -> 
             TypeSystem`PackageScope`AtomShape[34], "equal" -> 
             TypeSystem`PackageScope`AtomShape[36]|>], 
           DirectedInfinity[1], 3, {All}]]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n", "seriesCoefficient", "equal"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 20], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[14]} -> 1, {All, "n"} -> 
        1, {All, "seriesCoefficient"} -> 1, {All, "equal"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34], "seriesCoefficient" -> 
             TypeSystem`PackageScope`AtomShape[34], "equal" -> 
             TypeSystem`PackageScope`AtomShape[36]|>], 
           DirectedInfinity[1], 3, {All}]]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n", "seriesCoefficient", "equal"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 20], "Path" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     20, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["n", 
                  Style[
                  "n", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "n"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "n"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["seriesCoefficient", 
                  Style[
                  "seriesCoefficient", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "seriesCoefficient"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "seriesCoefficient"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["equal", 
                  Style[
                  "equal", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "equal"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "equal"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["70"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["70"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["126"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["126"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["252"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["252"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["11"], 
                  Style[
                   RawBoxes["11"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[11]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["462"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["462"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["12"], 
                  Style[
                   RawBoxes["12"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[12]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["924"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["924"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["13"], 
                  Style[
                   RawBoxes["13"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[13]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1716"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1716"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["14"], 
                  Style[
                   RawBoxes["14"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[14]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["15"], 
                  Style[
                   RawBoxes["15"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[15]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6435"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6435"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["16"], 
                  Style[
                   RawBoxes["16"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[16]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12870"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12870"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["17"], 
                  Style[
                   RawBoxes["17"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[17]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24310"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24310"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["18"], 
                  Style[
                   RawBoxes["18"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[18]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48620"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48620"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["19"], 
                  Style[
                   RawBoxes["19"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[19]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["92378"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["92378"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["20"], 
                  Style[
                   RawBoxes["20"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[20]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["184756"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["184756"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["21"], 
                  Style[
                   RawBoxes["21"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[21]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[21]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["352716"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[21], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["352716"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[21], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[21], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{245., {289.3544921875, 294.6455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{245., {289.3544921875, 294.6455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8997488976810503`*^9},
 CellLabel->"Out[981]=",
 CellID->222447527,ExpressionUUID->"350cacfc-f3d9-4328-978d-e8b694387e77"]
}, Open  ]]
}, Closed]],

Cell[TextData[{
 "For more details, please visit ",
 ButtonBox["A001405",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://oeis.org/A001405"], None},
  ButtonNote->"https://oeis.org/A001405"],
 " on the ",
 ButtonBox["OEIS",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.oeis.org"], None},
  ButtonNote->"https://www.oeis.org"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.8997489380730906`*^9, 3.8997489629415245`*^9}},
 CellID->259341750,ExpressionUUID->"563f31ea-55ed-4d75-ab9b-003c901d5d2b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Derangements", "Section",
 CellChangeTimes->{{3.900001716707399*^9, 3.900001718337079*^9}},
 CellID->468515064,ExpressionUUID->"8f4cfabc-dce5-4c88-b354-6d94488bc0ec"],

Cell[CellGroupData[{

Cell["\<\
A derangement is a permutation in which none of the objects appear in their \
\"natural\" (i.e., ordered) place. For example, the derangements of {1,2,3}:\
\>", "MathCaption",
 CellChangeTimes->{{3.900001719532407*^9, 3.900001761585744*^9}},
 CellID->26838858,ExpressionUUID->"25a2f533-8afc-4b3c-aede-acf63b70597b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MultisetPartialDerangements", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.900001762302565*^9, 3.900001765800146*^9}},
 CellLabel->"In[80]:=",
 CellID->320045123,ExpressionUUID->"4455d744-25af-483a-ab40-62fc0937d666"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9000017661219664`*^9},
 CellLabel->"Out[80]=",
 CellID->144098166,ExpressionUUID->"3b26dff5-133d-4ef0-bf76-01aa3f3f35c3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Derangements of four elements:", "MathCaption",
 CellChangeTimes->{{3.900001773766389*^9, 3.9000017799101334`*^9}},
 CellID->502664438,ExpressionUUID->"d04fe5e1-0714-429c-a3e2-efbf84935857"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MultisetPartialDerangements", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.900001762302565*^9, 3.900001781585379*^9}},
 CellLabel->"In[81]:=",
 CellID->460674117,ExpressionUUID->"47780729-629f-4d5f-acd1-c6eac089fef1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "2", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9000017819345193`*^9},
 CellLabel->"Out[81]=",
 CellID->567622007,ExpressionUUID->"806c4663-4a79-4798-91e2-24770e3ecbcd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The have no cycles of length one.", "MathCaption",
 CellChangeTimes->{{3.9000017880964217`*^9, 3.9000017931595216`*^9}},
 CellID->318945664,ExpressionUUID->"5701f91e-7e0d-4917-a8b9-7708f920be97"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PermutationCycles", "/@", 
  RowBox[{"MultisetPartialDerangements", "[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9000017949864397`*^9, 3.9000018055689974`*^9}},
 CellLabel->"In[83]:=",
 CellID->228472135,ExpressionUUID->"f35939f1-9467-4a9e-aeae-0ac0fee32aa9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Cycles", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
   RowBox[{"Cycles", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "}"}], "]"}], ",", 
   RowBox[{"Cycles", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "4", ",", "3"}], "}"}], "}"}], "]"}], ",", 
   RowBox[{"Cycles", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "4", ",", "2"}], "}"}], "}"}], "]"}], ",", 
   RowBox[{"Cycles", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
   RowBox[{"Cycles", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "2", ",", "4"}], "}"}], "}"}], "]"}], ",", 
   RowBox[{"Cycles", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4", ",", "3", ",", "2"}], "}"}], "}"}], "]"}], ",", 
   RowBox[{"Cycles", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4", ",", "2", ",", "3"}], "}"}], "}"}], "]"}], ",", 
   RowBox[{"Cycles", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9000018008516097`*^9, 3.9000018058494134`*^9}},
 CellLabel->"Out[83]=",
 CellID->167688184,ExpressionUUID->"d36e98bf-2add-4311-85d7-52f5863d6454"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Apply", "[", "Identity", "]"}], "[", 
    RowBox[{"PermutationCycles", "[", "derangement", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"derangement", ",", 
     RowBox[{"MultisetPartialDerangements", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "]"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.900001816706499*^9, 3.9000018433125334`*^9}},
 CellLabel->"In[84]:=",
 CellID->498538805,ExpressionUUID->"41624195-a6e6-44e3-8e0a-57c6790425ed"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "4", ",", "3"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3", ",", "4", ",", "2"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3", ",", "2", ",", "4"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "4", ",", "3", ",", "2"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "4", ",", "2", ",", "3"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9000018437067103`*^9},
 CellLabel->"Out[84]=",
 CellID->488440420,ExpressionUUID->"75df63de-643c-4547-88a9-701e87b5059e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["This is one way to find derangements.", "MathCaption",
 CellChangeTimes->{{3.9000018804089394`*^9, 3.9000018875583515`*^9}},
 CellID->30430800,ExpressionUUID->"2b54ecbc-a10b-4b91-9653-1b0a6026c258"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MathWorldDerangements", "[", 
   RowBox[{"l_List", "?", "ListQ"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"perms", ",", "support"}], "}"}], ",", 
    RowBox[{
     RowBox[{"perms", "=", 
      RowBox[{"Permutations", "[", "l", "]"}]}], ";", 
     RowBox[{"support", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"PermutationSupport", "[", "perm", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"perm", ",", "perms"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"Pick", "[", 
      RowBox[{"perms", ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Length", "[", "perm", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"perm", ",", "support"}], "}"}]}], "]"}], ",", 
       RowBox[{"Length", "[", "l", "]"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9000018756561522`*^9, 3.9000019800611525`*^9}},
 CellLabel->"In[85]:=",
 CellID->338626900,ExpressionUUID->"80aee334-7f65-4353-bb1a-185d9178d61e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The support of a permutation ",
 Cell[BoxData[
  StyleBox["perm", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "5812f9fa-f953-47fa-b0e0-ea40a5e0d117"],
 " is the list of integers that are not fixed by ",
 Cell[BoxData[
  StyleBox["perm", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "5a916891-8a05-4436-856f-f1f50d6aea8a"],
 "."
}], "MathCaption",
 CellChangeTimes->{3.9000019951394978`*^9},
 CellID->33966879,ExpressionUUID->"688cd8b4-68ba-40f0-8577-1497a1c6709d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MathWorldDerangements", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.900001998444933*^9, 3.9000020053189926`*^9}},
 CellLabel->"In[86]:=",
 CellID->463235003,ExpressionUUID->"45aa8478-c27d-4605-a540-afc2ab20ae16"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.900002005678287*^9},
 CellLabel->"Out[86]=",
 CellID->130931456,ExpressionUUID->"76f48552-e3e9-4e30-ae22-490c81a9b56c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MathWorldDerangements", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.900001998444933*^9, 3.900002008204274*^9}},
 CellLabel->"In[87]:=",
 CellID->220685702,ExpressionUUID->"6bcdafe3-9b04-48a2-a43e-70dd3fe54d0e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "2", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9000020085724945`*^9},
 CellLabel->"Out[87]=",
 CellID->529899974,ExpressionUUID->"45a16a00-9b44-4196-a5b7-dd46c44cc127"]
}, Open  ]]
}, Open  ]],

Cell["\<\
A more efficient algorithm would not generate all the permutations and then \
pick the derangements, but instead just generate the derangements.\
\>", "MathCaption",
 CellChangeTimes->{{3.900002015940313*^9, 3.9000020454361534`*^9}},
 CellID->667234787,ExpressionUUID->"da8b13e2-b463-4a54-aa61-8adf809b2bad"],

Cell[CellGroupData[{

Cell[TextData[{
 "Make a random multiset of the ",
 ButtonBox["hazel",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.color-name.com/hazel.color"], None},
  ButtonNote->"https://www.color-name.com/hazel.color"],
 " color rainbow palette. My eye-color is hazel."
}], "MathCaption",
 CellChangeTimes->{{3.8997489871714535`*^9, 3.8997489916544557`*^9}, {
  3.8997490704101877`*^9, 3.8997490920400324`*^9}, {3.8999993782318583`*^9, 
  3.8999993858835297`*^9}},
 CellID->20786854,ExpressionUUID->"4c803681-4fbd-46ab-9275-3f2628f789b1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hazelRainbowPalette", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"LUVColor", "[", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"\"\<#\>\"", "<>", "color"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"color", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<c9c789\>\"", ",", "\"\<94c989\>\"", ",", "\"\<89c9b5\>\"", ",", 
        "\"\<89a7c9\>\"", ",", "\"\<c989b9\>\"", ",", "\"\<c99089\>\""}], 
       "}"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8997490958088837`*^9, 3.8997491771133757`*^9}, {
  3.899749211475692*^9, 3.8997492176574*^9}},
 CellLabel->"In[20]:=",
 CellID->712923585,ExpressionUUID->"cc518051-0b47-4527-be52-615a2377de4f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|
    "color" -> LUVColor[
      0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7621596783781963, -0.3310170840401606, 0.08359158699165539]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.6713375885659421, -0.17833924308420873`, -0.26467794346262646`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"]}], "}"}]], "Output",
 CellChangeTimes->{{3.8997491597998548`*^9, 3.8997491774983788`*^9}, 
   3.8997492179964013`*^9, 3.89975638797796*^9, 3.8999993766673307`*^9, 
   3.900004535884571*^9},
 CellLabel->"Out[20]=",
 CellID->241317559,ExpressionUUID->"8e3978c4-3cd5-4682-a41c-07c7bc826c3d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Let's find all the permutations where every element has moved. If an element \
stays in place, we name that a fixed point. A derangement is a permutation \
with 0 fixed points.\
\>", "MathCaption",
 CellChangeTimes->{{3.8999994605599117`*^9, 3.89999948938451*^9}},
 CellID->122464914,ExpressionUUID->"b2cab360-7f8e-4cb9-9c34-d8df9cad1965"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"smallerset", "=", 
  RowBox[{"RandomSample", "[", 
   RowBox[{"hazelRainbowPalette", ",", "4"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.899999489992942*^9, 3.8999994955304327`*^9}},
 CellLabel->"In[33]:=",
 CellID->435070527,ExpressionUUID->"2ea0defc-cf50-4ff4-93b4-f1b4111c4338"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|
    "color" -> LUVColor[
      0.7621596783781963, -0.3310170840401606, 0.08359158699165539]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"]}], "}"}]], "Output",
 CellChangeTimes->{3.8999994959641266`*^9},
 CellLabel->"Out[33]=",
 CellID->411803166,ExpressionUUID->"2be94706-6fe8-4a50-8fef-bde6038250c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MultisetPartialDerangements", "[", "smallerset", "]"}]], "Input",
 CellChangeTimes->{{3.899999497895197*^9, 3.8999995033378725`*^9}},
 CellLabel->"In[34]:=",
 CellID->57678985,ExpressionUUID->"f25ef3fa-9f61-49df-9215-52fe614f2ace"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     TemplateBox[<|
      "color" -> LUVColor[
        0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
      "LUVColorSwatchTemplate"], ",", 
     TemplateBox[<|
      "color" -> LUVColor[
        0.7621596783781963, -0.3310170840401606, 0.08359158699165539]|>,
      "LUVColorSwatchTemplate"], ",", 
     TemplateBox[<|
      "color" -> LUVColor[
        0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
      "LUVColorSwatchTemplate"], ",", 
     TemplateBox[<|
      "color" -> LUVColor[
        0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
      "LUVColorSwatchTemplate"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[<|
      "color" -> LUVColor[
        0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
      "LUVColorSwatchTemplate"], ",", 
     TemplateBox[<|
      "color" -> LUVColor[
        0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
      "LUVColorSwatchTemplate"], ",", 
     TemplateBox[<|
      "color" -> LUVColor[
        0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
      "LUVColorSwatchTemplate"], ",", 
     TemplateBox[<|
      "color" -> LUVColor[
        0.7621596783781963, -0.3310170840401606, 0.08359158699165539]|>,
      "LUVColorSwatchTemplate"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[<|
      "color" -> LUVColor[
        0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
      "LUVColorSwatchTemplate"], ",", 
     TemplateBox[<|
      "color" -> LUVColor[
        0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
      "LUVColorSwatchTemplate"], ",", 
     TemplateBox[<|
      "color" -> LUVColor[
        0.7621596783781963, -0.3310170840401606, 0.08359158699165539]|>,
      "LUVColorSwatchTemplate"], ",", 
     TemplateBox[<|
      "color" -> LUVColor[
        0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
      "LUVColorSwatchTemplate"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[<|
      "color" -> LUVColor[
        0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
      "LUVColorSwatchTemplate"], ",", 
     TemplateBox[<|
      "color" -> LUVColor[
        0.7621596783781963, -0.3310170840401606, 0.08359158699165539]|>,
      "LUVColorSwatchTemplate"], ",", 
     TemplateBox[<|
      "color" -> LUVColor[
        0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
      "LUVColorSwatchTemplate"], ",", 
     TemplateBox[<|
      "color" -> LUVColor[
        0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
      "LUVColorSwatchTemplate"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[<|
      "color" -> LUVColor[
        0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
      "LUVColorSwatchTemplate"], ",", 
     TemplateBox[<|
      "color" -> LUVColor[
        0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
      "LUVColorSwatchTemplate"], ",", 
     TemplateBox[<|
      "color" -> LUVColor[
        0.7621596783781963, -0.3310170840401606, 0.08359158699165539]|>,
      "LUVColorSwatchTemplate"], ",", 
     TemplateBox[<|
      "color" -> LUVColor[
        0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
      "LUVColorSwatchTemplate"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[<|
      "color" -> LUVColor[
        0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
      "LUVColorSwatchTemplate"], ",", 
     TemplateBox[<|
      "color" -> LUVColor[
        0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
      "LUVColorSwatchTemplate"], ",", 
     TemplateBox[<|
      "color" -> LUVColor[
        0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
      "LUVColorSwatchTemplate"], ",", 
     TemplateBox[<|
      "color" -> LUVColor[
        0.7621596783781963, -0.3310170840401606, 0.08359158699165539]|>,
      "LUVColorSwatchTemplate"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[<|
      "color" -> LUVColor[
        0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
      "LUVColorSwatchTemplate"], ",", 
     TemplateBox[<|
      "color" -> LUVColor[
        0.7621596783781963, -0.3310170840401606, 0.08359158699165539]|>,
      "LUVColorSwatchTemplate"], ",", 
     TemplateBox[<|
      "color" -> LUVColor[
        0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
      "LUVColorSwatchTemplate"], ",", 
     TemplateBox[<|
      "color" -> LUVColor[
        0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
      "LUVColorSwatchTemplate"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[<|
      "color" -> LUVColor[
        0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
      "LUVColorSwatchTemplate"], ",", 
     TemplateBox[<|
      "color" -> LUVColor[
        0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
      "LUVColorSwatchTemplate"], ",", 
     TemplateBox[<|
      "color" -> LUVColor[
        0.7621596783781963, -0.3310170840401606, 0.08359158699165539]|>,
      "LUVColorSwatchTemplate"], ",", 
     TemplateBox[<|
      "color" -> LUVColor[
        0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
      "LUVColorSwatchTemplate"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[<|
      "color" -> LUVColor[
        0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
      "LUVColorSwatchTemplate"], ",", 
     TemplateBox[<|
      "color" -> LUVColor[
        0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
      "LUVColorSwatchTemplate"], ",", 
     TemplateBox[<|
      "color" -> LUVColor[
        0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
      "LUVColorSwatchTemplate"], ",", 
     TemplateBox[<|
      "color" -> LUVColor[
        0.7621596783781963, -0.3310170840401606, 0.08359158699165539]|>,
      "LUVColorSwatchTemplate"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8999995035773416`*^9},
 CellLabel->"Out[34]=",
 CellID->181761386,ExpressionUUID->"1c5b1969-6964-47c1-975c-470dfe720403"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["What is the length?", "MathCaption",
 CellChangeTimes->{{3.8999995068329773`*^9, 3.899999510003465*^9}},
 CellID->169212145,ExpressionUUID->"b5db532c-5b12-428a-8047-8d7ed3ec3697"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"MultisetPartialDerangements", "[", "smallerset", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8999995106824245`*^9, 3.899999511928542*^9}},
 CellLabel->"In[35]:=",
 CellID->228145050,ExpressionUUID->"29b12264-aa72-4b91-950e-204a57731fae"],

Cell[BoxData["9"], "Output",
 CellChangeTimes->{3.89999951223448*^9},
 CellLabel->"Out[35]=",
 CellID->147813536,ExpressionUUID->"aa09011d-a3f2-44a9-960b-92bce6787057"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
How can we compute the length faster and more efficiently? We can compute \
this with the subfactorial. The subfactorial is written ! n. The subfactorial \
is also called the derangement number for this reason. The nth subfactorial \
is the number of permutations of n objects in which no object appears in its \
natural place (i. e., \"derangements\").\
\>", "MathCaption",
 CellChangeTimes->{{3.899999513424281*^9, 3.8999995447138405`*^9}, {
  3.8999997145466285`*^9, 3.899999727745224*^9}, {3.8999998001117473`*^9, 
  3.8999998244090023`*^9}},
 CellID->388376040,ExpressionUUID->"f4faf4d3-94d4-4b2e-bfa2-b2c265ebfb41"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "smallerset", "]"}]], "Input",
 CellChangeTimes->{{3.8999997372328978`*^9, 3.899999740040417*^9}},
 CellLabel->"In[38]:=",
 CellID->131012795,ExpressionUUID->"07240d2b-0f6f-4f8b-8242-5af8a5eeddc8"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.899999740318926*^9},
 CellLabel->"Out[38]=",
 CellID->127222859,ExpressionUUID->"95466749-a6c2-49aa-9caf-c04c6f011711"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Subfactorial", "[", 
  RowBox[{"Length", "[", "smallerset", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.899999731550415*^9, 3.899999743174319*^9}},
 CellLabel->"In[39]:=",
 CellID->844247,ExpressionUUID->"719d76b5-4a27-406b-806d-59dfe453e417"],

Cell[BoxData["9"], "Output",
 CellChangeTimes->{3.899999743495629*^9},
 CellLabel->"Out[39]=",
 CellID->91695846,ExpressionUUID->"330dea22-5ca7-468e-9746-cffed5f70a96"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here's a table:", "MathCaption",
 CellChangeTimes->{{3.900000206167984*^9, 3.9000002082387094`*^9}},
 CellID->205495515,ExpressionUUID->"159cc44c-235b-484d-88e1-67d35413ced5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Subfactorial", "[", 
  RowBox[{"Range", "[", "10", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.900000212608915*^9, 3.900000214762991*^9}},
 CellLabel->"In[57]:=",
 CellID->13581624,ExpressionUUID->"32d0986b-bc65-4208-9aa1-44b305e67f6a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "2", ",", "9", ",", "44", ",", "265", ",", "1854", ",", 
   "14833", ",", "133496", ",", "1334961"}], "}"}]], "Output",
 CellChangeTimes->{3.900000215093608*^9},
 CellLabel->"Out[57]=",
 CellID->1801989,ExpressionUUID->"a0e890d2-e2e4-45b7-8955-1919e0d5d40d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Now we can find the number of derangements for a set with many elements.\
\>", "MathCaption",
 CellChangeTimes->{{3.899999747618002*^9, 3.899999761060192*^9}},
 CellID->488934143,ExpressionUUID->"c0197bc7-b22a-4591-8806-d2948b2cd1af"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Subfactorial", "[", "100", "]"}]], "Input",
 CellChangeTimes->{{3.899999761604085*^9, 3.8999997635205793`*^9}},
 CellLabel->"In[40]:=",
 CellID->52403940,ExpressionUUID->"e17a94e1-d5ba-43ff-8054-e203ab242bff"],

Cell[BoxData[\
"34332795984163804765195977526776142032365783805375784983543400282685180793327\
632432791396429850988990237345920155783984828001486412574060553756854137069878\
601"], "Output",
 CellChangeTimes->{3.8999997638379545`*^9},
 CellLabel->"Out[40]=",
 CellID->27588445,ExpressionUUID->"95165ae1-57eb-42f5-bedf-eca142aa39fb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["We couldn't do this the other way.", "MathCaption",
 CellChangeTimes->{{3.899999765010272*^9, 3.8999997697004747`*^9}},
 CellID->733937479,ExpressionUUID->"9ccadf12-a266-49b6-9aee-845b7e61273c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MultisetPartialDerangements", "[", 
  RowBox[{"Range", "[", "100", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.899999770312089*^9, 3.8999997758190117`*^9}},
 CellLabel->"In[41]:=",
 CellID->288697611,ExpressionUUID->"54d0bb40-af6b-4cdb-b2aa-c348c67aa9d7"],

Cell[BoxData[
 TemplateBox[{
  "Permutations", "fac", 
   "\"In \\!\\(\\*RowBox[{\\\"Permutations\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \
\\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"11\\\", \\\",\\\", \\\"12\\\", \\\",\\\", \\\"13\\\", \\\",\\\", \\\"14\\\
\", \\\",\\\", \\\"15\\\", \\\",\\\", \\\"16\\\", \\\",\\\", \\\"17\\\", \
\\\",\\\", \\\"18\\\", \\\",\\\", \\\"19\\\", \\\",\\\", \\\"20\\\", \
\\\",\\\", \\\"21\\\", \\\",\\\", \\\"22\\\", \\\",\\\", \\\"23\\\", \
\\\",\\\", \\\"24\\\", \\\",\\\", \\\"25\\\", \\\",\\\", \\\"26\\\", \
\\\",\\\", \\\"27\\\", \\\",\\\", \\\"28\\\", \\\",\\\", \\\"29\\\", \
\\\",\\\", \\\"30\\\", \\\",\\\", \\\"31\\\", \\\",\\\", \\\"32\\\", \
\\\",\\\", \\\"33\\\", \\\",\\\", \\\"34\\\", \\\",\\\", \\\"35\\\", \
\\\",\\\", \\\"36\\\", \\\",\\\", \\\"37\\\", \\\",\\\", \\\"38\\\", \
\\\",\\\", \\\"39\\\", \\\",\\\", \\\"40\\\", \\\",\\\", \\\"41\\\", \
\\\",\\\", \\\"42\\\", \\\",\\\", \\\"43\\\", \\\",\\\", \\\"44\\\", \
\\\",\\\", \\\"45\\\", \\\",\\\", \\\"46\\\", \\\",\\\", \\\"47\\\", \
\\\",\\\", \\\"48\\\", \\\",\\\", \\\"49\\\", \\\",\\\", \\\"50\\\", \
\\\",\\\", \\\"51\\\", \\\",\\\", \\\"52\\\", \\\",\\\", \\\"53\\\", \
\\\",\\\", \\\"54\\\", \\\",\\\", \\\"55\\\", \\\",\\\", \\\"56\\\", \
\\\",\\\", \\\"57\\\", \\\",\\\", \\\"58\\\", \\\",\\\", \\\"59\\\", \
\\\",\\\", \\\"60\\\", \\\",\\\", \\\"61\\\", \\\",\\\", \\\"62\\\", \
\\\",\\\", \\\"63\\\", \\\",\\\", \\\"64\\\", \\\",\\\", \\\"65\\\", \
\\\",\\\", \\\"66\\\", \\\",\\\", \\\"67\\\", \\\",\\\", \\\"68\\\", \
\\\",\\\", \\\"69\\\", \\\",\\\", \\\"70\\\", \\\",\\\", \\\"71\\\", \
\\\",\\\", \\\"72\\\", \\\",\\\", \\\"73\\\", \\\",\\\", \\\"74\\\", \
\\\",\\\", \\\"75\\\", \\\",\\\", \\\"76\\\", \\\",\\\", \\\"77\\\", \
\\\",\\\", \\\"78\\\", \\\",\\\", \\\"79\\\", \\\",\\\", \\\"80\\\", \
\\\",\\\", \\\"81\\\", \\\",\\\", \\\"82\\\", \\\",\\\", \\\"83\\\", \
\\\",\\\", \\\"84\\\", \\\",\\\", \\\"85\\\", \\\",\\\", \\\"86\\\", \
\\\",\\\", \\\"87\\\", \\\",\\\", \\\"88\\\", \\\",\\\", \\\"89\\\", \
\\\",\\\", \\\"90\\\", \\\",\\\", \\\"91\\\", \\\",\\\", \\\"92\\\", \
\\\",\\\", \\\"93\\\", \\\",\\\", \\\"94\\\", \\\",\\\", \\\"95\\\", \
\\\",\\\", \\\"96\\\", \\\",\\\", \\\"97\\\", \\\",\\\", \\\"98\\\", \
\\\",\\\", \\\"99\\\", \\\",\\\", \\\"100\\\"}], \\\"}\\\"}], \\\"]\\\"}]\\) \
there are at least \\!\\(\\*RowBox[{\\\"21\\\"}]\\) distinct elements in the \
input list, and the requested permutation lengths include one that is at \
least \\!\\(\\*RowBox[{\\\"21\\\"}]\\). The result cannot be computed because \
it has length at least \\!\\(\\*RowBox[{\\\"21\\\"}]\\) factorial, which is \
not a machine integer.\"", 2, 41, 2, 34168874147026512227, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8999997761276746`*^9},
 CellLabel->"During evaluation of In[41]:=",
 CellID->508655313,ExpressionUUID->"11a09ede-14fc-4636-9e98-5e6fed1a97cc"],

Cell[BoxData[
 TemplateBox[{
  "Permutations", "argt", 
   "\"\\!\\(\\*RowBox[{\\\"Permutations\\\"}]\\) called with \
\\!\\(\\*RowBox[{\\\"0\\\"}]\\) arguments; \\!\\(\\*RowBox[{\\\"1\\\"}]\\) or \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"", 2, 41, 3, 
   34168874147026512227, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8999997761757793`*^9},
 CellLabel->"During evaluation of In[41]:=",
 CellID->488314992,ExpressionUUID->"61c4ec33-d153-4976-bebc-da595f21c199"],

Cell[BoxData[
 TemplateBox[{
  "Permutations", "argt", 
   "\"\\!\\(\\*RowBox[{\\\"Permutations\\\"}]\\) called with \
\\!\\(\\*RowBox[{\\\"0\\\"}]\\) arguments; \\!\\(\\*RowBox[{\\\"1\\\"}]\\) or \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"", 2, 41, 4, 
   34168874147026512227, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8999997761857786`*^9},
 CellLabel->"During evaluation of In[41]:=",
 CellID->360908914,ExpressionUUID->"85f5b3b5-9d25-4a99-ac1d-3396cc94da12"],

Cell[BoxData[
 RowBox[{"Permutations", "[", "]"}]], "Output",
 CellChangeTimes->{3.8999997761957803`*^9},
 CellLabel->"Out[41]=",
 CellID->45875794,ExpressionUUID->"f71ef3b5-9c62-4fbf-aa1e-49343805478f"]
}, Open  ]]
}, Open  ]],

Cell["Euler calculated the first ten terms of the subfactorial.", \
"MathCaption",
 CellChangeTimes->{{3.8999998337748055`*^9, 3.899999842134406*^9}},
 CellID->101847644,ExpressionUUID->"7bf90a20-6188-43c2-9f73-517fb25295f5"],

Cell["Here are representations of the subfactorial.", "MathCaption",
 CellChangeTimes->{{3.899999852981732*^9, 3.899999862513861*^9}, {
  3.900000092183587*^9, 3.900000097601494*^9}},
 CellID->211580469,ExpressionUUID->"41455be0-9584-4ae8-bd09-d4f8e2c1d502"],

Cell[TextData[Cell[BoxData[
 RowBox[{"!", 
  RowBox[{"n", "\[Congruent]", 
   RowBox[{
    RowBox[{"n", "!"}], 
    RowBox[{"(", 
     TemplateBox[{
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "k"], 
        RowBox[{"k", "!"}]], "k", "0", "n"},
      "InactiveSum",
      DisplayFunction->(RowBox[{
         UnderoverscriptBox[
          StyleBox["\[Sum]", "Inactive"], 
          RowBox[{#2, "=", #3}], #4], #}]& ),
      InterpretationFunction->(RowBox[{
         RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
         RowBox[{#, ",", 
           RowBox[{"{", 
             RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )], 
     ")"}]}]}]}]], \
"InlineFormula",ExpressionUUID->"59c47183-ae6a-4ba6-8651-4623d41cceda"]], \
"MathCaption",
 CellChangeTimes->{{3.8999998703353233`*^9, 3.8999999083280025`*^9}},
 CellID->247846069,ExpressionUUID->"b74b0eb3-1bb3-407b-aad3-bb46ef060f2d"],

Cell[TextData[Cell[BoxData[
 RowBox[{"!", 
  RowBox[{"n", "\[Congruent]", 
   TemplateBox[{
     RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
        RowBox[{
          RowBox[{"-", "k"}], "+", "n"}]], " ", 
       RowBox[{"k", "!"}], 
       FormBox[
        RowBox[{"(", 
          GridBox[{{"n"}, {"k"}}], ")"}], TraditionalForm]}], "k", "0", "n"},
    "InactiveSum",
    DisplayFunction->(RowBox[{
       UnderoverscriptBox[
        StyleBox["\[Sum]", "Inactive"], 
        RowBox[{#2, "=", #3}], #4], #}]& ),
    InterpretationFunction->(RowBox[{
       RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
       RowBox[{#, ",", 
         RowBox[{"{", 
           RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]}]}]], "Input",
 CellChangeTimes->{{3.900000012636448*^9, 
  3.9000000135435376`*^9}},ExpressionUUID->"95b0a267-0762-4027-b5fc-\
f254acd5cdff"]], "MathCaption",
 CellChangeTimes->{{3.900000032845299*^9, 3.9000000622998285`*^9}},
 CellID->819467623,ExpressionUUID->"00526329-007b-4bb3-a489-ea2c3205e127"],

Cell[CellGroupData[{

Cell["\<\
Here we use the incomplete gamma function for the subfactorial.\
\>", "MathCaption",
 CellChangeTimes->{{3.9000000999208097`*^9, 3.900000108064492*^9}},
 CellID->153350675,ExpressionUUID->"b3b33bd4-9e8b-4ddd-bc93-4657a2a0aff6"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    TemplateBox[{
      RowBox[{"n", "+", "1"}], 
      RowBox[{"-", "1"}]},
     "Gamma2"], "\[ExponentialE]"], ";"}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.900000072723094*^9, 3.9000000817699757`*^9}},
 CellLabel->"In[49]:=",
 CellID->151625861,ExpressionUUID->"9de6ac57-a921-4708-857f-728f1270ef0a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RecurrenceTable", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"subfactorial", "[", "1", "]"}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{"subfactorial", "[", "n", "]"}], "==", 
      RowBox[{
       RowBox[{"n", " ", "*", 
        RowBox[{"subfactorial", "[", 
         RowBox[{"n", "-", "1"}], "]"}]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "n"]}]}]}], "}"}], ",", "subfactorial", 
   ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9000001196612787`*^9, 3.9000001721396823`*^9}, {
  3.900000221153844*^9, 3.90000022924975*^9}},
 CellLabel->"In[58]:=",
 CellID->41007170,ExpressionUUID->"0a9f7884-a030-4518-87cf-d605e5683169"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "2", ",", "9", ",", "44", ",", "265", ",", "1854", ",", 
   "14833", ",", "133496", ",", "1334961"}], "}"}]], "Output",
 CellChangeTimes->{{3.9000001443351784`*^9, 3.9000001871423364`*^9}, 
   3.9000002296746855`*^9},
 CellLabel->"Out[58]=",
 CellID->123741561,ExpressionUUID->"a640971d-e134-4d77-99e5-aae5df8a9510"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["We can solve for the representation of the subfactorial.", "MathCaption",
 CellChangeTimes->{{3.9000003320324445`*^9, 3.9000003409815083`*^9}},
 CellID->107675305,ExpressionUUID->"ccd09c2a-2724-4bd4-a34f-7bf89f1c8e44"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"subfactorial", "[", "1", "]"}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{"subfactorial", "[", "n", "]"}], "==", 
      RowBox[{
       RowBox[{"n", " ", "*", 
        RowBox[{"subfactorial", "[", 
         RowBox[{"n", "-", "1"}], "]"}]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "n"]}]}]}], "}"}], ",", "subfactorial", 
   ",", "n"}], "]"}]], "Input",
 CellChangeTimes->{{3.9000001196612787`*^9, 3.9000001721396823`*^9}, {
  3.900000221153844*^9, 3.90000022924975*^9}, {3.9000003197300806`*^9, 
  3.9000003271115737`*^9}},
 CellLabel->"In[60]:=",
 CellID->295429183,ExpressionUUID->"6f22068e-e10b-4b67-a738-bbff8ceba994"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"subfactorial", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "n", "}"}], ",", 
      FractionBox[
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{"1", "+", "n"}], ",", 
         RowBox[{"-", "1"}]}], "]"}], "\[ExponentialE]"]}], "]"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.900000327909628*^9},
 CellLabel->"Out[60]=",
 CellID->211184276,ExpressionUUID->"6e23889d-dc8a-4c39-9ac8-e923ebc7f2e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<BackupFile\>\"", "]"}], "[", 
  "]"}]], "Input",
 CellChangeTimes->{{3.900005698888153*^9, 3.900005708106392*^9}},
 CellLabel->"In[63]:=",
 CellID->309536517,ExpressionUUID->"64f41a23-2d2e-494b-bd0f-1c8b5600ffc4"],

Cell[BoxData["\<\"C:\\\\Users\\\\pcb\\\\Documents\\\\GitHub\\\\combinatorics-\
paclet\\\\Paclets\\\\Combinatorics\\\\Documentation\\\\English\\\\Tutorials\\\
\\Combinatorics-0.nb\"\>"], "Output",
 CellChangeTimes->{3.9000057141416273`*^9},
 CellLabel->"Out[63]=",
 CellID->378659440,ExpressionUUID->"ca6e255e-35e1-4094-b5b3-e8b85c132f14"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<BackupFile\>\"", "]"}], "[", 
  "]"}]], "Input",
 CellChangeTimes->{{3.900005698888153*^9, 3.900005717826419*^9}},
 CellLabel->"In[64]:=",
 CellID->14451647,ExpressionUUID->"3b966260-56e3-475d-849c-28571063b6fd"]
}, Open  ]],

Cell[TextData[{
 "For details, please visit ",
 ButtonBox["OEIS A000166",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://oeis.org/A000166"], None},
  ButtonNote->"https://oeis.org/A000166"],
 ", Subfactorial or rencontres numbers, or derangements: number of \
permutations of n elements with no fixed points."
}], "MathCaption",
 CellChangeTimes->{{3.900000361763604*^9, 3.9000003651089954`*^9}, {
  3.900000438467683*^9, 3.9000004527974234`*^9}},
 CellID->136909599,ExpressionUUID->"5ff7c9db-cd91-48d6-b219-f2a740e0835a"],

Cell["\<\
There is a connection with rook polynomials and the subfactorial. The \
subfactorial can be considered a special case of a restricted rooks problem.\
\>", "MathCaption",
 CellChangeTimes->{{3.900000468188266*^9, 3.900000508179043*^9}},
 CellID->207794795,ExpressionUUID->"f039239a-0dd8-466a-86d7-0cf614539986"],

Cell[TextData[{
 "One equation we can use is based on the nearest integer function, \
implemented in the Wolfram Language as round with support for rounding to the \
nearest even number to prevent a bias when you round up at ",
 Cell[BoxData[
  FractionBox["1", "2"]], "InlineFormula",ExpressionUUID->
  "d72911eb-507a-4fe3-9450-35b13ce50c5e"],
 ", or 0.5. The notation is ",
 Cell[BoxData[
  RowBox[{"[", "x", "]"}]], "InlineFormula",ExpressionUUID->
  "b974b9e3-75e8-45e4-91e2-562e1d613cb0"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.9000009148975897`*^9, 3.9000009769294276`*^9}},
 CellID->93210004,ExpressionUUID->"66a8b6ba-4466-462e-8a7b-ea3a1ae5c37d"],

Cell[TextData[Cell[BoxData[
 RowBox[{
  RowBox[{"!", " ", "n"}], "=", 
  RowBox[{"[", 
   FractionBox[
    RowBox[{"n", "!"}], "\[ExponentialE]"], 
   "]"}]}]], \
"InlineFormula",ExpressionUUID->"d323125a-660e-43a2-b6a8-df9fbb60371d"]], \
"MathCaption",
 CellChangeTimes->{{3.9000009803947773`*^9, 3.900000992112981*^9}},
 CellID->597830687,ExpressionUUID->"eaf9795c-a061-4059-8646-8abe5b39a10f"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   RowBox[{"!", " ", "n"}], "=", 
   RowBox[{"[", 
    FractionBox[
     RowBox[{
      RowBox[{"n", "!"}], "+", "1"}], "\[ExponentialE]"], "]"}]}]], 
  "InlineFormula",ExpressionUUID->"41985254-07d9-44cf-85cc-41d47e7c4d60"],
 " for ",
 Cell[BoxData[
  RowBox[{"n", ">=", "1"}]], "InlineFormula",ExpressionUUID->
  "c5f4edca-20cb-47bd-a48b-7205089cdd73"],
 " and ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"!", "n"}], " ", "=", 
   RowBox[{
    RowBox[{"\[LeftFloor]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[ExponentialE]", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", "1"}]]}], ")"}], 
      RowBox[{"n", "!"}]}], "\[RightFloor]"}], "-", 
    RowBox[{"\[LeftFloor]", 
     RowBox[{"\[ExponentialE]", " ", 
      RowBox[{"n", "!"}]}], "\[RightFloor]"}]}]}]], "InlineFormula",
  ExpressionUUID->"9260304c-ba85-4d82-a4e1-d32afe8b3414"],
 " for ",
 Cell[BoxData[
  RowBox[{"n", "!=", "1"}]], "InlineFormula",ExpressionUUID->
  "fed0b54d-8be3-4b38-bea6-8178668730c9"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.9000009803947773`*^9, 3.9000010659775224`*^9}},
 CellID->267850361,ExpressionUUID->"f63b4d4d-4162-48b9-83c4-f953f4c27b56"],

Cell[CellGroupData[{

Cell["Here is an integral form.", "MathCaption",
 CellChangeTimes->{{3.900001072265133*^9, 3.9000010799972725`*^9}},
 CellID->238909488,ExpressionUUID->"25cdf2bd-1629-4b75-9634-58187ae6f7ed"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "n"], 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"x", "+", "1"}], ")"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.90000108648118*^9, 3.900001100450207*^9}},
 CellLabel->"In[70]:=",
 CellID->520558764,ExpressionUUID->"365de1bd-c2eb-485e-bb9a-40393ee11f1d"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"Subfactorial", "[", "n", "]"}], 
   RowBox[{
     RowBox[{"Re", "[", "n", "]"}], ">", 
     RowBox[{"-", "1"}]}]},
  "ConditionalExpression"]], "Output",
 CellChangeTimes->{3.9000011074748*^9},
 CellLabel->"Out[70]=",
 CellID->350941219,ExpressionUUID->"d598d300-134f-412b-9ee0-294e8d150fd5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Refine", "[", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "n"], 
      RowBox[{"Exp", "[", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"x", "+", "1"}], ")"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "Infinity"}], "}"}]}], "]"}], ",", 
   RowBox[{
    RowBox[{"Re", "[", "n", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9000011132716355`*^9, 3.900001118838806*^9}},
 CellLabel->"In[71]:=",
 CellID->8825156,ExpressionUUID->"8aed61c8-2918-4fab-8542-4975b9139ae3"],

Cell[BoxData[
 RowBox[{"Subfactorial", "[", "n", "]"}]], "Output",
 CellChangeTimes->{3.900001124508664*^9},
 CellLabel->"Out[71]=",
 CellID->278680919,ExpressionUUID->"b9bcf6b0-5d10-449c-9701-bd0e7ddd806c"]
}, Open  ]]
}, Open  ]],

Cell["Here is a continued fraction:", "MathCaption",
 CellChangeTimes->{{3.900001128551899*^9, 3.900001138221001*^9}},
 CellID->806936389,ExpressionUUID->"2a079b84-81a1-440d-9526-c687f401f30a"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"n", "!=", 
   RowBox[{
    FractionBox[
     RowBox[{"n", "!"}], "\[ExponentialE]"], "+", 
    FractionBox[
     RowBox[{"(", 
      RowBox[{"-", 
       SuperscriptBox["1", "n"]}], ")"}], 
     RowBox[{"n", "+", "2", "-", 
      FractionBox["1", 
       RowBox[{"n", "+", "3", "-", 
        FractionBox["2", 
         RowBox[{"n", "+", "4", "-", 
          FractionBox["3", 
           RowBox[{"n", "+", "5", "-", "\[Ellipsis]"}]]}]]}]]}]]}]}]], 
  "InlineFormula",ExpressionUUID->"90d08199-53f3-4494-a628-7a58ac276e79"],
 "."
}], "MathCaption",
 InitializationCell->True,
 CellChangeTimes->{{3.900001141201212*^9, 3.900001185458708*^9}},
 CellID->25842481,ExpressionUUID->"ee1d79df-fd83-40fe-a0e9-a37b76b829cb"],

Cell[CellGroupData[{

Cell["Let's look at the generating function.", "MathCaption",
 CellChangeTimes->{{3.900000514277068*^9, 3.9000005201866913`*^9}},
 CellID->14619546,ExpressionUUID->"cc806c81-096f-4880-8464-a1a13fb2ca56"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeneratingFunction", "[", 
  RowBox[{
   RowBox[{"Subfactorial", "[", "n", "]"}], ",", "n", ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9000005210333204`*^9, 3.9000005259807887`*^9}},
 CellLabel->"In[61]:=",
 CellID->367209639,ExpressionUUID->"a09ecd2a-6bfe-485f-a751-332856466e8a"],

Cell[BoxData[
 RowBox[{"GeneratingFunction", "[", 
  RowBox[{
   RowBox[{"Subfactorial", "[", "n", "]"}], ",", "n", ",", "x"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.9000005275661*^9},
 CellLabel->"Out[61]=",
 CellID->19629526,ExpressionUUID->"381652f4-560f-48a8-8c8c-4ac02f02ea67"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot the sequence: ", "MathCaption",
 CellID->339981277,ExpressionUUID->"70d08c46-0333-4fc0-9bcc-de185089f00d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Rasterize", "[", 
   RowBox[{"DiscretePlot", "[", 
    RowBox[{
     RowBox[{"Subfactorial", "[", "n", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "5"}], "}"}]}], "]"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "I", " ", "have", " ", "to", " ", "use", " ", "Rasterize", " ", "for", " ",
     "the", " ", "documentation", " ", "to", " ", 
    RowBox[{"work", "."}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.900004900775457*^9, 3.9000049138595595`*^9}},
 CellLabel->"In[39]:=",
 CellID->558391696,ExpressionUUID->"1daf6273-80c8-41be-ba20-de5fb5a366ad"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
9r1GO6ZX5Xweh3OiP776yvd/qVexGF9xody68/a1l169fO36k8/deO31N/Qq
Fr3iAvrL3/6Zd3u9ikWvuID0Kii94gLSq6D0igtIr4LSKy4gvQpq0F7dfevd
ay+9+ugz11Ovbt15e+f3z0C6By59bfKB06ugBu1V2tvzRJfUq++8+Oud3z8D
6R64dHn6hVf2vTq7p1dBDdqr9ALd9erS1es7v38G0j1w6dLkA6dXQVUbX5nf
Hkh/fPWN5xf7Xp3d06ugBu3Vzdv3vvXDX6UX6FSq3//x7zu/fwaSHrhv/+jD
B+7J52787g9v7nt1dk+vghr6/cF8/6lXb/7j30PcPwNJT+S8Y6Sn9r7XZff0
Kii9YiO9Ckqvyu9fr8LRq6D0qvz+9SocvQpKr8rvv+FetfqmZ+5V2rpWe5U2
reFe5a1rtVf355/r1Sk0P3Vfr4LSq53c/5a9OtVwZaAbb3PL/tSyq1tP3d/j
Cp/2xqft1Xl44La/8Wl7FeiBO0Ov9rvCp7qxXp3tlmebuh9ot9eroddhoLvV
q1P9UYC9KC9Yq+evbt6+9/QLL6eR1TefX/zpr3f3vTq75/3BoLw/WG4n6QOo
QK+AKPQKiEKvgCj0CohCr4Ao2u7VaDSaz+f7XotdWi6Xo57Foql/YjQ9WN2m
TafTfa/OUNKmpQ3c91rs0mw2Gz0oLRniDzXcq/F43FivUp36e0J+djezgXlz
ugKn65PJZL+rNIT8IDbWq/RI1Xl92eEE1POj2yVaejof3n9dThHuL0n7ycqS
uNKG9Pf5nK80ntzjKg2h2zP3vSK7NNyAakVjpTr86Igp7fm5Wi31at16wZrR
ZK/S45WHIi31Kj/jGjs1Ud9F6FWKVZMHTd2Lzr5XZJe6AjfWq7xd+fRLk6dV
62i+V/kkZ2Mb2H9DYd/rsmPdg9VYr/LmdI1qcresoO1e5Re1xkYgfXm3b+aV
enJfvt5Yr9a1dFq1moZ7lZ/LDccqa+ZoN7+4dN8236vmN3AIrfYq7wx13o7Z
r2Z6lbZitEmrD6JenUGTvWo4Vuvb1eoYsrGnc/9QN2vmhaam9nqVDyuajNXh
2gmr/H7TfldpII31amW3zFvX2ESUCtrrVf8t475m9o3+53EaPmHbWK8OH5yh
3dimAQAAAHAR/B+MK0Uu
    "], {{0, 150.}, {240., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{240., 150.},
  PlotRange->{{0, 240.}, {0, 150.}}]], "Output",
 CellChangeTimes->{3.900001251019622*^9, 3.9000049146675053`*^9},
 CellLabel->"Out[39]=",
 CellID->716575968,ExpressionUUID->"1c11c862-d9de-45e9-a44e-e382be1d1717"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot over a subset of the complexes:", "MathCaption",
 CellID->214227103,ExpressionUUID->"32c713da-0ccb-450d-a84b-c5d8cb4fecc5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexPlot3D", "[", 
  RowBox[{
   RowBox[{"Subfactorial", "[", 
    RowBox[{"z", "^", "2"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{
      RowBox[{"-", "2"}], "-", 
      RowBox[{"2", "I"}]}], ",", 
     RowBox[{"2", "+", 
      RowBox[{"2", "I"}]}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellLabel->"In[73]:=",
 CellID->618289619,ExpressionUUID->"e5bbad70-1297-4dee-ac1f-6cc82320250d"],

Cell[BoxData[
 TemplateBox[{
   Graphics3DBox[{
     GraphicsComplex3DBox[CompressedData["
1:eJx0vXVYlkv3v41iYWJiB7bYyra9MbC7W7BbbN12J2Dg3nZibbsLxe7Gwg6w
URCwlff5ea1z3e93PHj+4fB8Zs8117o+M7NmzZq583QZ2Kx7QgcHhy6pHBwc
//d34ZCv9+Li4oL5+3zS4A5/pX9edfatrjuTXfypfEq6b3eHpXxUdWK5K9PT
/vNd+b4DLsUfz7tfdcTi8p2yen+113PT+79v3R5W7f99Tdm8RT8rX7i0c5mc
RZ5V7doxVYqin2OUd3Zs38c/5nXVtsEjnpY98VF52TYJV87zjq3aOM+z/VV8
I5VP/bQw8fv6iWyzkizO7rvjnfLAhXu3xPbJZBt+of/5FbVeKe8UWPzp2A3F
bF38qg/f8eC58m4l6tbal7mObWlg8VpTwh8pL1ijtcfzDj1tg4veXbkh7W3l
mUMTfqpdfaZtfi/H6IWjLyiP9OkRW+zVFtuEyC0NDm7YqfxNTOE+W1Ndt+Wz
uA2+6lCHZI0nxNi6WfUozxrx74LhXzN7tLeeq3xFkfcP9h2p6jHFaqfyjYXO
Dfo7Y1ePVtZ7KW8atS2g6OPpHn0sOyh/7/iiVoIN8zzGWXb7g9e17PwHb259
lz94R+s7/sF7Wt/9Dz7I0skffLSlqz/4VEuHf3D5d3w8GP2er1ci2ZDvaWz8
m78FX96Y77Y5qQ09w9+2mLl4Y+tENvQMH9C6+eXuHols6BmerkC1fkXqJ7Wh
Z3iZCQteV3uW2oae4XffB16vMdfFhp7hbumi/0qyN5/qGd6h6/Qd09K6q57h
FTPtXn8oaV3VM3zzxS9JAry9Vc/wuBV7o2/vHK16hre+Wm5IlRGLVM/wbPez
Vc1WYr/qGe79+Fq3p453VM/w9X2qrwld+Fn1DF/gvvH97EN2PcPDSkQ+q+Nd
UfUMr1kqaVSD6R1Uz/DoWvubzCw9XvUMN/VscvRscvRscvRscvRscvRscvRs
cvRscvQcDw9Gp15+FZr2T1JOy8F9cjzavyhVSdUzf388qmvb+qaw6hkeND5d
6sIFC6me4RsSlGqw4X/l0TM8S2yrhocjS6ie4WMuey6aP/cv1TM8VVTiiVVq
VFc9w9NlmDnq38gmqmd49fT1MhVy6KJ6ht/5d9fOnheGqZ7hpT33NWu50lf1
DD9V+r1bftf1qmd4H/9TpY6eOa56hj+oO6OnS85Hqmd4lVq/fIJmfFM9q90y
9X87P51dz/D6zwf7bWr5l+oZ7tcv1VFHl5aqZ/i4qneTHCg9VPUMN/VscvRs
cvRscvRscvRscvRscvRscvRscvQcDw9Gj0lmVB7UybeD6hle2XtD8ydXmul/
D/+8tdCaeYsbqJ5V1yN+lnZOXFf1DJ+zs13dhdnqqp7hDaY/q+Z3vYHqGe60
z2nw3ofNVM/whoPfR7TI1kH1DF97xTY68nhP1TP82uEqTr13DFc9wyO9CqTY
U3+G6lnrr1w0VfD1ZapneIcPIYVyBe5SPcNPXqtZLPbhedUzPCDno+ZJPj1T
PcOzjU4dEe7wU/Ws7ay1tefPt5lUz2rPdXHVJy0srXqGv5hdtsXa4EaqZ3jJ
baNP7bjXW/UMrxq1N3Fw0mmqZ7ipZ5OjZ5OjZ5OjZ5OjZ5OjZ5OjZ5Oj53h4
MLqb8LXR8C4B41TP8HK1y2+Z4jJE9Qx3/ho2MemAvlovvNia52fdFvVQPevf
XLGTBtfsrnqGF48YkXXzxR6qZ3iK/nf7DjzYV/UMPxI8Y2Dn1ENUz/AEveev
dRw1VvWs88O3+TO8x8xUPcNbd3+x2N1nkeoZfuDYD68hezapnuEdGvmE/Kh9
RPUM3354ydaBN66rnuFDH7eZtyjsheoZXmPS24C6O3+pnuHlU4dWb1Qno+oZ
fvrVrn0XmxRXPcOz3Tzr9CB1LdUzPMeu0sX8WnipnuGnStW5kX36SNUz3NSz
ydGzydGzydGzydGzydGzydGzydFzPDwYfRXe22vM647LVM/wrAcHX7t5Z67q
GT7w16si7aKmqZ7h50b17ZTn/kR9Hjxq2Ptrs9eOVz3zN0Otr2Evz45XPcPb
+jQpWSPxJNUzvOBG9+MFP01TPcNTtdowZn3ruapneJdkm3J9vLxY9QwvG7xn
SIKe61XP8PMdJz37WGSv6hne6NziowmnnVY9w4OcT6RaXPuO6hn+OW1W/wtj
36ie4Z3Tz3rzuVec6hn+T7IUxbtWTa96hp+t+6vgMPdCqmd4rw/RrcKz2VTP
8Lwtl9S/1KqF6lnttuRd+so/+qie4RHvNseF55qkeoabejY5ejY5ejY5ejY5
ejY5ejY5eo6HB6MjnyFTizjc36d6ho8pnbf3uFebVM/wXUse//xwYZXqGT50
9PLTdy8sUj3DHX3fZJh4PEDbAW9z/X655CsXqJ7523jqmKgTdwNUz3BfV68N
gScWqZ7hpVzuje3VcpXqGf6pW9jh68c2qJ7hGT8nTt7z4S7VM9ytcuWf20of
Uz3DE94s2vRH8GXVM/xdq+q9lr96oHqGrwxc1DLRgAjVM3x9ye53Q7Lb9Qzv
6ZH82MVoZ9UzvJ1T3ahE711Vz/C+xyrtOuPvrnqGp1za/tbXz3VUz3Dnwc8y
9mveUfUMX9C2Smv/gYNUz/DQZ/33+sROUT3DTT2bHD2bHD2bHD2bHD2bHD3H
w4PRS+8co5cdcrqmeoav/tBy4ax+x1XP8CsnM++fv3Cv6hl+qVH6OVnabVM9
w1s86HZ/f46Nqmd48vk+hVP7rdP2wZ9OvJfzn3nrVM/8nR8UGxuddKPqGf6p
ScDR9Mu3qp7hc6tEnN3puEf1DP85uEbKOV2OqJ7hmytP+O9hsbOqZ/iP4Yf6
3RgQonqGV4zr+u2F61PVM7zHJa9di8d+UD3Dj4V/zLr4pd1/hie4k/fYyoKp
VM/wjTW7nsuXNIfqGX7/Z0Tv+j2LqZ7hTsO2HhpXoarqGZ5sVeCSo383Vj3D
sxxcGbHzXy/VM3xovjs+HbcPUj3Du9S9eDg06WTVM9zUs8nRs8nRs8nRs8nR
czw8GF1MyLJ68JAN9rgP/OGynuv3+d5UPcNfv9pUa7TPOdUzvHvPFcPu+BxT
PcNvLjn8ctSrA6pnuOfezC+dCuxVPcPfOS4dHOi0R9sNn1utnfu1DHtVz/zN
9vfi9ZtGHFA9w0NP93ibNWWw6hneqnH3fhUbnFY9w/en9F6b9K+rqmf48+bj
J2fId1f1DL+zp27haROeq57hdxMub5SrUaTqGR70pVhE7QQ/VM/wQ9kWz4jw
TaZ61vmn8fUvK59mVD3DL03M9GH8ibyqZ7XPEdeB3VOXVj3DveuWjay+00P1
DM83K3rJ7EqNVc/6vdw7vmvg31H1DN+VPdY9XfV+qmd4w3uh5TuVH616hre/
XqZXqc6zVM9wU88mR88mR8/x8GC+/0WPhBWqZIxVPcM/13TrtLZZuOpZ/VOn
bD/3DL2reoanc3bNf3vNVdUzvGOBfYGJY86onuHLyo8s+enfE6pneGTeh8tG
nDimeoYnObK5eNDxY/o+8EJ7HvRbO/qE6pm/mW5myXq55hnVMzz1hfdBy19e
Uj3Da8d22JvmdYjqGR5TOM2edQceqJ7hrcpMdm0+JFz1DHcblzFvy0F2Petz
W2wdvXTnV9UzfFzCwbUKt0ukeoYveRuXNqa2s+oZniLHuAztPLKqnuHfv3Z/
6Nc8v+oZPuBqZp/QsaVUz/CE30d7T0tZRfUMv36tYsfcQ+uonuEn9vhM23qj
heoZ3iZqRYR3qLfqGb434PvsCrsHqJ7hiRMNjDs4+W/VM3zrg72xv5ymq57h
pp7j4cF854YnduTMdMfRAz3DvwfPCag5MVr1DPf0DigzZ1e46hlepYTHpdZ5
76ue4a5hJY+7RN9QPcMD3KvuvdHlsuoZnqjZ9VEna5y3z3PC092vOqND7nOq
Z/ix4T4jn80+r+8Jn+O3fvesdZdVz/x9nsipdPUxN1TPOn7nKve0ledd1TN8
x/hLdzdNfKJ6hk+5cPPwql8vVM/w2I9l52zwtOsZbjsY0v1XNft+CjxiwcU6
tfc6qJ7htbIvqb4uZTLVM/yfXO/CVjROq3qGn5n1aHmTmMyqZ41TfvyVeVEW
V9Uz3H914JCXq4uonuGFpybJcfRHGdUzvECdvfvGjKuqeoZvyB3S6VK72qpn
eLdSV2LrXGqqeoY3zdnkV9Ji7VXP8LFp3N8ccuqueoaXXZzycrLmPqpneIes
ZY4WyTZK9cz3zH21vs+HXs6qZ3iSObV+vJluj1/DT3guKlslZ5TqGb777Ot8
C+6FqZ7hb5/O8npf+oHqGe7+q9HAsrE3Vc+6PrtzfsA61+uqZ/irtj1S22pe
VT3DD7ZuuK1LxmuqZ/iuur1LjOx4Q98fvjNqXOJjo26rnvkb3uzu9JoLH6ie
4RkmbX2bfeYz1TP86+UJZxp7vlI9w3OurpZ0f7jdf4avSryg6viP9v1u7U9F
3As7d/tuQ8/wkT+3zxt2KoHqGd4nJOtfMdeSqJ7hrhXjuhxLlkr1DP97YNIP
T4elUz3DE/ds3v5QmIvqGR5zO/fYfclzq57hi15la1DTo4DqGb5tfeXTx64W
Vz3DTw5u/r1pYFnVM3xBkq/+lxpVUj3DY4t5lMiSq4bqGT4zsnmnBIXrq57h
Nr/V2a/Xaap65ru9W+jt6xbuonqGZ1+fJEH4rCQe6Bl+5rPfzJqpv6ie4VW3
/hPW/7E9vgk/4ln8r3m57HElje/myHMt0uO+6hleJ8zn0NyQm6pneDoPz9Sl
Hl5XPcPPt7rg5lD8huoZfrpajWWVq99SPcP/8rHNuNz+ntoFXjd3cIWwaU9U
z/zNONf9Qa7VYapn+KOYZDnnTn+teta8jzPVR16sY9czfEONqcGdoj+qnuGH
G1XLWHLNJ9UzPMu8tNOdZn6zoWf4sBuuX6p0+WVDz/B93w6emPzBQfWszw2c
U2/B5ISqZ3j4vYIjC85PpHqGZzqW1bHLqWSqZ/hKvyXfJtd0Vj3DK6xI87l8
yYyqZ3iR7+mqz1mTWfUM73ctrurRJllUz/DqP663dd6YW/UMf7zjzqkeQUVU
z/DkCZucWN20kOqZ7zNh26Q7u3fmVD3Dc187cz90bErVM3x89QuHR36x79/A
pwx+WmVxenv8HZ6ucoEldUvb46HwbcdvvIna9kT1DA/ybDG9zE77Oh++JsmA
7f/cuKZ61nqG7Q54dOS66hn+aYPLi/197qie4QmPjY8IOmAf7+B/Dy2drWEl
uz7glw5vXt66yEvVM3+9NxVLfyLHW9UzPHXblPvKJ7XrGb7TcXnjD12iVM/w
qwWGRq5OGa16hje/fPVMUL0Y1TN887DvJ99fiVE9w//7+TPzyyoxNvQMf/x3
2Urp+n60oWf4zxIzE7qXirShZ/iucsOu1nCJsqFneLs0mzemS/nFhp7hiV9X
meExwkH1DK9Vx69y0MYEqmd4nXKb/q07PsaGnuEOo5JOGjr6iw09w4tlqOT8
/kZG1TN8wait37xb5lE98x0GLdn9qtrkPKpnjadOiM574GUa1TM8qtTb4e45
HTzQM/zwvnHTl7vb943gX9Y6p8/xPEL1DA+fsbPVkUzhqmd4nn3T24WVuat6
1nhY91orPN1Oqp41b2KO/8QpoZdUz3CHn7VcfUPuqZ7hgSfy+r+6/Uz1DJ/m
dHVVgMdL1TPcLcuNlvOD36gd4U9P12w9ZVCE6pm/aabXKJWvp13P8LEjzr5t
1ShS9Qwv2ylLuyl/R6qe4et2ldifLFuk6hke3MC5aJ6k71XP8NujK78I/vRa
9Qz3Wpr+ryL/Plc9qz13hZ2fk/W26hmeqdPolVnbXVE9wxtU3tRgY6Pnqmf4
5ZM7Yu8XirShZ3ila1e9P56KtqFneMfuTeo0Xv5R9Qzf4T7/0oGn31TPas+g
TZ3HbHFWPcPrzSza+mNOV9Uz9q4jHD3Dy0g96Bn+VJ6LnnXdI+1Ez/Cs8l7o
GX5O7ICe4TXFbugZvrWjZWeNNwmP3Gl9F/QMLynfET3DN8h3R8/wRaIT9Axf
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
wVeL/bEzfKN8L+wMbyHfl/EFXkT0gD3hm0Q/qj/hxUVvtBte3tAnf22iZ+wJ
XyH6p7/D30h/wc5qB+lf+EvwJtIfsT+8tfRf/Dp4Xunv2Jl2VZTxAbvBh8h4
gg7hgxl/pL/Dz8l4xXwDTyXjG/aHO8t4iP3hF2X8xP7wHTLeYn94HmN8hm+W
8Rw7w4/L+I+d4RtlvsCe8HIyv2BPuJvMR9iT8aaWzF/YE15Y5jv8P/jnEtb8
iJ3hX7JZ8yl2hg+X+Rc7wCNkvsYOWo/M77ST+SfutuUP0L/gC8R/oH/Bi4q/
wXvBW4p/wnvBS4s/QzvhXuL/0B6+j5/4S7QHHpHA8q9oD9xB/DHaA58o/hvt
gS8Vf4/n8v3xD3muyXmuyXkufJnhr8Lxb3ku/dh8rsl5rsmZj+CpYy3/nPkI
PkP8eZ6Lrs3nmpz64eGyvqB+LS/rEeqnf+i6UsYB9QdlvcM4AF8g6yN0zryx
SNZT1AOfLusv6oE7uVnrNfoR34H2UD88SNaD1A8PkfUj9cN3yHqT+Ro7UT/+
kslpj8lpDzyBr7Vepj3wsv7W+pr2wLvLehy/ju9D/bTT5LTT5LTT5LTT5LQT
7vnZilcw/sDT57biG+iEv0s2p4t6ExBLnER5z0tfi24v9rUq7wt3rV6/5ZVz
E3W+gLebdG/zk8jVyqkvxUpPp2zPl+g5Jsq7jfhSPqbbLp1fKJ+kfqkX9RsH
6/yi8ZAizbYNfBymnPJ13gT6rtn0TMdZyp990fDl/A2NNA5AnDL4bdXExbvV
1ziA/v5FpZfXV13sr/damHEYxi/9/YitH8s87TRX77uILy4U3+8+xBcvMsvT
z01OPzfjM3xvs37iXybn+1LP3fTtVy+uNl+/I3zNpvfDJh/Zpt9L56uHJXNs
GXfRvm4VPqFvg9ml/nut34V48LFGTRqW2uSp9oe3iX4zvuLSbmpnLV85V+2v
9yarPc17+7GbGUfCbibnfeHlXBv1/FLBrlu4b4epu8OvH9D3hXdOPGFWJacQ
fV94ctcTEw+veK/vS5x7X5tWk8Y89ND3hX/tdcnxfr4O+r7wsOYeY3vfHKHv
y/wWuzXYccN8X31fuDkOwLd+uuG/+Nhi+zpf+PN/b839+GOrvi/8oGPqZONu
ndD3hYe1Ol0uS8FQfV94li8fUrZcbV/fEb/fUD3v5sKXKuj76rmfSz1nuEc1
0/fFL+gzqf/wZhu66/vCly4fWzzDcfu8AN/0LX+u/zps0PeCL7mybO2n0gf0
veDuge+6Nw+7oO+l8cCmv/au3vJY/Uh44cpTv831y+2h8QQZ1xcsCm2e+Go2
HU/gk7M1GdZ5fUl9X3jTkf+u29ykpr4v/HzL4MObi7XV+Z3nmv3X5PRb6km2
O0eC4G5r1c+Hezu4VN85abfaB34mYd81l8ucUPvAneskW/Yrxw17HEZ4tF9s
3Nekz9U+zGONz/iNzH8zk9oBfsSz5Knx9QupHeD35m72fdmgovpjZnwVO5ic
eL7JGfep36WqW6+Ho06qHeDvZrU7fqfsUbUDfO70kdfLbT6vdoAfe9tgZzXX
O2oH+MMsntkXPw9Xfx5uq1U/6GF4Yp1nmc83dfnsU3Cro+oHfnfSm2f7OqRT
u8G75LVV39Y/j8blzPgwdjM5+yAmx27xxZ/ju+eW9vxqdWSh/4xQtSe8X0q/
l+munVZ7wt0rnTpfIa097gZP0OJltSL5Hqjd8GtGVIzYH9okgdpH48NOZ7pf
T5lK45bU07zv/Czr4+aqfcw4NvtEJsc+Jsc+8cXPzXtTsZvJ1T+U9p+97xbQ
Z8FltQ/cveMDp96zb+n4Cb/RtufccrExyvHvXr8K3F4kzh4vgA+Ka9DuUpJf
2h81nhp8++zk/UnUH6D+9FUrndmVq6faU/nckGM10wzTe4e0/V2d0o4dOUbt
CXeJavk4a45Zak8znq/3tMSzL8D+6p20JVZc6+un9jTv88QO7LtefBLntnag
3Q7Y+3FcUtvgO191/YMdnoa7LAu5W0PtAO86v+i1asmb6H1i8AUHl6dv2aeF
2gHunytpq88zvNQO8KVTa95u/qSP2gEe9DKni2eS4WoH+Ip9G1uuyTpJ35f3
2vw/F71+laE6nvNek+4eKrf1fALl6OjJzuS/EjZPofZh//nw3FPV19b5qPah
vGeJzd9CPT9pfJv6012Zlyl9e2edj3RfY1rWRpeKZ9L5Fz6vbM1zCzvmVD8K
frXwisOOs4qrneHFIx/e8Kv0l9oZnn3kjHVTT1ZUO8Prrh7uMO5/6zjsDO9e
pcH7DB3qq53hHw43bJAkQwu1M/zzpoZjxs7raJ8fZRy6lTXJznfT0un6Gvuk
vbp07aaN39VvpvzjSXUOjR+UUNdxlPf2fnclf7VbOg+xz++yvOWAKgF3dJyl
fLjbmz1ZT9rnS8qXTupQO0XEDR13KO+bd/fhuWH2ODN87JBSE3d628vTzqVH
XYNt/9jjwtSfIWkhlylV7fEy6lk1z6fsnvXf1U9Tv+lLntoDXjnY95GFV3UZ
NaNms0R6jyXcfdiZuyfzJ9H1ETxdmbzHGpdJbl+P4G+m6fbmS8lcqge4ayLn
kwVe5VE9wIfuCXN37FRAxw34h+S7J+2JcdfvDg+6/jPx2PAKdv8B+zSe+dR7
WSbtd9jnfcpeAe9eFFWdMM97P1i5voYtk+oEXnvP2xfe6+3xbep3dJrm/Pf1
GF1XUD7n7uRTuzT/ojphvbu+Uuonr2fd13mXeiomjArI+NquE8oPOb20VnuH
EJ1vKH8h465ito72+yfhi52O1d7T9bbqh3oezb+bNHcl+34Q/Fo3h1xNvt7T
PBPqeV++XGj27B9VV5T3jAiePmWE/fwj5ec0brA21x77fRzweVmfXZucw35/
AfxexKTkpRPbz3vDB8ZlyBuR4pvmn8Cz51+6OaXLN433wtMm7fF+4+MkOq/B
Bw1LNKZUeArVId+lYp4RCV+csudzU77spEp93tRKqX4F7+s2u4rz192/dH+E
8l18v0UuvJBI/THKL6k6ZtnZgQ91fwr+4tba6JENUui6m3pigr5Uf18uj+qT
8sfPzEudLX8O1SHfoePSfFFu6ZNonJP3+nyu98VOySLteRjW9wzu6n74H/+D
X3R9CPce4ljoW40oXVdQz8gWq6euGGlfj/HcDe3rOkTGRqhuKf9oU//xezpc
Un3Ch2da3LdetWs6XlHPu8a9e6beskd1q/uSzoufDNx0V3VLO8t92/pr2267
bqkn5P4tx7bPn+m4Tz3fnrR0n/vJzil/MZnXeefC9vscKV/Zb9/KsEL2++/g
NddnGlMjl/2+PnixLe9KxpyLtPtv8t/FbfPtOyeVvV9Q/taQmR0LrY+y31Mj
/Ob0v3NV+B6l8zL86fr+2Ye8i9T9Efj4z4c8YyZHKOf5kWIH5mvK319zbFCr
Iy+U084TRUKmdEz0WOPRlM/Y7ejK5eFP1I+Cdwt9uHRl4Astz3PPNrG+I+Wp
39mpdsWDrUI1j0L3tUsc9S+24ov2X+rZmmb50iV3n2t5eIDoDX9AdVL54bPI
TpH2vBR57tObSwavWh2t+Y36Xp2fDPmYIVb7L+UdEx5Y+E9f+30RlG+yr+P7
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
6aX70WaeHnpiXCzjunVVptebNA4Dv7LjTcLvfQ7pe8H/GV5mZOpx5/W94EfX
/XLekeWevhf3H5TolWLSmRpZ9L3grkEVhl+eWFTfC578eKLsbl4eml9h5tfR
TsbvA2W9tzabcVLbCb/Y/+TGPTmuazvhaztVz9Vo/WMdNxjnarrnDu17PZH6
//BPPv+d2Do1g7YfvnxeksBsK/JpfoiZz0Y7mU++B9pON3e5qO2Ez12RbeSY
87e0PYyvryIX/JdhQkJtDzzwXI0zrTo4a36CmSemvxeGv/Mgyb2HQfZ8DMbp
+zuyJa4zOcY+/woP2JG019T8Dvpc+LtcLrnr7nfSfAnq//bNvePGkgPt/p7E
+Q6FPjz47KH9nkfmyYOT95ctXa6urhP1vuTm11rd7JZE64HfPF0v58Mv9vvZ
dR91UqGftZOn13wP+PQMDve+vMiiv9sIz3Gm3SnHfqX1uXr/VlyPwDmFnNV/
hpdtV/bFzHIOOt9pXrbEl7A75fdGx7bwWW2/L07XE7uOlJwQ+EvzDeCbHzRc
vWhBQs0PoR6nJxdn/bc2v7YT/WbxXBRSd0kGbSf8zK7q0xI0S6TrI/jdr+8S
VQr7pPe0sI6pIHFa5h3KJ8m+LPW5PT90/cV4edZp1tGL1ZJoXIJ1c4K3Vhyb
8YXyVdZXzNp46mu1D7yQ7AfpeRbh2WQfSvMVha+Y9KRBZrdwtZvmA8h+hP5e
gvAiVYtPWZ/Avk9NPaciZ1xYk/Glxm8p/0T2QZh39L5tj/Cuab5dUrtRfq/s
s2geo5RPXyJtynp53uj6BH501Oo5N6frPSO6P7jX0yt5XFwejW/gB+2Q8ox3
8HRSP+MLPL3sa2Nn+Bub1X76J7yt7LNjf3iA2Afd6jgh+56Mz5QPlu/C+8KL
yHdnfQJvJnkdjOfUn1/2qfHjKV9K8kPoF/DNokP8MN1vFXuiW/Zfkty28lvo
F/A0la18GOwMD81m6Z/xi3EoreiKdlL+pPQv2qm//yX9Ef8NXs7ov9j76mOr
v+NnMO4+m2jl/xAf1P1BybNCt9QTKuMP/hu8muT1oVt4EckPpP3w5DLu0X54
Lxkn8TOYD385Wvly2A3uKvl4jOPwNTLuMd7Bm8k4SX+j3z+U8Z/26L31Ml/Q
HnT6YoSVz4k/Af912hr/mc/gg2S+oP26HzHRml9oD+PNGZnX0B/8puQD0x7G
oYGSx0t74ItkHmRcZh6Lk3mW58JXybzMc/V3NGQeRz/4rQslX5r2wC/KfM1z
0dde8St4ruYFRFl+CHbXOLn4FcwLZvyW9vxxjlXmP8bjzeJH0R54qkGW30V7
4P3FT0OXeo+R+FG0E55xneV3sZ4x46i0P774Kn5ETvFLaT+8pvixtF/9DvF7
6f/Uv0X8T9oPvyf+Ku2Hvxb/lvWhGf/U82nxxEWZx3xlXUA74TZZd9BO6vkh
/jzthG8V/592wl12WusFxmf4cllf0P744pP4s7VknUV7KO8n6ybaA98j6yza
Az8t6zLmRzPux7zCfLVQ1oM8F75P1o88F15vurXe5LnwV7I+pX7mjRGy/qV+
eKisl6kfXq2ctb5Gb6znkr+zzofq7/bK+N1R1vX6+47Cb0gcQH+3V3iQxA2M
OIbah3r0viI5D0s98AovrfgG/z18iZzPpf/y/bu26J5h6c8zOn7CJ7fKdml7
+Zfqp6LrEX4lu13YtlvnBXjl/mN9z9a8pvXAS3Xu0c+/wDuth/7dcG9Yw2HX
jmo98Lg32wcOc7T7PfBUnZ6N8p4YqfUwniXed3DFpC1ntB74+cklUuTr/sB+
n46Mu0sOJ+7ZeeBVLQ8PuBYx8/ww+/0+zA/fHu5w27jkppaHL6ua9EX3KWGq
Z81H82haxGvQNc0z0foujmrlOjmJfR0tPGzb3hUdrqS0n18TfvzmioSZB+XS
dYfenz3aO2hUDxddZ9Gugk2nx4zq9Eb33+FDJt2q61vQ/vsE8NYzXhe8cDRC
85zh76cf9Hv2we7v8dzOpV/7ePWy52vBc8RMLO98056vRT8oLxz/Sv1qqYfv
xHfO7u1TO/GTSJ2v4elCOpefV/W1xiPg3dOHB78r9UDXw/CsaUIOuOV+rH4j
/OuMvb4Jj4brOgWee6bFsSe8pdSD3eB/yXMZr+GJpJ3YU+uX98Ju2KGxfEfs
gH+7X+zP+8Kryvdi/QsvKd8XO8BfNLH0wLzL+PHcZumTfq7nDkVv9Fv4YtEn
/VD93guWnnkedgqXfkE5eKT0I8pjvxvS7ygPPyP9VPPexK55plj9mvLwITIO
YHf6n4eMG9Sjv/P51hpnqAf+SMYl6qG/Pu1kjWPUA58l4x71wK/JOEk9uk8h
46rmXwo/J+Pw+1IhCx6EfLFt+P3drgQfjMn2Y+/kBB5pUwY4nxgcp7yrSymf
eQ9ye/j//u8jgjf9/r6HgrPfDGu6b+AF2+jf7/NaedSOa06RH27bPn34f89d
bYO3up/6vHOrSFv333Z8qTxuz4T8nu1f2Ub9fp+3yj9lGTGyke8TbaeWz729
6rES0bYvV3sdCUn2XfmiBWFv83f8aEu0skyzxnl/BPP8fBkatnq1O4HHN4cV
hdq8/6q85+Ytu0vUjbFFdkkW53Xws3Lbx00Fa6z5qO3nb5JNzv0GhH7QdsIv
nU0wrfrb69pOeEwZr1qFoz7aeG6T3/PnGVtQ2Zx1Wk4K03LwGylsxeY8tNcP
980wvfLJmTe0PM85P6PDqcrp3yjHHgtb/dpQenO48oQDfr24UOWnreujIlVG
tHuq9cJXlUjWdo7TCds4iwenrnJ+dK02v4IL1v/k9q77EdtA6/va4PgJky09
/MEvzag9aXTWqD+4k/Vv2w3r/1f+a8Xv72VDX2Z5k9PuqZad/qgHPZr1mJx6
Bll6DH4yIV+Zcuuma/mev8eHsGC3Z5kuLak/2gN79vo9rocEH/v5dEPoiSgb
5ekvD7131O/XIIf2F+wa3Dogk8ePq9pu+Cj5vnD03CbNtPZ5D1y3bfvdf1dr
+QuiE9oDP1NzZf0beyK1PPVEX/33Vv4TH2xvLJ1rfwl6MrOI27xYW4ylT62n
sLulT/QEb9ltRdOAp0+1PPXUKHpj9rGbH2yMG5SvNzxN+5mlcnnEWHoNpl0J
y1r9gn4H71R+XOO2NyJtlOf9+rpVbnagWLTah/KrpN/xb/46Sj/lv4eH/HO2
bc/0dvvw/8OxD/9/FxkH6G/w3tIeylPPKNov9qF8Ixln0ln20XGghtjnl2Xn
4IaWPW27ZRxj3IC3EDtTnnq8ust3EbtR/oWMk9gZvlK+O+2DMz7zPvCvoh/K
89zzojfGB8qn2mmN/4xj8EGiZ8YNeEKZR+DUP0/6C3YbafUvW3OZjxhf4E+k
32EHeEeZ17T9Vv+1HZX+Sz3trf5uu/jU6u/JrPEhmPlqlYwPlOe9GU+Yd0xO
PdgDTj28t1mPySnP+ApnPGUcgjP+mJxx0OTYHT5Dxn/sxvMHH73Y4uv2R9rf
+T6avyfjI++R3jnQ79CNTTouYI/2Mu8wjqi9W6//0W7ZdS1PPZc3n8g9M+y0
tofy2WVeg1N+d9b0hXeMeq7jMv1mdvN5xab0P6LjOP3MZVTZgGdN92p7KJ/E
N82uFQfvaHsoP3TL0zKhWa/qcylfS+ZfnoseO95waZPsub398MEyjzMf0a7K
m660PPA6j85r1Ddwz+eAwEtOHrcLPNw8uHG0tndsvholivd4q3EE2junWOZC
O0Zf0nU69Sz2K9qidMo8Hm8WVOkTvuKTjof/+iY8mG9wlM67tPdJnZtO8+qd
0nGYddm6wMHd+82292vqyV3XKh9m1a/vvVLqZ5zUc8rp7/Qr5vVax1Xq37Ld
t/+TR9EaZ+F9M8x5ev77Gvu5Ieq3Ra89l+rjR52/qP/11OMxAUns9qGeKYcK
NS31zweNZ9L+0WWGeF2bGq3jKv612/EJLdvmidbzO4xjroeteijP+mtwvQV7
ffPaz9lRfx1pJ5x6Ps+23uuB9X2VD5Tvi/3hh8VPxo+B3xC/mvmL9rtI+9EV
dvuR3vKT6c8ar5o53a9cytw6T7Ge+DTNsif9jfF2suiT/sl4m1/0TP+hnjzy
3dkvo56lok/+zXvMkX7EeIWOdkt/5P35/mWk/9IOyreU/k79lP8m4wPfCTs5
ZLPGE54Lt22xxiWdz6Qf75NxjOdSfqGMh9iZcZTxk+cyDicK/r/jrZkXhA5p
1/LiVn+nfjO+B+ev3/k2j+pceVeVcQE+6NTbamUnrtdxBH7Q81ahc4f2K6c9
bT663htZba+OM+a8QHl0VNrJsXTB6vZzj+yLulSv8iPQ136PKv0jZOPPh3Ee
eTU/gXiG++M0P1q/yqPxAfb3QuYn2+x6Mqly4hwFBj2a3PV5EvX/41tfmPfq
wONbRxAXiXpb9knT0fa8JvYTbCkCQ2fb8us9e/DZYakLN+lRWL8jcd+NDgeT
/PD9oOMM+2ZFBox5E+b1UfcJKL/TrdLeVAVcNP8B/mjZcRef51n1vCS8f6P5
af71Kq5xQni1ZRdOeaQrrflgxAlvTg/8+1C0g9YP37cw8tOPQ44e9E++89y8
eXqP3h+r/Qp9tap10X3Ho6/KiWc2PDWqcey5V9p/KJ9o9s/D+QZl1LgE82Oq
phlyDl+WXzn1dJbxinGGcX5Q1r9b30j+Sf1qxr0Zk6r51nf8pOtS2p+gyYuV
Y65dsy3+recPykdkbV4x5bArqgPqeZZw/MRbFULV74VXyjun5arUt23XWqdz
+Vz2o847ITvr5x9TNEw55evu82kz+VOo7V7sBo/3vWO0/Lgp075XqhylXP0d
hzkXNo1/reMj8+ZImXewM+Xnly86o2HQF/vvX8t7eeYZeCt6Qx4dHxiHCmdJ
kfLzkRwal6Oe49WaLptT2x4/Yb5bJPM185eum5s/Opi783PllE+T0yP2cPAL
tTP1O48o1P7xvV36XagncYohy/x8Lipn3P0VsnHXWfcH2p8p3yJdjrt9K59X
Tvldi45+Tz86VL8j5VsdaZ6527ZHynU+bVelyD+bwvT70v4g8X98rfarnc+s
r3NxQuB+G/46/F5yq/3EAXW9Kf4GeoYXF/szzjLOV5fvxfwLn9zyfY3dfRyU
M48nqJBhfWkfR+0XzHvlvy/c8bXwF/2O1LNn5KFnr+98V075Z7vffmhSKrEH
3wv75Anpkfn5gNtqB/j2FPsibbvO2Ne/Mh9ea2L1X/JbGNd3yzjDeEWewDJj
PIS7yDiGPvU+oT0uQ2+eLqL1w+fIOMl+Cvv+uWV8Zp3De5jrL/N8E/6l3iex
wJp3GB/xT5NusuYv5jv2K7vJfAcnzuzZ8XyJjRs+qn+C3zL/ctzmwPQnlONX
lGq64XHxZfvVPzD9Cr5XfOs+ymetZc3v/Ju/+Am0k/k3s7STfRnm2Y3vCj2Z
92aHjjNmPif7FJSHs1/Ad6sxNUGE65K9Wr/eE5iqQ7MvtrOatwbf1cDlxfof
9v1oMz+T9zHjkDwXXcye2M3dq8zF///vTv2ffEvqMf0Hypv3zlHe9B8oz759
prP/jlxz3FfLE4fcNjG2b0X3iVoe/6FduoseGR27qz3Ju3k5afrcnSka2+9r
Ff/hztINp9f3cNT8Veb9p9Jf0CvlU0307nY6axZ9LuWzdvO/3PpKJW3nmN//
3d3gfmPnnI6tV0afy7w8IWrIt4C/ovR7029G3zgTtSz7Hfs5Dpm/XhSuXbjV
/Cf6/eAHm4648+nYVfvvwEk9lQ5XcQyNSqv+GPPm9NZN1zZukUL7KeP22d7u
LvuGRKofpXkBUj/fj/GzhbQf/0d/z0HazzxOf0of/qv6vDE3dbzS/AWH9DX6
eWTTvCA9by5+FHagvPex3O3rH0yn+2WMY2nFT0P/5COsjzgRdPBrLa2f8rvE
D6R+zev57NX7WLUieu6D8bCn+KXYn/3MQ84ft/faUF73kfFz10t/YT+XcfKV
9EfKY+/q0q8ZJxn3vMSfp/3muRLab65r6J8m5zvG9zt61O86LVuBl00ma/6M
WZ5+pfkPM0pM/W+Kl+YLUT7Yf+f4Rs2Hab4QPMOwEZ7ZsjfVvHfNx5fyfA/G
uW/TrfrJGzPXfXwPyj+earWfOCbz1bacd+bWaG//nTWzHuKV5nqN72qWJ85j
lmf+M8vTX8z7vYlfmftEeo+fcX84cVjiCqYdKO/vG750lesotQN+0LuzeYdl
vDde8yrN+vHrzPqxD/XA0fcf95yL32DWg93MenS9ZtTDeGLWgz9p1oPd1D9q
nNovS09ftRvr7rYV+2z1aj9D7Ub5q8M/J85Uwkfthp84a8jlvvcvDlG7mfeW
YzfqN+1GPW86/Zut0oh5qnPW9RWHR3/NmqWeR+3f9nyi/ua65asKr97ZWN+L
8t27rHnxedgEfS/ibV2cqvk0rjRG34vyBd6EtW24sJu+F/X7Hf6842ijXtoe
4g8fzjfs4T63urbnxanBt3pPiQ0+MjFoQ5Xjnro/yDrGvFfW9Gfg5v3GfFf8
MsdyVydcznZS45NmeXh8cQnq0TxAmcfN8nDiFTfLV2z0rtBQD9aJ5r4qz6W8
c92Z/R4On6j3HMLvZvaN6dnDfq8v42v5cmN8ToQ20PgAccqA0Q0n+C/00fZQ
/uRlp3tlP7fU9lC+sEts7syRo7U9lD9a1WvWmSdeame4y8oU71NW7aPzCPPM
osE1cvV3vK3fj3jCvHtXq7l/vG27bfW7YOIPwVuejy5wwJ5Pgl/0vc+zdv8c
s5+jwc/JHjymZL1qH+3xKynvEdlmXcP5X5RTPsrt6va/j9jvhYGPXLA95uKm
GG0P6/QO4lfgZ8A7dp5f3C2F3S/BXzotfg7rLsqPDb0YtfKjvZ16/uKw7fH6
TpEaf8SP+vijzKYkPzJ40B7Wp/tf53BY43tT/Wn4wHcnew0/eVr9M+rfeD5s
l//k99oO1t0N5swZVSxVpK4bqWdMv9UxV3JG6vvCG0t53hf/bZfUzzhJ/T/f
Wu3Bz+e/6yZ+I/MQz0//03pf+in8nPiT6InnzhW7wfEbX8v3xY7Us3Bz5c7J
dtvPpVC+oOiH9lO+7Oy/fG2pLml+Lc+9In4y8ynld+4bt6Su7b7669TfTXSF
vllHrj2z/mp0C/t5IfzPsqJb2k/57y+cfJ/Vsuf5UT5O+gXzGvo6Iv2OeY16
/pX+RfvR6Vrpj/gTGgfoaq07GN957uEJ1jqF+aCHtR6xRaZy9fePyaN+IOV3
yToIv4R5oI+sm3gu/lpMWmudBdd8/jPWeo35m/nn7Apr/GG+hAfIeAVnfntS
xxpXeS/K+8p4CKf8Dhm39fdiyTeU8VZ/x4LyMj7TfvNeGuZp5m3bmBWvbk6e
qu0076thHqV89e/p60zKO1LbaZbnufH9vpUZV6E95j447THLU7+Zz4+fZO6b
81x0asYlqD9JaivOwHhIPWUrZv9RfVmw+rVmPbovYuTnM86gd3N9wfyZ5oLl
hzS3/JDgJ5YfYnskfgjzHPNnE/FziBewj7pf/BzmacqPEj+K+ZX5eaH4UbSH
8j7ip9Ee6o8QP436mZ93i/9JvIP4VcrOlh+IX2LeX4H/wfxvrte0vPirvC/1
HxB/lffSvDjxe/GrzPsimL+Ip8HxH8zyzIP4X+Y9CWZ54kRm/fhtZj3Y06wH
e5r1YDezHuxGPSGyPsJu1FPjnLU+wm5mPfhLZvyQeuDfZL2J/lkn5n4/oZNv
vg9VmV+Yh9PMHtgv//oNOh/x3/WZ2SV9lZ1rldNvoj7ntr0uslX9JPjGfjfq
rt+6R+cpnhszNeTWu7/O6zyl7dn6d47sdey/g8hzrw611umsa8z1KeOmyVn3
mZxxxOT6+3zx5FWa6z7Km5z51KyHcTC+/EyzHsqbHPvDL+b/z/ny1l26D2Ku
Q7FPfOtlc/2I3cz1I3ZgHtB9ZJlXzN+Zoj3M/+Y6lPnqXu2Z2RuFT9J1JfPk
4dZ7llUoP1jXleTFFLbd9Rjg5qPrSsqXmZr186/rbXVdyTrxXNCHVS2GdNTy
xKv+e7FnWcOIxh5Nf48nz2xPrH284FDnwZ7FpjfQdajG51I1XW2LqaDrUPpf
mzFVPlX2qqLzFOcYzPWmyenn5rqVfk57TG6Wp5+b5RmXzfUv47IZb2dcZhw1
eXx5wvFxsx7aHx836+G9zPLw+NbX5jqdedHcF8AO8XGzft7L5LTf3I+gnSbH
n2Be+pbl2ZlL7yd54E8wn8x8ta/PkHJ9tT1wH/ED4fHlXZuc9pgcf4j5rcaQ
diUcPNorZ75aUuJS8/5Pqmv8E39kv0+RuCbtnXW8ovxjiUszvnW0+llwlQdx
794HlNJ7PFiPDxvvOGzNmB96zh2e8af/7VAXB20Pzw2UODl+29zf9nwQPCzg
S7/2e12131H+jcThsQ/lX5dYODxPeGXl7Js4T1s69uMEN7UbcYnTrS9tLB+U
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
HD2Gdld7wqckLBVTLucgXYeyLlhdqe/y0ndj1I+k33yVvHrGHcr77M8c4/f9
s65PKb9N8vbx/+BzF1ZrkD8uVutnfOXcAfXA+7VZuGV9Rns+gd5rEfWyfIvW
9vP8jMNvhPM8/v+hUg/t5r2Hy3kT1jnwVnJuBX0wnr9Nac07fG9dl8u8Q7+D
z5D31eeK/bzFbvpc4SvE/vQ37JdPzi+jY/KG8sr8SzvhWWT+pZ3UM13mX+pn
PGgv8zuc8cBbznczv8CbiH6Yp+BF0Jv0F+IHjzJZ56TwCykfhG4l/kP5wXIO
i3gr5fOjf8mDpPwD6S/4Y+a+Le9lni+gneY+Ke2Bj5V+zbxG/tcK8a/gxEX6
iB/FPhbP9RI/jXPu8Nrij9F/aX+XPe1rHXpyWf1Mc9+T94rv/IIZx+N9Tc64
ynwdJH4m8zv1fxe/lPGE9qwbe3ZDqdVn9J5n3stb/GQ49dcWP5l1F/WkyZt7
9NqhIfq+ZjyQ+cU8T8H7mnFFvgvlS4v/z3tpvp74/7wXzw0R/x87m3FC+jXr
jwMfrf0dHddk/X14x/LDm13O6rkj3u/MB2seZ10N95R5nH7L89fKPI5/Y57P
ZZ/V5MRbzH0ixk24a40Sr7dVilI/zMyLxg8zOXY393f0vjLhxx7+tSfia7Ta
3cyXJo5hcvRq5lGjS/N35dAZ/F/H6PWTk87S9QjjR+jyFAv6nZiu93FRvp74
k/jr8DziTzK+U88g8SfRPevZAfMLnc67aqDGS+GPXjUeVPxdV83rZh8jokPf
D1PrdbH/DpdhBzj3nJj7VrTH1L9pH7iZj40fFV/etXlfCu0xy9OvzfKMh/Fx
M08b/yq+fGzTP+S94suXNsvDzbgu/cssr+sKozz+m+l/0v748qhNv5R+B683
/qJ33oAJypnnD7Xd+KbboiHar5nnA/1jjpdfNkjbA299Z+YO26wJ+lzzHhjs
YHLqxy/NnuL6ofvHW+u6AH9youe2yh0+e+o6gnVMmVXvMhy+mFb35cnnylNg
0J3P2xIoJ1+mSOd+D/NXjlM/k/zkw6luFcqdL87+u9VSz+ha9X+ey5pM86ip
Z3Oh5teLF07kwbqXetoVebIt3XhHHVfx1yo0dCv3KPinDX8I3i7g7WnnAQnU
32Z9WVvisdgT/rC8dZ8V9oSXk3ivX//tN1bUigw++rudR4O93KPm/Zxkz58k
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
pacvVB0/zOODJ/MTtRPzE8KjFRP/xser1LjTJ8yDW/L40JE9V/2LPZdwZzZO
Dd+ettt4pLVPoeZ9IxMYrnnfkTsbp/KCjZPwDizfqadZvqN+WuWk+13snK/6
jA5O/mDtv77fzXDFl+Hc/xdtWrmo7LXy87XR3iNuc/s4Ry+p6j7vtZKxctml
xd7cf+zid3/ze8gbzT1kek+1R3OHBYUcb8z6Vw+w/mk8X7L+1fusf8KXBG01
sexaojzZErU6OPFfemPrtB5u6TqNPjmj5bl0m4hiJcfQekNwa84TUIe0L7kd
UGjA89HaxVZ9Uk+WK0s+r32Q48z527eMv0nvhX7N4gMfP7OD9Hso65gdCI9h
z1VD2HM1PL8lGyfhq5kd1AfMDoRjn3dlfJjwLcw+mvprNrOPmsXsQ/ijt75G
QaFvlESHPin3gvh6lV3afmfSZ9XKnIDtkT2u8LiNfX7ywy6BlSG8PXhekr/V
3YCF3H+8vPc0Dfpce64ap8QdDQmtUqyKDHUekzkeU+t7/+oMnfL3oeS3V334
+oLfn50+29KkN7dbP0vvVZ55r9SKJLMwU2duty9r3Kdkzn2ljn6iPs+6xfH4
/ceygmwKVMuYWzdL/+TxZI/7y+nO3i/VjeemDhjbl/PhgGtuG6tCyjX3VFHH
nazR5a5/zXGP+9dvOVqUq0PmepneusFxWd0k248yHivLOzJ+K+NvsnpNlqdk
PFmW72R8XlYPyvKdrE6U5U0Zb5fFVVk+rSuPkvFhWZ6S1TWy+lcW32R1sWwf
yeKnLN7+v+prWXyW1d2yukMW/2X1iIz3yniyjG/UlY/J8qwsL8viqiwOy+Kt
jBfJ8rgs78vqYlm+qGvekdWJda0vZHVlXesCmc4jq19k+o9MN5DVuTI9QaYj
yXijTF+S8WGZXiGrr2X6jKxOl9V3deVjMt4uq/dldaKsrpTpbzLdRlZnyfSc
uvJJWT0i0zHqysNl9aBMb5TVQTIdUqYnyPQWGU+uKw+U8UkZP5fxQBnfk/FD
Gc/8X+uxsjpCVi/I6gtZHSHTf2T6mKwurqtuJtOZZfqDrO6W6agyfUOmh8j0
DZm+J9NpZXqITL+V6SQy/VBWB8l0RZk+LNPHZLqETP+X6RX/AVVcZbg=
      "], {{{
         EdgeForm[], 
         Texture[
          GraphicsBox[
           TagBox[
            RasterBox[CompressedData["
1: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
mv1zljHZ37jC/wXiHqGo
             "], {{0, 144.}, {144., 0}}, {0, 255}, ColorFunction -> RGBColor], 
            BoxForm`ImageTag[
            "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
            False], DefaultBaseStyle -> "ImageGraphics", 
           ImageSizeRaw -> {144., 144.}, 
           PlotRange -> {{0, 144.}, {0, 144.}}]], 
         GraphicsGroup3DBox[
          TagBox[{
            Polygon3DBox[CompressedData["
1:eJxN3Xm8f9X0P/D3Hd/3vu/9IKUSTRqVqJRKMyUqlDRQ0TxqUlJUlGZz8TNm
igiFDGmeZCjFV0QKkVmGzCL91vOzXveRP/bjrPd+77PPPvusvfaa98r7HfWi
I8cHg8EKjx0MJur6zMnBwO+VqkzODAbfGg4GU1Wx79RgsF2VyYJ/Vv/dVOUr
Vc6q9jfX9b4qZ052/U+rbDYaDKar7a/HBoM1pgeD0+u/G6r+NVX/j3rQsP7b
ovo+uPp8qH4fVW32KXii6vev67+qbrbgAwp+sOBRwSfXvQfW73/X71MKPqjg
/xS8X13/WdeZavOL6ufvBY8XvHrBb6jnXl/PPWx2MDi0ymXV9qr67/1VLqhy
wtxg8N7qa9sq8/W+y1f786v+kmq3QsHvKHjrRYPB++r6rLpeU9cPVPlglTWr
/zOqzY3V/3sK/lLdc1HVv7vgLxb8sYJ3qj4vqzafrjF9vOo+XHXXVflEwR+p
6/VVLi74wrreUOXG8YY/WuVzVf+hul5b5QXVz+eqn09VP7+q5329yjeqnFx1
X6vrL6qcas7r92rV/ri6d1jw6gX/pb7BY+u6RJVX19heVf+tUfCJBb+64CcX
PFNt167roir315ycUPVrFTxb9U+p66OqPKbK06o8NX2tm9/6Xi+/XzvV8JJV
Tir4FVXWL/iIuj69ro+r8uj0sY75rzEcX/+tWfCfx7pfz3lgrK/a/rbw5EP1
3t+td/xNlVuq3Fplq/qeP6/7t6n7f5358N8pkz0/v6wyVvP217r3n9XfxvCq
rndXeSa8qus9VU6q9l+ttj+v8t+Jftc/Vf0e1WYz+FbwleONA/Bmc3hXdT+u
8twaw+01vpdV3Ql1va/G86yC94TX9f9PqlwdXIM3763/L6//Pl7wl+v6ibp+
1X8Fn5Fvr+0pVV6Xe1xfDyervKXKW4N/6k4Nrrj3zCoXVT9vGG88+1jqzqry
qSpvqvLmKivNd//e5bwaz6fqnnMK/nRdzx3vMV083vAbq3wyV/e/vdp/stqd
bZx1PX288fhDGctpVd5R9QdnTBfU/L+/yuo1x0+v+flx3f+bmuMTC163yrOr
7eY1h5tV2brgw6rtoVV+WW3WrHv+XX08vuC767/xuq5U5dDCz0Oq/KDu/3T1
98P6b6zqvz/sNfQT81P1N1T9TQU/qd535SrTdc+qVVap8pD3qjY/qDYPm5+C
7yoYEby44O8X/F9zXGtq1fGmZX+q+z5W9Sd5X7idObqw2nykymcL/nrmzpx9
I1dz/5kqbzN/VW5J3aetq3rXles9P1fwN/ONL61yRfX/pKq/rODPTzXN+FGV
r/3P97lrvPESPVumxrb0XOMaOnf1VNOqQwo+OHTv2Yu6/TZ1vS3PMa5bMxbP
/sJU06Qf55t7xyOqvLPqD/kffAIfOt544HqY9jVvH6x2hwfPbCxHwbOam+PH
m5a+JXVHG0fVv2q86e2lweu3ZSxvTts35flH5n/3HeOeuve8KscWfHy993MK
fvxk3+//V1Y5tt77AzW/36gxzdT1jsKPVcZ73T++rsvCjbrvy/XZ7xz0Wvh0
1uZGi/pbb7yocceasf6tmwuydryXsXuHV8Cr+n3BxCPr9oKsCWvDev1AaP7p
WRvW7YWZ04/l9yezb5jji0L/ranXL/SRdWd9vyHvsFGVZ5ijqt+grktXeWq9
61ZTvY6um+019auCj6/69Ya91ras+i1mew1alyvV9Rc1N8+Be+4teJn0vWGV
51bd6lO9p99b7dco+DcF/7TgNQv+bcGHFfy8gn9X8Pbq6pn3F3xCzc0O6q39
gncs+P6Cn1FjeX7Bv5/obwgnzsv39T2tF9/5bfmm7wn9/Mr4I7TJWkBX0dOb
8/vrWSsL69Dvd2ePvilryP9fzVq8Je0uyTq0Jqxra/P28V6n1uO3xnud3ZV1
t+xcrz3rDQ7flvs/nT70u2++H7w4N+Pz/LeH9uIZDsj39K3PDw0/cLxpKXw5
KGsQ3hz8P2sPnuyf++DaIamDUx8MnT4sa+JtWUOvyNydm7X1pvz+U73vT2pM
q071entz/js691mP1viHsl8clTrtXlB1f5jofXOngv840Xv4d8ea/7C3f7/u
naj/biv4yXW9va6ftRcXDm6i4Dmq/Kju/ZY2hRtPqd8/qd9Pq+tP63pH1R9f
41ynft9bv19efa471c/5QcHzBd9Z8HrV3131+2fGUe33q742qP+eUfWH1Ld8
RsE/rP+XcsUTFPy4qeYN1qvr9+p6eZUDqu3a1ge+oGjA94tO/K3KGqOmGX+t
8vBE80B/rfaH2kMmm/85uvo8rH4vVfDh9qjJ5n9eU32eUGV8svkRa9g6e8lU
0yX8xisLnqr/V67fLy14ufHmOY4sXHtyPfvD9cy9qv4J481n3FnPGqvf3yz4
tdX3RN27fP03XfD/1buvWPB36jpZ9SvBh2r7cjxuwcfXvcda8+hGzc86VVar
3yvVdcUqy+Lhpvo7mpfBWPP4P6uyxVTzODdUebh+3xv+/6nV53n1rJ8U/O8q
91T5UZV1qv7tVf/jgh+scnf++2eVu6r8sMo/qvwgv/8+6Dn3+08TPce+7871
3Afq99/gT73XLvX7z/X7X+lDv+dP9nj+W2Wbeo9dvUO12b/GsOlU82+fqfpv
1u9H1+8nFrxLwY8peK/q87aC/1B97FrXJe2n1X6Fqr+9fn+v+jmg4JWrLF3/
7VPz/J+Cf1D1l1c/36s2dxf8xarbo+AnVJunFHxPwT+v+r9Xv1+p/i6qsla1
X7PKKtZQfdtVCn6i71Pt76j2/662X6y67xa8sv216lersvxU8x1ojn38wzWG
D1VZo9o/qZ4xUWVyounPs6o8G82ZanifKltWH+fW78dU+zOqnzcVvMRk04sd
quxYZb/ctw2aUm3eUm0eO9k0R9226FDVPS90afcqG1fZpMrJVf/Muu4R+qbt
c0LXXLdD26vNc0Pfzil4+9Cw3cZ7X9PXufXc06zVeu7ZBb+12i1Z8Jvq3V5Q
33bdKk+u8twq21VZM9fnVFmlyrOqbF1l1SrPzu+dJrv9WvCj+nxD9f+26vdp
g+7z+VVeVPMzU/W7kI1q3a1V5Qn1zEuq7j74UvBJ1eZS37R+P7/g6YJ3rvY7
FTws+EXWfPW/lD1Pv+Mt+zwtc0y2Igc9OnKW939TfcOz6t5lq26ynnlu/X4v
mjzTe6V989XZQ+2n6Ll+X1Dl2mHvzfbpHbL/oqV7FP6cXfXvm+q9aN98251C
t9HVDYdNx+3FTy9at0KV99fv5ecbXxZkkn1y/6npAy4cFh4Abb9+2DwB/gAP
8LzQ+hfkvdcNbq2TufhdveNvq/yj3umPdf1DlX8VfOJUy6Rwa9fx5kPgxAvT
BznzxePNm/hvl/Hmf/z+d93/uhrDmeFHd8wcrYYWBA8OzXz7DjuPt5xKRn1R
rvraKc/x3+p1z7a5f43gl98P1Pt+oeZs+3rHr9c3e1Fdj66yVT3/lvq9S8G3
1vXF6HqVL1Xbl+KJqnyx4JfU9dVVvlptdq7rUWOtf9kSfa3yparfEW9V5b2+
UV1fUeVn9Y7Prmd8C50t+FkF317wl6vsWf+faL+o8kJ7cpUjxvpev79SbZ5f
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
VPUXjDV/flS91y/YrOs9jyn4V2z2+OqCf00nhR6xh9b1vdV+mbr3GzUP36jf
N1R551jLqtfDj7GWHX9T7W+u3+8p+Hfs0QW/zzjr3vvr9wcKfm718fuCP1jw
ynlX8tJsfZM/stfWPRvWGDao8n50u+79Ovsc/rTafK3gByZb13LHbOtbVkof
ZKTJsbaBs/kezhY32bZyctleaXPPqGU8ch35jrxEliHz7Z2+yFxkLHP9lcgs
6A/5i9xm3sk4ZC4yzw2R48ikZDp6APIUmf3QsaZl10ZmJOOQ18iMZBxy0j75
vofVcz9T9Z+kX5rs775alemxtvezb/+a3bPa/W2m8Ykt/LdVhmP9v9+PCZ1C
O5cJzqJ5B9d9H6t+L6JDpf+ucXzU3KYtevuUUd+7RJUlQwfRzqmxnlfjOHey
53mi6pYaa5qr3WOLD1livun00nkmGv+4XLX7Yd37sbqeNdbf8LtVNp1o/uRG
e9Z0yyY7FDxXa3aFRa2bXHFR77H22rHxtrezu9vH8WX4M7pfOp8dZ9u34dmz
XY9nw8Oqx18dOd392K8vmGu680DBewdGf1437LHBNXv19rPNA5PFwHxR8AE7
BB7Ve89WWR5+ZWz8AZ5T1+0yTrQMP/+v8ZaLwHcXfO1U+6awz9JD7sQOPt42
W7Zbvh/suYelPdr+nPT5zulu4172p0PTxvx47t5TXbTHe+821XpwfDMezbO2
qvqH67k7G/N496UftuMVq36FKl+q2/cc9ftdTr9f/T8xvMpNc63bpC+9oeAl
Rq1DXbKuj63y1IKXHrUOlP7z+rmuf0zBN851vTZXTPc94OsKfnzBhxW87Kjh
vWvOrp7uvvSzaY3x/6bbvqkP9fS0N7PHFXx4tfnKXN+vvT6WTZ+ee0PGbSye
uzU6XdfVqjxQbX427Pf37r6veaBj+upc82r6cTUP9Fz+1/7Vkz0veLlz6JxH
bRf+3qCvq8ZGvGi+f1+ePo17ufT3hMytbwEP7qlv8Uu2hlH7wPwi8Putnbm2
YbNF6XN+vn/T3/qmLx9vve8e+b6fT5/w6prwJGTJPafbbsFmsUP1+WX7+1jb
MS4PTNZUT49xwXTLqPpgu7iiyl7TzcusG/7wa8P27WBr9q18s5vG2i4N9u2e
Nds2aD4h2vEDuXmsr5uHb/nOdP8Gf5Puarb129cM+7l42mtTbwzsV3ihW8da
fsfz/GKi+f0bZlsOcr0x8E5z/fu+sR77ZVWWqPpbqv0XZptmsb3gmeki9kg9
mw4dxZdmWwZ/adqw0bCpe6+f2xeG3SceD+/9pfTD/vj52bZBPneu4aur/k/Z
49BGfWyZ+dmc3R5dq/ZPr+uGs23HBG+UMW9SbTYOPbwt8EZTbf/cKPBNw7aD
uvfPo7a94gMX20XNgz1i1LSCXH/2TOMP2wGfiJfMtg/MhkWXX0sOq+vUXNf7
jbYdGVqEBj874zEPG2acxrxBlbvG2k7LXksunphpvy7fZf1hv/vCXG6d+bxl
2Hjzm8zPszInvu9W2SPWGcauPNV87ybBgZ9N93i814ZT/Vw2Yu++QeZE22em
vf/Xz9g2yriNeaNh1+vDOz0978Wfg+xGH3T3ZNv36Dwn6Vqqv8vsrfO9X9pv
P0gvEl7O3vuY7L8H1X8XZb/+fvZu+7U9dsnsy/btR+eeO0e9p+M3F/iGYfjJ
yezh+MyJ/MaDjef3Oycbxk+RAw6I3Lh6+sBrrJo+9LtT/T+aavv4462z+r1o
qu19u0efsFVsi+yJZ8W2yG54TmyI7HcPx67H7vbG2PXY+HauurmCvzzWdjk2
S3SM3ZLdaZ/I3vvlNzvk/vm9bfQq+48/Ymv0m50RzObIXknPye64fnidBV5m
qf/hWR4XXoY9eun8xm8/FJsym/UyacOWTQYgK1ww2TC7N/v149Iv2/Sy4cvW
J3dPtjyhr+XTt2+Bxx/L91k532Ui32/lfL9V8hv+uJft3bj0QS756aDx6uH0
7Rngd0x2355xbr47mQRPN5nn4PWm8hw833S+/aYZo/7OST/3hTcdBjeemedr
991R4w4elWxkTrzvRpknv9l82Y3Z+J6RufHfbwZ9r343yX363TDzrR3bHRse
ezEb3mH5TSdG90YHx6YID9aMvohuj47vt7Exwgf2RrZG+MAOayz023wOrqhy
5aB9EL6c30/J8zyf3ptdccfou+gC6QTXjy5up/FHbIo7R6e2S37Tz78g96+T
PnaIjmuj6LvgOpvrKcFvNlf2Wz43fIz4LvHBuSS/+elcmt/8fT6T33yc+Tbz
UXxT7uMbxe9ZG35W/J/5PPNF5J/M55CfGV83vk58B/m0XZ3f6+ZdvQO/tGvy
Hz9n/AXfNbwKPgUfxZ9ZG35s8BDNg6N3ZY6vGrTfxtVVrhn0vLBts9/S9+2e
b+p5R+Q/88sOdGTm9+j83jH3HTb+iK72iMz7MWkHD+h8X5m+6VjpUd86ans7
+7t97azYzfFR7OH2PjreY4NPu6QP/bKZs5efPN7fcLe02TDP05YOFo2ke339
TOtUNx1v/So96mbjrVOlI918vP2N6czosulszQUd6KnRnW4x3rpTPD1+/p7M
37WD1qHSV6KddMzoJt3lDzPf5vqU2MnR0R/lvusGrculfyWPsKXTR6Ov36rv
+bkay/lj7Qu1VGjoAfapid6/2I7Pq/L2sbYhsjeehqbMth2X3ZH9kR32jLG2
SbLtvmGsbYJsjqcWPFvP/C78GWv7IFvh68fabmtfJZ/vWu+4S5Vr6Iiq/ptV
3oIG4gur7q1jbc9k42TTZN9k76UrYZckj5LVr55oe/ORoTv2P3vpydHbfDVz
Y47MsdiCH2WuxBqIceDXJN5BXADfp5sG7Sf103yTe4LjU9lT0XFxBGIn7h20
X/tvI8ufElmbf//XI3+jzd8IzfX7lrT1+6TonW4edFyG535l0DqgN+X92Vfp
gegu2G/Zbk8Za5v7O/JNH6x7L077f1X7W2tePlXwr6vtMrOtJ76l6j6Zfneo
8f+j7vnEWOtHj8h8/6jqPj7Wc/1wwbfXPZfaP6rPKTIBe1z1OV3wdwo+zn5R
8B0TjTtwjH/gOB10cGm5uveh6uu2ifZVOD949rOqu67q3jbW/hV0VHR8/C/4
YtAL88fgh3HMWOt84Sh/jN3y/vpj42bTPnmsfTn4YtAF882AF3TCu6at++mG
j8/9/C74dNAT8cPgf0GXtMt8f9MX1fW++Gnw2eD74V46TDZ6tvWTCv55/DrY
7OnJ7Pn2evqplfLb+v1XeJAfFO4fN9k4go6ip/aua6qfq0eNLzvPN27tVNdD
ox+ja7q77v0hnSxdefAPTv0w+qhLo4taNWvhtMmm53dEDiXLfjey7ZMi5345
+yWZ9FnBcffTp14Sfeh0+lN/b3gTPMrZ4YfhLh4JL/Wf8FZ4rH+Hh/LuD4b/
+mfmAp+F38Kv4a3wQ08Ye4SH+2do1d/Cl32taPuao+afjyl4ndCvo+ealvlv
68y9d/j6XN+zWvQEeG+6grVH3ScaeHbN7/+rZx8/3/3577HwbLLpxyeqnDfs
dXnRoHW5eDH6xqtDG3zbD2V/pG8U/8Lf88+D9v3ke/qXQeuE4QPd5tsmO0bG
ePip/jXz/4PMx9/T94OZq3syl37zx/z34BH/zPMy53dlzv6R76kP78m38/zM
71UZr7ZX5HnarhB9kX1/br71HHxy3pt2cOR9wVe/L8hepL8VpluP8sVB+wdd
lXYfCA3V7mOhbejrhwZNg9HmEyYb/nCVYyabFn68yorV54mTHQu2csGvney4
rQ/mPv2uVPWvmew4tV8NW1cDn982bF0OndIWtVY2r/LuidYP/DAy3nbTva+c
G/hH2WM+Uff+c7J/219+PNk086Kqv6vgM8ealqp/s29dtPUj9d+fJnuvsxfa
B4ez/Rt8WHRoW2f/1I899Bp+v/aeqhsnw1V9ieaDc8nReInsq/qki161/ivS
OmAOX71KNRvMWLOT3fejBy0HshexIe4x07YCdO0lgd9d8LbsJ/TbVV4107Zr
viKrpW/9rgUPqswP2ldzlN9r5JlUlM+ZbpnZvr59YPvHtpln+/T7hj3P9u41
c5++vBc+A49xZWA2nYlqMD7b/AbbAxvEh+r6vOn27WWb+Gz1uVt++/+PacMm
8cf06V3ZR7zvaenn1NT/KrTennTfZO9BeBD8B94DD/LT7Dvgn6XNdYFfmfr7
0v7G9PmujPP+jH1mtvHAbzYWthb71DbT/X5wYIGvAsMN8MFpw5ZyesEfq/f9
y2T/XuCZ3pIx/yT7JZ7q3uDkzbEJsQd9JfPwmsBsP+w+u8/0uI35k8O+V59f
zb0nBTbm96VP97624P/OdF/63C392EefwxYX3HpWlX2r7ENPmOvLq2xUH//B
Ya+hQ+v6H7pjuobZfsfvV/0/stbMx0MFf2u6668KfUF7no6Gxy9u4Xv4Xj/O
ujUPV4R+oVtfSz2e4M/xJzTPV+Z//e5Nh1zlz9V2KTr7yfYPP6jq/l1jWKbG
+cx67n+HHV9AN/Sj8NarzjbduKt+Xzdsu+49xjxsXS097f4zj9z3ipm+99sF
r0EnWm1WqP6fVPC3p/u5eGi89OVZv3fke90bPPC9Xp56befq3tFs06I9ipCs
W9eX1PWlM92PtbDKYLErzWI68o30g2dC898bOm8Obwlv/dfp7s/a2iY0Y7+J
nvuvR0b4y7DxG27/bbrnjf3xPcEbeDhd45qa7e/60uCP//GwbJPslLdNts0S
L7ideQ8+/TL1/2/sEVsmPuzhme4fTp4cfIW37w0Mb59R3+ufGZ97vpj+L59s
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
V+8atp764nxj7/7j7FdbDB6R1123yp7munX2NlcyFtwVO2T+fhyY3ogNTDzS
Hdk/N0+/7iEjrJo+npTfr5nquGsx18/O/8ZtPYjjekJw7AN5Fpz2LmLGTp3u
e8Vin07XOvVIziDXler6hpmOpYV7b9BmpmNuxXHLf7o4/3ZguSWNZyb/y1Ho
XrkN5SiUZ1V+wtNmOlZXfK5n6k/crvvlwdSf3IdyTsp/ePJM+8Qs5N931d9k
+uQnM0yf8iueNmp/GvlerZ1FwX+xu+rkMkIT2JmsWTnWrgxNOC/1aAUeWR0e
eO3wS/hi+XLwadb1zsPmscFXhX7sgBYM2/7nt/xJ8ijJrXRI5kceWD5O3pdf
G58zbfj/fHOqfd74YNwZmE8NPpnPG377zNBGdE2f8nuav1eHF9U/PpP/F75a
riS+IvKKyBsnf5y8c/+v2r9zpn+fWOtg+1Gf23FL7pX/7XXB3X0HPTb+IXzq
bk2fD+abLpHv+IbQKN/3HXTaoz6P5NXV/3aBX5/+6BeuS59sIu/j8z/qeHu0
i31EXPZzq27RTNe/btQ+MvKiwg8CtNyYcHMiOMCvTT1fMn5lcGlxntLpzqMq
9yVfGrDzrV453TlZ5e7k5wKW58TciOt3ltBHMwbz88LMOX+wD7Bpj7od/H5U
8FNZFJy9Nd+Or47YRzGQYiflWbopeZfEFIs94KvLt4wfGp83hf+but9Pt9/a
8viIwrH7p9u3Tw5e39u3pmcjb+C3PfN7qV8xfZI9fzfdPmh8/PDReHR8Nd82
z+L3+MH0SU75Q9qvkPHwZ6OsWCGwvuU25HMEZ36bcfK5JBfCYzgsr6Yctfzq
p0YNi8eXO0UuRbl0XjHd+WfFzcmj43v4Fvzx98i9a+e9rIUT45vkO/JV2j3w
ajWvPxz2/KyZMWhv75Ivxf4FllMFfXtsYHsrvNAPPyu+VbfkveR78o7OsIH7
vqtvKo8i2yk7OHvng1PtV0D/QQ/Cj+6lgelDFo06p6J77qkxPhD9yWY15j9P
dx90SXRK7G73kgmiY5J77f1zfb++2KX0fUJg9qnN59reT87dYq5t2Mbofv28
IeNkn5Ubk8wNJncb+z9T7xt/K3jojAzva707m+yWvPtyc01TFnx/XeUJ/810
+5Hyd4VP+uET+7vU6xue3BY8XCrfZcvgzM+Ck/Ip8VGTj27t4Crc/nXu5f+K
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
v4IH8twHIsuIjSTX0CfLZXDzoK/nBcaHiT2+aNCxCXKBiRn3v3ZfGbSN4S3B
+b/kfc2DPK7O6HVuifho5yI/P3LQW7Kuxffr/6xBt3MWrzyy35xreN/UvSew
cwf041wbeGKP2ST7BtjeMT3qc2rpW46c6ZyM6Lmc8+KUySyufotZJsc8lHr5
4f2HT9hk1PG88nzx0+Wv60wuPj3qyDLOK5SzTn5mee3GZtpf1NVvOe74k46n
/pVpQ/Z3RuJExnlAxskn8P+GXQ/3JmsMkzMty9P7OUfKGVLD+BlOubfmaibw
1nn3FaNn5hu2QvSlw9TzT3PvZPTJ7l0lOiJ6W7qRrfJcfR48189dNfqT2bSX
XwQ+iKOnq6GTpG/hw+wMs/Ojh5nLmJ+benMo5v7tuffjwaeLgl/qzxn0/nx5
aOAVw5ZjybCufsvlTab0m7x7dOq14W/F7wofTr4kl+LlyWf6lINxwYeG/wz9
HB3fs8IvnJh1el/q6f3wcYenT2dfvC94uEqehSfEx+Hnlot+RawvHctugels
8ObsU+QydPeG0DcxWeLN7TvLZ806v/7B1IPH0h7N3jv9yAP/5NhZ5B4kO9A7
fbra/2223/2m7N2XhTbS1b4670vnKq/79VlTl2Ud/WW2fauMf+XZboMfg9Nw
Hg7bD/nt2RPxQfgh/JR+yK72Av3T7dIZ+Ga+Ex2V73tUvoU5x5+tEL3CcRkP
3hzPar8YT5/WO7seufTW0BXfQo7lz4Wm0c+w18tnij6Tw47JXLETvjLz/9PA
a0ZndnTwZ/0819iM4cjAfH/EcvOPQPPlLWW7Ng/4A/wFG77crMuH5sMlfOhn
cu8K0SecnHH+Ie35CPA1Oil9rp/5waPCW2MgR/w83w6/ip6/LuNZL/MPb/lg
nJQxPDVj840OC0/DjsN/VRImcuLyoW/OJXSOgXMg5NT6+7DP7XCuhjxK4hDp
HhfHIg5bP+nsB234NLr+PTA/ibsztq+nTzK4fGvOUnJeFV8Btmf8J39Nfpv8
yh8zavj0uu/Ro27DNi2/n3udwSSf3h+Hnff7yLnO4eacID5vzrGTU87/2l0a
vTsfV7pQfq5gPBvf11tSL5aVXzF7Jb9u+fcXn407bP9/uaTllXKmg/Pa6InU
86OQN1EeRfkSybx/yticafLXvLtciw8UfMhYz+mfA4vT0KccUH/IvPl28iIu
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
fKn0FWLB/zbqePBnp54PobwT6sV889Ony6DHYP+0dtjI6Pfo9sSVi6X+76j9
hOU3AIuxXtAJigHHe8hZQTfo+q/AfIf5Fi/MB5iPMd3hP9NGDPe/Rx3HfXye
7bnyJhiD54jtfniUuO/pprH2PzoY46d7kRPs4YxNLgh9isX/41yPic5Trg9z
6DmPHfSZl0tEp42m0UU7H9MZIXwoxHOI9+DPLG5G/Iz4C3pF5xhcFTlUTkMy
I1vZFyL/mkdnsKGHYmO1cTYEGZQsSiZdM3pB+PDZgj8z2/1usaj3lS0XtX80
H1e2FfHdxsMOxQZ1eWRb+kU6R32x0TtnwbPJsmRaMjLb3V6B+QpsPt1+KTcV
vAUZcqz5Hzn35dv/Eho03Wel8T/gAzGbeu0PzXvtnne/Jn3y2biCfXe6fTPk
4JeL31kDYmCel3lwBqyzPNmUr0z7rQJvNt06+asCbz3W51s5w0Ncp7NNnGty
cWQi/tPkCH4ffBr4w4g7dh7bGYO2Ratna3ZmnLPiPjLo8+LApw861oQP0qGD
tks/Lu2PSD8XDtpPSbzJIYOOZXa+2pmDPp/OuZ6fGLS8S+4lC98V+JPxEVou
9Ufm3o8OmtbbL50v9M7MlVxVF2bOybx/z7uzxdP5LM5zOtZnyjhLZvE5MpNd
78yOf2d++ICxj5sfMTjixLWXc0COAnGqZE/nIznnT74CeQmc+eH8GnKx87Sc
6yKPlvMVnI8wnjb6mcu97w38ovSjT/eSqT8dvHppYP04o8GZEhtPty+QWE+y
N7mbjMxfx7clE5OTycT0c7/Nvvz41Bs/mVj7/4QnuXPU80dG16fYzZ/V9adV
9h7rvYBPkrn1fL5K8JZPENi4+Cj9MPC9uXevavPs6e5LP+Ry8jn9GX8QfiF0
+9pq863JpiVoCnrztNAc55Lwz/pk6tnp5FDgA8BHFSxW7hO5V3t8lndzhsWd
gRd8k+4M/Kzp9vUh74i1MjZ6A+O5N2PmB3RfxjabMX8o78V/i+8QHy7wtyfb
jixXKb6R/xE/pI9mvfLBssbl290uuHd/1rU1fk/qnUt3c8FbTrfPv/gtfk5n
ZF0/J208zzj2Dl3atuCzxjoGHOys3y+GLu0w1v5gG4fm3B/agvf7Sp6Fpt1S
8FbTfb7wzXmWfm5N/S5ps/V0n1/JZ8rY+PP8uN7vJ6OW+bYc6zncIvU/Cj74
DYbP/MjMCRrmW/wkbVx/HPhHgdHY90SHhiZ8M2Mwzm/lfu3xPOZ8lHrz4xvJ
2SO/jzw8/GfRPnTv9twLB9gA2QLZFs+fa9shuyE7kXih7cJvPCkyDL3oZvOt
k98ye9BWdV15vtuQrZaY73Z0p49Ne3WPq7L0fPsVrFDXLaosP9/78tPnW0Zc
yZ5W5ZTx/m/L9Om6VWDxR3KAyt9CR7tpxrN0nvGqqp+p62yVd+O1zM1881/D
+T4rV73/R4H95/d7Uj8TeIXco42cVPrfLeN/esbAPsxmzN/fuWbudbab5wxz
Li94Kv1snnd3r3da+X/ecfm8u9y5K6R+i8DaHxefB/457J5iCdhDxWs/c9S6
Sv4krx21LY6+h26IPkcfK2ae+UFrw5+E7ocOaCEHPJguyFiMVZ5VOLBixoP/
Xy7yBZnTmbJyepNvfb/3j7e9Urwlm9SyC/LIRF/9JsfzLVmm4G1GPQ/ef6W0
XS7tt8gYls/zHp97fetlgkvuXzrfXd6hP8R+7frHwFP57vI6bruo5bnn1HWn
6EXpR/ebb/9yZxytnrOW1ljUvKq+8LHr1O/Jgp+K74qMTFa+aL7XzzfJF/Mt
d355vuUNcsfn67pe3fPWgtev6yqLOl/YqnX9wnyvuy/W9YT5zinwpvnOOyxv
sHMRxcPKlSNGxHl0/HzERK8yatnp8viNaHPYoG2d7Pj0e67s+gs8+O8zJzss
aj3djnXdODmW5VrefVH79u5R1/3n2xfvo/N9LqBz046t64Hz7c/9ubo+cVHb
dpev63KLOj7n0vm2WVn/7H2bhSYssUA/smb9p845uXN1nZ/vd3nvoH9bgytn
7cMN4/dNfRN2sSXzHLTpT5GJNl3U8GaLeh369s5uZvezTvcJXVoyY/BMz/py
tfl+lUfNt0+IK/sdufU98x1TILZg1/k+5+k8fS3q2Iz9FvV6ek3WlPvc/7dB
w49JP2ybYHTLt1s03/4pfj867Y1nUebBf/MZ22bpn23d+5oXa46elj7Xt+Zj
gybwKaKbJP/eONF6zaMC8+Gy9vhrOc+EbppucMHH6+3jrbfiG0WvgiagIeRK
/2+bNmQ38Z/izKxFfR4XPaE+l4zu9uzAZDR6TDpMufHolDfPGOiFF58hNdOw
/Hl0nGcFhl98CORDkBsBvGn60YYu3dkg9Jh0lc4IQhfIkvSa6hfODzEeumX6
1HNTT7dtPPIq8AvbLvMjzlWMrjgPfnmb5/vSf6K3dNrybMn/xWaHrsrVIv5O
HCJY3In4WnG5/OJmAvPHEAOCTorvmMqey5dDXK+4X7EX04HF/rIPLs41NtZ+
ipsFH/i9GRtfVnwYvx76PHzZjuHN7PV8ifzHZ43v2oIPGx0onRud2vaB749u
lF5U35ul/0X57nTO+vYMfmVwYOnQ81Hmjc8Ynw6+HfxB+MzynWXzdUYEPwY+
DGygbJzsm2wWbKh0y/TQbI3OA+HvoD1/E7YLOP+f2JHYltit7INsSOxHbESv
yp5ojvhBmjPnkLBxsmmyc746/bOjGgP7prNHTsg+yO7Hxsl3nu2LPYzNi36J
DZJNgX0JfNNE+7Oclu/CDnB06k8ddT2fF/Y1Y2YLw0+8reBdxzsPjP7Z2n49
2ffi016XOeQbo9542LP4Rb496w7Ovy94q+5tqbc+35O1cHyV9496rzx/1Odv
WffW9Huz3t+bftxnzoybv+hpgb2XfD7oCVsJf9LXpw0djv7fkedckOceW+W8
gl+Z/fo9GefbUv/2jNl4tHU9P7DvBR/YI7zT21P/voz5vPRxfvr5/wdwlF8=

             "]], 
            Polygon3DBox[CompressedData["
1:eJwtlElI1VEUxq/61JfeCy1e0SItGyhs1qhoQpvMrDSnsGjQyKwgiYgWLSpo
wrJoQEt3DVIQQVho0r7Mlm3atY6gNi2Dfh9fi4/3+597zh2+e+6r6OptPpMf
QqhDGbQlhTBMYAJthW/HEF4yUJkXwi34IZqdDaGjJITjcAc5Kxn/WRjCAfgE
sTsFzEdsAG5CU8z7CjXCH9BXan/w3QLvpWaS2pnUNMJz0XRq+4hVwJtQUWkI
teRuhs/zO8D4NPbTCh9KXnuMPR2G24mNMp4rDqEfPkIsx1gLax6FbxAryfMc
N+EG1J7xnrvgz2iE727yp+BtyV58Q9vhU8ReF3gNrbWG2EXGnrOHtfAu9KzI
Z2qA35HTw1wPOMOI1iL2vdCe7YdHo9caYc5heH3yXL/J35Dsgbyo4Tzz5DUa
4vsuNavg69R0Mlcvfl6DNybXyjN5twRd5fx9aGmyxBnGl8Fl6ErWnpfDzegp
30/kWfKd6G4Ua4JPssafrM/0Fm4j9iLrM+lsugPdhTyX963JcylHueeie6OM
7255iX4V29PT8Jf436uM72IBNX9Zq5/5F8LLk/cuD1bA1WhWxnewGq5K9kYx
jVWig/n2QF7cZ87BYvf0PfhNdC/n8K8+2kN5uY78x9F3ortRzwxF71l71xvQ
W+hK7q2z5HSqn9EY3+NoIlriGfTEnuieVe/qDegtjEe/DdW8hxcln1V7Xpxc
o1rd8bHonlZv6wxtcHP0W9Ib2wfvSO7Vcjyqgz8SuwRfRpPwI1Sddc+r93ui
z1qFBuHd0awc5arn1Hu6g/lwPZpT6h5Xr2tOza2eUG/sTF5bOcq9EP3foT18
gmuS37L+Y2rhf+wXhko=
             "]]}, Annotation[#, "Charting`Private`Tag$182314#1"]& ]]}, {}, {
         EdgeForm[], 
         GrayLevel[0.82], 
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1:eJxNm3e0VdW1xg/3XLj7nL0PUizPoAlGLAhcQBEweWPkIVIsaMSCgD2+kodR
QyxooliwIAKiVMEKWOjNlvcsSFc6ikjkgoICIipIUZ8xb/7u951B/thjz7P2
XGuvPddcs3xzneOuvbHnDRW5XG5S3VwuH/felbncrGIu1z/of0tzuScLuVyx
Xi53WFzXxrObov3teH5L0COD/ihV+/Cgrw3eMUku94v4/WWWyw2Ltt1xPyXa
zo62dvH7k+DZEtc58XtS3DclGmtK0G3jHV8Gz98z0T/FfWK0P1fQ+7OqXO5c
j9Mm+p0XdPugH4rnD8b1RXzDh6m+gfm/FG0to9+qoDdHe01cH0e/GXGfHtet
wfeieXYHz2+ibXT8rozf98T97rg2x5gD435XXDVBb4r7cTFG9+ibVum7Tou+
f4v2X0R71/j9YF532h+N9sbR3j5+v+1+zP/8kGHD+H1a/O4Y7+0QV7ugHwj+
++PaGe8aH2076opnQfC+k0huzKk548R77gzevyDHaBsU9/vcd1dcrYOnZ/A8
G+9aFO0jo//kotboeNYy0xj3xv3deN6/oPY74n57XOtijFKV5Hx6zLkQcrmM
MYNulWgtaN8V9HDWM8b6OugucT0X9IvR1jD6l+qE/OJb7oyrazwbGW3j49nE
4Pky6Anu+1XQU4J+Kehvgq9zIp4jSrlcixjjyJKeN64Sz3iP/2LQg+Mbhsb8
+sa9V8x9SPQ9irmik/EdR1TqPQ2q9K5RIYeL/eyhaBsU17zovyDaRkTfYyo1
f97Fu79L1L/83sOqNLeu1gPW+kCi73sh2lvEvVc8uxCdz3T/NO7XxfjD41nT
ePZ0zOFK9Dvm0MH8yPb9kNOguM6vFH1B3P812j8IukfQlwQ9Nei69cQzGN2s
kv6jA9NirFbRvjTR+j2cl96xf9C9+Ynm/FC0H0z0PchwWIxZP9q/Dp6FifgH
R/s4f29WR3rImKw7aw7/08HzhGXLWg+JOTxckA4Oi3uj6HN6PF8X46+Na2p8
95eJ9h77rksqekjwXBDPhgd9Y4z526L6Qz+XimacTxPtbfb15FR7jP3FPhtu
+vtoXxX04phDoSh6bRi66+O+2vRlwbMi6L8GT+Og3zPNPlke9Lzg6VnU+Dfl
1Rf+ddHeJ/hXBv0/wf8fBdEvR/ttcV/D+NF+eap3LQn6whhnhMdBrqwHskU2
Q/1dLwT/89iC+K6zqyRHZNi9SmvM+taYhh8ZD/H3Tkz1G5o+0BfG+B9lskcb
M9nemriOivEbpfpGvndmIhvK+N2qZIOwIc2wE3ENYQ8mmn+HSq0/dgi9wu7S
t9r7gP2AXv0s3nFGXB25p/rGG6J9eqI+8PO+Bz3PCZn26x/i/mI9yfBw9leq
tX6kUvtyCXu2QjR7dWzQF6ai2bOV0f+1+P1tjP14pvn2j/vF0bY0eGbWle7h
b/A13VLRYyq1jvC8EmNeE/dlHr9+qvfOtG4s8lrzLTOw4ZYDv/kWdJL1Oxj8
F6XiZ7/PDHqx+zL+wrjGBX2Y2xm/Z6p2/DE6z9of8Lrsrysf8Uq8p4F9Bz4H
33NEfMvGgmjWoEmi36w9bRvNg+/Chx0Z9McF0ejirehsQbL/eaJnrCPPPzb/
GvOg27ODZ1YiHzOF/Wib89/R59y4zovr0lQynBX8r6Zq/31eMkNW6MAT0T4O
WxftvVL5IXxQP4/RI6453pvsWXzUu6ZbJ/LX2ERkhv1HnujCI/W0dv+XyqZg
O0ZXyaaX7Tk09qqx/Q7t2MMXKmXr2EPInjV9JsZ52npVKomnftx/TLW3sRH4
tSc85vSi4gj28mH2d4y5Pfg+LxzyRRPMnxW1t1njDqGv7eP6e6o9yDjt7WcZ
H/v8AH65Sj4AX4mN/iraR1XJJ/I+/O04v/f1VP6N+T8S9ENxbY9+W+I6M667
g+/+aPsk6HuIYYJ+INVzdBmbQiyxOOb5QkFx29B4/kXch1UqziPe+ypTfHVs
vGtU/O6UKs7j97KibPzKaN8W7VvjGsu+xoanih2Q875419l52Q1iI2QCb/dE
+/QzxxjYhOVF2YdP7U/Y27zj4eAfnIp3Z5V8FX6K+W6zz7o6+u50nLHfthW7
2jTatwa9NuY5LOixdWWbNtqW/i3THmHvsac6ecw1OcWDxLvDg++ERHEAvn9H
lebBe7m2efyyTf9ttK2P+wdxja4QL32+CZ7PCvoN3TzR+PjxPgXx/6xSd/oT
SxDTXFRQzENcs6lKMu1qHsZf4bkxz3HB2zLoi2LMZYlo/PsS2390Lxff/Mug
j87JXmBHBjv+QQ7Yij5F8f9L8GwK/hODrskOyYIYCV1uZp8CbzOPvypRfMkc
8FFNE/kp+p3ovosSfT/fPr6g/X9xTvNt5TnTj7lhr57AzwT9aF79oImvFpuf
9uUes6ft4c/dt9rzoX2K9Qrda5soH2KeB0OOa0KuByrss4gz87KRa2xLyRmw
l/gI/NnHxBpxf9OxATHFkY5vj4r7yali+bbB80PQx6SKHwZmet/DcW8ebX8u
iG9AQe84NS8fgd9Gl9oGz70F5Q+3OJZnbsSG8FyQlx/ZYbqNcw3sMPZ8k8ck
jvould19JtM4V2eyASfE980JOTzv/TfQPg5/93g9+RRkwHuJwfjeifE7n+n+
TXzPJfjAGPPI6DsmeK4qKD6+1O1NrNvoNXo+xLH57RWS0fZob5OXXJDPYvQ0
1XuRN/5npH3BIzH++cRM0WdBUfOdHfOfHfyz7OOXmp8YYF60zXWcNMe+aXw9
xXoT6smPrzBNTIjPxu/cwf5F9gX5FfxdjXVgaCI+ePiOiXX1LaNT5c8z4vfY
oMekyhWYE7EOsQE+7hrHBo0du6I/hzm2IX4hlvvCOtDdOQH+a04iGw69Nuj6
9ZTLb89E74j77KJ0mz3FOjA3Yq2VRcX52FBs0baC6OGpcgZs6MtF5eh/jL6r
E9GMj+yImYgzl3n+xAP7ol/DVHQ+7p2rtN7ow1jLpIvboJPguaIgPXjeurc6
J116JVWcfyDuR6SKyScnypOR+WzT5VyX+7OZ9OrZurKHdVLZTGwnukf7gArZ
y67Wv5WWMeOfVSVeeDpVSaf6BH1Hpvt1cf8xZNLD+nYB8Yd5epqmL7IC40Be
4BzQ5Njl38gTO4ktJt4m9iavIyfnWma7hw2EHpHX/V3T8CyxjWW8lYnGxO6t
sP3n+VKP38Lt5KJPmh9btzmRz58b9N5EsQuxyJpE+sRa02e5bSn9Vrnv5IJw
F/qC9TDOHNvzxbbD4/PimZcTnrTGY7bxt/AdM3OKHVbkZGtvLsi2NInfv3K+
sdhrxN5kH/+7Y3j23dXeOy+l4j8GTCOVrmNnsDtXOb8o53XYAd5zi981xXn5
r3OKSa93LDrZMQ6Y0gzPcbn99XLLmX3Qr6C98EaqvtgN7Ec/z5k8tb/HJA6G
XlMhX4Q80Y32ifQG+aAvq91OHFfjWI79Ab3aMcnb9pvdTeOvN4R+NqpSLEvs
t9lrRB4HRlDuN9/8n2Gjos9XiWJR9AAdIIfanQizW1dUPAo2QoxGTEeOTz9o
cCFyx3ccP3SL+x7zo1OMCT5DLL3H44OpgK2k4SO/j321K8b7IRP+9I71n5wa
zIK2j4qK6YnvyVFeThS74t/weeRNEzO1/zET1oeNIJchL8FWYieXFqVvs3Ky
nXPM08p6y7tY30XW4WIq+4a+8V7GxNaAH+IDqp07g6GUZbDA84deaJm09ryZ
M+9Y5LUj52P++Ov+zm0HZcq9sPvY/IfsA3gXtvUa55gl+xewWfA/aPANcNIR
4JTszZww3cfjmpYqfr8trreKar81JzuIHcYX32zex3KKi1ra5vxoP9s7xt+D
fY7fezNhxOyN6X7fTP+eF8/nFvWcfdk7rsvIEaLPKPQuk98H18Nv/snvZN7v
FOXDy/OY7fUa4ftM25w5/rZqx3uP2tad4L2JPe/j78qlstHEz8SY5Jf4xGlF
YVfgb6Nt02vjlrrix56XfVitTzfGyJiDE/mX2+xrLjbN3m3v/XuGv7tXXBWp
xmH8ywvySdgo7pfbP33gOUN3dL9L4+prniaOqfqahg8af4fPvdRzHur14nvJ
hdi/5JL3pVqLX9ueg6vjO8DF2TPoKToOjX+dmijmJCYDhwaLBBNAP8HPq72/
7nZf9iP86PNO90GH4R1ofvbNQMe4vIO++HRs9XX+FuIj7Dwx0jNFtTf1e+/z
HIivfmedvzcV7speABv/nfmJqcHviHsnJYpfy/F8LT5SV/O4yzzg7nd6/F7e
H+yhYYn2yCjHLVeaZu58P/O/zHvrVq8Z/W627g/wM+owM12LucTP0X18Iz6S
fJs4/c+eDzRzIi5e428hBuY+wDw1zhn4FtrpS05CXH+7v5c7NQBqDMjhdtPk
BXzvJq/1X/ztxZIw77QkfGCzfdCSonJj8ARkAN6NzImnoLElyJ41a2q7RH1i
boX2B/sHWbK+Y4uKl4mN4Z/hvqzfyLLfLkrP+5pGR4hh6YtPn2Qs6IAxkKuC
HlopbAisGSx2kcdkPtRnqNP8Ia8YF7zgqbz4GedGY+PXFLVfPjcPewi8EZ0k
BrnC34Id4LtGmQbvGpcopzghbFyzuFIwJsfF2G1iYTAI7An1EfIKcgpyC+iW
4RM7Rr9Wxt2ezrRWN8b9qRinJf42L9/Bt+D72OvseWwSdo/5YMPw13wLPhof
f63pEfb7Y51/MR/wkILXnfUnBia/ItZlfGjsySuZbPadmezfULezn9At9BAb
dpZjcbDcRxPlUcQ8YBMXOb6Fxm5jw8nteY59BgvA75C7QGOr4X3C/NjXZwry
JTyfYH7yHtpvMi4BlkicTC5LjkHsBH5FbEdcRNw6yfSZxrXwLYzxrMffbH7i
QGwmMTe2/axUOTP7onOq8Qc6FqZ9jm0sMXdv4wzMk2/ietJyAGekJkGtYwd2
xjoJlnel6R2miQf/YXzyoLFlYmBwUsahnXoEGPXjiXJ24gT2J/uL2JgcjD2E
bl/l8fGPrDc+cHNB9dyjjL2A3RDDUMOkjtDOeSLzBCcklwEnAv/ZYDztI2NL
tIMdzXRsA36PHzyzSvsADBtcG8ytNTodV8O88n/ujfLKVYlNwUjB2MD7wOXY
l3wD8wcX/Nw+Dp3/zPRex7XEn8hui/uSl4CLsu5gi2BB1A5WFDU+eB57fqff
C8aC78Oncd1vH8cevN8yWVTU+OgDa7XDc0PG202Dr+7wHJgP7ejkFcYt4cHG
MjfyJ/QJ3aUuti0RDT81lK2J6txDbPf4/hXO61kXcgGwb+qAtd/oXAscmXYw
ZMZf5RhrVVFxOHkOuk2uQc5xKrV7YutU2DY4e7n+i03BnpAjgIljO98rSv5g
ucyPeZIvEMPTl3orGO8284Bbb/N3sXZb3b7N45MjgBOTj4DXgbWDudevI/wJ
HIrcCszuw7g2VAjPANcAX53gPrwXzJV2sI5dVeKDh9/Qk1yjwPZW+14/rsPy
yqXZG+hzDz9HZ1vHPKtT6Sw+dLuxvmr3Q6dPiucnpsIJb7N/xo+Th5L3gnNR
N+e7mC/77xPvwd1Vmj/fe46fMZca89BG7vm/xhVbcD4jrsPjd3MwkRj727iO
i99NU8mJeeyL+/4K7TGe83tR8B8bPAsy7b+97luNP4qrCf4nUzvfBc5NnYMY
b5XXAhywm9vB4HnHeq/NydH3pLgapNrL4PJg5ltNj/c4jAH+g68reQ3o/1pc
r3uuH3hcar7k2uTcJ2bioX2/cSPyfWqVxALUK/FX+C18JbVl7C5+nzl1if7v
V2iOZ2UaDzl2i/se5/W9U+X4nc3zaoXk3MWyhre7+ZFVN8urldtbmrer3wX+
MNUYBLFKre2uJyyQb+Od4BDUYPBBnHOZ4Vyu/Ht0TmvOmMyFtmluZ759LAtw
Et5H/D/V9LE51ZymmmYPU2diX5OnQ2Mr2KfEWMRX7Ev2f/n5XeYnvyf/J8dH
Np0tQ+wTfbF37LNdPrOB3R5i283ZGGqH4NX47hdT1drIH1/ynAc4jyWWJhYj
JiNHONY84D/U3OmLP2qT6Tc1Dupv1OHwm/hG5NzUMgfjBqvp4NwNv897plvO
P6XqS/2OejR1Q2Iw4jFoalvcn3I79DNux4YQz6HLLd2nRV7fyjfXYhepYlni
2NucM5I3sA/6psLVqRv09R7nfrlpbCA0vNSEeC81wVudPzIWceiZcR3v9ejs
fQL+tNK5KnFqZ+szegwf+4h63bOpzjNRe33O8wTrvcRxLfdLTYMJQxMnEwsT
E4N7LfV60c5FH/YmGDw8442ZofPgaeC+va234LR9vBfIMcdbTwZYTn1yqu1O
9NyGm+bsBJg5c6YOyDmCX2WqXZ+RiWa9yr/P9Vqd4XbuHd2OTr1gncRfEwPh
s7EbJ3nvV5WEayVx/864FvgWbY+l8mUNjWPhl4nBicXB0ZDnybaN2PvdPhNV
WVLfuiXt7y7e4+ckwvmI18F+yIfJhfemoon3qPO2t863i/vpmewq9R/og6ly
L3IwcmxsVLVtF3OihovvBo9v5757be/wC/g37Bm+AN9Af9qudl3pnkx5Ivn5
YzFeo5Jq9o3j/oZx9WGZ8osfnWugl+jp69YN6jT49x7mAYN6MRNW82amswHk
GOQXxMLExGDC3W17mR97p9r+q7t9Gd84zjbn+rzsZwvb5NOcK9KOHrawH1jo
8Ym3u9rPws/ZhnEe53zTxAjUfMZ6LbakwmTJnY/JdB6MM2DU5B90e29jNOgz
/mCQ7R7xIH2JVz9JZYuHOuak7xbHtoxFbNnJNGNie4eYH32lvkNMy7223uN8
F7v/nPMOxiceq40lzUNcPNTjf5qKpn2t88gxtvkn2YbQjv7w7J5UOgBWgB7w
G0yA/YSN5oxU60z00da3Ux1zkruMsQzLfJxF4hlxKbEBugsP2NFB6+rXFVpv
eLCf3E81zbxGeG7IZrDlQ+zKOQPi19S5cFYSjnGP5w/vw+aHj9/kGlmqnD+1
PTjZcsBnsAfBfisy6TO2bl3QT8Tz+ZlwoEuMG9XmEV477MNnnif4NzE0NoEz
d+tsi0YaMwUvZU1YG3IMzvTOLyqfPbokfKFJSTVxagbg/7XnDot6L/pNDEls
Q7y91faK92/zHLaapv0H87OPrs+0P1/IhK1OM6aKnfzUelLuj55Qq2XOc6xL
Vzhf2uHzFMSEnCF8t6gcYqkxYXIVcu2FReUm61OdoQRTA3OmZgmeCb79tjHu
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
gRvK
            "]], 
           Polygon3DBox[CompressedData["
1:eJwtk0lsjVEUx4/3nr7veecrak5jIUIibITE/sXCRkQ31RojligJG7OQiEgR
CcHCuHg1hY1KF4YYdkKfEo05MSvRGtoExe+f08U/3+/e7557xjtheVPd6oyZ
zUY5dNbNlhXMmhOzRngVGsOPw4PNGuAbqL4Qe9fhl2gSZ+dj+8rjjM6W8mb7
4DKay/kGnCyAj6GZWbMp2B+H/6LpVWZfuOMf/A6d5Hw1e+/hFagR2z3cuRG+
huYVYu8qvA2tZ70OnYO3oCP8a8Z+t2JPzaYOIi/8jYU3s7chEzmc8bCRbR97
W+ErHrnrTCvci+6SWxfq84hBsSinlfB91FM0c3QTXoTasJ3I9wHaiWbhu5//
FXgEMRzKR0wj4S72Kvjby/2f4W+odYjZBdbf4VPoUhI1WwP/8PinmH7CT9Eu
/s1g/QzuRk+KcUePR87K/QPxjoOHoRr8t2AzHF7Cmc5MxLwYfoRK6CjrDr63
0PhinFkKV2NTzsUdQ+EE9RJfmfsK8C+PWrXj/7eHxBX0x0Ni9bzfo2aqnXqm
3j1GtUnk1AnfG4hFNW6Hv3rUSjkq17foYDZmRrOTIYY52BepbxauQgeKEWMe
Pq/+c7aDHp6AF3rMimZes78WXU6i5qr9J/UxiR6pV5pRzap8GPftYF2XDZvT
cJPHbMuHfKnGqrV6XpNGj9SryZx/Dr/wYL0hvaXaNHo1jfjrPXJQLsohl8YM
aZbkU773e7y10fjc5CGx3kiLZgeNSmIGL8IfPd6WclJunkbv1NMUfu3xllXT
N/Btj7ehGbgDb/eond6c3t5Dj1kvDczOf1l9oCA=
            "]]}]}, {}, {}}, {{
         GrayLevel[0], 
         Line3DBox[CompressedData["
1:eJwl1NdvzWEYB/DH3molRuy9am9aVauDorRqFRW1EmKVmm3NBAlS+06MKxKj
QUkkJLZE4oJL/oASMS4QfE5cfM73fX7z5Hnec7oVbchdXysiWvt43ygisb7b
MGJ83Ygu1iksopQzdK4fUSUrnH8rj8svMsmNyWSzhkNcJrNJRIF7vnv2Y/XX
xhFp9SKeNIj4qN4hC9W1Hf+r3undnWpHlCW+gyyXHZs5Rme60JVudKcHPelF
b/rQl370ZwADSWYQgxnCUIYxnBGMZBSjGcNYxjGeCaSQykTSmEQ6k5nCVKYx
nQwyySKbGcwkh1nMZg65zGUeeeQznwIWsJBFLGYJhSxlGUUsbxqxsU5EWz3a
JNvJzXILW/mpryUyxQx+Wyfp8TZ1qvqPert1KTvYyS52s4e9lFFOBfsIc2zh
Gfut35nnHXWxdQb9aconM7vo+Bt5zztuymuyUpZQwDg68se8P5Dj+xS755dn
PlLXeEcH99y2Ny6pC+U3+6zG+YPqH+rV8ovMkp9lB/24rh/rKGUt+Rwjj5Oc
YDtHOcI2nvGU56zhNlVc4RUveMlNbnGB81zmEIcp4T5bmccD5pLLHGYzi7vc
4zU5VDOTFVxiCwc5wDmusZozzOAs2RRxilWcJovNFFPJSm6QSRtja29ftJYP
ZSvZMrHW8xYyXV+T5NXE79L6qF42V1e7NlWtreEx4fJwSRhBOBUN/m+HMKZw
WSS2h5FGrfr//0f+AX3CfBE=
          "]], 
         Line3DBox[CompressedData["
1:eJwt0ckug1EYgOEPHQw1a6nSYC1xA+5BYiOxtLRg6wrsbF2JK7EwU9RQqtQ8
D08Tiyfv+ZPv5D85Z3xheXapKSIWKbZGZLWgW5mIbXbYZY99DjjkiBLHnHBK
mTPOueCSCldcU+WGGrfcUeeeBx554pkXXnnjnQ8++eKbH36JzogmmmkhQZIU
aVppo50OMnTSRTc99NJHPwNkyTHIEHkKzPnfpMuqpe3XqtYdoaKbWtYNPeyI
WNcV5hv3ad+0ziQi1swUrVc1mYoYtR5pzDDMlNm8TniDIS21OYeO+c79v9Ef
kB47Nw==
          "]], 
         Line3DBox[CompressedData["
1:eJwl0bku5WEcx+EfYomlQFyA2gW4Bp2oLGONBOM4B80klrEWKBAiUdgOxdgS
EmIq+1AyttI1aCRajyiefL75F2/evP/ytlRNMiMiEtQWRtRlRkznRfzSWV3S
BT3SZX3Qj4KINy3KiqigivfsiNfciA57So9zIjrtLn7STYJiZ/RopTPSJO0S
36rzI1J2qV1j99pldmtRxKF7HbBIP5M8MMEWfWzSyzhp1lgnxT4btDDGKHuM
MMMt/7jhmmaaaOQHjzzzwhOX3PGfe674zTQN7FLPKn85YZgdLjgnyQo9X2/O
HPMMsc0Zp8wyQDuDJPhT+P2vPgGxBUDe
          "]]}}}, VertexNormals -> CompressedData["
1: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
A51jcI358fmubUIQeyWvyMCjHWOETh54+W4cdB4tVAbIKIHA0q05hAMxoDTr
COFA+GrAYf9fceDfbVd1mI1/tLQDxYsUZ449HIf05VNOc9c0YejjXcaQwSa8
m1AyfCBuAl5OX+FT3GUBLhKTwqGaTXgjKqdfLW8C7lUZ6jeoRkLooo97T462
IFvoj1uyByYgdUVuGLUuHSqtu2VJfzM2T/7Y+PnuBBQarku4kOUAH80DjKdO
N6E255Fkg6UTEMBi2V4TVw4sbzsghbESD30OejhaRwMWNZ7yDXr5kHXWbOte
9jrkDEorMnanwUvRTidqnVxRnUufHl+L11U3KLP506Cn7le8l4Q7bPBd0aZW
WYnJez12tm6gw/YcnlxqHd7Swa2KYUUVJpYpqvCy0eHq9ltMQXaXQKDmue5a
7VpsS7Y1a/lAgwaFfRYvnt4F2ci0rDKlz/iDR7j6oDQd7Mfd6j+OPoGqq3Oj
LNUXMNM5dc1ukkc95T62cgu4w/cVK26VP6zGxTLvNJcO0WD7aIw2tV/gm3Xr
gVtMDc58S/mSSerdqHfZmS28YSDge7pANbgCqh4+y+WSooN6WGgKtZ9rNCb1
riK3CRx/xOusIvP+Lj4zgNr/bW48qnxMrg/ymhyd6k+NwJkXM747RzJh542k
8giZQuw3PFz2zo8ONnO+d6h9DXaTzUKd4p44HCZ8J+8PHZLmogIa3ngDr2/4
3svR1djonFKwpZ8GI0ebWJoGPUH04Nan1/bUQ7Tqy98OujQIuv/Lg9qPLvhz
a0Ly1yAsnR87PiA5CG88Jc+bKUVBIcNZ/qurXqHkqaZG5zk6eMe0miaVBMPF
C4pb21noaNskwsE5+gVytoQ/pfbBD+mb1T43rwZvpeZ1lqM0YKi3PKfLHgRX
L4sm1M2NIxfDMW9ZvjbIiVYvKpYNhppzoU9I3Q3H1nfEkrobVPXm1Km6e9nU
5i1s4R+hRMtgrkVoGDz31jJR+9pauy9XxsjEg/5CkkLZr34ouXl0Jx/PMBzZ
4cKkdKwGxpuGr4dI0aD4pQH99YFSGGd5v1j4ZSccnp6rPVY2CrSwdTLUuQKb
a5FrTJwG4F7fpSWzXv1w2mBLPHUOYbUbI5v/YB2ybQ31VjtAg4XMCNkWpzRI
6CrwLLJrw+tpC/N75cZB+fCzU/86/1DMZsoo0kvydKttlswImC73EwkM+gIG
b3+eb0qYALEJptMuig1w1XS1bnNSEdz54ZrP8IKOFi45K+7uKcAk/pCLnp0x
EG7tuULqGx3NtNYqug6dx0q3QtMTDB9hZUxM/+5dQ2jbM/kzd98A+pdn+UBK
CcRFCyzxo9Nx/lmox0mvGEgd+KMpetUfnl/mM14tMQaclpblPvrdkKXiFEOd
P3FaHPXckZ0OR8/d3udRUAqBZZY2/gH58CNtY9VutTEIvXPvlsSvNnCVXOhR
0a6Frz33NCYkhsFgqQTzgZB+qJ3P3ACtWdBsVXCP2AM+6xQu5e0bAN6Qn1WU
PZ4Oga8Tjb2h1rXsV58uDX0W9zVR5zFWjBXaehOurDZ1vhUnV46usVO/I/sb
IeKyaZij8QSOeT3d4b8mHR8tTroa9bIZhGaze14P1gHrurrXZPzxQXzwKmr8
z6XIKUTbjyOLtr/+a5Zy/HRUdmyBoxUmlj5RW7g5hNsYH6K1dy8aL8s4RJ3/
2fdTnqZjNIpxHrAj8EwzDr9kLH7V0QoLQr+ZTxqNwqpAjaSAM82gud+4iWrv
sdlvWC8+BHX7xNoCZPrg8JUlbEveNYDZ1mUlTxqHIemrmO7GPS2QssQmjzp3
ZHyfY0/qxDBkHNUXk/lVAzrc4xLt9B5IfNh6cdGcF5bMezl6Hh/HX7eXalDn
ajxkw/eJtAzigzBW1lihHlxZ5OzuWd8OS9Tl0sk4wJIEJRUfMg7GNSz3qXHw
6VVwJ+OG3F9P58bIlYO74CHWKDJuzmcEeUVrByC+Qc/O8lMPer7CNdOvO6FK
3SD10rY68FC1vs3RM4D2BzYbHzw6AOPzNFEbIxpyhnVmnXAtxstZB0Oo81eJ
vvxLJdXGUOXBrUjxX23oSsvOo+a9fMtPyq+AcZ3iKx2vGDwnYedC+dWqOLEi
4rcgf7o5786eAuj/+KCc8ttiLgvKb2F0KT3Zceg8MKt2vaT81j8qVuctyygG
5jpdi9bqRbdpmWvU+bQP4maKJC5w04nrm10VG1C5Rc6TiotF9TMxFtHV8Nzq
ZyPRK4zL66xoJHoVY7L3/Y/GPsw0eGDLwDSCnr7ZPxdEE0B1trtFXa4Px979
rCU6ic3RlrconTzoaBRCj0jE5Vaenz+t7UFJJq046vzYpcsMzN6SXbhZY9Pv
IVKfWozcMqXOm50+c7s9TiYe77ikD5X+6sectqlrlJ5cnLZ/Va70GS6JVRSQ
vIB1Zx7eoPLCPdomBsfqCzDnd4HKC8goJniZygvV+uUlnubVmDGgbEJ0D3u2
2i+idE9glQAXyTvA8qXxKsk72LS4RpjKO7q0vYokD0JegKoLyYN4qa86i8qD
7t8qFEjeBE8BnyySN1FgfFkllTcd1p2dD9FsgsYDc+MkL2PilkwlKi//U5yw
36K4PHiwCVQrJWYJD+An+Xb6XsIDcu4XbhF+gLz7/YuOPxzHIfC8QvHDP/W7
/1S7yJEj9oSvQJ57qw7hK1xQ2pdG8ZWNs8MWwmMwmmz4ivAYbtEWUqN47D/N
/v8p7TqOUy9J3QT1PRnipG5CjaWMulTdVMDAWkTqJgi29LlA6iZ89NP+LlU3
XfA65kPqMmA6ocImf7wTmQo/WlJ1mXdOhAOpyyA/MfISqcvw4USYDVWX/V17
To/TGUmdCLqXr2iROhGPP7qzh6oTjy9Z0CV1Ijy7YjND6kQUaXD6SNWJ4dMd
uqQOhcUdstrKFV1oGHRCkqpDbYXYNUgdCi0asSdIHYobDd3W2pM6NEVCs9B5
+RdkeSZzaOXzdljY4jb/X52z0lRPLyP1L0g8mVIT8urE3zv8e6j6958a///X
/n9n+07jnMAb2AKDSoFrsaoQPCcdRah1vP8ue1J2S3LvU6+B7Zrrmj4a5oCU
h6naMh/C3aO3D0pbjcNHFSMRB4lyMC5PvU2tB57apt47MjAC+f77a9Ony+HO
npjP1HqgkarS6xtL22C2Uj46+GgBRGScsaDuQfzV7+be1FDYk9KHvueYWrbp
VuKe9ZfzqXOYlsetgw7uHMLzrND3WLgKn2XvvJX67r/vPrXm6lXrD1YNooL9
hWcrhqvRx1S26XZ5P6jYnZNSvjqCve6P2hdPVSPj8Wb9fXf+/ece/6e0K4wt
4rHYVof7I78/IRwLQRseyFEcm3vgiiThXvyx5qAe4V6o2MLIS3FvyqL3q0sO
RuMqDV7XADk6pJ3Ud6PORTMkG3CM3K5BmyvhS8ZX0SAg+mez3lQZJKV/2XWU
Xg9ffmgHl+lMQPvzto11lpVgUdBR+JOzGx48uur/QWIUuL+2TLV31YDbrrfB
+oJFcMRw2SLPfBpUi25+u/rAZ/DbNW302LMXRuRnrH62DYG290+eXYwNEIj9
3K0rh3CyuW/96/B+eMe7fxd1Dj/1a2CJxyAdtlnuz7urmITFvLcY7fn9YLBZ
3uCwTT9Ie5+/MGAwhKdO/flE3S9go01XFrJ2wbm9Iq8ZHMfQIKSCl7qPsDO6
/KV07zBsFJFhWr69F2d27mCj7i+sZFHr+drZAxEHS1ovjo/gjZ52E+q+Q9yP
9WbETlwzv/kBsRPV3nhF7yR2pm0o3n9asAhB0fS3Rz4NTSt9blLvJXvkg+3R
k314bDJm+NzHIdy/viGxanEduA5HBJH6ER/Zzh50LyjFyqTyHVT9yCybqJs6
RcNmAT7DEpEcGHs6d4+695HS2V5B3hfv/DjCckcxCQI8Hr+5T9639NUrYSbq
fwFyusV6nFvwtIi0JHNFMFSclVvDOjgAa1/WmidpDWHNLn5l6h7K83XX7PoO
tQHbos3172jjuP5ZwzB1n8UCKqL1V70C7l9lrc5zdFysF7iPWpf4T/Pn/9va
LQ79UhZuH4XI2FEu13XV4Opy8zl172x5cR/rYathGFaO9btvWg2HE0OZfvzo
hV+KXHzbS3tAcwW/rKl6OXBM8AK131H32uPAh64eeK/cNcS4rgQcP5cyrx0e
AX4rPj2VpMW4dcmpuFSzbfDsf+9zbenVn7xcMbXvwo4G68+PN+LiiqX/+k74
R7Oh86QfFJplX8S0rgQr5s9MrBn+n7Of8lft92vOa+38OIA8i1vvXP7+GZdX
mjxuvzQI4k92rSXjjBeyY+6QcUZVC86v38k4/6fZfyvGmmmusQ/ue2hvI3U9
vNDw5GYQSwBv7di9RB/Q+XZ3WbdzC+j1ccpS+uDBZH29XWIUTz/USflt0AvW
rfuXV64IhNdzQ4dXXh+GoMO/9nESvU2pNHp3rN8d9loJ7k7npIN4e95nzRvK
MPVbSWFR8RfIHjzAYsxeB9N+5yao+2cFHx4abVAZhXTlWNHUiWE8kVDiLvOr
Bu/uk99Bref8MnrqTfQQVqwOqCB6CIeauL5Qemj2p3wDv+EAJjaF8iXlD8Ki
k1xDSlJE9w7Zzd5i7sVNri6aqR9G4GvEVm/152UwedAla0JiGL9HMLjuD+lH
lT6BhX2tWSBdtqvT8A8dFh1Kue3G4IW8F1W0D4f7wPu2V0tFWgah+PMXqVih
HuDq31pOrRft3Lp0B6NIL3TpmwRnyYzgBb1ti6n1RpEr69NJ/sL50OkIkr+w
8inWUvnLzqtQZNivF2ssFDdZLhlG1SAh/g089cDJktJmH9CHpzyXeKzRGoIx
YTp4Pa8DbpkzHcQe9OoV6X3O4AXb6Kn8lD18+8Gjbm4c5k4Jbd/D14aPik1S
qPVb2n63ZFHJEVAeYtiwKakPbS88fHNO5C2UPr4dJPlrEOtXCgcPSA5iR6Lu
L1OlKDg0/eDZyYd1uEZ6baiOCQ15+x6b7BhIBE71e1bDt2sAhJwESL7GTy/c
U6l8zZ64w9fWpgVL7nds5ZQZQO/hvV0t6v3AV5cfwHd9GNtat3GsCO/Hyj3r
G6h5H5CevWIO9SBtpLuuS42G/C6bjxyJjYemyp5WcayDwAiFuUl9GpZtdxXe
b50IIZLH/3i6jGHLkudTjD86oNPuTjB13/Pz+QbtY58/w6UhPsasHXTcbRTc
4sLqAPORe32cbWsgo/ij+VwxDdUYEmcLu1+BsHsfde8Vbp3mv10em4HN1r15
/9W9V+NdfpsJB0JW3c9uwoHwVFPyGsWBd5taHxKOBQh+NUo4Fs5/0vP9rzj2
qJmTDsOZLhhKr3OS7C2GjZlfN1P79TrNRqrHu/vg+zutI7xK5XDKIbif2q9P
uPKi2sJsAOYCHBdxepVCzCv2TdQ9YvtN7YcsK6Zy0rc3+FY83gh7/rd+Tn96
Fvx4lo43tSoZac3huI3j+OrtDMFwL+WcqEY5HWcK7z2qqE/F8Y8V4Z9/xkOz
+81HD0PouL3oRXfWoRysvdEVHiWdBs1htkEC3+lYGqO1cGkoGBWs7HVMy4Ih
7cObsjdVdPxuvv3IYbVP+Gajxf3vr+KBoVtdpyuS5HXjE968mVmYR3tjXrs4
FfZetW0qI/l+Lf/AYJz7c6xIf763QTAUGEs+rRNupuMOn5r6keZEDG1OUY3P
i4fjzz9EBaXScaD5pcoP1XSs9Xl9uSX6E9z/YPfpGNWPT+pb9fIHMLb99ICz
ShjQGQ5qK/bQUdXfzamZOQo99pqNFXklwIBNZPTGIjqmvbRd/oGWhGKHXqxX
U0kF/WkWjTXOCXDNTPTtH5cS7OBZ/2TGmA4S+1fQ3DakwxVD9hdubypx88Uz
/jxzNPi605rpZWMBSLKwe3mO1eOd2DCHbQ1//f3MG199bxqONIK48lCltmcf
npuVa6POQXXobR8em0iH/EWNTOe31WLFmUcb/zjRIMbwjA8Xdz70WfrRjxY0
4KFD7Osf5U6A4kHx2eyb5fBxyRnuafZ2LK+Py/nyZwxss6Ze19f0Q4b0gHSp
4RC2agg0K+WVg6yDm7HJ2j6wtv9TbToxhDM8lr8tA2phT+Eipx6TL7BsPvNC
rkA3mnBuFPzuPQq/6d9Hj8X1wL0rSTX654fwVgU9JSWkBfou8C1zzamDKj9L
gb13elGme2xKQWIYiuOWj1fZdcLlQ/lhD9IG8XDgNZquXzds90iyM66rhtHH
oVc9S3pQHKyPpSmOQF9S88EipV6wSB4ZY7IeRPPvQTc/GLfBrR2ppiuuN8Bq
CQ0n5pA+PNzSfturdxDqUj5s9g7vgjzG+aaO04N4k2G/lL97N5R1HuSSUCzC
b22aH6960sFiCKtEZg/DXrY/oqI3qnG7/cECtmEaPIrhZ3nOHwK7b69tKWv4
gvUr8sP6l9Ahf7mTcmlwGCz3ljvIL1GKDqr0LFky3wWZ7+uSAqMgSHznzej0
JMy5dW9CdIgORl0256nzkLlV6xg0vueg4e5ra85E0sF3SuTtxJpkkFPme8b0
5D3us15qO9lAh4jSY5cmeFNB6qf183vTkdCeFjOwMYsOq5akhncuZIOAWGzb
3clRSHGNHFQ4VYWz97VtqHOni2cWnSA6CdG6IbuITsK9aPNRSifrjTJsaCrD
YOyhr/HBugXMM/VXmz7qhrB7fxaf43NCHVF5U63vrXhQK+MFde5X/fMEdd4Y
42e2a+1oL4OCHxFR1Hnj38f87I5/zwHJggh+Yj+ud17iRtmvZ6L93jv9HTw+
djtCHeko4XTgA/+zHLCT5RiCYzWo4Rp1O0SKhtJzkdXUftzV30tXNIh7guDT
VGq/Euvh7RVqv3KR5FMTt5gaYN68pi4zg4aq3yf8qf3Tp0FelxhWVIG1x9sj
vGx0fPpCv/it3SXY9StjFz2+FiTarQ+z+dPQaCm7E7UvXBGhNc3S3wwbJB+L
fb47gcWNRk+p/eis+N0bjsf1oGXImjjin6C7timC8s+pcM924s9o23D2CPFn
2BHWvp3y51SVFG6ZjV1Iczdfb/huENa1aDC/udQNX9/6HpPIrMdLHaavImX7
ICZvfUiU6RAkhnvXmMg2Yyavrbnx1X7Ik2jRpu4XCCtF2BB9wC7fGEOiDyDn
1vqU0gdNA3712+9z8J2AZ2XOgVq4wPtMduYKDc6Yi0XHTdLhe3enqF10GJp2
9/Ho3n8PrksuSknV0KGR26D/9rkM3HTAYwfz7UA4t2QmvwLpcDjNgObyHHFp
reh8R67vfxvXjXzjZXqRQwNaigCnYW4Nnosz3Gz3kA9+dzIrCenT4Umg956C
pDKU1nDpPvVJHtTLc/t/zNDh6z2v9d3OUZi3tZzxUvs9WDIfMqTZRAfRtNbr
ZbfSMVCRR+fL50tQsjIflEvocCS2fH0qdw4KK9IaDxsZg90FUVXSPz64eaQ+
P6kMuhh4/aj+0/V4OIk9qHL4e75Bbg2cV+geuUfs+Sv7dc7OrSfzAuMNQ31k
XnCND02Kmpfo1DO7L6qVwPvAExkJQc2IRov3bfj637f+9lftv4pPzIpn1sNn
DZdc4p+4x43fh/LPbyXGu4k/g/nM12XEn/EuYzYn5c8pj2u7ry9pBXNX7i+6
RwYw5rDaDh/WfvgYYj5783MbeqqKdXTXjgObmKDWx9DVAKxbpzntWnFbdu+9
iE0TcNs3SY06h/yCsfl2R0ML/j4wcL3z4ARc6o6QsPdYDS3Dvfq8LC14752K
SOuNCai0NpdNzlSFWB4m+Tv3m/Dll0EppcIJ6Cg/3bDX8TT4H9596cedBlQx
5Xr7ewsN+PSMMKHhOAzvNB7x3VaPWg79eS5naLB/U4BiMm0/yPx4omDMUYeD
FVxPXrnTQHpn6ZWsCSkIORJ5146lH/t+LWvtD+2H0TN8PoG87fC16aKUt3Af
OsCLbwse3TB+LMj+X+fq22Z6zuW3YaWgzq/UFWNgGq3zprqnDmKGppljNFqQ
VSPg92H7EZDWtD1GndsXhiWyLwLKcHajEt/6lxOwscRD3Sm3Hr5e+LxGUOcL
+qhVpG691gWCDXEK1L2D+ZK7PI3+IWgSoX25MmsYWjv2ek6p9IPmZy9xB+Fq
dHn7EN741mPV604/aakJ0GHUCLovXA3Vhr0MpB1W95i2Ue1KVrXRpB8QSpG5
QfpBUbdVD6l+alXlbZZY58KYeEjJZcZxvMwBVtR9k9iuxUsEHRug9g3Pbhve
QeSd1HOm7q14+B//w/jkPXzzqaDyDpa7uxyl8o5w7dhSu+lIFM7/Q+UdfJ+m
YkvlHSkRFQ7yvkBvebqKvC/y7dX71/vW8l54QcYN5sq7ONNWjOEinVN+1Lh5
bZG+SMYfwqM5aWT88UN4nzs1/puLn90TtsrDoze1G18l0ZFTLHS0YOQGjH+d
X0TyL5RJvC8l+Ret3PjGn5H8y1XE4kLyL+Q/Y4sk+RfFP2uIUfl3tEqRheRf
sJUSzCX5F8cPMSdS+Zft6fEMccUiWGb9M5rkd5xc8cmRyu9lO0YDXL5WA0vH
p0bhNhrqH9m5kbrfvelk3dRZjjrYt+i5L/Ef9JBqU6D852Vgmx/xN6hlV64i
/oaxqxtXUf52qXxOLqemAU4UaenI8tGwOvzcduqelOEBz03Eb2HzQl0k8Vt0
VLZ3ovy29OOB0kmFJiiezZzhr5nAoU+mtdQ9LL/JZb9v32+CJ1UC+4n/47en
b6Ip//9xaQ83iRfg8rkvS+IFEzQf81Hx8k/pw44WSx8S16Ck6D5L4hpz4v1E
qLieODbvQfgKHd9HphC+gpeMaRYUX/kVMbkRjkIWmW1phKOg5frxnRRHreUW
vEY4DfMW0u4TToM7V66pUpzGyecVQXgMj913ukd4DNQfqFyleExv/K5z0ZtW
TL4tiReOD8Dnp+X0V7V//39I/257KLeBeLVdJy6+welJOBNEmIX/xZk7u9NW
Ey7FxN/DfIRLia5/+0Zx6WRIWUqRYgtu5DI9sGsRsXPNZruLvv0wWSZYTTgZ
c7XKWQgnwykW1xKKk7NOGbwknIywSPE94WSw277zG8XJ0rleam7SPegb1yTA
njIEN32PjE7ntvxj7/Xi1pzU+EQ6ckXNfTfZVgunrlkKUPy/pCM7kvA/Rrby
jBD+hx8qp//F/z9U+oxzbpaj1Xap1in2drj/5mQxxf9/1f/kdW6Jfeo1eJHD
6c9Hwxw8L26lTO3vvD2rtWfF1nFU/pIpJPOmDAera+ofhLSB4tgklccx5eDg
YJdzFLQtc/l0keTx6AN+wySP42Hmma0kj8NB8+DlVB5nVdXeT/I4Fjg1JH3i
zgGLu68/UHn8nxqfjZHqNVHhdPyd9qiqIScbK7n1k884pv5j/UeUP9kwE09H
bgZ51U2KmeiXauNnlfnp3+7PceV9eicuj2JGN/8nk+W9MHRTj6/wpwAYWWjc
iGQaw854/ebXW3vATuj5+IirIHzcOBhFeBLftsdkEZ6ElQau9JOEJ98f9KB4
EhXv6LYTnoSPwWN/mAhP6s08KCA8iQYK4p8JT8I31T0tFE/OXioUDhwfwcDu
P9Gu+b1g8L5mvlsW4HLy2J0zsaPI3tjJnRLZA0MfanuLIg9Dg1XDoLr+GD6O
NJc//qYbjJ48jllff/Q/jpf+X/v/mfbdmzlMGxf1Ik0s9mLXjVG4dyDBw75W
DPzMFbZ+H+7GpR/CcorFxkA5QNfHXEEWZlNnxExYu1Ge59NkSMIYLO0fV4l5
LQf82+ssL1d04DV/40lBrXHgGn2qUbNR9G/bgwu3zOIk29Boir5b7vs4eInZ
pHYUaUM2n0LDotwWlDiTEBJ+dAJUXa+IFZRdgLQFWs9i3TbU7FQ7a9U/Dv78
z8669X+Ac7HM1mExw7jOX1MmraAPik37F7lkFcDkyc5rJp8HcVm3z5Z1LwfA
6O4pj605pZCyrNJo/fV+nJsJ/fTzyxA83bRaU4y5DLKL46bqPvUjU69cwAzJ
Q4yRQmzJsWnAYhh+VP9QL5rd8X3r+3UE+kuCv95myIXYyabqX/Zd2JLd7cHk
OQYPL7oHcxvlwnPW0bzVsR249EuRUrTfGDgKqV1d96cM9PhWlypcqMfMmWOp
Zow0kCzTmbZ1zgMOjhhx3Yd1wB3f9kjHhAaLLtU9otZjI3usBL5fG8MR3zTd
OMtuCFrF/Zj6nhVdYKRKVHIE5T/1/BRI6gNv9k+D1HrvspVGAVVpFRAidMx2
eGYAXMT52LbIDwLXdX7lYb9emGJ7w2q5ZBi+9dvsotafI58PbvNNf4fdRz+G
qZP6VXxNVQ+1bnB8k9d0jkkmSO7WuzNzhQ6/3o+qqJQVgP4Wx6pw1Rb0O2S8
7d42UkfYSPvxnMoGyUh3+3NzdIyg6bFtPxuCN7a5z2ZyvoTDQyXllaETwFm/
jMvtQiOk94/+ebMoH35+UL9jH9AH92tUB9ZoDaH0uvit1Lp3cuxuP9I/nLjw
S5b0j+ektKyp/jlfNGtF24+Deercm1cs5bBuR9Q0de50myZDfTcTDQc5vqZL
OLxDAbFd0tT32Zhl8+4Te4Cd/5jtjrMhALRZ/ixij0Sa9WFj9jr8zMMt6iPZ
hakYCNS+Qy225ZN5gSVRBmlkXtBzReMENS8f6dEuZB7BVUNek8wjLnPut6Dm
cSy5uJf4CSgfFvlA/ASzwrMYKD+5/7tSi/gJGPckvSZ+ghZ3z09RfjKj4075
J4jsUpEm/onvDBRYKf9cIWt6g/gn/NJftZn4JyqfePeU8s9vaY2pxM/hcJfa
JeLn6H0qQ4vy87+Ko9mrd5bz32yAuaUGOTFbafjl9xwj9T3G71vXBJM4gh7z
MzEkjrDcjpuNiiOBOOQlcQfJtn2qJO4wrIEjgIq7f0pn/qq9Qu/5RlKfgrbL
K1dSn+LtDDMmqj5V5ObmInoCNbZOrJu1xvH3q+tilJ4Izv/ZQ/QKLH7/cSF6
hZs/1tyj9Krzw81v34a7gZk1r43oFTLpR92n9Orfbf//be2jx0ZYCW/A0vch
TYQ3cGT6JlcP4Y3zH76ZEd6ArymLJQhv4PrLUt8o3jC1Yq4ivAHLxf3PEd5A
jbXOZRRviFu0sz7dkI6uXY/OuL2phCaXw2+odfjR1PRTLxsL8KfUdhPPsXpY
v+/Cw/9qHf7vtkcG799DOA04L7QNEE5DET2HzRSnlfbuPUk4DUxkspb4b+3B
HVsVFo26/vV3kP5ue++ac9S+Bjxfo5SnXv4AOyOWcj5UCYPk3Z+0FHvoUKy8
pbqZOQr8HcuXF3slwLePLNS+BiyfZ930gZYEMUovVKl9jX/Knr9q1+bXpfZx
QMIndk28+3N4/lbmIrWPI7vlJ79wMx28lLQWjTYnglv2wSvUPs6U6tuPQal0
KGG3L/uhmg5fZvg9qX0cxfNv1hEOh1HrxDDC4WDVEV3zf4LDfWTEqP0sSLc4
bWYxFAwCv03uU/tZYftzS99U0SHpR9Kdw2qfQN4p6T21n+UfZ6rZFUkHoXpW
Sb7MLHjm+usttZ8lu+FxFalTwHl8zbrGnGxYIVI8RtUpOTQ+Tp+iXujXYNq3
0FUBaat9T7B9+/vfG/yrduvfstS+HrwJ0jWlNYfD5uhEZWpfrzbeTESjnA5L
ry7OrqhPhbAPIdXUvt6u3u8uD0PocN73B3f2oRx4qNfcR+3rWbyaFCb1ILA/
PilK6kHo//BtpSOpB8e4SpI/DTTDhtMPXks45cGfjNZe6n7xP2X/f1p7ZMqw
tPvdfhQcfoQ68UPwYn9jMfWdVaEIyVOx43TIMbrcPDMYj9yRUTF0KR9Y2LB6
4RZzLwRXNKqnfhjBg+NxZtQ5Af4L4gtrDQfgw5vrMkn5g1i70jCHOlewWzJ8
hvAMxtk3qz+50Ig+6Wv9KZ65zOoqm85Jx3fx08c22Sjj5ZCUPobiL2SeDumQ
38VNG9fv+zoYD8apvVbU77Z20tTaJUZhTdmryd8Gvfj28q7JzysC4U4mn8nI
rSHYU6JceDV1AGtsTnJT3wf+X+2cezRU7f/3OyJJJcecEhWVQypE9VGkUlIU
CSkJobtSSSF00K0cS0kIySkiJXL8UE7J2TgMmjHGcQ57SJFKfjO/v55/etZz
r3V/17e1nv59r7323nPta+95v17XzP7dxvl3y+8XzdBVS+uHzHDz264TtbD/
btxj3u9wHGVmjt4a4OBzd3TrmhGFr8ycFkSovoJ1yoMru2o4eKNPN94/5AWu
fkLu0fuUBxaeBPFQvQaNZ9r9TDPjQKf4832U7HNwQJEeWtNRi9ciptfrqHLA
N7xckO7rBI16gkdfR1ejoOdqPSknDkwafA/3vegOIR8C5rUsaoLws1Na9k0E
Ugc9J9ZBItCndKf6e5qAtO4+40UugV0FUldFRqJBvnVNgmUwCUxPPLy32YRA
Bml0INYoGIxPVR2xdSIBuWQyyd+MwGG2Rewc1QfAimdEi2q1QfvaBT8rZxJY
/pm5umkgFObeml9lxuRAUuOlz5Z62Wibky90VSkSnnu91spr4sBu8j29/qoC
TFdq2PrqzF2w1IiPv/SYgyuqBvbvsShBh2XjhjJy+bDo0SjzWgkHvece6T3e
louBKw6O2pJzod7xHbU0txS+10Dw0rkkNBFsaZ4pTcDkygCJ2xtpENmdt1vo
9SCG3qO28TxbRnCehJxSC9SpdEqVTtLQ0XSDzpysITDYrORbsYUMqaZPzdRn
9uNu/33/6/fWGU7M/9BEAcF2tu+mnAGcSpyX3eTRA4E/l2Uz5Lj9tvjePsKD
jnvbC7IipQYhYHSdfkVsJ9hVWdQ57uvHx+fUJng+097uHD2LnIPDRyeUE7nP
0acPLimpO+VAqTPhiPaFWFyox+MaHLG4Is/jmmGh0OA3+TFw3bbKVqCJg+pE
0Gs9lwKYdfwVZJyk4gV7P/2imwMw3cA+2Hi2B0L8RYTP83diiO+HagvjfmDY
rVPirdfITZ0qmN5Bwm6VqWBlei9YvwtvOvt2ECQsjl1z3lWF5VkqPtlxHWC9
fMqIt25l11+33otSiG9WbHd8er0RJnsS41TfEBBUUm9llMoB5/Xts3rc3+K3
MuHuWcGRQKdnvLMs4YC8owgza00pNr7Utz5fY/+P7xfdORr6aRPtqCM1Zk1N
Z8Nhg05tCQ0pLg+u26p+pAOLt6w0q4lkQ9K45uvqdNnf7n7/k//fc+0ybcWl
DzrxvFXLUJ40G1Y/U56LF8ShUSCy2JxEg8CVTR5Zgd3wV4NNYZbLADx6u1Ry
OV8vbInkvPcdG0ayYlRSoGH5b/e5Tq5+Ptks2wp9agdU7OveQvNOgiLUzoZT
rhkOq6ldoFFLDWI/q4SQsgMO27b+fuvCf/I/+f+Z14VbXzAgVaDlySQTyi0O
kMrrp+xOe0DkonDx5z9bIXlQlrASIrB6nHKl/l7gv3bcmK2fGlvHOPguEclh
s1JwXp9JjvatODi1ODx5VR8HfyoWbQ4IzUZGXU6li3UK7NTunZ/1hdsTdguf
nm5OxMZhjboXh+LhmZvqY4tBDqYvXPilfzqLy/Gz0mKupkDsBeqbmK8cnJwz
z0hO/hH2CY0f+3osAd6RDy1u4PZh5rLLKYHqaThvQ1EoWKaCVnj13Q3fOKi2
52bH800XcIOcpr+zeCJ0PYDzcz9xcNX0FWULxVhcdH3r0yjpZ9BqMwXeZ+hQ
6cvnyf9gEJ0/3ddX/doMnpkTY9GGdDjvc+7zUPkgXmt1Vnld1Azo05V6Kqoc
7jn6zXETI2PwonCxEz9YIG+Qe4yzsQ4qt+m6PZ5BxR2kb8YhfEy4Vm28Zn4O
CUftAp++206Axnf5dyZT8fDlxkZvbh/DuUsOxXP7GHwJfPKG18duhe5PJ61u
xqX96su3phPw/G7mD82zjyFJ/mNCdmA1Wjvahy2w5fbJ+BgLM+NnIPjlx2w5
61JUry9qvpjGgW9v49VsbmWDVvd+m7WDHDgSeat49pVMnEheVaealAaVWe03
Cikc+Cv6rwa30Ry8KJ/mGbE18bebz/9W/pxxZrdEEANHs1zeC1NoUKDebrrt
8kYYUdAJmx3LwNXnPD80lNMgavTggag8/d/u/P+tPOyB+1TfPTKu8XAVszjE
BraP2nDHNmXQH7U7/9cqMrpdcPJFNzbUXsvfzH6gBJSdax1U/Mh4MrXXIsGK
DVofKtPyO+WhbTMlIDyYCgeFQqmrKmnw3vaUTf7pfhCU/ebHeTkA+Tqa+mla
A0hVaOWTNEVoNWjICXjUB465yrlGq4cwUGGRRPjfCKOXNx2MZA2AVqlWlIx+
H64UHPlI1DWD5uaefMbHAXiZde3oDoF+vHmo83xeaj0cXe5UyXedAe1FaQeT
W3rQJ0NI52dyNSz7EGozo3kI5qx20GveTMdtr/2PmcVWw+4bOCZwggay1ppk
448MdO960GE559/zcn/y3zM/ZJLyl2TwUzivXup+J64AH7t0KIzWcsBJZlGy
Rt8r+K5UlLRKuwq/B2xo+HSUA8IeYrvi3HOBGuRQ8+JgDfJX01SDNbjbr/hs
beB0DyZDvL1fFb9AFZe2jCkWBw4+vjlpSn8C9acUbjdlF+H63nO57yo5IB5x
LMBLKAtCv4XG3k8pxx8RM5/a3uSAjodLgqdgAhQf3NnGkijFnpKjTS4FHDgZ
UTlX834mWMpHXVarqcarXyKEpg5xQC38p6QqKQ8+ntY5lnCtEXNp5xMHKgjY
qpLWsT2yFK6KliWVX+xAvoSMqwY72WDDZ7RW9UQ1jJJbib02FNyd3s/31I8J
OQ4fLt0PaARL22mRQ340ZOf5PqR5DcO9sGrnEDVuv33ZIfqyrg9TivaeOqvS
B8IJT1bsmtcDcW0u/inkfnytqxK3cDYNBHz3HFhJpQL6fU1lKAzg5omchK3F
PfAapQsCe5owXoHfY1cOAcarthP3op/A86Wur6KecPk5s/ZVxK4BkNMzPFve
VA8VrT8K11XR0XCbslHZ8kHwclZJ0CtrgSSa/B3PVhq+DxAM0dIaBKEiUc26
LjKsET/hG8bkgN/90lWjn7LRytOvx7rCDx7b2Dd5jHBAIISStnN3Fq7W9+yt
974K7bXP+tT6OSDXoPNXeWoOjsTo5TROn//H8yf8jkDJsxk0IE0uGvsizUSX
p1lCQSxz0BfRS99m0wObpt7NcfZj4inKzwuC5nth7ZwH/gZJPVCwVnGNx0Em
2lUoUKYNtsPF3Y4/DQ/TgfW5lJLgM4wSYyHWzLQt4J30ufhtai94ULUnVKeH
ccaD6jBibD3UvB7csek9DapLfGQXP2LgrJNHrtsc/+fvjf+T/7t5kfF5FOih
wIbl9YXP+VlIkbPa3K5t+tud56/yJufoJntGK4zQVJtf59BR8RVTdDJnAKTt
k4gJ/i6gnYud7JjPu9+rZZK+0MGsLM7tb1cqlFUGadT3MPFy+jZrYYtj8Hat
2XeGUA+IWDO8pjOZOLwwN7Ek9RDUXp2qsdbuhRbRvVLLTBkYPHkqjGayC6o4
NmEP3XuhXERJP38FA5mXHdop1gCRQXSdewJ0KKSO2B/JH8Z1dfazI37I/Xbj
9qv8RNBlk+A2AqPvP7tBF2+CvG/iLTNfisI74aTEVHMC9SR8pkPdSHAys4rk
QRcFhzwNPYhh46qY9ZuuGHbAmDt7U7+fONgKPvE46cJGu8erctw0ybBlpazH
JxCHSxPBrkfmMlEv2v3ODSUaiIo0Xz0dJgm7Hu7z8uxkYEWGubmDEw3czt6R
cPWSBC9BfXP/BcM4cVmsMGmIDlHN73+MrpSBw73jXv6Fg5hTqqqicakfCgYG
ikvPSINnbfVTCf0BtK5RXxQ2PQCJ/XyGs9OlwfXDk8b1GX24m9SRKHt6COop
fz0w+ygNc36Ie80v7sUX6pTxuyPD8L1s+5v+c1JwePstiW9faShrXG3ff5kB
q2zKLz0fl4JpyXl3Nc+2otnNkLcFKwmgXEwqCjVYAhuOi93wTSGhXpK8e8Zu
Ai7nK2eZDS757a7vfzqfVNcx4M4fqIh8Uc+dP3g2cYfgLO78EbBeMi6Rx0ab
g/EZtdgOJeGaxy82i8GaBar+nrpM9NG9Ypnc0AMtBpv8igQkf7l/88SyosPP
CJwQT+Q3Mm6GblW3zKjkJSBCGhHKCyIwWcH+7QOhFnhqQtE56y8KDC1XFS0Z
Ao0cru+Znd4KeZNGhYI3xODreHLcojYWvnzv9UYPu2Dx9z0bpxrFQXlS+Va4
CxmT8o6/Mj3KhsA8+pm/a0XBN409b78ZCfNCffoXHSbgTJrB1sQtS8D36u6t
xaxm3NU/HJAWTsDLdeT0mSUiv911+VVu5XV7SNyRQD7DpNCaqRao3PP2Cfuw
KCyWD28hvjHR79nVR8rCVLB2DoDqzZKQMiewVkechrVdMp8chZlw9K3Pl8SD
EtBIrI1hNfSg62Z7ORNdJqzhP1lTdE4C+jXo2rFh7dgfI5JxpZQNJO8FtRvv
isEZ/92Ll0u34cz48wYN/AQ8ivO95u0iCo7qqR4cnRa8Oav1cvlNAvL3aLkr
CIn+duP238pvJSxtmxfKnbch56L0qN0Qmfb6lNGEBPQdoHmv0WLhl+yQ3qYN
FPh0Lq/EM0sCCjVDjj3cRMU+WbEDbQQTor8r78VKCagwPhBihD143yG9ItiQ
CcsVRPPuHvnn711Pk6yperKkHXUevN9JdLDBak/ChUgrURDO9K/uS2nD62r8
nYFsbl7pXTfcugQO73eaej5EQo0yQsR7KwEsc05tVfy/95zccibFT2yyFUVe
ZPUtECbAJvA+RWaxKMj4j0j7ebXixNPupjwlAoITdzbO3Pfr4wp0xLiujSHQ
BH5470lthp9s2QgyVRQGqecylfkI9JCx3SGp1AZ30veskvIUh22GqdendhCo
YqdIXVBMghfOqm2kKFHAUo0ud0U2OlgV7l5xoRNKC3ddoTlKwE6Bjg/Zd9j4
zaAwNTWiA57Lv0+JsBKHpdUKI48aWBg/FK7K19kF1zsTFqbViINXtNXjQZ+P
iLJCZg6OLPg6xq8uaiQOwiKKb8hrPuKZwKWqQV4soDhr7hDk7uffGs//Vr71
WXl+z0cm0hVyZn6/SIXYF1XdfUGSoFQmFNybTsG6ki9HvouxgJlvQB/WlAAL
tUIR/uROPLv9/LMlkmw49PB6YfShX/9v7r+Vq+6/LBhBYqFn3dlx54ou+NQW
90qlThxYIkmmwsHNqOlBzTSNJ0CNYvE5V+mff4+k8GnPW1ZA4GKFMwny1CZw
TI4Oda1YAve331Xcy+pCx7tBUWofWHBeTqC9TVUchrvtbAVGunEoQ8jk/W0W
ONlv7hb9LgZzBQpWzThDxkCVJtkjtmyYa/O84u57UZCLzhdP1e/E21LRbaLq
bNDcl2FZ5fjPx1mjedU74cphlNpfHW490QsbjT01f4hIQ/qdDxuyRBgouUxk
7FJwL3y9KDzy9YYUGDx9uD1vjIFzNN2kNPVpQGXIDI//LQm+RZcLxMk9aEAL
s3iygQn3VpO/FPlIgLX5SRX5/b1oOXB8NWMLA8JyDFLJpVK/3Xz4T+cT1JTm
EAcyuqSmn46xY4PLueHPYRWicDdt2C15XQdeFJ2cLRXPBrG6pX5l88VA2+6M
XJ4zGVd2GJrncvvP5swttU+41z28npKxbGMX7n10dE3fOAuKLXw6Zf4Wg0T5
CL3R8114hHNnwcIhFizd9m4yh5v3Vbmd4+fvwgs7CcuMmWzwusLaW2YlBnKX
3X0OH2fgmPiaAY5ML9humtyjofD/33X5k//J/+R/8j/5n/z/JZfW1PKsV27G
qzMVdx3IIoDTd/sQtf7X/dBs48Pl3O2BXFN3kLs9CvhUL+NtzziweHRBcDMc
+LiumNsz8aTOXOT1zKS008NFrGYokRGKSAsncOtE3RWex7BSvK/E5XEoEi0L
4PI45luV6PF4XOHR2CtTMxKcjesdW3SYwPTcwwt5PqRkwzF13xQSvI8J88vY
TaCQ9fXrPA/ms9HwGZf7IFDLRIHLfcjszU3gcZ9pbP5GzbOtkLhqorlgJYFx
IgphPJ/G/7K90terFebP4qNxeQ1vsLWTebxWUSAqy+U7GM7rHefyHaa+scrg
8Z3dodvZCtJt0OIocqiBn0Azi5qDPJ+wfpjmyOVQsB73Y3E5FN9r7XjC49DF
maGXuNwKV87useRyK+45qLiLx63VKyyaYsLa4Qff8dIrpWy8cCknhucrzr2J
yJs+QYbKwfYjhXZs3Ojko72oShTWPDylI+1MBvMP2YIdR9n4tnzqPbtOFHza
VFTCXcig8DmvypSbix/v38XzSLLVmSXTf5Fh4EfoBm6vxnUPymJ4vfqkdHdx
in4naGpFMri9Gp/GUjR4vTr7zSO7U7GdUBlQckRoKRs7llTounHEwM51ij5r
QRd0Cxm47JzBxhzJbNv8JHHwHq5p3cPqghN9Thncno9Dc6695vX8xKzUCf6R
bvicTnLk9nyM1qwq4vX8IIvwo1x+BIF78wy5/IjelcsVefx4lPHQlMubYLvw
qiOXN7FljF+Mx5sNuRRtLn/BM1ltdy5/4TKRrxU8/hIqd/oeuYkKQ8+sTrcR
TFx3zEaD5xn4E1dbG2EP2NeI9QcbMrF28sgjnmd4OP554Y/6HmgoN4mn6TIx
fZimWJIgAR5n5vlw+zzoron15vZ5/CJ4v4PX5y1O+LariNIgiTYW92ohE9lv
nr+4zt1PQ3MQuS+MBupEL+GADByt+9zcPyEBscqDIWmLeuFA6cDHslMMFI4R
NDKJlwTbZZvG5fb3wkemxD4uF2AR5fYDHhfI+95pmZnVC+u61q/L/jaM8bfl
OVduSELB4Um7Tmk6uExSYuenD2NnT8N53RFJeBGg9zTaiQ6L+Zns8XPD6GOW
YSSsIgXG6Qn7Cih0MN80R+mY2DCWTpeUZGtLw0L3RwnrM/pAdzT5g+zpIfzJ
igrj+efET2k+EvoDIPtJQCtsegCL+Nfv4Plqfe8Ma//CQZgnT9urcakfleZE
V/D89uHQHDX/BcOwdL3IcNIQHckVUfM+rZQBqdTHiVyegtnyiUVcnsJRqXQj
Hk8tZtqLcXkK1BdoyXsG96JKj8d3Hk/FBDjbeHYy4ELIjOsOTjQ0xv61PN9u
srxPgctZYCp3cy+Xs/DCif4fPM4qKNtkemQuE440S725oURDzwrTSJ631xQQ
dvXUZcKI6z6v5IYeJLl73+X5W504ShSX30Er8407l99R04g+o5/L740Lc/OI
b0ywON37U1mYm/e/P87ziqqux23XaLGgYMvmw80bKPi9NoXO81dU4/TieaG8
96LLf9OjduPbOboBPN9l7FbW8aiBBX7Ne0L4OruwxHWtNs+TtP+t9u0eiQW1
WyV1T1V04d/7rrfy+Prj46t/L2pjQeysUsnN2IWW8Nma53t17FiV7opsuKzI
n7jiQicmCybE8/xM48GMEydd2HB0VrbQaU0yKpwZjeWtX9xv6y/IvsOGfUs2
fkuN6MCNQktred5mSabSaohhw+vvjkFXDDuwI6nEjrcOslVGkS6Rxwabb87z
67AdI6R7g3neW/oiX6IyHwGFavuuSyq1Yb75DROeR7pr3i+pJUNAiJB1yuz0
VtTgzGfyfLV4XM7FqR0ErPV8pCFcTMIpOm12a5QopK8/+jDVnAADy0vbw9xI
aC35eOYluijwfRAr3GZJQNq8KlSyJGGPQo3K1RxRSOH36BJ3JKC7eT21ZqoF
lXYeauL53unh0OncIAKeJGyQjBRqwcsvZM/w/PnZk8yja2MIOMHc1bgntRk/
Tdz4wPNgrUMS2YefETCS3XnIyLgZlxnt7uJ5+F99H3l9CPspX0DAm80ZDHlq
EzrURFTwvMT/AHs/1NU=
       "], VertexTextureCoordinates -> CompressedData["
1:eJyt3Xn0V1X973E0KzJTyRlLJcy8VzRTsFLwmMNXTYwcMBwTbpI4pJFDhbPk
GOaQOKQ4h2IqOaAoIqA4oYKA5oAz3y/zF2dwKC+tdR77s9aL9Vn81rqXf77r
yT5nn73Pa+/3fu/33md/ugw4bt8jVu7QocOAb3To8N+/HTqc0aPl7AE7+nvr
fm+d8ODIGyr8eZcn3hw78p+FN7362+cOH/Jg4c2+9uDwsSMnFt5+t9Z5Izs9
XvhnZ67Za/iQpwsPeHiHi4e2Plf4oVPu+e3Ykc8Xntx5z7+NnjWj8NQHXn9s
ZKcXC798wAntI1peKjz7w6+tP3zIK4XbL73uJ8NGzyq8dOseRw9tfb3wmb8+
4ulew94sfM52W/9y7Mi3Cl/45c8+6D7p7cIXz5x83uhZ7xQeftPF3+62ZHbh
qwcffPfITm2Fr//JZrt37Tan8M1rvvfqiJa5hUe98dDxnfvPK3znned8efiQ
+YXvPXWfqzsNX1D4gd7f+v6w0QsLj99wzqMdpywqPGn+P/sNbW0v/PTYUxZ9
8cXiqpmu+Ze+mL6Yvpi+mL6Yvpi+mL6Yvpi+mL6Yvpi+mL6Yvpi+mL6Yvpi+
mL6Yvpi+mL6Yvpi+mL6Yvpi+zfpp6pp/6Yvpi+mL6Yvpi+mL6Yvpi+mL6Yvp
i+mL6Yvpi+mL6Yvpi+mL6Yvpi+mL6Yvpi+mL6Yvpi+nbzO5mP01d8y99MX0x
fTF9MX0xfTF9MX0xfTF9MX0xfTF9MX0xfTF9MX0xfTF9MX0xfTF9MX0xfTF9
MX2bjaNpd7Ofpq75l76Yvpi+mL6Yvpi+mL6Yvpi+mL6Yvpi+mL6Yvpi+mL6Y
vpi+mL6Yvpi+mL6Yvpi+mL7N/KIcR9PuZj9NXfMvfTF9MX0xfTF9MX0xfTF9
MX0xfTF9MX0xfTF9MX0xfTF9MX0xfTF9MX0xfTF9MX2b+bnpF+U4mnY3+2nq
mn/pi+mL6Yvpi+mL6Yvpi+mL6Yvpi+mL6Yvpi+mL6Yvpi+mL6Yvpi+mL6Yvp
i+nbbN6Sfm76RTmOpt3Nfpq65l/6Yvpi+mL6Yvpi+mL6Yvpi+mL6Yvpi+mL6
Yvpi+mL6Yvpi+mL6Yvpi+mL6NpuH5rwl/dz0i3IcTbub/TR1zb/0xfTF9MX0
xfTF9MX0xfTF9MX0xfTF9MX0xfTF9MX0xfTF9MX0xfTF9G0WV8h5aM5b0s9N
vyjH0bS72U9T1/xLX0xfTF9MX0xfTF9MX0xfTF9MX0xfTF9MX0xfTF9MX0xf
TF9MX0zfZnGijCvkPDTnLennpl+U42ja3eynqWv+pS+mL6Yvpi+mL6Yvpi+m
L6Yvpi+mL6Yvpi+mL6Yvpi+mL6Yvpm+zuF/GiTKukPPQnLekn5t+UY6jaXez
n6au+Ze+mL6Yvpi+mL6Yvpi+mL6Yvpi+mL6Yvpi+mL6Yvpi+mL6Yvs3iuBn3
yzhRxhVyHprzlvRz0y/KcTTtbvbT1DX/0hfTF9MX0xfTF9MX0xfTF9MX0xfT
F9MX0xfTF9MX0xfTt1lcPuO4GffLOFHGFXIemvOW9HPTL8pxNO1u9tPUNf/S
F9MX0xfTF9MX0xfTF9MX0xfTF9MX0xfTF9MX0xfTt9k6S8blM46bcb+ME2Vc
IeehOW9JPzf9ohxH0+5mP01d8y99MX0xfTF9MX0xfTF9MX0xfTF9MX0xfTF9
MX0xfZutm+U6S8blM46bcb+ME2VcIeehOW9JPzf9ohxH0+5mP01d8y99MX0x
fTF9MX0xfTF9MX0xfTF9MX0xfTF9MX2brYPmulmus2RcPuO4GffLOFHGFXIe
mvOW9HPTL8pxNO1u9tPUNf/SF9MX0xfTF9MX0xfTF9MX0xfTF9MX0xfTt9m6
dq6D5rpZrrNkXD7juBn3yzhRxhVyHprzlvRz0y/KcTTtbvbT1DX/0hfTF9MX
0xfTF9MX0xfTF9MX0xfTF9O32T6FXNfOddBcN8t1lozLZxw3434ZJ8q4Qs5D
c96Sfm76RTmOpt3Nfpq65l/6Yvpi+mL6Yvpi+mL6Yvpi+mL6Yvo223eS+xRy
XTvXQXPdLNdZMi6fcdyM+2WcKOMKOQ/NeUv6uekX5Tiadjf7aeqaf+mL6Yvp
i+mL6Yvpi+mL6Yvpi+nbbB9R7jvJfQq5rp3roLlulussGZfPOG7G/TJOlHGF
nIfmvCX93PSLchxNu5v9NHXNv/TF9MX0xfTF9MX0xfTF9MX0bbYvLPcR5b6T
3KeQ69q5DprrZrnOknH5jONm3C/jRBlXyHlozlvSz02/KMfRtLvZT1PX/Etf
TF9MX0xfTF9MX0xfTN9m+/xyX1juI8p9J7lPIde1cx00181ynSXj8hnHzbhf
xokyrpDz0Jy3pJ+bflGOo2l3s5+mrvmXvpi+mL6Yvpi+mL6Yvs32beY+v9wX
lvuIct9J7lPIde1cB811s1xnybh8xnEz7pdxoowr5Dw05y3p56ZflONo2t3s
p6lr/qUvpi+mL6Yvpi+mb7N9uLlvM/f55b6w3EeU+05yn0Kua+c6aK6b5TpL
xuUzjptxv4wTZVwh56E5b0k/N/2iHEfT7mY/TV3zL30xfTF9MX0xfZvtq859
uLlvM/f55b6w3EeU+05yn0Kua+c6aK6b5TpLxuUzjptxv4wTZVwh56E5b0k/
N/2iHEfT7mY/TV3zL30xfTF9MX2b7ZPPfdW5Dzf3beY+v9wXlvuIct9J7lPI
de1cB811s1xnybh8xnEz7pdxoowr5Dw05y3p56ZflONo2t3sp6lr/qUvpi+m
b7PvHnKffO6rzn24uW8z9/nlvrDcR5T7TnKfQq5r5zporpvlOkvG5TOOm3G/
jBNlXCHnoTlvST83/aIcR9PuZj9NXfMvfTF9m33Hkt895D753Fed+3Bz32bu
88t9YbmPKPed5D6FXNfOddBcN8t1lozLZxw3434ZJ8q4Qs5Dc96Sfm76RTmO
pt3Nfpq65l/6NvsuKb9jye8ecp987qvOfbi5bzP3+eW+sNxHlPtOcp9Crmvn
Omium+U6S8blM46bcb+ME2VcIeehOW9JPzf9ohxH0+5mP01d8+8H/Y96seOU
16oO969z7UMjL6nW6rnFfu2DZhde/+sfzxk0tLXwt1+ZcErriLbC37ntwk79
x84p/L3fH/D3WTPmFu62e5cd+rXPK7z6sYePH9znnWralB9ueMWQUeV52POw
52HPw56H5b/mYe9ve2unMSV/LH8sf+z+H724xytDW8eX+7H7seu3HtlnwuhZ
j5brccu+63WdNHhxtes7f1zrupYny3vot/HfBw4b/UwpN97p7N4XtfRrL+x+
7P4xd8yd1WvYtHI/3uHeMz95uteiwvLD8sPqPWGv077SY9L0arvWMb/q03Vh
Yflh+WH54R+su3DqjI7L2ue8tbbutmRmyQ/LD8sPyw//+4v//nujmnnubQd2
7favkj+WP5Y/lj+WP9b+X/9udXbn/i+X52F6Y+0FKw9WHux5WDuY++jMf3Qa
/mrRFXuP2HvAyouVF68y9em/Dun8VuGvjbj8fy3p/nZh7RVrr1h9sfpi9cPq
h9VPOdUPa3dYfbH6Zj1x/lV/rP5Y/bH6Y/XB2g/WfrD6Yv1HOdgFrP5YfVO3
rAfOv+qH1Q/TC7OPWH2x+mL2xXPYF6y+WH2xdp7tMHXJeuD8q35Y+8Tqi40P
WP2x8Qirr+eoD6YX1j4xO4LVP/tdtsPULeuJ1RerL1Y/rH44x91m4xZWX6y+
WHmx8uL0I3Kcz3E5x9kcRz2vmV+SfkOO8zluy7+ZX5N+R/oJ8sP6TzO/KP0W
+WH2BbMvzfyq9Hvcj93fzA/LcTTHsRy3c5zNcS79hBznc1x2P06/J/2W9DvS
b8hxXv7YeJR+VPpB6cekH5J+A9b+sfdd/jrHoWblw+zDcpznYdTpxV+v09Nu
F67Ts19i8zj9Ktets5/lumf2m1w3y34gXbvE2qV2ne+xnIcR78/13hf2frD3
kfMD81b1x+qL1Q9nP1YfrHxY+XAzvyHnH+bRyoeVD6ddUj6svWLlw8qHlS/9
mBw3zOuVD6edVT6sPFh5sPJg5cHGtWT9XPmw8mHlw+xEztewdud65cfN/Pr0
g7HyskPKi5UXs5NZXmx+X+aXdb93v/Ji5c15R/rpmH1LZjfVB6sPNk5kfbB4
BVaftNP5vaf81Q+rH1Y/rPzp1+X8NcuPxVuw8mPlz3FMHEt9sPJ7vvLnPCHZ
uKQ+6Zdi9jXrh8WTsPph9cPql+OyuJz6YeUVp1Ne9WY/s7y4xL9qLvGvmkv8
q+YS/6q5xL9iHC/fp9X9W3lynFF+ccWc5+iv7mdfMPuX9cXpl6kvVl+svlh9
sfpmfXKcbDaONrNr4qjN7Ij07IfZrrNfer/uz3kUe5LvG4u3Yv4L9n6x94u9
3/QbsfeZ6Rn/KN9LhZ+WfsmK/ALvO7+HSjud30dJ1+8ynlTi3nU/yO8oUo/c
hy9d/BuLf2N6YHpgemD2KNO9D/pk/En5jCfSsXR6Zdw/9ZOefmP6RfSybiAd
N/Nb5EdP6fTL+Jjr6ZnxsrJu0SRO6nqcukqXD9YeMg6V32FI1x6w/onZw+SM
V0nHnseflc5+YukZ73K/9uV67cv10jH7mvHBXOfNeGGuI+W6ivzNIzA/PucB
dNC+sPZkHGIv3I+la28Zj5Su/Ulv5ieln5HjYNrxbG/ZjrB6ZZwzv/PJuFPG
hZIzXpj7WrP95b5I6dqXdO1F/tpLxlelsz8Zb830jCPkvD6/B3K99pTxWuOo
9pXx24x35vdf2b5crz2lH4fTT9IesPaAtQfsPWd8OL/zkm58Sb1z33LGi3Pf
a8aLpbMXuU/H9fT0fuiJm8WJMj6b3wNJz7hFznvphY0XmJ+L6YPT76IPpk/G
q3Ofv3T9BXu/ma4+3jf2vrH3ib2/jGNlXCLjANj7wdpv+pm5TpbrRslph/hF
2pvrtcesT8bhMt6d3wtlXCjjMBn3yLgCZt8x+57zmmbjuvpmnDDj6/k9TMbv
8/sY6RlXyjiO+uS6ZbN1zPQzchxQ/ozn5/ceuV6Q339k3Asrf66rpp+T/cT1
dMjy5npBfr+QcUGsfFj7T9ZPlTf9sFyHyvJj5cf8pWZx4oyzKn/Oo5vNq3Me
mPOMtPu5rpZ2SvlL3KIuf67PyF/5M66RnPsacp6Kc96U65q5Dph2Vfkx+5P7
dOSvPhk3Ss59Hhm3yHk2Vn75KT9Wfqz8K4rT5b6VjBNlHAUr34r8Oqy8WHmx
8v5P46AZV8w4XMa5Mg6k/LiZ35l+C1b+/2ncOeO2GQfNuGHG5TJulftmlD/9
5PSz0k/A2nNZV6r9q4wrZ1w245hZHsxfzXR2oZkfKD39gBK/rdP9f/7NdbHl
ztOv/7+cAxLrwOxsvhf36/cZF5FfrmsbZ9jBPPeJHZRfxlFynd04Kv88F8w4
IH8s/4zL5D4AfoXn5TljxkX5Y/k388PpifV/7Pm5z7msN9U66GfKk3HYjBPm
PM2+WuXBypP75vN5GdfNuGPGEfSjnCd6fn534X7PYzcyjpxxCvnndzmul1+u
l+jH8st5Un63lXGP/E6PHdOvct6b39Gzc/xcLL+M12c/zPPOMp6e52xINw/J
+HXaiezn2U/zu7T0o5rZCf0246HSlT/jmdh7yXMk5Of95rwkv3tNvzq/q8v4
YMYP8zwl7Up9jAP6EdbOsfpi7azsO6/rn+egZHwr41GYn5HfoaQfIF17yH3v
uW9C/EN7wOqb5/2knyHd87DxB3tenl+jn5pn5TzD9cYfTE/s+djz83wcdkt9
sH6N9aOMB2in8s/zWdIOY3YIe37Ov7V7OuX5IPqB/HM+zA7JD8svz6cwTso/
5690kV+eD9BsXJd/zjf1W/lnP87v1d3vec38Es/P+SI77PnY8/N76mxn2POb
7XNSnmbr3J6X3/dmO8aeV/Kr+2/6ec3W/eUvXf5Y/jnfyu8Z2R35Yflh+aWd
SjuB3Z/7B/N7rLQr2c9zPpDf96QdSD879317r/oLph+dXZ/rPtj1OU7muhB2
vX7jeixdP5WOpbML0jF98ztW9xlPMB1yH2OeG5N2AetXud6b++/lR4ec12gH
xo88v9B79B6weqefmPtW0s6mncTqg/VjrH7N5pHKa/xUvvSD04/N/e95HqDx
UrvL9aHcf64e/h9LVy/pWLp6Ss965zoKdn3GX7Q712PXp5+jXboeL7ly3p7t
gxZWR2+x/cl9us6qOn7lpx37j11c+Efr/GzkkM7PVyc+NfX6ln6vVzvf8860
wX1mFJ5wzzatI1reLPzy+M2f7TiltfDrwz7oP7S1rbDn4c9/fe/rg4YuKvzm
V//Pb/7UemfJd/3Pzz30upYHCm+y/eKVdhw2oXD+9TzseZnf5LP+/YfO/d8q
/4/dn+mZj3LjlX54+u9aR7SX+/Dxn66y2pRer1WbfP+YXa4ccnV1yGYXXdHS
r61w/4/6dZs0eE7hgY91ndhr2NzCQ0fM7tW12+LqkPbjP+s45dnq9Kkb3Day
U3vRRTr23B1nr99zSffp5Xq6uR67fo+z7jyifdDMkt57nz98OmjoC6V+Aw85
7u0ZHV8t6dk+1NNzk+k75Mqre0wa/EZJlz+W7voTfzD09NGzFhT+Y4c+a3db
srBcTwcs3fXas/Stf3TP6GGjx5XnaE9YunIpv/T867pm/6/8/l87KvWs012v
/CWfU09b9PDIM0u76jjhkFX/OeueaucNr7xr1oxGe8bSXa8+0tUXew5WjkyX
n/YrXX/B2nNy6U91ffaYP2DXfu1vlXaOlRd7/tP7PLn68CFvl+t/8YtHV57S
q7Wa8JfVnry109+L3cl+xp5g1yt39kPXN+uX+mH2u+xXWL1xaXd1vtqn96Kf
KUfpJ3W5i92tWbrrS7up07H0YufrduJ52lHpN3W6/KXLT7r8sl9h9sVz2CP3
HX1Ze9+xI+eV5/JrPZe/6fpuLw3dosekSaWdev+eq7/yh+jo+vef2ui+wX0a
/VF/41/pj+7nlysfdj/7k/ufXM+f8HzvJfc36S/Sc79TqW/Nrt/j7t1u7dz/
qcLqX9Jru47ZH8+nR9ob/hKd+Q3akf6pnemf2kn5nrCOD7neX+XQP+ignN6r
fKW7P8df9ZBfGffq/LRD+UlX39IP6/z0V/+vHvRKe6adYn+1W1z6c3CeK5Hp
dMg4W7PvNNNvzn1w/GjvJf0HfjVOf4Gfzb8WNxCHwM2+AxInEhfIOEN+F5fr
eM3W4TNOoZ2lv0AXbH6nfukPs1/Y9Wk3004aLzy/e8vZ3+zQYVph79X1xiU8
d4vzLxzSuWEfsfRFn+63yZLu80s6Tn+j/H5BXd8yrtbtLdulfsB+pb/EPrE/
rsfS1Tffh+uxfqodpn2X7n0VP6Xm9Ec8/51Dxn/8xRdzyvON49i8qoxrtb64
/N5W3d/Zv2T2kv7Fv6nfl+uxdO9H+ZW3+GPsS223xM+brVM3+24uv6vK75LE
U/klyoEz3pj7R/I7+txHbL6r3mnP2WPvmw7eT/pT0vOv55XfK63jIXmuTn4H
m793meeLWK8TT8lzeVyvHNq1/Lxn12PXa+fF/tdxSenaeTmvpo6TSjdfk57f
5YrTizvnOW35HXOeEyTd8/oPu3nvfu2N8z/y92vy+w32x3vKc6Rcz/6yZ7kP
n73P9aI817Oct1DbS+1G/8jz/vO7yfw9gTynJ8+Tz/2Veb587jfMc6/y+/c8
5yrHuTyvMc/VyXaW7SrPi8rvu/P8qPzeO9sFLvs04xz/5c5PinPgpZvXsTtl
32F9fZnH1Xax7POr04u/X6eXfVxx7q3nmX94nvglnc0r+bnKK115jQPiueW7
MvGo+v6cl9LZ9eyu63NeqvzlO7W6fbve+OZ69dHu1Yc/qT7S1cc4pj7Fj6vr
4371cT29+aP7nrf02D5dZ5dxT3mkK495j/JIL+2hvl/+/F/5dz+pc99uSx4r
4wQ/RH/ST7B+6b0ZZ4yn0nH6w65nL6Xj8nuctb9lXiY/6cbJZP2S/2YeJ//y
e5B1/tLlL1198/cf2RHviX+7/89ffb7T8CnF/13Rdwsr2jfPLmL58zfZZZzf
QfB7pOc+fHobL+Sf/ibO77wyDtks7oXzuwz9zf3Ge9exK8Wfq9sbpkN+d2g8
K3H3+nrll+750tk7+bFvxT+u7bX76cwPy+8aPV96fueW6yLskes9n455Dod+
Lj92YO+xW748o2Pj/J3yPUhtt/P3RHLcyf30aeeS0y6lHZLO7kjH+fsIxi12
kZ30PHaVXZPueXkef56fY9yQv3FC/nneO//BuKDdyI+Oxnn361+u9/7zvHHt
TnunO/+BXTtg8eqb9h/7r+r4AWPnd5/UOA+cXePHisOxi9LZOXZR/tLln/ez
i/xo8w92Wzo7za4qn3TlK/OXujyuN26wu7luk+MQe5VxF+nmBe437mQcxvXq
53r1cX2OC+rjevUp60L1+JDrQpj+/C32gx1kX1yHtRPjAi7x7Tq/8p1vzeX8
njq/jOPrdyuax2L9KtcB2GnpmH1zvX6V6wSul45LPDDWIfRL5U//UL9WH/6X
8qa/Vs63qfNnV8v6Y/hj7Bh/TJw97Rx/jL8lvZwHs/jQHw0bPbvaae3Rp3Xt
9kSx09L5a9oVe2MfgnaJS7usr9cu5d+snUrXb/U7/Va/1G/1Q5z9Njn7bXKu
E0nH6T+yG+yWfq+8ye5vZhfM+zwPs8PsDDucdjE515Ox/LFxgF3C7I5xmd3W
P6TrP/tusutfWke8uNy+QuM8lr/8jDuHjH/5gVkzXirtSXrRs07H4hllvKv9
Ye0Te57ne550+unnmJ9Jb6x9ys/7lp/2iKXLH+f5D9LVr6wj1PEbdlp9pWu3
7LB2lcwusyfl/ppdj/nP9FZeerse88+N856nPq7Huf6W8dxc1+SvY9ezo+KI
0vnT5Xzg+n7vI+PZ7pee5w3wv/Vr6fpR7j8o5/DW9hyz/2W+Iz6iPDVnPFy6
8QVLlz898vt/12PzC+0x9zOUc5vqcdz1xrlk8yfjVu5nkE4f8wvp5f3W46D7
1Q+rX6bn/K3MX+yXrFl9zH+U3/xFvCy/QyjnptfxNuOk/Ercqebcv4CNqzkO
G9eVv8Sh6vySM86Ucav0M6TzA5SHn1DmN+FnyS/jXCW9Lk9Jty8i4lrFr6v9
GOWjd/p5GSdrFjdTP6y/5+9RGQfMN4wDxjHpxjHrcmUfRn29+Vf+PpJxmr9t
nM44EX/dvgbjVcY55V/279XjUsat2Bt2N/2OjIuxbxnnKnagnr+vyO9ix9nH
9GswPyb9kLKeXz+vmd/o+djz0o8zLkpvts9OeZr5XeknKR9mN8T51TfXhbD8
cl0Iaw+YnSr7k+wTq9OLHXV/Hbcp+0DrdprzF+3YOJ79EuvXWL/DzeISub9I
v8x1d3YIZ9xFebDy4BLPjfgxLvHVuh1pV+YX+ol2pZ1rR/oZXbUP/gg2fiuv
dHYMs3PJeT6UdCx/euZ+H6xexm+s3aiXdCxdfaTj3J/EH8l9PLkPKPflaIdl
/03Npd3W7Qaz3zjbhfEj2612Kr/kHC+k8z9yHy/7r7zJdPF86aUfxDqV8aDs
A6xZO/MevX/svXnv/KTSzuv3pF+UfWDsSb3Ol/sW83zmZn4Mv6SZH8JvaOYH
lHO86+eVeEudXvzZmkt56veEvdfcZ4CNc83srnGzmd01TrMPub/IfAnneXy5
L1P/Vq7cPyTd+8TaJdaucj9Qfs+pv3lerqeU/Yn1+ISVJ88Py/1GuQ+27I+p
OffTYP0VKx974Xm47Kurx0F2XDtnv3B+Z6Wd8Ofdj/O7HXFP/VE59T9sHFH+
sm5ZlwO7Pve/ZD/E+TsOdMDlO4r6Pec5afndkOtzXpbn8uW8OPeB5rl9ua+V
rp5rHuN94rJfvNah9L+ay/7vup0qFz/Ofg5c9ofX15f3VPtpWH+XX/7ekOvl
n+nuL/Wur5efeWDZLxzp7In6mnfkd6LsJ2YPxLfYI+z+/G4Vu7+sE9bvmX9R
4pbiPfV7ZE/yO6Ey7wr/IM/N1u7ZE+1eu8r+jOk5dZPLbuo0vNFfsfKVOHUd
H8zfr/Be7DfNdO+J/TZOyc/8D+d3feZv7D72ns3nsp3nuJP7xrKd5L4x88ls
RxkXzHN8sXbjevF84235LsP+Z/OHmvUH8XjjcsbP83cwms0Tc53NeNbMD9Kf
vEf9tey3q+19zoPLd0y1P5/xcfcX3Wp/wDiQ65q5jpjrcLjEqWp/wLimnWj3
0su6e51unMLuz3X98r1VfKeV3wVlPp6b+zhwnlPiPXqu9oTll/s+Mt6mXnnO
vudhzyv7Cer7m7Vb9iP3QWHto3xvVI9b0vn/0s0jpVtXk258yX1t7I3n5Toe
Zo+sq2B+triO/Oz3xCUuUz9feXIfXe4/yHXItH/5u6zuL+stdf7sivJg9/N7
XK98zdZZc1+c9yFdebDy5Dwi13VyfTrPJV3u3NKas93lOXLicjjnhTnvzXP0
jCvlHPWYp+Y6R54byF/GdNTO8lxEupTfK6nboXZd4vZ1unEc6+euz3Mgtdty
/lLdT8Qhyr6IurzYfm/jh/zp7/nY+rLxIteT85w36dqjdP0r2fhm/Mj15Tz3
bkVxR36W9iMdSzf+GP88v1kcVXtKZke1R3ZU/s3irhnndL/xUL8yvrGL/JBm
vyNXfse2Hges3zY7t9b1xe+rr9cfjTvGAWx85pepH1Y/PHvTGw6aNHhqde9/
u3unxnpnxuNcz44Z1/TX/N4x1yvzvPyMvxlv5Z/nCrie3cr5svvpkO8JN/vd
ifzdg/wdTel0z/G3xIVqO4f5v9qJfpjf+7IjGUfKfTXyl55xY3aDXdOv6Ygz
TuU9ZtybHS12tbZD7DDO9SrpabfTzrOD+i02LuS4keOM/NgRnOe+NdvXoV/L
zzqG9HJeQKx3sZM4z63LfSo47RA7mPtocNrBZr9jkN/1sgP0zn1EabfTrjf7
Ltjzcp9Cfvfvfu0j90XluJTjFm52bgz2vPwOuOyrqsfr/B1mdsq8q1ncNH8n
Ns+t8bxcn5K/5+c5Tun36SdlHa32u9XDe/RevSf1xtqJetIFaxfaqXad8dNc
TxH30l5y/YO99rw8fy79wPw+O+OlZV9jPT/JdTjvzfXFHtX2Ktczcp8jHeSH
lSfXL1I3/Rfr3+pBt/ydD++BndZvjff6FS7zm3r8pyM/nR7GN+nGKzpj9sT4
ZVxXjtz3VXSL72q9V+9PObxfcR3pnosznV2kZ7J4hXHNvEY+xn+c39nza7B8
ML+DbtpP+Z667ifej7hI7ruTn3LQE0tXn9zXXfYhizPGuhG7k7+vKc7Mfui3
mB/y9sXrt3Wf1F49/tM3X5s148kyn6QfZhdfm7j3PmNHLqpeOefrP5jS69lq
xIlnbNevfXl+8f6drunTtXFutPyw/Dzf/fw77eOqv993w6wZC6uPPrlvyYiW
xrl02oP0L67Yq8vwIdNLvuw0PfjN5Ry3+n1i8+XR75004p+zbqpaNnp422Gj
5y73u5HGK5zzKP68dsLfx+bReV5dOU+71jfPSWI3tRvP9x7wKVu3HdCv/flq
83+MvrzT8Ea8VDq7lPtoMDun3zYrJy7zo7rcnsNvw+azrmfvyjl5tR64fJ/x
3iUn9ph0d9GDXspZ9uXX/ZF+vRed+2THKY39QuwZ5p816zc4z7Up+yNq+0sf
9lP5vedy7k1tHzwP57ki+Z28dOXK767yd4Ly3CTp1mHyXBb58ovVV7viPxc/
qM5X/zTPMD4ZlzE76n1JF4eXzn7rt9qleaT35b3muqT3Qacc170f7STnId6P
dpfxIu1XeTPewy4YV9gF/ZYdKevztT+nnWH2cNKQdfbsP/aJYm/ZU+k497Wx
j5h9PLn/hpNmzWjMG9gF12PXn/nF6AUzOs6o3uz74uSWfs+VeEDuW8+4Q34n
aXxkf6W7X7r7vUfv3Xsx39S/O05fvH63JXOLLsWfq/1D9oSu2gH/gf3Q78r5
qc6pqdsVe4H1Z/7ep0+e8efO/Rv2dpVfrzum0/AZhfMcOlzORX5uyBl9us4s
15d4qX0otf1TX/Vf7YYH7xjZqWGnlSfP2VP+/L1j77nY+bq9sk+ux67Xz1zP
PphvYPNK/cz4b1zgh2LzYv2O/ZGe68m4nE9Sv1d+XH4vYT0Bi8eU7yfqfiu+
k78DatzLcwP1b++p7COq3xP/m53wXjA/TLldr/27HrueHfLetX86Yf2n2LVa
V/1B/ynfO9b9h530/vUP7x97//oH/Y237C7Wf8wnij9S98Niz+v2z867v6xb
1Pd7H7neVOZjsU4h3lP2o9T9b+DSU0cP7tPQkf64+Ge1rmX/rP34db7lvL+6
PdJTe9MPlFe6+Jv01Fc8Tb9LPcXHjEupn/FU+VIv/pD+6v1+a98Tbr12y8b5
FkNvWXrccRc1fgds3gej+l/8UWvRWT3PGHzzpVN+dU/V9cWHn768c2P8VM/r
Vxrw2AZfn1SdMfvGkb2enFParXo+997f7nqr15PV6ydt1WnT5+aWfqCej3d5
t2XmTc9UH5836Lo7vz+/+Cfqud0B+6w06uWpVbch3zv9rJsa35XSceWJD16z
2YaNc0H+vFG1xhnTZpZ6Pnj84UsfuaJRrw6d3jrt+gPaqiP/2HLjc396pNSj
nG++9Tu9B/2q0V//vGSX9lX/Nbc6ZdOWh4574plSbuU870sb/PXcd5f5Jds9
OHrocdNKuS94fo0XBq7TGJefOni9ux67uXEOzjUT9m5/dV5rtcqlB044eNDo
6phel05+86tzqoOWDrr4rnUnVjt1XHL9+T1HVDeus06/NZdd17HvsDte79ta
bTL/39fd+o9zq6/cfPe86sjW6udXnXXEZ90ur2Z02WHCwLuWpR/eNvypKSOr
O7a8bsJZB7ZVf574xdrjez5QnbzrVYduuGw+uscWfXb866PTq/G7L717w9UX
V+NmvtDnjS1nVoN7bHjZ4FsWVyd0Xe3nUy6ZWV1/4zY/Pvimc6qW9k9+0fn+
ZeVcMK9r3y+PqcZNeaTzwde2VZvO6rHWd9cbUx101Etv9lhm/268eeJpn/ae
UT391cN7Hbl0YfXkab/quke3mdWEZz88d+b7i6oDxp1/+jY3zKw+veqSgbuc
3V69f//V3c74/gvVNgtmbHrlAYuLXT/j9rsv+/iwEdWz90x4vPOYtuqBjj+9
4JUtxldbjnlkz1MWz6/uXPSXaRcdNK36VusWHXt+Y0H1+hqDjjl2aON3mD5/
rdfKj+zb+O544YT7Vjvsvsa86d4Jz+43a+jM0u5Pu+7Gfx7zfmO9++8bb/Di
JQ83vs8/b+NbPvn5dxvn4fdeY9Qpe09vqz7uc2Sv86c+Wr172m7vjxo3p9r8
T6+esOO7z1fzz2zdcP8HF1QDrjxt8NOXTa9ax4+5c+j2jX0Ym62+w1kbH72w
6rb+qJ5vrN34fagP7119ky7vLP876NccNWCvjt9YNl9d7/eX9z6xbbnfrbvm
ou+1f2nkuNLvx17344Fb/nBZOQ6+doM+6zTigTtffMFVj45q/H7c/fsNPWrm
043fZTn+qlF/+tfK7dXhG09ab61jZ1QX7Ht/tzlbtlf9xm700nvnzqjGLeww
+fZp7dX0dW+f1P8rM6ul27531y4f3VhdfsKojaZ+vsyOHHnALedOv6vq8+5G
J5y0Z1t1+L8u6D6syx3V/je9u9ZXe7ZV/xi7w9RTjlymxx1HbbDruMZ5ffuf
0u9rU1+eUa3zyrjJ9+z5QtHpo0u7fHuzgxu6/Pm3bRtf/0BDl9f+c8KwN65s
rZb+Zdozay++sWr58Q8PvmPrxjkGn22wy3f7frEsve38PX+2/d3VqrtOP/Kh
Q9qq8+bdOme3ox6o/rH1/Vu0rLH8+Sgb7TD8kQseaeyne2TlcYNeuLZx/sFv
3+5+/fabzCl26Lbf3j5s4GWLqt8Ou2TPW0Y04j6LTj54q/NbZlTT3l51l/vf
X1h95Zk/3Nd3pZnVtx59brsxDyyq3vnWthMeuWhmaactK6/butNzy+zWkm3u
Wf359uriY/b/ePWJjeeutmjANo+MW1CtOuLinxx20PPV+B9NXHniKwurMb/r
/stnj51eTej24akfdvhd1fOO34w/etSyev9q19W2/f1tVcfbfvrBa13aqmkr
PbrDi7uPrTbfsts5h05eNr7udcJ2X/rGxOqT0T98Y9q+c6pZm/1irbdPbfw+
3D6jP3tl4F6NfUQvfu+sS3sf1Ph+YdR6q6z3n5cXVxfe8p2zN799ZvVu39ab
d97/heqgjmccuvcNy/Rb84o9vvObF6rum+3w1tDHFldDT7731fY9WqsJs48Z
8JeHT61W6rnnT3r+fmH1v0ccuPfB60+vNn384c/X2m5hNXzHiTfs/Ozz1TXT
+/xg9g6LlvtO54H9T35r9wunVy9tPOajb+84rpq39X4HTv+grVr4XKfOh/dZ
5o8evvFdh20wp/rloa1n73H+nKrni3M//ua1y+YdX+6+at8TGutc/SYf++Ez
XZaNy5/+7a1vPj+x+BXvd1y/5cLTp1W79lrnioEHzq9WPXuln+78m6nVhN7n
feOlJ25Zbj3whYn7DVl/rWXPP+rME1/fZMxy33nc2HfXNQ55sK16fdXbbzri
6serntedfuxxmzbG+z999sEh20+YU+24W4+lv1k0rTr26d12fuil+aVdXnr6
nIt+fOqCarsPr1jQd73GelPvEzddb+C456ujV7pq94cuXFC1/2fM2dtXi6rN
35rbee3J06vfH9Z70JbXLKr2evyehxZs3GiXI5cu2m2Vxxq/s7fpE/PXebxl
enX3Nj8/Z/vrGvG4qRtPfWGHRxZWR19w2vn77zu9mn36hidt3W9OtdGdf1zl
lG6PlnH+1bu2veTcdedWIx7q8UnP6rFqx60mb7zK9DnVSV/df/e+m0+uLlv6
/Qfv+2BOtdVWt629W9vM6pI9ft22ZNEy/2v/DXY6rsdT1ZOvbvW3za+cW3X+
wwFvrLbmE8Vv4C8d+J+PF7ecMrfav89JA0576onq+h7bdJxzxNzl/ZloXzle
pj3J8TPHn/SP0t7keJv2Kcf39K/SPqW/lfYsx/Psj2nfVjRe5Pia9ib9kfT/
sv+kP5jtJftf9s//3/5j9t/0J9OfyP6f/kWOpznepn1e0fiS9i7tYfbH7K/Z
P3M8SHuZ9jT9wbQPK7In6W+tyH9If2xF/kD6++l/pP+f/mz6e+nf5nwhx7Oc
P+T4mv5x+o/pv6e/mf7TisaX5cbz8E/T30p/LOc/6c+nv5P+/YrGt/Qv0l9e
0Xid/lXOz9Jfyfla+rfpn+d4u6LxKse3HL9zvMrxKcevHO/+X+eX6S+kf5D+
Q/oL6f/n/CX9wRXNZ3K+m/5v+pM5X0z/Of3r9J9z/pTzzfSvc/6Z/nbOv9Jf
yflYzl9z/pL+cM7/0z/+v0Pd1XI=
       "]], {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, Ticks -> {Automatic, Automatic, Automatic}, FaceGrids -> None, 
     DisplayFunction -> Identity, Axes -> True, 
     AxesLabel -> {None, None, None}, 
     AxesOrigin -> {Automatic, Automatic, Automatic}, 
     BoxRatios -> {1, 1, 0.4}, DisplayFunction :> Identity, Lighting -> 
     "Neutral", Method -> {"RotationControl" -> "Globe"}, 
     PlotRange -> {{-2., 2.}, {-2., 2.}, {0., 1129.7512470188044`}}, 
     PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             RasterBox[CompressedData["
1:eJx1mPk31P3/xslWUhIlSyklsmWpUHRJRdqUO0SWikoh7ptCtlJJFCIhsqQk
W0WEhkTWYcbY98YyY3Zyo/XmM98/4PvD65zXeZ/nOa/9cV3Xe9N5b+sLQgIC
As38Jshv/9cv6h0ceiPdDNL5tZz4pEkIGt+WNjBiQjiwozn7ChFbK2TU7+2Y
hPWiqOyFICY4rMUnyT5t2BC2+pQLhY6L43VkuSomRKd3fHHaRcbIuWeLslfp
2L60LthhgYmFGzd8X7u248Ui+WahOB3roxPlNcFCxcipiOY1FDjrKU4ovKLB
elftpYQwFiy2KXJj31Owcsp20nk/Dbb+nYzHn1gQiJr9ZGHWAbP3zG9/f51A
0HFJzo5FFiYSo8QINR2ojl0qcSJoAlb1ow/897KRzDjn66DbCUJzfde/ayfg
EyL44WwIG8JL6wsPJ3bCXrj7ul3xOGJX2myb/ciGy4+y+6HcThxpaEj1OzYO
XfWMgJ2/2BAV67pXtbsLex/dcDrAGINJ97yUmiEHdpfaDApDutBmEbDzU/gY
XvmtMiFf44B+4YBXb1kXJNZSmEOKY+hgntmgXcJByvQ3RhG9CwoXpP0fl43i
RdTvcotpDtixRaPxK7rxwKtuftBqFBTHpOkNWlw8Vakto2h0Y5Xm61u5DCq8
X0hGl13mwlfKeSFvXzfmCuRX8G5SEXZPSk8qh4sNbyekT1p1w3Je3yxjHRXl
ZnF+umNcdD4TBOtUN06+O5Hq4PIVf7RVmuQ28MC+Z7/EVaMH352zjq8hj8BN
c6S3X5GHXJWDrIvzPVjhkz+jaTKCY06K07EKPEx8UdUz/dALy+5ZRLweho20
9UZjeR7OCEVsXrzah26/5lNCMsPQOcLwH1nHw6OgfMd7G/pRVVR65nbwEOq5
e0X9ZXlIdQ30Smnoh5S7kvLY2CBKVhUOiKzlIaxbdLb/0gDO2l5N/W4+CLdd
t4SjZXiQkjT72bNkEC8qjY4m5Q4g5aFggqg0D47KaiskkgcR7v8iKVZsAKd1
PBMDpHhwVXIOpKkOIUrpxGSuaz/8z3+XH5XkQbLxVkNt8RBmNbjZLwh9eEqm
6Jmu5KGEM1v9w3AYi05bvu1Z3Ye6JmVOogQPLrM/V3RWDuNT9C/5DW69OHVL
3HZMnAcNu/JHiYYjuKRwII33rgc5R56HqSzjIWX5jE9I8QiKRw6kmf3uhn73
H38XMR5Ud0gI1qp9Bbklq+QZurHn/NbjcSI83CWLRySmfoUhp6bEK7QLostU
pMqFeDh8ZpYZL0LFXO6+5SIfOlHK+UHuEeTBh3HPg7SHCi8uWTuB0YFM/7QU
ziIXnprGd+J8qPg4lSUnv7oDJxOFQ37+x8XHByF7a9hUkLZ3sUI+UpA5rfzN
vI6LRdOZI7TzowjovSMhd54C2vIrvLxILiLDdq906hlFvMV9y0oRCr7qmz1V
Oc5Ff9edHQHmY7ieetpXPacdKqnt8h+kudgW17YkpGQMdLMLJzT2t8PB6r8n
Lv0c7LBPknu9fhztm3LiOOVkGHsE7lLK4CD+fNSI3t1xuEeO/XNtnAT/yPpN
824cTOXKPzvMGkfcxbJSAxES9vsZhk+oc1Cc+ctb4dgECtoSRBzXt6Frm2g4
a5oNK9WSRWLhBGIYYVp09VZ8X2NxdOkHNsx4SUphEjREvlPNyNckIvDVosRe
/nv3D5E8ceoyDfMd1HTzTS14s13tW/R+Ns7Khmu4f+HzhUMKExZrxnHZ0q0z
y9gIoUvUdq2nQ+Dg7KXWwUYEe2QM+bSzsHB5++S7a3SsPRPs+iutAWcauWZL
k1jItvnlu6aVDteYaA9Vi3rkp1dFlTuxIEL6HCa9aRKvha3727vrsI13lH5r
C59Xlry4ar9JMDeqV3wxq0WvrfB9NzYT6/IMGlUbJ1E4NeEnf7cGuq9vvTpb
zAS70E7AZR0DTwqW8lw3VOEo/bn/9UAmbovYcbNtGfjzhSxRRyPgiILNA/mf
DARNWf9LiWeAoKz2vvQ9AS17WrplAxlY42GwQrCNwb/3qZcPRRMwEyTK8vo5
iWUO/CMXYaK6TmF9+GUCotk7DiremISeSaNL5R4mAjSU/rhaEVAgk2au/JuO
dcbz/3n6MLEx+aEd05iAB0PaWmHBdJwfWfz0dzYTQ2HnnonpEeA9mCett0CD
778Z1P4uJkyNHS4WaRNApehxjG7SsC7ULrVUmAXnXwFJjfz6N6QTQYlLaPhd
P2gmo89CubjHE4O9BDynWVjvvzuBL6y1NsJnWegRuh47fIKAuIHkpn1LJ5D8
XvxhQjQLVMeFloQrBOx9mzQbEz2O0P0DM6RSFghxTqt0+Ov94Mx8riY5jhTd
nazaERYabK9J3ykmILCu/KhEwhh6bG0RJMrGxk0HWE5UAn4QLkkYyI4h+q/P
ekJabAw9KrkXKVOFhTa/uJepo0iTn7h9wZqNKG2WYevxKkQyTSRObRyFegnh
RsF1NmI845WnYqpQuHvn1r0vqdBRz5geTWHDU7DhY2lXFbJeCI07q1OxedWO
05IENhyLkw6MK1VDyIkpd47PaZFn8wG+XfxxFeSH7wbX4F3w9HObZyN4ZNQy
bchhY2VNf+NLymdc6Lo0Jzc4DFn33xmuQhysevKiO0+6DkZK66PS1w3DXWPe
8rscB7anrS41HPyC+A1HJDtshiBc2Prk+3YOGtS/X3S7Ug/ur7OqWfGDeBbz
Usb9IAc0xAdfut2ArDgBxXnSAMw/SRsddeCgK1Yrxyq+EXGLUeHl4gMoCrc/
/+oqB3EzZfN/JTfB5kAvqfVgPyL1kvuCwzlYzb1v6/ekGQXypWTpm32Y38gj
kRM5YPWulY942IKSmhjJKxW9MBi/7Zady4H7r/KtJqFEiO4qkXr1rQd6ulEv
f1VywPjZWal3uRX6ux3Pp6n14JDntgd9rRxMCKk9ZB1vw20XKU8Z526sbHEV
NB3hQFzf7WPPdhKSTbcIUB51wU+cPaw/xUGA8Gy/gwQZgpq8gPt1nQiOYbHK
FjkINTFyJk2QIfJc3Jox04HAhIYxoiQXrm2cg58c2yHTIy8UqdQBBwvK39eU
uNCVNhM8Xd8OsdbrFN4hCuId53eVaXPhl0UVOKFJQaPq4tb7V9th/MHpS5wJ
FzH7rlbUPqJAWUU6eL8SGb2l36N4TlywyUOP26Q6If74sZZwDQnqira2mSFc
FJE8OGV8fxFJ2hoveIaEmOSm3y/SuFCdSbqR0N+N+N4+E+ZUGyomeyx/V3KR
2XZB0EGtFzeX3Z12CW2D+bKfYs/7uHCXD3A/4NmHhl3G2wRE21C87fh80hwX
PKtb3uKv+vF0ZcKV0xGtCJKybhvk6+dpX/s/ogMDCNj1UY65QMQ1RpyJpxYP
jC3f2k6IDqGy88XAJm8i/lWwn7I4xAO8jS8RNYfBeRNg6tzTgt87PMK9zvN1
mzT9W+/4CBY6J1NG9Vuwx+PVw8EgHl4er1uh4vEV5uu97lMimrHiU3l63GMe
Ypd1uEqbUXFu5al5bVITjrlVGUUX8JAtGzrW1UpFlExDQevSJhAPcPqa63jw
0N01JGY7ipoF1wKznY0IdDHgHB7gYbmJZWbP8CheB1Y/GTrZgOWNrD6JaR5W
N75ZddFtDKnml6puOtbj70WLnytEpvBr5tidHibfvwndzY62/gIp//VpR+Wm
0E4uCT5wdRwicpH5yTp1eNllL9yoOYUzTfeMmr+Nw86ZGKU+8xle5KfuQZhC
QcVW3SC/CfyOJ2vIPaqB3SrbXHGJKSzpztKLb51AICWIwdaogU27hntdLw9y
tw8FJ2ymoSX9S59xxCfsq8mqy3jOw1KJiG0xgTRMvNd501tQjeXjorEpnjzw
BsPU4kg0rHTaYS5BrMKfM/HWeTt5kA3cZ5+jTEfac2KuGp9bcwarDxL5+m+3
iZU7xNerCf1/PM+yP0K+aL353BcuxAT8t+1toiOeRu9tYFdizUtC78ZoLsoX
X2/tlpsEnbPzoAW1Atp2frLmJ7hojPY3zL8yicdWmyRSG8txLC+nzFGGiwti
p/5qrpxEgJoKY0/mB+RpbZ8508tB4t/5PQbiDDxIUt5z0r0MhUkq93encHDl
++eUhdMM1FbdS0pcX4rcxdfFPHsOLB/pfd/yigFF0uljOlUluEl8uvoqn1d+
JMPed7MMMNycnwXtL4anqWRhYS8ba09yyvP3MeEXFbcjL/8tnAo9+rIes3Fz
LqZyXQwTj174GLiNFEJCfFhr7wk2Kn4vy1roZyKBXGsXsywPXpcEA66Js0HJ
Lh45r8LCq0brzRTCS/znEJBhVMdC9TmPlMM+LNRaXxH/71smpszEE4Nu8OsE
d7ytrOTrzJKGuuwtyUg91bbKdJAJ8wFL74flLGi2EC8XaT0F0X/gWNJuJgSJ
hgYf+PpD9bud2HwsDZ7nnH84JzOgsFVNcXcxCz8FTty8dycdrnLVYT6zk+ju
C928roiFp/otulXumVjPe+SYeXwSGhVhB/56zcLhLntj+adZqJO4qlmVQ4eu
zYg7N5uFKZfIP5t7noOtZ5kU84cG7ZqjXoxnLAjbiMVmK75AUuYct9OKhqD2
JcrmfL/yhla6M9z9JSJDRq6YZU7gsxGOLI1jQVdZJpT4NgdfaWvnwrnjeDhZ
m6UTyYLGLDH4/fwrpO5XMdxuMA7mnHlnDT+nXRONuKC9+zVWzquT2oLHkJXB
Da+8zoKLyMGLWkF5eLP2rlxb1SjGfIsslbxY6DV6sTm3Ih+rPd/vCv5Jxd8b
q8umz7NwRNb/aNJcAZb99FwnuJ0K23UzVjqnWVDKszed0y6CfZFPwuPKEWw/
szH+61EW5sRz66suvME2nbZ7/4oMY+mzoG+LpiyMDAvR54++xYNytehI40Gs
XM7pj9/BgqdOetpn2lt4nfJVDLTvhwvd7U2KKn8/Vxm57A15B/erCjozNr2o
UDcgrZFn4XG56YCndDGM5suEff70oL/lx6CzNAt51VofrJ8TYLK+dsg8owe3
0z+0FEmwcKNeLOiAbS2eCD4v2rW3BxVNAp9FRPn3yF6pfKqyHvp32Md+9HVj
8uEDmusiE5LVTf1sQhOsL0zqGHt34/TSvS7NP5iQYR6TPBlERM1uDW6uQDf+
6lO22TXDxKplk9T9S0m4dCjMpv9BF6bJ//Dy+H6xaXlQ6DuDdizfv03BQboL
N57GWqvSmMiov3XLypHC90lfm3ISOuHlIvw6f4SJNBN/1y6/DtBFVg2prOgE
+exdOcM+fp7/LVLldLsTwvSwnM1hHRBPnCK2Upgo1dFVjbrfhUzhhAAigwJF
40OMy0QmRt/npKdH8vPNNTHrDZYUTHkTnkjWM0He4jOVfqsHm05FMWjp7ZB7
m7lYVc3E8ZIrcL7Wi5p33poHKGQ8dfc5cq2ciYmbhqlRbn1gNW4YHjhEQotv
2/OdfL97fLu3SalVP1odxrxzMlphkxSmvZjPxGrzxozTBgMwZCuJrSO3YPUf
X9mOl0x4PmMKDSsMIlQl++Favm5wMwkRRRlMmGUtoaf+N4ipN7mGTrENiG+K
ffk4hQn7hLU5Y0NDOGifVkFMbYQKh+FJDWPi5weQzgqPQDFA64zwvSaUpffc
Ur/IhEpeyp4l/Px25wJb/9qpZjyRllT3PcqEwkezrVu2UJF+1uefYtEWzJ5r
LqjU488n5klkezEVG53eRrzNaMHitQZrQTkmnsrE++00HUXtlyVHWRuJuK3v
cNFikYFVvk65Qa2jiFCeLL4RTURDi5/+Qxqfh9WKUQ12Y3i8ILNbm0rEftMC
sU4iAwLlhWI7x8bA+rCyKUapFQxVcz25YgY2bLU+POYxjpXPbPzYlq0IebxP
+CyfN9JMx0P02XFonzii6+TSiuo959pfhTKQYe1obBsygYU3Y1+b+N8byDvZ
024MBKS5iB0UoeHqDEn86+FWaMeo5e85wsCRw2nhdQ9oyF3eYiG3sRXhIhHu
kbr8eqmPdVRpOjaIFyy8HyHioNT9kF5ZBu4N2tnmPaXjz8Zzy/PvEqGw4qL5
toVJrDMv8dTk5yL567WW2dJErIHtptCJSaygqi3759UkDoUE3RyLaEFFYPbV
npZJGFjlb7qrxcDNem9VneFmJM+VxOm943Nx7aHqqyUM/H//r/4HfROKuw==

              "], {{
                Rational[-15, 2], -75}, {
                Rational[15, 2], 75}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], -75}, {
                  Rational[-15, 2], -75}, {
                  Rational[-15, 2], 75}, {
                  Rational[15, 2], 75}, {
                  Rational[15, 2], -75}}, {{
                 7.5, -75}, {-7.5, -75}, {-7.5, 75}, {7.5, 75}, {
                 7.5, -75}}]]}, {
              CapForm[None], {}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                LineBox[{{7.5, -75.}, {7.5, 75.}}], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]]}, StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{7.5, -75.}, 
                    Offset[{4., 0}, {7.5, -75.}]}, {{7.5, -37.5}, 
                    Offset[{4., 0}, {7.5, -37.5}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 37.5}, 
                    Offset[{4., 0}, {7.5, 37.5}]}, {{7.5, 75.}, 
                    Offset[{4., 0}, {7.5, 75.}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False], 
                   StyleBox[
                    LineBox[{{{7.5, -67.5}, 
                    Offset[{2.5, 0.}, {7.5, -67.5}]}, {{7.5, -60.}, 
                    Offset[{2.5, 0.}, {7.5, -60.}]}, {{7.5, -52.5}, 
                    Offset[{2.5, 0.}, {7.5, -52.5}]}, {{7.5, -45.}, 
                    Offset[{2.5, 0.}, {7.5, -45.}]}, {{7.5, -45.}, 
                    Offset[{2.5, 0.}, {7.5, -45.}]}, {{7.5, -30.}, 
                    Offset[{2.5, 0.}, {7.5, -30.}]}, {{7.5, -22.5}, 
                    Offset[{2.5, 0.}, {7.5, -22.5}]}, {{7.5, -15.}, 
                    Offset[{2.5, 0.}, {7.5, -15.}]}, {{7.5, -15.}, 
                    Offset[{2.5, 0.}, {7.5, -15.}]}, {{7.5, -7.5}, 
                    Offset[{2.5, 0.}, {7.5, -7.5}]}, {{7.5, 7.5}, 
                    Offset[{2.5, 0.}, {7.5, 7.5}]}, {{7.5, 15.}, 
                    Offset[{2.5, 0.}, {7.5, 15.}]}, {{7.5, 15.}, 
                    Offset[{2.5, 0.}, {7.5, 15.}]}, {{7.5, 22.5}, 
                    Offset[{2.5, 0.}, {7.5, 22.5}]}, {{7.5, 30.}, 
                    Offset[{2.5, 0.}, {7.5, 30.}]}, {{7.5, 45.}, 
                    Offset[{2.5, 0.}, {7.5, 45.}]}, {{7.5, 45.}, 
                    Offset[{2.5, 0.}, {7.5, 45.}]}, {{7.5, 52.5}, 
                    Offset[{2.5, 0.}, {7.5, 52.5}]}, {{7.5, 60.}, 
                    Offset[{2.5, 0.}, {7.5, 60.}]}, {{7.5, 67.5}, 
                    Offset[{2.5, 0.}, {7.5, 67.5}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}, StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"-\[Pi]\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -75.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"-\[Pi]/2\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -37.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"0\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"\[Pi]/2\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 37.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"\[Pi]\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 75.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], {"GraphicsLabel"}, 
                   StripOnInput -> False]}, {"GraphicsTicks"}, StripOnInput -> 
                 False], {{
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4]], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4], 
                   Opacity[0.3]]}}, StripOnInput -> False]}, {"GraphicsAxes"},
               StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
            PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 150}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{
                   InterpretationBox[
                    RowBox[{
                    TagBox["ColorDataFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"MidShiftBalancedHue\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"MidShiftBalancedHue\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Class: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ThemeGradients\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ColorDataFunction[
                    "MidShiftBalancedHue", "ThemeGradients", {0, 1}, Blend[
                    "MidShiftBalancedHue", #]& ], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], "[", "#1",
                    "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "150"}], ",", 
           RowBox[{"\"ColorFunctionShading\"", "\[Rule]", "None"}], ",", 
           RowBox[{"OpacityFunction", "\[Rule]", "None"}], ",", 
           RowBox[{"\"OpacityFunctionTicks\"", "\[Rule]", "None"}], ",", 
           RowBox[{"\"OpacityFunctionSize\"", "\[Rule]", 
             RowBox[{"Scaled", "[", "0.5`", "]"}]}], ",", 
           RowBox[{"\"OpacityFunctionRange\"", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], ",", 
           RowBox[{"Charting`TickLabels", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "\"-\[Pi]\"", ",", "\"-\[Pi]/2\"", ",", "\"0\"", ",", 
                 "\"\[Pi]/2\"", ",", "\"\[Pi]\""}], "}"}]}], ",", 
           RowBox[{"Ticks", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.`", ",", "0.25`", ",", "0.5`", ",", "0.75`", ",", 
                    "1.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    FractionBox["1", "20"], ",", 
                    FractionBox["1", "10"], ",", 
                    FractionBox["3", "20"], ",", 
                    FractionBox["1", "5"]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox["1", "5"], ",", 
                    FractionBox["1", "4"], ",", 
                    FractionBox["3", "10"], ",", 
                    FractionBox["7", "20"], ",", 
                    FractionBox["2", "5"]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox["2", "5"], ",", 
                    FractionBox["9", "20"], ",", 
                    FractionBox["1", "2"], ",", 
                    FractionBox["11", "20"], ",", 
                    FractionBox["3", "5"]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox["3", "5"], ",", 
                    FractionBox["13", "20"], ",", 
                    FractionBox["7", "10"], ",", 
                    FractionBox["3", "4"], ",", 
                    FractionBox["4", "5"]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox["4", "5"], ",", 
                    FractionBox["17", "20"], ",", 
                    FractionBox["9", "10"], ",", 
                    FractionBox["19", "20"], ",", "1"}], "}"}]}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.900001265819786*^9},
 CellLabel->"Out[73]=",
 CellID->10573928,ExpressionUUID->"535fe645-eb41-4d5f-8f6f-7739486047cf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Series expansion at the origin:", "MathCaption",
 CellID->4255939,ExpressionUUID->"93e4cba2-e9f6-40ac-b35c-d5b724101b4c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"Subfactorial", "[", " ", "x", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "0", ",", " ", "2"}], "}"}]}], "]"}], "//", 
   "Normal"}], "//", "FullSimplify"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->340278271,ExpressionUUID->"b923682e-3aca-42d6-ae7b-5bea08cf7d3b"],

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{
   FractionBox["1", "2"], " ", "\[Pi]", " ", "x", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "+", 
     RowBox[{"\[Pi]", " ", "x"}]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "\[ExponentialE]"], 
   RowBox[{"x", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "+", 
         RowBox[{"\[Pi]", " ", "x"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"\[Pi]", "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"ExpIntegralEi", "[", "1", "]"}]}]}], ")"}]}], "+", 
      RowBox[{"x", " ", 
       RowBox[{"MeijerG", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "}"}], ",", 
         RowBox[{"-", "1"}]}], "]"}]}]}], ")"}]}]}]}]], "Output",
 CellLabel->"Out[1]=",
 CellID->394553506,ExpressionUUID->"5b167192-ee4c-429e-9de3-8b7bd368992c"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "c7278d58-7ebc-4728-9c75-f93ffaf04589"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->34228752,ExpressionUUID->"d4de0650-3190-42b0-9c31-770d4431893d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Series expansion at ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Infinity"]], "paclet:ref/Infinity"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "eb9615a7-0b52-4df5-bb08-59f9cc6b4cbb"],
 ":"
}], "MathCaption",
 CellID->758466417,ExpressionUUID->"e46f27bf-79ee-4660-8f1d-262f0ce49783"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"Subfactorial", "[", " ", "x", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "\[Infinity]", ",", " ", "2"}], "}"}]}], "]"}], "//",
    "Normal"}], "//", "FullSimplify"}]], "Input",
 CellLabel->"In[74]:=",
 CellID->11744335,ExpressionUUID->"493e10ca-749f-4655-bf54-450d4805f0c7"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "x"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "x"}], ")"}]}], 
   SuperscriptBox["x", "2"]], "+", 
  RowBox[{
   FractionBox["1", "144"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "1"}], "-", "x"}]], " ", 
   SqrtBox[
    FractionBox["\[Pi]", "2"]], " ", 
   SuperscriptBox["x", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["3", "2"]}], "+", "x"}]], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"24", " ", "x", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"12", " ", "x"}]}], ")"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.9000012793448853`*^9},
 CellLabel->"Out[74]=",
 CellID->112085041,ExpressionUUID->"220c8eb9-f074-4eb2-b14f-ef14ba24b8cf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Now that we can count a derangement, let's discuss partial derangements. We \
allow the number of fixed points to be a nonzero value.\
\>", "MathCaption",
 CellChangeTimes->{{3.9000016559805746`*^9, 3.9000016822010574`*^9}},
 CellID->732162013,ExpressionUUID->"897e261b-9f80-4bc1-94ea-4446dee6daa6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"randomSmallSet", "=", 
  RowBox[{"RandomSample", "[", 
   RowBox[{"hazelRainbowPalette", ",", "4"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.900004576552956*^9, 3.900004589487993*^9}},
 CellLabel->"In[24]:=",
 CellID->244982983,ExpressionUUID->"1bd0426c-e96a-4fa5-996a-a31cc35b220b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.6713375885659421, -0.17833924308420873`, -0.26467794346262646`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7621596783781963, -0.3310170840401606, 0.08359158699165539]|>,
    "LUVColorSwatchTemplate"]}], "}"}]], "Output",
 CellChangeTimes->{{3.9000045898719516`*^9, 3.900004594463586*^9}},
 CellLabel->"Out[24]=",
 CellID->851438496,ExpressionUUID->"00a28877-87a4-43be-be10-dadca77222c0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Now we can find permutations with 2 fixed points. I have to apply Rasterize \
to build the documentation without errors.\
\>", "MathCaption",
 CellChangeTimes->{{3.9000045974112844`*^9, 3.9000046281791945`*^9}},
 CellID->28447423,ExpressionUUID->"9b2c532d-49e8-4d07-98f6-b28566e30386"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"MultisetPartialDerangements", "[", 
   RowBox[{"randomSmallSet", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.900004610471946*^9, 3.900004634103441*^9}},
 CellLabel->"In[25]:=",
 CellID->260451403,ExpressionUUID->"ef94b61b-9733-45ee-802b-860d2c27da03"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnTFuE0EYhSNoKElHyx1S0FJFtEHIRRoSCNE2iRSQUC5gaTsKitzAJ/AJ
UrnzBXyD9JRmYCXLSrLrf+ZfP+/7/T4tUUCjnfG89/75LZzN2/Prk28vDg4O
vr9KX07Ofr6/uTm7/fg6/eXT1ffq8uri64erHxeXFzfvzl+mf3yT/vxJ3/z7
fimEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
7AGLxWI0GlVV5Rwj8DSiJHW2cXOJPlik+34i3fcT6b6fSPf9xKJ7ljfS4Pl8
XjBm/Pk067Ispo0v49OsyzPX6fg263LNdT3Oup7eIemS1PGsoY02YyB19++P
HS6PBdedKoN2/B7D647MRdTawph3rlzY4apjO9AdWHuhZy7Qz36PWXS3e+P4
+LhsTFrb7FdtvPxN/u9Zbbz8DVg9mxovf4NRT2bGq814FgULaLstUvde9scI
ncci686WQSO9eAysOzIXUWsLY97pcmGEro6hdQfWXuiZC/RzLx4r7sx7vJWa
/IE0GJGbvaAHDWPxpzscrXOxeUxNPl1tYcw7XS6M0NUxNflq8ttQk18GXYMR
udkLetAwFn+6w9E6F5vH1OTT1RbGvNPlwghdHVOTrya/DTX5ZdA1GJGbvaAH
DWPxpzscrXOxeUxNPl1tYcw7XS6M0NUxNflq8ttQk18GXYMRudkLetAwFn+6
w9E6F5vH1OTT1RbGvNPlwghdHVOTrya/jY1j5vN5VVXdj9bpGKMmfyANhkXH
LLpvGPUgpvNYZN3ZMmikF4+BdQ/bgLE1+WDd6XJhhK6OoXVXkz+MJt/ZnzdM
JpM04OHhoeMmHWPU5A+kwUjqJI2SUp6VrNNtjKgHMZ3HIuvOlkEjvXgMrHvY
BoytyQfrTpcLI3R1DK27mvxhNPkW3Y1jNj5ps22M/4Xc3d0Zres3g30uv8kz
5urDeEmd7ndq9vWs6DAGUnf//kT12DK27lQZRHpsCdcdmYuotYUx71y5GKjH
GHUH1l7omQv0cy9N/kbdjWOWu/tMftqxg//Udb1xAU4zZM3lNHneXNv/TH7W
eiy3Reru3J+oHmuIrDtPBpEeawDrjsxF1NrCmHeiXAzXY4y6A2sv9MwF+nk4
n8l33sr5Qu7v75tNsyzAaYasuZwmz5tr+01+1nost0Xq7tyfqB5riKw7TwaR
HmsA647MRdTawph3olwM12OMugNrL/TMBfpZTf6K0WiUNq2qqo0L8B+O9rn8
wcyYC/J0Hft6LLdF6u7fn6geW8bWnSqDSI8t4bojcxG1tjDmnSsXA/UYo+7A
2gs9c4F+VpO/WCzqum52LJHeIm1cQLEZCuYqNnnJXNts8gvWY7ktUvfi/Ynq
sXUi686QQaTH1gHrjsxF1NrCmHeKXAzdY4y6A2sv9MwF+nmATf7Gj+4/O6b4
haz+4+Pw8HDbP6BRMFexyUvmcjf5SZc2oQvWs06bMZC6F+9PVI+tCK47QwaR
HluB1x2Zi6i1hTHvFLkYuscYdQfWXuiZC/Szv8nv0D1rzOolHB0ddf80wbNj
nO+Ip9Op5eeCG5zv+LLmcr6TzZvL1+Sn6ZIubcYrWM86bcZA6u589x3PYw3x
dWfIINJjDTvRHZmLqLWFMe8UuRi6xxh1B9Ze6JkL9LOzye/W3T7mEZZftfBo
jJ6T3/buO2MuX5Pf4y/IaOPpFFGfZU3ksfi682QwC6fHdqJ72GeY8zwnfye6
E+UiC6I6thvd9Zz8XT8nv6Ab3xJpbVmXZ66kb9blmSv5NutyzXU9zro8c/UF
Unfk/kT1WF9AdQ+aQaTH+gK55qi1hTHvUXMRtY71BXLN0DMX6Gekx57yF5kx
Tp4=
    "], {{0, 14.399999999999999`}, {609., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{609., 14.399999999999999`},
  PlotRange->{{0, 609.}, {0, 14.399999999999999`}}]], "Output",
 CellChangeTimes->{3.9000046345577154`*^9},
 CellLabel->"Out[25]=",
 CellID->665869934,ExpressionUUID->"3877dd5f-675d-4c37-8b53-29a251e1e9ea"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Now let's look at pure derangements of a small multiset.", "MathCaption",
 CellChangeTimes->{{3.90000464235942*^9, 3.900004653154627*^9}},
 CellID->45932736,ExpressionUUID->"637fc695-73cb-4552-98d8-9248f77a06ad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"smallMultiset", "=", 
  RowBox[{"RandomChoice", "[", 
   RowBox[{"hazelRainbowPalette", ",", "6"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9000046541528826`*^9, 3.900004660799079*^9}},
 CellLabel->"In[27]:=",
 CellID->277919701,ExpressionUUID->"1cccdb83-a550-42c4-88ed-f4242236dad3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|
    "color" -> LUVColor[
      0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7621596783781963, -0.3310170840401606, 0.08359158699165539]|>,
    "LUVColorSwatchTemplate"]}], "}"}]], "Output",
 CellChangeTimes->{{3.9000046611866455`*^9, 3.9000046759391565`*^9}},
 CellLabel->"Out[27]=",
 CellID->7493652,ExpressionUUID->"1708b15a-774d-4a92-80ef-80968d8c6e03"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"MultisetPartialDerangements", "[", "smallMultiset", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.900004665260414*^9, 3.900004674170335*^9}, {
  3.900004730400802*^9, 3.9000047323641806`*^9}},
 CellLabel->"In[28]:=",
 CellID->87289371,ExpressionUUID->"7ebf39f8-6af9-4c48-a32c-48a0c392a1d6"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 138.}, {580.1999999999999, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{580.1999999999999, 138.},
  PlotRange->{{0, 580.1999999999999}, {0, 138.}}]], "Output",
 CellChangeTimes->{3.9000046808796973`*^9},
 CellLabel->"Out[28]=",
 CellID->172278896,ExpressionUUID->"829462fb-ae0e-4589-bdbf-2217a6caad16"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Let's count them.", "MathCaption",
 CellChangeTimes->{{3.90000468328094*^9, 3.900004685655489*^9}},
 CellID->372409988,ExpressionUUID->"3c5a780f-fdc5-4b8c-8bcb-435b5a6d7aa5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"MultisetPartialDerangements", "[", "smallMultiset", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.900004665260414*^9, 3.9000046905561113`*^9}},
 CellLabel->"In[29]:=",
 CellID->204572566,ExpressionUUID->"925ce5b7-47d0-482e-96e0-8b15ae8ba1ea"],

Cell[BoxData["29"], "Output",
 CellChangeTimes->{3.90000469089192*^9},
 CellLabel->"Out[29]=",
 CellID->349098055,ExpressionUUID->"3faee07a-3cc3-4ece-b24b-b549e78c5bc7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
To compute the number of partial derangements of a multiset, we integrate \
Laguerre polynomials.\
\>", "MathCaption",
 CellChangeTimes->{{3.9000046924566197`*^9, 3.9000047140265994`*^9}},
 CellID->705395511,ExpressionUUID->"c2c81c0c-bdc3-4711-b3bc-c58137a77e21"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EnumerateMultisetPartialDerangements", "[", "smallMultiset", 
  "]"}]], "Input",
 CellChangeTimes->{{3.9000047148197327`*^9, 3.900004737378882*^9}},
 CellLabel->"In[31]:=",
 CellID->197135344,ExpressionUUID->"b0f6e602-3517-4a9a-b45e-d7065b0491b0"],

Cell[BoxData["29"], "Output",
 CellChangeTimes->{{3.900004721481754*^9, 3.900004738000269*^9}},
 CellLabel->"Out[31]=",
 CellID->56352306,ExpressionUUID->"0ec3b7b5-b5e2-4562-9552-650a04c2098c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Let's compute the number of partial derangements for a multiset with too many \
elements to list the elements one by one.\
\>", "MathCaption",
 CellChangeTimes->{{3.9000047423650775`*^9, 3.900004767985769*^9}},
 CellID->311141836,ExpressionUUID->"7c91506f-eea1-48b1-8169-536253d8b897"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"randomMultiset", "=", 
  RowBox[{"RandomChoice", "[", 
   RowBox[{"hazelRainbowPalette", ",", "21"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.899749235227027*^9, 3.899749241947027*^9}},
 CellLabel->"In[32]:=",
 CellID->407433582,ExpressionUUID->"5f534a7e-390d-4c0b-857c-a24416cf9189"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7621596783781963, -0.3310170840401606, 0.08359158699165539]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.6713375885659421, -0.17833924308420873`, -0.26467794346262646`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.6713375885659421, -0.17833924308420873`, -0.26467794346262646`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.6713375885659421, -0.17833924308420873`, -0.26467794346262646`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.6713375885659421, -0.17833924308420873`, -0.26467794346262646`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"]}], "}"}]], "Output",
 CellChangeTimes->{3.8997492424170275`*^9, 3.899756392273822*^9, 
  3.8999993916985245`*^9, 3.900004547187874*^9, 3.9000047736281934`*^9},
 CellLabel->"Out[32]=",
 CellID->349274851,ExpressionUUID->"a05e8e23-80dd-42c5-b540-87c68a5ed59d"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "852f56d1-8303-4d11-9eea-db99a9410ed3"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->518217,ExpressionUUID->"a7e96a3c-e960-43f3-88d8-5c7ae8ed68df"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Count the derangements.", "MathCaption",
 CellChangeTimes->{{3.8997492487266345`*^9, 3.899749251993189*^9}},
 CellID->194380331,ExpressionUUID->"8a623dcc-c4a3-48bc-be74-66a4583c3e90"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EnumerateMultisetPartialDerangements", "[", "randomMultiset", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8997492528242707`*^9, 3.8997492577693224`*^9}},
 CellLabel->"In[33]:=",
 CellID->653333490,ExpressionUUID->"4fba9995-ef54-4903-a9ba-2f911c42fe97"],

Cell[BoxData["46907596048"], "Output",
 CellChangeTimes->{3.89974925874524*^9, 3.89999939540909*^9, 
  3.9000047760658417`*^9},
 CellLabel->"Out[33]=",
 CellID->531801412,ExpressionUUID->"1d2b0466-ff75-43c2-ad85-644d1bbf2847"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["This is the same as having 0 fixed points.", "MathCaption",
 CellChangeTimes->{{3.899749286926594*^9, 3.899749296237387*^9}},
 CellID->158717184,ExpressionUUID->"0fd1d169-6383-4dc2-aa7f-6035d1e4d12f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EnumerateMultisetPartialDerangements", "[", 
  RowBox[{"randomMultiset", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997492528242707`*^9, 3.8997492577693224`*^9}, {
  3.899749298277933*^9, 3.899749299605976*^9}},
 CellLabel->"In[34]:=",
 CellID->414886273,ExpressionUUID->"d9ee7595-8603-4b05-a772-0c5f5dc9ab1c"],

Cell[BoxData["46907596048"], "Output",
 CellChangeTimes->{3.899749300486975*^9, 3.899999397716818*^9, 
  3.900004780042593*^9},
 CellLabel->"Out[34]=",
 CellID->341067037,ExpressionUUID->"3a49f47a-410e-45c9-ab97-83477f2128c4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Now let's see a small example of partial derangements of a multiset.\
\>", "MathCaption",
 CellChangeTimes->{{3.90000478242581*^9, 3.9000047923958044`*^9}},
 CellID->36989666,ExpressionUUID->"303e33f6-8cef-4939-ba37-6f4b49478744"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"MultisetPartialDerangements", "[", 
   RowBox[{"smallMultiset", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.900004792895462*^9, 3.900004805476451*^9}},
 CellLabel->"In[35]:=",
 CellID->55412944,ExpressionUUID->"b85dd037-8b12-465b-80d7-f1e1f79b5fec"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
HgsP+RCiFivVyHjYFx7ygjqMvwoP+WCgFivVyM/DWHgsFdSSeELweT2fu+S9
EHe1E9jnqD0zrM893MBndz5rXkN3tbOSz1WxGEKcFZS3m1Hgph3VZ3eNVDNW
YJ+j9sywPjNUZ4nqM0M1Q/VdYoUtKG83o8BNO6rP7hqpZqzAPkftmWF9ZqjO
EtVnhmqG6rvECltQ3m5GgZt2VJ/dNVLNWIF9jtozw/rMUJ0lqs8M1QzVd4kV
tqC83YwCN+2oPrtrpJqxAvsctWeG9ZmhOktUnxmq7z5UH4/HYRhmv4p7Zghx
V1DebkZ5/RrAZ4bqO8YK7HPUnhnW5x5u4LM7nxmqNfvzLG9vbynKx8fH7J8y
hDgrKG83oyRe0i9JKFnJNfjMUH3HWIF9jtozw/rcww18duczQ7Vmf14iBVp6
fZ88Qa+vr4Vb0IwlL6iKfYllsBmrS0El8ZYabO16LuDzqj7L827T5y5NO7DP
UXtmWJ97DFf47M5nzWvoq3bO6/i8xErPOKUVfvnDOI4316AZS1hQdfuSyWA2
lsIz1VXrKTktPst9FubdrM8Kz+y59jlqzwzr8/rPVONzvLxHrZ2JlXyuiiVM
0Pv7+7TIkufDNWMJC6puXzIZzMZSGKqr1lNyWnyW+yzMu1mfFZq2a5+j9syw
Pq8/VONzvLxHrZ2JlXyuiiUvzM1mkxY5DMPNNWjGkv/TT8W+xDLYjKXz9o/y
9ZScFp/lPsvzbtNnnW+X+/U5as8M67PK2z/wOV7eo9bOeTWfq2I1J+h0Oo3j
OK0wkT4C3FyDZqzmgmrZV6sMxmOtOlQ3rKfktPgs97k578Z9XrVpB/A5as8M
6/OaQzU+x8t71Nq5ZiWfl2LNPr/dnKDLL9Kfnp7WfsC+IVZzQbXsq1UG47Hk
Q3VSbknyhvVcg8/r+dycd+M+y5t2bJ+j9sywPouHanz26LPmNXRROxfW83np
nM/Pz58fzxZ+6tnv9/nvWt4rlvBTat2+ZJ9SzcYSDtUpXFJuSeCG9VyDz+v5
LPzthFmfhU07vM9Re2ZYn2VDNT479VnzGrqonYlVfc7w+Z3YvNd39PWOSj/v
d137BeyzIfBZ7rO7d5PqxArvc9SeGdZnmRv47NRn3lN9r/5cSLrmVYeXWKlG
qg7Rvrbfqw4vsVKNVB2SWL3AZ7nPmnmPWju9iOpY1D6m6rOiG73AZ195j1o7
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
pWec0gq//GEcx5trECaoKpYwQWb3pZkvhWeqq9ZTclpH18ds3lV99tMTJvC5
i8/057vX6URgnx3lwmyd0p8zrCT5+/v7tMiS58OFCaqKJUyQ2X1p5kthqK5a
T8lpHV0fs3lX9dlPT5jA5y4+05/vXqcTgX12lAuzdUp/zrDet3E3m01a5DAM
N9cgbwLlseQJsrkvzXzpvP2jfD0lp/V1fWzmXdVnVz3hjM+dfKY/W6jTc2if
feXCZp3SnzN0l/x0Oo3jOK0wkT4C3FxDc4IaYjUnyPi+NPO16lDdsJ6S07q4
Psbzruqzh55wDT538Zn+fMc6vSawzy5yYbxO6c8ZUqzZ57ebxbv8Iv3p6Wnt
h94bYjUnyPi+NPMlH6qTckuSN6znGgs+N18f43lX9dlDT7iAz718pj/fsU4v
xPbZRS6M1yn9OUM65/Pz8+fHs4Wf5vb7ff67ln8VS/appyqW8DchZvelmS/h
UJ3CJeWWBG5YzzUWfBb+xsBs3lV99tATJvC5o8/05zvW6UR4n13kwnid0p9v
8vmd2FHf5ch7UOX5Eg7Va7+AfTaEo+tTRdQ6ddQT8Lmjz/Tnu9dpeJ8d5aIK
3lN9r/5cSHKp6hDF+rGtOiSx0jWvOrzsSzNfqR6rDkmsXkS9PlHrNGpP6EVU
n+nPvuq0F6rXJ2guVO879GcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMTpdNpsNsMw3Hsh
8ChMviXx1jg5PoMy+AyRwGeIxKo+L0U8Ho+ff77bfq86JGtQjfVjW3V4ibXd
fas6JLG+7rZVx+czJOWSeJI1LPFoPstzUY6mY77qFJ97xYrqmGad4nMefLbQ
M8uxPG/M8vLyMvvz5NJh/FV4yCXXi/Vje/g9Fh5y8dRipXocD/vCQz5U/zyM
hcfSDWJJPCGP5nOXXBSi6Zi7OsXnLrGiOqZZp/icB5+N9MxCLM8bVbGiSh5V
PIbq/Gmj+sxQbaRO8ZkhJANDdf60+OzLZ3e1w1DNUF0LQ3X+tFF9Zqg2Uqf4
zBCSgaE6f1p89uWzu9phqGaoroWhOn/aqD4zVBupU3xmCMnAUJ0/LT778tld
7TBUM1TXwlCdP21UnxmqjdQpPjOEZGCozp8Wn3357K52dIbq4/E4DMPsV3HP
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
fv7519226pCsYbf9XnWIYv3YVh1eYm1336oO0b7E+UrKJfEka1gCn1f0Oei+
5LWDz4+Z94p9ubqG+NwtF67yXo5q7Rj2eZaXl5fZnydvfx7GwkMu+WH8VXjI
xTv8HgsP+VCtFit5Ox72hYf8BiHP15J4QvB5RZ+D7qtL7eDzY+a9dF/eriE+
98mFt7wXolo7hn2uihVWcoZqGzcImrY/n4Pui6E6D3k30jNLYxkeQh7OZ295
L4ShOsPDSc5QbeMGQdP253PQfTFU5yHvRnpmaSzDQ8jD+ewt74UwVGd4OMkZ
qm3cIGja/nwOui+G6jzk3UjPLI1leAh5OJ+95b0QhuoMDyc5Q7WNGwRN25/P
QffFUJ2HvBvpmaWxDA8hD+ezt7wXwlA9y/F4HIZh9qu458CSM1TbuEHk9WsA
nxmq2+hSO/j8mHkv3Ze3a4jPDNUZ3A3V3X2e5e3tLUX5+PiY/dOwkjNU27hB
JPGSfklCyUquwWeG6ja61A4+P2beS/fl7RriM0N1BndDdXefl0iBll7fJ5f8
9fW1cAty8SpiiRNkM5Zccs18nf+8sHSpwdau5wI+r+tz0H11uUHg8wPmPeo1
PONzr1y4yrvR2rHq8xIrPeOUVvjlD+M43lyDULy6WLIEmY0llFwzXxP5Z5yq
1lNyWnzu4HPQfSk8U43P8fIe9RpO4HOfXPjJu93aMexzVSyh5O/v79MiS54P
F4pXF0uWILOxhJJr5msiH6hqPSWnxecOPgfdl8JQjc/x8h71Gk7gc59c+Mm7
3dox7HNVLPk/x2w2m7TIYRhurkE+pFXEEifIZiz5YKCZr3PBt3HL11NyWnzu
4HPQfem8/QOf4+U96jU843OvXLjKu9HaMexzVaxmyU+n0ziO0woT6SPAzTU0
i9cSqzVBxmM1S66Zr2uWxGtYT8lp8bmDz0H3tepQjc/x8h71Gl6Dz31y4SHv
1mvHsM9LsWaf326W/PKL9Kenp7Uf5m+J1Zog47GaJdfM14Wk3JLkDeu5Bp9X
9DnovuRDNT4/VN6jXsML+NwtFx7ybr12DPu8dM7n5+fPj2cLPznu9/v8dy2v
EX6aq4sl+zRnNpbwk6NOviZSuKTcksAN67kGn1f0Oei+hEM1Pj9a3qNewwl8
7pkLD3m3XjuGfc7w+Z3YYd8byXuq7/3O1bVfwD4bAp87+Bx0X8LawefHzHvd
vvxcQ3zumQs/ea/C0XuqFXwuJHlbdUhiJZeqDlGsH9uqw0us5G3VIdqXYr56
gc8dfA66L83a6QU++8p71GvYi7A+B827au049BkAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
fHE6nTabzTAM914IPAqTb0m8NU6Oz6AMPkMk8BkisarPSxGPx+Pnn3/dbasO
yRp22+9VhyTWdvet6hDt68e26nATS5yvpFwST7KGJSz4jGMWHNOMhc/dfNbM
e1SfxfvS9zlsz3SVd5v7kve69Xye5eXlZfbnaW0/D2PhIR+qD+OvwkM+VI+H
feEhL97D77HwkA88erF65GtJPCEWfMYxI45pxsLnPj5r5j2qzz32pexz2J7p
Le8G99Wl163kc1UshmpnxeutoBhCcCwXi6E6e9qwPjOE2NgXQ/Vj5t3gvhiq
G2CofsCBhyEEx3KxGKqzpw3rM0OIjX0xVD9m3g3ui6G6AYbqBxx4GEJwLBeL
oTp72rA+M4TY2BdD9WPm3eC+GKobYKh+wIGHIQTHcrEYqrOnDeszQ4iNfTFU
P2beDe7L0VB9PB6HYZj9Ku6Zodpd8XorqLx+DdjxGceMOKYZC58ZqiPtS9nn
sD3TW94N7qtLr+vu8yxvb28pysfHx+yfMlQ7K15vBZXES/olCSUrucaOzzhm
xDHNWPjMUB1pX8o+h+2Z3vJucF9del13n5dIgZZe3yffyOvra+EW5AkqjyUv
3op9iSU3GqtHQSXxlhps7XouGPEZxyw4hs8ufdbMe1SfewxXyj6H7Zmu8m5z
X12G6jV8XmKlZ/bSCr/8YRzHm2sQJqgqlrB46/Ylk9xurPWfQa1aT8lpNX3G
sbs7hs9efdbMe1Sf13+murvPYXumn7yb3ZfCM9XNPlfFEm7k/f19WmTJ8+HC
BFXFEhZv3b5kktuNtf4QUrWektNq+oxjd3cMn736rJn3qD6vP1R39zlsz/ST
d7P7Uhiqm32uiiXfyGazSYschuHmGuQ3tfJY8n9mqtiXuLkZjaXytoTy9ZSc
VtNnHLPgGD679Fkz71F9Vnn7R1+fw/ZMV3m3uS+dt3+0+VwVq3kjp9NpHMdp
hYn0EeDmGpoT1BCruXhb9tUqufVYaw4hDespOa2mzzh2R8fw2bfPmnmP6vOa
Q/VKPoftmR7ybnxfqw7VQp+XYs0+v928kcsv0p+entZ+6L0hVnPxtuyrVXLr
scRDSFJuSfKG9VxjwWccu6Nj+OzbZ828R/VZPFTr+xy2Z3rIu/F9yYfq9Xxe
Oufz8/Pnx7OFvwnZ7/f571peI/zUUxVL+Im4bl+yT452Y8mGkBQuKbckcMN6
rrHgM47d0TF89u2zZt6j+iwbqu/ic9ie6SHvxvclHKpX9TnD53di857q0df7
MP28o3LtF7DPhgj7Xl8cu/d7qvG5p8+81/fe+7qLz2F7pp+8m92XsNcp+FxI
WlvVIYmVrnnVIYmV6rHqEO3rx7bqcBNLMV+90PQZx3w5hs95VH3WzHtUnxX3
1YuwPTNo3jX3pdnrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAxOZ1Om81mGIZ7LwQehcm3
JN4aJ8dnUAafIRL4DJFY1eeliMfj8fPPt7tvVYdkDbsf26pDEuvrblt1iPa1
/V51uIklzldSLoknWcMSJnx2lYtywtYOPmfxlQubsXzVDj738tlX3itiuarT
9Xye5eXlZfbnydvxsC885EP14fdYeMib28/DWHjIJT+MvwoP+VCtF6tHvpbE
E2LCZ2+5KCRs7eBzFne5MBjLXe3gcxef3eW9NJa3Ol3J56pYDNXOJPdWUDRt
O7koJGzt4HMWd7kwGMtd7eAzQ3Uulrc6ZaimuZmOZVhyEz57y0UhYWsHn7O4
y4XBWO5qB58ZqnOxvNUpQzXNzXQsw5Kb8NlbLgoJWzv4nMVdLgzGclc7+MxQ
nYvlrU4ZqmlupmMZltyEz95yUUjY2sHnLO5yYTCWu9rBZ4bqXCxvdaozVB+P
x2EYZr+Ke2aodie5t4LK69eAIZ+95aKQsLWDz1nc5cJgLHe1g88M1blY3uq0
u8+zvL29pSgfHx+zf8pQ7UxybwWVxEv6JQklK7nGkM/eclFI2NrB5yzucmEw
lrvawWeG6lwsb3Xa3eclUqCl1/fJJX99fS3cgvyilceSS16xL7HkRmP1kDyJ
t9Rga9dzwYrPrnJB7eBzHl+5sBnLV+2c8bmTz77ybrN2zPbnJVZ6ximt8Msf
xnG8uQbhRauKJZS8bl8yye3GWv8Zp6r1lJxW1Wc/uaB2zvh8C0e5MBvLUe1M
4HMXnx3l3WztWO7PVbGEkr+/v0+LLHk+XHjRqmIJJa/bl0xyu7HWl7xqPSWn
VfXZTy6onTM+38JRLszGclQ7E/jcxWdHeTdbO5b7c1Us+T/HbDabtMhhGG6u
QX7RymPJ/zmmYl/i5mY0lsq3ccvXU3JaVZ9d5YLawec8vnJhM5av2jnjcyef
feXdZu1Y7s9VsZolP51O4zhOK0ykjwA319B80RpiNUvesq9Wya3HWlPyhvWU
nFbVZw+5oHbk1/AafHbnM7XTMFTjc7y8G68dy/15Kdbs89vNkl9+kf709LT2
g+gNsZolb9lXq+TWY4klT8otSd6wnmtM+OwhF9SO/BpewOe758J4LBe1cwGf
e/nsIu/Ga8dyf1465/Pz8+fHs4WfHPf7ff67ltcIP/VUxRJ+cqzbl+yTo91Y
MslTuKTcksAN67nGhM8eckHt/CUWPmdxkQvjsVzUzgQ+d/TZRd6N147l/pzh
8zuxeU/1T1/vjfTzjsq1X8A+GyLqe1CpnbtfQ3y2kwuzsRzVDj539NlR3uti
+alTBZ8LSd5WHZJY6TpUHZJYyduqQ7Sv7feqw00sxXz1QtXnoLkIWzv4nCVq
Lqgdeb56EdXnqHmPWqcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0MDpdNpsNsMw
3Hsh8ChMviXx1jg5PoMy+AyRwGeIRInPfZ1PZzsej59/vt19qzoka9htv1cd
bmL92FYdklhfd9uq4777Ssol8SRrWAKfY/jsq3Zi++yrtxiN5aon4HM3n6P2
Z1f7KvG5o/MvLy+zP0/ejod94SEfQg7jr8JD3nD0Yv3YHn6PhYd8MPh5GAsP
+Y1Pvq8l8YTgcwyf3dVOYJ/d9RaLsbz1BHzu43PU/uxtXyU+93LeguTuGk5p
LG+Dgea+AjdtfPY18DBU53HXWyzG8tYT8JmhOtK+GKqNN5zSWN4GA819BW7a
+Oxr4GGozuOut1iM5a0n4DNDdaR9MVQbbzilsbwNBpr7Cty08dnXwMNQncdd
b7EYy1tPwGeG6kj7Yqg23nBKY3kbDDT3Fbhp47OvgYehOo+73mIxlreegM8M
1ZH2pTNUH4/HYRhmv4p7ZggxI0Mh7m58ef0awOdIPrurncA+u+stFmN56wn4
zFAdaV8lPsudf3t7S2f4+PiY/VOGECMyFOLuxpfES/olCSUruQafI/nsrnYC
++yut1iM5a0n4DNDdaR9lfjcxfl0kqVX88klf319LVyePEFGY4llKI8lbxSa
+zr/eWHpUoOtXc8FfA7js6/aOYf22VdvMRrLVU8443Mvn6P2Z1f7Ohf4XPh3
SljpGad0xb78YRzHm2sQJshuLJkMVbGEjUJzXxP555eq1lNyWnz25bOj2pkI
7LOj3mI3lp+eMIHPfXyO2p/97GsiwBcV39/fp4tWsk5hguzGkslQFUvYKDT3
NZEPVLWektPisy+fHdXORGCfHfUWu7H89IQJfO7jc9T+7GdfEwGG6vOf36Wn
izYMw801yJuA0VhiGcpjyQcDzX2dCwQuX0/JafHZl8++aucc2mdfvcVoLFc9
4YzPvXyO2p9d7evsfKg+nU7jOE5XLJE+ktxcQ3OCrMdqlaEhVnOj0NzXNUvi
Nayn5LT47MtnF7VzTWCfXfQW67E89IRr8LmPz1H7s4d9XaM8VM8+m90s+eUX
+09PT2s/9G49VqsMDbGaG4Xmvi4k5ZYEbljPNfgcw2cXtXMhts8ueov1WB56
wgV87uZz1P7sYV8XMj5X/Z1C0h6fn58/Py4u/OS43+/Lv0cp/NRjN5bsk2NV
LOGnb519TaRwSbmlgmpYzzX4HMNnF7UzEd5nF73FeiwPPWECn3v6HLU/e9jX
RN7n8r9Ty+f3XSdvqw5J9HTNqw43sX5sqw5JrFT7Vccd99XxPyiwBD5799lR
7YT32VFvsRvLT0/A554+R+3PfvZV4rOC8wAAAAAAAAAAAAAAbfw/QFuFpg==

    "], {{0, 261.}, {580.1999999999999, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{580.1999999999999, 261.},
  PlotRange->{{0, 580.1999999999999}, {0, 261.}}]], "Output",
 CellChangeTimes->{3.9000048066882725`*^9},
 CellLabel->"Out[35]=",
 CellID->438918729,ExpressionUUID->"4b972b21-917e-4be9-8d74-2cb4fa1c83d8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Let's find how many partial derangements with 2 fixed points there are.\
\>", "MathCaption",
 CellChangeTimes->{{3.9000048096553173`*^9, 3.900004822467017*^9}},
 CellID->45514529,ExpressionUUID->"8aa7701c-9460-487b-9364-c83c1fb4ffa7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"MultisetPartialDerangements", "[", 
   RowBox[{"smallMultiset", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9000048233614645`*^9, 3.900004830293564*^9}},
 CellLabel->"In[36]:=",
 CellID->274862742,ExpressionUUID->"a0cd8854-8e3c-4822-ae69-0e89c5f2a429"],

Cell[BoxData["57"], "Output",
 CellChangeTimes->{3.9000048306078444`*^9},
 CellLabel->"Out[36]=",
 CellID->24836199,ExpressionUUID->"6af504c3-f53c-428f-9ff3-16df328f3264"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Let's use Laguerre polynomials to compute this.", "MathCaption",
 CellChangeTimes->{{3.900004832533116*^9, 3.9000048415502014`*^9}},
 CellID->21262637,ExpressionUUID->"9b718d6e-579b-424e-9e04-b0354691fec5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EnumerateMultisetPartialDerangements", "[", 
  RowBox[{"smallMultiset", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.9000048442870226`*^9, 3.9000048484418674`*^9}},
 CellLabel->"In[37]:=",
 CellID->3910711,ExpressionUUID->"5187a265-6ea1-4db6-903c-9cf260e35fe0"],

Cell[BoxData["57"], "Output",
 CellChangeTimes->{3.9000048494134235`*^9},
 CellLabel->"Out[37]=",
 CellID->453491458,ExpressionUUID->"4a2a06b0-4a13-43c1-9d8a-eba0899fc0a8"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Let's do a calculation for partial derangements where listing all \
permutations is infeasible.\
\>", "MathCaption",
 CellChangeTimes->{{3.9000048531386194`*^9, 3.9000048721539836`*^9}},
 CellID->959787810,ExpressionUUID->"db908ab1-467b-47ab-95ae-fc0e35d44b67"],

Cell[CellGroupData[{

Cell["Count partial derangements with 3 fixed points.", "MathCaption",
 CellChangeTimes->{{3.8997492626369176`*^9, 3.8997493081744137`*^9}},
 CellID->402703826,ExpressionUUID->"35192e33-4309-4b80-8cbf-178af813f842"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EnumerateMultisetPartialDerangements", "[", 
  RowBox[{"randomMultiset", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997492528242707`*^9, 3.8997493033590193`*^9}},
 CellLabel->"In[38]:=",
 CellID->1592074,ExpressionUUID->"12c89bd9-7460-4295-877e-cd07e7453f49"],

Cell[BoxData["827725861632"], "Output",
 CellChangeTimes->{{3.8997492970384502`*^9, 3.8997493128744383`*^9}, 
   3.899999408609227*^9, 3.9000048808359222`*^9},
 CellLabel->"Out[38]=",
 CellID->238165924,ExpressionUUID->"17366ec5-2fb8-4873-ab1c-76ee54ccd577"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Let's do a smaller example again. This time, let's list all the elements of \
the set.\
\>", "MathCaption",
 CellChangeTimes->{{3.8997496568247814`*^9, 3.899749668077464*^9}, {
  3.9000050484510508`*^9, 3.900005053261454*^9}},
 CellID->708478496,ExpressionUUID->"7964130f-02ba-4935-9672-d5101e21b288"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hazelRainbowPaletteSubset", "=", 
  RowBox[{"RandomSample", "[", 
   RowBox[{"hazelRainbowPalette", ",", "4"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8997496730949655`*^9, 3.899749684028263*^9}},
 CellLabel->"In[40]:=",
 CellID->450230421,ExpressionUUID->"62363314-f3d0-4d1e-b8ed-7a6aae943156"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.6713375885659421, -0.17833924308420873`, -0.26467794346262646`]|>,
    "LUVColorSwatchTemplate"]}], "}"}]], "Output",
 CellChangeTimes->{3.8997496845276875`*^9, 3.8997563967663803`*^9, 
  3.900005054316104*^9},
 CellLabel->"Out[40]=",
 CellID->26904101,ExpressionUUID->"5bde5e2a-8138-4175-8004-79c02ebbdedf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subsetRandomMultiset", "=", 
  RowBox[{"RandomChoice", "[", 
   RowBox[{"hazelRainbowPaletteSubset", ",", 
    RowBox[{"{", "7", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8997496909994445`*^9, 3.8997497185029545`*^9}},
 CellLabel->"In[41]:=",
 CellID->212638519,ExpressionUUID->"bd5e9cc7-94c3-4c12-983c-458b41a3f732"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.6713375885659421, -0.17833924308420873`, -0.26467794346262646`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"]}], "}"}]], "Output",
 CellChangeTimes->{{3.899749711969803*^9, 3.8997497188631163`*^9}, 
   3.899756398909689*^9, 3.900005055251453*^9},
 CellLabel->"Out[41]=",
 CellID->295663189,ExpressionUUID->"2cf2b7cf-23b3-40f9-ad31-1110fbf47faf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Let's find all the multiset partial derangements.", "MathCaption",
 CellChangeTimes->{{3.899749731291973*^9, 3.8997497408599186`*^9}},
 CellID->19185935,ExpressionUUID->"7c44a0f1-df14-4809-81c7-83e4aca601b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"MultisetPartialDerangements", "[", "subsetRandomMultiset", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8997497550334845`*^9, 3.8997497595874767`*^9}, {
  3.9000050579343615`*^9, 3.900005060752368*^9}},
 CellLabel->"In[42]:=",
 CellID->65654456,ExpressionUUID->"f9a6d67a-18d4-438c-a6a7-3d758e464c3d"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
HV/1AgAAAAAAAAAAgGn5D41vjSA=
    "], {{0, 33.}, {501., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{501., 33.},
  PlotRange->{{0, 501.}, {0, 33.}}]], "Output",
 CellChangeTimes->{3.8997497599187136`*^9, 3.8997564029297953`*^9, 
  3.9000050611659007`*^9},
 CellLabel->"Out[42]=",
 CellID->7503357,ExpressionUUID->"90ddec0e-6240-45be-961c-2715ae369df2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here is the count.", "MathCaption",
 CellChangeTimes->{{3.8997497625129347`*^9, 3.8997497653791437`*^9}},
 CellID->288178981,ExpressionUUID->"2717d955-37d1-48ef-844a-e8fe2b22ce5a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EnumerateMultisetPartialDerangements", "[", "subsetRandomMultiset", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8997497413474436`*^9, 3.8997497462356305`*^9}},
 CellLabel->"In[43]:=",
 CellID->153664891,ExpressionUUID->"d42a5e1f-865f-4a6a-a549-ec42ca8f66c4"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.8997497468018894`*^9, 3.9000050628432045`*^9},
 CellLabel->"Out[43]=",
 CellID->20629447,ExpressionUUID->"545060aa-00df-4b9d-8897-8735c140f3c5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
List partial derangements with 3 points, then take the length.\
\>", "MathCaption",
 CellChangeTimes->{{3.9000050743673725`*^9, 3.900005083269141*^9}},
 CellID->669234462,ExpressionUUID->"de0c5ad6-439b-4c27-86aa-fd4ea4668638"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"MultisetPartialDerangements", "[", 
   RowBox[{"subsetRandomMultiset", ",", "3"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9000050845194454`*^9, 3.900005096550699*^9}},
 CellLabel->"In[46]:=",
 CellID->223182031,ExpressionUUID->"5774c222-d31f-41ba-b064-1d0b0e847e68"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
db7IziIq5qJ2PxudL/lBLl92fPfc7/evj9sJT9qXy2X5+xp/0pKdtOO0StZl
tIfCT0vK1DXh5Jy9fWFJGM8zZCdfXUU9ZnW+yM4iKuaidj8bnS/hQS5rdhZ4
fWed63nUJVF3PY+6RFol6zLaQ+fbqOuNdeV+GeOshNV5L1lXUY9ZnS+ys4ii
uYjTYo979x5XIDsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFTIMQ9M0bdu+eyAA6zN525k8x83J
DhiG7ACkkTU7PsW+719//nn8GXVJxvD54xh1qdEq2MPjH59Rl5a65PPl7O1M
LhmDD7JjIzsl69KVU7KjMTu6PBahpWr9yZedWQ6Hw+zP3dhu3e/ASz5Bt19d
4CUPVDmtgj10eezOt8BLHl5d3vCZXAjZsZGdknWpyynZUZcddR4L1dK2/mTK
TpSW2QnSZoZACC8HObJTf13qckp21GVHncdCtbStPxzkbASKg1wl3mAzIjuV
1KUup2RHXXbUeSxUS9v6w0HORqA4yFXiDTYjslNJXepySnbUZUedx0K1tK0/
HORsBIqDXCXeYDMiO5XUpS6nZEdddtR5LFRL2/pT5iDX933btrNfHRoNT5A2
MwRCeBfma9nqCZAdS9lhk13oIdlRlx11HgvV0rb+rJ6dWc7ns1O53++z/2p2
grSZIRDCuzBfzuTO6s7wkpE8Q3YsZYdNdqGHZEdddtR5LFRL2/qzenZ8OCHf
q07khZxOp8AS5BNUqVbBHsrDW2ddq4TXmdy3ccSO5wHZMZOdknXpyulIdhRm
R5fH6uxhtdnxkelZBTfCjy+6rvt2DMIJqlerYA+F4a22rgLPyEWNJ+S2ivpT
r5bRHirK6QTZUZcdRR6rtoc1ZydKS1jI9XqdBhnyvJ9wgurVKthDYXirravA
QS5qPCG3VdSferWM9lBRTifIjrrsKPJYtT2sOTtRWvJCmqZxgwz5a3ryzbpS
rYI9lH+cXmddZb61Gj6ekNvq6k+lWkZ7qCunI9lRmB1dHquzhzVnJ0oruZBh
GLqum0bocMfOb8eQPEG1axXsYXJ4K68r60EuYTwht1XRn9q1jPZQRU6fITvq
sqPCY5X3sObs+LRmn8dLLuTxgeFut8v9EGPtWgV7mBzeyuuSH+ScvX2BShjP
M2THRnZK1qUipw/IjsbsqPBY5T2sOTu+e+73+9fH7YQn7cvlsvx9jT9pyU7a
9WoV7KHwt7Bq6xIe5Jycs7cvLAnjeYbs2MhOybpU5HSC7CjNjgqPVd7DmrOz
wOs761b5aDGQou+H0fYumkB4d9DsfOV+GeOshKL+1KtltIeKckp2lGZHkcfi
tPSsPwWyE4gbW9Ql0vpxjLrUaBXsoctj1KWlrpLztRZW+2M1OyXrsprTtbA6
73hM2XwpzA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAgCWGYWiapm3bdw8EYH0mbzuT57g52QHDkB2ANLJm
x6fY9/3rz83+MVyjWmb/ULJYy9nbmVwyBh9byw4e0zVfci2yozI7Rv+4vK66
8mVnlsPhMPtzN7Zb9zvwkk/Q7VcXeMkXN5NaLvvd+RZ4yTfZct5YQ8tnciFb
yw4e0zVfq2iRHX3ZKekxo/NV874TpWV2goxqsclykMNjCrS0rT9kR192tB14
rNbFQa7yxa1CLTZZDnJ4TIGWtvWH7OjLjrYDj9W6OMhVvrhVqMUmy0EOjynQ
0rb+kB192dF24LFaFwe5yhe3CrXYZDnI4TEFWtrWH7KjLzvaDjxW6ypzkOv7
vm3b2a8OjYYnyKgWm+yC1rLVE9hmdvCYrvlaRYvs6MuOtgOP1bpWz84s5/PZ
qdzv99l/NTtBRrXYZBe0nMmd1Z3hJSN5ZpvZwWO65msVLbKjLzvaDjxW61o9
Oz6ckO9VJ/JCTqdTYAnyCUJLvlBE1FXSG2sEypnct3HEjufBBrODx3TN1yob
H9nRl52SHjM6X9XuOz4yPavgRvjxRdd1345BOEFojeKFIq6ukt7I/6xC1HhC
bms1O3hM13wVeEaO7NSYnZIeMzpfNe87UVrCQq7X6zTIkOf9hBOE1iheKOLq
KumN/IGKGk/Iba1mB4/pmq8CBzmyU2N2SnrM6HzVvO9EackLaZrGDTLkr+nJ
Fxy05B/dR9RV0htFvj0UPp6Q21rNDh7TNV9lvrVKdqrLTkmPGZ2vmvedKK3k
QoZh6LpuGqHDHTu/HUPyBKH1IHmhSKmrpDdyBiphPCG3tZodPKZrvrIe5MhO
vdkp6TGj81XzvuPTmn0eL7mQxweGu90u90OMaD1IXihS6irpDXGgnL19gUoY
zzNbyw4e0zVf8oMc2VGZnZIeMzpfNe87vnvu9/vXx+2EJ+3L5bL8fY0/aclO
2miN4t/44uoq6Q1ZoJycs7cvLAnjeWZr2cFjuuZLeJAjO1qzU9JjRuer5n1n
gdd31q3y0WIgRd8PY1SLd3zNauV+GeOshNXs4DFd8yXUIjtas6PtfWv26iqQ
nUDc2KIukdaPY9SF1isu+1GXqK6S3iiotRZWs4PHdM1XSa21sDoXRbNT0mNG
50vjvgMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAADwdoZhaJqmbdt3DwRgfSZvO5PnuDnZAcOQHYA0
smbHp9j3/evPP48/oy7JGI5/fEZdEq2SdX3+OEZdarRU9dDZ25lcMgYfm8sO
HttYXWRHZXasapXMjlgrX3ZmORwOsz93Y7t1vwMveaC68y3wkh/kitXlfHv7
1QVe8kCV09LWQ5/JhWwuO3hse3WRHX3ZsapVMjtraGXKTpSW2UBpW0hr1NLW
QzYjfZuRNo9ZrYvs6MuOVS0Ocn42FyhtC2mNWtp6yGakbzPS5jGrdZEdfdmx
qsVBzs/mAqVtIa1RS1sP2Yz0bUbaPGa1LrKjLztWtTjI+dlcoLQtpDVqaesh
m5G+zUibx6zWRXb0ZceqFge5Ofq+b9t29qtDo+FAaVtIa9TS1sNlqyew0ezg
se3VRXb0ZceqlraD3OrZmeV8PjuV+/0++69mA6VtIa1RS1sPncmd1Z3hJSN5
ZqPZwWPbq4vs6MuOVS1tB7nVs+PDCfledSIv5HQ6BZYgD1S4Vsm65CavVEtV
D8evl1b5No7Y8TzYYnbw2MbqGsmOxuxY1SqZnTUOcjmy4yPTswpuhB9fdF33
7RiEgYrSKlmX0OT1aunp4cTyswpR4wm5rdns4LEt1TVBdvRlx6pWyezkf0Yu
OTtRWsJCrtfrNMiQ5/2EgYrSKlmX0OT1aunp4cSyUNR4Qm5rNjt4bEt1TZAd
fdmxqlUyO/kPcsnZidKSF9I0jRtkyF/Tk3/EHa5Vsi75QlqplqoejgHfHgof
T8htzWYHj22srpHsaMyOVa2S2SnyrdW07ERpJRcyDEPXddMIHe7Y+e0YkgOV
oFWyrmST166loYfP+EyeMJ6Q25rNDh7bRl3PkB192bGqVTI7OQ9ywuz4tGaf
x0su5PGB4W63y/3QaYJWybqSTV67loYePnD29gUqYTzPbC47eGwbdT0gOyqz
Y1WrZHbEB7l82fHdc7/fvz5uJzz9Xi6X5e9rPCP8zShKq2Rdwt9W6tXS0MMJ
J+fs7QtLwnie2Vx28Ng26pogO1qzY1WrZHZkB7ms2Vng9Z11bmxRl0TdZSTq
kmiVrMv5NupSo6Wnh7lfxjgrYTY7eGxLdZEdrdmxqlUyOzKtAtkBAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAqJBhGJqmadv23QMBWJ/J287kOW5OdsAwZAcgjazZ8Sn2ff/6888f
x6hLMobP48+oS42W1R4WrOv4x2fU9XoHZ29ncskYfJAdPBZdl6oekh2yU4+W
rpzmy84sh8Nh9ueu57dfXeAlD9St+x14yQNVTstqDwvW5fLYnW+Bly+8PpML
ITt4LLoubT0kO2SnEi11Oc2UnSgtAqUsUEbr4iC3DNmpxGOhdWnrIdkhO5Vo
qcspBzkCRV0THOSWITuVeCy0Lm09JDtkpxItdTnlIEegqGuCg9wyZKcSj4XW
pa2HZIfsVKKlLqcc5AgUdU1wkFuG7FTisdC6tPWQ7JCdSrTU5bTMQa7v+7Zt
Z786NBIodYEyWtcq4V22egJkB48l1qWth2SH7FSipS6nq2dnlvP57FTu9/vs
vxIoZYEyWtcq4XUmd1Z3hpeM5Bmyg8cS69LWQ7JDdirRUpfT1bPjwwn5XnUi
n6DT6RRYgrxplWpZ7WHBulYJrzO5b+OIHc8DsoPHUupS1cOR7JCdarR05XTM
kx0fmZ5VcCP8+KLrum/HIGxavVpWe1iwrgLPyEWNJ+S2Zucdj815zGoPJ8gO
2alES1FOJzJlJ0pLOEHX63UaZMjzfsKm1atltYcF6ypwkIsaT8htzc47Hpvz
mNUeTpAdslOJlqKcTmTKTpSWfBFomsYNMuSv6cmbVqmW1R4WrKvMt1bDxxNy
W7Pzjsc8HrPaw5HskJ1qtHTldMyWnSit5AkahqHrummEDnfs/HYMyU2rXctq
DwvWlfUglzCekNuanXc89mePWe3hM2SH7FSipSKnz2TKjk9r9nm85Al6fGC4
2+1yP1hYu5bVHhasS36Qc/b2BSphPM+QnY17zGoPH5AdslOPloqcPsiXHd89
9/v96+N2wpP25XJZ/r7Gn7Rkv63Uq2W1hwXrEh7knJyzty8sCeN5huxs3GNW
ezhBdshOVVoqcjqRNTsLvL6zzvU86pKouz5EXWq0rPawYF0uj1HX3/2/534Z
46yE2XnHY3Mei6tLTw/JDtmpSktRTgtkBwAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKBChmFomqZt
23cPBGB9Jm87k+e4OdkBw5AdgDSyZsen2Pf9688/fxyjLskYPo8/oy60ZrQK
ztfxj8+o6711OXs7k0vG4IPs5NMq6jGjOSU7y5idd6Nrgq49Ll92ZjkcDrM/
d324/eoCL7nxbt3vwEtuPJtaBefL+bY73wIv+UFOXpfP5ELITj6toh4zmlOy
s4zZeTe6Jqjb4zJlJ0oL4ynT0mbyknWxGanzMwc5DnKmsmO1LqM95CCXgFnj
YXIOcmQnCQ5yHORMZcdqXUZ7yEEuAbPGw+Qc5MhOEhzkOMiZyo7Vuoz2kINc
AmaNh8k5yJGdJDjIcZAzlR2rdRntoaKDXN/3bdvOfnVoxHjqtLSZvGRdy1ZP
gOxwkEvU0naQIzv65t3omqBuj1s9O7Ocz2encr/fZ/8V4ynT0mbyknU5kzur
O8NLRvIM2eEgl6il7SBHdvTNu9E1Qd0et3p2fDgh36tO5E07nU6BJcjNgFbJ
+ZKbvGRd49dLq3wbR+x4HpCdrFpFPWY0p2RnGbPzbnRN0LXHjXmy4yPTswpu
hB9fdF337RiEZkBrLDtfQpOXrGti+VmFqPGE3JbsyLWKesxoTsnOMmbn3eia
oGiPm8iUnSgtYdOu1+s0yJDn/YRmQGssO19Ck5esa2JZKGo8IbclO3Ktoh4z
mlOys4zZeTe6Jija4yYyZSdKS74INE3jBhny1/TkH8+iVXK+5CYvWdcY8O2h
8PGE3JbsyLWKesxoTsnOMmbn3eiaoGuPG7NlJ0oruWnDMHRdN43Q4Y6d344h
2Qxo/U2r4Hwlm7xkXc/4TJ4wnpDbkh25VlGPGc0p2VnG7LwbXRNU7HHPZMqO
T2v2ebzkpj0+MNztdrkfmETrb1oF5yvZ5CXreuDs7QtUwnieITv5tIp6zGhO
yc4yZufd6JqgYo97kC87vnvu9/vXx+2Ep9/L5bL8fY0/aclO9WiNZedL+GlJ
mbomnJyzty8sCeN5huzk0yrqMaM5JTvLmJ13o2uCij1uImt2Fnh9Z13Jd7YU
fReNVS1t79gpU1fulzHOSpAduRbvkVvBG2RnEbPzbnRNULTHFchOIK4PUZdI
6/gz6kJrRqvgfDnfRl1a6loLsiPXKuoxozklO99oWZ13o2uC1T0OAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AABeGYahaZq2bd89EID1mbztTJ7j5mQHDEN2ANLImh2fYt/3rz83+0d+jdbF
Hxn3zZeztzO5ZAw+yA51xaIrp2QHj31Tl9Ee1pydWQ6Hw+zPXR9uv7rAS960
W/c78JKbwWRdLo/d+RZ4ycOra758JhdCdqgrFnU5JTt4bKkuoz2sOTtRWuqa
FqpltC7Cy0FOxVxsvC51OSU7eGypLqM9rDk7UVrqmhaqZbQuwstBTsVcbLwu
dTklO3hsqS6jPaw5O1Fa6poWqmW0LsLLQU7FXGy8LnU5JTt4bKkuoz2sOTtR
WuqaFqpltC7Cy0FOxVxsvC51OSU7eGypLqM9rDk7f0ff923bzn51aFTYtFAt
o3UR3oX5WrZ6AmSHutJQl1Oyg8eW6jLawzqzM8v5fHYq9/t99l/VNS1Uy2hd
hHdhvpzJndWd4SUjeYbsUFca6nJKdvDYUl1Ge1hndnw4Id+rTuRNO51OgSXI
mxahZbQueXjrrGuV8DqT+zaO2PE8IDvUlaClK6cj2cFjy3UZ7WG12fGR6VkF
N8KPL7qu+3YMwqbFaRmtSxjeausq8Ixc1HhCbmvVY9Qlr0tRTifIDh5bqsto
D2vOTpSWsGnX63UaZMjzfsKmxWkZrUsY3mrrKnCQixpPyG2teoy65HUpyukE
2cFjS3UZ7WHN2YnSkm+gTdO4QYb8NT150yK0jNYl/zi9zrrKfGs1fDwht7Xq
MeqS16UrpyPZwWPLdRntYc3ZidJKbtowDF3XTSN0uGPnt2NIblqKltG6ksNb
eV1ZD3IJ4wm5rVWPUZe8LhU5fYbs4LEN9rDm7Pi0Zp/HS27a4wPD3W6X+8HC
FC2jdSWHt/K65Ac5Z29foBLG8wzZoS6TOX1AdvDYNntYc3Z899zv96+P2wlP
v5fLZfn7Gn/Skp3q47SM1iX8LazauoQHOSfn7O0LS8J4niE71GUypxNkB499
X5fRHtacnQVe31mn7p0toVpG6+LdQbPzlftljLMSVj1GXfK6FOWU7OCx7+sy
2sP6sxOI60PUJdI6/oy6qOsVl8eoS0tdJedrLax6jLrkdVnN6VrgMTzm1TLq
DQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAzDMPQNE3btu8eCMD6TN52Js9xc7IDhiE7AGlkzY5P
se/7159//jhGXZIxfB5/Rl0irZJ1FdQ6/vEZdYnqKjlfYi1nb2dyyRh8bC07
eGxr6w/ZUZkdoz3UVVe+7MxyOBxmf+76cPvVBV7ypt2634GX3Azl6iqo5bLf
nW+Bl3yTLTdfa2j5TC5ka9nBYxtcf8iOvuwY7aG6ujJlJ0pLXdNCtbQtpIGw
yXKQM7UZafNYqJa29Yfs6MuO0R6qq4uDnBEzcJCrY5NlM9K3GWnzWKiWtvWH
7OjLjtEeqquLg5wRM3CQq2OTZTPStxlp81iolrb1h+zoy47RHqqri4OcETNw
kKtjk2Uz0rcZafNYqJa29Yfs6MuO0R6qq6vMQa7v+7ZtZ786NCpsWqiWtoU0
EDbZBa1lqyewzezgsQ2uP2RHX3aM9lBdXatnZ5bz+exU7vf77L+qa1qolraF
NBA22QUtZ3JndWd4yUie2WZ28NgG1x+yoy87Rnuorq7Vs+PDCfledSJv2ul0
CixB3rQIrZJ1FdSSLxSVztcagXIm920cseN5sMHs4LGtrT8j2dGYHaM91FXX
mCc7PjI9q+BG+PFF13XfjkHYtDitknUV1BIuFPXOV/5nFaLGE3Jbq9nBY5ta
fybIjr7sGO2horomMmUnSkvYtOv1Og0y5Hk/YdPitErWVVBLuFDUO1/5AxU1
npDbWs0OHtvU+jNBdvRlx2gPFdU1kSk7UVryRaBpGjfIkL+mJ29ahFbJugpq
yT+6r3S+inx7KHw8Ibe1mh08trX1ZyQ7GrNjtIe66hqzZSdKK7lpwzB0XTeN
0OGOnd+OIblpKVol6yqolbxQ1D5fOQOVMJ6Q21rNDh7byPrzDNnRlx2jPVRR
1zOZsuPTmn0eL7lpjw8Md7td7gcLU7RK1lVQK3mhqH2+xIFy9vYFKmE8z2wt
O3hsI+vPA7KjMjtGe6iirgf5suO7536/f33cTnj6vVwuy9/X+JOW7FQfp1Wy
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
EJeRqEui5foQdanR+nGMutRoGe3hWpjNDh6jrsyQHWV7gdXsFNQCAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAMMMwDE3TtG377oEArM/kbWfyHDcnO2AYsgOQRkh21s2Xu1vf968/
P/7xGXVJxvD54xh1ibSOP6Mu6nqzlriHzt7O5JIx+NhcdvCzLi2ys4jZ7JDT
CrRCsrNivg6Hw+zPXUa68y3wkgfq9qsLvOTGu3W/Ay/5QmqzLm099JlcyOay
g591aZGdRcxmh5zWoRWSnbXytblAaVtIa6xLWw/ZjNggtqhFdhYxmx1yWocW
BzkjxrNal7YeshmxQWxRi+wsYjY75LQOLQ5yRoxntS5tPWQzYoPYohbZWcRs
dshpHVoc5IwYz2pd2nrIZsQGsUUtsrOI2eyQ0zq0yhzk+r5v23b2q0Oj4UBp
W0hrrEtbD5etnsBGs4OfdWmRnUXMZoec1qEVkh15vs7ns7vD/X6f/VezgdK2
kNZYl7YeOpM7qzvDS0byzEazg591aZGdRcxmh5zWoRWSnVXy5W7ie42JPFCn
0ylweHLjRWiJJ4i6dPVw/HpplW/jiB3Pgy1mBz/r0iI7i5jNDjmtQGsMyE7g
fxNCpmcVXMc+vui67tsxCI0XpyWbIOoqrZX/OZ+o8YTc1mx28LMuLbKziNns
kNN3a00Y+LLD9XqdmhYyTqHx4rRkE0RdpbXyb0ZR4wm5rdns4GddWmRnEbPZ
Iafv1powcJAbvz4zdE0L+Wt68gUnQks8QdSlq4djQFjCxxNyW7PZwc+6tMjO
ImazQ04r0BqVH+SGYei6buqYwx2Dvx1DsvFStFIniLp09fAZn8kTxhNyW7PZ
wc+6tMjOImazQ07fp/VM4YPc7LN2yYF6fIC52+1yP5yZopU6QdSlq4cPnL19
YUkYzzObyw5+1qVFdhYxmx1y+j6tBwvZifpvAnE17vf718f/hL8ZXS6X8O9i
CH+DiNOSneqpq7SWbDNycs7evvAmjOeZzWUHP+vSIjuLmM0OOX2f1sRydsL/
m1he30fnMhJ1SdSdl6IukdbxZ9RFXW/WkvVwxReZ+thQdvCzLi2ys4jZ7JDT
d2uFZKdAvgAAAAAAAAAAACCE/weqeMUk
    "], {{0, 261.}, {501., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{501., 261.},
  PlotRange->{{0, 501.}, {0, 261.}}]], "Output",
 CellChangeTimes->{{3.900005089830348*^9, 3.9000050975137625`*^9}},
 CellLabel->"Out[46]=",
 CellID->108341859,ExpressionUUID->"26c24063-b193-4e25-8705-ca95c0f121ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"MultisetPartialDerangements", "[", 
   RowBox[{"subsetRandomMultiset", ",", "3"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9000051009749923`*^9, 3.9000051100419436`*^9}},
 CellLabel->"In[47]:=",
 CellID->34464176,ExpressionUUID->"c098d751-1693-4fc3-9352-3e59c81c281a"],

Cell[BoxData["45"], "Output",
 CellChangeTimes->{3.9000051106366253`*^9},
 CellLabel->"Out[47]=",
 CellID->192324916,ExpressionUUID->"5080876d-b876-43a6-9d4f-88603f1c342b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
If we compute partials derangements with 3 fixed points, we will get 101 \
elements.\
\>", "MathCaption",
 CellChangeTimes->{{3.899749767505232*^9, 3.899749797173949*^9}},
 CellID->211204775,ExpressionUUID->"191491d7-28ae-49d2-b280-5df059491014"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EnumerateMultisetPartialDerangements", "[", 
  RowBox[{"subsetRandomMultiset", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997497413474436`*^9, 3.8997497462356305`*^9}, {
  3.8997497872156754`*^9, 3.8997497920646453`*^9}},
 CellLabel->"In[44]:=",
 CellID->16120653,ExpressionUUID->"8e17bd8e-879f-4b57-9eb8-7a3d90d9b447"],

Cell[BoxData["45"], "Output",
 CellChangeTimes->{{3.8997497893636208`*^9, 3.899749793416091*^9}, 
   3.900005065905396*^9},
 CellLabel->"Out[44]=",
 CellID->16473884,ExpressionUUID->"6f78bde4-a1c7-4ee4-9bde-c54a62434147"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
I will limit the output to 20 this time. This is the third argument.\
\>", "MathCaption",
 CellChangeTimes->{{3.899749811680395*^9, 3.8997498170165954`*^9}, {
  3.90000511775278*^9, 3.9000051213178015`*^9}},
 CellID->103140816,ExpressionUUID->"45da4802-5986-4cc2-b868-0661601cf182"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"MultisetPartialDerangements", "[", 
   RowBox[{"subsetRandomMultiset", ",", "3", ",", "20"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9000051229526443`*^9, 3.900005132206579*^9}},
 CellLabel->"In[48]:=",
 CellID->217632446,ExpressionUUID->"52cd852c-e0a5-43fb-8c93-eca7b7b5cb59"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
S62lwM/4WYVWQ28AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAMAj4zhut9uu6549EIDluXo7mLzGzckOOIbs
AJRRNTtzisMwPH6dP168wB8vbjmHXv94sVgr2DuYXDKGOVRkx+kfkqYueV3y
vY7s4LE4nKftz51JNpvN5NfDPJz674mXdNIaagUv9ftT4iU3Xrs5fH87fesT
L3lzZUtrzuRCVGSn5VpQl6m6FtnryA4ei8B52v7cydKikXtB43nV4jDiMHrB
umjk4uAxJR5LrcvaHNLI0chla1lrrlpqcRhxGL1gXTRycfCYEo+l1mVtDmnk
aOSytaw1Vy21OIw4jF6wLhq5OHhMicdS67I2hzRyNHLZWtaaq5ZaHEYcRi9Y
F41cHDymxGOpdVmbwzaN3DAMXddNfnToQiP3ksbzqhW3egGKssNhRF0zLLLX
kR08FoHztOW5M8l+vw8q5/N58l9p5F7QeF61gsmD1YPhJSO5R1F2OIyoa4ZF
9jqyg8cicJ62PHfmCEJzrzqRT9put0ssoaWW3Hg665Ibz6vW5cdLq+YOjtzx
3NCSnZZrQV2m6lrkkCU7eCwC52njc2eOSs8qhBF++UHf95+OoaWW0Hhq6xIa
z6vWlfizClnjSbmt23WnLlN1NXhGjuzgMc7TxudOlpZw0o7H43WQKc/7tdQS
Gk9tXULjedW6EhfKGk/Kbd2uO3WZqqtBI0d28BjnaeNzJ0tL/mvM7XYbBpny
1/Raask3N511yY3nVeuS8Omh9PGk3NbtulOXqbrafGqV7OAxztPJm1TKTpZW
8aSN49j3/XWEgdB2fjqGllrFxlNeV7HxvGrdM2fygvGk3NbtulOXqbqqNnJk
B49dOE+fce7MaU0+j1c8abdfGK5Wq9oPMRZoFRtPeV3FxvOqdSPYey5QBeO5
R0V2Wq4FdZmqS97IkR08FofztP25M3fP9Xr9+LidsPs9HA7xz2s8S0v4E4Ta
uoQ/hfnTuhLkgr3nwlIwnntUZKflWlCXqbqEjRzZwWOfwnna/tyJ8PjOuqbv
bOE9cjree+NPq/bLGCcl3K47dZmqS7jXkR089imcp886dxIJ85B1WdEKXsq6
rNQVvJR1oVUPt+tOXabqarnXLYXXtfBaF+epnnMHAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4OmM
47jdbruue/ZAAJbn6u1g8ho3JzvgGLIDUEbV7MwpDsPw+PWPt9+zLskYPt7f
si6Rlte6Gmq9ff3IukR1idcr2DuYXDKGOchOxbqczmHT7IjrIjsWs2Nrf87Q
MnWe1svOJJvNZvLrYc5P/ffES75Ap2994iUPlM+6GmqF7Pf7U+Il3yjk6zVn
ciFkp2JdTuewaXaWqIvsmMuOuf05VcvaeVopO1labhfIa11eDyMauShus+N0
Dmnk4rf1uu40csbWS3F2srTcLpDXurweRjRyUdxmx+kc0sjFb+t13WnkjK2X
4uxkabldIK91eT2MaOSiuM2O0zmkkYvf1uu608gZWy/F2cnScrtAXuvyehjR
yEVxmx2nc0gjF7+t13WnkTO2Xoqz8xPDMHRdN/nRoYvjBfJal9fDaIn1ilu9
ALJDI1eGuUaO7JjLjrn9OVXL2nm6eHYm2e/3QeV8Pk/+q9sF8lqX18NoifUK
Jg9WD4aXjOQeskMjV4a5Ro7smMuOuf05Vcvaebp4duYIQnOvOpEv0G63SyxB
PmkZWl7raqgl3yhartflx0ur5g6O3PHcIDt163I6h02zs8RhRHbMZcfW/qx0
vbRmZ45KzyqEEX75Qd/3n45BOGl5Wl7raqgl3CharteV+LMKWeNJua1bj7Ws
y+kcNs1O/ed8yI5CPxvan/Wul+LsZGkJF+h4PF4HmfK8n3DS8rS81tVQS7hR
tFyvK3GhrPGk3Natx1rW5XQOm2an/mFEdhT62dD+rHe9FGcnS0t+gG632zDI
lL+mJ5+0DC2vdTXUkv/qvuV6XRI+PZQ+npTbuvVYy7qczmHT7DT55B3Z0eZn
W/uz0vVSnJ0sreIFGsex7/vrCAOh7fx0DMWTVqLlta6GWsUbRcv1umfO5AXj
SbmtW4+1rMvpHDbNTs3DiOyo9bOJ/Vn7einOzpzW5PN4xQt0+4XharWq/WBh
iZbXuhpqFW8ULdfrRrD3XKAKxnMP2alYl9M5bJod8WFEdixmx8T+rH29FGdn
7p7r9frxcTthp304HOKf1/iDlqzTztPyWldDLeFPfG3W60qQC/aeC0vBeO4h
OxXrcjqHTbMjO4zIjtHsmNifta+X4uxEeHxnXZjzrEuiHuYh6xJpea2roVbI
ftYlqku2XrVfxjgp4dZjLetyOodNsyOri+wYzY6h/TlPy8552iA7AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAoZx3G73XZd9+yBACzP1dvB5DVuTnbAMWQHoIyq2ZlTHIbh8esf
b79nXZIxfLy/ZV1mtFrOodP1evv6kXU93iHYO5hcMoY5yI6P7Mg9prMu+XqR
HbKjpy5bOa2XnUk2m83k18PYTv33xEtuhtO3PvGSB6qdVss5dLpeIY/9/pR4
zYV3zuRCyI6P7CziMYV1LbJeZIfsKKnLXE4rZSdLy6sZ3AbK6XrRyMUhOzRy
s1o0clHIjq05NJdTGjkCpVrLWng5jMhOBHMHRKoWjVwUsmNrDs3llEaOQKnW
shZeDiOyE8HcAZGqRSMXhezYmkNzOaWRI1CqtayFl8OI7EQwd0CkatHIRSE7
tubQXE7bNHLDMHRdN/nRoYtfM7gNlNP1WiS8casXQHY8ZcfcAZGqtcR6kR2y
o6QuczldPDuT7Pf7oHI+nyf/1asZ3AbK6XotEt5g8mD1YHjJSO4hO56yY+6A
SNVaYr3IDtlRUpe5nC6enTmC0NyrTuSF7Ha7xBLkZlCq1XIOna7XIuENJp87
OHLHc4PsuMmO3GM661rkkCU7ZEdJXbZyeqmTnTkqPasQRvjlB33ffzoGoRn0
arWcQ6fr1eAZuazxpNzW61p4zY7QY2rravCMHNnRqOV0Dg3l9Eql7GRpCQs5
Ho/XQaY87yc0g16tlnPodL0aNHJZ40m5rde18JodocfU1tWgkSM7GrWczqGh
nF6plJ0sLXkh2+02DDLlr+nJNxylWi3n0Ol6tfnUavp4Um7rdS28ZkfuMZ11
tfnUKtlRp+V0Dm3l9FItO1laxYWM49j3/XWEgdB2fjqGYjNo12o5h07Xq2oj
VzCelNt6XQuv2Sn2mPK6qjZyZEevltM5NJHTeyplZ05r8nm84kJuvzBcrVa1
H5jUrtVyDp2ul7yRC/aeC1TBeO4hOz6yU+wx5XXJGzmyQ3b01GUipzfqZWfu
nuv1+vFxO2FXfzgc4p/X+IOWrKvXq9VyDp2ul7CRC3LB3nNhKRjPPWTHR3aE
P+mrrUvYyJEdsqOqLhM5vVI1OxEe31m3yK8WE2n5LpqmWrxH7tnvDqr9MsZJ
Ca9r4TU75t5PlaolWy+yQ3ZU1WUopw2yk0gYW9Yl0np/y7rMaLWcQ6frFfKY
dUm0lsLrWnjNTkuPefXGUnidH6/Z8XoWtJxDAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4ZBzH7Xbbdd2z
BwKwPFdvB5PXuDnZAceQHYAyqmZnTnEYhseve/3Du/yRX2PrJa4r2DuYXDKG
OciODy23OSU7UfCYBo9laJnaf+plZ5LNZjP59TDnp/574iVfoNO3PvGSL1Az
rZDHfn9KvOTh9bleS9Q1Z3IhZMeHltuckp0oeEyJx1K1rO0/lbKTpcUCEd5Z
LRq56G3droVTLbc5JTtR8JgSj6VqWdt/aOSUL1AibsNLIxe9rdu1cKrlNqdk
JwoeU+KxVC1r+w+NnPIFSsRteGnkord1uxZOtdzmlOxEwWNKPJaqZW3/oZFT
vkCJuA0vjVz0tm7XwqmW25ySnSh4TInHUrWs7T9tGrlhGLqum/zo0IUFIrwR
LWuNXNzqBZAdT1puc0p2ouAxJR5L1bK2/yyenUn2+31QOZ/Pk//KAhHeWS1r
jVwwebB6MLxkJPeQHU9abnNKdqLgMSUeS9Wytv8snp05gtDcq07kC7Tb7RJL
kE+aTi15eDPq8rpeS2wUweRzB0fueG6QHTdabnNKdqLgMQ0e07leizRyNbIz
R6VnFcIIv/yg7/tPxyCcNLVawvDm1eV1veo/55M1npTbul0Lp1puc0p2ouCx
p3tM7Xo1eEauODtZWsIFOh6P10GmPO8nnDS1WsLw5tXldb3qH0ZZ40m5rdu1
cKrlNqdkJwoee7rH1K5Xg0auODtZWvJNYLvdhkGm/DU9+aTp1JL/Oj2jLq/r
1eSTd+njSbmt27VwquU2p2QnCh7T4DGd69XmU6tl2cnSKl6gcRz7vr+OMBDa
zk/HUDxpyrWKw1tSl9f1qnkYFYwn5bZu18Kpltuckp0oeOyJHlO+XlUbOWF2
5rQmn8crXqDbLwxXq1XtBwuVaxWHt6Qur+slPoyCvecCVTCee8iODy23OSU7
UfDYEz2mfL3kjVy97Mzdc71ePz5uJ+y0D4dD/PMaf9CSddpqtYQ/heXV5XW9
ZIdRkAv2ngtLwXjuITs+tNzmlOxEwWNP9Jjy9RI2clWzE+HxnXW8H0au5fbd
QXbeI1f7ZYyTEm7XwqmW25ySnSh47Okey9Oys/80yE4iYc6zLpHW+1vWZUUr
5DHrEtXldb0a1rUUbtfCqZbbnJKduBYeM+Uxr/sPAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgBvG
cdxut13XPXsgAMtz9XYweY2bkx1wDNkBKCMlO8vmK9xtGIbHr3+8/Z51Scbw
8f6WdUm03r5+ZF1W6vK6XvK6gr2DySVjmENDdpr62avHTPm5ZV1kh7OAuupl
Z8F8bTabya+HeTj13xMv+aSdvvWJl9AMIY/9/pR4ycPbrC6v67VIXXMmF6Ih
O0397NVj1vzcsi6yw1lAXfWys1S+NASKRu4FTd6yLg4jGjktWtbmkOxwFlAX
jVwKNHIvaPKWdXEY0chp0bI2h2SHs4C6aORSoJF7QZO3rIvDiEZOi5a1OSQ7
nAXURSOXAo3cC5q8ZV0cRjRyWrSszSHZ4SygLs2N3DAMXddNfnToYnDSEiG8
ttZrkbriVi9AT3Zo5GjkqtZFdjgLqKteduT52u/34Q7n83m6EGuTlgjhtbVe
i9QVTB6sHgwvGck9erJDI0cjV7UussNZQF31srNIvsJN5l5jIp+03W6XODz5
pKVrycOrsy6v67VIeIPJ5w6O3PHcUJKdpn726jFTfm5Z14XscBZQV7XsJH5P
CpWeVQgz9uUHfd9/OgbhpGVpCcOrti6v69XgGbms8aTctuVaNPWzV4/Z8XPL
uq6QHc4C6qqRnfTvSaFSoI7H43XSUsYpnLQsLWF41dbldb0aNHJZ40m5bcu1
aOpnrx6z4+eWdV0hO5wF1PWyjdzlx+8Mw6Sl/DU9+aSla8l/na6zLq/r1eZT
q+njSblty7Vo6mevHjPl55Z1XcgOZwF1vWQjN45j3/fXGQuENvjTMRRPWoFW
cXiV1+V1vao2cgXjSblty7Vo6mevHrPg55Z13UN2OAuoy0QjN/msXfGk3X6B
uVqtaj9YWKBVHF7ldXldL3kjF+w9F5aC8dyjITtN/ezVYxb83LKuG2SHs4C6
Fs9O1vckEmpcr9ePj/8Ju9/D4ZD+WQxhV5+lJfwpTG1dXtdL2MgFuWDvufAW
jOceDdlp6mevHrPg55Z1XSE7nAXUVSM76d+Ty+P76MI8ZF0S9TAPWZdEK+Qx
67JSl9f1Eta14ItM53hudpr62avH7Pi5ZV1kh7OAuuplp0G+AAAAAAAAAAAA
IIX/A/i41Ng=
    "], {{0, 120.6}, {501., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{501., 120.6},
  PlotRange->{{0, 501.}, {0, 120.6}}]], "Output",
 CellChangeTimes->{3.9000051327835135`*^9},
 CellLabel->"Out[48]=",
 CellID->707156688,ExpressionUUID->"79c0e06f-8644-4bf8-b64e-76a87f188fe1"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Related Guides", "TutorialMoreAboutSection",
 CellChangeTimes->{{3.843042384656711*^9, 3.843042386024461*^9}},
 CellID->300332198,ExpressionUUID->"5f56aaf9-78db-4341-b909-8fecaee71b09"],

Cell[TextData[ButtonBox["Combinatorics",
 BaseStyle->"Link",
 ButtonData->
  "paclet:PeterBurbery/Combinatorics/guide/Combinatorics"]], \
"TutorialMoreAbout",
 CellChangeTimes->{{3.8997566937143073`*^9, 3.8997567173828583`*^9}},
 CellID->353617896,ExpressionUUID->"e9ca2037-ef5e-4655-9f9b-1a8ce38d4e44"],

Cell[TextData[ButtonBox["Functions I Understand in combinatorics",
 BaseStyle->"Link",
 ButtonData->
  "paclet:PeterBurbery/Combinatorics/guide/\
FunctionsIunderstandincombinatorics"]], "TutorialMoreAbout",
 CellChangeTimes->{{3.8997566937143073`*^9, 3.8997567890753345`*^9}, {
  3.899756865577198*^9, 3.8997568655792065`*^9}},
 CellID->822407248,ExpressionUUID->"30690779-ef18-4c4d-b9a2-4c115a23cab0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Tech Notes", "RelatedTutorialsSection",
 CellID->95960386,ExpressionUUID->"bb87d0f4-b7f3-472f-a5c1-133a17fc68da"],

Cell["XXXX", "RelatedTutorials",
 CellID->657441003,ExpressionUUID->"657bd0c0-a625-4084-a383-120fb375b3bb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Metadata", "MetadataSection",
 CellID->127671852,ExpressionUUID->"0eb62a5b-9663-49cf-b5e1-c26f21dde72f"],

Cell[TextData[{
 "New in: ",
 Cell["XX", "HistoryData",
  CellTags->"New",ExpressionUUID->"bab7ee90-0360-4842-a860-b7112857e620"],
 " | Modified in: ",
 Cell[" ", "HistoryData",
  CellTags->"Modified",ExpressionUUID->"4dc802a9-2f2a-44b2-841d-4ae17100b163"],
 " | Obsolete in: ",
 Cell[" ", "HistoryData",
  CellTags->"Obsolete",ExpressionUUID->"41852e3c-75aa-4481-b207-65535788d0ff"]
}], "History",
 CellID->120211482,ExpressionUUID->"5ecc98b4-4355-484b-89ee-c4dbfd47e69c"],

Cell[CellGroupData[{

Cell["Categorization", "CategorizationSection",
 CellID->412176238,ExpressionUUID->"e03e3233-73a0-43a4-92b6-b51e1bcdbccf"],

Cell["Tech Note", "Categorization",
 CellLabel->"Entity Type",
 CellID->244398777,ExpressionUUID->"94355122-d079-42ab-9312-727675d3c5af"],

Cell["PeterBurbery/Combinatorics", "Categorization",
 CellLabel->"Paclet Name",
 CellID->35632880,ExpressionUUID->"cf5119e0-ad0e-44e6-b3a0-73c68197d608"],

Cell["PeterBurbery`Combinatorics`", "Categorization",
 CellLabel->"Context",
 CellID->26538629,ExpressionUUID->"66a7dd64-42ba-441c-a876-a158a9e65fa4"],

Cell["PeterBurbery/Combinatorics/tutorial/Combinatorics", "Categorization",
 CellLabel->"URI",
 CellID->149680849,ExpressionUUID->"3fa411c9-52ba-4960-82cb-8c882396450d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Keywords", "KeywordsSection",
 CellID->13307797,ExpressionUUID->"d98ba340-4912-4f71-98e9-f6300faf4014"],

Cell["XXXX", "Keywords",
 CellID->559025098,ExpressionUUID->"090c59c6-c29f-4931-9cfd-7d217ea96b73"]
}, Closed]]
}, Open  ]]
},
WindowSize->{1141.2, 579.6},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules-><|"Paclet" -> "PeterBurbery/Combinatorics"|>,
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (June 3, 2023)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "TechNotePageStylesExt.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"38d9f4d4-8ca4-40c0-aa21-aeeec07b578b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 104, 1, 114, "Title",ExpressionUUID->"29863ea0-08dc-46b8-b497-cb6f5f528f0c",
 CellID->28422271],
Cell[687, 25, 274, 5, 25, "Text",ExpressionUUID->"c9cda3f0-8f4e-4867-9c22-5cb081f88c20",
 CellID->106321115],
Cell[CellGroupData[{
Cell[986, 34, 415, 9, 44, "Text",ExpressionUUID->"2768152e-beee-4843-9be6-e009958bdc11",
 CellID->345096676],
Cell[1404, 45, 288, 5, 41, "Input",ExpressionUUID->"e2eeb9fd-67f8-4057-a237-75c17f9df3c9",
 InitializationCell->True,
 CellID->13366579]
}, Open  ]],
Cell[CellGroupData[{
Cell[1729, 55, 167, 2, 45, "Section",ExpressionUUID->"94baa558-d014-4759-9107-28d629b3dc9c",
 CellID->12394907],
Cell[1899, 59, 2616, 67, 143, "DefinitionBox",ExpressionUUID->"5cf8197e-0767-4bab-b6e7-417fa46727b6",
 CellID->124942403],
Cell[4518, 128, 216, 2, 30, "Caption",ExpressionUUID->"4bfbbaaf-1b42-48b6-a4c3-a5a305a58f86",
 CellID->520428306],
Cell[CellGroupData[{
Cell[4759, 134, 251, 3, 40, "MathCaption",ExpressionUUID->"f43506a1-7771-4158-a9c0-54ec169572db",
 CellID->31903801],
Cell[CellGroupData[{
Cell[5035, 141, 395, 8, 25, "Input",ExpressionUUID->"7598acd3-6389-4c45-952d-4464965c6e07",
 CellID->2966739],
Cell[5433, 151, 264, 6, 21, "Echo",ExpressionUUID->"f066f4bb-3bf8-434a-9e49-a31946bcb20a",
 CellID->829559052],
Cell[5700, 159, 270, 4, 24, "Output",ExpressionUUID->"917f2ec9-b63e-4e49-b26d-a2b29b07ae42",
 CellID->9137373]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6019, 169, 188, 2, 40, "MathCaption",ExpressionUUID->"04b3ff9b-2b0f-4761-a60b-8aed1ef39046",
 CellID->591549556],
Cell[CellGroupData[{
Cell[6232, 175, 289, 6, 25, "Input",ExpressionUUID->"d783cff5-3a8f-4ff8-a24b-8cbc5953d7ae",
 CellID->281752241],
Cell[6524, 183, 345, 8, 24, "Output",ExpressionUUID->"75324d47-0bb8-4560-a357-e84a5be0cfe1",
 CellID->69714785]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6918, 197, 501, 8, 74, "MathCaption",ExpressionUUID->"f2ad7b3e-b352-44eb-93a1-3b887280e5a3",
 CellID->114128779],
Cell[CellGroupData[{
Cell[7444, 209, 719, 18, 48, "Input",ExpressionUUID->"157110f4-2bfa-40c5-9452-4bedaadba74c",
 CellID->123225409],
Cell[8166, 229, 303, 7, 24, "Output",ExpressionUUID->"dfc393ca-515e-4aa7-a026-227ca82b12ac",
 CellID->565924694]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8518, 242, 240, 4, 40, "MathCaption",ExpressionUUID->"f7523c82-c609-4bd7-ac6a-101682c7d785",
 CellID->198474650],
Cell[CellGroupData[{
Cell[8783, 250, 756, 19, 48, "Input",ExpressionUUID->"f6ee380a-4739-4721-a9c7-73721e6057cf",
 CellID->96415675],
Cell[9542, 271, 300, 7, 24, "Output",ExpressionUUID->"2d250a20-2f3b-4743-912c-9184cd3d8621",
 CellID->187311040]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9891, 284, 192, 2, 40, "MathCaption",ExpressionUUID->"17bb4736-5c24-4017-850c-e27538d06e14",
 CellID->460961065],
Cell[CellGroupData[{
Cell[10108, 290, 814, 20, 68, "Input",ExpressionUUID->"a52ff0eb-569f-4664-8c55-c62fa39b960a",
 CellID->348169710],
Cell[10925, 312, 176, 3, 24, "Output",ExpressionUUID->"36c2d559-21c4-4959-9b9a-f77a2523a960",
 CellID->12882949]
}, Open  ]]
}, Open  ]],
Cell[11128, 319, 187, 2, 40, "MathCaption",ExpressionUUID->"bcb88308-d60b-448d-85d9-7cb5da93ed7b",
 CellID->215938530],
Cell[CellGroupData[{
Cell[11340, 325, 190, 2, 40, "MathCaption",ExpressionUUID->"2353ef8d-02c7-40d7-813d-2f1ec64d119b",
 CellID->142381604],
Cell[CellGroupData[{
Cell[11555, 331, 390, 8, 25, "Input",ExpressionUUID->"50a8906b-1d34-4e2b-a456-bb398b05870c",
 CellID->347150823],
Cell[11948, 341, 194, 3, 24, "Output",ExpressionUUID->"af55f9e2-6bed-4d19-95da-a7e33b9c2c07",
 CellID->160256386]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12191, 350, 182, 2, 40, "MathCaption",ExpressionUUID->"aa13f796-6084-4be4-b68f-69ee4bd51d4d",
 CellID->9730894],
Cell[CellGroupData[{
Cell[12398, 356, 335, 6, 25, "Input",ExpressionUUID->"cd861de1-c55b-4f65-b868-a785400a8b7b",
 CellID->172885937],
Cell[12736, 364, 302, 7, 24, "Output",ExpressionUUID->"e6a0cb59-0782-43fb-a8a8-a82b96865c08",
 CellID->13566930]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[13099, 378, 187, 2, 45, "Section",ExpressionUUID->"791c635c-1e03-4372-949b-fa4d96525879",
 CellID->57602827],
Cell[CellGroupData[{
Cell[13311, 384, 209, 2, 40, "MathCaption",ExpressionUUID->"b83f86d4-9d83-499b-ab40-b811d6930b35",
 CellID->237155657],
Cell[CellGroupData[{
Cell[13545, 390, 249, 4, 25, "Input",ExpressionUUID->"3077938e-d049-4d8d-a063-4be05b563e2d",
 CellID->114626256],
Cell[13797, 396, 199, 3, 24, "Output",ExpressionUUID->"6d2b2a59-ce78-473d-bfec-f2e65f9d3bd9",
 CellID->21111411]
}, Open  ]],
Cell[CellGroupData[{
Cell[14033, 404, 247, 4, 25, "Input",ExpressionUUID->"c4b67cc6-ff82-4326-9aca-1b660f7fcf40",
 CellID->72962348],
Cell[14283, 410, 252, 6, 24, "Output",ExpressionUUID->"a2a6b74a-9608-4542-8d81-ef5b97813ba2",
 CellID->144120138]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[14584, 422, 197, 2, 40, "MathCaption",ExpressionUUID->"df0d52ca-bffd-45a1-b519-758e939bc207",
 CellID->172959633],
Cell[CellGroupData[{
Cell[14806, 428, 331, 7, 25, "Input",ExpressionUUID->"6bac6800-1d14-44bc-b44b-9c6af422b49a",
 CellID->103210421],
Cell[15140, 437, 251, 7, 42, "Output",ExpressionUUID->"0c88aaef-5c05-4d5b-855f-86576afe9105",
 CellID->78156444]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[15440, 450, 189, 2, 40, "MathCaption",ExpressionUUID->"8860ba47-aeb6-4f5b-b590-f7dec769ca82",
 CellID->452686366],
Cell[CellGroupData[{
Cell[15654, 456, 478, 12, 25, "Input",ExpressionUUID->"ce3c5df2-0acd-4351-a168-d4b9b9224a22",
 CellID->422387114],
Cell[16135, 470, 83295, 1590, 617, "Output",ExpressionUUID->"cc2bb6ca-d1b9-4f35-9ca1-76c6f1a54a4e",
 CellID->209532304]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[99479, 2066, 650, 21, 54, "MathCaption",ExpressionUUID->"19c2ede4-6eb4-40b0-81d5-58bc4f1c47e3",
 CellID->56151557],
Cell[CellGroupData[{
Cell[100154, 2091, 626, 15, 48, "Input",ExpressionUUID->"315ff5bc-9c19-4562-8561-5cdfe006134d",
 CellID->392545453],
Cell[100783, 2108, 43167, 810, 299, "Output",ExpressionUUID->"6938d4d0-e2d1-4edf-99a6-e133788f86ff",
 CellID->242033643]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[143999, 2924, 402, 10, 40, "MathCaption",ExpressionUUID->"a69dedee-e839-4836-915d-a71a2bd2e532",
 CellID->100832978],
Cell[CellGroupData[{
Cell[144426, 2938, 302, 7, 25, "Input",ExpressionUUID->"ede388b5-b5be-44c7-9b93-ba162d25e9a4",
 CellID->438135564],
Cell[144731, 2947, 262, 4, 24, "Output",ExpressionUUID->"19947191-b27a-4d1e-b954-8c5a7c725dd1",
 CellID->287705978]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[145054, 2958, 198, 2, 45, "Section",ExpressionUUID->"043711de-c6d3-40d5-b6bb-10780552ed50",
 CellID->33461597],
Cell[CellGroupData[{
Cell[145277, 2964, 248, 3, 40, "MathCaption",ExpressionUUID->"f2fd091d-1e6f-4e71-a2ff-d6101f367dc1",
 CellID->139662984],
Cell[CellGroupData[{
Cell[145550, 2971, 516, 13, 43, "Input",ExpressionUUID->"3981f08a-a266-4abb-a862-b0e114c10814",
 CellID->398286937],
Cell[146069, 2986, 83168, 1588, 617, "Output",ExpressionUUID->"ae81a371-746d-4db3-8569-2cdc530451cb",
 CellID->52134645]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[229286, 4580, 818, 24, 58, "MathCaption",ExpressionUUID->"bd50a358-8472-43db-92f1-56cedce74600",
 CellID->254962743],
Cell[CellGroupData[{
Cell[230129, 4608, 700, 22, 53, "Input",ExpressionUUID->"267bdab1-9ef9-4c49-b84e-33848c84d88e",
 CellID->208306947],
Cell[230832, 4632, 198, 3, 24, "Output",ExpressionUUID->"cb1ae230-d39e-470b-a545-a1d1657fe595",
 CellID->2750224]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[231079, 4641, 187, 2, 40, "MathCaption",ExpressionUUID->"38bf2122-d295-44fe-b7d6-2b0ba09be970",
 CellID->48756516],
Cell[CellGroupData[{
Cell[231291, 4647, 2051, 57, 174, "Input",ExpressionUUID->"2641e297-6863-4235-8bc2-47fc51ba52c5",
 CellID->415836666],
Cell[233345, 4706, 109759, 2158, 617, "Output",ExpressionUUID->"5599e82a-0cd2-4e01-ab51-4e33be1716e4",
 CellID->14127691]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[343153, 6870, 239, 4, 40, "MathCaption",ExpressionUUID->"2da1dd1c-e47f-4ea8-b8ba-bcf09aa5bd9d",
 CellID->699600308],
Cell[CellGroupData[{
Cell[343417, 6878, 2041, 56, 174, "Input",ExpressionUUID->"acc42a94-28db-43b7-b697-59374793c6c2",
 CellID->6091911],
Cell[345461, 6936, 94141, 1865, 596, "Output",ExpressionUUID->"350cacfc-f3d9-4328-978d-e8b694387e77",
 CellID->222447527]
}, Open  ]]
}, Closed]],
Cell[439629, 8805, 524, 16, 40, "MathCaption",ExpressionUUID->"563f31ea-55ed-4d75-ab9b-003c901d5d2b",
 CellID->259341750]
}, Closed]],
Cell[CellGroupData[{
Cell[440190, 8826, 172, 2, 45, "Section",ExpressionUUID->"8f4cfabc-dce5-4c88-b354-6d94488bc0ec",
 CellID->468515064],
Cell[CellGroupData[{
Cell[440387, 8832, 325, 5, 57, "MathCaption",ExpressionUUID->"25a2f533-8afc-4b3c-aede-acf63b70597b",
 CellID->26838858],
Cell[CellGroupData[{
Cell[440737, 8841, 302, 6, 25, "Input",ExpressionUUID->"4455d744-25af-483a-ab40-62fc0937d666",
 CellID->320045123],
Cell[441042, 8849, 334, 9, 24, "Output",ExpressionUUID->"3b26dff5-133d-4ef0-bf76-01aa3f3f35c3",
 CellID->144098166]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[441425, 8864, 196, 2, 40, "MathCaption",ExpressionUUID->"d04fe5e1-0714-429c-a3e2-efbf84935857",
 CellID->502664438],
Cell[CellGroupData[{
Cell[441646, 8870, 312, 6, 25, "Input",ExpressionUUID->"47780729-629f-4d5f-acd1-c6eac089fef1",
 CellID->460674117],
Cell[441961, 8878, 907, 23, 42, "Output",ExpressionUUID->"806c4663-4a79-4798-91e2-24770e3ecbcd",
 CellID->567622007]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[442917, 8907, 201, 2, 40, "MathCaption",ExpressionUUID->"5701f91e-7e0d-4917-a8b9-7708f920be97",
 CellID->318945664],
Cell[CellGroupData[{
Cell[443143, 8913, 358, 7, 25, "Input",ExpressionUUID->"f35939f1-9467-4a9e-aeae-0ac0fee32aa9",
 CellID->228472135],
Cell[443504, 8922, 1689, 50, 60, "Output",ExpressionUUID->"d36e98bf-2add-4311-85d7-52f5863d6454",
 CellID->167688184]
}, Open  ]],
Cell[CellGroupData[{
Cell[445230, 8977, 568, 14, 43, "Input",ExpressionUUID->"41624195-a6e6-44e3-8e0a-57c6790425ed",
 CellID->498538805],
Cell[445801, 8993, 1321, 41, 42, "Output",ExpressionUUID->"75df63de-643c-4547-88a9-701e87b5059e",
 CellID->488440420]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[447171, 9040, 204, 2, 40, "MathCaption",ExpressionUUID->"2b54ecbc-a10b-4b91-9653-1b0a6026c258",
 CellID->30430800],
Cell[447378, 9044, 1034, 27, 78, "Input",ExpressionUUID->"80aee334-7f65-4353-bb1a-185d9178d61e",
 CellID->338626900]
}, Open  ]],
Cell[CellGroupData[{
Cell[448449, 9076, 545, 14, 40, "MathCaption",ExpressionUUID->"688cd8b4-68ba-40f0-8577-1497a1c6709d",
 CellID->33966879],
Cell[CellGroupData[{
Cell[449019, 9094, 298, 6, 25, "Input",ExpressionUUID->"45aa8478-c27d-4605-a540-afc2ab20ae16",
 CellID->463235003],
Cell[449320, 9102, 332, 9, 24, "Output",ExpressionUUID->"76f48552-e3e9-4e30-ae22-490c81a9b56c",
 CellID->130931456]
}, Open  ]],
Cell[CellGroupData[{
Cell[449689, 9116, 306, 6, 25, "Input",ExpressionUUID->"6bcdafe3-9b04-48a2-a43e-70dd3fe54d0e",
 CellID->220685702],
Cell[449998, 9124, 907, 23, 42, "Output",ExpressionUUID->"45a16a00-9b44-4196-a5b7-dd46c44cc127",
 CellID->529899974]
}, Open  ]]
}, Open  ]],
Cell[450932, 9151, 318, 5, 57, "MathCaption",ExpressionUUID->"da8b13e2-b463-4a54-aa61-8adf809b2bad",
 CellID->667234787],
Cell[CellGroupData[{
Cell[451275, 9160, 546, 12, 40, "MathCaption",ExpressionUUID->"4c803681-4fbd-46ab-9275-3f2628f789b1",
 CellID->20786854],
Cell[CellGroupData[{
Cell[451846, 9176, 707, 17, 43, "Input",ExpressionUUID->"cc518051-0b47-4527-be52-615a2377de4f",
 CellID->712923585],
Cell[452556, 9195, 1235, 31, 24, "Output",ExpressionUUID->"8e3978c4-3cd5-4682-a41c-07c7bc826c3d",
 CellID->241317559]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[453840, 9232, 349, 6, 57, "MathCaption",ExpressionUUID->"b2cab360-7f8e-4cb9-9c34-d8df9cad1965",
 CellID->122464914],
Cell[CellGroupData[{
Cell[454214, 9242, 306, 6, 25, "Input",ExpressionUUID->"2ea0defc-cf50-4ff4-93b4-f1b4111c4338",
 CellID->435070527],
Cell[454523, 9250, 802, 21, 24, "Output",ExpressionUUID->"2be94706-6fe8-4a50-8fef-bde6038250c7",
 CellID->411803166]
}, Open  ]],
Cell[CellGroupData[{
Cell[455362, 9276, 255, 4, 25, "Input",ExpressionUUID->"f25ef3fa-9f61-49df-9215-52fe614f2ace",
 CellID->57678985],
Cell[455620, 9282, 6289, 167, 42, "Output",ExpressionUUID->"1c5b1969-6964-47c1-975c-470dfe720403",
 CellID->181761386]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[461958, 9455, 185, 2, 40, "MathCaption",ExpressionUUID->"b5db532c-5b12-428a-8047-8d7ed3ec3697",
 CellID->169212145],
Cell[CellGroupData[{
Cell[462168, 9461, 292, 6, 25, "Input",ExpressionUUID->"29b12264-aa72-4b91-950e-204a57731fae",
 CellID->228145050],
Cell[462463, 9469, 168, 3, 24, "Output",ExpressionUUID->"aa09011d-a3f2-44a9-960b-92bce6787057",
 CellID->147813536]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[462680, 9478, 631, 10, 91, "MathCaption",ExpressionUUID->"f4faf4d3-94d4-4b2e-bfa2-b2c265ebfb41",
 CellID->388376040],
Cell[CellGroupData[{
Cell[463336, 9492, 235, 4, 25, "Input",ExpressionUUID->"07240d2b-0f6f-4f8b-8242-5af8a5eeddc8",
 CellID->131012795],
Cell[463574, 9498, 169, 3, 24, "Output",ExpressionUUID->"95466749-a6c2-49aa-9caf-c04c6f011711",
 CellID->127222859]
}, Open  ]],
Cell[CellGroupData[{
Cell[463780, 9506, 269, 5, 25, "Input",ExpressionUUID->"719d76b5-4a27-406b-806d-59dfe453e417",
 CellID->844247],
Cell[464052, 9513, 168, 3, 24, "Output",ExpressionUUID->"330dea22-5ca7-468e-9746-cffed5f70a96",
 CellID->91695846]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[464269, 9522, 181, 2, 40, "MathCaption",ExpressionUUID->"159cc44c-235b-484d-88e1-67d35413ced5",
 CellID->205495515],
Cell[CellGroupData[{
Cell[464475, 9528, 262, 5, 25, "Input",ExpressionUUID->"32d0986b-bc65-4208-9aa1-44b305e67f6a",
 CellID->13581624],
Cell[464740, 9535, 320, 7, 24, "Output",ExpressionUUID->"a0e890d2-e2e4-45b7-8955-1919e0d5d40d",
 CellID->1801989]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[465109, 9548, 244, 4, 40, "MathCaption",ExpressionUUID->"c0197bc7-b22a-4591-8806-d2948b2cd1af",
 CellID->488934143],
Cell[CellGroupData[{
Cell[465378, 9556, 233, 4, 25, "Input",ExpressionUUID->"e17a94e1-d5ba-43ff-8054-e203ab242bff",
 CellID->52403940],
Cell[465614, 9562, 333, 6, 60, "Output",ExpressionUUID->"95165ae1-57eb-42f5-bedf-eca142aa39fb",
 CellID->27588445]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[465996, 9574, 200, 2, 40, "MathCaption",ExpressionUUID->"9ccadf12-a266-49b6-9aee-845b7e61273c",
 CellID->733937479],
Cell[CellGroupData[{
Cell[466221, 9580, 281, 5, 25, "Input",ExpressionUUID->"54d0bb40-af6b-4cdb-b2aa-c348c67aa9d7",
 CellID->288697611],
Cell[466505, 9587, 3105, 45, 136, "Message",ExpressionUUID->"11a09ede-14fc-4636-9e98-5e6fed1a97cc",
 CellID->508655313],
Cell[469613, 9634, 509, 10, 26, "Message",ExpressionUUID->"61c4ec33-d153-4976-bebc-da595f21c199",
 CellID->488314992],
Cell[470125, 9646, 509, 10, 26, "Message",ExpressionUUID->"85f5b3b5-9d25-4a99-ac1d-3396cc94da12",
 CellID->360908914],
Cell[470637, 9658, 203, 4, 24, "Output",ExpressionUUID->"f71ef3b5-9c62-4fbf-aa1e-49343805478f",
 CellID->45875794]
}, Open  ]]
}, Open  ]],
Cell[470867, 9666, 225, 3, 40, "MathCaption",ExpressionUUID->"7bf90a20-6188-43c2-9f73-517fb25295f5",
 CellID->101847644],
Cell[471095, 9671, 258, 3, 40, "MathCaption",ExpressionUUID->"41455be0-9584-4ae8-bd09-d4f8e2c1d502",
 CellID->211580469],
Cell[471356, 9676, 945, 26, 49, "MathCaption",ExpressionUUID->"b74b0eb3-1bb3-407b-aad3-bb46ef060f2d",
 CellID->247846069],
Cell[472304, 9704, 1062, 28, 52, "MathCaption",ExpressionUUID->"00526329-007b-4bb3-a489-ea2c3205e127",
 CellID->819467623],
Cell[CellGroupData[{
Cell[473391, 9736, 237, 4, 40, "MathCaption",ExpressionUUID->"b3b33bd4-9e8b-4ddd-bc93-4657a2a0aff6",
 CellID->153350675],
Cell[473631, 9742, 365, 10, 42, "Input",ExpressionUUID->"9de6ac57-a921-4708-857f-728f1270ef0a",
 CellID->151625861],
Cell[CellGroupData[{
Cell[474021, 9756, 799, 22, 68, "Input",ExpressionUUID->"0a9f7884-a030-4518-87cf-d605e5683169",
 CellID->41007170],
Cell[474823, 9780, 378, 8, 24, "Output",ExpressionUUID->"a640971d-e134-4d77-99e5-aae5df8a9510",
 CellID->123741561]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[475250, 9794, 224, 2, 40, "MathCaption",ExpressionUUID->"ccd09c2a-2724-4bd4-a34f-7bf89f1c8e44",
 CellID->107675305],
Cell[CellGroupData[{
Cell[475499, 9800, 784, 21, 48, "Input",ExpressionUUID->"6f22068e-e10b-4b67-a738-bbff8ceba994",
 CellID->295429183],
Cell[476286, 9823, 508, 15, 40, "Output",ExpressionUUID->"6e23889d-dc8a-4c39-9ac8-e923ebc7f2e1",
 CellID->211184276]
}, Open  ]],
Cell[CellGroupData[{
Cell[476831, 9843, 277, 6, 25, "Input",ExpressionUUID->"64f41a23-2d2e-494b-bd0f-1c8b5600ffc4",
 CellID->309536517],
Cell[477111, 9851, 338, 5, 42, "Output",ExpressionUUID->"ca6e255e-35e1-4094-b5b3-e8b85c132f14",
 CellID->378659440]
}, Open  ]],
Cell[477464, 9859, 276, 6, 25, "Input",ExpressionUUID->"3b966260-56e3-475d-849c-28571063b6fd",
 CellID->14451647]
}, Open  ]],
Cell[477755, 9868, 534, 12, 57, "MathCaption",ExpressionUUID->"5ff7c9db-cd91-48d6-b219-f2a740e0835a",
 CellID->136909599],
Cell[478292, 9882, 320, 5, 57, "MathCaption",ExpressionUUID->"f039239a-0dd8-466a-86d7-0cf614539986",
 CellID->207794795],
Cell[478615, 9889, 662, 14, 79, "MathCaption",ExpressionUUID->"66a8b6ba-4466-462e-8a7b-ea3a1ae5c37d",
 CellID->93210004],
Cell[479280, 9905, 396, 10, 44, "MathCaption",ExpressionUUID->"eaf9795c-a061-4059-8646-8abe5b39a10f",
 CellID->597830687],
Cell[479679, 9917, 1212, 36, 45, "MathCaption",ExpressionUUID->"f63b4d4d-4162-48b9-83c4-f953f4c27b56",
 CellID->267850361],
Cell[CellGroupData[{
Cell[480916, 9957, 191, 2, 40, "MathCaption",ExpressionUUID->"25cdf2bd-1629-4b75-9634-58187ae6f7ed",
 CellID->238909488],
Cell[CellGroupData[{
Cell[481132, 9963, 489, 14, 28, "Input",ExpressionUUID->"365de1bd-c2eb-485e-bb9a-40393ee11f1d",
 CellID->520558764],
Cell[481624, 9979, 333, 9, 37, "Output",ExpressionUUID->"d598d300-134f-412b-9ee0-294e8d150fd5",
 CellID->350941219]
}, Open  ]],
Cell[CellGroupData[{
Cell[481994, 9993, 642, 19, 28, "Input",ExpressionUUID->"8aed61c8-2918-4fab-8542-4975b9139ae3",
 CellID->8825156],
Cell[482639, 10014, 207, 4, 24, "Output",ExpressionUUID->"b9bcf6b0-5d10-449c-9701-bd0e7ddd806c",
 CellID->278680919]
}, Open  ]]
}, Open  ]],
Cell[482873, 10022, 193, 2, 40, "MathCaption",ExpressionUUID->"2a079b84-81a1-440d-9526-c687f401f30a",
 CellID->806936389],
Cell[483069, 10026, 755, 22, 78, "MathCaption",ExpressionUUID->"ee1d79df-fd83-40fe-a0e9-a37b76b829cb",
 InitializationCell->True,
 CellID->25842481],
Cell[CellGroupData[{
Cell[483849, 10052, 203, 2, 40, "MathCaption",ExpressionUUID->"cc806c81-096f-4880-8464-a1a13fb2ca56",
 CellID->14619546],
Cell[CellGroupData[{
Cell[484077, 10058, 316, 7, 25, "Input",ExpressionUUID->"a09ecd2a-6bfe-485f-a751-332856466e8a",
 CellID->367209639],
Cell[484396, 10067, 286, 7, 24, "Output",ExpressionUUID->"381652f4-560f-48a8-8c8c-4ac02f02ea67",
 CellID->19629526]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[484731, 10080, 117, 1, 40, "MathCaption",ExpressionUUID->"70d08c46-0333-4fc0-9bcc-de185089f00d",
 CellID->339981277],
Cell[CellGroupData[{
Cell[484873, 10085, 609, 15, 43, "Input",ExpressionUUID->"1daf6273-80c8-41be-ba20-de5fb5a366ad",
 CellID->558391696],
Cell[485485, 10102, 4160, 73, 160, "Output",ExpressionUUID->"1c11c862-d9de-45e9-a44e-e382be1d1717",
 CellID->716575968]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[489694, 10181, 134, 1, 40, "MathCaption",ExpressionUUID->"32c713da-0ccb-450d-a84b-c5d8cb4fecc5",
 CellID->214227103],
Cell[CellGroupData[{
Cell[489853, 10186, 488, 14, 25, "Input",ExpressionUUID->"e5bbad70-1297-4dee-ac1f-6cc82320250d",
 CellID->618289619],
Cell[490344, 10202, 264980, 4440, 231, "Output",ExpressionUUID->"535fe645-eb41-4d5f-8f6f-7739486047cf",
 CellID->10573928]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[755373, 14648, 127, 1, 40, "MathCaption",ExpressionUUID->"93e4cba2-e9f6-40ac-b35c-d5b724101b4c",
 CellID->4255939],
Cell[CellGroupData[{
Cell[755525, 14653, 376, 10, 25, "Input",ExpressionUUID->"b923682e-3aca-42d6-ae7b-5bea08cf7d3b",
 CellID->340278271],
Cell[755904, 14665, 1247, 38, 74, "Output",ExpressionUUID->"5b167192-ee4c-429e-9de3-8b7bd368992c",
 CellID->394553506]
}, Open  ]],
Cell[757166, 14706, 241, 5, 26, "ExampleDelimiter",ExpressionUUID->"d4de0650-3190-42b0-9c31-770d4431893d",
 CellID->34228752]
}, Open  ]],
Cell[CellGroupData[{
Cell[757444, 14716, 390, 12, 42, "MathCaption",ExpressionUUID->"e46f27bf-79ee-4660-8f1d-262f0ce49783",
 CellID->758466417],
Cell[CellGroupData[{
Cell[757859, 14732, 386, 10, 25, "Input",ExpressionUUID->"493e10ca-749f-4655-bf54-450d4805f0c7",
 CellID->11744335],
Cell[758248, 14744, 879, 30, 44, "Output",ExpressionUUID->"220c8eb9-f074-4eb2-b14f-ef14ba24b8cf",
 CellID->112085041]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[759176, 14780, 309, 5, 57, "MathCaption",ExpressionUUID->"897e261b-9f80-4bc1-94ea-4446dee6daa6",
 CellID->732162013],
Cell[CellGroupData[{
Cell[759510, 14789, 308, 6, 25, "Input",ExpressionUUID->"1bd0426c-e96a-4fa5-996a-a31cc35b220b",
 CellID->244982983],
Cell[759821, 14797, 829, 21, 24, "Output",ExpressionUUID->"00a28877-87a4-43be-be10-dadca77222c0",
 CellID->851438496]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[760699, 14824, 295, 5, 57, "MathCaption",ExpressionUUID->"9b2c532d-49e8-4d07-98f6-b28566e30386",
 CellID->28447423],
Cell[CellGroupData[{
Cell[761019, 14833, 318, 6, 25, "Input",ExpressionUUID->"ef94b61b-9733-45ee-802b-860d2c27da03",
 CellID->260451403],
Cell[761340, 14841, 2459, 45, 25, "Output",ExpressionUUID->"3877dd5f-675d-4c37-8b53-29a251e1e9ea",
 CellID->665869934]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[763848, 14892, 218, 2, 40, "MathCaption",ExpressionUUID->"637fc695-73cb-4552-98d8-9248f77a06ad",
 CellID->45932736],
Cell[CellGroupData[{
Cell[764091, 14898, 309, 6, 25, "Input",ExpressionUUID->"1cccdb83-a550-42c4-88ed-f4242236dad3",
 CellID->277919701],
Cell[764403, 14906, 1133, 29, 24, "Output",ExpressionUUID->"1708b15a-774d-4a92-80ef-80968d8c6e03",
 CellID->7493652]
}, Open  ]],
Cell[CellGroupData[{
Cell[765573, 14940, 346, 7, 25, "Input",ExpressionUUID->"7ebf39f8-6af9-4c48-a32c-48a0c392a1d6",
 CellID->87289371],
Cell[765922, 14949, 11895, 199, 131, "Output",ExpressionUUID->"829462fb-ae0e-4589-bdbf-2217a6caad16",
 CellID->172278896]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[777866, 15154, 180, 2, 40, "MathCaption",ExpressionUUID->"3c5a780f-fdc5-4b8c-8bcb-435b5a6d7aa5",
 CellID->372409988],
Cell[CellGroupData[{
Cell[778071, 15160, 295, 6, 25, "Input",ExpressionUUID->"925ce5b7-47d0-482e-96e0-8b15ae8ba1ea",
 CellID->204572566],
Cell[778369, 15168, 169, 3, 24, "Output",ExpressionUUID->"3faee07a-3cc3-4ece-b24b-b549e78c5bc7",
 CellID->349098055]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[778587, 15177, 273, 5, 57, "MathCaption",ExpressionUUID->"c2c81c0c-bdc3-4711-b3bc-c58137a77e21",
 CellID->705395511],
Cell[CellGroupData[{
Cell[778885, 15186, 271, 5, 25, "Input",ExpressionUUID->"b0f6e602-3517-4a9a-b45e-d7065b0491b0",
 CellID->197135344],
Cell[779159, 15193, 193, 3, 24, "Output",ExpressionUUID->"0ec3b7b5-b5e2-4562-9552-650a04c2098c",
 CellID->56352306]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[779401, 15202, 295, 5, 57, "MathCaption",ExpressionUUID->"7c91506f-eea1-48b1-8169-536253d8b897",
 CellID->311141836],
Cell[CellGroupData[{
Cell[779721, 15211, 309, 6, 25, "Input",ExpressionUUID->"5f534a7e-390d-4c0b-857c-a24416cf9189",
 CellID->407433582],
Cell[780033, 15219, 3492, 90, 24, "Output",ExpressionUUID->"a05e8e23-80dd-42c5-b540-87c68a5ed59d",
 CellID->349274851]
}, Open  ]],
Cell[783540, 15312, 239, 5, 26, "ExampleDelimiter",ExpressionUUID->"a7e96a3c-e960-43f3-88d8-5c7ae8ed68df",
 CellID->518217]
}, Open  ]],
Cell[CellGroupData[{
Cell[783816, 15322, 189, 2, 40, "MathCaption",ExpressionUUID->"8a623dcc-c4a3-48bc-be74-66a4583c3e90",
 CellID->194380331],
Cell[CellGroupData[{
Cell[784030, 15328, 274, 5, 25, "Input",ExpressionUUID->"4fba9995-ef54-4903-a9ba-2f911c42fe97",
 CellID->653333490],
Cell[784307, 15335, 226, 4, 24, "Output",ExpressionUUID->"1d2b0466-ff75-43c2-ad85-644d1bbf2847",
 CellID->531801412]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[784582, 15345, 206, 2, 40, "MathCaption",ExpressionUUID->"0fd1d169-6383-4dc2-aa7f-6035d1e4d12f",
 CellID->158717184],
Cell[CellGroupData[{
Cell[784813, 15351, 343, 6, 25, "Input",ExpressionUUID->"d9ee7595-8603-4b05-a772-0c5f5dc9ab1c",
 CellID->414886273],
Cell[785159, 15359, 226, 4, 24, "Output",ExpressionUUID->"3a49f47a-410e-45c9-ab97-83477f2128c4",
 CellID->341067037]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[785434, 15369, 240, 4, 40, "MathCaption",ExpressionUUID->"303e33f6-8cef-4939-ba37-6f4b49478744",
 CellID->36989666],
Cell[CellGroupData[{
Cell[785699, 15377, 316, 6, 25, "Input",ExpressionUUID->"b85dd037-8b12-465b-80d7-f1e1f79b5fec",
 CellID->55412944],
Cell[786018, 15385, 22152, 368, 239, "Output",ExpressionUUID->"4b972b21-917e-4be9-8d74-2cb4fa1c83d8",
 CellID->438918729]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[808219, 15759, 244, 4, 40, "MathCaption",ExpressionUUID->"8aa7701c-9460-487b-9364-c83c1fb4ffa7",
 CellID->45514529],
Cell[CellGroupData[{
Cell[808488, 15767, 316, 6, 25, "Input",ExpressionUUID->"a0cd8854-8e3c-4822-ae69-0e89c5f2a429",
 CellID->274862742],
Cell[808807, 15775, 171, 3, 24, "Output",ExpressionUUID->"6af504c3-f53c-428f-9ff3-16df328f3264",
 CellID->24836199]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[809027, 15784, 212, 2, 40, "MathCaption",ExpressionUUID->"9b718d6e-579b-424e-9e04-b0354691fec5",
 CellID->21262637],
Cell[CellGroupData[{
Cell[809264, 15790, 291, 5, 25, "Input",ExpressionUUID->"5187a265-6ea1-4db6-903c-9cf260e35fe0",
 CellID->3910711],
Cell[809558, 15797, 172, 3, 24, "Output",ExpressionUUID->"4a2a06b0-4a13-43c1-9d8a-eba0899fc0a8",
 CellID->453491458]
}, Open  ]]
}, Open  ]],
Cell[809757, 15804, 271, 5, 40, "MathCaption",ExpressionUUID->"db908ab1-467b-47ab-95ae-fc0e35d44b67",
 CellID->959787810],
Cell[CellGroupData[{
Cell[810053, 15813, 215, 2, 40, "MathCaption",ExpressionUUID->"35192e33-4309-4b80-8cbf-178af813f842",
 CellID->402703826],
Cell[CellGroupData[{
Cell[810293, 15819, 292, 5, 25, "Input",ExpressionUUID->"12c89bd9-7460-4295-877e-cd07e7453f49",
 CellID->1592074],
Cell[810588, 15826, 258, 4, 24, "Output",ExpressionUUID->"17366ec5-2fb8-4873-ab1c-76ee54ccd577",
 CellID->238165924]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[810895, 15836, 311, 6, 40, "MathCaption",ExpressionUUID->"7964130f-02ba-4935-9672-d5101e21b288",
 CellID->708478496],
Cell[CellGroupData[{
Cell[811231, 15846, 321, 6, 25, "Input",ExpressionUUID->"62363314-f3d0-4d1e-b8ed-7a6aae943156",
 CellID->450230421],
Cell[811555, 15854, 855, 22, 24, "Output",ExpressionUUID->"5bde5e2a-8138-4175-8004-79c02ebbdedf",
 CellID->26904101]
}, Open  ]],
Cell[CellGroupData[{
Cell[812447, 15881, 349, 7, 25, "Input",ExpressionUUID->"bd5e9cc7-94c3-4c12-983c-458b41a3f732",
 CellID->212638519],
Cell[812799, 15890, 1335, 34, 24, "Output",ExpressionUUID->"2cf2b7cf-23b3-40f9-ad31-1110fbf47faf",
 CellID->295663189]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[814183, 15930, 214, 2, 40, "MathCaption",ExpressionUUID->"7c44a0f1-df14-4809-81c7-83e4aca601b6",
 CellID->19185935],
Cell[CellGroupData[{
Cell[814422, 15936, 357, 7, 25, "Input",ExpressionUUID->"f9a6d67a-18d4-438c-a6a7-3d758e464c3d",
 CellID->65654456],
Cell[814782, 15945, 3277, 59, 43, "Output",ExpressionUUID->"90ddec0e-6240-45be-961c-2715ae369df2",
 CellID->7503357]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[818108, 16010, 186, 2, 40, "MathCaption",ExpressionUUID->"2717d955-37d1-48ef-844a-e8fe2b22ce5a",
 CellID->288178981],
Cell[CellGroupData[{
Cell[818319, 16016, 280, 5, 25, "Input",ExpressionUUID->"d42a5e1f-865f-4a6a-a549-ec42ca8f66c4",
 CellID->153664891],
Cell[818602, 16023, 194, 3, 24, "Output",ExpressionUUID->"545060aa-00df-4b9d-8897-8735c140f3c5",
 CellID->20629447]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[818845, 16032, 236, 4, 40, "MathCaption",ExpressionUUID->"de0c5ad6-439b-4c27-86aa-fd4ea4668638",
 CellID->669234462],
Cell[CellGroupData[{
Cell[819106, 16040, 326, 6, 25, "Input",ExpressionUUID->"5774c222-d31f-41ba-b064-1d0b0e847e68",
 CellID->223182031],
Cell[819435, 16048, 18814, 313, 271, "Output",ExpressionUUID->"26c24063-b193-4e25-8705-ca95c0f121ff",
 CellID->108341859]
}, Open  ]],
Cell[CellGroupData[{
Cell[838286, 16366, 324, 6, 25, "Input",ExpressionUUID->"c098d751-1693-4fc3-9352-3e59c81c281a",
 CellID->34464176],
Cell[838613, 16374, 172, 3, 24, "Output",ExpressionUUID->"5080876d-b876-43a6-9d4f-88603f1c342b",
 CellID->192324916]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[838834, 16383, 256, 5, 40, "MathCaption",ExpressionUUID->"191491d7-28ae-49d2-b280-5df059491014",
 CellID->211204775],
Cell[CellGroupData[{
Cell[839115, 16392, 352, 6, 25, "Input",ExpressionUUID->"8e17bd8e-879f-4b57-9eb8-7a3d90d9b447",
 CellID->16120653],
Cell[839470, 16400, 221, 4, 24, "Output",ExpressionUUID->"6f78bde4-a1c7-4ee4-9bde-c54a62434147",
 CellID->16473884]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[839740, 16410, 292, 5, 40, "MathCaption",ExpressionUUID->"45da4802-5986-4cc2-b868-0661601cf182",
 CellID->103140816],
Cell[CellGroupData[{
Cell[840057, 16419, 340, 7, 25, "Input",ExpressionUUID->"52cd852c-e0a5-43fb-8c93-eca7b7b5cb59",
 CellID->217632446],
Cell[840400, 16428, 9135, 155, 130, "Output",ExpressionUUID->"79c0e06f-8644-4bf8-b64e-76a87f188fe1",
 CellID->707156688]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[849596, 16590, 191, 2, 68, "TutorialMoreAboutSection",ExpressionUUID->"5f56aaf9-78db-4341-b909-8fecaee71b09",
 CellID->300332198],
Cell[849790, 16594, 303, 6, 24, "TutorialMoreAbout",ExpressionUUID->"e9ca2037-ef5e-4655-9f9b-1a8ce38d4e44",
 CellID->353617896],
Cell[850096, 16602, 402, 7, 24, "TutorialMoreAbout",ExpressionUUID->"30690779-ef18-4c4d-b9a2-4c115a23cab0",
 CellID->822407248]
}, Open  ]],
Cell[CellGroupData[{
Cell[850535, 16614, 127, 1, 74, "RelatedTutorialsSection",ExpressionUUID->"bb87d0f4-b7f3-472f-a5c1-133a17fc68da",
 CellID->95960386],
Cell[850665, 16617, 107, 1, 24, "RelatedTutorials",ExpressionUUID->"657bd0c0-a625-4084-a383-120fb375b3bb",
 CellID->657441003]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[850821, 16624, 110, 1, 72, "MetadataSection",ExpressionUUID->"0eb62a5b-9663-49cf-b5e1-c26f21dde72f",
 CellID->127671852],
Cell[850934, 16627, 473, 11, 26, "History",ExpressionUUID->"5ecc98b4-4355-484b-89ee-c4dbfd47e69c",
 CellID->120211482],
Cell[CellGroupData[{
Cell[851432, 16642, 122, 1, 21, "CategorizationSection",ExpressionUUID->"e03e3233-73a0-43a4-92b6-b51e1bcdbccf",
 CellID->412176238],
Cell[851557, 16645, 137, 2, 70, "Categorization",ExpressionUUID->"94355122-d079-42ab-9312-727675d3c5af",
 CellID->244398777],
Cell[851697, 16649, 153, 2, 70, "Categorization",ExpressionUUID->"cf5119e0-ad0e-44e6-b3a0-73c68197d608",
 CellID->35632880],
Cell[851853, 16653, 150, 2, 70, "Categorization",ExpressionUUID->"66a7dd64-42ba-441c-a876-a158a9e65fa4",
 CellID->26538629],
Cell[852006, 16657, 169, 2, 70, "Categorization",ExpressionUUID->"3fa411c9-52ba-4960-82cb-8c882396450d",
 CellID->149680849]
}, Closed]],
Cell[CellGroupData[{
Cell[852212, 16664, 109, 1, 21, "KeywordsSection",ExpressionUUID->"d98ba340-4912-4f71-98e9-f6300faf4014",
 CellID->13307797],
Cell[852324, 16667, 99, 1, 70, "Keywords",ExpressionUUID->"090c59c6-c29f-4931-9cfd-7d217ea96b73",
 CellID->559025098]
}, Closed]]
}, Open  ]]
}
]
*)

