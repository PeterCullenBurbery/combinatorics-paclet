(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    267241,       5382]
NotebookOptionsPosition[    249974,       5013]
NotebookOutlinePosition[    250809,       5040]
CellTagsIndexPosition[    250728,       5035]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Multichoose", "ObjectName",
 CellID->256025145,ExpressionUUID->"a4147963-f4fa-4727-9396-19cb713f32bc"],

Cell[TextData[{
 Cell["   ", "ModInfo",ExpressionUUID->"2e0bfa6e-79c0-4d0f-9dd9-92dafdbe0bde"],
 Cell[BoxData[
  RowBox[{
   ButtonBox["Multichoose",
    BaseStyle->"Link",
    ButtonData->"paclet:PeterBurberyCombinatoricsPaclet/ref/Multichoose"], 
   "[", 
   RowBox[{
    StyleBox["n", "TI"], ",", 
    StyleBox["k", "TI"]}], "]"}]], "InlineFormula",ExpressionUUID->
  "573a1fa0-6445-4039-ad9e-00deb066476b"],
 "\[LineSeparator]represents ",
 Cell[BoxData[
  StyleBox["n", "TI"]], "InlineFormula",ExpressionUUID->
  "ddd5b481-6f1f-4c2e-9c44-8bd313162c3f"],
 " multichoose ",
 Cell[BoxData[
  StyleBox["k", "TI"]], "InlineFormula",ExpressionUUID->
  "d99c84c5-88db-4915-b1b9-74d9064536c7"],
 "."
}], "Usage",
 CellChangeTimes->{{3.898288477728073*^9, 3.898288477899073*^9}},
 CellID->176534733,ExpressionUUID->"a7bb03ff-b917-4ecc-81b7-a40f0a554d23"],

Cell["\<\
Statistics How-to states, \"A multiset in mathematics is a generalization of \
the concept of a set. It\[CloseCurlyQuote]s a collection of unordered numbers \
(or other elements), where every element x occurs a finite number of times.\"\
\
\>", "Notes",
 CellChangeTimes->{{3.899143765525387*^9, 3.8991437858635273`*^9}},
 CellID->98117488,ExpressionUUID->"1498427e-b115-4033-a362-934213b9adf7"],

Cell[TextData[{
 "They continue, \"The difference between sets and multisets is in how they \
address multiples: a set includes any number at most once, while a multiset \
allows for multiple instances of the same number. There is just one set with \
elements a and b, the set {a,b}, but there are many multisets: {a, b, b}, {a, \
a, b}, and {a, a, a, a, b, b} are just a few. The nu",
 StyleBox["mbe",
  Deletable->True],
 "r of multisets k long using n symbols is called n multichoose k, and it\
\[CloseCurlyQuote]s written as ",
 Cell[BoxData[
  RowBox[{"(", 
   RowBox[{"(", GridBox[{
      {"n"},
      {"k"}
     }], ")"}], ")"}]], "Input",
  CellChangeTimes->{{3.899143824928242*^9, 3.8991438281935806`*^9}},
  ExpressionUUID->"715182d8-6d93-43e7-b286-413bd878d23c"],
 ". This can be written in terms of the binomial coefficient: ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"(", GridBox[{
       {"n"},
       {"k"}
      }], ")"}], ")"}], "\[LongEqual]", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{"n", "+", "k", "-", "1"}]},
      {"k"}
     }], ")"}]}]], "Input",
  CellChangeTimes->{{3.899143824928242*^9, 3.8991438281935806`*^9}},
  ExpressionUUID->"ab335c57-c441-4c72-8709-d88b287cfcf1"],
 "\" "
}], "Notes",
 CellChangeTimes->{{3.899143796658451*^9, 3.899143904179152*^9}},
 CellID->406158070,ExpressionUUID->"92ccec77-3f6a-45f4-9f9b-385a74188928"],

Cell["\<\
The site continues, \"Multiplicity
The multiplicity of an element x in a multiset is just the number of times \
that element appears in the set. For instance, in the multiset {3, 3, 4, 5, \
6} the element 3 has multiplicity 2. The elements 4, 5, and 6 all have \
multiplicity 1.

If we know the elements included and the multiplicity for each of them we \
know everything about a multiset. A multiset which includes just 4 with \
multiplicity 2, 5 with multiplicity 7 and 99 with multiplicity 2 can be \
written as {4, 4, 5, 5, 5, 5, 5, 99, 99}. Order doesn\[CloseCurlyQuote]t \
matter, so this is the same as {4, 99, 5, 4, 99, 5, 5, 5, 5 }\"\
\>", "Notes",
 CellChangeTimes->{{3.8991439323683786`*^9, 3.899143936459468*^9}},
 CellID->90262991,ExpressionUUID->"caeb9a99-9a3f-493c-99bd-0d5bfdf35c79"],

Cell["\<\
They continue, \"The Multiset in Use
Multisets are important in both math and computer science. They help us keep \
track of elements in databases, and are the backbone of modern combinatorics.

One example of multisets is a listing of the prime factors of a number. The \
factors of 4 is {2,2}, and this is different than the prime factors of 2,{2}. \
The prime factors of 90, {3,3,5,2}, are different than the prime factors of \
30: {3,5,2}\"\
\>", "Notes",
 CellChangeTimes->{{3.899143951362886*^9, 3.8991439570641356`*^9}},
 CellID->30476874,ExpressionUUID->"90331f5c-2c8b-4944-9926-28ee9b3ff535"],

Cell["\<\
They continue, \"What is Multichoose?
Multichoose is a way to choose items, where n is the number of items to \
choose from and k is the sets of items to choose. For example, 10 multichoose \
4 is the number of possible ways to choose a set of 4 items from a group of \
10 different items. More technically, it is the number of multisets k long, \
made up of n symbols. Order is not important, and repeats are allowed.

For example, 4 multichoose 2 equals 10, because the possible number of \
two-item multisets for four elements {j, k, l, m} are {j, j}, {j, k}, {j, l}, \
{j, m}, {k, k}, {k, l}, {k, m}, {l, l}, {l, m} and {m, m}.\"\
\>", "Notes",
 CellChangeTimes->{{3.899143965344284*^9, 3.8991439700170774`*^9}, 
   3.899144143239956*^9},
 CellID->102945828,ExpressionUUID->"a99aef0e-c871-49a8-bacd-e30725b1445b"],

Cell["\<\
If you would like to generate this list, you can use OrderlessCombinations. \
If you count {j,j} and {k,k} and {l,l} and {m,m} equivalent, and likewise for \
other examples, you can use OrderlessCombinationsOfUnmarkedElements.\
\>", "Notes",
 CellChangeTimes->{{3.8991440184798822`*^9, 3.899144061985769*^9}},
 CellID->51036501,ExpressionUUID->"a6fa5492-9f52-44d6-bffc-e102e2e85010"],

Cell["\<\
The site continues, \"Stars and Bars
Sometimes multichoose problems are called stars and bars problems. That\
\[CloseCurlyQuote]s because one way of solving them involves imagining our k \
items are k stars and we have n \[Dash] 1 boundary points separating the \
types. The way the stars and boundary points are placed define the problem.

For example, in our candy store problem we have 4 \[Dash] 1 = three bars ||| \
separating the types (i.e. 1|2|3|4). Since order doesn\[CloseCurlyQuote]t \
matter in multichoose problems, we can order our candy selections any way \
that makes it convenient for keeping track of them. This involves always \
having the same items in the same order. Here we might first mark down any \
licorice chosen, then peppermint drops, then lemon drops, and finally \
truffles. In order, those are:

Licorice
Peppermint
Lemon
Truffles
So if we just choose a licorice, we can write that as \:2606|||.
If we just choose a peppermint drop, make that |\:2606||.
Just a lemon drops would be ||\:2606|,
and just a truffle |||\:2606.

One licorice and one truffle would be written \:2606|||\:2606.\"\
\>", "Notes",
 CellChangeTimes->{{3.899144102727815*^9, 3.899144105598817*^9}, 
   3.899144138260824*^9},
 CellID->82459653,ExpressionUUID->"76d9dcfa-b646-4c2f-8822-4881127b7543"],

Cell["\<\
They continue, \"Example question (Benjamin & Quinn, 2003): Use stars and \
bars to represent the following distribution of 10 candies to 4 children:

Child 1 receives 4 candies,
Child 2 receives 5 candies,
Child 3 receives 0 candies,
Child 4 receives 1 candy.
Solution:
\:2606\:2606\:2606\:2606|\:2606\:2606\:2606\:2606\:2606||\:2606\"\
\>", "Notes",
 CellChangeTimes->{{3.8991441343380613`*^9, 3.899144172278798*^9}},
 CellID->1203434,ExpressionUUID->"5b0d6907-6eaa-4716-ab2f-ea5e2fbbc33f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "See Also",
 Cell[BoxData[
  TemplateBox[{"SeeAlso", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Insert links to any related reference (function) pages.", 
        "MoreInfoText"], BaseStyle -> "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "5cc1abfb-1b00-4dd6-979b-cff4b7751ad8"]
}], "SeeAlsoSection",
 CellID->14858795,ExpressionUUID->"2c6662e1-c6f6-4038-86ad-9ecae4e83350"],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["OrderlessCombinations",
   BaseStyle->"Link",
   ButtonData->
    "paclet:PeterBurbery/Combinatorics/ref/OrderlessCombinations"]], 
  "InlineSeeAlsoFunction",
  TaggingRules->{"PageType" -> "Function"},ExpressionUUID->
  "2f784445-49c9-49cb-b638-1b3fe2aefea3"],
 StyleBox[" \[FilledVerySmallSquare] ", "InlineSeparator"],
 Cell[BoxData[
  ButtonBox["OrderlessCombinationsOfUnmarkedElements",
   BaseStyle->"Link",
   ButtonData->
    "paclet:PeterBurbery/Combinatorics/ref/\
OrderlessCombinationsOfUnmarkedElements"]], "InlineSeeAlsoFunction",
  TaggingRules->{"PageType" -> "Function"},
  CellTags->"66f9a64c-c5c2-4804-902d-1fe64c1d8d5f",ExpressionUUID->
  "366d730f-1a87-4e64-a626-c1693718e26c"],
 Cell[BoxData[
  RowBox[{
  Cell[TextData[StyleBox[
   " \[FilledVerySmallSquare] ", "InlineSeparator"]],ExpressionUUID->
    "19ba8452-ab59-4469-8982-7de6d6b3b997"], 
   DynamicModuleBox[{$CellContext`nbobj$$ = NotebookObject[
    "8c41fee3-d44c-41e3-a8a1-e4ed151ad1a5", 
     "329cd078-4f3e-410f-a924-989706087dd4"], $CellContext`cellobj$$ = 
    CellObject[
    "e183e43d-6a2e-4889-b17d-51991a3a84ed", 
     "540278c0-7e0b-47fd-b440-00782e63d5b0"]}, 
    TemplateBox[{
      GraphicsBox[{{
         Thickness[0.06], 
         StrokeForm[
          Hue[0.4167, 0.406, 0.502]], 
         CircleBox[{0, 0}]}, {
         Thickness[0.06], 
         StrokeForm[
          Hue[0.4167, 0.406, 0.502]], 
         LineBox[{{0, 0.62}, {0, -0.62}}]}, {
         Thickness[0.06], 
         StrokeForm[
          Hue[0.4167, 0.406, 0.502]], 
         LineBox[{{-0.62, 0}, {0.62, 0}}]}}, 
       ImagePadding -> {{1., 1.}, {2.4, 1.}}, ImageSize -> 16, 
       PlotRange -> {{-1.06, 1.06}, {-1.06, 1.06}}, 
       BaselinePosition -> (Center -> 
        Center)], $CellContext`nbobj$$, $CellContext`cellobj$$},
     "InlineListingAddButton"],
    Initialization:>($CellContext`nbobj$$ = 
      EvaluationNotebook[]; $CellContext`cellobj$$ = EvaluationCell[])]}]], 
  "InlineListingAddButton",ExpressionUUID->
  "e183e43d-6a2e-4889-b17d-51991a3a84ed"]
}], "SeeAlso",
 CellChangeTimes->{{3.899145953543686*^9, 3.8991459780446625`*^9}},
 CellID->6272777,ExpressionUUID->"4e9c2aa1-009b-4d7f-9768-055babd90711"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Tech Notes",
 Cell[BoxData[
  TemplateBox[{"TechNotes", 
    Cell[
     BoxData[
      FrameBox[
       Cell["Insert links to related tech notes.", "MoreInfoText"], BaseStyle -> 
       "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "0f05ded0-b9b0-4663-ac70-22c5d5c1cdc8"]
}], "TechNotesSection",
 CellID->141461237,ExpressionUUID->"01ca74e0-cb49-4de3-b68c-fba25b607e48"],

Cell["XXXX", "Tutorials",
 CellID->161185351,ExpressionUUID->"b74abf14-6499-4cad-ab5d-3c01f0efc621"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Guides", "MoreAboutSection",
 CellID->537793649,ExpressionUUID->"d1f3958b-092f-459c-8bdb-743b25aa24fc"],

Cell["XXXX", "MoreAbout",
 CellID->127763274,ExpressionUUID->"acd54ba5-e5f4-4ea5-81a6-b147da48ac83"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Links",
 Cell[BoxData[
  TemplateBox[{"RelatedLinks", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Insert links to any related page, including web pages.", 
        "MoreInfoText"], BaseStyle -> "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "01a1bfa7-5a18-41b4-a771-8790a7c408ca"]
}], "RelatedLinksSection",
 CellID->26825956,ExpressionUUID->"3507fb83-89e1-4a28-8ccd-01057529e271"],

Cell[TextData[ButtonBox["Multiset: Definition and Examples - Statistics How \
To",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://www-statisticshowto-com.webpkgcache.com/doc/-/s/www.\
statisticshowto.com/multiset/"], None},
 ButtonNote->
  "https://www-statisticshowto-com.webpkgcache.com/doc/-/s/www.\
statisticshowto.com/multiset/"]], "RelatedLinks",
 CellChangeTimes->{{3.8991437340039096`*^9, 3.8991437340049095`*^9}},
 CellID->128231579,ExpressionUUID->"5351189d-84f3-4268-9c88-e67bfb84f969"],

Cell[TextData[ButtonBox["Multichoose \[LongDash] from Wolfram MathWorld",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://mathworld.wolfram.com/Multichoose.html"], None},
 ButtonNote->
  "https://mathworld.wolfram.com/Multichoose.html"]], "RelatedLinks",
 CellChangeTimes->{{3.8991436415153446`*^9, 3.89914365893794*^9}},
 CellID->177008703,ExpressionUUID->"9b6d6c95-38b9-4ebf-8a0c-2310a14dc90c"],

Cell[TextData[ButtonBox["combinatorics - Multichoosing (Stars and bars)",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://math.stackexchange.com/questions/781125/multichoosing-stars-\
and-bars"], None},
 ButtonNote->
  "https://math.stackexchange.com/questions/781125/multichoosing-stars-and-\
bars"]], "RelatedLinks",
 CellChangeTimes->{{3.8991436952874403`*^9, 3.899143718027233*^9}},
 CellID->353478408,ExpressionUUID->"4536ccc1-03ac-4e9b-89e3-925dbc3c0ffd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples Initialization",
 Cell[BoxData[
  TemplateBox[{"ExamplesInitialization", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Input that is to be evaluated before any examples are run, e.g. \
Needs[\[Ellipsis]].", "MoreInfoText"], BaseStyle -> "IFrameBox"]], 
     "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "69252276-660d-4aed-be2e-57d735b4fd2e"]
}], "ExamplesInitializationSection",
 CellID->72575616,ExpressionUUID->"0474d429-20d0-476a-8e1c-43ce36f863dd"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<PeterBurbery`Combinatorics`\>\"", 
  "]"}]], "ExampleInitialization",
 CellID->1002510501,ExpressionUUID->"281479a9-041d-45be-a446-a0c1e283eef2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     StyleBox[
      RowBox[{"Basic", " ", "Examples"}], "PrimaryExamplesSection"], 
     ButtonBox[
      RowBox[{
       RowBox[{"More", " ", "Examples"}], " ", "\[RightTriangle]"}],
      BaseStyle->"ExtendedExamplesLink",
      ButtonData:>"ExtendedExamples"]}
   }],
  $Line = 0; Null]], "PrimaryExamplesSection",
 CellID->67834393,ExpressionUUID->"0231d14c-2ab8-4254-ae64-6e6c429d40c8"],

Cell["Evaluate numerically:", "ExampleText",
 CellChangeTimes->{{3.8991445560123196`*^9, 3.89914455887958*^9}},
 CellID->353306621,ExpressionUUID->"34587ebb-1031-43f4-9e01-88e11fc38e16"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multichoose", "[", 
  RowBox[{"10", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8991445596491537`*^9, 3.8991445626490593`*^9}},
 CellLabel->"In[25]:=",
 CellID->124847537,ExpressionUUID->"169d06b5-1869-4d05-9d08-b0db4db3daec"],

Cell[BoxData["220"], "Output",
 CellChangeTimes->{3.8991445630120583`*^9},
 CellLabel->"Out[25]=",
 CellID->162967574,ExpressionUUID->"c8087d3b-a9c7-4f1b-8100-850d170e2097"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "722667ba-32fd-47eb-89cf-3ee7be165d85"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->31441438,ExpressionUUID->"0e0ef371-7aba-44c6-8ce1-94b463abaeeb"],

Cell["Construct Pascal's triangle:", "ExampleText",
 CellChangeTimes->{{3.899144567467902*^9, 3.8991445785779934`*^9}},
 CellID->402813572,ExpressionUUID->"b73cd6bf-7cbe-42dd-ac12-71fd9eab5500"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Column", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Multichoose", "[", 
      RowBox[{"n", ",", "k"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "Center"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8991445793830404`*^9, 3.899144599168415*^9}},
 CellLabel->"In[26]:=",
 CellID->173503726,ExpressionUUID->"dbb8b60e-53ca-48ef-9a6f-dabd71755ac0"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", "1", "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "6", ",", "10"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "4", ",", "10", ",", "20", ",", "35"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "5", ",", "15", ",", "35", ",", "70", ",", "126"}], 
      "}"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.8991445993874197`*^9},
 CellLabel->"Out[26]=",
 CellID->26995996,ExpressionUUID->"d4111122-6e45-4382-9187-93d0cf281576"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "d5402273-04de-4a99-8ca8-cebf3700ddcb"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->661358281,ExpressionUUID->"1733212d-7863-4d83-b6e7-3ff65b5dff63"],

Cell["\<\
Plot over a subset of the reals as a function of its first parameter:\
\>", "ExampleText",
 CellID->543509965,ExpressionUUID->"25a53542-1614-4a67-a343-f6dd3a8d379a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Multichoose", "[", 
    RowBox[{"x", ",", "3"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8991446276295986`*^9, 3.899144637367339*^9}},
 CellLabel->"In[28]:=",
 CellID->310368551,ExpressionUUID->"01d84da6-7593-4f5f-b772-66c117563246"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
MN6S9PGtLSL2P2pAdRk=
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
      Slot["HighlightElements"], 
      Slot["LayoutOptions"], 
      Slot["Meta"], 
      Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1: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
MN6S9PGtLSL2P2pAdRk=
             "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{-2, 4}, {-0.06415002130221859, 19.99999848979596}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>]]& )[<|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{-2, 4}, {-0.06415002130221859, 19.99999848979596}}, 
         "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}}]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
MN6S9PGtLSL2P2pAdRk=
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PlotRange" -> {{-2, 4}, {-0.06415002130221859, 19.99999848979596}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2, 4}, {-0.06415002130221859, 19.99999848979596}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.899144637690339*^9},
 CellLabel->"Out[28]=",
 CellID->73027157,ExpressionUUID->"84fba975-9353-48e1-a86e-91f8546a06bc"]
}, Open  ]],

Cell["\<\
Plot over a subset of the reals as a function of its second parameter:\
\>", "ExampleText",
 CellID->491941045,ExpressionUUID->"c3ccd5c7-e575-46e0-ae84-b2fcfd1620c1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Multichoose", "[", 
    RowBox[{"3", ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8991446551818714`*^9, 3.8991446592925887`*^9}},
 CellLabel->"In[29]:=",
 CellID->510723040,ExpressionUUID->"200a7da7-aecd-464d-b557-1defadb80630"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
mKCT/wEMCEaa
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
      Slot["HighlightElements"], 
      Slot["LayoutOptions"], 
      Slot["Meta"], 
      Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1:eJwVlmk41V0XxonQ5Ig0EFGicKJMhaf/jqKkyFCRVCoakYZHiFKKylDKgxSl
ZK5EEc5NJCnJlJQhKkOow+GMzvF6P+xrX78va9/rute6r63u4eNwcIqYmBhr
8vz/fuOu3jkxMQFBZm2gvY8vQ5NtZHuGOwFTjcO5ifO3IjzSpmiQOQEJIxuW
xnR32JacjG3tmoCW+d/5SUPH0bCgyvp5xQR2lmnnFeefw/emI089r0xgWWji
NQXLSIzb5F+olZ3A/P3sG3V7kuDeXf3HUnoC1pHf7JYZ3kXZ2fZdryZE2Nbb
XXtX+h4upksZP2aK8ERn5/TOrGRMl3L5fb5BBLkAb4v2U/cxv1zoYBgnQvpr
rbIjdx/C0MRa446KCIWOx6q3JGTCad8qSx9FESqb1h0Sjmfi1DUVD8tZIriN
9Qdp7c1CQScreWBciKY5eZIDGtkwDk9RNm8TIrZWPUovPQcmrTz59kQhftyk
1rfYPIVpYLb4ovlC+BXGz7KQeg7XR/+psWhChPvmaJfrPUdAXSj1VlqIg/46
ocKdz1G8xOWcD2ccG/7d/z0n8znMP0zl4fM4+lZWuAzZ5OMflT3MvbfHcSVx
HekNLgDB7M4H8uPQWmPaVpX/EpVz5e6JzxjH/EessZLGl9joLbt7r8Q41i+9
/sV/5CXsVGZ8UxkVQNfDlbtOrxDugZIt8c0C2H08+mBBWiGCTDgfo+IFaPLx
SOkIL4JY9FjkUIwA3aqzNq58WIRLPSxb2wgBVLrjCjehCNduM2umBQhg8sh6
9P1oERJZ/VWXdgnwXEX1s+LuVyh80sYIUBWA2XLPEouLYS797VzrXAHm1Zie
9TYtRpl7q/lqmgBHPxX8+2NbMd7O+vxqbIKPFws21ameL8bno3UvfLv4uHbv
Z9/X1mKMar3O9XzIx/kTf98cCi2Bf0jZ8TdJfJSmBUWciivB+GeGrsZtPnSZ
fYpWmSWQuFyc2RXGRwrcI0zrSyD/Mz/NzYuPOnt8PbSwFHopj+85aPNxwdxJ
69vjUhgm2eW2LOYjdc6e1OGXpTCN55S6KfMxXctM59PbUljFWLd7zuQjku/p
/qunFG7ne5UD//AQ5Rbp4LuYAY+gaB2xXh6eSC2mv9VnwMvfxCyskwe5gSsK
PWsZ8PO94hr9iYdrHm8lglwZCN+rlZCax4P/TEU/mWjGZJ269GVZPNwKN8hK
vsNA7M5/C3NSeRhau4QpeszAPfu3LS9v8eDueuauYhkDBcRr7oczPBjaDoSl
DjHwypymuc2Hhy2JsSqBXAbKVr80+uzFQ8riWeVKEsAHfWnn7zt5mNp9Uidv
HtCt9jh21JSH98pyUevWAn0L7VLPGvDw1czikos1MDSfkyfS4WF53IbLa+wB
rpx1g4wKD+E85GzbB4hm/u2KVOTh9hSTxojDgMS0/4blZXn4tSFE8uoJQFa8
V05lgovVgRevdp8H5gij1B5wuLA6TnWahgMLeMb6WkwuIhM+ULuiAY3hy3Yr
u7joTnHVGE0CzLo0ozZUcBF6ZEPg5QKAtH+8W1PMxeUV11YsKgasWs/k2OVz
8U73wVBIGeBQX/XB5REXcl8soxNqgJ213m0dd7mYG/bxhEMdsPvd3MH9cVzs
OKa9t7EROFTuOcP7Chd3+p330tsA71JZZVYIF0khS/2kvgMni15o+/tz0WFX
Ff34B+Bf4G4q9OXCzXV1kVwvEPxMyib0MBcLkgP/rPsNXMrJdZH2mGTVGD2z
ISAiY/vh665cOLWcDhr/C0Q9EvnPduSisUa3OWwEuHU/LTxuMxcx3Pw1LaOT
evWX2py15EImt+2hMgdYiNQZbmZctCq8Wa3KA75vWVy71oAL4XLvsQ4+8LAt
JUpdh4sAZsvX3eOT/RxdZC+5hAtbryn9kzEEXf7d2b1KXPhGDS2ajD0wwxc2
vpPnYvBgQojdBJA/786t7OncSaOnyrydZP+0Bdujp3Dxa6lB0fgkmxvFz/Pj
c7BPVj12MsYhVjm31WmEA8PHdbcfTHKlw+1Ek98c7GauLZef5PAuBTelbg6+
9nsrrpt8z9b3poqwlYPs2D036ZN65CbkOjvrOfgyJLf6iwBoioxOef2OA2du
qNS6yX7iF8p6PCrnQPt5gdBrUpZb1vUl4UUcOKlmqGxhA2qmM34decZB85rd
nkwW8LM6Im1LBgcZUxtatg0D6TtkDunf56DpgrTfiT/AsZ7LyxUSONieKzS0
GwBGJS5lfwnnYMd8XaMNP4HCm1O8i89z0Op8wG/3pN9B6hf07vlz8NRy9xeD
yXmQpILz9h/iYI/+DVXlyXmprh0/abWXA2O9DyKdj8B1t0Cj5Ts5ONjxVlpQ
DSgG+Bf+seagfIv4rcZS4KsM52w9xQFzFjWv/SVw77/TZvkmHJwJ/qfi4TNA
s8CPcVaLg2DfoNveD4HflsMhbos4kBopKfa9C+Q2+Kyj5nHQuYQxfWUcYMw8
VikpzUFc/JQlg5cBfvBAWK+IjRPfNgz2BAOMWUesa9hspH7c1JF8ZnI/dLxq
onvYkK6KNbc9CGz33PdJqYqNeq5edxQFKI113hCWsuHG8B8OMAI6Lro7fi9g
Y41h6PKlOoDn/V2fHz1ig6vfopCvCJxpc27TD2PjX++I+uJeBuIcbPqs1rNx
mSc77BfCAEO2bVO+ORtpMYPyxn4M/Ko5nqVuxIapjFYbDjBgaHnDe3wpGw3x
eQe0NjHQYPBl9Jk0G+mUxlYrGgM0RU9xlfdj6Es9EVoRUwrjeo7H1YoxRFqo
KA2HlMI9MqKSUzyGnPKlLr+8S5E7NedKQ/YYdu7bUqtuWwpbNmtWeNQYNmly
In9LlCK85YISa9sY3lTl+xYfKsHTWIWgvTZj4BxbEezoVIIWu0fttRZjSGJJ
GuRRJdCsrk5JNxiDw4PqmxWKJagspGm5K47BIyxT2xjFEE+8a/DuyygWeXwp
dpUuRoBbkW3ynlGwT7ftv3+sCHuz1Pce2TGK9W7lFSVbi2DFjzhpZDcKk7qB
d7f0iyAf75r4fu0o5uya/S6AVYjMRkEvR2UU8dOTb6qeKcRXm7UX7dtYaKyu
dHjj/RKmayqKxF1YUHi95ko0vQBq4Tq1H+xZ0P3n0xNKugBSLbHf/9vIAnN9
dnD293w0nDogvWI1C/v5hrSSm/k48nSqs+s8FuYLwwV5rOdI1NrIzGseQeE+
M3GxjDwIFGs1DziMIMYu9gL99RN4TOu86mwzgnzB7eFjnk9QM878Y2Uxgq0z
fa9rT3+CxB9zXi5fNYJnrpkWava5MH3mZv139ghWZZs8G2vOhr/toFdA/TBs
FhfEbXyXAXbojIwY+2FM3WV2MWprKtzPqMwK3TgMbqz21tjuB6g6rHfiJBnG
xpXDlnPPPECcveOa7frD0EmQfBp35z6MVO+8U5YbBmUWPkeiPBmnirR/p9Ux
cZK1OUqUGo+Rv5t0SrcykcRrjDi69SIYcj56a6yZ2K9+/K1MyAVErLxlUEAx
kXZi2LZyVwjUTnaY5egzsf3Exxs3Z/pjC9vP9q48E9q/woIeXvHANp7JN372
XzwV9berc05RDPm2PYElf6A0lMYvkLxN/bdB43DQt0Gcrs06opeURWVmKzfr
vR8E48XSHr/V2RRDQWHdj1eDaLJyMjZrzqZ6usQX2CQO4uuuOidXuVzKMLiz
ep7LIHyyVTcctnpKNbxIXPb88wDW2wUdda7Lo2Ytm93XX/8bO3XZgUL5Quri
dJHnjuo+qC8eca56Wk4ZXfD2DuX/RFRwck7Eg1qqcfWzmmaqCwoKWar115sp
5+QADclDX2G3uVkU/bmditEvqxr/2oAUnrvNJuoHFSi2MmTrjjdIrFB/pXqi
j1KOypRTUHw0+U/9MZs78w+V+1P8/jSf51SsXoOlcccwZTdDuvA39x11lu0n
Eq4aoxJWJJiH32yi8lbbZkVf5VLzFiRZ9de0UepJTw4lHBmnOsi5xiDvbipj
VfTMZf+IkWMVinzDVT3UYOT5+mBqCinrOWA0x/o39fqa4lGdSElit1PFK3Xu
H8qx1zG2tl6KnK0UXxzWz6TaK9j+plrTCJ3+ScmWOULtaHJS/f1xBhGZN8oe
bRqlBsp2mDZ5ypJVd1dGqnSxKX67p5ZLlhxhtml2mf3kUhaWmzsqdOXJhwp7
/bxKPlWuetS/9YECmSFonlZSO05tTNx3+uRGReLVGt2hki+i9tg2PGZ/n0vS
NvtWnt4oRrp6Duv4hcwn7x2q3DU3i5O+onrpHnslEpLzgh1qPoW45L4X9M5e
SA48bXJcbiFB3lkotxfKqJIvUpG5gcaSxNjgoJrT0CIyu1ZuVEJzKhk6uD/d
ZkCNBJm9FjUvlyIVdukvo8bVyWnhLGmnhdJk/H3WCRmJJSTF60qT8hIZ8rr7
1o2bWhokZt2H6wuWTiMGOvtmCrYuJbI+WRYVitPJgGzqhs7DmoSxvrD0hdIM
UhRa0p7wUIsIj+8x3i47k1w1WsL/U7+MiEs3JOgIZ5Kj+xYK94hpE+ONfq9t
xGRJlUPkIg97HcJvy+5THJEl9sIF/9rf0CXrj1XHbGHLkotzcvN4cbokUvBj
dRhflgxMXA9KTdIlakrKEaNTaMTTUaeY+1iXWO+IWN6oQCNNg/0/Mhi65Fb9
wSMxRjRS1O/9Q3NQl6yoUh2cfpZGvs6IT7xmTSf+zqa3LM7RSE3G5WSrLXRS
/tPZPOACjXQrl62a4kgnThKR1/sjaKQqSEEy0J1OAolAtzqRRmgrzR1OnqaT
6lctx8NKaCRz/+2k4FQ6kbdhKZaW0cjo+pWXLTLoxK1VljFaSSOH+PNEUk/o
5C9ng+yBWhqZ0v0m/sYrOplrlJ9r0UEjL1NTz+bU08neyrrtAd00kq4Z13y6
hU4yHAdEz3po5MO5RqxtpxNzv8V26n9ppCx9BdXQRyeXxddydrJo5EqQbVPS
Hzr5FOOSHMOhkesaBRyvUTpRUjttXS2gkYqUQxkGfDrZ/yTm78QEjSwf9uyf
mKCT/wEMCEaa
             "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{-2, 4}, {-0.12499980470160883`, 
            14.999999326530615`}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>]]& )[<|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{-2, 4}, {-0.12499980470160883`, 
           14.999999326530615`}}, "Frame" -> {{False, False}, {False, False}},
          "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
         "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
         "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}}]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
mKCT/wEMCEaa
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PlotRange" -> {{-2, 4}, {-0.12499980470160883`, 14.999999326530615`}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2, 4}, {-0.12499980470160883`, 14.999999326530615`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.899144660425097*^9},
 CellLabel->"Out[29]=",
 CellID->48236591,ExpressionUUID->"51bf1441-ba4c-4352-b0f3-52519b62812a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "b03859fc-42a3-483d-80dc-5836af4ef206"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->518217,ExpressionUUID->"76391add-0521-44cc-b986-e84464289d3a"],

Cell["Plot over a subset of the complexes:", "ExampleText",
 CellID->214227103,ExpressionUUID->"56d1ee21-4389-4e90-84d3-5a2f12b68caf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "@", 
  RowBox[{"ComplexPlot3D", "[", 
   RowBox[{
    RowBox[{"Multichoose", "[", 
     RowBox[{"z", ",", 
      RowBox[{"1", "/", "5"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"z", ",", 
      RowBox[{
       RowBox[{"-", "2"}], "-", 
       RowBox[{"2", "I"}]}], ",", 
      RowBox[{"2", "+", 
       RowBox[{"2", "I"}]}]}], "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8991446972895346`*^9, 3.8991447011995687`*^9}, {
  3.899144753035941*^9, 3.8991447667555733`*^9}},
 CellLabel->"In[32]:=",
 CellID->6401949,ExpressionUUID->"fcd53b06-426f-4ad6-aa2f-c27807a96e35"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQdcU1f///v7/X/PU60dCAkrAcLeeydBsdbR1lar1lpbLS3KVEQU3CIg
Ki6miCIC4gCUJciQPWWIOCvu0tpha+sjj21VrOd/7r3JzU1yE2JEQD3v1+fh
FRBjeArvfPjek3P0v1k83ed/X3vttaUj4JvpXy8fFxLy9coZKvCdT4OW+vsG
LZj/ftCyBb4LQty++X/wg2v+57XXHsD/YbcBAoFAIBAIBAKBQCAQCAQCgUAg
EAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgE
AoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFA
IBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAI
BAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKB
QCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEYhhTW1ubnp5eUFBw
9+7doX4sCAQCgRhIoNinTZumoqJiZ2cH37722mtQ+EP9oBAIBAIxYHh5eUG9
wz5PvgtVf/PmzaF8TAgEAoEYOKDkg4ODyXdhvYeeDw8PH7pHhEAgEIiB5CYO
+S7h+djY2KF7RAgEAoF4jsBuDxt+V1fXUD8QBAKBQAw8sMbDMk8d4yAQCATi
pQFJHoFAIF5W7t69SyyzQWN5BAKBePkg18+jZfMIBALxUkJceC0oKBjqB4JA
IBCIgaerq+s1HDtxULdHIBCIlwPo+WA6kOcRCAQCgUAgEAgEAoFAIBAIBAKB
QCAQCAQCgUAgEAgEAoFAICA3btw4cOBATU3NrVu3hvqxIBAIBGKAKS4uDggI
WLJkyZYtW9bj5Obmtra23rlzZ6gfGgKBQCCelUOHDoWGhhYUFEC9Ex+5cuVK
SUkJ6Xx4++zZs/fv3x/ax4lAIBCIp6W3tzcqKmrRokVFRUW3bt0iPU8C3Q6d
D7v9eiHI+QgEAvH8GNhzui9evLh8+fLs7OycnBxo8jt37kh7ngr8BGh4CefD
Z4FHjx4N4KNCIBCIV5a7d+8O4DbCtbW1UPJQ9fB2TU1NRkZGv56nQjgf/i1C
+Fu2bIF3Ap0/II8NgUAgXkFgk7ezs3vttdcGxPOww0PJ//rrr8S7ra2t0Nj3
79+HxlainEPnE/dAOD85ORldwEUgEIinArodNnkOh/Psnu/r64uMjFy4cCG8
QX4QGv7WrVvQ8Mp5ngq8H1jsJRbtoGE+AoFAyIEY18TGxhKbxj+L54mBfHR0
9Lp166R9Tnh+oJwM741YtIMu4CIQ0oSGhvrIpbm5eagfI2LwgJ4nLr/Ct8/i
+dra2oCAgPb2dmI+Q+vbAfQ8FVmLdtAFXMQry9WrVwFu+6SkJPKD0ThD96AQ
Q8+zeJ4YyPe7XAca+HnP1dGiHcRwxnDD9mcJ/Ck7R4esfw729qysLFnvIl5B
lPN8X19fREREbGwsdSAvi0HwPBXaRTto1wXEEGIUvcWxulnprFu3TvF/q7m5
mTqfgQ0fvltcXPx8vjLEi4ESnv/1119hwVi0aNGZM2cU+Xwo26HSLLFoB+26
gBhajKM3OdfUK52n8jys7lDs5LvQ8PBdYp6DeGV5Ws8TA3n4NikpCTpTkb8C
BTsc1sBL77qAFu0gBgeTjdEutdVK56k8LzGNR55HgKf0PHUgf/bsWQVb+jDx
PAnadQExyAya54kpDXUaT9R75PlXHAU939fXF4VDvgxKcWCFHlaep4Iu4CIG
AdONka61FUpHcc/D37KpQxsgNa5HvJrcvXuXw+HI93xvb29oaOiGDRuU+yeg
56FLlfu7g4mE89GuC4iBwnTTOte6EqWjoOeJxfPSS2uIlfOo0iPkQLwMaunS
pdnZ2crdQ3Jy8gvheSpo1wXEAGK6aY1bfaHSear5PALxtBQXFxP7khHSU+5O
4F9U8Irt8ATtuoB4Rkw3r3RrOKp0kOcRz4m+vr7U1FRyX7JHjx4pbTboeejJ
AX10QwbadQGhBKYxYW6N2UoHeR7xPOjt7YWGj42NHZB7gwUY+nBA7mr4gHZd
QCiOaUyIW2OW0kGeRww4Fy9eDA0NXbt27UDd4UvpeSpo0Q5CPqZbgt2a0pWO
xL4HQ/3VIF54iIF8cnLyli1bBuo+S3AG6t6GOWjXBYQ0plsWuTWnKh3U5xED
CHlQCOyiih8C1S9QdLDrDtS9vUAQi3bgkybadeEVx3RrgGvLLqWDPI8YEIiT
uwdqIC8B9HxcXFxBQcFAnU74IoIW7bzKmG7zcT2ZoHSQ5xHPzoULF8LCwpRe
Ht8v9fX1fD5/kvnI13CCg4MH9uTxFwu068IriMm2+S4ndygd5HnEM1JbW+vn
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
pZfvefHRzX6q6qU8Lzm0kfK8RJknJY97HiQKcjvapSXYKmaSLvlKWzTVkcOj
R4+oL4yC70LPD5NFlZBlO0ccvDBK6TzVfJ6YsZMmlxjFEH9K+xeJmQ/xG8Er
RVdXVzod8OMSn6m456kDefjdOPibbN+8eRNKHqoDtvFnkTwkKirqs8Uj/6qw
EZM8dYAj4Xn5qpec2MtSvSv99Aa7ICun0rsrVOnl9HkJzys4n5c9nBd6nk/j
+QRh4vkPtnO7ltmmTNcnr9t6eXmhqY4EGRkZ1NXI8Jtz+Cy2gSzf+XruhTeU
zlN5HlZ3qsmJUQxpb/intIsnien9Kyh5IBxuSCN9+rYinicPCnluj1chYDMk
vopnlDz8dWCUw9srMzR+KzMDlfZSkhcO6qmSl4wzpnqZtpfd6mkr/TFx1Use
IOtOv+rmiNSlWFrPH1TK87KG87vEhvPSZZ6UvCBxeGI9ulc4FH1t6m3DJKc6
4eHhqOQTexdTPwLr07Dy/OqdrxdceEPpPJXnJabxEp6HfyRxmZUo/LJKPoJK
v54nBvKDfFCINMQzV8pqjfHjxytt+N9//x1KfuJXs5wz3kuoYvx83ATzPKZ6
e3HPkxudyVU9afsqCdW7CAY4FdKqlz26gZ4/JntEn9+f53MkdrmR7vM88bkN
V9FFlfSep0g+Sa7k4zyg58EOGD7Yzu9Z7dgSaBUzUYfsHq/sJJ9QusSIpqam
hrwgOxwIT/738Ysjlc5TXYeVmMYT9Z7wPLmiUuLzkeQVRL7nYePy8/Mbqkuu
JFAC+IbDurerzKAZurq6lJD8pUuX4G8lOuO87LO2ja2Zsa367avFHHDCnl71
gnMGnWgiX/WVuOdlqZ7qeclK7yZb9VKjG5HquQovreTRXIeV9WJY6T4vazhP
LfOJ9GUel7zA81i2CdIdal+5wHyFmzYhfOJbsaCgYGi/2QYN2OSl19UMq0WV
kKjkf5+4OELpKO554sWt1I9Qx/XSKyqJmfxAfZkvPXI8TwzkU1JShuSSKxUv
Ly/vd99+0Grx2wlLt9c15s2bp/iyedjh4SeHhIRAk1iZ+7+/ud2tMN2jZvaG
GpWLpTqgwl6gesLz1D4PU+uIR2j4WmEEznfGQqv6SqlWT630tMvpla708j1P
rfSKX4clJb9H7kobRSRPlnkJz2/FswXLg2heV5DtwVlGk9hvviJXb6HMaV8M
Bcv8IJ+/Jp/B8Twhbek1k+TsXWK9JTHSkWbIG+mwJTw8XPrSGPXk7iEfGMKC
h3X4w/qg0+r6UYuv1Wyc/qVBLK2EFV2+3uHnjB8/3uONKR9qBfu7Vi+Yc/Xj
mHPu+Vn8mi9X1TKqykeLPF8p2/N1jiLDS6oet321iyBitidavSu96ukvyEpV
+gJKpc+T8dpYeZdihZKX5XmZw3meVJmXcRE2ic7zAsnzxSS/Q6zMk5IHMR6i
bPboCXNq8bVO+Uh09fblcz6xXI12q/lhtXgesjH537UXRygdtI/ZsGVITu6W
BbG/QUqQJui0AKcsT6dZLWDY+6o6zRhlof0/I3X+B6t/8fHxaWlp8Ck+Bwfe
hu0ddn74RzNe/2S5akSycUmC27l1428EzOmZuvE870g2v/rr4Fqtopo3Qbkd
jefJbeprHQSer3MShMb2sNW7YBGo3kXkeUz1rgLVS26AQ/uyKbmjG1rPyxrd
0I7opa/DPoXnef0P5+knNnIlT/X8Zjyb8GyE4fcsc2zxsUqZIul8+NT/4s7z
yf0NaP90WC2qhGxJ/lfTxdeVDvL88AS2poCAgOHTneCvG5MsRtyuNAIdFqDN
ojjCykfNwU/V2X+02zLVsUFve3i/4TblX5bc/6dv8b+aVv+rPe1fLtP/xQsd
NSf6naDD6kmFWkcK9CoPmbckup4Nf/f6wtk9n0Rd4Occ4VX7+NXqHa0ddb/I
EpTZYa2eGN2Qnq+lSt4RO5qq3glLnZOU852xiLV6F2GrJyu9q/igXmp0UyLl
+SIZL5giVS+6FCvH8zxxz8sd0ctZVCk5nKdbTkk/seHTT2zkSx7zPB9EU7IB
Ot+pZYF1yof6k1hvkvN8Ly8v+Fun9Grh4QztWJ7gPr6o8v7w2HmeYHvyv9ou
vq50kOeHIYcOHQoLCxs+p4US2zKkLNQE7eag1Ry0mOeEWvuqOfqruixUdV+u
Oi5CdfJWtU+SGJ/vY35zSD3wqMbSQo01JZobyrV2lGullGtllWoXFOpVHjZr
3ulyJmLctUWzemas/9bjcAG3KuDrOqOD9W/9km8ESm3xVm+HeZ6s8dhBVLje
G/CIbuC2r3fGUoenlhKxVu9Cr3pZU/oSGaMbWZVeQc8fkPJ8/32eT+N52jKv
4MRGxlgexPBFhhdJni8m+Q0wHlii8ERiubfKvcvPtugz0xVO2tR1O8RazeFc
9an7G0hz69atYbWoEhKf/H+nL/5b6SDPDyuIgXxgYOCwWu1ATOZ7igxAqxlo
MQNN5hun2PipOQaouixW5a1UfXeD2gc71KbvYsxJZ3ofVl+Yp7HsmOaa45ob
KrRiK7R2lWvtL9MuKNI9kW3alOzcFTnu2uKZPTPXXhpzsJhbtfjzOquM+ne6
jqiD4zagzBZU2IJKO1BtB2rtMcnXC93eKEwDGScshOpJ4Ut4XqR63POC6Y3r
7cN23alWLdtNi9YZVkYbV24w7t5tffuAPb3nJSu9+EJ66bmN9NLKQzKWVmZS
LsKmy97ZRnpFJe1KG/kTm+2yxvJ8mhpPI3m+hOQFicCzHkt3oEPlFxYxY0Vr
NcmqP3x+MwVS+xvQfsKwWlQJSUr+v/MX/610JPY9GOqv5pWGPCjk2LFjw+rb
zNPTM8VXA5w0A81moNHsQZWpD8POX80pQNU1RNVjjdp7G9WmxDFm7mZ+mcmc
n6OxsEAjtFhzLfT8Ca3YE1opFVr7y7XzoedzTJp2O53e4Hl1yfSeWasue2aV
ulcum1HntKdBraNw9D/HrGlUX28PGhwwvTcJPS+44SSMM2gQhtrtyVl9lUj1
D447V242XvEpw3vi28ReyvNw4A3CSzFfaVZGGYt5nuZqrPvTV3pZcxu6xTZp
MnY8oL0C23+Zp0he1sSGVvIbxSUf5SGKlOEFCRelJ8ipa75d0UyzFY7a1Kn+
kE94JPY3oAW2/eGzIzFBctK/vz0/QumgPj9MoB4UAuvE8Pk2u3nzJvwJ7T6o
B5pMQYMpqDO9c9TMl2EfoOYcqOoWqjY2XG1ijNpHiYxPU5lzs9QX5GosKtQM
O665rlQzulIrthLzfGaFdv4x3Ypck8ZUx9PRY68sndYze/mVcZkV7pUrptbx
dzcw2kpU7heY0kneXnDabLMjaHbC0uQkukGkkeJ5kepdsAiL/YMyp6L1Bt6T
3iZOQiGOuJJYFwTlk5aWBr/YSbYjetJsZY5uCtz7r/SSG9HLmc/L8bz8FZXi
cxuJMk9IPlaG5KllXmxcw5eUPOH5KL5kjY+UJXk+WAfjAdZSssaj28+hZZ51
yiSOtymDOuEJDg4e5LYvsb8BLbm5ucNqUSUkJfH17rNvKB3k+eHAEB4U0i/Y
FVjzfz+oNgJ1JqDWBFSZnI6z8GM4BKq5LFLlrlDzjFCbtE1t6k7GZ/uYXx1S
9z2iEXRMM6xUc125ZnSVVmyVVsoJ7cwT2nnFOhVHjRv3OnRuHHN56dSez5dd
e3dftduJtVNqPXc1vNFW/vbto/qgxBpU2OCSt8Mk30hKHk+LIzjpiL1tcRKl
WVz1DeKqx1v97aN2Md6a0PDV1dX9brz2008/xcfHe49/595hJ4U8n0e30U3/
I/r++jzNK6QU2OtA5Hlc8rH9jeUlJL9RtuSj6Gc1FMkThueDtXyq4cWy2gOs
wtLt41A52yJmDNvbREz7z3vII72/AS3DbVElZHf8yCun31I6yPNDC3Fy91Ad
FKII2BVYHyaoNQbVxqDSGJQbH1lo7cdwDFRzXaLGW6327ga193cwPtnFnJ2h
7pWt4ZensbhYc3m5VniF1kbo+WqtlErtzErtvOM65XlGDel2pzaP6Q6d0vPF
kuvv7a1zrYicXDthZ/2o+uq3Lx/VBIUW4LgVOGENamxBox1ossfSbI9L3gGc
dMA8D9MK3zoJ0kKp943inq/DKv29YocVnzGI0wwVfEkXhFC9DM/LuBRL9Plc
qbOlJJbcCPo8T1HPy1lpQ7ucUjS0kSrzWyUmNnwayUfLlXyElOSphl8nw/Cr
RYYXy0pBuuc7VM6ySHmPA7U/Sf0tcrY/sJd0afc3oGVY7UhMsCf2jWun3lY6
yPNDSG9vb1hY2JDvSyaHrq4ubGizTwdUGYEKI1BmBEqMNk+082c4Baq5LVPz
WMd4bxPjw3jG9D3MOfvVvzmiEVCoueS45ooKrfWVWpuqtWJrtFOqtDOqtI+W
6pTnGzZkQs97dId92DM36OZ7qY2uFdETa9+Prx9VUzfqfD6zLxfevwWosAI1
NpjnW2DswUkiuOdbHQVpcwJtzqDVWVz1zmIzHHxQXxRlAJv80+6fTEyrbu93
oLkUS1Z6mldLcWlGN4fER/RZ1CU3sl8MK+15OSttxIY2PAUkT1lCuZluViOS
PF/uQJ5ieGnJr6aETu+CrPAAy4mMIdI937Fljk3RNLMYd13q7n/EnCc9PV25
wi9nISWV4bYjMcHeHaNutKsoHeT5oYIYyIeEhAz+xsKKgw1tTP71oMwAVBiC
UkNQbHQn08Sf6RDIcF6k5racMTaCMWELY0oiY8Ze5hcH1b3zNAKPaYaUaq6o
1FpfpbWpRiu2VjulGvd8GbuswLA+y7Yjhn9pxfs98wK/m7j7pEv5lvfqJsfW
vVnROPJ8IeN2DhscMwEnLECNFWi0Aa12oNUetNmDdhgH0OYA2h2FccJU3+ok
UD1pe1L1uOcfVDqumM2orq5+KsnfJw40tB0h8Lys0Q1NpedKVvp+llZCyfNl
eJ5P73navQ4SqJKX8jwp+a1S116pkpe88ErX5KmGJyKa1Yh7vl/JrxBGXPIg
TDyhY24HuHbNs6ucaRnDZU/SHEVdzEMW/n4XIcva30CaYbioEpK27a3vTqoq
HeT5IYEcyMPvveF2xYcKttLGiwEqDEAZlLwhKDTs2mAeyHRayHBZrMZdxRi3
gTF5B2PqTsan+9S/PKwxv1BzUYnm0nKtlVVaETVam2u1Yuu0U2q0M6q1j5Sz
ywoN6g9at2/lf7tyco+XX8+kXe0u5TvG170fU/9WSdPIc8fVfs7TfpKvD8pN
QJ0laLIGbTag3Q502IFT9uCUAyWO4JQT6BBXvaDVO1NV35NjDYWgxNm18D8Q
9LzMvW7kqF6W52n6PE+yz8u7CEuVPE9GmecpVOZFr4dSQPJR0pLnS9Z4sskr
UuNXKGx4XPJgGTUeWJZ6dHs5tHxmfXCyUYyrZOH38vKSNj8xlqfd30CaId9g
hJb0LW9936ymdJDnBx/qQSGwZvR79X+oIHan7IpjgeMGoNgAFBiAowZHvK0X
Mp2DGG7LGPx1jPGbmR8kMD/ZzfwsU31erobPMc2gMs1lJ7RW12hF1GptrteO
q9dOqcU9f4JVWmRQd9iqfTvv4qqJPd/49ExO6nQpTRxX9/H6hnfymkedOzH6
VpHWowI9bDpUbQpaLEGbNeiwBafsQKcdOG0PTjvgcQSdjrjqHTHVtzsKbC9Q
vTOWRoHqbxfawh9/Odvv0EKcWrvOT0/eXjcKel6geh7N0spMKc/vow7neTTD
+WThcF5+mZcneb6Y5KkTmw1UyfMlB/IRuOHXy67xciQvs8PTST6UjIdA7Ljb
aRIiyL1A9+6vHCunW6Z46nsbq0mYPyIiYtGiRfCHTsEhP+xdw2e1G0nG5ndu
NTCVDvL8YNLb2ytxUAhsGsNqqTwVWIqwGfVBHXBMHxTog6P6f2fpr7ZzXATL
PMN9BWNsJHPCVuaUZOaMNObnB9S9jmr4HtcMrtAKq9ZaU6sdWa8d06Ad36Cd
UqedUaOdW8kqPaZfl23ZFsu9sHrid/O9ez6I73IpSRlbN2NlvWpOy5tna975
rljjfpEONiCqNgEN5qDNCpyyAZ224LQd6LIDZxzAWUdwxrE/1YtNbz5xUg0J
CVFc8vBJAX6+uvt7kQcc5L0wVnp15VHK3Ea60ksvrRR4XvbcRs5KmySp5ZSK
TGwEkuf3L3nJGk8xvITkpa+3UiUvbXiJGi/Su4cgy+giW/IgZAyWJWK57ePa
NceucprlWr7555/OJE/GkVjVQ2v+4bYjMUHmpnd+qlNXOsjzgwYxkIe9gvpB
+EviMPymIiCOFHmQp/ckn/PPUU5fNudGnOEipvNihttSBn8Nc1w0c1Kc+tQ9
6rMy1b/M1vimQNO/THNJpdbyWu219dpRjdpbmrTjG7VT6rUzarVzq1jHi/Vr
cy1aE9zOr51wc8HXPR/uOON6LG1M3WdLG5hZLapnat+5Xqxxr4gNyvSxy74N
puCkBei0BqdtQJctOGMLztqDcxKqd8LSjocY4FCnNw3OD6ucZquacv531Pjx
41taWuR3ePgJxLbJJhOCPeIOhx3nSm5TTFvpJbcpljWiV2BuI+rzfJmel7lm
nk7y2yQkz6eR/EaJcQ1s8nxKkxc3vNjSGr5Mw0tfaRWET2nyeMI8RIaX9rxM
twsNT7o9mC6Lxxz3n5Xi98XDoHHdcx27PrernGoZ48r2NhJ1fjs7O4lv+2G4
qBKSFa3yS7WG0kGeHxzgL4MBAQHDc4W8LGDzWT7xrX8KOQ+P6P2dzfnzAKc6
zCyI6RLMcF/JHLue+V4M84Mk9U/2qc8+qD7vqMb8Ys3ACq2Qaq0V9drrGrU3
NGtvbdFOaNLe1aCdUaedUw09z6k5Yt6a7Hpu3Xs3fL/q+WjrWbfCTI/aLwMb
NDJbVLvq3rp6XP1uMQuUcUCVIWg0wbZZ6LQAZ6zBGRtw1hacswPnpFUvVekF
ayydoOd/K3T4imE5d7SN5+t66v8zgthUs7i4uKur6xIOvFFdXZ2Wlka8JHaM
/rLPP2+fFn3+vX0VS4/zabYpFqneHRRw6U4ekev5gwrObSiepw5tdkqV+QTF
JjYxFM8rKnm+pOTX9Sd56eU0hNuJLOeL3B4mZfinKPAeYImHPMMvFuRC4NTt
vnN/WTQZezdIMt1fOsa4s1VUVCRa/TBcVAk5EDX610pNpYP2PRgEYIcPDAxc
sWLFUD+Qp4PD4eQtZj7M1/szR6/3gN5/MvV2z7QNZrqGMLhrmeM2MCduV5+S
ojEzU2NOjsbXhZq+ZVpBVVrLarVXNmqvb9aOPqm9tVU7sVl7V6N2Rj0rp4ZV
cpxTc9Ts5G6Xs+Hjb/h/2TN183n3/AO8Wi/vBlZmyxudDW9ermD8Ucr6p1wX
VBmABmPc8+bgrBU4Zw3O2YBztuC8HThPqN4BdEmr3lE0usE873QxzRZ6/mtV
u29UHOe8af/JCJux/2f0mjgW/2vu9ZbvEvbW9XYVqyZcnv/19WkbLkzYWzm3
5N2+ImeaSl9Eep5O9dDzR8RXVx4Wjuill9ATcxvpzW2o2xGnSFyElboCq+jE
hiL5TbQXXomZPF9geFrJr5Ua18iq8aTeBZKn6P1pJS+md4UMD/PHoolQ8p2B
n0gbHsuiMfd8uJP0RoSHh1O/54fnokrIoQjVO+VaSgf1+ecKeVDI5cuX4feP
glf8hwOw5EAHtsVo/nlE795hvT/2616ONVjMdA5huocxPSKY721Wn5ygPjVN
Y9ZBjbl5mt4lWv6VWsG1WmEN2qubtSNOsja2sba1sxJPslKatDMacM+X6lXn
mbakOp9d/+71wM97pkVf4B7J4dUsmNegn9byRlvjqO4q1TsV2g8FnjcCrabg
lBk4awnOWYHz1uC8DbhgCy5IqN5BoHo6z3cm23oxrL5Wtf9Gxcn/He5SlfFr
Rn8UrTp70+h5saqBcarL9jK3HNBMP6BTkGZeE+vSseq9y/O9rn8SBT1f/fnx
MQLPS1d6TPWk57nilV7K89l0ns+izG2onqfubEMztOGJDW0SyDU2PLkTGx5N
k5eYyUeSF16FhpeQvMjwRGgvtvKxiOkdTxifXu+yDC9Z3cUNL2NEQ83DoHH7
/eYc958lrXcyBycbwiYjUebv4zsSD9UPnRyQ54ctEid3Z2RkvECeJy7Cfpui
dS9H948Dur+m6x5fYh7CdFvK5K1hekarwzL/4S6N6fs15+RqfFWk6VOutbBW
O6RBe3mT9ppWVmQba1MHa/spVlIba3czK72RlVPLKi7Trc43aU5zOhPx7rVF
n/VMj/yWn3OUWxMwu8Fkd8uolpY3uutH/3pC668yHVCtD+oNwUkT0GEKzpiD
85bgvBW4YAMu2oKLdkLV22NXZolWT3qeeKmscHRzeKmlF8P6G9zzgSq8UJX3
1o3+eJPq53FqC3Yzlqarr9+vvuOgZvpB3PNxzh2rx19eAD0feWFCau1npZ69
eQ6yPe9G8TwesUrPk6z01CU31LlNJl9sXaX0okralTbUiU2cUPLSZX4LTyB5
0vMyJc8XNHnaS67rqJIX28EAD19g+JXiepcvedr2HiJH8h796p30ebX/TFjm
Hy4aJ0vy3V84wm9v6RPchueiSsjh9ap/lGorHeT55wRxUEh7e/tQPxAlIS7C
/nKI/fthnduZurf26m6fZL+MyV3O9FivPj5G/f0Ejalpmp8e1pxboOldquVX
pR3UoL2sWXvlSda6dlZUB2vzKdaOTlZSO2t3C2tfEyu7nlVcrltVYNKc7tAV
Ne7q4k97ZoZf8sgu5FYHzWww29kyquHkyEuNo38+oXm/gg2qOaAOet4YtJuC
LjNw3gJcsAQXrcG3uOcJ1UPPn7UHXQ6CSt+Bq74V3xih2ZHo85FTsPMNv1F1
8FZxXqjCD1OZuH701M2qc+LVfPYwl2aoR2Spxx7CPb/PrCbeuWPNu5cXfHV9
esTFCXtrZ5a59+Y7SJ0P7g6KhIGVvpArUn0enqO45KU9f5hHcylWem4j8UpY
sZdHiU9syDIfJ1XmSckTnt8sNasRjWt4IJInT/LyajxfScOH9neNdYlUjZev
d3HJXwicut73q56FH0i4XZCFYx7482PGaHt6ekp/29fU1AzP9W/Z69TuFrOU
DvI8CXxyt7OzIxdfPcsxH8QK+eFzUIgSeHl5Bb076rds9i8HdG7t0zmzzWCp
ulsYk79GHSvzOzQ+TNGcvl/r8zwtrxKtBSe0Auu0g1tYy1tZq9tZ4adYGzrZ
MafZsV2snaeg57X3NbMO17OOndCpKjRuyrTviva8umRGz6drLo85WOxetfST
Btv4ljerWkd+26jyY6XGf6tYoFoP1BuAFiPQYQJOm4Fz5rjnLcG31lilvyCs
9KTnTzmADgd8boNvdNYkOJTkKybmee/RDvNVnINUPFaoTIoc/ckWtS8SGD6p
zGWZ6hEHNDDPH2IXpJvVJGCe7/aZd336+osT99TPKOP/UWAnPEnQVSB5Sc/j
lZ6qemJuQ1V9Ni550vMSlV56biPmeR6N5wdE8lGk5Hlikl9PO43Hs5qPG54v
iizDCyTPFzM87QRecgmNwgVextT9j4XYWL7ZfwZpdem0TLdRUVGh3TxheC6q
hOSsYdwrYisd5HkCor6Gh4d3dXUVFBRA4UtfiFeEvr6+yMhI4uTu5/E4Bw34
TLd62ps/HWTfymR/l8ouXGQRps5byfSIUB+/RWNyoubUNK1Ps7W+LNL2Ltfy
q9EOamQtbWet7GCt7WRFnGZHd7G3nGHHnWHv7GTtOclKa2EdbmQVVbIri4ya
suxOb8K2Jv7+sxVXPLPK3KtWfFzP29byVlnbGxeb3/m+Wr23WvtJlS5o0AfN
RqDdGJw2BWfxSg89f9EKXMSn9NgFWbzSd9mDTlzy7Q6gFd/urNmBOI7kt0Jb
L6blN2q23qMdfVRcg1XGrho9OWr09G1qXyYyfPcyQ/erRx7UiDusmXGYXZhh
VpPo1LF2HOb5GeHfTkyt/6Tc9dciG7HDBLFIq54rUH2BdKXnUSo9xfNEn5c1
t5EezhOT+SSe2HLKOCnPi/aWJyXPo7/wCg2PhS+66iot+XUSkvfAPC9heGnJ
h0nVeDnXWOV1eCh5DzmlnXYa83DhuKN+s/f7zYE3aA0PAsc88ONP0h0RHBxM
+20Py/zwfH36kVWM/+brKB3keQJirwzyXeIq5NPuMEac3L1o0aLhvGWNgsD/
Q/YFqPbsZ91MY32bpBPNc16h7rFOfdxGjYlxmlP2aE3P0pqdr/1VqfaCau3A
RlbwSVboafbq0+x1Z9hRZ9mbzrK3nmPHnWPv7GLtaWPta2EdamIVVrErjxk2
HrTt3DLm8rKp338eem1cZqVb5ZoPGzw2t7xd0jbiQstb39Ux7tVo91XrgAYO
aDbEPN9pCs7glZ6Y3lywxgb15/FllmftMM+fwjfAacP3OmvB9zFuxA6iup5l
g3vebv5oR//RbiEqnmtGvx+tOmOH2rydDL80Zhj0/CHS86Y1SU4d4Z7dvnNx
z+9pmFbOv15kQTlMkOL5YzI8T1b6o6TneTI9T53biC22kbHSRszzpOR5MiVP
W+ZFkudJSp5meTwMD6/xfEnJr5A1qOGDUL4yQ/hgifRneOmBzKIxsMbDMv9H
4ERpvZMpmmIip8KtX79e/hEkQ8XRFcw/j+gqHeR5gFud2BOD+hGi3it+J+TJ
3UlJScOzEjwV0POHlqlez2Bd2cPKD7JYrs5brT4mWuO9HZof7Nb6ZL/2Z0e0
5x5nza9k+dWzFp1khXSwl5/RWXOWvf4ce8N59ubz7G0XdOLPs5PPsPd0sPad
ZB1sZhVUs08UGzZmW5/awe8Om/L9nJDr76bXup2IeL+BF9nyTlH7yPOtb95s
ULtbq/Wolg0a9ECzAWgzAqdMMM+fJVQPPY+vvSGWWZ7BXyp7yg7zfCu+rWUz
LvkG7GDZziTrr5lW3pjnnQJHc5eqjFs3+sNNqjPj1L5KZvjvY4ZlqUcd1ojP
1szIZhVmmtbsdOxY73nJ98vrM9ddmpDaMLVizNUSiucFqncXqV5ke2nVCz1P
qF7C8/3MbWivwMqSPA9s50lKnlrmJfeu4Ylm8vJqPA83PI/G8LSSF+hdMcNj
YueLJZgILPB0CZLKIpr0BHyw3verCwEfg4UeggSOkUjPXBf5/W14LqqE5C1X
/ytHT+kgz9OSnp4Ovx8UP6SVOpAvKSl50T1PPM2VRqld2ad9JpG1iecKJR+l
MX6b5vvJWlMztT/NZX1RzPqmiu1XxwpsYQV3sEO72CvP66y7oBN5kb3xW52Y
izrbv9VJuMhOPsdO7WTta2UdbGEV1LArSgwacqxOxfMuLf+w58vFN9/b2+B6
YuOk+slrW0bnt4882zbqZpPa3TrNh/WE5/VBmyE4hY9uoOox21uAc/jam3PW
4KwN6MJ3RYCeb8N3tmzBzyVpwA+iqnXIXmKJe94een7RaF6oyrvho6fEqM6K
Z3jtYgSkM5cfUI/K1ojPwT2/36Qm2bEjcswlP+j5tZcm7mn8uOLdc6XmNJ4v
kVY9l+6CLKXSk56nWXLDl7moUlHPk2VevuR5IslH8GTXeNzwayiel57SSA9q
qJKXnNLwQQglkm7nizq8fL3TuZ1U+v3Ad/Gx/HQQ6EGJ0PABMGNhYvgsT09P
WWWeWFQ5PBfF5YeqPzjEUTrI89J0dXXB3+xoL8dLQxwUEhUVNWwPClECYtv5
yi2MS3u1jwRZrlL32Kjx3lbNSYlaH6Vrz8xhzTnG9qpk+zTqLGxhB51iLz3D
Xn5eZ/UlnfWXdKK6dTZ162zt1tnRrZN4SWfXeXZqFzu9jXXgJCsfer5Uv+Go
ZUcS99uVH/TMXfjdhD0trhVbJjRMCGtRO9I+8kz7yBvNqnfqNR80sECjLmjm
YJ7vMAKdJtiqG0z15pjqz1piL546g2+JcMoW2+sMev6kHWi2w46gqrPHzhys
to/60OIbhvV8VYcFo50Xj+YvHz0+YvRHW1Q/S2R8vZsRmMlccVB9Q45GAvR8
Dqswy6QmhfD8F9c/XQM93zylYkJ7mSnF827CuAtaPdntCc9LqF6y0vMkl9zs
J4bz0p7H+7zk0Ia8AssTrZnfQfG8pOR54q94lZA8T+xlUALJ88QlL7fGh0kY
Ho9A73zM7bL0Tit5OYaXq3dS6cf9ZqX4fvEw0BN7N0C8yQcI0jLNBn5Xy9m7
fnjuSExQEKLxMEtf6SxduvQYhaH+ap4jd2Ug8WlQcRwOx87OTpGLsOTJ3c/n
IQ8ZxOL5zt0aXcnsGJ77Js33tmlOTtSakqY9PZv1eRH7qwqd+Q06AW06i0/p
hJzVWX5BZ9UlnXVXdCOu6kRf1Ym5qrPtik7sFZ3Ebp1dF9mpZ9np7aysVlZe
Hbu8jFOfZ96+y+3iqsk9X/n3TExpcymPHV///tJm9cPtb3SeGnn95OhfGzT+
bhR6vtUAtAsrPVR9lzk4Y4HHEpy2AqesQYcNtn3xSVvQjB9BVWcHauxAlR2o
tF/mavkNwwZ63ne085LRHitHT4hS/Xib2uwkxjd7mAv3M1ccUt+Qq5GQq4V5
/oBxzW6Hjg1jvvX94vqs1d0TUpunlH9YV24MjtN5XlL1XMlKj6meJ17p5Xo+
XeoiLJS8hOdJycfLlbxkmRcaXp7kefQ1Xtb1VmnJLxNmaX+SD6ZElt5lWV3c
7WQu+H+M7W/gPwkzfMAYmviPeeDDn6Qj8/IrwZUrV4bnokpIQbDWw3RDpfPq
9Plp06a9Rgf1+R3eJpq8IpKnntz9kkGMrTp2aRwJtorRnBCr9X6S9kdQ8odZ
s4/pzDuhO79e169NN6hLN+Scbui3uisv6669prv+um7UDd1NN3W33tDdfl03
7ppu0hWdXZd09p5nZ3SwstpYRxvYZeV69QVmbbtdL6ye9N3Xvt9P3nnKpSxp
XP3Hgc2aWe1vtJ8aca1V5XaT+p+N2qBJBzTrgZP6oBWv9KdNMNWfxlXfZYGl
0xJ0WGF7F7dag2Yb0GgL6myxAweh5E/Y/ZZt/Q3T0pths0DV0V/VbenoMatH
T4xWnbpD7fNkhvde5qIs9ZWH1aOPYJ7PzGEVHDSu2ePQEe2B9flZq7rhLxof
lE8tOYF7nlD9cTcspOfJkJ6XnN7wxCo9veeF623EFtvwpFbayCjz2wnP8wSe
j5Eq89GUGh8p9Px6nmggv5YniMjwPLCKJ2l4sYutPEFoDR/S35RmMREFqnt/
eieqO9Q7tr+B3yfSbqemcqoF/NGWv9S5pKRkGO5ITJC/iPUg1UTpvDqeJxZM
SkMqPTY2Fn4nwGd8RSRfXFzs7+8/TL4r4AOGTzfh4eHBOIpfVpAFscq0fqtB
vO2EeK0PkqHkWdMPszHJV+nOb9Dza9VbdEYv5KJeWLfeiqu6a27ohvfoRfXo
Rn+vG/O97rYe3djvdBNu6u68ppvSrbP3Ajujk53Vxj7ayC49oVtXaNqW6nJ+
7cTvvBd8/37CaZfSlLH1032atdPb32jpHHG1/Z2fm5n/bdJ6gnleF7ToY5Ue
uxqLL7zpNAOnzbFNbzotQIcFtnHxSSvQbA0arUGdDXbaYJUNOGELym07t1t6
M628GbbQ8wtV3Zepeq4dPWmj6rQ4tTkpjPn7mEEH1Fdla0Qf1Uw8opWZCz1v
VJPq0LER9/xnKy9P2HNycvmc7BNGAs8TkocphW/dBSnh4oGq5+Kq54mpPo+i
esXnNvSe5+GeV1zyePqRPE9Q49dSDL+aJ2NhPA+LyPA8sIynUIcPlmF4+ZMZ
it6fEAkUhSr5hwGe+33nHPebRet2QfzG3PuaO0lXcisbaXJzc4ftlbX8APaD
XWZK59XxvHwIs8n/tY6gr68vNTUVNvndu3crcnb88wPqHRZv+NsHfHqCD37S
6/or3h5HHqn2LL9oeHl5eRi8vvvDMUnaU1JYH+9jTc/WmX1Md16V3vxGPb82
zqIuzpJLnLCrnJU39NZ8pxf+g17kj3rRP+pt+lFv64+6O27pxv2gm9ijm3xd
N+WKzt5LOhld7APt7CPN7OMndOqKTFrTnM+HT7i54JvvP4w941qSNqZu9lfN
Oqntoxo7R1zueOvHFsZ/mjQfN7FBE/Q8B5w0ACfxBZYd+DYIp8xAhzmWdgvQ
aglarECjFaizBjXWoMoaVNiAMhtQapMTCD1vPZ9h56PqFKTKDVMdF646ebPq
9AS1L3czfdKZiw+pr87R2Ag9fxT3/CGjmr320PPf+s+5/tmKyxN3t04s90qt
NMEkD91ehqeUiDseLjiOB6q+GM8xHqb6Qp5Q9TyxSp+N5xAfU30/nueD3RJX
YKHneQLPiyTPkyn5aKHkqZ6PEBo+nCdP8mI1nidm+FBh5BheZoEXRrECL613
QQKoGVPiN2ub79wH/uOe+I8hQtU7mRguS3orG2mG547EBHm+On8nWigd5Hkg
PDgJfifEigN/BZD4TGIgT6zLOnv27FB5njA8fMCfadnFMKdU6iy6bbjtgfFO
YJICjJLvGWwuVfd/2nWhVLADl9Vck7WnpLKmZbFn5unOKdPzauD4nOQEnOIs
Oqu/5JJ+6HX9lT2cNT9wwn/kRPysF32bs/m23pbbett/0Yv9WS/+J72kH/R2
3dTdfU13b7dO5ln2gQ527kl2cRW79pjxyXSnc5Hv3fDx+v6jbefcivbz6+bO
aeIkt4+q7Rzx7ak3b51U+6NZ42ETCzQSoxvc8634a6baTbCdENrMsK0sT5qD
ZgvQaAnqrbDzZCutQIU1KLMGx21AsU30JKv5TJsFDHtfVedgVd4K1XcjVD/Y
ojojiTE3lembyVxyWH1NrsamPM2kPK3MI6yCw0Y1afYdm6DnP78+e/nliSlt
75X6b6syxT3vKvA8kXJ3UEaEK7C9QPU8keoLeJKeF1R6vqDSk3ObdHHP76F7
eRQp+Tg6z8fQeZ5G8jyR4dfRzmp4wg7Pw0JveB694WnH78E0hn9CZJF4Foon
0OMfIgF4JPWOGR7mvN/UcN+vvvP7gJT8Ez+aXPrMUf7lV5LhuSMxQd58vb92
WCkd5HkgHMtLI1HvpQfyQ7IECz4AYn+GGMbH90zjgcUeLOa7gdkuYJoMTJKA
UcJDgx1XdcIDWG5KqB4+iRx41z+VNTWDPf2wzmfHdOdWcbxb9P1O6S88axB8
0WDpFYOw7wxW/WCw9if98F/0I3/jbLjD2fw7Z8vvnG2/c2J/04v/VS/xV72d
P+nt+l53zw3dtCs6mefZB06xs9vYx2rYNcVGJzMdzka/e91v3vdTN5/n5h/m
1XrPajKKa3uzsnPEhc43vj+p9luT+t9N2pjnm/ARfYshOGkEWo1BqwmWk6ag
xQw0m4FGc1BnAWosMcmXW4FSK1BiDY5Z9x6ynK9uvYBp66Pm4KfqHKLGX6U6
Pkr1w21qM5MZ89KYflnqITnqa49obMrXTMrHPZ9tWLPPrmOzx7cBs6/NDrsy
KaV9fOnClVWwz7uIKn05LnkypOcFqsc9T1V9Hh5azx8QviSW6PNiQxsejedF
+1KSa+alyzxXbFwjuvDKpZf8aorkV+JZwRNJPkyG5GUX+CdkFlMSxKdxuyyx
U/VOjT81Y2Du+E7c6jO30XfGP1Sr+0rm7/n8Fc5M6ksgZTFsdyQmyPua89cW
G6XzQnu+oKCg3z1k4Cek4zzjbjPkyd3PcifPCDQwcTU5Rv3D2ybbgOVuPCnA
YhcW82RglgRME4FJ3D9G2/9rsLlHL9J3lLP0byXy/4nLS/ce0vk0W2cWXuO/
qucs6DAIOGMQ9K1hyBXD0BuGK24Zrv7ZcN2vhut/M4j83SD6P/qbevW33tPf
dk8/9h4n/i4n4XdO0h1O8i96Kbf09vTopl3TybzIPtDJzm5nH6tjVx83asmy
P7N53LWAL77/ZMNF3pEj3Fr/GU3mW9rerugcce70yO9aVX9pUv+zSRsb0Tfi
o5sWA4HqW4xBswloMgGNpqDBDNSZg2pzUGkByi1BqSUotgRFViDf6nq8xQKm
tQ/DzlfNMUDNdZnamLWqE6JVP9qh9ukuxlfpTP8D6ktzNdYd1dhcoLmzQGv/
UVZBDu75GP63gbOufx56ZdKujnHHw0IrjXDPuwgqPfR8hbso5VwsolbPw1RP
2F5Wpad6npzbSA7nhZ6nLfOxTyn59ULJh9PNalZxJSUvXeOXCUM3pXlCBNM7
78liPEFE+P8QWSSehZQECvIYJoAm//gToRjeD8vffuNyfWZn+syBN7CP+EqG
9HzlFOzyqyI/AsN5USXk6DyDPzfaKZ0X1/PEKnfpnUWpwDYLP4fYrIZ2G1IF
oZ7cPVTABw+/ihWMMd1GEcAqBVjuApbJWCx24kkCFonAHCYemMb+Y7L1L6NN
fxhEX9ZbE2z6vqL/xsU7V32T83XnFOl9AQ1fg9f4MwYLLxgGXzFadtNo+Q9G
q342Wvub0fq7RpH3jDb0Gm7sNdj0p8GWvw22/2UQ+5dB/J/6Cb2cpP9wdt7l
7PqNs/tnvdQfdPfd0M28pHOwi53dwS5qYFeVGrYctDuzdezVhfNuTo/Atqx0
r1k8rdE6uvWd0s6RXadH3Ggb/VMTs7dZCxvRN8BKz8FeGNtsiG1r1mQMGo1B
gwmoNwV1pqDGDFSagXJzcNwCHLMA+RYgzxLkWjavNl/AtPFl2PupOQWpuS9X
8wxXnbRZbWqc2me7GV9nqAccUl92RGNdnsbmQs2dhbjncw1q0m3bt/AvLpx5
/fNlVycnd3oeXzmvyqavxAmUuYByV1DhCk64gRPuohCqL+OKD3AolZ7G8zxJ
z6dLeV6izCfQlfmtlKXym7m45LlSkudikg/nikleNKvh4pLnCgwvMYoPkzA8
EVLvvCdEgnn/EFksTBBPcb0LDC8teX8yHoL4UTMG1nhY5mGllzY8Fh9B7nop
dPmVYNjuSExw5AuD+5H2SucF9TwxaZGvbmJxIPkJRBN+2lbf29sbERERFRWl
/GN9ZsgaX6Sz4IFlEiZ5LLuAVTKw2gksccNbJGCGN48D5rHAbMcT061/G2+6
axT1i2F4rfbC/jfquffkblRBpbUf1PsJjled/vxWA78ug0XnDRd3G4XcMAq7
ZbzyF+M1vxmv+8M4otd4w5/GG/823vzAKOah4dY+g+2PDWL7DOIfGSQ+MEj6
S3/nfc6ue5yU3zl7buvt/VFv33e6mZd1DpxlZ3eyCxvZlWUGzYdtu3aMuRI0
57uZay+PPVTiXr1saqP9ulbVY6dGtneOuN6m8mMT8z9Nmn2E5xv1QJM+aDIA
TYbY4SN1xqDWGNSYYGeFnzAF2EuZzECROcg3B7nmINsCHLTI+drCh2nry3Dw
V3MOVuOtVBsXqTZ5q9oniYzPU5nf7FcPPKy+LE8jPF8jpkgzuUhrfx6r4IhB
TYZt+zb+xUUzrs1ZCj1/emxJxJxKq8elzrjhXUGlG6hyx1IpDKZ6LqjggXIe
xfZ0lZ62zxNzG7HhfH9lfgdXbCxPSH4zIXkuZSDPxSRPel5yIM8VSH4lt79R
PGl4HgjBQrhdWu+PYYKEWcQXZSElgZLpC6DEXyIefX4Sesfj63HT54Nwn6/O
+nwMbwsz5jFF72R2jdVT5PIrQU1NzTBZPkfLkdlG/13rqHReRM97eXlB6RFv
5Xje09NTYmsy+FeeahUKMZBfvXr1EK6rEdZ4j27jcGBNuJ3MTtzzMIlYLOKB
RRywiAXmO4D5dmC25YHpxnsmkbeN1vUYrgSBRSCxC7TfB73Cu74HQOsvD+Or
z3+4ocU2qJrzTb3+/BYD31OGAReNFl82WnLFKOS68bLvjZf/Yrz6D5Pw/5is
7zWJ/Msk+pHJ5scmW54YbwPG24FRLDCMB4YJTwwTnxjufGyQ/Mhg19/6Kff1
d/+Hs+cOZ+/Peunf62Ze1Tlwnp1zml3QzK6o4DTnWp+O519e8ul3s1Ze8cwq
d6ta9VGjy/KTzLxTI5tPYUsrf2xm/N6o+bCJ9Q/0fIMuaNQHjQagwRDUGoIa
I1BtBKqMwQkTUGYCik1AoSnINwO5ZuCQGcgyf7jXbLmtlS/Tzo/hGKDmslSN
v0ZtfLTaBzvUZiQz5uxjeh9QX5ijEZavsb5AI+aY0PNH9WsybNq38y4u/uTa
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
HjjPA6E8EMwDp3gggCeZzB+FkefhyPPAPh4R+fc7eG+38V57cGHkn2/kdW/g
PnXndcFp/FruY1du+2pumwu3dSW3ZQW3eTm3aRm3cSmvwZnXsIRbv5hb78St
X8Stw3l/5MB7ZI/U2mG2fMRGyppfu1BG8MhKaoGgTp4lJITqCfNh50UN85FG
wjxR03xRE3ycJ4aapVr6abUgGLRZSGtvYdCOxSycscfeqsRyUoeFIfRYwuix
hSTyktTL2c4myR9+bW9vh7+w8qc0ww+/ah+qv8RJlXAEqU+qYzkO2t++87Dw
MOxMuQE/7P/1MTExzs7OxEVPX/ITJRsLDxeV6KwFbM++WAN95pPBh5N5GPyQ
Oa69gv/R2n82/p9LfY+BjtKyCR8JPnvASb4POvFeskmO7La2sjvYHga6h4CO
53utvS81dzeq7sgiH4ogXw2kJ3n8WjDXrWzM+TuiqPXG8aMXxJP80r6/kTIk
Km5IZvSPmWH/yrw8LC14eNKJEQneCpF7Fc6vUPfVmRSiMv28qtkVVfPbavPC
1a2SNOyzRi5+OGpp0agVZaNWV4xaUz1yXa2G+yONjXXqm+rUPOpVt9ep7KxT
2V2nvK9K+UCFslcZ9VgR5cRDyqlsytl0ytV4yv3b6nFnGdlHDYrXmlTM3lIy
KSB5Qoy5WazezfShmanfNyUOfx5PAnHKIE4NJEiXbpK0QYIeiKWBaDqIZIIH
LHCXDW6zwXUOuMIFF7ngHA+c4YLTPBDIA/484MsDx3jAmwsOcYEnl4j8h13c
dzu4b3DkX2zmdm/kPl3P7XLjPlnHfQyn8a7ctlXcFhdu80pu0wqi8NwGZ279
Em7dYu4jJ+6jRUitI7fWgVdjD3Fr7Hg1tpiNlDWvZiGvGuFXWyE1VoKaBUgt
wRJ5hNXOFzySqpsnxET1Ug1SMPWNFkgTIoaa+2nBJKmfayCpPTTXoHj+xD12
VklW09rnGnbIEKmfawR1ynmCZRizB7wlHDHkL1qEU/0vWdX5q5xUCUeQmvEj
xuJB+9t3Hv6r8JAbxD4zfW5HAvApN7DzX/KzejYWVp7zirmnX+T39/0Mp1/z
+5LmGk/jHxvtKTD2ODFvFRH8qBnra8fv+OLgf2Kp5xPBP9yDdViu/N6faT6x
kt/ntEz0/IjkxljyNzTUOwh093/Q2ftKe1fXqO3lqtsjKRdDtCJ3GuXNX18y
NvS+KNJjcvyvFnFkn9QfrqYMiYwbkhH9Y8adf6Vf+iXl9PBE3xGxXgqhTvRg
PZNLqrOuqZnfVp8XrrEgbqRN2iiHh5rORZrLyjVXVmu6PtJcV6/p3jhqQ9PI
Tc0jtzRreDSrbWtR3dmksqtJZW+Dimet8sFq5cMVyj4lVL8CyqlcSmgG5WoC
5X6YWuw5evYxcZHblIrZHiW/BSZPiLaYEat/NX1oWtp3TUnDuhNg56kgVhV3
fiQ6kT5RC22DEKMHomggnAHuM0EYC9xkg2tscIkDznNBKBcEc8EpLgjgghNc
4MMFR7jAiwsOcsF+LtjLhZF/u4P7ehv3pQf3+Wbus43crvXcTjfO43XcjjVo
Gt+6itvsggrfuJzTsIxTv5Rb58x9tIRb68StXcStceTUOHJrHLjV9kiVHbfK
FuJV2WDWvKqFmBWv0go9VlnxqxYg1ZY9auYLesxDahEh9AiyENZJiOqlGmTm
iholxFCTVLNUi4RBq1TbXMNGizF+tvMvWs+BkSegyM/B5sLOS1IvX/vmWQbj
lf4hu1vcJwaxD9WXrOr8V24hN7gRpGryiLZ00P6unb9+/fqAF8p9bN3m6dOn
sPNv37799A+CrxrEIdcczZU46V+MQ/AcmOTl4ADg9Gj+dVeWyWZZ8JOmbYSf
+X2p/3TzD/fFkj33lnOkF5acXpfZevfsok/3AnTi3oWeQG/vW52dz7W3dWpt
KVXff0Ptym6jhwvcivFWZrsmxk8wj1M+kvLD5eShEfFD0qJ/SLv9c+rFX5KD
ht/dqXnZ3uCCqtkNtTl31edHalgljLRNH+X4UHNJidaycq0V1Vqr6rTWNGm7
t2ptaNfa1KG5pWOUx+NR2zpGbu9Q39mutrtNdU+b6v5mlQP1yodqlb2rlH3K
qH6FlKA8Smgm5Woi5d49lehzjBwfcZH75HLzLaW/nUwZH205PZZ5Kf27lNSh
DSnDniUqgXgqiFMBCdKlm3gtEKuN9qWP1Ec3FrzLALeZ4AYLXGGDi2xwjgPO
cEAQB5zkAD8uOM4FRzngMAcc5ID9HBj597u5b3ZwXm3jvPDgdm/mPN3I6VzP
6XDjtK/ltK3htKzmNLtwGldyGpZz6pdx6pZyHjlzUOEXc2qcONWOnCoHzJ5b
aYdU2HIrbDBrbsVCiFdhhS2QsuRDldB8pIowr0e1hQCqQYRQrdSjuUgdIiLU
y2mYI9GIiKEmrHmOAaFFTitiCAt/2Nayce6YtjmG7VIdch5LGEGd2PnRo37+
+eevOmH+s6s68C3AX6Xzp6imtborBu3v2nn4GRjk/l/5sc4DfMpNQUHBx35E
z5mTihO66NsAe9/Xdb5v8Ac08KtA8687YeQPWq6AtYeP8Dmc8/d5URhU7T8x
yZcWnoOxpY+y2vc9Xac3dPkVsd8C3m8HRp5+ENAPoM7T9gP9ve/1dj7X8WjX
3tig6ZZG8/O0SZkQmCCM2Pdb/OTZcRoHk388nzQ0IuEfKVE/JF5TiDymc2na
5DA0e7eM1lgIJ/Cpo+yzNZ0KtZZWaq+s0XGp01ldr+3arLOuXWf9E51NXTpb
nmp7PNPa9kxze7fmzmejdj3V2P1EfW+n2r7HagfaVA82qXjVKx+pVfapoPqX
UIPyKaFZlKtJlHsPVKLP07N9RUUbJsHOl00MSB0X5WgayzqX8X1i2tD6tF+6
EhXfx1NQ59GhWLx0E6cJYrRAlA66q+B9OghjgFsMcI0JLrPABTYIZYNgDgjk
AH8O8OWAYxzgzQGHOMCT82Ev591uDoz8y22c5x6cZ5s5XRs4j93ZbevYrWvZ
La7s5tWcRhd2/Qp23TLOo6WcWmd2zRJ29WJOlROnchGn0pFT4cCpsOOUQ7ac
MhvMmlO2kItYYQswSwKvbD6vnDCPVzGPj1hIVBLmCqqkqucKoZo5wpq5wlpo
DvKoh6hOqh5rMJcgOt9oLm4yNyA0m+Pamxu0YK3mBomWppvsrXPnG7eZG8LO
o9SbS3T09tgcp97c6OGU37tf2YCrOn+VkyrhCKRMr9FeNWh/j87DevdZtbuO
R/+vhIUPCgoacFawbt06V1dX+I+h//6T8K2B9JDrklfMXTjy8r558Ad+Cagd
v116TuayE/NcYPC7xXt71b6vgxJfUfuPrORz+jW/Z4WHyHv/dX4vye4NDBh5
T0DfD+j7ENpeQNsN9He+1N3aqbOpSdutSss1eo7nUe+t+4Pmep767WSwwYVg
wa0gdtiOMfcM5sbjsKeNss/UdMzTcirQWlKqvQzmvVHXtVl3bbueW4euO9Sl
u/G53pZXeltf6W57rbPjjfbON9q7X2vteaW59+XIfc/V9z9T83yqdvCxqler
yuEmlaN1yserlP3LqEEFlLPZlCvJlLvhyjEXaVl+wqKNE8vNN5dN9E8bG7V4
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
1/lpEO78dKMz4lHf5AbffQaxYvP7t6z/r4wTwxxLKIcH7e/ReSLgcIr+6fk8
nMb3mSTAr5f/TGtrq5OT0+bNm+G/h0FfQAFrT7zinFA2+aLac3s/4X5J87/Q
F8W/dsLWqJluRPCvzFkDg/9auOdz7wv2yz1+EwO+WHgCHnQAOyjNu7TwfOgo
4B0DPB/AOw54voB3AnD9APcE4PgBtj+6lS0T3+gK3fTED+jIpvR+sPPv1P2f
qwW0qwY2qARXUc8WUK+mU+4/UIk5x8zd+2uZk3W1iXeu0U2/3+InuacOv5z1
XUbmd9UZP7emjOiKV3oRTX4TTgX3VECYKritBm6ogysa4PwoEKIFTmm/89N9
7aP73Fu364Bex1795p36DVv1azfpV67XK1+nV+KqX+iin79cP9dZP8tJP91R
P9VOP9lGL3GhfoKVfrylXtw8/RgL/Zg5+tFz9KNm60fN0o8yg2jRM7EZtOjp
9Ohp9JhpjFhTJA6ayozHEqayEqeykkyQZISdYsJOncJJM+Gkm3AypnAzTbhZ
JtzsKdycKbxcEyQPe2jCz4em8AtM+IUm/CITQTFWgghLTVDnUepNRBUQTD1W
NVUMVU8V12C1U3HnTQ0IMXNNN9pZZ8w2rjc1aMAaTQ0l5FPfwwimPmvC793i
YMDx112xIcbxYYuLKMcG7W/TeeIfBiz5p3e0k9/ZprOzs//rgrOzc3Z2dnR0
9O/crbSn9mrGJbqrAHc39sks8wb6kPctfFnzC6Zshp0ngh82e135pC2/413D
1y4xDdR5Xu/O8w/h1OPa84nUH5VLPe48zw+n3h9w/AE7QHrLcn9Awzcx1PHD
N6uF/IG6/0u1gE7Vk00qp2uUQ4uolzMo9yKUYy/Qs/aNKV1iWYM7f3JCwpS1
qcMvZH2XljUUXSqVMrwzTulZFPnlA8q7u8rgtiq4pQauqYNLGuDsqA+nNd8G
aL/y1ek+qvPkkG77Pt3mXXr12/RqNutVrNcrXadX5KpX4KKXt1wvx1kvw0kv
1UEvyVYvwVovzkovdoFezHy9aAu9yLl6EeZ6EbP1Imbph5vphc/UD5+hHzGD
FjGdFjENiTSlR0FTkWgTRgzCjJ3CjJvCjMcSprASjVlJxqzkKewUY06qMSdt
CifdmJNhzM2EqTfmZmHZU3io9sa8vCm8h5Ax7vwUfuEUQRFWPEVYgpVOwak3
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
eK4M9lwV5LUq0Gt1YO81Ab3X+Pf51b/POkPf9Ya+Gwz9Nur7bdL3y9H136zz
3qLz3qrz2abz2a712aH12an13aX1zdP65mv9CrR+u7WiPVrRXq1on1a8Xysu
1IoPsEiKIFD10iM66VGttFgnPaaTlehkx3WyUr3shJ44CTllIE7riTI99LyB
PGsgz7FAz/vLK/zl51kos+f9Wc9viQ2fmZ56LNy/KoBmPQ+pDlQAagCc5E2e
h9QFKaoCqDf7/dUVHZvc3NxO0LFB+fq1qcVd1jtMp/c8GlRvhKMoQSUPjNrd
Mrb1v3OH3DwzFosnANv7TWtWth2UKsO0vKgJSPhr48YVh77TqHz/OT9KoPMJ
xCyOTzg+hQhVz5X35JdGklf9HK5pz52flX5nlKB5svOMvvPgYgjfG/vMY1e8
gcvdPOwx/1b3BTVvLC7ruvJQl9zNPXbPpcreCboQ/ukpJnuTcm9KUmHPH47+
R17JK6eK/+PCgf+uLni9dvv/XM35x831XRrWdr39yxs3l7xxfUG3uu+618zu
WfmZW/mHbqenux+f7H70bY+DYz32jfTIH+6xfZDHlnSPnBSPDQkev8Z6rI52
Xx3psSrCIzvMY2WIxy/BniuCPH8J9FwZ4LXS3yvbv/cqQ+81+j5r9X1+1fdd
p+u7Xtdvg7bfJm3/HG3/zVpvwBaN91aNz3aNzw6N706N7y6NX57GL1/jV6AR
7daI9jCivRrRPo14v0ZcqBEf0EgOaiRFkENayWGN9IgGel4rO6aVlWih53XE
CR1xUgc9ryNP68gyHXlGz3JWLz/HQpUbqArIeQDwvD8NuOhPV/rTR8P9geR3
xYRW+dOAywEKRDWkBqr+SqASUQsIYqkLUq5y2RibGTNmtHJ0dMfJV6+9d6RL
jsN0Ms+Dit1qu0BQvaMuDfD8dHuxLe8nTpzYLod7gum0iXdE77a7uh3j1IAp
wPNI+Jtj3gZfPpbPtLxPy20vFD7nfPJTFmFhT8LanoTlvVn4/MBLNGd2rlE0
1+g3l13iDK1v1vs7o8dc4PknPebVd/+httuis11XHOmyYUv33fPJ01MCLkTO
Oq1dsUW5Nz2hsNf3R/6ys+SV48X/UXHg1csFr9ds+5/aTf+4tq7LrdVdb/zc
9dpPb9TNf6P6m+6VX/Ysn9Xr9Ptux6e6HZnofvAt932j3PMy3bcNds9Jc9+Y
7L4uwX11rPvKKLeVEe6/hLuvCHX/eYDH8iCPZYEeywM8Vvh7rjB4/aL3Wqnv
na3rvVrXZ42271pt31+1fddp+m3Q9Nuo6Z+j6Z/LeG9mvLcwPlsZn+2M7w7G
d5faD5Cn9stn/ArUot1q6Hm1eJ9avJ8RFzLiA4zkICMpghxiJIcZ6RFGelQj
K9bIjmmIEi1xXEuUaokTWvIk5JSWPK2Vl+nkZyBndfJzOuh5PVUBOa+HqjfQ
FyDnAlRfpCWvSogBwr/krwBUAaxUz6K8AqmFqq8LVB5RSVTd/z+nz4oydqKO
DcqXr8041GWrw3QyzzslCxYsmDJlCjoVa3e7WJfGPMGqW/Ad0VSjbKaAdhT4
TMGl3e9aYyn88RWBU63/IYQ92Nuh8AlEE8InkfA/g3zOYmrdf8GdpRWMwJTC
NXDYhc7ggpa+3JLFXt8a3b79refcu92/r+u2sLzrsmNdft3WreBH6cmphvNR
H5Zpf96q3DsottDjuyN/2VbySvHRfz934P9eKnitetvfr2z6R/ny/z3w1d93
zXx90zuvbRj/2q+j/7b97X8cmtrt+Hu9jr7jdmCc297RbnlZbtuGuOWku61L
dlsT75Yd47Yi0u3ncLefw9yXh7gvC3ZfGui+OMB9ib/HMoPnMr3ncp3Xzzqv
X7S9V2r6rNL0Wa3ps4bp+yvTb5263wZ1/43q/jlq71y192aVzxaVz1aV73aV
7w6V706V3y6VX57KL18lKlCJdqtEe1SivSroebW4UC05oJYcVEmK1FLAYRbZ
EUZ2lJEVM7JjDFGiIY5riFIW8gTveY2cVb1WfgZyVkedg5TrqAodp3o9fQGy
LCH2i9Tk8gBVpYG+ZOA876+4DKk2oawBcKoHXDLQWT6vumIdm/z8/E7TsUH5
4rWZRV12Ogz2vG34DQTRHvGgMGj712C2fc/As/1G2xWpPZqR8Ic29xR++UFz
D0sILu1+t2keUx+cGjB5WcJYs/CDpjZ9f7vy/0iApfZJXvifmrUvPF3LC186
m10Yh93BHO5a7jPHtAuJx5w/es1p7DH3erfvz3ddUtJl9Y5uBUtFx6cZzke/
f1a3fLtyz9DoQq9vjvxly7F/O3r030t3/9f+7Fd/fO8vIyL//CcuOpg/CZIi
/vd3DX9dktB121C3nIFuv6b0yo7vtSKm17LIXkvCey0JdVsywG1xkNtPgW6L
/N1+Mrgv1nss0Xku1Xou03gu13itYHqvZHpnq/usUvddo+q7VtVvnarfelX/
jUrvHKV3rtJns9Jni9Jnq9J3u9J3h9Jvp9Jvl9IvTykqUIp2K0V7lOK9kH1K
yX6lpFApOaCUHlSxFKmkh1Qy1vNq2VG17JiaKGFYjjNEKUOe0JAnNeQpACMH
ni/TyM9AzgK01DktVQ6p0FLndQD6AmRnZOjMtNSDYUGVevqSXgGoMpi4DEGe
r0Ge9zd7fhHZyxUdm5s3b3amjg3K5699fKBLgcNgz9ummQ0E2ziLFy82TbD6
p6ykd5ZROtNMS82PHN4CCJcy8zbzHhD+/KTRSPh5UROu6t6DbjfdoUnIDzk+
EvCxGbt1Pt/JNw2//5KdUSv50rTpoe9X7J5TfWcbe882us9+0GPOze5zL77x
U2mX7F1v5K3wKZ6uOx/73jn/xbsUe4ZHHegz+8h/ri965ecVfx6S/C/gv2Pc
uHFz5szJy8urra29detWIxfw5ZkzZw4cOJCTk5OWloac/57279kJvZbH9Fwc
0XNRWM9FIb0WBff6MchtYYDbAoPbQr3bjzr3RVqPnzSeixnPpYzXMrXXz6re
v6j6ZCv7rlL2Xa3su1bZb52i/waF9ybaO0fhnavw2azw2arw3Ub77mDx20X7
5dGifFpUQIt3K8R7FOK9Csk+yH6FpFABPa+UFimlh5TSwyrZEZXsqEpWrCJY
z6uJ42qiVE2eYFhOMkDy5GlGXgYxSV5DndNQ5RqT5FnPa2nABS1dEqwDkt8S
HVGpoy+xQM9DLkOqDQhlDeQKwJ9lHyVyxTo2RtixAfW80x+2ffPZa5/u77LP
YbDnbYM2EGybITfPzJMnT4YOHerm5sbavqvEwvYydAVaWtq+Ghfyvj3Mt1/V
vVscOokXfmEEEP673H2a+6QwkogPmzO/3bO3/JQr6efs2mhoQ0PfL9htZPt8
afT84nGvL293n1P1xvxTXZbv7rozu+/h6frz8VMqDEvyFHtGhO3uO3bFv3kT
rLRnzpxZWVnZ2LIA569atQr8VHCvf/86sOuC0B4LBvRcENRzQWCvH/x7zdf3
mq9z+0HrtkDj/qPaY5Ha4yeV5xKV11Kl13Jl718UfVYq+q6i+66m+62l+q+j
+m+gvDdS3jmUTy7ls5ny2Ur5bqf8dlB+OynRLkqUR4nyKXEBJd5Ds+ylJfto
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
K5LTulite+DwAgiFhYXC/gyo8MGX4PGd/c992VNSUoJata3vuFpNtgLyxxu6
vejhZ2MB7YMrRijeNlvyHXdsXvQ01XhHHRsQULqDL/n7A4EIv4vT+gCxo6UR
neV5PsDws2fPzsrKyszMxN37zhH+7QGq6zbzPK4TOn2suvHY804PKNXQkvig
TnOu51H4yVZ449rOlHnz5rWNe3Nzc3HTr3MHdWmE3XhU3mPPOzH1MEZuN0PX
jZRrZrJVaWkp3vftxQpwbxucFS0vL58xYwbu2HTuzJ07V9i0Mdq063GcGFd7
HgVtXDtp0iR+shXqvuLV71+stM2awLhj0+mDBs/bDq2xauDjPDP1TcTqbm3j
eT78aMzhw4fPmjULr6XwYqUNduvDHRscnJaHn/MoDLjR6m5t7Hk+wp2t8Ona
FyXA8y49BAMfIq5+ChyczpT19mJr1PbyPErzk63AwTtu0nacPHnyxNVtc9yx
wcFxRdrX83xsJ1vhBn5HC/K86xaNzM/Pxx0bHBxXpIN4HoWfbJWVlTVmzJht
27a19yvCMQftzeqiBwcf6Lhjg4PjoixevPjVV1/tIJ7ngyZbNbNxLZ/c3Fw8
OLNtgprnLnpwcOyG/x9xcF7CPHOyVVFREd5+os3iOs+j/0dXPDIODs6LEmB4
28lWuIHfxkHTl5z+sKhj4+rhmjg4OC9EhJOtZs6c2TZzdnD4lJaWuuI86ZIl
S3Jzc53+sDg4OC900GjMrKwsNBoTT7ZqmxQVFTl9lWDcscHBwWk+wslWwo1r
+eDWvROTn5/vXM+jATz4oAwHB+eZaWqyFdo/Gs+0clacvskI7tjg4OA8b/jy
ftKkSaD4nDVrFp5c6cQ4d5OR0tJSPFYKBwfHsfCTrYYPH/7jjz/ipe+dFSdu
MgIOsoDkcccGBwenlWn5ZCuclsSJm4yshnHKQ+Hg4Ly4AXV4REQEWnUTXCkp
KXHscZqfbJWbm4sb+C2MszYZwR0bHBwcI1w8n2EYX19foPf169eDK7YrKj9v
QHkvnGwF/J+fn4+F0/I4ZWwMOjneBptS4eDgdPAAt4Mynm+2AO2DL2fPnt36
R+YnW2VlZY0cOXLt2rWtf8yXJE6ZtYo7Njg4OCgZGRndu3cX3gLK+4iICCc+
hdVoTDzZ6plp/XqSaKkK3CjDwcEBAUoHYhfeMnbs2Na3buyGH42JNq61+u4T
GFc874sVtPh8Kz2POzY4ODh8fH19rap313kepanJVniHI5TWbzKyevVqpy+b
gIOD8+Km7T3PRzjZ6pNPPlm0aFEbPGnHTys3GcEdGxwcHKvYduNtO/YuDZps
lQVju3HtSxi0erDDP44Pi3BwcKxiW73bduzbJniyFUprNhnJzc3FG7/i4OBY
ZfHixX/605/4Krq+vh5of/r06e31evi1FGwnWwEBvgwr6zq8yQj6QdyxwcHB
sQoQe/fu3dE8KX5ibEfYxNZqstWNGzdeko6Ew5uMvCS/HxwcHAcCDA9U/ycY
IPz169e39ysyRzjZ6s0337S79H0nC3C1A57HHRscHJxnBtTwHfkc6PXr1/ny
Picnp5nJVvn5+S+08RzYZAS19PEGvjg4OJ0jzU+2Qj3qF9p4Dmwygjs2ODg4
nS92J1uhlbtedOPlwrT8/i/68QsODg5O8xFuXDtr1qyNGze29ytqbZ5rkxE0
2P6FPn7BwcHBaUlQeZ+VlWW1lsKLmOfaZAQcv+CNX3FwcF6qdILJVi33PLjb
yzChAAcHB8c2zUy2MsIauCMvjNnC7VxRx6b1y9Tj4ODgvNCx3dmq46/l2EJ7
g38F7tjg4ODgoFjtbLVnz572fkXNpSXnVVHHpiMfleDg4OC0S4STrUB53zF3
tnqm59HCxa3fQBYHBwenI2f27Nljx451+Mebn2xlhN3vVrw6x4M2GWl+LTLc
scHBwen0AaX4q6++2vrFk5va2aodx7E8c5OR0tJS3LHBwcHpxKmvr58+fTqQ
/J/+9CcnLpIvnGy1atWqadOmtVdXpPlNRsCnQAtH4+Dg4OC8oMnIyACSnz17
NgPj3AfnJ1tlZma212Sr5jcZWQ3Tlq8HBwcHp41TUFCA9OsKz/Phy/u2n2zV
zCYjuGODg4PzUsWlnkdpfrIV8G3LV6FpedAu3ra3oyXagOqd/ow4ODg4HTNt
4Hk+tpOtjC5roTS1yUjHn96Fg4OD49y0pedR0GQrZPuPPvpo0qRJrmih2N1k
BBX5eONXHByclypt73k+aLIVWhvT6ZOt7G4ygjs2ODg4L2Ha0fN8njnZyoHY
bjKCOzY4ODgvZzqC51GsJlsJy/ubN28+73wrYHXh6V3cscHBwXlp03E8z0c4
2QqdrnVggQKrxec7wTaIODg4OI6lsrKypKSkvV+FnfDlfVZW1pgxY8rKyp7r
x4WeB58ReONXHBwcnA6b55pstXr1arTmPH/KFU2Ywh0bHBwcnA4e4WSrptZS
EE505TcZwR0bHBwcnBcrVpOt+NutJroiz+OODQ4ODs4LmqdPnwLJC9dSsJpX
CzwPJN+SLaVwcHBwcDpy+MlWw4cPX7VqFRqNCWr76dOnv/vuu7hjg4ODg9Np
cvjwYX6y1ebNm8eNG/fNN9+094vCwcHBwXFy+KXvP/zwwxs3brT3y8HBwcHB
wcHBwcHBwcHBwcHBwcHBwcHpJKmvr6+Eae8XgoODg4Pj5ADDjx079tVXX/0T
jK+vb8dcmQcHBwcHx7FMnz4dSH727NlA+AUFBQzDgC9xYY+Dg4PTaQKsDup5
/ktge1DVA+2340vCwcHBwXFWgNUXL14sbNQgz4Miv/1eFA4ODg6OCwMMDzz/
zJWKcXBwcHBexAC9W7VxcHBwcHA6TdavXw8kzzBMfX19e78WHBwcHBwnZ/bs
2aiSx5LHwcHB6XxBPXl87hUHBwenUwZU8kDyixcvbu8XgoODg4Pj/FRWVr4K
M9YyeLwNDg4OTucI8LmvveB5Ujg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4
ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4
ODg4ODg4ODg4ODg4nT7/PwVtCdQ=
    "], {{0, 228.}, {302.4, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{302.4, 228.},
  PlotRange->{{0, 302.4}, {0, 228.}}]], "Output",
 CellChangeTimes->{
  3.899144702423589*^9, {3.8991447558506565`*^9, 3.899144767802063*^9}},
 CellLabel->"Out[32]=",
 CellID->109263075,ExpressionUUID->"b226d29b-c6d1-45ea-8f51-2f3262473a80"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "de78ff12-1eca-47ee-ab01-bf248cf994f0"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->115368116,ExpressionUUID->"82a8ceac-1b23-4a26-9606-fb5c89b8da65"],

Cell["Series expansion at the origin:", "ExampleText",
 CellChangeTimes->{{3.8991448474579535`*^9, 3.8991448549061995`*^9}},
 CellID->37383982,ExpressionUUID->"5b365059-1994-40d5-8e33-ace350e2672e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"Multichoose", "[", 
     RowBox[{"x", ",", 
      FractionBox["1", "2"]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "2"}], "}"}]}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.89914432406372*^9, 3.8991443339254045`*^9}, 
   3.8991448941489024`*^9},
 CellLabel->"In[1]:=",
 CellID->982884676,ExpressionUUID->"db8c0f3b-c03d-430c-950a-af5262adc062"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"2", " ", "x"}], "-", 
   RowBox[{"2", " ", 
    RowBox[{"Log", "[", "4", "]"}], " ", 
    SuperscriptBox["x", "2"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "x", "]"}], "3"],
    SeriesData[$CellContext`x, 0, {}, 1, 3, 1],
    Editable->False]}],
  SeriesData[$CellContext`x, 0, {2, (-2) Log[4]}, 1, 3, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.899144334407402*^9, 3.8991448993423758`*^9},
 CellLabel->"Out[1]=",
 CellID->388728877,ExpressionUUID->"e82b887f-655a-47ad-9c8c-f1e186fc1c00"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "e4129f78-6691-46d3-8d4e-f99537a8d3d3"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->79982383,ExpressionUUID->"7d44847e-19dc-4b22-911f-2c919c9e803d"],

Cell["Series expansion at Infinity:", "ExampleText",
 CellChangeTimes->{{3.8991448576928844`*^9, 3.8991448632994404`*^9}},
 CellID->132070246,ExpressionUUID->"613e0eb0-21ef-4a26-b972-7c9b0f934e47"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"Multichoose", "[", 
     RowBox[{"x", ",", 
      FractionBox["1", "2"]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "\[Infinity]", ",", "3"}], "}"}]}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.89914432406372*^9, 3.899144353060528*^9}, 
   3.8991448955498652`*^9},
 CellLabel->"In[1]:=",
 CellID->855380164,ExpressionUUID->"0132a0b0-553b-4ae7-8761-2db2a0caac2e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", 
     SqrtBox["x"]}], 
    SqrtBox["\[Pi]"]], "-", 
   FractionBox[
    SqrtBox[
     FractionBox["1", "x"]], 
    RowBox[{"4", " ", 
     SqrtBox["\[Pi]"]}]], "+", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["1", "x"], ")"}], 
     RowBox[{"3", "/", "2"}]], 
    RowBox[{"64", " ", 
     SqrtBox["\[Pi]"]}]], "+", 
   FractionBox[
    RowBox[{"5", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["1", "x"], ")"}], 
      RowBox[{"5", "/", "2"}]]}], 
    RowBox[{"512", " ", 
     SqrtBox["\[Pi]"]}]], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", 
      FractionBox["1", "x"], "]"}], 
     RowBox[{"7", "/", "2"}]],
    SeriesData[$CellContext`x, 
     DirectedInfinity[1], {}, -1, 7, 2],
    Editable->False]}],
  SeriesData[$CellContext`x, 
   DirectedInfinity[1], {
   2 Pi^Rational[-1, 2], 0, Rational[-1, 4] Pi^Rational[-1, 2], 0, 
    Rational[1, 64] Pi^Rational[-1, 2], 0, Rational[5, 512] 
    Pi^Rational[-1, 2]}, -1, 7, 2],
  Editable->False]], "Output",
 CellChangeTimes->{3.8991443537684393`*^9, 3.8991449006164665`*^9},
 CellLabel->"Out[1]=",
 CellID->44816544,ExpressionUUID->"9b169231-376e-4d37-bdc3-b2204d0b7406"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"Multichoose", "[", 
     RowBox[{"x", ",", 
      FractionBox["1", "3"]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "\[Infinity]", ",", "3"}], "}"}]}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.89914432406372*^9, 3.899144367278346*^9}, 
   3.899144896523864*^9},
 CellLabel->"In[2]:=",
 CellID->800223642,ExpressionUUID->"e89bdca1-9b33-4bb1-9195-ece30c11adaf"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox["x", 
      RowBox[{"1", "/", "3"}]]}], 
    RowBox[{"Gamma", "[", 
     FractionBox["1", "3"], "]"}]], "-", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["1", "x"], ")"}], 
     RowBox[{"2", "/", "3"}]], 
    RowBox[{"3", " ", 
     RowBox[{"Gamma", "[", 
      FractionBox["1", "3"], "]"}]}]], "+", 
   FractionBox[
    RowBox[{"10", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["1", "x"], ")"}], 
      RowBox[{"8", "/", "3"}]]}], 
    RowBox[{"729", " ", 
     RowBox[{"Gamma", "[", 
      FractionBox["1", "3"], "]"}]}]], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", 
      FractionBox["1", "x"], "]"}], 
     RowBox[{"19", "/", "6"}]],
    SeriesData[$CellContext`x, 
     DirectedInfinity[1], {}, -2, 19, 6],
    Editable->False]}],
  SeriesData[$CellContext`x, 
   DirectedInfinity[1], {3/Gamma[
     Rational[1, 3]], 0, 0, 0, 0, 0, Rational[-1, 3]/Gamma[
     Rational[1, 3]], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, Rational[10, 729]/Gamma[
     Rational[1, 3]]}, -2, 19, 6],
  Editable->False]], "Output",
 CellChangeTimes->{3.8991443681484327`*^9, 3.8991449019031487`*^9},
 CellLabel->"Out[2]=",
 CellID->161465871,ExpressionUUID->"f66f7349-dd3d-4a3f-8dd7-e4b7add4a9d8"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "More Examples",
 Cell[BoxData[
  TemplateBox[{"MoreExamples", 
    Cell[
     BoxData[
      FrameBox[
       Cell["Extended examples in standardized sections.", "MoreInfoText"], 
       BaseStyle -> "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "c9d56cf8-d424-4b84-8d0d-44aa008be021"]
}], "ExtendedExamplesSection",
 CellTags->"ExtendedExamples",
 CellID->582335249,ExpressionUUID->"6cabac2d-830a-4e2b-b63a-4448a5c90d39"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Scope", "ExampleSection",ExpressionUUID->
   "4c151f02-6d1d-4195-b44d-97aa3a7f5539"],
  $Line = 0; Null]], "ExampleSection",
 CellID->51806884,ExpressionUUID->"b04ff0f9-7240-4233-b44f-4ed270ccbcde"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Generalizations & Extensions", "ExampleSection",ExpressionUUID->
   "c115c80a-4622-474b-a135-f9fd481ff3d3"],
  $Line = 0; Null]], "ExampleSection",
 CellID->36495576,ExpressionUUID->"c1c4696f-0a28-4320-a06d-3deaafe2545f"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "Options", "ExampleSection",ExpressionUUID->
   "0501e87c-12ed-4ba5-bd15-cdbfb6b28998"],
  $Line = 0; Null]], "ExampleSection",
 CellID->790241301,ExpressionUUID->"da647f46-e0dd-4b71-9850-3f6f87763357"],

Cell[BoxData[
 InterpretationBox[Cell[
  "XXXX", "ExampleSubsection",ExpressionUUID->
   "0d82b926-92ea-4070-8b07-79b549c5437b"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->5580300,ExpressionUUID->"0ece1646-ac8c-48d6-b7da-976f075fc8d6"],

Cell[BoxData[
 InterpretationBox[Cell[
  "XXXX", "ExampleSubsection",ExpressionUUID->
   "a96c577a-ff08-4fed-9551-a6d7469e297b"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->17715710,ExpressionUUID->"0559ab1f-ac94-4756-b8c5-aa3c6c6793c8"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "Applications", "ExampleSection",ExpressionUUID->
   "13585d54-a83f-4331-97b1-27f130c3f24e"],
  $Line = 0; Null]], "ExampleSection",
 CellID->317749877,ExpressionUUID->"67e2f073-1639-4fbb-8109-88afca6bbb6c"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "Properties & Relations", "ExampleSection",ExpressionUUID->
   "ec34538f-e5e2-40dd-bf07-ca7e446cb503"],
  $Line = 0; Null]], "ExampleSection",
 CellID->337002233,ExpressionUUID->"55d8c626-f722-44c5-9ffd-7a8b3f745aeb"],

Cell["This is related to OrderlessCombinations.", "ExampleText",
 CellChangeTimes->{{3.899144943304098*^9, 3.8991449536244245`*^9}},
 CellID->589958039,ExpressionUUID->"8984d40a-bbce-4bac-b689-0b7fd47b733d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OrderlessCombinations", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"j", ",", "k", ",", "l", ",", "m"}], "}"}], ",", 
   RowBox[{"{", "2", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8991449543565073`*^9, 3.899144965415703*^9}},
 CellLabel->"In[3]:=",
 CellID->139447373,ExpressionUUID->"e6e2e31e-c82a-4d6b-a4bc-f59dda3f7df5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"j", ",", "j"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "k"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "l"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "m"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "k"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "l"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "m"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"l", ",", "l"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"l", ",", "m"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "m"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8991449658027115`*^9},
 CellLabel->"Out[3]=",
 CellID->44141825,ExpressionUUID->"d7fcb10b-3856-4a3d-983c-d6fd4fb0fb2b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"OrderlessCombinations", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"j", ",", "k", ",", "l", ",", "m"}], "}"}], ",", 
    RowBox[{"{", "2", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8991449688719206`*^9, 3.8991449708735466`*^9}},
 CellLabel->"In[4]:=",
 CellID->43655691,ExpressionUUID->"62d3b086-56b1-4dcd-b8f7-5ec359974236"],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.8991449714105577`*^9},
 CellLabel->"Out[4]=",
 CellID->199309359,ExpressionUUID->"8dce5b25-d54c-4b4f-b73e-7cef7e9d2bdb"]
}, Open  ]],

Cell[TextData[{
 "This is 4 multichoose 2, written ",
 Cell[BoxData[
  RowBox[{"(", 
   RowBox[{"(", GridBox[{
      {"4"},
      {"2"}
     }], ")"}], ")"}]], "Input",
  CellChangeTimes->{{3.8991449790915856`*^9, 3.8991449814752007`*^9}},
  ExpressionUUID->"7b33fb47-ae59-4faa-a4c6-6961828b8069"],
 "."
}], "ExampleText",
 CellChangeTimes->{{3.899144974067108*^9, 3.899144996659957*^9}},
 CellID->420037904,ExpressionUUID->"219f555e-dbe0-4f7d-ac6c-897491d68f01"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multichoose", "[", 
  RowBox[{"4", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.8991450018220835`*^9, 3.899145004136361*^9}},
 CellLabel->"In[5]:=",
 CellID->231932511,ExpressionUUID->"a8b41a0d-541e-47f9-a856-3a3778fbeaed"],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.8991450044813633`*^9},
 CellLabel->"Out[5]=",
 CellID->438819927,ExpressionUUID->"3ce783cd-103c-4445-9f6d-5b8c07ee20fb"]
}, Open  ]],

Cell["\<\
If we count {j,j}, {m,m}, {l,l}, and {k,k} as equivalent, then we use \
OrderlessCombinationsOfUnmarkedElements.\
\>", "ExampleText",
 CellChangeTimes->{{3.8991460116784296`*^9, 3.8991460358609695`*^9}},
 CellID->491974207,ExpressionUUID->"6d60f134-a36e-4cbc-a569-d13ba686c7a7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OrderlessCombinationsOfUnmarkedElements", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"j", ",", "k", ",", "l", ",", "m"}], "}"}], ",", 
   RowBox[{"{", "2", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8991460366839223`*^9, 3.899146045421336*^9}},
 CellLabel->"In[31]:=",
 CellID->2396499,ExpressionUUID->"03191ddc-e81c-4e66-bd61-cd4e4318893b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.899146045753378*^9},
 CellLabel->"Out[31]=",
 CellID->573508055,ExpressionUUID->"f94b028c-df46-4bd5-acd7-c010b978dc51"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "ff69b660-0351-4224-bc4e-97f51097d170"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->250545995,ExpressionUUID->"460c5eec-efa4-4c37-8099-83d37c25cf57"],

Cell["\<\
Here's another example comparing the method of listing all the possibilities \
to the multichoose function.\
\>", "ExampleText",
 CellChangeTimes->{{3.89914501220127*^9, 3.899145029128826*^9}},
 CellID->167750893,ExpressionUUID->"d72f27d0-35bd-4d22-a6a8-0d2a64a42a50"],

Cell[TextData[{
 "Compute ",
 Cell[BoxData[
  RowBox[{"(", 
   RowBox[{"(", GridBox[{
      {"2"},
      {"2"}
     }], ")"}], ")"}]], "Input",
  CellChangeTimes->{{3.8991449790915856`*^9, 3.8991449814752007`*^9}},
  ExpressionUUID->"6f24536c-6bb1-4bb0-a45a-0332fcb7d93a"],
 "."
}], "ExampleText",
 CellChangeTimes->{{3.8991450451226883`*^9, 3.89914505378498*^9}},
 CellID->3433574,ExpressionUUID->"4cae9698-022b-4484-8437-1eeb193342f8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multichoose", "[", 
  RowBox[{"2", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.8991450377896194`*^9, 3.899145041019692*^9}},
 CellLabel->"In[6]:=",
 CellID->455852033,ExpressionUUID->"64788867-953d-4d79-afb4-f5cb57e81bb3"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.899145041440692*^9},
 CellLabel->"Out[6]=",
 CellID->823422004,ExpressionUUID->"ce7c3ace-b794-4570-86a9-4478419142a1"]
}, Open  ]],

Cell["Verify this is the correct answer.", "ExampleText",
 CellChangeTimes->{{3.899145056299486*^9, 3.89914506178845*^9}},
 CellID->427089047,ExpressionUUID->"57c4036b-ae1c-4924-b891-3e155c7ef981"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OrderlessCombinations", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", "2", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8991450625824924`*^9, 3.8991450699763007`*^9}},
 CellLabel->"In[7]:=",
 CellID->403645962,ExpressionUUID->"56782709-e501-43f5-9161-6a09c831c008"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8991450705062866`*^9},
 CellLabel->"Out[7]=",
 CellID->361206131,ExpressionUUID->"5fb7e9b3-037e-4101-a690-05a409e87314"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"OrderlessCombinations", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", "2", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.899145072146986*^9, 3.8991450737864532`*^9}},
 CellLabel->"In[8]:=",
 CellID->496754377,ExpressionUUID->"114e6d5a-18e3-444d-bf8f-7ab001357cc6"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.899145074155453*^9},
 CellLabel->"Out[8]=",
 CellID->37926867,ExpressionUUID->"fbbe5003-4293-4ec1-b72e-5415da397657"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "Possible Issues", "ExampleSection",ExpressionUUID->
   "c1cbab42-f272-4473-aae8-0ddc75220412"],
  $Line = 0; Null]], "ExampleSection",
 CellID->798142635,ExpressionUUID->"b1afd46a-6571-4c74-980c-c3e65271195a"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Interactive Examples", "ExampleSection",ExpressionUUID->
   "119339a5-822b-420c-b3c7-0edc8f468864"],
  $Line = 0; Null]], "ExampleSection",
 CellID->3560046,ExpressionUUID->"ca79a91b-6a01-43f8-8111-c00cb0c2c0a6"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "Neat Examples", "ExampleSection",ExpressionUUID->
   "3e8bc159-1367-40c7-8e0a-215c360c2eb5"],
  $Line = 0; Null]], "ExampleSection",
 CellID->115466506,ExpressionUUID->"d28ec99d-c71d-4c06-91b1-0df903b808ec"],

Cell["\<\
There are ten candies: licorice, peppermint drops, lemon drops, truffles, \
gummy bears, gummy worms, chocolate bars, jelly beans, peanut butter cups, \
and marshmallows. There are four children named Peter, James, John, and \
Andrew. How many ways can the ten candies be distributed among the four \
children? We can compute 10 multichoose 4.\
\>", "ExampleText",
 CellChangeTimes->{{3.899145088732919*^9, 3.8991451087177734`*^9}, {
  3.899145330720915*^9, 3.8991453367995143`*^9}, {3.899145368762939*^9, 
  3.8991454727742167`*^9}},
 CellID->305515986,ExpressionUUID->"ee97c4a1-2cec-4e2b-957d-8817675807b8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multichoose", "[", 
  RowBox[{"10", ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.8991453393265657`*^9, 3.8991453419162292`*^9}},
 CellLabel->"In[9]:=",
 CellID->39383660,ExpressionUUID->"72648142-c258-4d76-9ade-b65ea019f15a"],

Cell[BoxData["715"], "Output",
 CellChangeTimes->{3.8991453422892513`*^9},
 CellLabel->"Out[9]=",
 CellID->629171380,ExpressionUUID->"75abd5ed-7e1c-4dc8-b143-ee1a8839fc2d"]
}, Open  ]],

Cell["Another way of entering it is like this.", "ExampleText",
 CellChangeTimes->{{3.8991454841033645`*^9, 3.89914549127579*^9}},
 CellID->17219148,ExpressionUUID->"d0c0929f-f669-4cff-a3b5-5845522e6d42"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"10", "~", "Multichoose", "~", "4"}]], "Input",
 CellChangeTimes->{{3.8991454759897165`*^9, 3.8991454796712284`*^9}},
 CellLabel->"In[12]:=",
 CellID->47120929,ExpressionUUID->"43f0859e-9c7d-4807-a20b-01806c0e09d8"],

Cell[BoxData["715"], "Output",
 CellChangeTimes->{3.899145480002268*^9},
 CellLabel->"Out[12]=",
 CellID->268628957,ExpressionUUID->"0d20c77d-1e5a-4c06-b9c8-3f601353155c"]
}, Open  ]],

Cell["\<\
We can also generate all the combinations and count them. Since there are a \
lot of combinations, I am not listing them all here and then using Length. \
I'm just going to use Length immediately.\
\>", "ExampleText",
 CellChangeTimes->{{3.899145494994828*^9, 3.899145496907448*^9}, {
  3.899145541070862*^9, 3.8991455659185143`*^9}},
 CellID->14643919,ExpressionUUID->"08c8fa5b-0d57-4911-b4f0-5595a99a5e95"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"OrderlessCombinations", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<licorice\>\"", ",", "\"\<peppermint drops\>\"", ",", 
      "\"\<lemon drops\>\"", ",", "\"\<truffles\>\"", ",", 
      "\"\<gummy bears\>\"", ",", "\"\<gummy worms\>\"", ",", 
      "\"\<chocolate bars\>\"", ",", "\"\<jelly beans\>\"", ",", 
      "\"\<peanut butter cups\>\"", ",", "\"\<marshmallows\>\""}], "}"}], ",", 
    RowBox[{"{", "4", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8991453470634775`*^9, 3.8991453623043036`*^9}, {
  3.899145502557084*^9, 3.899145537452053*^9}},
 CellLabel->"In[13]:=",
 CellID->37517731,ExpressionUUID->"3b640d93-0e5c-413e-b1ed-dba475061a1f"],

Cell[BoxData["715"], "Output",
 CellChangeTimes->{{3.899145353659995*^9, 3.8991453624353046`*^9}, 
   3.8991455387019005`*^9},
 CellLabel->"Out[13]=",
 CellID->229110824,ExpressionUUID->"f32cbe39-0293-45c3-a9d9-d7001f2f93b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "439b19e0-b458-4b28-ad1c-7646d8dfc3c8"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->77813502,ExpressionUUID->"77ff00ff-9c71-4a14-9e80-b5213332b793"],

Cell["There are also applications with prime factors of a number.", \
"ExampleText",
 CellChangeTimes->{{3.8991457454809804`*^9, 3.8991457536991253`*^9}},
 CellID->36302024,ExpressionUUID->"6f937478-fc4f-41e8-ad72-5684c8919916"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "RandomPrime"}]], "Input",
 CellChangeTimes->{{3.8991455824288177`*^9, 3.899145589757969*^9}},
 CellLabel->"In[14]:=",
 CellID->234522481,ExpressionUUID->"87c47779-889e-4f66-bb40-59d186b11ffa"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/RandomPrime",
              ButtonNote->"paclet:ref/RandomPrime"],
             "\"paclet:ref/RandomPrime\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomPrime\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\"]\\\"}]\\) gives a pseudorandom prime number \
in the range \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\
\\\"min\\\", \\\"TI\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \
\\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"RandomPrime\\\", \\\"[\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]], \\\"]\\\"}]\\) gives a pseudorandom prime number in the range 2 \
to \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"RandomPrime\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"range\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives a list of \\!\\(\\*StyleBox[\\\"n\\\", \\\
\"TI\\\"]\\) pseudorandom primes.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/RandomPrime", 
                    "paclet:ref/RandomPrime", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/RandomPrime.\
html"], None}, "http://reference.wolfram.com/language/ref/RandomPrime.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`RandomPrime\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/RandomPrime",
              ButtonNote->"paclet:ref/RandomPrime"],
             "\"paclet:ref/RandomPrime\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomPrime\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\"]\\\"}]\\) gives a pseudorandom prime number \
in the range \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\
\\\"min\\\", \\\"TI\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \
\\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"RandomPrime\\\", \\\"[\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]], \\\"]\\\"}]\\) gives a pseudorandom prime number in the range 2 \
to \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"RandomPrime\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"range\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives a list of \\!\\(\\*StyleBox[\\\"n\\\", \\\
\"TI\\\"]\\) pseudorandom primes.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"RandomPrime\", \"[\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\
\", SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \
\"}\"}], \"]\"}]\) gives a pseudorandom prime number in the range \
\!\(\*SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"min\", \"TI\"]]\) to \
\!\(\*SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]]\).\n\!\
\(\*RowBox[{\"RandomPrime\", \"[\", SubscriptBox[StyleBox[\"i\", \"TI\"], \
StyleBox[\"max\", \"TI\"]], \"]\"}]\) gives a pseudorandom prime number in \
the range 2 to \!\(\*SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \
\"TI\"]]\).\n\!\(\*RowBox[{\"RandomPrime\", \"[\", \
RowBox[{StyleBox[\"range\", \"TI\"], \",\", StyleBox[\"n\", \"TI\"]}], \
\"]\"}]\) gives a list of \!\(\*StyleBox[\"n\", \"TI\"]\) pseudorandom \
primes.", 
    "Documentation" -> <|
     "Local" -> "paclet:ref/RandomPrime", "Web" -> 
      "http://reference.wolfram.com/language/ref/RandomPrime.html"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
    "System`RandomPrime"|>, False]]], "Output",
 CellChangeTimes->{3.8991455901359997`*^9},
 CellLabel->"Out[14]=",
 CellID->65588544,ExpressionUUID->"1685d995-b1ef-4c97-a059-7a82b1bfbd15"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"randomSetOfPrimes", "=", 
  RowBox[{"RandomPrime", "[", 
   RowBox[{"148", ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.899145596852785*^9, 3.899145630802684*^9}},
 CellLabel->"In[17]:=",
 CellID->69026231,ExpressionUUID->"7d609d02-6993-4fb1-8b35-561219516fc3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "109", ",", "17", ",", "59", ",", "113", ",", "13", ",", "89", ",", "31", 
   ",", "101", ",", "5", ",", "41"}], "}"}]], "Output",
 CellChangeTimes->{{3.8991456081610303`*^9, 3.8991456316902065`*^9}},
 CellLabel->"Out[17]=",
 CellID->89504684,ExpressionUUID->"4027b077-a143-47ef-8365-30f5252f0aa3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomChoice", "[", 
  RowBox[{"randomSetOfPrimes", ",", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.8991456103090286`*^9, 3.899145637849969*^9}},
 CellLabel->"In[18]:=",
 CellID->85605666,ExpressionUUID->"fa61e974-1163-42e9-be57-c17b8d866d6f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "31", ",", "31", ",", "31", ",", "101", ",", "41", ",", "89", ",", "17", 
   ",", "13", ",", "13", ",", "89", ",", "59", ",", "41", ",", "113", ",", 
   "31", ",", "41", ",", "101", ",", "59", ",", "31", ",", "17", ",", "17"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8991456172292337`*^9, 3.8991456384019723`*^9}},
 CellLabel->"Out[18]=",
 CellID->783060350,ExpressionUUID->"27aaaa53-b3a7-4e05-b515-82533cf5196a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"randomProduct", "=", 
  RowBox[{"Times", "@@", "randomSetOfPrimes"}]}]], "Input",
 CellChangeTimes->{{3.8991456204418297`*^9, 3.8991456444761147`*^9}, {
  3.8991457723192453`*^9, 3.8991457745138664`*^9}},
 CellLabel->"In[26]:=",
 CellID->376764047,ExpressionUUID->"376ef6fb-040b-4155-8b86-f9a7aa008a1d"],

Cell[BoxData["9174368118504485"], "Output",
 CellChangeTimes->{3.8991456448351526`*^9, 3.8991457748518677`*^9},
 CellLabel->"Out[26]=",
 CellID->378496296,ExpressionUUID->"6fa9eacd-85e3-4ec6-9114-987fa97c3d72"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DivisorSigma", "[", 
  RowBox[{"0", ",", "randomProduct"}], "]"}]], "Input",
 CellChangeTimes->{{3.8991456483305874`*^9, 3.8991456544158926`*^9}, {
  3.8991457786897783`*^9, 3.8991457842822104`*^9}},
 CellLabel->"In[27]:=",
 CellID->117199052,ExpressionUUID->"ed8cbd89-b2a2-4f5c-bd33-51d7fea7ec25"],

Cell[BoxData["1024"], "Output",
 CellChangeTimes->{3.899145654767496*^9, 3.899145786744921*^9},
 CellLabel->"Out[27]=",
 CellID->161350555,ExpressionUUID->"41181861-63c8-4518-8b5c-61552d96dfbd"]
}, Open  ]],

Cell["Here's another way to enter the computation.", "ExampleText",
 CellChangeTimes->{{3.899145790154214*^9, 3.899145796681878*^9}},
 CellID->58289386,ExpressionUUID->"8311e7ba-76a4-40b2-8c54-c6ba01f8ed75"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"0", "~", "DivisorSigma", "~", 
  RowBox[{"(", "randomProduct", ")"}]}]], "Input",
 CellChangeTimes->{{3.8991456575124617`*^9, 3.899145676755768*^9}, {
  3.899145779891221*^9, 3.8991457832111607`*^9}},
 CellLabel->"In[28]:=",
 CellID->603280271,ExpressionUUID->"68007ce2-8458-453e-902f-f0bbd583246a"],

Cell[BoxData["1024"], "Output",
 CellChangeTimes->{{3.8991456668434324`*^9, 3.8991456772238507`*^9}, 
   3.899145788452216*^9},
 CellLabel->"Out[28]=",
 CellID->277431427,ExpressionUUID->"4fa138f1-13c4-49dc-a451-2f8347410922"]
}, Open  ]],

Cell["Make a list of the divisors.", "ExampleText",
 CellChangeTimes->{{3.8991457330046124`*^9, 3.899145736406149*^9}},
 CellID->75575269,ExpressionUUID->"8adf4e64-e0d3-458e-bc29-c2db6efea45d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{"List", "/@", 
   RowBox[{"Divisors", "[", "randomProduct", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8991456950180645`*^9, 3.8991457253333488`*^9}, {
  3.8991457811701603`*^9, 3.899145782227194*^9}},
 CellLabel->"In[29]:=",
 CellID->7892998,ExpressionUUID->"11f15a4a-46ac-45ce-8551-b3c11020701d"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> CompressedData["
1:eJx1nVuOdctRhNvwgwGD7Skwg7pn1RCQeGIIPFjiyQ9m/iIicx8JdUQfyZLP
+navS10yI7Oy6vz7f//1v/7y9evr62/439d//s/f/vcvv/v6f//2H/y3bq7t
b9f+jr+b7mKYi/P7LXlxuYv7mYvHPf3ai9///O/5Su37k+qq/a18VF7d3x/G
q6PZq8M9bTz329Xc09Zyv932aXt8b++8Ot19t7+vtC6vnufuG+f71V/ZkvIZ
ebnLG9flbW8y4nu75eUpHZKXl4yzuny+d2pe3v4m4W9yh73J3fYmT/r7V46N
7j5+rO7uPc60vz7SN3k5ZJb8ykkm0ywvz7C/XjKB8vK2fTnPsje59r1Xl7md
l33vrCOj9VeOd9uCe2x37x32c/azTYXmdr8+y7bg0SmSl4+dDefaF4xmXzCm
TMq87B95t73JfWL3+H9eO+5NXrePfMM+8h07i1+IUf2HrzQFMrvzOsD3V6zr
S6ZmXh9NDGZdnzJn8/ps094fg9/eB+1rr5897Puc6+8TW0ZpXr9DGjmvvyNz
gNdHC2nmvN5Pc987xhSz87lun4tmk96t6xH2/qvJkKrrL1z7jDNse47n23/C
+7r7zL6Wex98rb3/xD/2+vLvM/eVScvrC+3v3mf1bsfDmk8cb15fz7b/2tP2
79rbjltYSv8+saZ97lV5wOu7DbEYeX0O+/4bFt09d+9mv2tHs+Nqx1r2PreJ
sMjrb4vV5PXThjjjvN7VEub10ez7n93tODwXrtdcx2iw7xlLTW1e335eRCw7
3uKG2GZex+tYe3LnsePhwgfZ+8Cau+e+q/bhH79SIk95QIHbZIYVeFOGUILe
1WUUmF3UzwdMmQUF4Ez9M+6V/k8wmqrnAuvKSC1wVPMXuFPaNsFsIfqmwNXZ
nAC6QtzWBxyxLwXQ4/ZWe1z/unsv/4E7hu/B07o4kQIjrgfr+e+I9vzrxlMD
neCukJldILoI7QRvNf+6702ZTASwBeqdC2ydZgUwn9wHQo5MmfgJ0CHPPhyu
3n45DO8RW5QAU9O/FcahHe0DRtbOKBg1tQsFTvdvdZ4qhAQxp7jkAphQ9uEX
2sE+/MbwH/iaRiMFIsSPE8zWQrR6ga7yNgFMnP1ATk2xlQkWYlL3gQDTfgeG
27PfMeFXrXmdMHASWSUIoyQKPG/I5oXotN9xw8/BiTFtLTV8n7dwq60hOj4B
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
Lg==
      "], "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MatrixShape[1024, 1], 20, 1, {All}], 
     "InitialType" -> TypeSystem`Vector[
       TypeSystem`Vector[
        TypeSystem`Atom[Integer], 1], 1024], "Meta" -> <||>, "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MatrixShape[1024, 1], 20, 1, {All}], "Type" -> 
     TypeSystem`Vector[
       TypeSystem`Vector[
        TypeSystem`Atom[Integer], 1], 1024], "Path" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     1024, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["13"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["31"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["41"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["59"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["65"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["85"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["89"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["101"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["109"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["113"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["155"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["205"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["221"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["295"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["403"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["445"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["505"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 1024, 1], {1, 1024 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 1024, 1], {1, 1024 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[1024, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[1024, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {All}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 1024, 1], {1, 1024 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 1024, 1], {1, 1024 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{177., {286.3544921875, 291.6455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{177., {286.3544921875, 291.6455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8991456982170644`*^9, 3.899145725725348*^9}, 
   3.899145790205213*^9},
 CellLabel->"Out[29]=",
 CellID->516514531,ExpressionUUID->"13ba2e96-cff4-45af-a272-f8d720d59732"]
}, Open  ]],

Cell["\<\
I guess this isn't directly applicable to multichoose, but there's probably \
some connection.\
\>", "ExampleText",
 CellChangeTimes->{{3.899145864692233*^9, 3.8991458780382805`*^9}},
 CellID->115300037,ExpressionUUID->"bf5f8fcb-dcc2-46af-93d2-46bdb551dde8"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Metadata", "MetadataSection",
 CellID->562011734,ExpressionUUID->"f0f45d35-5661-4bdd-bfb6-1d21d986468b"],

Cell[TextData[{
 "New in: ",
 Cell["XX", "HistoryData",
  CellTags->"New",ExpressionUUID->"f69a075b-bacc-4f10-abe1-1babacd95480"],
 " | Modified in: ",
 Cell[" ", "HistoryData",
  CellTags->"Modified",ExpressionUUID->"05a30730-f9d2-44e5-a613-f42815843595"],
 " | Obsolete in: ",
 Cell[" ", "HistoryData",
  CellTags->"Obsolete",ExpressionUUID->
  "88d40220-2e32-46b1-bb9b-7aa79dd80b8b"]
}], "History",
 CellID->176754724,ExpressionUUID->"53ae14d7-fc10-4d14-9805-8e5531852e0f"],

Cell[CellGroupData[{

Cell[TextData[{
 "Categorization",
 Cell[BoxData[
  TemplateBox[{"Metadata", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Metadata such as page URI, context, and type of documentation page.", 
        "MoreInfoText"], BaseStyle -> "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "d86427e2-699d-414d-855b-03eeaed4e186"]
}], "CategorizationSection",
 CellID->631962717,ExpressionUUID->"d37d08c2-2558-40e4-8fff-97a36d34f9c8"],

Cell["Symbol", "Categorization",
 CellLabel->"Entity Type",
 CellID->259467298,ExpressionUUID->"2046183f-d7c1-461a-b75b-c06ac02394f8"],

Cell["PeterBurbery/Combinatorics", "Categorization",
 CellLabel->"Paclet Name",
 CellID->66350329,ExpressionUUID->"68402674-eb42-44da-9671-ed557a41c79f"],

Cell["PeterBurbery`Combinatorics`", "Categorization",
 CellLabel->"Context",
 CellID->34383491,ExpressionUUID->"de2814fd-89d0-4b1d-8464-627ea54ec699"],

Cell["PeterBurbery/Combinatorics/ref/Multichoose", "Categorization",
 CellLabel->"URI",
 CellID->289831769,ExpressionUUID->"03a09fda-2461-4a94-aeb3-b06719041cbf"]
}, Closed]],

Cell[CellGroupData[{

Cell["Keywords", "KeywordsSection",
 CellID->157462425,ExpressionUUID->"e3388fa4-24c8-4097-bb5a-828fd89503fd"],

Cell["XXXX", "Keywords",
 CellID->72638205,ExpressionUUID->"9de278ea-b6cf-4803-97e3-4fc27a96330f"]
}, Closed]],

Cell[CellGroupData[{

Cell["Syntax Templates", "TemplatesSection",
 CellID->394248989,ExpressionUUID->"f83b3a34-c570-49b4-aed9-df3825e2ac27"],

Cell[BoxData[""], "Template",
 CellLabel->"Additional Function Template",
 CellID->73883401,ExpressionUUID->"07dc2669-b66b-41ff-b48f-3bae7b81f7ac"],

Cell[BoxData[""], "Template",
 CellLabel->"Arguments Pattern",
 CellID->5768784,ExpressionUUID->"c1862e4e-05e5-4e75-b93d-75af80b8ed27"],

Cell[BoxData[""], "Template",
 CellLabel->"Local Variables",
 CellID->11084944,ExpressionUUID->"928ed04a-2222-404d-9b4f-5eec135d364d"],

Cell[BoxData[""], "Template",
 CellLabel->"Color Equal Signs",
 CellID->392664530,ExpressionUUID->"5c01a074-3025-48a0-bbe2-09819846eb77"]
}, Closed]]
}, Open  ]]
},
ScreenStyleEnvironment->"Working",
WindowSize->{574.8, 579.6},
WindowMargins->{{-4.8, Automatic}, {Automatic, 0}},
TaggingRules-><|"Paclet" -> "PeterBurbery/Combinatorics"|>,
CellContext->"Global`",
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (June 8, 2023)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "FunctionPageStylesExt.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"8c41fee3-d44c-41e3-a8a1-e4ed151ad1a5"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ExtendedExamples"->{
  Cell[160912, 3068, 487, 13, 57, "ExtendedExamplesSection",ExpressionUUID->"6cabac2d-830a-4e2b-b63a-4448a5c90d39",
   CellTags->"ExtendedExamples",
   CellID->582335249]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ExtendedExamples", 250532, 5028}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 108, 1, 74, "ObjectName",ExpressionUUID->"a4147963-f4fa-4727-9396-19cb713f32bc",
 CellID->256025145],
Cell[691, 25, 850, 23, 78, "Usage",ExpressionUUID->"a7bb03ff-b917-4ecc-81b7-a40f0a554d23",
 CellID->176534733],
Cell[1544, 50, 405, 7, 63, "Notes",ExpressionUUID->"1498427e-b115-4033-a362-934213b9adf7",
 CellID->98117488],
Cell[1952, 59, 1383, 36, 112, "Notes",ExpressionUUID->"92ccec77-3f6a-45f4-9f9b-385a74188928",
 CellID->406158070],
Cell[3338, 97, 809, 14, 171, "Notes",ExpressionUUID->"caeb9a99-9a3f-493c-99bd-0d5bfdf35c79",
 CellID->90262991],
Cell[4150, 113, 611, 11, 135, "Notes",ExpressionUUID->"90331f5c-2c8b-4944-9926-28ee9b3ff535",
 CellID->30476874],
Cell[4764, 126, 827, 14, 153, "Notes",ExpressionUUID->"a99aef0e-c871-49a8-bacd-e30725b1445b",
 CellID->102945828],
Cell[5594, 142, 393, 6, 63, "Notes",ExpressionUUID->"a6fa5492-9f52-44d6-bffc-e102e2e85010",
 CellID->51036501],
Cell[5990, 150, 1311, 28, 387, "Notes",ExpressionUUID->"76d9dcfa-b646-4c2f-8822-4881127b7543",
 CellID->82459653],
Cell[7304, 180, 502, 12, 171, "Notes",ExpressionUUID->"5b0d6907-6eaa-4716-ab2f-ea5e2fbbc33f",
 CellID->1203434]
}, Open  ]],
Cell[CellGroupData[{
Cell[7843, 197, 457, 13, 39, "SeeAlsoSection",ExpressionUUID->"2c6662e1-c6f6-4038-86ad-9ecae4e83350",
 CellID->14858795],
Cell[8303, 212, 2236, 55, 24, "SeeAlso",ExpressionUUID->"4e9c2aa1-009b-4d7f-9768-055babd90711",
 CellID->6272777]
}, Open  ]],
Cell[CellGroupData[{
Cell[10576, 272, 435, 12, 40, "TechNotesSection",ExpressionUUID->"01ca74e0-cb49-4de3-b68c-fba25b607e48",
 CellID->141461237],
Cell[11014, 286, 100, 1, 19, "Tutorials",ExpressionUUID->"b74abf14-6499-4cad-ab5d-3c01f0efc621",
 CellID->161185351]
}, Open  ]],
Cell[CellGroupData[{
Cell[11151, 292, 117, 1, 39, "MoreAboutSection",ExpressionUUID->"d1f3958b-092f-459c-8bdb-743b25aa24fc",
 CellID->537793649],
Cell[11271, 295, 100, 1, 19, "MoreAbout",ExpressionUUID->"acd54ba5-e5f4-4ea5-81a6-b147da48ac83",
 CellID->127763274]
}, Open  ]],
Cell[CellGroupData[{
Cell[11408, 301, 471, 13, 39, "RelatedLinksSection",ExpressionUUID->"3507fb83-89e1-4a28-8ccd-01057529e271",
 CellID->26825956],
Cell[11882, 316, 506, 10, 19, "RelatedLinks",ExpressionUUID->"5351189d-84f3-4268-9c88-e67bfb84f969",
 CellID->128231579],
Cell[12391, 328, 404, 7, 19, "RelatedLinks",ExpressionUUID->"9b6d6c95-38b9-4ebf-8a0c-2310a14dc90c",
 CellID->177008703],
Cell[12798, 337, 469, 9, 19, "RelatedLinks",ExpressionUUID->"4536ccc1-03ac-4e9b-89e3-925dbc3c0ffd",
 CellID->353478408]
}, Open  ]],
Cell[CellGroupData[{
Cell[13304, 351, 529, 14, 69, "ExamplesInitializationSection",ExpressionUUID->"0474d429-20d0-476a-8e1c-43ce36f863dd",
 CellID->72575616],
Cell[13836, 367, 187, 3, 45, "ExampleInitialization",ExpressionUUID->"281479a9-041d-45be-a446-a0c1e283eef2",
 CellID->1002510501]
}, Open  ]],
Cell[CellGroupData[{
Cell[14060, 375, 441, 12, 71, "PrimaryExamplesSection",ExpressionUUID->"0231d14c-2ab8-4254-ae64-6e6c429d40c8",
 CellID->67834393],
Cell[14504, 389, 186, 2, 24, "ExampleText",ExpressionUUID->"34587ebb-1031-43f4-9e01-88e11fc38e16",
 CellID->353306621],
Cell[CellGroupData[{
Cell[14715, 395, 257, 5, 25, "Input",ExpressionUUID->"169d06b5-1869-4d05-9d08-b0db4db3daec",
 CellID->124847537],
Cell[14975, 402, 173, 3, 24, "Output",ExpressionUUID->"c8087d3b-a9c7-4f1b-8100-850d170e2097",
 CellID->162967574]
}, Open  ]],
Cell[CellGroupData[{
Cell[15185, 410, 241, 5, 20, "ExampleDelimiter",ExpressionUUID->"0e0ef371-7aba-44c6-8ce1-94b463abaeeb",
 CellID->31441438],
Cell[15429, 417, 194, 2, 24, "ExampleText",ExpressionUUID->"b73cd6bf-7cbe-42dd-ac12-71fd9eab5500",
 CellID->402813572],
Cell[CellGroupData[{
Cell[15648, 423, 519, 14, 25, "Input",ExpressionUUID->"dbb8b60e-53ca-48ef-9a6f-dabd71755ac0",
 CellID->173503726],
Cell[16170, 439, 830, 27, 100, "Output",ExpressionUUID->"d4111122-6e45-4382-9187-93d0cf281576",
 CellID->26995996]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17049, 472, 242, 5, 20, "ExampleDelimiter",ExpressionUUID->"1733212d-7863-4d83-b6e7-3ff65b5dff63",
 CellID->661358281],
Cell[17294, 479, 175, 3, 24, "ExampleText",ExpressionUUID->"25a53542-1614-4a67-a343-f6dd3a8d379a",
 CellID->543509965],
Cell[CellGroupData[{
Cell[17494, 486, 391, 10, 25, "Input",ExpressionUUID->"01d84da6-7593-4f5f-b772-66c117563246",
 CellID->310368551],
Cell[17888, 498, 31364, 557, 164, "Output",ExpressionUUID->"84fba975-9353-48e1-a86e-91f8546a06bc",
 CellID->73027157]
}, Open  ]],
Cell[49267, 1058, 176, 3, 24, "ExampleText",ExpressionUUID->"c3ccd5c7-e575-46e0-ae84-b2fcfd1620c1",
 CellID->491941045],
Cell[CellGroupData[{
Cell[49468, 1065, 393, 10, 25, "Input",ExpressionUUID->"200a7da7-aecd-464d-b557-1defadb80630",
 CellID->510723040],
Cell[49864, 1077, 21129, 391, 163, "Output",ExpressionUUID->"51bf1441-ba4c-4352-b0f3-52519b62812a",
 CellID->48236591]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[71042, 1474, 239, 5, 20, "ExampleDelimiter",ExpressionUUID->"76391add-0521-44cc-b986-e84464289d3a",
 CellID->518217],
Cell[71284, 1481, 134, 1, 24, "ExampleText",ExpressionUUID->"56d1ee21-4389-4e90-84d3-5a2f12b68caf",
 CellID->214227103],
Cell[CellGroupData[{
Cell[71443, 1486, 675, 18, 43, "Input",ExpressionUUID->"fcd53b06-426f-4ad6-aa2f-c27807a96e35",
 CellID->6401949],
Cell[72121, 1506, 83010, 1366, 238, "Output",ExpressionUUID->"b226d29b-c6d1-45ea-8f51-2f3262473a80",
 CellID->109263075]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[155180, 2878, 242, 5, 20, "ExampleDelimiter",ExpressionUUID->"82a8ceac-1b23-4a26-9606-fb5c89b8da65",
 CellID->115368116],
Cell[155425, 2885, 198, 2, 24, "ExampleText",ExpressionUUID->"5b365059-1994-40d5-8e33-ace350e2672e",
 CellID->37383982],
Cell[CellGroupData[{
Cell[155648, 2891, 466, 13, 41, "Input",ExpressionUUID->"db8c0f3b-c03d-430c-950a-af5262adc062",
 CellID->982884676],
Cell[156117, 2906, 590, 16, 25, "Output",ExpressionUUID->"e82b887f-655a-47ad-9c8c-f1e186fc1c00",
 CellID->388728877]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[156756, 2928, 241, 5, 20, "ExampleDelimiter",ExpressionUUID->"7d44847e-19dc-4b22-911f-2c919c9e803d",
 CellID->79982383],
Cell[157000, 2935, 197, 2, 24, "ExampleText",ExpressionUUID->"613e0eb0-21ef-4a26-b972-7c9b0f934e47",
 CellID->132070246],
Cell[CellGroupData[{
Cell[157222, 2941, 474, 13, 41, "Input",ExpressionUUID->"0132a0b0-553b-4ae7-8761-2db2a0caac2e",
 CellID->855380164],
Cell[157699, 2956, 1286, 43, 57, "Output",ExpressionUUID->"9b169231-376e-4d37-bdc3-b2204d0b7406",
 CellID->44816544]
}, Open  ]],
Cell[CellGroupData[{
Cell[159022, 3004, 472, 13, 41, "Input",ExpressionUUID->"e89bdca1-9b33-4bb1-9195-ece30c11adaf",
 CellID->800223642],
Cell[159497, 3019, 1354, 42, 60, "Output",ExpressionUUID->"f66f7349-dd3d-4a3f-8dd7-e4b7add4a9d8",
 CellID->161465871]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[160912, 3068, 487, 13, 57, "ExtendedExamplesSection",ExpressionUUID->"6cabac2d-830a-4e2b-b63a-4448a5c90d39",
 CellTags->"ExtendedExamples",
 CellID->582335249],
Cell[161402, 3083, 240, 5, 35, "ExampleSection",ExpressionUUID->"b04ff0f9-7240-4233-b44f-4ed270ccbcde",
 CellID->51806884],
Cell[161645, 3090, 263, 5, 23, "ExampleSection",ExpressionUUID->"c1c4696f-0a28-4320-a06d-3deaafe2545f",
 CellID->36495576],
Cell[CellGroupData[{
Cell[161933, 3099, 243, 5, 23, "ExampleSection",ExpressionUUID->"da647f46-e0dd-4b71-9850-3f6f87763357",
 CellID->790241301],
Cell[162179, 3106, 244, 5, 26, "ExampleSubsection",ExpressionUUID->"0ece1646-ac8c-48d6-b7da-976f075fc8d6",
 CellID->5580300],
Cell[162426, 3113, 245, 5, 22, "ExampleSubsection",ExpressionUUID->"0559ab1f-ac94-4756-b8c5-aa3c6c6793c8",
 CellID->17715710]
}, Open  ]],
Cell[162686, 3121, 248, 5, 35, "ExampleSection",ExpressionUUID->"67e2f073-1639-4fbb-8109-88afca6bbb6c",
 CellID->317749877],
Cell[CellGroupData[{
Cell[162959, 3130, 258, 5, 23, "ExampleSection",ExpressionUUID->"55d8c626-f722-44c5-9ffd-7a8b3f745aeb",
 CellID->337002233],
Cell[163220, 3137, 207, 2, 24, "ExampleText",ExpressionUUID->"8984d40a-bbce-4bac-b689-0b7fd47b733d",
 CellID->589958039],
Cell[CellGroupData[{
Cell[163452, 3143, 356, 8, 25, "Input",ExpressionUUID->"e6e2e31e-c82a-4d6b-a4bc-f59dda3f7df5",
 CellID->139447373],
Cell[163811, 3153, 784, 25, 24, "Output",ExpressionUUID->"d7fcb10b-3856-4a3d-983c-d6fd4fb0fb2b",
 CellID->44141825]
}, Open  ]],
Cell[CellGroupData[{
Cell[164632, 3183, 394, 9, 25, "Input",ExpressionUUID->"62d3b086-56b1-4dcd-b8f7-5ec359974236",
 CellID->43655691],
Cell[165029, 3194, 171, 3, 24, "Output",ExpressionUUID->"8dce5b25-d54c-4b4f-b73e-7cef7e9d2bdb",
 CellID->199309359]
}, Open  ]],
Cell[165215, 3200, 463, 13, 36, "ExampleText",ExpressionUUID->"219f555e-dbe0-4f7d-ac6c-897491d68f01",
 CellID->420037904],
Cell[CellGroupData[{
Cell[165703, 3217, 253, 5, 25, "Input",ExpressionUUID->"a8b41a0d-541e-47f9-a856-3a3778fbeaed",
 CellID->231932511],
Cell[165959, 3224, 171, 3, 24, "Output",ExpressionUUID->"3ce783cd-103c-4445-9f6d-5b8c07ee20fb",
 CellID->438819927]
}, Open  ]],
Cell[166145, 3230, 288, 5, 41, "ExampleText",ExpressionUUID->"6d60f134-a36e-4cbc-a569-d13ba686c7a7",
 CellID->491974207],
Cell[CellGroupData[{
Cell[166458, 3239, 373, 8, 25, "Input",ExpressionUUID->"03191ddc-e81c-4e66-bd61-cd4e4318893b",
 CellID->2396499],
Cell[166834, 3249, 312, 9, 24, "Output",ExpressionUUID->"f94b028c-df46-4bd5-acd7-c010b978dc51",
 CellID->573508055]
}, Open  ]],
Cell[CellGroupData[{
Cell[167183, 3263, 242, 5, 20, "ExampleDelimiter",ExpressionUUID->"460c5eec-efa4-4c37-8099-83d37c25cf57",
 CellID->250545995],
Cell[167428, 3270, 278, 5, 24, "ExampleText",ExpressionUUID->"d72f27d0-35bd-4d22-a6a8-0d2a64a42a50",
 CellID->167750893],
Cell[167709, 3277, 437, 13, 36, "ExampleText",ExpressionUUID->"4cae9698-022b-4484-8437-1eeb193342f8",
 CellID->3433574],
Cell[CellGroupData[{
Cell[168171, 3294, 253, 5, 25, "Input",ExpressionUUID->"64788867-953d-4d79-afb4-f5cb57e81bb3",
 CellID->455852033],
Cell[168427, 3301, 168, 3, 24, "Output",ExpressionUUID->"ce7c3ace-b794-4570-86a9-4478419142a1",
 CellID->823422004]
}, Open  ]],
Cell[168610, 3307, 197, 2, 24, "ExampleText",ExpressionUUID->"57c4036b-ae1c-4924-b891-3e155c7ef981",
 CellID->427089047],
Cell[CellGroupData[{
Cell[168832, 3313, 338, 8, 25, "Input",ExpressionUUID->"56782709-e501-43f5-9161-6a09c831c008",
 CellID->403645962],
Cell[169173, 3323, 372, 11, 24, "Output",ExpressionUUID->"5fb7e9b3-037e-4101-a690-05a409e87314",
 CellID->361206131]
}, Open  ]],
Cell[CellGroupData[{
Cell[169582, 3339, 373, 9, 25, "Input",ExpressionUUID->"114e6d5a-18e3-444d-bf8f-7ab001357cc6",
 CellID->496754377],
Cell[169958, 3350, 167, 3, 24, "Output",ExpressionUUID->"fbbe5003-4293-4ec1-b72e-5415da397657",
 CellID->37926867]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[170164, 3358, 251, 5, 35, "ExampleSection",ExpressionUUID->"b1afd46a-6571-4c74-980c-c3e65271195a",
 CellID->798142635],
Cell[170418, 3365, 254, 5, 23, "ExampleSection",ExpressionUUID->"ca79a91b-6a01-43f8-8111-c00cb0c2c0a6",
 CellID->3560046],
Cell[CellGroupData[{
Cell[170697, 3374, 249, 5, 23, "ExampleSection",ExpressionUUID->"d28ec99d-c71d-4c06-91b1-0df903b808ec",
 CellID->115466506],
Cell[170949, 3381, 619, 10, 75, "ExampleText",ExpressionUUID->"ee97c4a1-2cec-4e2b-957d-8817675807b8",
 CellID->305515986],
Cell[CellGroupData[{
Cell[171593, 3395, 255, 5, 25, "Input",ExpressionUUID->"72648142-c258-4d76-9ade-b65ea019f15a",
 CellID->39383660],
Cell[171851, 3402, 172, 3, 24, "Output",ExpressionUUID->"75abd5ed-7e1c-4dc8-b143-ee1a8839fc2d",
 CellID->629171380]
}, Open  ]],
Cell[172038, 3408, 204, 2, 24, "ExampleText",ExpressionUUID->"d0c0929f-f669-4cff-a3b5-5845522e6d42",
 CellID->17219148],
Cell[CellGroupData[{
Cell[172267, 3414, 238, 4, 25, "Input",ExpressionUUID->"43f0859e-9c7d-4807-a20b-01806c0e09d8",
 CellID->47120929],
Cell[172508, 3420, 171, 3, 24, "Output",ExpressionUUID->"0d20c77d-1e5a-4c06-b9c8-3f601353155c",
 CellID->268628957]
}, Open  ]],
Cell[172694, 3426, 418, 7, 41, "ExampleText",ExpressionUUID->"08c8fa5b-0d57-4911-b4f0-5595a99a5e95",
 CellID->14643919],
Cell[CellGroupData[{
Cell[173137, 3437, 723, 15, 78, "Input",ExpressionUUID->"3b640d93-0e5c-413e-b1ed-dba475061a1f",
 CellID->37517731],
Cell[173863, 3454, 225, 4, 24, "Output",ExpressionUUID->"f32cbe39-0293-45c3-a9d9-d7001f2f93b1",
 CellID->229110824]
}, Open  ]],
Cell[CellGroupData[{
Cell[174125, 3463, 241, 5, 20, "ExampleDelimiter",ExpressionUUID->"77ff00ff-9c71-4a14-9e80-b5213332b793",
 CellID->77813502],
Cell[174369, 3470, 228, 3, 24, "ExampleText",ExpressionUUID->"6f937478-fc4f-41e8-ad72-5684c8919916",
 CellID->36302024],
Cell[CellGroupData[{
Cell[174622, 3477, 221, 4, 25, "Input",ExpressionUUID->"87c47779-889e-4f66-bb40-59d186b11ffa",
 CellID->234522481],
Cell[174846, 3483, 14685, 332, 136, "Output",ExpressionUUID->"1685d995-b1ef-4c97-a059-7a82b1bfbd15",
 CellID->65588544]
}, Open  ]],
Cell[CellGroupData[{
Cell[189568, 3820, 294, 6, 25, "Input",ExpressionUUID->"7d609d02-6993-4fb1-8b35-561219516fc3",
 CellID->69026231],
Cell[189865, 3828, 340, 7, 24, "Output",ExpressionUUID->"4027b077-a143-47ef-8365-30f5252f0aa3",
 CellID->89504684]
}, Open  ]],
Cell[CellGroupData[{
Cell[190242, 3840, 271, 5, 25, "Input",ExpressionUUID->"fa61e974-1163-42e9-be57-c17b8d866d6f",
 CellID->85605666],
Cell[190516, 3847, 459, 9, 24, "Output",ExpressionUUID->"27aaaa53-b3a7-4e05-b515-82533cf5196a",
 CellID->783060350]
}, Open  ]],
Cell[CellGroupData[{
Cell[191012, 3861, 327, 6, 25, "Input",ExpressionUUID->"376ef6fb-040b-4155-8b86-f9a7aa008a1d",
 CellID->376764047],
Cell[191342, 3869, 210, 3, 24, "Output",ExpressionUUID->"6fa9eacd-85e3-4ec6-9114-987fa97c3d72",
 CellID->378496296]
}, Open  ]],
Cell[CellGroupData[{
Cell[191589, 3877, 322, 6, 25, "Input",ExpressionUUID->"ed8cbd89-b2a2-4f5c-bd33-51d7fea7ec25",
 CellID->117199052],
Cell[191914, 3885, 194, 3, 24, "Output",ExpressionUUID->"41181861-63c8-4518-8b5c-61552d96dfbd",
 CellID->161350555]
}, Open  ]],
Cell[192123, 3891, 207, 2, 24, "ExampleText",ExpressionUUID->"8311e7ba-76a4-40b2-8c54-c6ba01f8ed75",
 CellID->58289386],
Cell[CellGroupData[{
Cell[192355, 3897, 323, 6, 25, "Input",ExpressionUUID->"68007ce2-8458-453e-902f-f0bbd583246a",
 CellID->603280271],
Cell[192681, 3905, 226, 4, 24, "Output",ExpressionUUID->"4fa138f1-13c4-49dc-a451-2f8347410922",
 CellID->277431427]
}, Open  ]],
Cell[192922, 3912, 193, 2, 24, "ExampleText",ExpressionUUID->"8adf4e64-e0d3-458e-bc29-c2db6efea45d",
 CellID->75575269],
Cell[CellGroupData[{
Cell[193140, 3918, 353, 7, 25, "Input",ExpressionUUID->"11f15a4a-46ac-45ce-8551-b3c11020701d",
 CellID->7892998],
Cell[193496, 3927, 53428, 988, 590, "Output",ExpressionUUID->"13ba2e96-cff4-45af-a272-f8d720d59732",
 CellID->516514531]
}, Open  ]],
Cell[246939, 4918, 268, 5, 24, "ExampleText",ExpressionUUID->"bf5f8fcb-dcc2-46af-93d2-46bdb551dde8",
 CellID->115300037]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[247268, 4930, 110, 1, 72, "MetadataSection",ExpressionUUID->"f0f45d35-5661-4bdd-bfb6-1d21d986468b",
 CellID->562011734],
Cell[247381, 4933, 476, 12, 26, "History",ExpressionUUID->"53ae14d7-fc10-4d14-9805-8e5531852e0f",
 CellID->176754724],
Cell[CellGroupData[{
Cell[247882, 4949, 484, 13, 21, "CategorizationSection",ExpressionUUID->"d37d08c2-2558-40e4-8fff-97a36d34f9c8",
 CellID->631962717],
Cell[248369, 4964, 134, 2, 70, "Categorization",ExpressionUUID->"2046183f-d7c1-461a-b75b-c06ac02394f8",
 CellID->259467298],
Cell[248506, 4968, 153, 2, 70, "Categorization",ExpressionUUID->"68402674-eb42-44da-9671-ed557a41c79f",
 CellID->66350329],
Cell[248662, 4972, 150, 2, 70, "Categorization",ExpressionUUID->"de2814fd-89d0-4b1d-8464-627ea54ec699",
 CellID->34383491],
Cell[248815, 4976, 162, 2, 70, "Categorization",ExpressionUUID->"03a09fda-2461-4a94-aeb3-b06719041cbf",
 CellID->289831769]
}, Closed]],
Cell[CellGroupData[{
Cell[249014, 4983, 110, 1, 21, "KeywordsSection",ExpressionUUID->"e3388fa4-24c8-4097-bb5a-828fd89503fd",
 CellID->157462425],
Cell[249127, 4986, 98, 1, 70, "Keywords",ExpressionUUID->"9de278ea-b6cf-4803-97e3-4fc27a96330f",
 CellID->72638205]
}, Closed]],
Cell[CellGroupData[{
Cell[249262, 4992, 119, 1, 21, "TemplatesSection",ExpressionUUID->"f83b3a34-c570-49b4-aed9-df3825e2ac27",
 CellID->394248989],
Cell[249384, 4995, 147, 2, 70, "Template",ExpressionUUID->"07dc2669-b66b-41ff-b48f-3bae7b81f7ac",
 CellID->73883401],
Cell[249534, 4999, 135, 2, 70, "Template",ExpressionUUID->"c1862e4e-05e5-4e75-b93d-75af80b8ed27",
 CellID->5768784],
Cell[249672, 5003, 134, 2, 70, "Template",ExpressionUUID->"928ed04a-2222-404d-9b4f-5eec135d364d",
 CellID->11084944],
Cell[249809, 5007, 137, 2, 70, "Template",ExpressionUUID->"5c01a074-3025-48a0-bbe2-09819846eb77",
 CellID->392664530]
}, Closed]]
}, Open  ]]
}
]
*)

