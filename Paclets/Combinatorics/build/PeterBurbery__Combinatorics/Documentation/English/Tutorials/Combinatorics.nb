(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1344654,      28495]
NotebookOptionsPosition[   1249662,      26574]
NotebookOutlinePosition[   1252491,      26643]
CellTagsIndexPosition[   1252408,      26638]
WindowTitle->Combinatorics
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {GridBox[{
      {
       ItemBox[Cell[BoxData[
         RowBox[{
          TemplateBox[{12},
           "Spacer1"], Cell[
          "PETER BURBERY/ COMBINATORICS TECH NOTE", "PacletNameCell",
           TextAlignment->Center,ExpressionUUID->
           "4b2da5d8-b5e3-4211-b738-b9666bf18ce7"], 
          TemplateBox[{8},
           "Spacer1"]}]],
         TextAlignment->Center,ExpressionUUID->
         "96a4e6a8-32f1-4d0e-8002-9246cfc1d854"],
        Background->RGBColor[
         0.3843137254901961, 0.4627450980392157, 0.7019607843137254],
        ItemSize->Full], ""}
     },
     GridBoxAlignment->{"Rows" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {Full, 
         Scaled[0.02]}, "Rows" -> {{2.5}}}], Cell[TextData[Cell[BoxData[
     TagBox[
      ActionMenuBox[
       FrameBox[Cell[TextData[{
         "URL",
         " ",
         Cell[BoxData[
          GraphicsBox[
           {GrayLevel[0.66667], Thickness[0.13], 
            LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
           AspectRatio->1,
           ImageSize->20,
           PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
          "1f7040ba-78ec-4bf4-9acd-9c1a015a2acf"]
        }],ExpressionUUID->"e944623f-f005-4096-8448-90629d27530b"],
        StripOnInput->False],{
       "\"PeterBurbery/Combinatorics/tutorial/Combinatorics\"" :> None, 
        "\"Copy Wolfram Documentation Center URL\"" :> 
        Module[{DocumentationSearch`Private`nb$}, 
          DocumentationSearch`Private`nb$ = 
           NotebookPut[
            Notebook[{
              Cell["PeterBurbery/Combinatorics/tutorial/Combinatorics"]}, 
              Visible -> False]]; 
          SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
          FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
          NotebookClose[DocumentationSearch`Private`nb$]; Null], Delimiter, 
        "\"Copy web URL\"" :> 
        Module[{DocumentationSearch`Private`nb$}, 
          DocumentationSearch`Private`nb$ = 
           NotebookPut[
            Notebook[{
              Cell[BoxData[
                MakeBoxes[
                 Hyperlink[
                  "http://reference.wolfram.com/language/PeterBurbery/\
Combinatorics/tutorial/Combinatorics.html"], StandardForm]], "Input", 
                TextClipboardType -> "PlainText"]}, Visible -> False]]; 
          SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
          FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
          NotebookClose[DocumentationSearch`Private`nb$]; Null], 
        "\"Go to web URL\"" :> 
        FrontEndExecute[{
          NotebookLocate[{
            URL[If[TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$265969], 
                "http://reference.wolfram.com/system-modeler/", 
                "http://reference.wolfram.com/language/"] <> 
              "PeterBurbery/Combinatorics/tutorial/Combinatorics" <> ".html"],
              None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"],
      MouseAppearanceTag["LinkHand"]]],
     LineSpacing->{1.4, 0},ExpressionUUID->
     "014147ec-de22-4099-b167-772f65552295"]], "AnchorBar",
     CacheGraphics->False,ExpressionUUID->
     "6bb2f0a1-3d29-4d00-967c-eaf87fa98fab"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1,ExpressionUUID->"469ec1b7-7342-4fc0-9a7a-f8a131d04d0a"],

Cell[CellGroupData[{

Cell["Combinatorics", "TechNoteTitle",
 CellID->28422271,ExpressionUUID->"29863ea0-08dc-46b8-b497-cb6f5f528f0c"],

Cell[BoxData[GridBox[{
   {
    TemplateBox[{
      Cell["Indexes"], 
      "paclet:PeterBurbery/Combinatorics/tutorial/Combinatorics#12394907", 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.3843137254901961, 0.4627450980392157, 0.7019607843137254], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False], 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.9686274509803922, 0.4666666666666667, 0.], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
      Cell["Derangements"], 
      "paclet:PeterBurbery/Combinatorics/tutorial/Combinatorics#468515064", 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.3843137254901961, 0.4627450980392157, 0.7019607843137254], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False], 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.9686274509803922, 0.4666666666666667, 0.], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]},
   {
    TemplateBox[{
      Cell["Central Binomial Coefficient"], 
      "paclet:PeterBurbery/Combinatorics/tutorial/Combinatorics#57602827", 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.3843137254901961, 0.4627450980392157, 0.7019607843137254], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False], 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.9686274509803922, 0.4666666666666667, 0.], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
      Cell["Multichoose"], 
      "paclet:PeterBurbery/Combinatorics/tutorial/Combinatorics#399341884", 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.3843137254901961, 0.4627450980392157, 0.7019607843137254], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False], 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.9686274509803922, 0.4666666666666667, 0.], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]},
   {
    TemplateBox[{
      Cell["Modified Central Binomial Coefficient"], 
      "paclet:PeterBurbery/Combinatorics/tutorial/Combinatorics#33461597", 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.3843137254901961, 0.4627450980392157, 0.7019607843137254], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False], 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.9686274509803922, 0.4666666666666667, 0.], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], ""}
  }]], "TechNoteJumpBox",ExpressionUUID->"13159a33-f3b1-421a-ac79-\
2ed8c3ebbe3d"],

Cell["\<\
This paclet is for the study of combinatorics. I am a combinatorialist. That \
means I study combinatorics.\
\>", "TechNoteText",
 CellID->106321115,ExpressionUUID->"c9cda3f0-8f4e-4867-9c22-5cb081f88c20"],

Cell[TextData[{
 "The functions defined in the ",
 Cell[BoxData["PeterBurbery`Combinatorics`"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "52ca241b-5f2c-48bd-8a73-2dcacebef876"],
 " context provide support for finding solutions to combinatorics-related \
problems."
}], "TechNoteText",
 CellID->345096676,ExpressionUUID->"2768152e-beee-4843-9be6-e009958bdc11"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<PeterBurbery`Combinatorics`\>\"", "]"}]], "Input",
 InitializationCell->True,
 CellLabel->"In[469]:=",
 CellID->13366579,ExpressionUUID->"e2eeb9fd-67f8-4057-a237-75c17f9df3c9"],

Cell[CellGroupData[{

Cell["Indexes", "TechNoteSection",
 CellID->12394907,ExpressionUUID->"94baa558-d014-4759-9107-28d629b3dc9c"],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     TemplateBox[{
       Cell[
        TextData["PermutationIndex"]], 
       "paclet:PeterBurbery/Combinatorics/ref/PermutationIndex", 
       "PeterBurbery Package Symbol"},
      "PackageLink",
      BaseStyle->{"DefinitionBox", CellFrame -> 0}], "[", 
     StyleBox["perm", "TI"], "]"}], Cell[TextData[{
     "gives the lexicographic index of permutation ",
     Cell[BoxData[
      StyleBox["perm", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "c3a9b2df-3536-4ba6-a032-b09c13c94405"],
     "."
    }], "TechNoteTableText",ExpressionUUID->
     "5373f39b-27ad-4f63-9be4-43407bcaaca0"]},
   {
    RowBox[{
     TemplateBox[{
       Cell[
        TextData["PermutationFromIndex"]], 
       "paclet:PeterBurbery/Combinatorics/ref/PermutationFromIndex", 
       "PeterBurbery Package Symbol"},
      "PackageLink",
      BaseStyle->{"DefinitionBox", CellFrame -> 0}], "[", 
     RowBox[{
      StyleBox["index", "TI"], ",", 
      StyleBox["lengthInput", "TI"]}], "]"}], Cell[TextData[{
     "returns the permutation of length ",
     Cell[BoxData[
      StyleBox["lengthInput", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "5566bf9d-4ac0-4589-a567-799baccf1e46"],
     " corresponding to the ",
     Cell[BoxData[
      StyleBox["index", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "9f72b394-0f03-42b2-9680-2ddca649f2cf"],
     "th permutation in lexicographic order."
    }], "TechNoteTableText",ExpressionUUID->
     "8834a3b8-8409-4b2e-9854-69d4ff7f8678"]},
   {
    RowBox[{
     TemplateBox[{
       Cell[
        TextData["SubsetIndex"]], 
       "paclet:PeterBurbery/Combinatorics/ref/SubsetIndex", 
       "PeterBurbery Package Symbol"},
      "PackageLink",
      BaseStyle->{"DefinitionBox", CellFrame -> 0}], "[", 
     StyleBox["list", "TI"], "]"}], Cell[TextData[{
     "gives the index of subset ",
     Cell[BoxData[
      StyleBox["list", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "48fd3c73-5ee7-4c63-9ce1-84af978e78dc"],
     "."
    }], "TechNoteTableText",ExpressionUUID->
     "2d1eed3b-216e-4791-8e17-49930bb4ceb4"]},
   {
    RowBox[{
     TemplateBox[{
       Cell[
        TextData["SubsetFromIndex"]], 
       "paclet:PeterBurbery/Combinatorics/ref/SubsetFromIndex", 
       "PeterBurbery Package Symbol"},
      "PackageLink",
      BaseStyle->{"DefinitionBox", CellFrame -> 0}], "[", 
     RowBox[{
      StyleBox["index", "TI"], ",", 
      StyleBox["len", "TI"]}], "]"}], Cell[TextData[{
     "returns a subset of length ",
     Cell[BoxData[
      StyleBox["len", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "cd32c1e8-0196-4786-8744-c82ed3f32b5f"],
     " with given ",
     Cell[BoxData[
      StyleBox["index", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "ddaa4f59-e129-4a33-8439-9bdb3e8e88b4"],
     "."
    }], "TechNoteTableText",ExpressionUUID->
     "18fa3548-9fd2-41ce-8cb1-cdc045afd7e3"]}
  }]], "DefinitionBox",
 CellID->124942403,ExpressionUUID->"5cf8197e-0767-4bab-b6e7-417fa46727b6"],

Cell["Computing the index or using the index to get the thing.", \
"TechNoteCaption",
 CellID->520428306,ExpressionUUID->"4bfbbaaf-1b42-48b6-a4c3-a5a305a58f86"],

Cell["Find the index of a random permutation", "TechNoteMathCaption",
 CellID->31903801,ExpressionUUID->"f43506a1-7771-4158-a9c0-54ec169572db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PermutationIndex", "[", 
  RowBox[{"Echo", "[", 
   RowBox[{"PermutationList", "@", 
    RowBox[{"RandomPermutation", "[", "9", "]"}]}], "]"}], "]"}]], "Input",
 CellLabel->"In[12]:=",
 CellID->2966739,ExpressionUUID->"7598acd3-6389-4c45-952d-4464965c6e07"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "6", ",", "9", ",", "1", ",", "4", ",", "8", ",", "3", ",", "5", 
   ",", "7"}], "}"}]], "Echo",
 CellID->829559052,ExpressionUUID->"f066f4bb-3bf8-434a-9e49-a31946bcb20a"],

Cell[BoxData["64843"], "Output",
 CellLabel->"Out[12]=",
 CellID->9137373,ExpressionUUID->"917f2ec9-b63e-4e49-b26d-a2b29b07ae42"]
}, Open  ]],

Cell["Get the permutation:", "TechNoteMathCaption",
 CellID->591549556,ExpressionUUID->"04b3ff9b-2b0f-4761-a60b-8aed1ef39046"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PermutationFromIndex", "[", 
  RowBox[{"%", ",", "9"}], "]"}]], "Input",
 CellLabel->"In[13]:=",
 CellID->281752241,ExpressionUUID->"d783cff5-3a8f-4ff8-a24b-8cbc5953d7ae"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "6", ",", "9", ",", "1", ",", "4", ",", "8", ",", "3", ",", "5", 
   ",", "7"}], "}"}]], "Output",
 CellLabel->"Out[13]=",
 CellID->69714785,ExpressionUUID->"75324d47-0bb8-4560-a357-e84a5be0cfe1"]
}, Open  ]],

Cell["\<\
Here's a neat application of this function. We can use this to solve Project \
Euler Problem 24 Lexicographic Permutations. What is the millionth \
lexicographic permutation of the digits 0, 1, 2, 3, 4, 5, 6, 7, 8, and 9?\
\>", "TechNoteMathCaption",
 CellID->114128779,ExpressionUUID->"f2ad7b3e-b352-44eb-93a1-3b887280e5a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PermutationFromIndex", "[", 
  RowBox[{"1000000", 
   RowBox[{"(*", 
    RowBox[{"a", " ", "million", " ", "is", " ", 
     SuperscriptBox["10", "6"]}], "*)"}], ",", " ", "10"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"because", " ", 
     RowBox[{"Length", "[", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", 
        "7", ",", "8", ",", ",", "9"}], "}"}], "]"}], " ", "is", " ", "10"}], 
    ",", " ", 
    RowBox[{"not", " ", "9"}]}], "*)"}], "]"}]], "Input",
 CellLabel->"In[6]:=",
 CellID->123225409,ExpressionUUID->"157110f4-2bfa-40c5-9452-4bedaadba74c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "8", ",", "9", ",", "4", ",", "10", ",", "2", ",", "6", ",", "5", 
   ",", "7", ",", "1"}], "}"}]], "Output",
 CellLabel->"Out[6]=",
 CellID->565924694,ExpressionUUID->"dfc393ca-515e-4aa7-a026-227ca82b12ac"]
}, Open  ]],

Cell["\<\
Now we need to subtract 1. 10 will become 9 and 1 will become 0.\
\>", "TechNoteMathCaption",
 CellID->198474650,ExpressionUUID->"f7523c82-c609-4bd7-ac6a-101682c7d785"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PermutationFromIndex", "[", 
   RowBox[{"1000000", 
    RowBox[{"(*", 
     RowBox[{"a", " ", "million", " ", "is", " ", 
      SuperscriptBox["10", "6"]}], "*)"}], ",", " ", "10"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"because", " ", 
      RowBox[{"Length", "[", 
       RowBox[{"{", 
        RowBox[{
        "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", 
         "7", ",", "8", ",", ",", "9"}], "}"}], "]"}], " ", "is", " ", "10"}],
      ",", " ", 
     RowBox[{"not", " ", "9"}]}], "*)"}], "]"}], "-", "1"}]], "Input",
 CellLabel->"In[7]:=",
 CellID->96415675,ExpressionUUID->"f6ee380a-4739-4721-a9c7-73721e6057cf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "7", ",", "8", ",", "3", ",", "9", ",", "1", ",", "5", ",", "4", 
   ",", "6", ",", "0"}], "}"}]], "Output",
 CellLabel->"Out[7]=",
 CellID->187311040,ExpressionUUID->"2d250a20-2f3b-4743-912c-9184cd3d8621"]
}, Open  ]],

Cell["Now we can use FromDigits.", "TechNoteMathCaption",
 CellID->460961065,ExpressionUUID->"17bb4736-5c24-4017-850c-e27538d06e14"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FromDigits", "[", 
  RowBox[{
   RowBox[{"PermutationFromIndex", "[", 
    RowBox[{"1000000", 
     RowBox[{"(*", 
      RowBox[{"a", " ", "million", " ", "is", " ", 
       SuperscriptBox["10", "6"]}], "*)"}], ",", " ", "10"}], 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"because", " ", 
       RowBox[{"Length", "[", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",",
           "7", ",", "8", ",", ",", "9"}], "}"}], "]"}], " ", "is", " ", 
       "10"}], ",", " ", 
      RowBox[{"not", " ", "9"}]}], "*)"}], "]"}], "-", "1"}], "]"}]], "Input",
 CellLabel->"In[8]:=",
 CellID->348169710,ExpressionUUID->"a52ff0eb-569f-4664-8c55-c62fa39b960a"],

Cell[BoxData["2783915460"], "Output",
 CellLabel->"Out[8]=",
 CellID->12882949,ExpressionUUID->"36c2d559-21c4-4959-9b9a-f77a2523a960"]
}, Open  ]],

Cell["And that's the answer!", "TechNoteMathCaption",
 CellID->215938530,ExpressionUUID->"bcb88308-d60b-448d-85d9-7cb5da93ed7b"],

Cell["Find a subset's index.", "TechNoteMathCaption",
 CellID->142381604,ExpressionUUID->"2353ef8d-02c7-40d7-813d-2f1ec64d119b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SubsetIndex", "[", 
  RowBox[{"{", 
   RowBox[{"2", ",", "4", ",", "6"}], "}"}], "]"}]], "Input",
 CellLabel->"In[10]:=",
 CellID->347150823,ExpressionUUID->"50a8906b-1d34-4e2b-a456-bb398b05870c"],

Cell[BoxData["29"], "Output",
 CellLabel->"Out[10]=",
 CellID->160256386,ExpressionUUID->"af55f9e2-6bed-4d19-95da-a7e33b9c2c07"]
}, Open  ]],

Cell["Find the subset.", "TechNoteMathCaption",
 CellID->9730894,ExpressionUUID->"aa13f796-6084-4be4-b68f-69ee4bd51d4d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SubsetFromIndex", "[", 
  RowBox[{"29", ",", "3"}], "]"}]], "Input",
 CellLabel->"In[15]:=",
 CellID->172885937,ExpressionUUID->"cd861de1-c55b-4f65-b868-a785400a8b7b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "4", ",", "6"}], "}"}]], "Output",
 CellLabel->"Out[15]=",
 CellID->13566930,ExpressionUUID->"e6a0cb59-0782-43fb-a8a8-a82b96865c08"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Central Binomial Coefficient", "TechNoteSection",
 CellID->57602827,ExpressionUUID->"791c635c-1e03-4372-949b-fa4d96525879"],

Cell["Compute the central binomial coefficient.", "TechNoteMathCaption",
 CellID->237155657,ExpressionUUID->"b83f86d4-9d83-499b-ab40-b811d6930b35"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CentralBinomialCoefficient", "[", "54", "]"}]], "Input",
 CellLabel->"In[18]:=",
 CellID->114626256,ExpressionUUID->"3077938e-d049-4d8d-a063-4be05b563e2d"],

Cell[BoxData["24857784491537440929618523018320"], "Output",
 CellLabel->"Out[18]=",
 CellID->21111411,ExpressionUUID->"6d2b2a59-ce78-473d-bfec-f2e65f9d3bd9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CentralBinomialCoefficient", "[", "n", "]"}]], "Input",
 CellLabel->"In[19]:=",
 CellID->72962348,ExpressionUUID->"c4b67cc6-ff82-4326-9aca-1b660f7fcf40"],

Cell[BoxData[
 RowBox[{"Binomial", "[", 
  RowBox[{
   RowBox[{"2", " ", "n"}], ",", "n"}], "]"}]], "Output",
 CellLabel->"Out[19]=",
 CellID->144120138,ExpressionUUID->"a2a6b74a-9608-4542-8d81-ef5b97813ba2"]
}, Open  ]],

Cell["Find the generating function.", "TechNoteMathCaption",
 CellID->172959633,ExpressionUUID->"df0d52ca-bffd-45a1-b519-758e939bc207"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeneratingFunction", "[", 
  RowBox[{
   RowBox[{"CentralBinomialCoefficient", "[", "n", "]"}], ",", "n", ",", 
   "x"}], "]"}]], "Input",
 CellLabel->"In[20]:=",
 CellID->103210421,ExpressionUUID->"6bac6800-1d14-44bc-b44b-9c6af422b49a"],

Cell[BoxData[
 FractionBox["1", 
  SqrtBox[
   RowBox[{"1", "-", 
    RowBox[{"4", " ", "x"}]}]]]], "Output",
 CellLabel->"Out[20]=",
 CellID->78156444,ExpressionUUID->"0c88aaef-5c05-4d5b-855f-86576afe9105"]
}, Open  ]],

Cell["Make a table of values.", "TechNoteMathCaption",
 CellID->452686366,ExpressionUUID->"8860ba47-aeb6-4f5b-b590-f7dec769ca82"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{"\"\<n\>\"", "->", 
       RowBox[{"CentralBinomialCoefficient", "[", "#", "]"}]}], "|>"}], "&"}],
     "]"}], "[", 
   RowBox[{"Range", "[", "21", "]"}], "]"}], "]"}]], "Input",
 CellLabel->"In[22]:=",
 CellID->422387114,ExpressionUUID->"ce3c5df2-0acd-4351-a168-d4b9b9224a22"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      1 -> <|"n" -> 2|>, 2 -> <|"n" -> 6|>, 3 -> <|"n" -> 20|>, 
       4 -> <|"n" -> 70|>, 5 -> <|"n" -> 252|>, 6 -> <|"n" -> 924|>, 
       7 -> <|"n" -> 3432|>, 8 -> <|"n" -> 12870|>, 9 -> <|"n" -> 48620|>, 
       10 -> <|"n" -> 184756|>, 11 -> <|"n" -> 705432|>, 
       12 -> <|"n" -> 2704156|>, 13 -> <|"n" -> 10400600|>, 
       14 -> <|"n" -> 40116600|>, 15 -> <|"n" -> 155117520|>, 
       16 -> <|"n" -> 601080390|>, 17 -> <|"n" -> 2333606220|>, 
       18 -> <|"n" -> 9075135300|>, 19 -> <|"n" -> 35345263800|>, 
       20 -> <|"n" -> 137846528820|>, 21 -> <|"n" -> 538257874440|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, "n"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 1, {All}]]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n"}, {
         TypeSystem`Atom[Integer]}], 21], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, "n"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 1, {All}]]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n"}, {
         TypeSystem`Atom[Integer]}], 21], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 1, "DataRowCount" -> 21, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["n", 
                  Style[
                  "n", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "n"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "n"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["70"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["252"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["924"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12870"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48620"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["184756"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["11"], 
                  Style[
                   RawBoxes["11"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[11]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["705432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["12"], 
                  Style[
                   RawBoxes["12"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[12]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2704156"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["13"], 
                  Style[
                   RawBoxes["13"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[13]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10400600"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["14"], 
                  Style[
                   RawBoxes["14"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[14]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["40116600"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["15"], 
                  Style[
                   RawBoxes["15"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[15]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["155117520"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["16"], 
                  Style[
                   RawBoxes["16"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[16]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["601080390"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["17"], 
                  Style[
                   RawBoxes["17"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[17]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2333606220"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["18"], 
                  Style[
                   RawBoxes["18"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[18]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9075135300"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["19"], 
                  Style[
                   RawBoxes["19"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[19]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35345263800"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["20"], 
                  Style[
                   RawBoxes["20"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[20]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["137846528820"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 21, 1], {1, 21 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 21, 1], {1, 21 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[21, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[21, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 21, 1], {1, 21 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 21, 1], {1, 21 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{167., {299.8544921875, 305.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{167., {299.8544921875, 305.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[22]=",
 CellID->209532304,ExpressionUUID->"cc2bb6ca-d1b9-4f35-9ca1-76c6f1a54a4e"]
}, Open  ]],

Cell[TextData[{
 "The digits of ",
 Cell[BoxData[
  RowBox[{"(", GridBox[{
     {
      RowBox[{"2", " ", 
       SuperscriptBox["10", "n"]}]},
     {
      SuperscriptBox["10", "n"]}
    }], ")"}]], "Input",ExpressionUUID->
  "38927e40-f4ef-4697-b16f-62681046dae5"],
 " for ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"n", "=", "0"}], ",", " ", "1", ",", " ", "\[Ellipsis]"}]], 
  "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "fd074d53-baf5-4e3f-aacc-f3e00b1d68dd"],
 " are"
}], "TechNoteMathCaption",
 CellID->56151557,ExpressionUUID->"19c2ede4-6eb4-40b0-81d5-58bc4f1c47e3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{"\"\<n\>\"", "->", 
       RowBox[{"IntegerLength", "[", 
        RowBox[{"CentralBinomialCoefficient", "[", 
         SuperscriptBox["10", "#"], "]"}], "]"}]}], "|>"}], "&"}], "]"}], "[", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "8"}], "]"}], "]"}], "]"}]], "Input",
 CellLabel->"In[32]:=",
 CellID->392545453,ExpressionUUID->"315ff5bc-9c19-4562-8561-5cdfe006134d"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      0 -> <|"n" -> 1|>, 1 -> <|"n" -> 6|>, 2 -> <|"n" -> 59|>, 
       3 -> <|"n" -> 601|>, 4 -> <|"n" -> 6019|>, 5 -> <|"n" -> 60204|>, 
       6 -> <|"n" -> 602057|>, 7 -> <|"n" -> 6020597|>, 
       8 -> <|"n" -> 60205995|>|>, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[9]} -> 1, {All, "n"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 1, {All}]]], 9, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n"}, {
         TypeSystem`Atom[Integer]}], 9], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[9]} -> 1, {All, "n"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 1, {All}]]], 9, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n"}, {
         TypeSystem`Atom[Integer]}], 9], "Path" -> {}, "DisplayedRowCount" -> 
     9, "DisplayedColumnCount" -> 1, "DataRowCount" -> 9, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["n", 
                  Style[
                  "n", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "n"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "n"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["59"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["601"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6019"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["60204"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["602057"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6020597"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["60205995"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{111., {140.8544921875, 146.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{111., {140.8544921875, 146.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[32]=",
 CellID->242033643,ExpressionUUID->"6938d4d0-e2d1-4edf-99a6-e133788f86ff"]
}, Open  ]],

Cell[TextData[{
 "These digits are converging to the digits of ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["log", "10"], "4"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "602a2475-7c52-48c6-a01d-ccab6572cf4a"],
 "."
}], "TechNoteMathCaption",
 CellID->100832978,ExpressionUUID->"a69dedee-e839-4836-915d-a71a2bd2e532"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"Log", "[", 
    RowBox[{"10", ",", "4"}], "]"}], ",", "40"}], "]"}]], "Input",
 CellLabel->"In[34]:=",
 CellID->438135564,ExpressionUUID->"ede388b5-b5be-44c7-9b93-ba162d25e9a4"],

Cell[BoxData["0.6020599913279623904274777894489860535363797629242170826208`40.\
"], "Output",
 CellLabel->"Out[34]=",
 CellID->287705978,ExpressionUUID->"19947191-b27a-4d1e-b954-8c5a7c725dd1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Modified Central Binomial Coefficient", "TechNoteSection",
 CellID->33461597,ExpressionUUID->"043711de-c6d3-40d5-b6bb-10780552ed50"],

Cell["Let's look at the modified central binomial coefficient.", \
"TechNoteMathCaption",
 CellID->139662984,ExpressionUUID->"f2fd091d-1e6f-4e71-a2ff-d6101f367dc1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{"\"\<n\>\"", "->", 
       RowBox[{"ModifiedCentralBinomialCoefficient", "[", "#", "]"}]}], 
      "|>"}], "&"}], "]"}], "[", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "21"}], "]"}], "]"}], "]"}]], "Input",
 CellLabel->"In[958]:=",
 CellID->398286937,ExpressionUUID->"3981f08a-a266-4abb-a862-b0e114c10814"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      0 -> <|"n" -> 1|>, 1 -> <|"n" -> 1|>, 2 -> <|"n" -> 2|>, 
       3 -> <|"n" -> 3|>, 4 -> <|"n" -> 6|>, 5 -> <|"n" -> 10|>, 
       6 -> <|"n" -> 20|>, 7 -> <|"n" -> 35|>, 8 -> <|"n" -> 70|>, 
       9 -> <|"n" -> 126|>, 10 -> <|"n" -> 252|>, 11 -> <|"n" -> 462|>, 
       12 -> <|"n" -> 924|>, 13 -> <|"n" -> 1716|>, 14 -> <|"n" -> 3432|>, 
       15 -> <|"n" -> 6435|>, 16 -> <|"n" -> 12870|>, 17 -> <|"n" -> 24310|>, 
       18 -> <|"n" -> 48620|>, 19 -> <|"n" -> 92378|>, 
       20 -> <|"n" -> 184756|>, 21 -> <|"n" -> 352716|>|>, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[11]} -> 1, {All, "n"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 1, {All}]]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n"}, {
         TypeSystem`Atom[Integer]}], 22], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[11]} -> 1, {All, "n"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 1, {All}]]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n"}, {
         TypeSystem`Atom[Integer]}], 22], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 1, "DataRowCount" -> 22, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["n", 
                  Style[
                  "n", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "n"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "n"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["70"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["126"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["252"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["11"], 
                  Style[
                   RawBoxes["11"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[11]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["462"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["12"], 
                  Style[
                   RawBoxes["12"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[12]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["924"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["13"], 
                  Style[
                   RawBoxes["13"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[13]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1716"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["14"], 
                  Style[
                   RawBoxes["14"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[14]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["15"], 
                  Style[
                   RawBoxes["15"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[15]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6435"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["16"], 
                  Style[
                   RawBoxes["16"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[16]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12870"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["17"], 
                  Style[
                   RawBoxes["17"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[17]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24310"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["18"], 
                  Style[
                   RawBoxes["18"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[18]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48620"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["19"], 
                  Style[
                   RawBoxes["19"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[19]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["92378"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{167., {299.8544921875, 305.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{167., {299.8544921875, 305.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[958]=",
 CellID->52134645,ExpressionUUID->"ae81a371-746d-4db3-8569-2cdc530451cb"]
}, Open  ]],

Cell[TextData[{
 "The generating function is  ",
 Cell[BoxData[
  FractionBox[
   RowBox[{"1", "-", 
    RowBox[{"4", 
     SuperscriptBox["x", "2"]}], "-", 
    SqrtBox[
     RowBox[{"1", "-", 
      RowBox[{"4", 
       SuperscriptBox["x", "2"]}]}]]}], 
   RowBox[{"2", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", 
       SuperscriptBox["x", "3"]}], "-", 
      SuperscriptBox["x", "2"]}], ")"}]}]]], "Input",ExpressionUUID->
  "196301bb-b992-4b2a-984c-ba30bd9726e4"],
 "."
}], "TechNoteMathCaption",
 CellID->254962743,ExpressionUUID->"bd50a358-8472-43db-92f1-56cedce74600"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SeriesCoefficient", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"1", "-", 
     RowBox[{"4", 
      SuperscriptBox["x", "2"]}], "-", 
     SqrtBox[
      RowBox[{"1", "-", 
       RowBox[{"4", 
        SuperscriptBox["x", "2"]}]}]]}], 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", 
        SuperscriptBox["x", "3"]}], "-", 
       SuperscriptBox["x", "2"]}], ")"}]}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"9", "-", "1"}]}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[978]:=",
 CellID->208306947,ExpressionUUID->"267bdab1-9ef9-4c49-b84e-33848c84d88e"],

Cell[BoxData["126"], "Output",
 CellLabel->"Out[978]=",
 CellID->2750224,ExpressionUUID->"cb1ae230-d39e-470b-a545-a1d1657fe595"]
}, Open  ]],

Cell["This matches our output.", "TechNoteMathCaption",
 CellID->48756516,ExpressionUUID->"38bf2122-d295-44fe-b7d6-2b0ba09be970"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<n\>\"", "->", 
        RowBox[{"ModifiedCentralBinomialCoefficient", "[", "#", "]"}]}], ",", 
       RowBox[{"\"\<seriesCoefficient\>\"", "->", 
        RowBox[{"SeriesCoefficient", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"1", "-", 
            RowBox[{"4", 
             SuperscriptBox["x", "2"]}], "-", 
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{"4", 
               SuperscriptBox["x", "2"]}]}]]}], 
           RowBox[{"2", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", 
               SuperscriptBox["x", "3"]}], "-", 
              SuperscriptBox["x", "2"]}], ")"}]}]], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", 
            RowBox[{"#", "-", "1"}]}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<equal\>\"", "->", 
        RowBox[{
         RowBox[{"ModifiedCentralBinomialCoefficient", "[", "#", "]"}], "===", 
         RowBox[{"SeriesCoefficient", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"1", "-", 
             RowBox[{"4", 
              SuperscriptBox["x", "2"]}], "-", 
             SqrtBox[
              RowBox[{"1", "-", 
               RowBox[{"4", 
                SuperscriptBox["x", "2"]}]}]]}], 
            RowBox[{"2", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", 
                SuperscriptBox["x", "3"]}], "-", 
               SuperscriptBox["x", "2"]}], ")"}]}]], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", 
             RowBox[{"#", "-", "1"}]}], "}"}]}], "]"}]}]}]}], "|>"}], "&"}], 
    "]"}], "[", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "21"}], "]"}], "]"}], "]"}]], "Input",
 CellLabel->"In[980]:=",
 CellID->415836666,ExpressionUUID->"2641e297-6863-4235-8bc2-47fc51ba52c5"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      0 -> <|"n" -> 1, "seriesCoefficient" -> 0, "equal" -> False|>, 
       1 -> <|"n" -> 1, "seriesCoefficient" -> 1, "equal" -> True|>, 
       2 -> <|"n" -> 2, "seriesCoefficient" -> 2, "equal" -> True|>, 
       3 -> <|"n" -> 3, "seriesCoefficient" -> 3, "equal" -> True|>, 
       4 -> <|"n" -> 6, "seriesCoefficient" -> 6, "equal" -> True|>, 
       5 -> <|"n" -> 10, "seriesCoefficient" -> 10, "equal" -> True|>, 
       6 -> <|"n" -> 20, "seriesCoefficient" -> 20, "equal" -> True|>, 
       7 -> <|"n" -> 35, "seriesCoefficient" -> 35, "equal" -> True|>, 
       8 -> <|"n" -> 70, "seriesCoefficient" -> 70, "equal" -> True|>, 
       9 -> <|"n" -> 126, "seriesCoefficient" -> 126, "equal" -> True|>, 
       10 -> <|"n" -> 252, "seriesCoefficient" -> 252, "equal" -> True|>, 
       11 -> <|"n" -> 462, "seriesCoefficient" -> 462, "equal" -> True|>, 
       12 -> <|"n" -> 924, "seriesCoefficient" -> 924, "equal" -> True|>, 
       13 -> <|"n" -> 1716, "seriesCoefficient" -> 1716, "equal" -> True|>, 
       14 -> <|"n" -> 3432, "seriesCoefficient" -> 3432, "equal" -> True|>, 
       15 -> <|"n" -> 6435, "seriesCoefficient" -> 6435, "equal" -> True|>, 
       16 -> <|"n" -> 12870, "seriesCoefficient" -> 12870, "equal" -> True|>, 
       17 -> <|"n" -> 24310, "seriesCoefficient" -> 24310, "equal" -> True|>, 
       18 -> <|"n" -> 48620, "seriesCoefficient" -> 48620, "equal" -> True|>, 
       19 -> <|"n" -> 92378, "seriesCoefficient" -> 92378, "equal" -> True|>, 
       20 -> <|"n" -> 184756, "seriesCoefficient" -> 184756, "equal" -> 
         True|>, 21 -> <|
        "n" -> 352716, "seriesCoefficient" -> 352716, "equal" -> True|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[13]} -> 1, {All, "n"} -> 
        1, {All, "seriesCoefficient"} -> 1, {All, "equal"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34], "seriesCoefficient" -> 
             TypeSystem`PackageScope`AtomShape[34], "equal" -> 
             TypeSystem`PackageScope`AtomShape[36]|>], 
           DirectedInfinity[1], 3, {All}]]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n", "seriesCoefficient", "equal"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 22], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[13]} -> 1, {All, "n"} -> 
        1, {All, "seriesCoefficient"} -> 1, {All, "equal"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34], "seriesCoefficient" -> 
             TypeSystem`PackageScope`AtomShape[34], "equal" -> 
             TypeSystem`PackageScope`AtomShape[36]|>], 
           DirectedInfinity[1], 3, {All}]]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n", "seriesCoefficient", "equal"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 22], "Path" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     22, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["n", 
                  Style[
                  "n", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "n"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "n"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["seriesCoefficient", 
                  Style[
                  "seriesCoefficient", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "seriesCoefficient"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "seriesCoefficient"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["equal", 
                  Style[
                  "equal", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "equal"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "equal"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["70"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["70"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["126"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["126"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["252"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["252"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["11"], 
                  Style[
                   RawBoxes["11"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[11]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["462"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["462"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["12"], 
                  Style[
                   RawBoxes["12"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[12]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["924"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["924"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["13"], 
                  Style[
                   RawBoxes["13"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[13]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1716"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1716"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["14"], 
                  Style[
                   RawBoxes["14"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[14]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["15"], 
                  Style[
                   RawBoxes["15"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[15]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6435"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6435"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["16"], 
                  Style[
                   RawBoxes["16"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[16]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12870"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12870"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["17"], 
                  Style[
                   RawBoxes["17"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[17]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24310"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24310"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["18"], 
                  Style[
                   RawBoxes["18"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[18]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48620"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48620"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["19"], 
                  Style[
                   RawBoxes["19"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[19]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["92378"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["92378"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{256., {299.8544921875, 305.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{256., {299.8544921875, 305.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[980]=",
 CellID->14127691,ExpressionUUID->"5599e82a-0cd2-4e01-ab51-4e33be1716e4"]
}, Open  ]],

Cell["\<\
If we start at 1, we will get all True instead of a False at 0.\
\>", "TechNoteMathCaption",
 CellID->699600308,ExpressionUUID->"2da1dd1c-e47f-4ea8-b8ba-bcf09aa5bd9d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<n\>\"", "->", 
        RowBox[{"ModifiedCentralBinomialCoefficient", "[", "#", "]"}]}], ",", 
       RowBox[{"\"\<seriesCoefficient\>\"", "->", 
        RowBox[{"SeriesCoefficient", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"1", "-", 
            RowBox[{"4", 
             SuperscriptBox["x", "2"]}], "-", 
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{"4", 
               SuperscriptBox["x", "2"]}]}]]}], 
           RowBox[{"2", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", 
               SuperscriptBox["x", "3"]}], "-", 
              SuperscriptBox["x", "2"]}], ")"}]}]], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", 
            RowBox[{"#", "-", "1"}]}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<equal\>\"", "->", 
        RowBox[{
         RowBox[{"ModifiedCentralBinomialCoefficient", "[", "#", "]"}], "===", 
         RowBox[{"SeriesCoefficient", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"1", "-", 
             RowBox[{"4", 
              SuperscriptBox["x", "2"]}], "-", 
             SqrtBox[
              RowBox[{"1", "-", 
               RowBox[{"4", 
                SuperscriptBox["x", "2"]}]}]]}], 
            RowBox[{"2", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", 
                SuperscriptBox["x", "3"]}], "-", 
               SuperscriptBox["x", "2"]}], ")"}]}]], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", 
             RowBox[{"#", "-", "1"}]}], "}"}]}], "]"}]}]}]}], "|>"}], "&"}], 
    "]"}], "[", 
   RowBox[{"Range", "[", 
    RowBox[{"2", ",", "21"}], "]"}], "]"}], "]"}]], "Input",
 CellLabel->"In[981]:=",
 CellID->6091911,ExpressionUUID->"acc42a94-28db-43b7-b697-59374793c6c2"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      2 -> <|"n" -> 2, "seriesCoefficient" -> 2, "equal" -> True|>, 
       3 -> <|"n" -> 3, "seriesCoefficient" -> 3, "equal" -> True|>, 
       4 -> <|"n" -> 6, "seriesCoefficient" -> 6, "equal" -> True|>, 
       5 -> <|"n" -> 10, "seriesCoefficient" -> 10, "equal" -> True|>, 
       6 -> <|"n" -> 20, "seriesCoefficient" -> 20, "equal" -> True|>, 
       7 -> <|"n" -> 35, "seriesCoefficient" -> 35, "equal" -> True|>, 
       8 -> <|"n" -> 70, "seriesCoefficient" -> 70, "equal" -> True|>, 
       9 -> <|"n" -> 126, "seriesCoefficient" -> 126, "equal" -> True|>, 
       10 -> <|"n" -> 252, "seriesCoefficient" -> 252, "equal" -> True|>, 
       11 -> <|"n" -> 462, "seriesCoefficient" -> 462, "equal" -> True|>, 
       12 -> <|"n" -> 924, "seriesCoefficient" -> 924, "equal" -> True|>, 
       13 -> <|"n" -> 1716, "seriesCoefficient" -> 1716, "equal" -> True|>, 
       14 -> <|"n" -> 3432, "seriesCoefficient" -> 3432, "equal" -> True|>, 
       15 -> <|"n" -> 6435, "seriesCoefficient" -> 6435, "equal" -> True|>, 
       16 -> <|"n" -> 12870, "seriesCoefficient" -> 12870, "equal" -> True|>, 
       17 -> <|"n" -> 24310, "seriesCoefficient" -> 24310, "equal" -> True|>, 
       18 -> <|"n" -> 48620, "seriesCoefficient" -> 48620, "equal" -> True|>, 
       19 -> <|"n" -> 92378, "seriesCoefficient" -> 92378, "equal" -> True|>, 
       20 -> <|"n" -> 184756, "seriesCoefficient" -> 184756, "equal" -> 
         True|>, 21 -> <|
        "n" -> 352716, "seriesCoefficient" -> 352716, "equal" -> True|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[14]} -> 1, {All, "n"} -> 
        1, {All, "seriesCoefficient"} -> 1, {All, "equal"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34], "seriesCoefficient" -> 
             TypeSystem`PackageScope`AtomShape[34], "equal" -> 
             TypeSystem`PackageScope`AtomShape[36]|>], 
           DirectedInfinity[1], 3, {All}]]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n", "seriesCoefficient", "equal"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 20], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[14]} -> 1, {All, "n"} -> 
        1, {All, "seriesCoefficient"} -> 1, {All, "equal"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34], "seriesCoefficient" -> 
             TypeSystem`PackageScope`AtomShape[34], "equal" -> 
             TypeSystem`PackageScope`AtomShape[36]|>], 
           DirectedInfinity[1], 3, {All}]]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n", "seriesCoefficient", "equal"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 20], "Path" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     20, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["n", 
                  Style[
                  "n", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "n"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "n"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["seriesCoefficient", 
                  Style[
                  "seriesCoefficient", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "seriesCoefficient"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "seriesCoefficient"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["equal", 
                  Style[
                  "equal", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "equal"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "equal"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["70"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["70"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["126"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["126"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["252"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["252"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["11"], 
                  Style[
                   RawBoxes["11"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[11]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["462"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["462"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["12"], 
                  Style[
                   RawBoxes["12"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[12]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["924"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["924"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["13"], 
                  Style[
                   RawBoxes["13"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[13]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1716"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1716"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["14"], 
                  Style[
                   RawBoxes["14"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[14]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["15"], 
                  Style[
                   RawBoxes["15"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[15]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6435"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6435"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["16"], 
                  Style[
                   RawBoxes["16"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[16]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12870"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12870"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["17"], 
                  Style[
                   RawBoxes["17"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[17]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24310"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24310"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["18"], 
                  Style[
                   RawBoxes["18"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[18]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48620"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48620"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["19"], 
                  Style[
                   RawBoxes["19"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[19]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["92378"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["92378"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["20"], 
                  Style[
                   RawBoxes["20"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[20]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["184756"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["184756"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["21"], 
                  Style[
                   RawBoxes["21"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[21]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[21]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["352716"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[21], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["352716"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[21], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[21], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{245., {289.3544921875, 294.6455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{245., {289.3544921875, 294.6455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[981]=",
 CellID->222447527,ExpressionUUID->"350cacfc-f3d9-4328-978d-e8b694387e77"]
}, Open  ]],

Cell[TextData[{
 "For more details, please visit ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["A001405"]], "https://oeis.org/A001405"},
   "WebLink",
   BaseStyle->{"TechNoteMathCaption"}]],ExpressionUUID->
  "f0dab678-0f50-4ea2-8674-7c7fc0764e67"],
 " on the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["OEIS"]], "https://www.oeis.org"},
   "WebLink",
   BaseStyle->{"TechNoteMathCaption"}]],ExpressionUUID->
  "99d20b05-a6da-4003-91f7-74b31b6815dc"],
 "."
}], "TechNoteMathCaption",
 CellID->259341750,ExpressionUUID->"563f31ea-55ed-4d75-ab9b-003c901d5d2b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Derangements", "TechNoteSection",
 CellID->468515064,ExpressionUUID->"8f4cfabc-dce5-4c88-b354-6d94488bc0ec"],

Cell["\<\
A derangement is a permutation in which none of the objects appear in their \
\"natural\" (i.e., ordered) place. For example, the derangements of {1,2,3}:\
\>", "TechNoteMathCaption",
 CellID->26838858,ExpressionUUID->"25a2f533-8afc-4b3c-aede-acf63b70597b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MultisetPartialDerangements", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]], "Input",
 CellLabel->"In[80]:=",
 CellID->320045123,ExpressionUUID->"4455d744-25af-483a-ab40-62fc0937d666"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[80]=",
 CellID->144098166,ExpressionUUID->"3b26dff5-133d-4ef0-bf76-01aa3f3f35c3"]
}, Open  ]],

Cell["Derangements of four elements:", "TechNoteMathCaption",
 CellID->502664438,ExpressionUUID->"d04fe5e1-0714-429c-a3e2-efbf84935857"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MultisetPartialDerangements", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "]"}]], "Input",
 CellLabel->"In[81]:=",
 CellID->460674117,ExpressionUUID->"47780729-629f-4d5f-acd1-c6eac089fef1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "2", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[81]=",
 CellID->567622007,ExpressionUUID->"806c4663-4a79-4798-91e2-24770e3ecbcd"]
}, Open  ]],

Cell["The have no cycles of length one.", "TechNoteMathCaption",
 CellID->318945664,ExpressionUUID->"5701f91e-7e0d-4917-a8b9-7708f920be97"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PermutationCycles", "/@", 
  RowBox[{"MultisetPartialDerangements", "[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "]"}]}]], "Input",
 CellLabel->"In[83]:=",
 CellID->228472135,ExpressionUUID->"f35939f1-9467-4a9e-aeae-0ac0fee32aa9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Cycles", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
   RowBox[{"Cycles", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "}"}], "]"}], ",", 
   RowBox[{"Cycles", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "4", ",", "3"}], "}"}], "}"}], "]"}], ",", 
   RowBox[{"Cycles", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "4", ",", "2"}], "}"}], "}"}], "]"}], ",", 
   RowBox[{"Cycles", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
   RowBox[{"Cycles", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "2", ",", "4"}], "}"}], "}"}], "]"}], ",", 
   RowBox[{"Cycles", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4", ",", "3", ",", "2"}], "}"}], "}"}], "]"}], ",", 
   RowBox[{"Cycles", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4", ",", "2", ",", "3"}], "}"}], "}"}], "]"}], ",", 
   RowBox[{"Cycles", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]], "Output",
 CellLabel->"Out[83]=",
 CellID->167688184,ExpressionUUID->"d36e98bf-2add-4311-85d7-52f5863d6454"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Apply", "[", "Identity", "]"}], "[", 
    RowBox[{"PermutationCycles", "[", "derangement", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"derangement", ",", 
     RowBox[{"MultisetPartialDerangements", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "]"}]}], "}"}]}], 
  "]"}]], "Input",
 CellLabel->"In[84]:=",
 CellID->498538805,ExpressionUUID->"41624195-a6e6-44e3-8e0a-57c6790425ed"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "4", ",", "3"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3", ",", "4", ",", "2"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3", ",", "2", ",", "4"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "4", ",", "3", ",", "2"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "4", ",", "2", ",", "3"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[84]=",
 CellID->488440420,ExpressionUUID->"75df63de-643c-4547-88a9-701e87b5059e"]
}, Open  ]],

Cell["This is one way to find derangements.", "TechNoteMathCaption",
 CellID->30430800,ExpressionUUID->"2b54ecbc-a10b-4b91-9653-1b0a6026c258"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MathWorldDerangements", "[", 
   RowBox[{"l_List", "?", "ListQ"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"perms", ",", "support"}], "}"}], ",", 
    RowBox[{
     RowBox[{"perms", "=", 
      RowBox[{"Permutations", "[", "l", "]"}]}], ";", 
     RowBox[{"support", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"PermutationSupport", "[", "perm", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"perm", ",", "perms"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"Pick", "[", 
      RowBox[{"perms", ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Length", "[", "perm", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"perm", ",", "support"}], "}"}]}], "]"}], ",", 
       RowBox[{"Length", "[", "l", "]"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellLabel->"In[85]:=",
 CellID->338626900,ExpressionUUID->"80aee334-7f65-4353-bb1a-185d9178d61e"],

Cell[TextData[{
 "The support of a permutation ",
 Cell[BoxData[
  StyleBox["perm", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "2f7bc712-629d-409a-8537-d1e64ed328af"],
 " is the list of integers that are not fixed by ",
 Cell[BoxData[
  StyleBox["perm", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "073dc754-c01d-4fef-9f82-8ceb5d5fec20"],
 "."
}], "TechNoteMathCaption",
 CellID->33966879,ExpressionUUID->"688cd8b4-68ba-40f0-8577-1497a1c6709d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MathWorldDerangements", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]], "Input",
 CellLabel->"In[86]:=",
 CellID->463235003,ExpressionUUID->"45aa8478-c27d-4605-a540-afc2ab20ae16"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[86]=",
 CellID->130931456,ExpressionUUID->"76f48552-e3e9-4e30-ae22-490c81a9b56c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MathWorldDerangements", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "]"}]], "Input",
 CellLabel->"In[87]:=",
 CellID->220685702,ExpressionUUID->"6bcdafe3-9b04-48a2-a43e-70dd3fe54d0e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "2", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[87]=",
 CellID->529899974,ExpressionUUID->"45a16a00-9b44-4196-a5b7-dd46c44cc127"]
}, Open  ]],

Cell["\<\
A more efficient algorithm would not generate all the permutations and then \
pick the derangements, but instead just generate the derangements.\
\>", "TechNoteMathCaption",
 CellID->667234787,ExpressionUUID->"da8b13e2-b463-4a54-aa61-8adf809b2bad"],

Cell[TextData[{
 "Make a random multiset of the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["hazel"]], "https://www.color-name.com/hazel.color"},
   "WebLink",
   BaseStyle->{"TechNoteMathCaption"}]],ExpressionUUID->
  "cfc2239f-c84e-4dd6-9198-c83314f5fdee"],
 " color rainbow palette. My eye-color is hazel."
}], "TechNoteMathCaption",
 CellID->20786854,ExpressionUUID->"4c803681-4fbd-46ab-9275-3f2628f789b1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hazelRainbowPalette", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"LUVColor", "[", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"\"\<#\>\"", "<>", "color"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"color", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<c9c789\>\"", ",", "\"\<94c989\>\"", ",", "\"\<89c9b5\>\"", ",", 
        "\"\<89a7c9\>\"", ",", "\"\<c989b9\>\"", ",", "\"\<c99089\>\""}], 
       "}"}]}], "}"}]}], "]"}]}]], "Input",
 CellLabel->"In[20]:=",
 CellID->712923585,ExpressionUUID->"cc518051-0b47-4527-be52-615a2377de4f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|
    "color" -> LUVColor[
      0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7621596783781963, -0.3310170840401606, 0.08359158699165539]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.6713375885659421, -0.17833924308420873`, -0.26467794346262646`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"]}], "}"}]], "Output",
 CellLabel->"Out[20]=",
 CellID->241317559,ExpressionUUID->"8e3978c4-3cd5-4682-a41c-07c7bc826c3d"]
}, Open  ]],

Cell["\<\
Let's find all the permutations where every element has moved. If an element \
stays in place, we name that a fixed point. A derangement is a permutation \
with 0 fixed points.\
\>", "TechNoteMathCaption",
 CellID->122464914,ExpressionUUID->"b2cab360-7f8e-4cb9-9c34-d8df9cad1965"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"smallerset", "=", 
  RowBox[{"RandomSample", "[", 
   RowBox[{"hazelRainbowPalette", ",", "4"}], "]"}]}]], "Input",
 CellLabel->"In[33]:=",
 CellID->435070527,ExpressionUUID->"2ea0defc-cf50-4ff4-93b4-f1b4111c4338"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|
    "color" -> LUVColor[
      0.7621596783781963, -0.3310170840401606, 0.08359158699165539]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"]}], "}"}]], "Output",
 CellLabel->"Out[33]=",
 CellID->411803166,ExpressionUUID->"2be94706-6fe8-4a50-8fef-bde6038250c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MultisetPartialDerangements", "[", "smallerset", "]"}]], "Input",
 CellLabel->"In[34]:=",
 CellID->57678985,ExpressionUUID->"f25ef3fa-9f61-49df-9215-52fe614f2ace"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
WyvgrjcDwQWZILggH+PdVcCH2+02fpWzf3X7+dp2eWm7fXdtu7wEXN9+sl1e
Ar6/vTZfQ2tuNpsyCZPDWl7uMlvL0V3uOzsVd3sXs1ZIu0u9s68yNyaR44BX
EVwV5IZ8Li/X3kMLElwnAeq5LA+uIB2L+Xx4dXU19Fdx7x5+aadevj3/4afW
cHkJiHvXPtwZLi8B0b0/P7SGK2H7tm3v7++9FCZwt5aju8zW8u35vjs7FXd7
F7NWSLuL3MiQG5PIccCrCK4KckM+l5dr76EFCa6TAPVclgdXsNo70fPHuyuf
D1er1dBfyfNEbvvlBloNPd/dWvT8GgKtkp6fche5oR6Xi+75OaxFz6/B3kML
ElwnAeq5LA+uQM+n5y8n0Oj5aWqY1/T8OdQ8Ll9lbkyCnk/Pr9DeQwsSXCcB
6rksD65Az6fnLyfQ6PlpapjX9Pw51DwuX2VuTIKeT8+v0N5DCxJcJwHquSwP
rkDPp+cvJ9Do+WlqmNf0/DnUPC5fZW5Mgp5Pz6/Q3kMLElwnAeq5LA+u8Ep7
PvfhJlhuoCVsv9/vD4eDl8IE3Ieb5vX1/GLWCnXfzvYqc2MSOQ54FcFVQW7I
5/Jy7T20IMF1EqCey/LgChl6/nh35fBhXLBpmsSy8jyR2365gZaw/dPT03a7
jY4a+nSv+WSyFj2/hkBL2LuAtcIYd5Eb6nGZ44BXEVwV5IZ8Li/X3kMLElwn
Aeq5LA+ukKHnj3dXDh9un4krDz1Anidy2y830NK2j0babDb5XsHIZC16fg2B
lrZ3bmuFMe4iN9TjMtMB1wdXBbkhn8vLtXdiTYIrVDCX5cEVMvT8MMVdOXzY
dV003tDf+ubJ/pmEyc8IcLW9QYBvoBkE5LB9tNCYX7tmUPs1Oazl6C73eV1s
c4d2Vm7vMNpaNrVfc8Fd5IZ3bkw+XxkKQxXBVUFuyOfycu09tCDBdRKgnsvy
4AoZev54d41/5FTK3Ifbtu3qmYTJzwjws71NgGOg2QSo7sO1qe1R7D5cg1rf
eV1yc8/urNzeX2SMuY0ou7vIDdfcsJwv0X241VrLMTfkc3m59h5akOA6CVDP
ZXlwhVd6H26Znt80zepXxr/1yNH2NgGOgWYToOr5NrU9ivV8g1rfeV1yc8/u
rNzeR0bGVHZ3kRuuuWE5X6KeX621HHNDPpeXa++hBQmukwD1XJYHV6Dnz9jx
ruu+/MDHfyOOtrcJcAw0mwBVz7ep7eFuLUd3+c7rkpt7dmfl9j4yMqayu4vc
cM0Ny/kS9fxqreWYG/K5vFx7Dy1IcJ0EqOeyPLgCPX9eUO92u+MPvMCbqL0E
+BYhgwDh5+cb1PYo1vMNat3fZ1tsc4d2Vm7vMCWm8rqL3PDOjcnnS/f5+XVa
yzE35HN5ufYeWpDgOglQz2V5cAV6/owdP35e0Er3/nybAMdAswlQ9Xyb2h7F
er5Bre+8Lrm5Z3dWbu8jI2Mqu7vIDdfcsJwvUc+v1lqOuSGfy8u199CCBNdJ
gHouy4MrvNKen/igJ5c8ORwONzc36/U6/rSvrq66rhuvzcX2cwS4BNocATl6
ftM0CS/NUdvD3VqO7vKa1+U3t7ezcnt/TdpaM9X2SLmL3HDKDfv5ytDzqwiu
CnJDPpeXa++hBQmukwD1XJYHV8jQ8y+6y/DIqcRnELvd7qzxXPLk+Hzq+JRq
6ulwsf0cAS6BNkeAe8+PLkr8Pr6Zanu4W8vRXV7zuvzm9nZWbu8vXLTWTLU9
Uu4iN5xyw36+vHt+LcFVQW7I5/Jy7X12NYLr/wLUc1keXMG7549x19RH2ojG
i0984lOJ3v/3et1gv9/bjobX01uzAK8XLswCHHt+lBFdFHc5rWSO2pf4WsvR
XY6vyxXe3JcvXGjtHUZba6balwy6i9zwe1nMeL78en5dwVVBbsjn8nLt3VuH
4OoLUM9leXAFv54/yV0jH5mDuHe2y03Au2vb5SUg7p3t8hIQ3Wu+vDTkwGwt
L3eZreX7+3C1Oyu3dybkOyv/wcpzQ37AM1FDbsh/sMu1t5eATCzXWl7ukgdX
qMDeAAAAAAAAAAAAAAAAAAAAAABQCf8F9wuyqA==
    "], {{0, 30.5}, {508., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{508., 30.5},
  PlotRange->{{0, 508.}, {0, 30.5}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[34]=",
 CellID->254652224,ExpressionUUID->"3c2d6ccb-9608-4041-a5cd-6a1b9a3dc567"]
}, Open  ]],

Cell["What is the length?", "TechNoteMathCaption",
 CellID->169212145,ExpressionUUID->"b5db532c-5b12-428a-8047-8d7ed3ec3697"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"MultisetPartialDerangements", "[", "smallerset", "]"}], 
  "]"}]], "Input",
 CellLabel->"In[35]:=",
 CellID->228145050,ExpressionUUID->"29b12264-aa72-4b91-950e-204a57731fae"],

Cell[BoxData["9"], "Output",
 CellLabel->"Out[35]=",
 CellID->147813536,ExpressionUUID->"aa09011d-a3f2-44a9-960b-92bce6787057"]
}, Open  ]],

Cell["\<\
How can we compute the length faster and more efficiently? We can compute \
this with the subfactorial. The subfactorial is written ! n. The subfactorial \
is also called the derangement number for this reason. The nth subfactorial \
is the number of permutations of n objects in which no object appears in its \
natural place (i. e., \"derangements\").\
\>", "TechNoteMathCaption",
 CellID->388376040,ExpressionUUID->"f4faf4d3-94d4-4b2e-bfa2-b2c265ebfb41"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "smallerset", "]"}]], "Input",
 CellLabel->"In[38]:=",
 CellID->131012795,ExpressionUUID->"07240d2b-0f6f-4f8b-8242-5af8a5eeddc8"],

Cell[BoxData["4"], "Output",
 CellLabel->"Out[38]=",
 CellID->127222859,ExpressionUUID->"95466749-a6c2-49aa-9caf-c04c6f011711"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Subfactorial", "[", 
  RowBox[{"Length", "[", "smallerset", "]"}], "]"}]], "Input",
 CellLabel->"In[39]:=",
 CellID->844247,ExpressionUUID->"719d76b5-4a27-406b-806d-59dfe453e417"],

Cell[BoxData["9"], "Output",
 CellLabel->"Out[39]=",
 CellID->91695846,ExpressionUUID->"330dea22-5ca7-468e-9746-cffed5f70a96"]
}, Open  ]],

Cell["Here's a table:", "TechNoteMathCaption",
 CellID->205495515,ExpressionUUID->"159cc44c-235b-484d-88e1-67d35413ced5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Subfactorial", "[", 
  RowBox[{"Range", "[", "10", "]"}], "]"}]], "Input",
 CellLabel->"In[57]:=",
 CellID->13581624,ExpressionUUID->"32d0986b-bc65-4208-9aa1-44b305e67f6a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "2", ",", "9", ",", "44", ",", "265", ",", "1854", ",", 
   "14833", ",", "133496", ",", "1334961"}], "}"}]], "Output",
 CellLabel->"Out[57]=",
 CellID->1801989,ExpressionUUID->"a0e890d2-e2e4-45b7-8955-1919e0d5d40d"]
}, Open  ]],

Cell["\<\
Now we can find the number of derangements for a set with many elements.\
\>", "TechNoteMathCaption",
 CellID->488934143,ExpressionUUID->"c0197bc7-b22a-4591-8806-d2948b2cd1af"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Subfactorial", "[", "100", "]"}]], "Input",
 CellLabel->"In[40]:=",
 CellID->52403940,ExpressionUUID->"e17a94e1-d5ba-43ff-8054-e203ab242bff"],

Cell[BoxData[\
"34332795984163804765195977526776142032365783805375784983543400282685180793327\
632432791396429850988990237345920155783984828001486412574060553756854137069878\
601"], "Output",
 CellLabel->"Out[40]=",
 CellID->27588445,ExpressionUUID->"95165ae1-57eb-42f5-bedf-eca142aa39fb"]
}, Open  ]],

Cell["We couldn't do this the other way.", "TechNoteMathCaption",
 CellID->733937479,ExpressionUUID->"9ccadf12-a266-49b6-9aee-845b7e61273c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MultisetPartialDerangements", "[", 
  RowBox[{"Range", "[", "100", "]"}], "]"}]], "Input",
 CellLabel->"In[41]:=",
 CellID->288697611,ExpressionUUID->"54d0bb40-af6b-4cdb-b2aa-c348c67aa9d7"],

Cell[BoxData[
 TemplateBox[{
  "Permutations", "fac", 
   "\"In \\!\\(\\*RowBox[{\\\"Permutations\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \
\\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"11\\\", \\\",\\\", \\\"12\\\", \\\",\\\", \\\"13\\\", \\\",\\\", \\\"14\\\
\", \\\",\\\", \\\"15\\\", \\\",\\\", \\\"16\\\", \\\",\\\", \\\"17\\\", \
\\\",\\\", \\\"18\\\", \\\",\\\", \\\"19\\\", \\\",\\\", \\\"20\\\", \
\\\",\\\", \\\"21\\\", \\\",\\\", \\\"22\\\", \\\",\\\", \\\"23\\\", \
\\\",\\\", \\\"24\\\", \\\",\\\", \\\"25\\\", \\\",\\\", \\\"26\\\", \
\\\",\\\", \\\"27\\\", \\\",\\\", \\\"28\\\", \\\",\\\", \\\"29\\\", \
\\\",\\\", \\\"30\\\", \\\",\\\", \\\"31\\\", \\\",\\\", \\\"32\\\", \
\\\",\\\", \\\"33\\\", \\\",\\\", \\\"34\\\", \\\",\\\", \\\"35\\\", \
\\\",\\\", \\\"36\\\", \\\",\\\", \\\"37\\\", \\\",\\\", \\\"38\\\", \
\\\",\\\", \\\"39\\\", \\\",\\\", \\\"40\\\", \\\",\\\", \\\"41\\\", \
\\\",\\\", \\\"42\\\", \\\",\\\", \\\"43\\\", \\\",\\\", \\\"44\\\", \
\\\",\\\", \\\"45\\\", \\\",\\\", \\\"46\\\", \\\",\\\", \\\"47\\\", \
\\\",\\\", \\\"48\\\", \\\",\\\", \\\"49\\\", \\\",\\\", \\\"50\\\", \
\\\",\\\", \\\"51\\\", \\\",\\\", \\\"52\\\", \\\",\\\", \\\"53\\\", \
\\\",\\\", \\\"54\\\", \\\",\\\", \\\"55\\\", \\\",\\\", \\\"56\\\", \
\\\",\\\", \\\"57\\\", \\\",\\\", \\\"58\\\", \\\",\\\", \\\"59\\\", \
\\\",\\\", \\\"60\\\", \\\",\\\", \\\"61\\\", \\\",\\\", \\\"62\\\", \
\\\",\\\", \\\"63\\\", \\\",\\\", \\\"64\\\", \\\",\\\", \\\"65\\\", \
\\\",\\\", \\\"66\\\", \\\",\\\", \\\"67\\\", \\\",\\\", \\\"68\\\", \
\\\",\\\", \\\"69\\\", \\\",\\\", \\\"70\\\", \\\",\\\", \\\"71\\\", \
\\\",\\\", \\\"72\\\", \\\",\\\", \\\"73\\\", \\\",\\\", \\\"74\\\", \
\\\",\\\", \\\"75\\\", \\\",\\\", \\\"76\\\", \\\",\\\", \\\"77\\\", \
\\\",\\\", \\\"78\\\", \\\",\\\", \\\"79\\\", \\\",\\\", \\\"80\\\", \
\\\",\\\", \\\"81\\\", \\\",\\\", \\\"82\\\", \\\",\\\", \\\"83\\\", \
\\\",\\\", \\\"84\\\", \\\",\\\", \\\"85\\\", \\\",\\\", \\\"86\\\", \
\\\",\\\", \\\"87\\\", \\\",\\\", \\\"88\\\", \\\",\\\", \\\"89\\\", \
\\\",\\\", \\\"90\\\", \\\",\\\", \\\"91\\\", \\\",\\\", \\\"92\\\", \
\\\",\\\", \\\"93\\\", \\\",\\\", \\\"94\\\", \\\",\\\", \\\"95\\\", \
\\\",\\\", \\\"96\\\", \\\",\\\", \\\"97\\\", \\\",\\\", \\\"98\\\", \
\\\",\\\", \\\"99\\\", \\\",\\\", \\\"100\\\"}], \\\"}\\\"}], \\\"]\\\"}]\\) \
there are at least \\!\\(\\*RowBox[{\\\"21\\\"}]\\) distinct elements in the \
input list, and the requested permutation lengths include one that is at \
least \\!\\(\\*RowBox[{\\\"21\\\"}]\\). The result cannot be computed because \
it has length at least \\!\\(\\*RowBox[{\\\"21\\\"}]\\) factorial, which is \
not a machine integer.\"", 2, 41, 2, 34168874147026512227, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->"During evaluation of In[41]:=",
 CellID->508655313,ExpressionUUID->"11a09ede-14fc-4636-9e98-5e6fed1a97cc"],

Cell[BoxData[
 TemplateBox[{
  "Permutations", "argt", 
   "\"\\!\\(\\*RowBox[{\\\"Permutations\\\"}]\\) called with \
\\!\\(\\*RowBox[{\\\"0\\\"}]\\) arguments; \\!\\(\\*RowBox[{\\\"1\\\"}]\\) or \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"", 2, 41, 3, 
   34168874147026512227, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->"During evaluation of In[41]:=",
 CellID->488314992,ExpressionUUID->"61c4ec33-d153-4976-bebc-da595f21c199"],

Cell[BoxData[
 TemplateBox[{
  "Permutations", "argt", 
   "\"\\!\\(\\*RowBox[{\\\"Permutations\\\"}]\\) called with \
\\!\\(\\*RowBox[{\\\"0\\\"}]\\) arguments; \\!\\(\\*RowBox[{\\\"1\\\"}]\\) or \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"", 2, 41, 4, 
   34168874147026512227, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->"During evaluation of In[41]:=",
 CellID->360908914,ExpressionUUID->"85f5b3b5-9d25-4a99-ac1d-3396cc94da12"],

Cell[BoxData[
 RowBox[{"Permutations", "[", "]"}]], "Output",
 CellLabel->"Out[41]=",
 CellID->45875794,ExpressionUUID->"f71ef3b5-9c62-4fbf-aa1e-49343805478f"]
}, Open  ]],

Cell["Euler calculated the first ten terms of the subfactorial.", \
"TechNoteMathCaption",
 CellID->101847644,ExpressionUUID->"7bf90a20-6188-43c2-9f73-517fb25295f5"],

Cell["Here are representations of the subfactorial.", "TechNoteMathCaption",
 CellID->211580469,ExpressionUUID->"41455be0-9584-4ae8-bd09-d4f8e2c1d502"],

Cell[TextData[Cell[BoxData[
 RowBox[{"!", 
  RowBox[{"n", "\[Congruent]", 
   RowBox[{
    RowBox[{"n", "!"}], 
    RowBox[{"(", 
     TemplateBox[{
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "k"], 
        RowBox[{"k", "!"}]], "k", "0", "n"},
      "InactiveSum",
      DisplayFunction->(RowBox[{
         UnderoverscriptBox[
          StyleBox["\[Sum]", "Inactive"], 
          RowBox[{#2, "=", #3}], #4], #}]& ),
      InterpretationFunction->(RowBox[{
         RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
         RowBox[{#, ",", 
           RowBox[{"{", 
             RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )], 
     ")"}]}]}]}]], "InlineFormula",
 FontFamily->
  "Source Sans Pro",ExpressionUUID->"fd667f98-a445-4f08-b375-6409a782bb5a"]], \
"TechNoteMathCaption",
 CellID->247846069,ExpressionUUID->"b74b0eb3-1bb3-407b-aad3-bb46ef060f2d"],

Cell[TextData[Cell[BoxData[
 RowBox[{"!", 
  RowBox[{"n", "\[Congruent]", 
   TemplateBox[{
     RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
        RowBox[{
          RowBox[{"-", "k"}], "+", "n"}]], " ", 
       RowBox[{"k", "!"}], 
       FormBox[
        RowBox[{"(", 
          GridBox[{{"n"}, {"k"}}], ")"}], TraditionalForm]}], "k", "0", "n"},
    "InactiveSum",
    DisplayFunction->(RowBox[{
       UnderoverscriptBox[
        StyleBox["\[Sum]", "Inactive"], 
        RowBox[{#2, "=", #3}], #4], #}]& ),
    InterpretationFunction->(RowBox[{
       RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
       RowBox[{#, ",", 
         RowBox[{"{", 
           RowBox[{#2, ",", #3, ",", #4}], "}"}]}], 
       "]"}]& )]}]}]], \
"Input",ExpressionUUID->"d82ba2f4-3841-469b-874c-e7136beec311"]], \
"TechNoteMathCaption",
 CellID->819467623,ExpressionUUID->"00526329-007b-4bb3-a489-ea2c3205e127"],

Cell["\<\
Here we use the incomplete gamma function for the subfactorial.\
\>", "TechNoteMathCaption",
 CellID->153350675,ExpressionUUID->"b3b33bd4-9e8b-4ddd-bc93-4657a2a0aff6"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    TemplateBox[{
      RowBox[{"n", "+", "1"}], 
      RowBox[{"-", "1"}]},
     "Gamma2"], "\[ExponentialE]"], ";"}], TraditionalForm]], "Input",
 CellLabel->"In[49]:=",
 CellID->151625861,ExpressionUUID->"9de6ac57-a921-4708-857f-728f1270ef0a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RecurrenceTable", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"subfactorial", "[", "1", "]"}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{"subfactorial", "[", "n", "]"}], "==", 
      RowBox[{
       RowBox[{"n", " ", "*", 
        RowBox[{"subfactorial", "[", 
         RowBox[{"n", "-", "1"}], "]"}]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "n"]}]}]}], "}"}], ",", "subfactorial", 
   ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[58]:=",
 CellID->41007170,ExpressionUUID->"0a9f7884-a030-4518-87cf-d605e5683169"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "2", ",", "9", ",", "44", ",", "265", ",", "1854", ",", 
   "14833", ",", "133496", ",", "1334961"}], "}"}]], "Output",
 CellLabel->"Out[58]=",
 CellID->123741561,ExpressionUUID->"a640971d-e134-4d77-99e5-aae5df8a9510"]
}, Open  ]],

Cell["We can solve for the representation of the subfactorial.", \
"TechNoteMathCaption",
 CellID->107675305,ExpressionUUID->"ccd09c2a-2724-4bd4-a34f-7bf89f1c8e44"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"subfactorial", "[", "1", "]"}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{"subfactorial", "[", "n", "]"}], "==", 
      RowBox[{
       RowBox[{"n", " ", "*", 
        RowBox[{"subfactorial", "[", 
         RowBox[{"n", "-", "1"}], "]"}]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "n"]}]}]}], "}"}], ",", "subfactorial", 
   ",", "n"}], "]"}]], "Input",
 CellLabel->"In[60]:=",
 CellID->295429183,ExpressionUUID->"6f22068e-e10b-4b67-a738-bbff8ceba994"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"subfactorial", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "n", "}"}], ",", 
      FractionBox[
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{"1", "+", "n"}], ",", 
         RowBox[{"-", "1"}]}], "]"}], "\[ExponentialE]"]}], "]"}]}], "}"}], 
  "}"}]], "Output",
 CellLabel->"Out[60]=",
 CellID->211184276,ExpressionUUID->"6e23889d-dc8a-4c39-9ac8-e923ebc7f2e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<BackupFile\>\"", "]"}], "[", 
  "]"}]], "Input",
 CellLabel->"In[63]:=",
 CellID->309536517,ExpressionUUID->"64f41a23-2d2e-494b-bd0f-1c8b5600ffc4"],

Cell[BoxData["\<\"C:\\\\Users\\\\pcb\\\\Documents\\\\GitHub\\\\combinatorics-\
paclet\\\\Paclets\\\\Combinatorics\\\\Documentation\\\\English\\\\Tutorials\\\
\\Combinatorics-0.nb\"\>"], "Output",
 CellLabel->"Out[63]=",
 CellID->378659440,ExpressionUUID->"ca6e255e-35e1-4094-b5b3-e8b85c132f14"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", 
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<BackupFile\>\"", "]"}], "[", "]"}], 
  "]"}]], "Input",
 CellLabel->"In[66]:=",
 CellID->45741824,ExpressionUUID->"2914dcb4-bec4-4137-a7a9-1ec9abf1cfe2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<BackupFile\>\"", "]"}], "[", 
  "]"}]], "Input",
 CellLabel->"In[64]:=",
 CellID->14451647,ExpressionUUID->"3b966260-56e3-475d-849c-28571063b6fd"],

Cell[BoxData["\<\"C:\\\\Users\\\\pcb\\\\Documents\\\\GitHub\\\\combinatorics-\
paclet\\\\Paclets\\\\Combinatorics\\\\Documentation\\\\English\\\\Tutorials\\\
\\Combinatorics-1.nb\"\>"], "Output",
 CellLabel->"Out[64]=",
 CellID->1000642904,ExpressionUUID->"03c25537-11c5-4ce1-851b-9c4e11f08809"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", "%", "]"}]], "Input",
 CellLabel->"In[65]:=",
 CellID->468290609,ExpressionUUID->"25292622-7e3c-4f2d-8678-79e050fc4ba8"],

Cell[TextData[{
 "For details, please visit ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["OEIS A000166"]], "https://oeis.org/A000166"},
   "WebLink",
   BaseStyle->{"TechNoteMathCaption"}]],ExpressionUUID->
  "9c05211c-b6f2-4143-8aae-114ce0e18333"],
 ", Subfactorial or rencontres numbers, or derangements: number of \
permutations of n elements with no fixed points."
}], "TechNoteMathCaption",
 CellID->136909599,ExpressionUUID->"5ff7c9db-cd91-48d6-b219-f2a740e0835a"],

Cell["\<\
There is a connection with rook polynomials and the subfactorial. The \
subfactorial can be considered a special case of a restricted rooks problem.\
\>", "TechNoteMathCaption",
 CellID->207794795,ExpressionUUID->"f039239a-0dd8-466a-86d7-0cf614539986"],

Cell[TextData[{
 "One equation we can use is based on the nearest integer function, \
implemented in the Wolfram Language as round with support for rounding to the \
nearest even number to prevent a bias when you round up at ",
 Cell[BoxData[
  FractionBox["1", "2"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "96e2df9b-16c0-4825-8a46-628c466a19b9"],
 ", or 0.5. The notation is ",
 Cell[BoxData[
  RowBox[{"[", "x", "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "a87e415a-38b7-40c1-b489-5aa38ac89837"],
 "."
}], "TechNoteMathCaption",
 CellID->93210004,ExpressionUUID->"66a8b6ba-4466-462e-8a7b-ea3a1ae5c37d"],

Cell[TextData[Cell[BoxData[
 RowBox[{
  RowBox[{"!", " ", "n"}], "=", 
  RowBox[{"[", 
   FractionBox[
    RowBox[{"n", "!"}], "\[ExponentialE]"], "]"}]}]], "InlineFormula",
 FontFamily->
  "Source Sans Pro",ExpressionUUID->"1e084523-5029-4185-b8ed-ee99953f69c4"]], \
"TechNoteMathCaption",
 CellID->597830687,ExpressionUUID->"eaf9795c-a061-4059-8646-8abe5b39a10f"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   RowBox[{"!", " ", "n"}], "=", 
   RowBox[{"[", 
    FractionBox[
     RowBox[{
      RowBox[{"n", "!"}], "+", "1"}], "\[ExponentialE]"], "]"}]}]], 
  "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "df37c5ef-bf3b-4aa8-9497-ceb9e1459214"],
 " for ",
 Cell[BoxData[
  RowBox[{"n", ">=", "1"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "64031464-86bc-4ff2-a616-65ce739bc8d6"],
 " and ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"!", "n"}], " ", "=", 
   RowBox[{
    RowBox[{"\[LeftFloor]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[ExponentialE]", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", "1"}]]}], ")"}], 
      RowBox[{"n", "!"}]}], "\[RightFloor]"}], "-", 
    RowBox[{"\[LeftFloor]", 
     RowBox[{"\[ExponentialE]", " ", 
      RowBox[{"n", "!"}]}], "\[RightFloor]"}]}]}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "f1306a61-e354-4e37-b22a-7a4fb6b61560"],
 " for ",
 Cell[BoxData[
  RowBox[{"n", "!=", "1"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "03ff3ebc-3958-46b6-a249-d86c2cd4cd06"],
 "."
}], "TechNoteMathCaption",
 CellID->267850361,ExpressionUUID->"f63b4d4d-4162-48b9-83c4-f953f4c27b56"],

Cell["Here is an integral form.", "TechNoteMathCaption",
 CellID->238909488,ExpressionUUID->"25cdf2bd-1629-4b75-9634-58187ae6f7ed"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "n"], 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"x", "+", "1"}], ")"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[70]:=",
 CellID->520558764,ExpressionUUID->"365de1bd-c2eb-485e-bb9a-40393ee11f1d"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"Subfactorial", "[", "n", "]"}], 
   RowBox[{
     RowBox[{"Re", "[", "n", "]"}], ">", 
     RowBox[{"-", "1"}]}]},
  "ConditionalExpression"]], "Output",
 CellLabel->"Out[70]=",
 CellID->350941219,ExpressionUUID->"d598d300-134f-412b-9ee0-294e8d150fd5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Refine", "[", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "n"], 
      RowBox[{"Exp", "[", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"x", "+", "1"}], ")"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "Infinity"}], "}"}]}], "]"}], ",", 
   RowBox[{
    RowBox[{"Re", "[", "n", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Input",
 CellLabel->"In[71]:=",
 CellID->8825156,ExpressionUUID->"8aed61c8-2918-4fab-8542-4975b9139ae3"],

Cell[BoxData[
 RowBox[{"Subfactorial", "[", "n", "]"}]], "Output",
 CellLabel->"Out[71]=",
 CellID->278680919,ExpressionUUID->"b9bcf6b0-5d10-449c-9701-bd0e7ddd806c"]
}, Open  ]],

Cell["Here is a continued fraction:", "TechNoteMathCaption",
 CellID->806936389,ExpressionUUID->"2a079b84-81a1-440d-9526-c687f401f30a"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"n", "!=", 
   RowBox[{
    FractionBox[
     RowBox[{"n", "!"}], "\[ExponentialE]"], "+", 
    FractionBox[
     RowBox[{"(", 
      RowBox[{"-", 
       SuperscriptBox["1", "n"]}], ")"}], 
     RowBox[{"n", "+", "2", "-", 
      FractionBox["1", 
       RowBox[{"n", "+", "3", "-", 
        FractionBox["2", 
         RowBox[{"n", "+", "4", "-", 
          FractionBox["3", 
           RowBox[{"n", "+", "5", "-", "\[Ellipsis]"}]]}]]}]]}]]}]}]], 
  "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "4829311e-6e3a-467b-b034-318f50f30de0"],
 "."
}], "TechNoteMathCaption",
 InitializationCell->True,
 CellID->25842481,ExpressionUUID->"ee1d79df-fd83-40fe-a0e9-a37b76b829cb"],

Cell["Let's look at the generating function.", "TechNoteMathCaption",
 CellID->14619546,ExpressionUUID->"cc806c81-096f-4880-8464-a1a13fb2ca56"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeneratingFunction", "[", 
  RowBox[{
   RowBox[{"Subfactorial", "[", "n", "]"}], ",", "n", ",", "x"}], 
  "]"}]], "Input",
 CellLabel->"In[61]:=",
 CellID->367209639,ExpressionUUID->"a09ecd2a-6bfe-485f-a751-332856466e8a"],

Cell[BoxData[
 RowBox[{"GeneratingFunction", "[", 
  RowBox[{
   RowBox[{"Subfactorial", "[", "n", "]"}], ",", "n", ",", "x"}], 
  "]"}]], "Output",
 CellLabel->"Out[61]=",
 CellID->19629526,ExpressionUUID->"381652f4-560f-48a8-8c8c-4ac02f02ea67"]
}, Open  ]],

Cell["Plot the sequence: ", "TechNoteMathCaption",
 CellID->339981277,ExpressionUUID->"70d08c46-0333-4fc0-9bcc-de185089f00d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Rasterize", "[", 
   RowBox[{"DiscretePlot", "[", 
    RowBox[{
     RowBox[{"Subfactorial", "[", "n", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "5"}], "}"}]}], "]"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "I", " ", "have", " ", "to", " ", "use", " ", "Rasterize", " ", "for", " ",
     "the", " ", "documentation", " ", "to", " ", 
    RowBox[{"work", "."}]}], "*)"}]}]], "Input",
 CellLabel->"In[39]:=",
 CellID->558391696,ExpressionUUID->"1daf6273-80c8-41be-ba20-de5fb5a366ad"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
9r1GO6ZX5Xweh3OiP776yvd/qVexGF9xody68/a1l169fO36k8/deO31N/Qq
Fr3iAvrL3/6Zd3u9ikWvuID0Kii94gLSq6D0igtIr4LSKy4gvQpq0F7dfevd
ay+9+ugz11Ovbt15e+f3z0C6By59bfKB06ugBu1V2tvzRJfUq++8+Oud3z8D
6R64dHn6hVf2vTq7p1dBDdqr9ALd9erS1es7v38G0j1w6dLkA6dXQVUbX5nf
Hkh/fPWN5xf7Xp3d06ugBu3Vzdv3vvXDX6UX6FSq3//x7zu/fwaSHrhv/+jD
B+7J52787g9v7nt1dk+vghr6/cF8/6lXb/7j30PcPwNJT+S8Y6Sn9r7XZff0
Kii9YiO9Ckqvyu9fr8LRq6D0qvz+9SocvQpKr8rvv+FetfqmZ+5V2rpWe5U2
reFe5a1rtVf355/r1Sk0P3Vfr4LSq53c/5a9OtVwZaAbb3PL/tSyq1tP3d/j
Cp/2xqft1Xl44La/8Wl7FeiBO0Ov9rvCp7qxXp3tlmebuh9ot9eroddhoLvV
q1P9UYC9KC9Yq+evbt6+9/QLL6eR1TefX/zpr3f3vTq75/3BoLw/WG4n6QOo
QK+AKPQKiEKvgCj0CohCr4Ao2u7VaDSaz+f7XotdWi6Xo57Foql/YjQ9WN2m
TafTfa/OUNKmpQ3c91rs0mw2Gz0oLRniDzXcq/F43FivUp36e0J+djezgXlz
ugKn65PJZL+rNIT8IDbWq/RI1Xl92eEE1POj2yVaejof3n9dThHuL0n7ycqS
uNKG9Pf5nK80ntzjKg2h2zP3vSK7NNyAakVjpTr86Igp7fm5Wi31at16wZrR
ZK/S45WHIi31Kj/jGjs1Ud9F6FWKVZMHTd2Lzr5XZJe6AjfWq7xd+fRLk6dV
62i+V/kkZ2Mb2H9DYd/rsmPdg9VYr/LmdI1qcresoO1e5Re1xkYgfXm3b+aV
enJfvt5Yr9a1dFq1moZ7lZ/LDccqa+ZoN7+4dN8236vmN3AIrfYq7wx13o7Z
r2Z6lbZitEmrD6JenUGTvWo4Vuvb1eoYsrGnc/9QN2vmhaam9nqVDyuajNXh
2gmr/H7TfldpII31amW3zFvX2ESUCtrrVf8t475m9o3+53EaPmHbWK8OH5yh
3dimAQAAAHAR/B+MK0Uu
    "], {{0, 150.}, {240., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{240., 150.},
  PlotRange->{{0, 240.}, {0, 150.}}]], "Output",
 CellLabel->"Out[39]=",
 CellID->716575968,ExpressionUUID->"1c11c862-d9de-45e9-a44e-e382be1d1717"]
}, Open  ]],

Cell["Plot over a subset of the complexes:", "TechNoteMathCaption",
 CellID->214227103,ExpressionUUID->"32c713da-0ccb-450d-a84b-c5d8cb4fecc5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexPlot3D", "[", 
  RowBox[{
   RowBox[{"Subfactorial", "[", 
    RowBox[{"z", "^", "2"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{
      RowBox[{"-", "2"}], "-", 
      RowBox[{"2", "I"}]}], ",", 
     RowBox[{"2", "+", 
      RowBox[{"2", "I"}]}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellLabel->"In[73]:=",
 CellID->618289619,ExpressionUUID->"e5bbad70-1297-4dee-ac1f-6cc82320250d"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3QdcVNe+wPu8m3siTcWoqPTeOzP0XqT3qvSmgoBUKSK9SC9SVEB6B5Gi
YkGU3pFiAxULKmoSk9yTe+69ee+Tt2ZvmBA0OWoGQf3/PvvjBwcCI4T5zpq1
9tocLofM9v3HV199FUCF/jBzDlbz93cONadHf7H0CfDY7+PupusT6L7f3V/W
5Wt046X/56uv7NDHk97+DYIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCFrHvX79uri4WFVVVVxc
3MTExNfXd25ubq3vFARBEAR97BCIyMGvvvoKgejk5IRkRG/T09OPj4+v9V2D
IAiCoI9aZGQkQhCNDRGO+C2dnZ3oFnZ29rW9YxAEQRD0kcMHiWQQl98Ir6BC
EARBX1RNTU0ZGRkrbsRNhJdPIQiCoC88NGakx1oxeIQgCIKgLy0nJyc0SIyM
jFzrOwJBEARBaxkOoomJCQwSIQiCoC82hCAOoqqqKoAIQRAEfbGRz1JcflIG
BEEQBH1pzc3NsbOzwxwiBEEQ9IWHRoXi4uL09PTFxcVrfV8gCIIgaC3D5xDx
PU5XtNZ3DYIgCII+XmiQ+NWf19nZudZ3EIIgCII+Umgw6PvnwT42EARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEAS9Vz///PPAwAD6
c63vCARBEAStZZWVlfuWhf46NTX166+/rvX9giAIgqCPF4IvKioqNTU1ICAA
jRMXFhbQn+ivOI7oxubmZuTjWt9NCIJWt/J3a63vJgStYj///HMAFnobOdjR
0bH8vchHdAvZR0Qn+iu6cY3uLARBq9X4+Pi+dyg+Pn6t7ykErVZoPIiPBBF2
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
WxsbG0u+rCH/f0pa7ApyFyr20xg/aHbb2fGO1cE7hiE3dY+Nqp/oka5qlzxb
K9WWg5noodxpoXdNeW8XT2DP5hN9tOd7aYaRia3b58tYFtJ5nx0We2Qje09V
BzPRZ5QluYup5hzntVLCRJLqg2DTpx7IxKPzu3NGPw8Tlwc7y30eiWepaI3t
pdQBJkKrkYmJyZsmonEcuhFx+WGfEz2CvXVP79+wBa7oMzs4OHR0dKBh1CfK
IllANAxEApIv0oSS/A9GVyr1iI2ux7aEFzNXF/BeyJbsi5cfO6x1EzfRGjcx
cUzjRK9M1UXJJmRirkR7lNQVT+VOS71rKnu6+AJ66PP6aM/1US+aWM6ykMH7
PFjs8R7Ze2radyX34iZ2M1Wf57hWJjWRrPogxPSpp9tz8/D53cfH0N1A3+cP
+9mt/2BnuU83MBFa/1HcRHwCEfXW5/Di4uL8X/Pxfy3w1R9DSiJcsrCKioqQ
NejzIHTQPUF0frSXWL/HerYUfsImug/ozuADQPKcoCzr1+hP6a3/8ORiSOLl
O8Ej3cpr1MHpdI3J98quqAu7spoZy2rZmkv4O45L9iXIjwVr3vQyve3icMfa
845R8C2Sifm9spXIxDqptjyJ9mipKweVOq10r6nadPH793yb20fb1kc9dH3j
3bbt85XMC5k8z0PFHtvK3FffjUy8xeM9xpLUzVR1gb2zXGoiBZlo8vSg64LF
kXnd/GmKvO79SQSXRf60ksxS1B6zotQBJkKrEf7a6Yql+7iJvr6+7/vZ8AlE
9DQePUC9dd6Hnp7ebJNZwPaggyzRxiwB6pyBCkKHJcX9+IkH2eVcdsgab5FR
36SotEGYm8wl+XVIjaUQoMgmMqPI0FosJCn6c/lf8Tqw8BvRe9F/Erss/6XI
X+itCYl85Wj9dajbhiyvTZW+Wzv8WQc8+UbsRAf1pPqVFHuldHqELLu4XHAT
23dltTCW1rGeLeXvyJHoTZQfC9Gcxky8a+N51xiZmDCukdcnW3lJsqleqi1f
oj0GM9Fa95qaTZeAX+/W4/20rf0kE++c2z5fxbyQxbMQJvbEXua+JjJxD2bi
sR6myna2zgqJG6kq90ONSSZahj3Vzbv55Zi4PNhZbv0nlSWvO2ZGqQNMhFYj
fInpChPxNTbvZSI+gYjCH4XQg9JbX85C40SDjYaBmImO3Enmwpn60tkaajkK
escJVlliLsmC3jE8QcFcRzw4IvdwRejwhcsKBXKL+X+r4EFl6PmfVu5fu7l9
fdDxH357qA8Z0nqo0lkJ0Vlyblakp9HZvFWHdqc2Fevub7hlvuaU/pqf8LWY
xH8S2L7mZfpPgZ3/EOLYrMq7y4ST1VREyo+LsJ9DwZ1Nw5nVdN9OG+cddnuZ
9lkzHTJhjjTkTNQSSVOUzhCVT2HWPU7vXEAXVkaVXbOhpoH6XDXd1dPf9uXu
GElhGo/kGDskMGK/aGIfQadH2LKb2+Ua86ErjJHtuzJbdpXWIxP5ruQiE+XG
QjWmvU3uuNrftfEgmaiXMK6Z1y9XcVmyqQEzMVbqipdip43uNXXrLkHf3m3Z
/bQt/dSDJBO3kUzM5lk4IvrEQeaBltZdqT23eL3GWBN7mCousl6tEh9PQyYa
PfNyWbAKe6qXe4uZRfgLNJEcvjgHFq+uw4hZMgZjRpQ6YL9TaDXCJ/hWPIS+
dTHqX/TmRYH/7PEHmbibTidwe6AXc5QTd5IFbqIqZqJllviiiSFcRzw5Ivdy
xegLxilJxgvLJ+40StrklkwdkrIhKXlDThxtYTh9mf/2qv2MlTbs5Tq8pXLC
xcKE07wqhWx6p3ZZ5293O74tIGNbzLFd6VHsJw7zF3uJVbnINOxVbTLXO6tn
3qxh36xyoFEhsIYQVSqUekowO104L0rgpB9vkbNgiTmxdLdKuYxWJZd5zTbP
uk3RDTS5jVSLJhZ/25e3YzQVN5F/xEF0UF+qXxmZqN0rbNHN7Xyd+VAHZmLr
rhJkYhkyUbz32DIT93jcNTl8Wy/+hmZuv3zFFakzjVJtJzATvRU79+hc17Dq
EjrUy5DZT9cyQD3YtfHO+W3z1UwLx7kXjorOO0k/2K05I2WDTBxnTehlKr/M
crVabCxd5X4YMtF5wTr0qV7ObSZW4b+zPupzamFhAS6LvH6irIkwToRWI/wM
fVVV1eU3or/S09O/4z7S6BHmrRcFfmvoMyvTqgctmngMmWggna1JMjGHZKJz
ipBXLGbiQc5IW64YgyUTdxkmbXJNpg5GJqZ8cxw3MWB71QHGyj3s5bq8pfLC
xSJSyMQikolWmIn+Gduij+1EJuYH4yZKL5qov2SiImaicAoyMUM4L1rwpD9v
kYtAiQUyURmZWMW93MTqBqpzNbiJDKNpTDeiOMZ9+UccRYcMpAaUFUgmipBN
jLi4KwOZ2MDaVM53JU+8N0luLExj2sf4jpvdkolxE5o5A/LlHYQzZ6TaTkq0
x0ld8VHs3KtzXdOyS9i7d0dGP13zANUAMvHCtic1TC9yuV9EiD51kZ7T1pgh
WN/mPTjOGt/HVHaFuaNWdCxD+V6Y4TNv5wWbkKf6x+/wiaqBiW/2Z4tX1/p+
fUHJZEkZjelS6gAToVUKn1LEH0XxvWXe/UQMfAbn3R9YFk3cFuDNHOXMdcxS
KNOAmK2pkqOom0OwyMZN5A0K5TrixRlph5moLBkvIpfIaJC0GZl4OGXDMWRi
PG3h0WUm6pFNVMZNPLHdLQczMWlnWjQyka/YW7TKVbrBVqXJXJds4hnFwFpi
VJlwSgFmYgxmoivJxDJt5XJZrSoes5rtHnWbohpocpCJjVRtNXQdJVv68jET
oznG/fhHkYmGmIlEZKJ5N4/zdRafq5iJbbuKG1iaynkv54v3JsuOHVFfNHHv
gRnToNv6cRNaOYMK5VcJZ5qk2k5JtsdLXTmk0GmrfV3LvEvEq3dnWj9d0yBV
fzfdbWRiLdOLPK4XkSJPXYlzOuozRKvbfAdvsMb1M5VeYb5SLzyaqXzviMEz
b6eFvcHP9LPvSskYfcBc8BfVmzvLof+TYXHOaiebJW4yrkWpA0yEVi9E1fL1
JIjFfztI/PXXX/GHFPR48u5fyMTERIlW/TAykSnSBTPRkJit9QcT43gDl0yM
NhSIU5GIF5VLZEImuvzRxNLAbVUeuyr3YiYqCC2ayK5bQDLRFZmYiZvIlh+y
aGI9MtECmWjWrGmHmRhQS4wsE0kpEMrKJJl4KgCZyF9iSUAmViATeU1rth+o
2xSJTDxDVbXcxHTGG9Hs4/58o04iQ0ZSAyry/cTdyMQeHqcukolHL+1KRyY2
sjRV8F4+IUYyMVx9+pDRHXdb3MQ7+rGTWseRiZ3ExrNSbYWS7QlSV3wVOu20
r+826xb17N2V2k93ZpC6D5nYvvVJLeOLfK6X0SLP3IkPddRnpS1v83liJpZ0
MF9uEBrJwkz0cVqwPfzMIGtGUs7kg8+j+QKDneU+WvJZImbjqpQ6wERoVWtq
akJjw4yMjHfZPpo8gYiPE9/9q6DHamkaxcPb/H0wE62QiQTMRJ0cokW2hFOq
8EFkYhjXEW/OCHuuaCPMRDG5RGb9JHrnZOqglA2JKd9kx9MURiyZaMtWoc+D
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
/IGIxwx75CRzQQ/bxTaBidMKc3GGLw+5/OAU/INl2nPtkluwlc2XEH7mFHqW
i5u4zjeF882lKp6mpdQRHBw8+Sf9xX14cxLwrdOChYWFK8aS5Mgg5uTkUOTb
Ar1Lr1+/psdCD2tOTk5/00R8AnE9vK6C/hWkc/Y32YcgExl/N1ELmaiPTMyR
dE1HJnKRTPTmjrHniTcURCYeE1FJYjFN2bwvjSo845tUzMQSZGLQ9toDTDV7
OKt0+CpkhMtEpZdM3IuZGIxMTNmZE7PCRMPzBtbIxItLJlaIZhRiJsYJFQcK
lrmJLJooq1vHZdWwxecMXUIzTQEysZn6csPG7vJvR06RTLwZwzmNmThuSBhV
VRqW1h0StRrgQSb6IROvMh5vZ6xsZm0jmSg+lCE/Fakx62/8wNP+oaPHI4vD
c0bxd3VzbyiTTLxIaK8kdGRKdoURe9139xubD0i6DG45NrKxfoxmcJxqpmfz
s/M7fyxn/ylJ6LuDMs/0VR/Lm82J7p/liJhiPtnH1n6e/0aJ/IMEgxf+zj84
B722TnmhX/5gB6cEmPjZR/69Rk96P/5UyPsWmEtVOU1LqePDxon4YtHl47v6
+np0CxoYLv8wpN5byUMjRwBxTUImqqqq4g76+vr+HRPxRdrr5MTeZSYG+TLG
uHEl7RHONEYmquYr6p+QscZM9EngCj3KTTYxUVnqmKhKEqtJymZ33MQ0ZCJd
SeTvJlavMHEHMvHAook7fjfRFZmovtzEVsXQBszEIuH8bLKJwhWWMlXauImW
DVu8z9DFL5l4qYEOmTiMTMxkvhnLOR0gMOksNm5EMnFEWgeZOMjj2s/s280Y
fZUxu52xAplYw3O9SHwoU34qSn02AJlo99DpwCPLoIdGcTO6uRMqFX2ElkuE
9mpiR7ZkVzihb79Wv4n5IMF5aGv8yKa6MZr+caq7vZufXdj5YwX7TylC33tL
PzdUeaJgOie27x5n+DRL/gDr+Qv8N8pkHxzTfxHo+Nol8EebpJcGpQ9Z5fRg
e7fPu8rKSvIrP/i607W9P/+24NwNddM0lDo+zERk2YoXRfGlMmi0SL4FjQTf
VPK3Zeckwkuma9vfMZF8vW+K36sPCzcxcMlEd2SiUKYxMWf3kolSv5vowx3j
wB1vhJkopkwykR6ZeAQ38Rhm4uHttR5MtXs5q3X5KmSFy5GJfGolrIbFO/YU
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
Or3dA97vWVKLoc7EOWzQwmNIrWUYcZ96eSulYgx0NmCNRDbjYMaH+TTA4oD5
AIJeK5DxaoLFLMTY1cLY3wx+VBCMUuqSmLquJONjTEbiTYU4YxVVUcGoLjOq
K1bAkSjH/uBWfT5E+nSo7LG5HOvHRxbvCSJb7tqAisQIw6C8xQKcYTl5na0g
JtaVisWBhe+5ThZ+zA3CPiw/b9uCC/Gudct9qxb8Ox8Nb8J/4qmZ7PlgCYYy
5mC+Cf9tb5CEpcY1FUaVVVQJQWFeA/UU04QPE6ivSqjzckY21v4tjL3QvsB4
PdCwn5KGFhPBec5JAoezezDk0gS6wIeZZgcHzwobGJiC6ZNtCnuSu8bQse1N
F/jv1Bq+F+g2irVLZJoKIEr0Z76ywYd68m3vKL4b3gW58sZYc2dZ1Gfa1uxl
VZ5jlT60K3jr8qzeO0cecha6+iRsRKOWomkzYB5HZgzK8oNEWSx+nw6WlvSo
r2W8wsK2mXEQ/lmDZkHCj3so/JensCHxGDP6bg/0pjN+JQ0CvSdS7YP4BYg6
JgjMgvghro1TmJWZ3dLjftNr+gPUJKrbJsPo/C5LvtZqZeI3M7w9o8uCxhP7
3i/n9zXVqAt8PuIbnn6ucRnKyqh9YSmPXSZJu82XdVgna7tXrp8t173epJPb
pJXfpFnZrMFrbiOTa7SIdaBuva49qlITjC9JEuZDEl+71RMuUxf7oDP90AlV
nNEceLHeEmXaKLA4C1ODSMUU4mAMckG+HkoxFQ3UsB0NPXDMZpL2NRnIiM6x
OSWkbmIiVBqXFZhwsR7Bl+tjbjBNLzMe3FyT5kLVecwuaErmc6vJ4QXPrqCY
U/qIVXmRWX3Qqm7TsMZFGIjuvFH+AES/WL5dkmBImrDHLFHHVeJ2OyUGJ4jX
NFemXSDXrJZrCGUazWItxMUi0RBV/gR+OXCcdgNVcs8I3ewB6vi0KTiNVUyE
ngYsCJvid5fsCBUZKuLDu4sCqYihzxwNHlSLyTAOcsgcNIBWiytQj9WkbnEr
Yuz8wNgHghHyUU/h/QBxpV4XKDVjI/UMbw9qqTe0bKThWM7AyrG+uGfj2968
gj58rKZf9xfmDcCIxBJS8twMKPnEXP54GF5NhJXNDwku8cIqD2NOuehv4X78
AKz+MPtyhzXhJz4ZKntmJn00kJs7gPtqgOi1qRD/lYI+PKwHi3sAB8sZVZVU
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
3RZm9RF25SVW2UNmcYF93ju3XKH/jWYowTiIYrfA4GDacQq9a2LRtkB02B3a
pN8jwcQy4+o6im5fcxQZb0amJMGGkwQ9l6Ld4LDMtIJd2ZU+cNgU/YwaDBrE
2k+l2hMmtfnSa/pjbL//Hcs0nJLb+cjXWq1MpI1G3pcbLZV5e3vjB6g3D8TE
VBeS+Ln422PHjqkeQAflo6Oj1X8P7c34yq/+G9qXQEzmnJg7VjZjJhq/CKVk
wIDdmH0oUiEVm1yeiNhv6plFMHcepGLVeVbNEdu67VZYKjYu5PCmuX2Uij6x
AnssFVOFPSaIOs0XG66RtN0lha4vl6S6d0iQrkimWS1vw6cbv9B17orSjE4Y
N0VXmae2KjoArJ0TeXmTj/D8kE86v9FDNOhW4eutILy4iiTeLCazFzFl5ioX
FoZYiGEaYm5ieq63hFFBe82g8hHLN/w7sVTEIMP6Dqs8TEasGfM7Q8IPpl6R
cuHbhb/AncBBWhWSOotnpAkPfq6ChkTVXiddzbE8xMzNJtr2MOngumuoAoj0
PCx66gctEmeQYOIEFRMdFToRM9EfMxGyT2UeHhfNLdO7GdEozMrKag0X/vuG
P6jIyEgzfdeITuPiDVNT9WPMtKwCAgIS58XE1dtH8L2C+JGevBEOvHRW4wKr
+jW2NbvYVSfZ5TdYpU85hcUOL+s9oATjQ8RJFE0cp6NJWeLcyWj5CJiVvN0X
HXWD4Y8Phje/6Scs71neQCkTbHptgknQwyfBaGPvIBTjCkzEB8ChwXCcPOkO
W6z6tvUinV8vtvlnXtOioqLvc5n4tpZhOO1R52Nfa7UykTaMts+I9pnRGlD9
HlpaYlbS33bv3l1dNqqe9eWdf95uEnQjUxqItFIeZXliRaxsyVg0eyoMnR+1
HCWuh/FJUUdgpGDA9RaPhxJOHtemCEvF1+zyB5zKK+zqk7a1e6zqN1g2LrPl
znbiTYRRSlgq8rFUdE2ATmim40TdZog6LBe3U0hFqe5NaJcNCZxKqdiG1DLo
01Lxk2SbF92KzrJObVDAccf8sJyNXsKjw8AP+atSLW4nySobLEEwYuW1ygbE
F4bjUuVaRu7BxMRXIQyjLcOh1BETCv8GDCys4672ApBhnD1gQBwQ79ux6Hve
HdTfS3oRvyj+FkMQ309z8DEJGtJuUvzcHCJmaW14kdAQS9rj5HUeJEk1O80/
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
jaJ1o7HhKietFQGq9QnqNbkaS2eoL6zQmbncpGi11eT1NgltdqFb3Hw2+zpv
CrbZGGXcwtJZnalaV6BQWSa9YMb46XMkCuZLpC6SiF4yPmCplHuFnF2FokWl
mkGljmaViXI1g1bjIV8TNKkmakIlU2Jxqti8TOEZeQJTisbmloxJLhkTUTzW
u4iPUSBomj9eL09eM1dDOcdAPttCNtPOIs3fJyk6ngljjuOZTN/4VJuILE3f
Qm23EiXjRGkF17/fAaCjA+p146Tl8pXlCzATLaUxE9Ojg5ISYnIjZDNjBFIS
xyYkfx+SPMY96QdrlqAeU1ydOUkpUUUhQU8m3gKYGO01KTJYLiSa6s9U9khV
c8jUss7WN8kBJqrl2NGyXOXSRpgYESfixxRxwd/xQpI+mmODFlnB7NF6M9Ro
jJoNUJsu2q6FdmPZqIKOKaEOGjqjgM7Lo0uy6OokdJOyZQrts1lT/Br/ljX9
IsvTtXVyEudLRUFBwaW/XX/07/enWlu3biVf6aQNOP7k0+Gh5CJVIfn5h6Mu
0AhJ1YviTc6stn9Z595TGsiJjOeZ5vWNXz0g3jkk9Jgn+u6lJGQpf6LCZgd+
qc6io2RX2KGzSwTxpbPwvcqaQdruHupPj5TuYyB2Wr7b7UgoxEjQPuWF0IeY
VI3i14KXqd+xt86XeI437tvdu0B/dMDmWSv9ZbVjz3Q3TmYgJyqa65HCM8zp
lVpADLk4BPlSwSeDgn1kOc2jidBtcUkBZgEfUEdb9cDHu9oCZjzl2UFlabgn
2He7hIO5nE06MssHLxqoKcXasP49rek1ddMg9cc+6iEyTfqCev2p4r0Hyk/v
KrFvaPIu6w9cMIEEKYnC/Q6QhGx3A9nVSujBRj8QZfUhINMwjEgNCOovBYCF
yYURhlmGkYcxN70A9k+nFqHyElSGoxRNmQK+PaVlYGc3GsVEDP+zDL6KD5tS
CoHPKi+GK+DrzMgfJia+/lyCksOITCKEJMnHKPjB6kJhXzJcp45m6kafvt8t
40RQ5OkYn9NpjI4y44NLVbavkGlplqrZPHHqDqnkXbTwvZoe+42sD9kbHgvT
OpmhdGKazMElE36sF9vUJLB8Pd/0Zr6UdYKBTZJOq5WtGk0NVzprNgSp1iWq
V+dpLJmlvqBSd3qDSeEaq/T1NnFt9iGb3b03+zm2hVhtiDZan6S1KlOltlB+
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
S8Oku/fIDy9Qnu6hvFxBHlnkwS0I4zGZfL+MMctigdLiCYXdUzJfTUs9np47
LsCAVwoopeeaFvhaDxwXVuKvsUN9aaooKLM0zg+ERaClQ2oamutkW4Wm/Rot
fqc/8Aa3dRJ7ANJwBHvpBfb2Q8PHt41Hf7CY+MbhzVniu2M0lDwDhSGKkYaj
SorFCegDt6QLUViEVgkr5oOiWpT2md0C0joQBzl9Qg6uRmFMKNOgDITCLW5I
SMDDAAIr4uSPYaffhpx9HXx+KuCrSf9vJvy+Hfe5JPC+zPe6zPO6wnX7gUu9
Oup+dQQ67foI7dqw27VX0CnXhtHzq8PuV+HjKHT3H0Y9r3C9vuN5Xx7zvjTm
e1Hg/8144FcTiJhCVoZ/8Sbi5NuoYz/BUyM5uQ/hWMRHhoiPa9D3ECQeIRy7
QWA2KrJzbdjrXnosIO00nX4uyedsoevxOouhxbitqzSWb1Sp36GSu0ebuc8o
9ICl2yGq3bFw85MphqfKdI4tUt3XLb9lhVT/mjkL187JXi1BH5BzX6Ht0m9v
3eeB7w0z7GEZd+bhW+cbNbZaVPfYFy53SVlNjF5LC17n47MuiDYY4bouznpV
kklvpl5bgVZjmXJtpXx5jXzOQnlOvXxMg2Jwo6pXkxa5CevUZGDVbGLcbKvf
QsS2emq3Bau30pWbGfJ1STLz0zDzsiWK88RzCsU4hWIxBbMD88WpeRL2ubIW
OeomWfoGmea6GfZa6QSNVHfNZH+tpAhNVrwWg60Tm6YfnoUPzDXxLjSjlVgS
Su0cS51tSolmJRTDYk9cgb92Tqh6Bl0pJV6WnSgdl4Q6yfinSbunO/ik+YUm
s4XKkc3OJrsW2GoUESETFRETw6SzoyXTGXPYrNkxSWJBSWI0trg9S9I8UcmQ
qaPLwKszrBET4yETg9TodM2wBCxkokeaESnLzDHHxhoyMZugn+2mk+GrnhKi
lBgpFxOHCWNgfFgYpBO/UC18h+sARs3AtA5Yzge2FcChGDjnAdcsQEoDlCRA
Y07Tor3kZGaipp/TaGEbE4p5n8pnmPjvYpB9oibhItkoKtYQJeF8NL7K5XLf
p+LYGLCZnrsqcvjFdSCtGzDXgZghEHZmyue7F+R7N8mPTpOfbaO96nVDFYhZ
UaipuHshmnChuGpS9ug0SqcZmZ77Ix/zX+ThfjM09LDXCdSRULCU6Y2yDnxj
0Wgn1zxgXwksGoBhN9Bb9Qa35T0Nn+NuP8I9v2Uy+r3NxNdOKEx6xB2tGCJh
GIqSSHvjQCcb9ZBpyPkFhdUoTSW3EWS2ocxPCJSk5SBxtXA1cAuCTvxeFM+E
JIo8/lP4qbcQT8EXpgK+noDYguxz/54HqUe79op24yX51gvqzSfUW48otx4S
7zwk37lHunsXOvnuHcrd25S7t0j3kJPv3YLPyXdvk+7dQS/duQv3JN59QLwD
3/iIevMx+eZT4q0X5BsvIT09fhj2/B6yku9zacwPUXIy+NwUQuSpt1HHf4o+
8g4COnZIGGXdhtTrz3BcAbxyDytaEQn1Qx5FxwNTIBPPcrzPFLkcqzffuxi3
ZUB92SaVhTtUs/foMPYZBR+wohxyszkWaXYizeBkufbRBpW93XKbVkgtXSte
s2ZO5mqJyFXytOU45z4ny6VehkvCjbrZxh0F+JYa4/pWy3lLHPL6XZIGiJFr
3ALW+HqtDaasjXReE2e5gmO8OBPXUqCxqFRpfqV8yXz5rFp5Vr08fZFiYIOq
Z6MWqRHr0Ghg2WSKb7bVaybpNntpNQerNdIV6xPkatjS81KlSjLn5ufOTs8T
Y+aJhefO9skRJ2ZL2GbLmWdpGGca6GeY66Tba6YRNVLcNTkBmuwIzcQ4rXi2
bnSqfmimkX+OiWeBGaXI0qXEzr7YyaqYYIpmF3pi8/21s0PU0qIUk+NkWEzp
2CTpsGRp31RpWrqca4aiXaaaRWpMbEp8fI6xVp6tegFBpchTsSBALi9MOita
Mi1hDos1O5otFsgWo7DF7VgSZomKBkwdHQZejWGtluCqHuehFvMLE/0hE1ON
iFlmDjk2VtmOJpCJWTTtdF91TogSM1IuOhYTmoDxTsSQpf8mc1xlwWvc6rd6
fT/qd70zbAHG9cB8AbCuBLZlwKEIOOUBl6xBC9ePRk1FfRo/rLGasU9llPCN
saW8T+UzTPz3MnhPiW4uUSrO70lg+1A2OiYs9V90kX4QhJwf9/n+CeX+D+TH
x8jPN7i96vIarQzipcTwQ9MFpMpxfPuEwpZJmXPTKJ1mbEIKNS99pCKUhzhw
wgg1U13lAFoIoJwK0rxBtHDWoTsbtRm3L0cDf026gP7Kt7jNU9j9Qhpefo67
8wD/9KYp7zvryS+dfxSFSXf5oUL7gTCwLAbFSNuSUZ1CXSFCYfkvKMxqB6nd
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
rdvRHxo8y77JqOMOEhrF77mq88MAxmLxBrvD2eq6IRNBO76q8Z8n7OCINIu/
ILpU0OGp1PyZtH3x/Q4l+RbFeRYluZ1e5JmX5VrI7nZ+cddClttJ/nZu59Jc
i9L8jqX3zEvvdXx+37yooH3hQ5Oih2ZPH7V7+MSs4Jnx/ULjvCLjv1iYlsgT
86pMHpdny7mTb7lMVmbKU1JeVCZXmm6vMtsiX5JtxyrWNWSxgrqEy09Q9p5X
XT8GkMMUcvKVF4/DRpPYrfrk40Dy48PRgRbb0oq+tK43xfSgRCvabpG9ss3f
vjWzDI+3m53i5HPMXZzubXskqMvepVzSum9XxjafG9/CK17kHNepW0w/U4mX
xb1T6wlp+O/04RQeVk31h/5n4rm6Ufvzgv6rS+O/EqlUqrgUx9V8RlTnY6f6
vjvXr+qsLZ21ozN2dJrd7OkMf6u+h91/nt36VV20qbrU99Nl68o/+ny41rMi
p8f7G93f3ez25rbVqzudX+aZy+63k0k7FBV0ePLI7MFTTlrI5T3nbpdw11kp
Wsadf8WdfC2vJX+r4FLkVaTx9k+shDTZSO2j5KcjLSOoaxj1DKE+s6lfINlP
pQG+NMiDhv5ArmIaNYTGsXDsTz850Cw7WtCPwq1pVa+dHq2ad+rdfcUOu1mp
zhPSfxh21Nf6cHDn5GVtNq9rER7bPDDun6PijB1iLC2yN4bQywda+KE0Ojpv
BuRPAahrWBU0kPmSqL5Hr6rrpvZMzMvLm1wHoaGh6n1e0AKxWBwUFKSWh2Jl
I/tLu6aykeWm6h/hwg4Ojz6bV9pl7xpBu8W0R0zJI+S33a6015X2jaC9w2nf
MDo4jFKHUdoQOjSYjgyi9EH0uzMdd6J/9adTDvLcvGBTJY/L3h9yer7/s/vr
21ZlrNK81760wPT5Q7PHj83uPzO9+5y7WSpfd71Yxp0ql+fjkffcgQrjXR+N
JZ+MN1e1iybzddWLq0uoRwj1DiabALKfTP19yHk8DR1Frq7k7kJjncjbgabY
UZCNf0ejlpOm9F660z4wzWXsb2MGH/HvnTq3446I7zeub744prlfTCuXhF52
5af1d68/3eIHCuswE9nfdSwQsWqqP9qFr++VcUVdN7VnYnFxMV8GstRjv7rC
wlB4T3Z2tnqfFzSNFWssjFgsqvExlRr/+bKRv3Shlhc9RdnIeA9OWzmhbMNE
ivKjDX4U40+xfhTrQ7ETaKMnxXtRogcljqWk0bT1B9r+A+10p2QWoyNoP0vM
IXTEhY45U6YTZTnKi80LtiwlP17r+f5G17e3LcvvWrzI71Qk7fD4kan0GZdX
xN0s4a6+4M6XibLKufQ3XOo7bk8Ft+2jcUJlu5hP5uuqLH6u6rKYus+n3rPI
ZhrZTvrkMKHSaczHwSM/DB9W4T7okZsNO2bTeUv7hibbT0ob4Zo6zu7g1K7J
ISbxES1Xrfm735qWLntdPejhX2r8JjcxfCbqsEaLr6arZwdVJsvXdTt+SV03
zZ1PZL+3ERERwnsCAgJQHjZGMplMcdGLejNRQdj4X8cTjsIOjgEjN0/yz168
gMJCaMl8Cp9Ly+bQ8mCKmEUrgmhVIK2eRmt+pPVTKGqSPDc3+tAmT9rMsnIM
bfuBdo2kPa7VKekirygzBsprydPyQrLySp+KnB5vb3Ytu9O5NN+8qMD0ySNO
+pS7U8TllHCXZKJTZaKMci7tDbfnHbftvXF8hVl0hfmaDxbLP3RZVNFt7vue
M971mfrWxve13fhXDqNSu/T675amlss39Z2322nMfjfnfV69kgM6blnYOmrZ
339a9q1Lyvif6HVTGXOoGRodKPxFWDXVQ4fVSnW/U7VsfMqvoMbGxirdk5SU
1OBvAGgVq+j5/gg+gDSUiTz2UsO/5vCN/3VcnmJlo+JSHOdJab5LigLXUdBa
mrWaZq2g4Aias4zmL6WFi2lRqDw0l86j5bPp55m0MqA6KCdTdHVKxnvKK8ot
7rS9ejH2wDA6PITSnel4fzplR+dtKv/o8z67++ublrI75sX3TJ4VcA8ecXef
cjnPRRdLRCdfiNJfilLKRMnloq3lXFy5aWRZu5UvzZfILEJedJlV0m3a854T
x/1Pm5Yj3LstS7IJ2DN4eLK77U5fq60zTWJCv52/sPmgW1HbqByB+AV8m7xO
npr9fta0oy8YpnPnzu2omdJnst9b4Z2ZmZnsnn379mn9qKFBWIUoEokkEgmr
FjWdiQpfbPxXxbI7LCyMT8Z24tkui85P3EaTJDQxkfw205Q4mhZLARsocD0F
rqagFTR7uTwoQxcTqy7lKRlMK2fQmmnyiIzypRhWRY6jLWNoxyj5KcsDQ+Un
JdOd6IQjqx8rL1i//6PH6+uWL293KMkzLrzPFTzg/nokuvZUdL6o7YmitkcK
2+5/1nbHs7YJT9tGP2276onx0kdmC66ZTGXHZjx3fs8wiZ3XrqFO28f03Dqp
Y1zwd+HhIm9ZBl5p60RXA4UJq6aggmVcLZfNqH6m8OJS1XugUWBZw09A1mYm
Kny28V/xoc92TAs7OLoGRrtKHngcIs9UmrCffHeT307y30Z+SeS/maZupOnR
NCOSZrKKMoLmLqUF1REZPldeRa6aTmunUKQ/xXpTwniSjKZfR9Lu4XTAhQ47
U0Z/yrL7eM763aUe5dcsX/zZ4fkd4ye53L180c38tlfy257Ob3Msv01KXutd
ua2TclvH3G29Zndzf3ZIHcNW9poj6e+2fYRNoodl3I/cqji7ZfSwRFvf0UZP
VwOF+d+3uvx5BoYjLy+vjr0V/OU0wnuQiY2dTjKRp1Q2skqBf4Gq5TocYQdH
S9fRPVfvHvZ78chTH0f9q2rs7+TxG3mmkdd+8mYp+au8nJycIK8lp0bRtLUU
tFK+3BoSRotYCTmHIoJo1TRaN5mi/SjOS76+KhlJvw6nvS6U6kxH+1cdt6s4
Zf36fHfZ5c7Ff3R4fM3kfk7bv3LaXM1pcyandUZO69TsVsnZrbYEfjP8+8Gu
Vsti+vpvHeic5NZj44T2606GnqCX77X5zWzsdDVQGKumUG/8qUOlAWfIxMZO
h5moIGz8r+MEPWEHh8mSiG4HTzpflw39o0x88bX7uYpRJytHZ9K4o/KI9N5P
Psnku418E2niRvpxAwWulZ+RnBtOCxbR4vkUHkw/B9LqqfLiMcaLNo2hRDf6
ZRjtcqH9A6sOOX44alueYV2a2ePpCcuCrI53T5ndOMNdOdP6zOlWGce/28MO
4Ht/n64L4/qNShrcb6Nvv8T8vc80/R1rek6cOKH9TIyPj9eriY3QuMTGxrKX
rMzMTOGdfCYq3Qk6xG+hVhN+vVRIHzKRV4/Gf/r3Do4O8XF2V28Muv3Q5c9n
Q66XDMkuH3bprfhsxah/fRp/jDwPyUvICbvI5xeamFC9xBpFM1bTrOU0dzEt
CKGwYFoeSCun0lo/ivKk2NEUL6bEoSQZVLl9wJtd9rI9NoX7ej840D33oOWN
lI5XUtudXvddnPx5Fy3pOXWT/ZBNs73SKp9o+vvUNGl/oDBWTaEh+KtrVHsu
2CuwancG6BAroJrVTCqVKn2+/mSiQu2N/7xaZnC0Cfmx+9FdA+7fcMq/0z+3
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
    "], {{0, 221.}, {302., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{302., 221.},
  PlotRange->{{0, 302.}, {0, 221.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[73]=",
 CellID->489329554,ExpressionUUID->"4894fc0b-6435-440e-a736-fe460106dd29"]
}, Open  ]],

Cell["Series expansion at the origin:", "TechNoteMathCaption",
 CellID->4255939,ExpressionUUID->"93e4cba2-e9f6-40ac-b35c-d5b724101b4c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"Subfactorial", "[", " ", "x", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "0", ",", " ", "2"}], "}"}]}], "]"}], "//", 
   "Normal"}], "//", "FullSimplify"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->340278271,ExpressionUUID->"b923682e-3aca-42d6-ae7b-5bea08cf7d3b"],

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{
   FractionBox["1", "2"], " ", "\[Pi]", " ", "x", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "+", 
     RowBox[{"\[Pi]", " ", "x"}]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "\[ExponentialE]"], 
   RowBox[{"x", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "+", 
         RowBox[{"\[Pi]", " ", "x"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"\[Pi]", "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"ExpIntegralEi", "[", "1", "]"}]}]}], ")"}]}], "+", 
      RowBox[{"x", " ", 
       RowBox[{"MeijerG", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "}"}], ",", 
         RowBox[{"-", "1"}]}], "]"}]}]}], ")"}]}]}]}]], "Output",
 CellLabel->"Out[1]=",
 CellID->394553506,ExpressionUUID->"5b167192-ee4c-429e-9de3-8b7bd368992c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "d63a65c3-d708-4c0e-afd2-935b2997d734"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->34228752,ExpressionUUID->"d4de0650-3190-42b0-9c31-770d4431893d"],

Cell[TextData[{
 "Series expansion at ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Infinity"]], "paclet:ref/Infinity"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "2cd8f5bf-8ff2-4c9c-9985-e562af67c94c"],
 ":"
}], "TechNoteMathCaption",
 CellID->758466417,ExpressionUUID->"e46f27bf-79ee-4660-8f1d-262f0ce49783"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"Subfactorial", "[", " ", "x", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "\[Infinity]", ",", " ", "2"}], "}"}]}], "]"}], "//",
    "Normal"}], "//", "FullSimplify"}]], "Input",
 CellLabel->"In[74]:=",
 CellID->11744335,ExpressionUUID->"493e10ca-749f-4655-bf54-450d4805f0c7"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "x"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "x"}], ")"}]}], 
   SuperscriptBox["x", "2"]], "+", 
  RowBox[{
   FractionBox["1", "144"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "1"}], "-", "x"}]], " ", 
   SqrtBox[
    FractionBox["\[Pi]", "2"]], " ", 
   SuperscriptBox["x", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["3", "2"]}], "+", "x"}]], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"24", " ", "x", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"12", " ", "x"}]}], ")"}]}]}], ")"}]}]}]], "Output",
 CellLabel->"Out[74]=",
 CellID->112085041,ExpressionUUID->"220c8eb9-f074-4eb2-b14f-ef14ba24b8cf"]
}, Open  ]],

Cell["\<\
Now that we can count a derangement, let's discuss partial derangements. We \
allow the number of fixed points to be a nonzero value.\
\>", "TechNoteMathCaption",
 CellID->732162013,ExpressionUUID->"897e261b-9f80-4bc1-94ea-4446dee6daa6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"randomSmallSet", "=", 
  RowBox[{"RandomSample", "[", 
   RowBox[{"hazelRainbowPalette", ",", "4"}], "]"}]}]], "Input",
 CellLabel->"In[24]:=",
 CellID->244982983,ExpressionUUID->"1bd0426c-e96a-4fa5-996a-a31cc35b220b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.6713375885659421, -0.17833924308420873`, -0.26467794346262646`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7621596783781963, -0.3310170840401606, 0.08359158699165539]|>,
    "LUVColorSwatchTemplate"]}], "}"}]], "Output",
 CellLabel->"Out[24]=",
 CellID->851438496,ExpressionUUID->"00a28877-87a4-43be-be10-dadca77222c0"]
}, Open  ]],

Cell["\<\
Now we can find permutations with 2 fixed points. I have to apply Rasterize \
to build the documentation without errors.\
\>", "TechNoteMathCaption",
 CellID->28447423,ExpressionUUID->"9b2c532d-49e8-4d07-98f6-b28566e30386"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"MultisetPartialDerangements", "[", 
   RowBox[{"randomSmallSet", ",", "2"}], "]"}], "]"}]], "Input",
 CellLabel->"In[25]:=",
 CellID->260451403,ExpressionUUID->"ef94b61b-9733-45ee-802b-860d2c27da03"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnTFuE0EYhSNoKElHyx1S0FJFtEHIRRoSCNE2iRSQUC5gaTsKitzAJ/AJ
UrnzBXyD9JRmYCXLSrLrf+ZfP+/7/T4tUUCjnfG89/75LZzN2/Prk28vDg4O
vr9KX07Ofr6/uTm7/fg6/eXT1ffq8uri64erHxeXFzfvzl+mf3yT/vxJ3/z7
fimEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
7AGLxWI0GlVV5Rwj8DSiJHW2cXOJPlik+34i3fcT6b6fSPf9xKJ7ljfS4Pl8
XjBm/Pk067Ispo0v49OsyzPX6fg263LNdT3Oup7eIemS1PGsoY02YyB19++P
HS6PBdedKoN2/B7D647MRdTawph3rlzY4apjO9AdWHuhZy7Qz36PWXS3e+P4
+LhsTFrb7FdtvPxN/u9Zbbz8DVg9mxovf4NRT2bGq814FgULaLstUvde9scI
ncci686WQSO9eAysOzIXUWsLY97pcmGEro6hdQfWXuiZC/RzLx4r7sx7vJWa
/IE0GJGbvaAHDWPxpzscrXOxeUxNPl1tYcw7XS6M0NUxNflq8ttQk18GXYMR
udkLetAwFn+6w9E6F5vH1OTT1RbGvNPlwghdHVOTrya/DTX5ZdA1GJGbvaAH
DWPxpzscrXOxeUxNPl1tYcw7XS6M0NUxNflq8ttQk18GXYMRudkLetAwFn+6
w9E6F5vH1OTT1RbGvNPlwghdHVOTrya/jY1j5vN5VVXdj9bpGKMmfyANhkXH
LLpvGPUgpvNYZN3ZMmikF4+BdQ/bgLE1+WDd6XJhhK6OoXVXkz+MJt/ZnzdM
JpM04OHhoeMmHWPU5A+kwUjqJI2SUp6VrNNtjKgHMZ3HIuvOlkEjvXgMrHvY
BoytyQfrTpcLI3R1DK27mvxhNPkW3Y1jNj5ps22M/4Xc3d0Zres3g30uv8kz
5urDeEmd7ndq9vWs6DAGUnf//kT12DK27lQZRHpsCdcdmYuotYUx71y5GKjH
GHUH1l7omQv0cy9N/kbdjWOWu/tMftqxg//Udb1xAU4zZM3lNHneXNv/TH7W
eiy3Reru3J+oHmuIrDtPBpEeawDrjsxF1NrCmHeiXAzXY4y6A2sv9MwF+nk4
n8l33sr5Qu7v75tNsyzAaYasuZwmz5tr+01+1nost0Xq7tyfqB5riKw7TwaR
HmsA647MRdTawph3olwM12OMugNrL/TMBfpZTf6K0WiUNq2qqo0L8B+O9rn8
wcyYC/J0Hft6LLdF6u7fn6geW8bWnSqDSI8t4bojcxG1tjDmnSsXA/UYo+7A
2gs9c4F+VpO/WCzqum52LJHeIm1cQLEZCuYqNnnJXNts8gvWY7ktUvfi/Ynq
sXUi686QQaTH1gHrjsxF1NrCmHeKXAzdY4y6A2sv9MwF+nmATf7Gj+4/O6b4
haz+4+Pw8HDbP6BRMFexyUvmcjf5SZc2oQvWs06bMZC6F+9PVI+tCK47QwaR
HluB1x2Zi6i1hTHvFLkYuscYdQfWXuiZC/Szv8nv0D1rzOolHB0ddf80wbNj
nO+Ip9Op5eeCG5zv+LLmcr6TzZvL1+Sn6ZIubcYrWM86bcZA6u589x3PYw3x
dWfIINJjDTvRHZmLqLWFMe8UuRi6xxh1B9Ze6JkL9LOzye/W3T7mEZZftfBo
jJ6T3/buO2MuX5Pf4y/IaOPpFFGfZU3ksfi682QwC6fHdqJ72GeY8zwnfye6
E+UiC6I6thvd9Zz8XT8nv6Ab3xJpbVmXZ66kb9blmSv5NutyzXU9zro8c/UF
Unfk/kT1WF9AdQ+aQaTH+gK55qi1hTHvUXMRtY71BXLN0DMX6Gekx57yF5kx
Tp4=
    "], {{0, 14.399999999999999`}, {609., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{609., 14.399999999999999`},
  PlotRange->{{0, 609.}, {0, 14.399999999999999`}}]], "Output",
 CellLabel->"Out[25]=",
 CellID->665869934,ExpressionUUID->"3877dd5f-675d-4c37-8b53-29a251e1e9ea"]
}, Open  ]],

Cell["Now let's look at pure derangements of a small multiset.", \
"TechNoteMathCaption",
 CellID->45932736,ExpressionUUID->"637fc695-73cb-4552-98d8-9248f77a06ad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"smallMultiset", "=", 
  RowBox[{"RandomChoice", "[", 
   RowBox[{"hazelRainbowPalette", ",", "6"}], "]"}]}]], "Input",
 CellLabel->"In[27]:=",
 CellID->277919701,ExpressionUUID->"1cccdb83-a550-42c4-88ed-f4242236dad3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|
    "color" -> LUVColor[
      0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7621596783781963, -0.3310170840401606, 0.08359158699165539]|>,
    "LUVColorSwatchTemplate"]}], "}"}]], "Output",
 CellLabel->"Out[27]=",
 CellID->7493652,ExpressionUUID->"1708b15a-774d-4a92-80ef-80968d8c6e03"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"MultisetPartialDerangements", "[", "smallMultiset", "]"}], 
  "]"}]], "Input",
 CellLabel->"In[28]:=",
 CellID->87289371,ExpressionUUID->"7ebf39f8-6af9-4c48-a32c-48a0c392a1d6"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 138.}, {580.1999999999999, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{580.1999999999999, 138.},
  PlotRange->{{0, 580.1999999999999}, {0, 138.}}]], "Output",
 CellLabel->"Out[28]=",
 CellID->172278896,ExpressionUUID->"829462fb-ae0e-4589-bdbf-2217a6caad16"]
}, Open  ]],

Cell["Let's count them.", "TechNoteMathCaption",
 CellID->372409988,ExpressionUUID->"3c5a780f-fdc5-4b8c-8bcb-435b5a6d7aa5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"MultisetPartialDerangements", "[", "smallMultiset", "]"}], 
  "]"}]], "Input",
 CellLabel->"In[29]:=",
 CellID->204572566,ExpressionUUID->"925ce5b7-47d0-482e-96e0-8b15ae8ba1ea"],

Cell[BoxData["29"], "Output",
 CellLabel->"Out[29]=",
 CellID->349098055,ExpressionUUID->"3faee07a-3cc3-4ece-b24b-b549e78c5bc7"]
}, Open  ]],

Cell["\<\
To compute the number of partial derangements of a multiset, we integrate \
Laguerre polynomials.\
\>", "TechNoteMathCaption",
 CellID->705395511,ExpressionUUID->"c2c81c0c-bdc3-4711-b3bc-c58137a77e21"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EnumerateMultisetPartialDerangements", "[", "smallMultiset", 
  "]"}]], "Input",
 CellLabel->"In[31]:=",
 CellID->197135344,ExpressionUUID->"b0f6e602-3517-4a9a-b45e-d7065b0491b0"],

Cell[BoxData["29"], "Output",
 CellLabel->"Out[31]=",
 CellID->56352306,ExpressionUUID->"0ec3b7b5-b5e2-4562-9552-650a04c2098c"]
}, Open  ]],

Cell["\<\
Let's compute the number of partial derangements for a multiset with too many \
elements to list the elements one by one.\
\>", "TechNoteMathCaption",
 CellID->311141836,ExpressionUUID->"7c91506f-eea1-48b1-8169-536253d8b897"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"randomMultiset", "=", 
  RowBox[{"RandomChoice", "[", 
   RowBox[{"hazelRainbowPalette", ",", "21"}], "]"}]}]], "Input",
 CellLabel->"In[32]:=",
 CellID->407433582,ExpressionUUID->"5f534a7e-390d-4c0b-857c-a24416cf9189"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7621596783781963, -0.3310170840401606, 0.08359158699165539]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.6713375885659421, -0.17833924308420873`, -0.26467794346262646`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.6713375885659421, -0.17833924308420873`, -0.26467794346262646`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.6713375885659421, -0.17833924308420873`, -0.26467794346262646`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.6713375885659421, -0.17833924308420873`, -0.26467794346262646`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"]}], "}"}]], "Output",
 CellLabel->"Out[32]=",
 CellID->349274851,ExpressionUUID->"a05e8e23-80dd-42c5-b540-87c68a5ed59d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "4d59a580-7cd7-4cc4-8afe-d596a5b24fba"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->518217,ExpressionUUID->"a7e96a3c-e960-43f3-88d8-5c7ae8ed68df"],

Cell["Count the derangements.", "TechNoteMathCaption",
 CellID->194380331,ExpressionUUID->"8a623dcc-c4a3-48bc-be74-66a4583c3e90"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EnumerateMultisetPartialDerangements", "[", "randomMultiset", 
  "]"}]], "Input",
 CellLabel->"In[33]:=",
 CellID->653333490,ExpressionUUID->"4fba9995-ef54-4903-a9ba-2f911c42fe97"],

Cell[BoxData["46907596048"], "Output",
 CellLabel->"Out[33]=",
 CellID->531801412,ExpressionUUID->"1d2b0466-ff75-43c2-ad85-644d1bbf2847"]
}, Open  ]],

Cell["This is the same as having 0 fixed points.", "TechNoteMathCaption",
 CellID->158717184,ExpressionUUID->"0fd1d169-6383-4dc2-aa7f-6035d1e4d12f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EnumerateMultisetPartialDerangements", "[", 
  RowBox[{"randomMultiset", ",", "0"}], "]"}]], "Input",
 CellLabel->"In[34]:=",
 CellID->414886273,ExpressionUUID->"d9ee7595-8603-4b05-a772-0c5f5dc9ab1c"],

Cell[BoxData["46907596048"], "Output",
 CellLabel->"Out[34]=",
 CellID->341067037,ExpressionUUID->"3a49f47a-410e-45c9-ab97-83477f2128c4"]
}, Open  ]],

Cell["\<\
Now let's see a small example of partial derangements of a multiset.\
\>", "TechNoteMathCaption",
 CellID->36989666,ExpressionUUID->"303e33f6-8cef-4939-ba37-6f4b49478744"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"MultisetPartialDerangements", "[", 
   RowBox[{"smallMultiset", ",", "2"}], "]"}], "]"}]], "Input",
 CellLabel->"In[35]:=",
 CellID->55412944,ExpressionUUID->"b85dd037-8b12-465b-80d7-f1e1f79b5fec"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
HgsP+RCiFivVyHjYFx7ygjqMvwoP+WCgFivVyM/DWHgsFdSSeELweT2fu+S9
EHe1E9jnqD0zrM893MBndz5rXkN3tbOSz1WxGEKcFZS3m1Hgph3VZ3eNVDNW
YJ+j9sywPjNUZ4nqM0M1Q/VdYoUtKG83o8BNO6rP7hqpZqzAPkftmWF9ZqjO
EtVnhmqG6rvECltQ3m5GgZt2VJ/dNVLNWIF9jtozw/rMUJ0lqs8M1QzVd4kV
tqC83YwCN+2oPrtrpJqxAvsctWeG9ZmhOktUnxmq7z5UH4/HYRhmv4p7Zghx
V1DebkZ5/RrAZ4bqO8YK7HPUnhnW5x5u4LM7nxmqNfvzLG9vbynKx8fH7J8y
hDgrKG83oyRe0i9JKFnJNfjMUH3HWIF9jtozw/rcww18duczQ7Vmf14iBVp6
fZ88Qa+vr4Vb0IwlL6iKfYllsBmrS0El8ZYabO16LuDzqj7L827T5y5NO7DP
UXtmWJ97DFf47M5nzWvoq3bO6/i8xErPOKUVfvnDOI4316AZS1hQdfuSyWA2
lsIz1VXrKTktPst9FubdrM8Kz+y59jlqzwzr8/rPVONzvLxHrZ2JlXyuiiVM
0Pv7+7TIkufDNWMJC6puXzIZzMZSGKqr1lNyWnyW+yzMu1mfFZq2a5+j9syw
Pq8/VONzvLxHrZ2JlXyuiiUvzM1mkxY5DMPNNWjGkv/TT8W+xDLYjKXz9o/y
9ZScFp/lPsvzbtNnnW+X+/U5as8M67PK2z/wOV7eo9bOeTWfq2I1J+h0Oo3j
OK0wkT4C3FyDZqzmgmrZV6sMxmOtOlQ3rKfktPgs97k578Z9XrVpB/A5as8M
6/OaQzU+x8t71Nq5ZiWfl2LNPr/dnKDLL9Kfnp7WfsC+IVZzQbXsq1UG47Hk
Q3VSbknyhvVcg8/r+dycd+M+y5t2bJ+j9sywPouHanz26LPmNXRROxfW83np
nM/Pz58fzxZ+6tnv9/nvWt4rlvBTat2+ZJ9SzcYSDtUpXFJuSeCG9VyDz+v5
LPzthFmfhU07vM9Re2ZYn2VDNT479VnzGrqonYlVfc7w+Z3YvNd39PWOSj/v
d137BeyzIfBZ7rO7d5PqxArvc9SeGdZnmRv47NRn3lN9r/5cSLrmVYeXWKlG
qg7Rvrbfqw4vsVKNVB2SWL3AZ7nPmnmPWju9iOpY1D6m6rOiG73AZ195j1o7
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAANDA6XTabDbDMNx7IfAoTL4l8dY4OT6D
MvgMkcBniMSqPi9FPB6Pn3+++7GtOiRr2O6+VR2SWF9326pDEmu3/V51iGIp
5ku+r6RcEk+yhiUezWdfebcZS94T8Nmjz2HvBR77c9B7papjUXuCYZ9neXl5
mf15uuaH32PhIU/QeNgXHvKh+udhLDzkjfQw/io85I1CLV9d9rUknpBH89ld
3g3G6tIT8Nmdz2HvBR77c9B7papjUXuCYZ+rYkVNUNhG6m24YghxN4S4GwwK
YajOE9XnsPcCj/056L2SoZqh+kLUBIVtpN6GK4YQd0OIu8GgEIbqPFF9Dnsv
8Nifg94rGaoZqi9ETVDYRuptuGIIcTeEuBsMCmGozhPV57D3Ao/9Oei9kqGa
ofpC1ASFbaTehiuGEHdDiLvBoBCG6jxRfQ57L/DYn4PeKxmqH2qoPh6PwzDM
fhX3HDdBYRupt+Eqr18Dj+mzu7wbjNWlJ+CzO5/D3gs89ueg90qGaiNDdXef
Z3l7e0tRPj4+Zv80aoLCNlJvw1USL+mXJJSs5JrH9Nld3g3G6tIT8Nmdz2Hv
BR77c9B7JUO1kaG6u89LpEBLr++TJ+j19bVwC/IElceSS14eSy5DRSzFfHWR
PIm31GBr13PhAX32lXebsbrc+PDZnc9h7wUe+3PQe6WqY1F7glWfl1jpmb20
wi9/GMfx5hqECaqKJZS8KpZQhrpYivlSeMapaj0lp43qs6O8m42l8Ew1Phv0
Oey9wGN/DnqvVHUsak8w7HNVLGGC3t/fp0WWPB8uTFBVLKHkVbGEMtTFUsyX
guRV6yk5bVSfHeXdbCyFoRqfDfoc9l7gsT8HvVeqOha1Jxj2uSqW/J8SNptN
WuQwDDfXIP+nhPJY8htoeSy5DBWxFPOl823c8vWUnDaqz77ybjOWzts/8Nma
z2HvBR77c9B7papjUXuCYZ+rYjUn6HQ6jeM4rTCRPgLcXENzghpiNUveEKtZ
hpZYivlaVfKG9ZScNqrPLvJuPNaqQzU+m/U57L3AY38Oeq9UdSxqTzDs81Ks
2ee3mxN0+UX609PT2g+9N8RqlrwhVrMMLbEU8yWXPCm3JHnDeq55NJ9d5N14
LPlQjc8efQ57L/DYn4PeK1Udi9oTDPu8dM7n5+fPj2cLP/Xs9/v8dy2vEX7q
qYol/ORYFUv46bsulmK+hJKncEm5JYEb1nPNo/nsIu/GYwmHanx26nPYe4HH
/hz0XqnqWNSeYNjnDJ/fiZ2uedUhiZ6uedUhiZW8rToksVJ+qw5RLMV8Cfe1
9gvYZ0NE9dlR3s3GEvYEfHbqc9h7gcf+HPReqepY1J5g3mcAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAACAB+d0Om02m2EY7r0QeBQm35J4a5wcn0EZfIZI4DNEYlWf
lyIej8fPP99tv1cdkjXsfmyrDkmsr7tt1SHaV9BruN19qzo+nyEpl8STrGEJ
fF7PZ3ney/GVL3zu5XPU2tHMF/05j6rPQffl676zns+zvLy8zP485fcw/io8
5DIcfo+Fh1yGn4ex8JA30pDXMHk7HvaFx9JwtSSeEHxez+cueS/EXb7wuYvP
UWtHM1/05zyqPgfdl7v7zko+V8VCBl+NlKE6f9qouXDX3Apxly98ZqjO7Yuh
OnvasD4H3Ze7+w5DdQwZol5Dy5Ljs/HmVoi7fOEzQ3VuXwzV2dOG9Tnovtzd
dxiqY8gQ9RpalhyfjTe3QtzlC58ZqnP7YqjOnjasz0H35e6+w1AdQ4ao19Cy
5PhsvLkV4i5f+MxQndsXQ3X2tGF9Drovd/cdnaH6eDwOwzD7VdwzMnhrpO6G
6rx+DeCzi+ZWiLt84TNDdW5f3oZqfGaozuDuvtPd51ne3t5SlI+Pj9k/RQZf
jdTdUJ3ES/olCSUruQafXTS3QtzlC58ZqnP78jZU4zNDdQZ3953uPi+RAi29
vk8uw+vra+EW5DKUx5LLULGvoNewi+RJvKUGW7ueC/i8qs/yvEetnTM+d/I5
au1o5ov+nEfV56D78nXfOa/j8xIrPeOUVvjlD+M43lyDUIaqWEIZ6vYV9Boq
PONUtZ6S00bNhabPwrxHrZ0JfO7ic9Ta0cwX/TmPqs9B9+XovjOxks9VsYQy
vL+/T4sseT5cKENVLKEMdfsKeg0VJK9aT8lpo+ZC02dh3qPWzgQ+d/E5au1o
5ov+nEfV56D7cnTfmVjJ56pY8n+22Gw2aZHDMNxcg/ymVh5L/s8WFfsKeg11
vo1bvp6S00bNhabP8rxHrZ0zPnfyOWrtaOaL/pxH1eeg+/J13zmv5nNVrGYZ
TqfTOI7TChPpI8DNNTTL0BCrWYaWfQW9hqtK3rCektNGzYWmz815j1o71+Bz
F5+j1o5mvujPeVR9DrovF/eda1byeSnW7PPbzTJcfpH+9PS09gP2DbGaZWjZ
V9BrKJc8KbckecN6rsHn9XxuznvU2rmAz718jlo7mvmiP+dR9Tnovlzcdy6s
5/PSOZ+fnz8/ni38hLXf7/PftfyrWLJPWFWxhJ+w6vYV9BoKJU/hknJLAjes
5xp8Xs9n4W+q49XOBD539Dlq7Wjmi/6cR9XnoPtycd+ZWNXnDJ/fiZ3yW3VI
oqf8Vh2SWCm/VYdoX0GvYfK26vib//e1X8A+GyJqLjR9Fua9Ckf5wueOPket
Hc180Z/zqPocdF+O7jsKPgMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8OKfTabPZ
DMNw74XAozD5lsRb4+T4DMrgM0QCnyESq/q8FPF4PH7++W77veqQrGH3Y1t1
SGJtd9+qDi/70szX19226vh8hqRcEk+yhiUs+Cy/PuVErVNfPQGfe/lMf7ZQ
p7F99pWLclTvO/TnZV5eXmZ/nlw6jL8KD7l4h99j4SFP0HjYFx7ypq22L818
pXr8eRgLj6XiXRJPiAWfu1yfQqLWqbuegM9dfKY/G6nTwD67y0Uhqvcd+vMy
JiT3liCD+3J3kw3ctBmqGap78Wg+05+N1Glgn93lohCGaobqv8TyliCD+3J3
kw3ctBmqGap78Wg+05+N1Glgn93lohCGaobqv8TyliCD+3J3kw3ctBmqGap7
8Wg+05+N1Glgn93lohCGaobqv8TyliCD+3J3kw3ctBmqGap78Wg+05+N1Glg
n93lohCG6rsP1cfjcRiG2a/inuOKR9M2cpPN69eAHZ8Zqh9wqMZnhupcLG91
Gthnd7kohKFasz/P8vb2lqJ8fHzM/mlU8WjaRm6ySbykX5JQspJr7PjMUP2A
QzU+M1TnYnmr08A+u8tFIQzVmv15iRRo6fV9cvFeX18LtyBPUHkseYJs7ksz
X12KN4m31GBr13PBiM/y62Mz76o+u+oJZ3zu5DP92UKdnkP77CsXNuuU/pxh
pWec0gq//GEcx5trECaoKpYwQWb3pZkvhWeqq9ZTclpH18ds3lV99tMTJvC5
i8/057vX6URgnx3lwmyd0p8zrCT5+/v7tMiS58OFCaqKJUyQ2X1p5kthqK5a
T8lpHV0fs3lX9dlPT5jA5y4+05/vXqcTgX12lAuzdUp/zrDet3E3m01a5DAM
N9cgbwLlseQJsrkvzXzpvP2jfD0lp/V1fWzmXdVnVz3hjM+dfKY/W6jTc2if
feXCZp3SnzN0l/x0Oo3jOK0wkT4C3FxDc4IaYjUnyPi+NPO16lDdsJ6S07q4
Psbzruqzh55wDT538Zn+fMc6vSawzy5yYbxO6c8ZUqzZ57ebxbv8Iv3p6Wnt
h94bYjUnyPi+NPMlH6qTckuSN6znGgs+N18f43lX9dlDT7iAz718pj/fsU4v
xPbZRS6M1yn9OUM65/Pz8+fHs4Wf5vb7ff67ln8VS/appyqW8DchZvelmS/h
UJ3CJeWWBG5YzzUWfBb+xsBs3lV99tATJvC5o8/05zvW6UR4n13kwnid0p9v
8vmd2FHf5ch7UOX5Eg7Va7+AfTaEo+tTRdQ6ddQT8Lmjz/Tnu9dpeJ8d5aIK
3lN9r/5cSHKp6hDF+rGtOiSx0jWvOrzsSzNfqR6rDkmsXkS9PlHrNGpP6EVU
n+nPvuq0F6rXJ2guVO879GcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMTpdNpsNsMw3Hsh
8ChMviXx1jg5PoMy+AyRwGeIxKo+L0U8Ho+ff77bfq86JGtQjfVjW3V4ibXd
fas6JLG+7rZVx+czJOWSeJI1LPFoPstzUY6mY77qFJ97xYrqmGad4nMefLbQ
M8uxPG/M8vLyMvvz5NJh/FV4yCXXi/Vje/g9Fh5y8dRipXocD/vCQz5U/zyM
hcfSDWJJPCGP5nOXXBSi6Zi7OsXnLrGiOqZZp/icB5+N9MxCLM8bVbGiSh5V
PIbq/Gmj+sxQbaRO8ZkhJANDdf60+OzLZ3e1w1DNUF0LQ3X+tFF9Zqg2Uqf4
zBCSgaE6f1p89uWzu9phqGaoroWhOn/aqD4zVBupU3xmCMnAUJ0/LT778tld
7TBUM1TXwlCdP21UnxmqjdQpPjOEZGCozp8Wn3357K52dIbq4/E4DMPsV3HP
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
fv7519226pCsYbf9XnWIYv3YVh1eYm1336oO0b7E+UrKJfEka1gCn1f0Oei+
5LWDz4+Z94p9ubqG+NwtF67yXo5q7Rj2eZaXl5fZnydvfx7GwkMu+WH8VXjI
xTv8HgsP+VCtFit5Ox72hYf8BiHP15J4QvB5RZ+D7qtL7eDzY+a9dF/eriE+
98mFt7wXolo7hn2uihVWcoZqGzcImrY/n4Pui6E6D3k30jNLYxkeQh7OZ295
L4ShOsPDSc5QbeMGQdP253PQfTFU5yHvRnpmaSzDQ8jD+ewt74UwVGd4OMkZ
qm3cIGja/nwOui+G6jzk3UjPLI1leAh5OJ+95b0QhuoMDyc5Q7WNGwRN25/P
QffFUJ2HvBvpmaWxDA8hD+ezt7wXwlA9y/F4HIZh9qu458CSM1TbuEHk9WsA
nxmq2+hSO/j8mHkv3Ze3a4jPDNUZ3A3V3X2e5e3tLUX5+PiY/dOwkjNU27hB
JPGSfklCyUquwWeG6ja61A4+P2beS/fl7RriM0N1BndDdXefl0iBll7fJ5f8
9fW1cAty8SpiiRNkM5Zccs18nf+8sHSpwdau5wI+r+tz0H11uUHg8wPmPeo1
PONzr1y4yrvR2rHq8xIrPeOUVvjlD+M43lyDULy6WLIEmY0llFwzXxP5Z5yq
1lNyWnzu4HPQfSk8U43P8fIe9RpO4HOfXPjJu93aMexzVSyh5O/v79MiS54P
F4pXF0uWILOxhJJr5msiH6hqPSWnxecOPgfdl8JQjc/x8h71Gk7gc59c+Mm7
3dox7HNVLPk/x2w2m7TIYRhurkE+pFXEEifIZiz5YKCZr3PBt3HL11NyWnzu
4HPQfem8/QOf4+U96jU843OvXLjKu9HaMexzVaxmyU+n0ziO0woT6SPAzTU0
i9cSqzVBxmM1S66Zr2uWxGtYT8lp8bmDz0H3tepQjc/x8h71Gl6Dz31y4SHv
1mvHsM9LsWaf326W/PKL9Kenp7Uf5m+J1Zog47GaJdfM14Wk3JLkDeu5Bp9X
9DnovuRDNT4/VN6jXsML+NwtFx7ybr12DPu8dM7n5+fPj2cLPznu9/v8dy2v
EX6aq4sl+zRnNpbwk6NOviZSuKTcksAN67kGn1f0Oei+hEM1Pj9a3qNewwl8
7pkLD3m3XjuGfc7w+Z3YYd8byXuq7/3O1bVfwD4bAp87+Bx0X8LawefHzHvd
vvxcQ3zumQs/ea/C0XuqFXwuJHlbdUhiJZeqDlGsH9uqw0us5G3VIdqXYr56
gc8dfA66L83a6QU++8p71GvYi7A+B827au049BkAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
fHE6nTabzTAM914IPAqTb0m8NU6Oz6AMPkMk8BkisarPSxGPx+Pnn3/dbasO
yRp22+9VhyTWdvet6hDt68e26nATS5yvpFwST7KGJSz4jGMWHNOMhc/dfNbM
e1SfxfvS9zlsz3SVd5v7kve69Xye5eXlZfbnaW0/D2PhIR+qD+OvwkM+VI+H
feEhL97D77HwkA88erF65GtJPCEWfMYxI45pxsLnPj5r5j2qzz32pexz2J7p
Le8G99Wl163kc1UshmpnxeutoBhCcCwXi6E6e9qwPjOE2NgXQ/Vj5t3gvhiq
G2CofsCBhyEEx3KxGKqzpw3rM0OIjX0xVD9m3g3ui6G6AYbqBxx4GEJwLBeL
oTp72rA+M4TY2BdD9WPm3eC+GKobYKh+wIGHIQTHcrEYqrOnDeszQ4iNfTFU
P2beDe7L0VB9PB6HYZj9Ku6Zodpd8XorqLx+DdjxGceMOKYZC58ZqiPtS9nn
sD3TW94N7qtLr+vu8yxvb28pysfHx+yfMlQ7K15vBZXES/olCSUrucaOzzhm
xDHNWPjMUB1pX8o+h+2Z3vJucF9del13n5dIgZZe3yffyOvra+EW5AkqjyUv
3op9iSU3GqtHQSXxlhps7XouGPEZxyw4hs8ufdbMe1SfewxXyj6H7Zmu8m5z
X12G6jV8XmKlZ/bSCr/8YRzHm2sQJqgqlrB46/Ylk9xurPWfQa1aT8lpNX3G
sbs7hs9efdbMe1Sf13+murvPYXumn7yb3ZfCM9XNPlfFEm7k/f19WmTJ8+HC
BFXFEhZv3b5kktuNtf4QUrWektNq+oxjd3cMn736rJn3qD6vP1R39zlsz/ST
d7P7Uhiqm32uiiXfyGazSYschuHmGuQ3tfJY8n9mqtiXuLkZjaXytoTy9ZSc
VtNnHLPgGD679Fkz71F9Vnn7R1+fw/ZMV3m3uS+dt3+0+VwVq3kjp9NpHMdp
hYn0EeDmGpoT1BCruXhb9tUqufVYaw4hDespOa2mzzh2R8fw2bfPmnmP6vOa
Q/VKPoftmR7ybnxfqw7VQp+XYs0+v928kcsv0p+entZ+6L0hVnPxtuyrVXLr
scRDSFJuSfKG9VxjwWccu6Nj+OzbZ828R/VZPFTr+xy2Z3rIu/F9yYfq9Xxe
Oufz8/Pnx7OFvwnZ7/f571peI/zUUxVL+Im4bl+yT452Y8mGkBQuKbckcMN6
rrHgM47d0TF89u2zZt6j+iwbqu/ic9ie6SHvxvclHKpX9TnD53di857q0df7
MP28o3LtF7DPhgj7Xl8cu/d7qvG5p8+81/fe+7qLz2F7pp+8m92XsNcp+FxI
WlvVIYmVrnnVIYmV6rHqEO3rx7bqcBNLMV+90PQZx3w5hs95VH3WzHtUnxX3
1YuwPTNo3jX3pdnrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAxOZ1Om81mGIZ7LwQehcm3
JN4aJ8dnUAafIRL4DJFY1eeliMfj8fPPt7tvVYdkDbsf26pDEuvrblt1iPa1
/V51uIklzldSLoknWcMSJnx2lYtywtYOPmfxlQubsXzVDj738tlX3itiuarT
9Xye5eXlZfbnydvxsC885EP14fdYeMib28/DWHjIJT+MvwoP+VCtF6tHvpbE
E2LCZ2+5KCRs7eBzFne5MBjLXe3gcxef3eW9NJa3Ol3J56pYDNXOJPdWUDRt
O7koJGzt4HMWd7kwGMtd7eAzQ3Uulrc6ZaimuZmOZVhyEz57y0UhYWsHn7O4
y4XBWO5qB58ZqnOxvNUpQzXNzXQsw5Kb8NlbLgoJWzv4nMVdLgzGclc7+MxQ
nYvlrU4ZqmlupmMZltyEz95yUUjY2sHnLO5yYTCWu9rBZ4bqXCxvdaozVB+P
x2EYZr+Ke2aodie5t4LK69eAIZ+95aKQsLWDz1nc5cJgLHe1g88M1blY3uq0
u8+zvL29pSgfHx+zf8pQ7UxybwWVxEv6JQklK7nGkM/eclFI2NrB5yzucmEw
lrvawWeG6lwsb3Xa3eclUqCl1/fJJX99fS3cgvyilceSS16xL7HkRmP1kDyJ
t9Rga9dzwYrPrnJB7eBzHl+5sBnLV+2c8bmTz77ybrN2zPbnJVZ6ximt8Msf
xnG8uQbhRauKJZS8bl8yye3GWv8Zp6r1lJxW1Wc/uaB2zvh8C0e5MBvLUe1M
4HMXnx3l3WztWO7PVbGEkr+/v0+LLHk+XHjRqmIJJa/bl0xyu7HWl7xqPSWn
VfXZTy6onTM+38JRLszGclQ7E/jcxWdHeTdbO5b7c1Us+T/HbDabtMhhGG6u
QX7RymPJ/zmmYl/i5mY0lsq3ccvXU3JaVZ9d5YLawec8vnJhM5av2jnjcyef
feXdZu1Y7s9VsZolP51O4zhOK0ykjwA319B80RpiNUvesq9Wya3HWlPyhvWU
nFbVZw+5oHbk1/AafHbnM7XTMFTjc7y8G68dy/15Kdbs89vNkl9+kf709LT2
g+gNsZolb9lXq+TWY4klT8otSd6wnmtM+OwhF9SO/BpewOe758J4LBe1cwGf
e/nsIu/Ga8dyf1465/Pz8+fHs4WfHPf7ff67ltcIP/VUxRJ+cqzbl+yTo91Y
MslTuKTcksAN67nGhM8eckHt/CUWPmdxkQvjsVzUzgQ+d/TZRd6N147l/pzh
8zuxeU/1T1/vjfTzjsq1X8A+GyLqe1CpnbtfQ3y2kwuzsRzVDj539NlR3uti
+alTBZ8LSd5WHZJY6TpUHZJYyduqQ7Sv7feqw00sxXz1QtXnoLkIWzv4nCVq
Lqgdeb56EdXnqHmPWqcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0MDpdNpsNsMw
3Hsh8ChMviXx1jg5PoMy+AyRwGeIRInPfZ1PZzsej59/vt19qzoka9htv1cd
bmL92FYdklhfd9uq4777Ssol8SRrWAKfY/jsq3Zi++yrtxiN5aon4HM3n6P2
Z1f7KvG5o/MvLy+zP0/ejod94SEfQg7jr8JD3nD0Yv3YHn6PhYd8MPh5GAsP
+Y1Pvq8l8YTgcwyf3dVOYJ/d9RaLsbz1BHzu43PU/uxtXyU+93LeguTuGk5p
LG+Dgea+AjdtfPY18DBU53HXWyzG8tYT8JmhOtK+GKqNN5zSWN4GA819BW7a
+Oxr4GGozuOut1iM5a0n4DNDdaR9MVQbbzilsbwNBpr7Cty08dnXwMNQncdd
b7EYy1tPwGeG6kj7Yqg23nBKY3kbDDT3Fbhp47OvgYehOo+73mIxlreegM8M
1ZH2pTNUH4/HYRhmv4p7ZggxI0Mh7m58ef0awOdIPrurncA+u+stFmN56wn4
zFAdaV8lPsudf3t7S2f4+PiY/VOGECMyFOLuxpfES/olCSUruQafI/nsrnYC
++yut1iM5a0n4DNDdaR9lfjcxfl0kqVX88klf319LVyePEFGY4llKI8lbxSa
+zr/eWHpUoOtXc8FfA7js6/aOYf22VdvMRrLVU8443Mvn6P2Z1f7Ohf4XPh3
SljpGad0xb78YRzHm2sQJshuLJkMVbGEjUJzXxP555eq1lNyWnz25bOj2pkI
7LOj3mI3lp+eMIHPfXyO2p/97GsiwBcV39/fp4tWsk5hguzGkslQFUvYKDT3
NZEPVLWektPisy+fHdXORGCfHfUWu7H89IQJfO7jc9T+7GdfEwGG6vOf36Wn
izYMw801yJuA0VhiGcpjyQcDzX2dCwQuX0/JafHZl8++aucc2mdfvcVoLFc9
4YzPvXyO2p9d7evsfKg+nU7jOE5XLJE+ktxcQ3OCrMdqlaEhVnOj0NzXNUvi
Nayn5LT47MtnF7VzTWCfXfQW67E89IRr8LmPz1H7s4d9XaM8VM8+m90s+eUX
+09PT2s/9G49VqsMDbGaG4Xmvi4k5ZYEbljPNfgcw2cXtXMhts8ueov1WB56
wgV87uZz1P7sYV8XMj5X/Z1C0h6fn58/Py4u/OS43+/Lv0cp/NRjN5bsk2NV
LOGnb519TaRwSbmlgmpYzzX4HMNnF7UzEd5nF73FeiwPPWECn3v6HLU/e9jX
RN7n8r9Ty+f3XSdvqw5J9HTNqw43sX5sqw5JrFT7Vccd99XxPyiwBD5799lR
7YT32VFvsRvLT0/A554+R+3PfvZV4rOC8wAAAAAAAAAAAAAAbfw/QFuFpg==

    "], {{0, 261.}, {580.1999999999999, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{580.1999999999999, 261.},
  PlotRange->{{0, 580.1999999999999}, {0, 261.}}]], "Output",
 CellLabel->"Out[35]=",
 CellID->438918729,ExpressionUUID->"4b972b21-917e-4be9-8d74-2cb4fa1c83d8"]
}, Open  ]],

Cell["\<\
Let's find how many partial derangements with 2 fixed points there are.\
\>", "TechNoteMathCaption",
 CellID->45514529,ExpressionUUID->"8aa7701c-9460-487b-9364-c83c1fb4ffa7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"MultisetPartialDerangements", "[", 
   RowBox[{"smallMultiset", ",", "2"}], "]"}], "]"}]], "Input",
 CellLabel->"In[36]:=",
 CellID->274862742,ExpressionUUID->"a0cd8854-8e3c-4822-ae69-0e89c5f2a429"],

Cell[BoxData["57"], "Output",
 CellLabel->"Out[36]=",
 CellID->24836199,ExpressionUUID->"6af504c3-f53c-428f-9ff3-16df328f3264"]
}, Open  ]],

Cell["Let's use Laguerre polynomials to compute this.", "TechNoteMathCaption",
 CellID->21262637,ExpressionUUID->"9b718d6e-579b-424e-9e04-b0354691fec5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EnumerateMultisetPartialDerangements", "[", 
  RowBox[{"smallMultiset", ",", "2"}], "]"}]], "Input",
 CellLabel->"In[37]:=",
 CellID->3910711,ExpressionUUID->"5187a265-6ea1-4db6-903c-9cf260e35fe0"],

Cell[BoxData["57"], "Output",
 CellLabel->"Out[37]=",
 CellID->453491458,ExpressionUUID->"4a2a06b0-4a13-43c1-9d8a-eba0899fc0a8"]
}, Open  ]],

Cell["\<\
Let's do a calculation for partial derangements where listing all \
permutations is infeasible.\
\>", "TechNoteMathCaption",
 CellID->959787810,ExpressionUUID->"db908ab1-467b-47ab-95ae-fc0e35d44b67"],

Cell["Count partial derangements with 3 fixed points.", "TechNoteMathCaption",
 CellID->402703826,ExpressionUUID->"35192e33-4309-4b80-8cbf-178af813f842"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EnumerateMultisetPartialDerangements", "[", 
  RowBox[{"randomMultiset", ",", "3"}], "]"}]], "Input",
 CellLabel->"In[38]:=",
 CellID->1592074,ExpressionUUID->"12c89bd9-7460-4295-877e-cd07e7453f49"],

Cell[BoxData["827725861632"], "Output",
 CellLabel->"Out[38]=",
 CellID->238165924,ExpressionUUID->"17366ec5-2fb8-4873-ab1c-76ee54ccd577"]
}, Open  ]],

Cell["\<\
Let's do a smaller example again. This time, let's list all the elements of \
the set.\
\>", "TechNoteMathCaption",
 CellID->708478496,ExpressionUUID->"7964130f-02ba-4935-9672-d5101e21b288"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hazelRainbowPaletteSubset", "=", 
  RowBox[{"RandomSample", "[", 
   RowBox[{"hazelRainbowPalette", ",", "4"}], "]"}]}]], "Input",
 CellLabel->"In[40]:=",
 CellID->450230421,ExpressionUUID->"62363314-f3d0-4d1e-b8ed-7a6aae943156"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.6713375885659421, -0.17833924308420873`, -0.26467794346262646`]|>,
    "LUVColorSwatchTemplate"]}], "}"}]], "Output",
 CellLabel->"Out[40]=",
 CellID->26904101,ExpressionUUID->"5bde5e2a-8138-4175-8004-79c02ebbdedf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subsetRandomMultiset", "=", 
  RowBox[{"RandomChoice", "[", 
   RowBox[{"hazelRainbowPaletteSubset", ",", 
    RowBox[{"{", "7", "}"}]}], "]"}]}]], "Input",
 CellLabel->"In[41]:=",
 CellID->212638519,ExpressionUUID->"bd5e9cc7-94c3-4c12-983c-458b41a3f732"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.6713375885659421, -0.17833924308420873`, -0.26467794346262646`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"]}], "}"}]], "Output",
 CellLabel->"Out[41]=",
 CellID->295663189,ExpressionUUID->"2cf2b7cf-23b3-40f9-ad31-1110fbf47faf"]
}, Open  ]],

Cell["Let's find all the multiset partial derangements.", \
"TechNoteMathCaption",
 CellID->19185935,ExpressionUUID->"7c44a0f1-df14-4809-81c7-83e4aca601b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"MultisetPartialDerangements", "[", "subsetRandomMultiset", "]"}], 
  "]"}]], "Input",
 CellLabel->"In[42]:=",
 CellID->65654456,ExpressionUUID->"f9a6d67a-18d4-438c-a6a7-3d758e464c3d"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnbFuG0cQQIWkSRl9Qv6BQNIGKYS0DgIWbGIjinGNDMgBgkC9getc8g/4
BSpcq2LHH+Af8B+YjQ4gCEt33N05zs0M38M5sIXLze7MvNuVcDr+8O7Dm7++
ubq6+vhd+s+bt//8fH//9t/fvk//+P3uY/P+7vbPX+/+vn1/e//Tu2/TF39M
f35Jf/n/73sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgDOw3W7n83nT
NMJzADzSNXbq8HNcHHEgMLgDUMfo7qQLbjabinM+/bEoOiSDVI21eCg6vMRa
fPhUdIjm5apeqbdTh0vG0EefXLjjy52oOZTfE3DnMuteMK+gObS27tzc3NSd
k3K+/txmHnKh9GItHtbtl8xD3gxqsZKP7Wqdecjl9VWvHAsq6Lss7vhyJ2oO
R7kn4M5l1j13XkFzaG3dYSP3dSxvzZAJ8rKRc1ELi7GC5pCN3DDU/QLXAs1Y
bORohlKQl42ci1pYjBU0h2zkhqHuF7gWaMZiI0czlIK8bORc1MJirKA5ZCM3
DHW/wLVAMxYbOZqhFORlI+eiFhZjBc0hG7lhqPsFrgWasUZxZ7PZNE0z/Cur
A+cglJFmyAR5B3KY40IRwxfEHV/uRM3hKPcE3LnMuufOK2gO7aw7q9UqXWS3
29Wdg1BGmiET5B3IYerw1Oep2yUjOWZYLtzx5U7UHI5yT8Cdy6x77ryC5tDU
upOuc/JNJn3nyAu0XC4zp6AaS1wgm7Hk8kat1/75pVXD39Hkj+fAgFy448ud
qDkcZUHHnQusOzm0tu5M9YxcGuHVM23bnhyAaixZgczGEsobtV4dwxYUjSfn
srjjy52oOVR4Rg534tWdHMpjdYzozlQbuaenp26QOQNQjSUrkNlYQnmj1qtj
OFDReHIuizu+3ImaQ4WNHO7Eqzs5lMfqGNGdCX9rdT6fp0HmfJqeaixxgWzG
kt+0o9Zrn2FB/nhyLos7vtyJmkOd31rFnXh1J4fW1h39jdx2u23bththIm07
Tw5ANVZtgYzHqpY3ar2O6bOgYjw5l8UdX+5EzeFZN3K4E6/u5FAe65gR3UmX
Gn7cru+c6gIdfmB4fX197gcma2LVFsh4rGp5o9brQOrtPqEqxnNMn1y448ud
qDmUb+Rw56LqTg7lsQ6M6076X2az2fDTdK+eI9xpPz4+ntxAThNLtqs3G0v4
XVi8enWkcKm3+2SpGM8xfXLhji93ouZQuJHDnUurOzmUx+o4kzs5r6T76hzV
98PwLhreHdQXS5bDEV9k2sfLELjjy52oORTeE3DnMuteNq+gObS/7mSScl50
uIm1eCg6vMRKPhYdonkFrddY4I4vd6LmUPOeMBa446vuUXPocd0BAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AIjEdrudz+dN00w9EIDx6Xo7Nfk5Lo47EBjcAagjx51x/UpX22w2L78e9cOL
VT9QmA/+NvDhxam9U5NLxtCHBXfC9nNUd1x5qu8OH/iOOyZiqbgzol83Nzev
fj3lYf25zTzkBVKLldxvV+vMQ77wrdsvmYdcKL16ac5rjFh9TS7Egjth+zmq
O948VXZHtZ+91cJiLNyRuTOWXxYWIxY+Z0J5uymxkfPXz1Hd8eYpGzk7tbAY
C3fYyE0RK+zC563JNWOxkfPXz1Hd8eYpGzk7tbAYC3fYyE0RK+zC563JNWOx
kfPXz1Hd8eYpGzk7tbAYC3fYyE0RK+zC563JNWOxkfPXz1Hd8eYpGzk7tbAY
C3em3shtNpumaV791aF93AKFXfi8NblmrOFWr8COO2H7Oao73jxVdoeNHO6Y
iKXljtyv1WqVrrDb7V6fSNAChV34vDW5ZqzU5KnVU8NLRnKMHXfC9nNUd7x5
quwOGzncMRFLy51R/EoX6XuNiTxpy+Uyc3iaseQ3ioJ5iZvBZg5V5zWGUKnJ
+xaO0vEcMOJO2H6O6o4rT/fq7qj2s6taGI2FOwJ3Ms/J4UzP+aSMXT3Ttu3J
MWjGEt4oyuYlawazOVSd1/mfVSgaT85l6efJ627XHT+edii7o9rPfmphNxbu
TP2M3PB1hEl7enrqkpYzTs1YwhtF2bxkzWA2h6rzOr9QRePJuSz9PHnd7brj
x9MOZXdU+9lPLezGwp3QG7n9888MU9JyPk1PM5b8R/cF8xI3g80cqs5LRaj8
8eRcln62UHej7rjydK/ujmo/u6qF0Vi4E3Qjt91u27btMpZI2+CTY9CMVX2j
qJlXbTMYz6HqvM4pVMV4ci5LP09Yd+vuePD0GGV3VPvZQy2sx8IdMxu5V5+1
q07a4QeY19fX536IsSJW9Y2iZl61zWA8h6rzEguV2rtPlorxHGPBnbD9HNUd
D54e0HdHtZ891MJ6LNwpd6fonEzSHGez2cvH/4S738fHx/zfxdCMJfyOr2xe
su+MzOZQdV4yoVK41N598laM5xgL7oTt56juePC0YxJ3VPvZQy2sx8Kdcnfy
zynl5fvoVN/Zwnu3fL3Px887kUZ8kWkf07oTtp+juuPH00nc4T1yuGMi1vnd
UfBr/5y0osNLrOR+0SGa1+Kh6BDF0qyX5rwUY40F/eyr7lHvdR7dUe3noLXA
HV/1AgAAAAAAAAAAgGn5D41vjSA=
    "], {{0, 33.}, {501., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{501., 33.},
  PlotRange->{{0, 501.}, {0, 33.}}]], "Output",
 CellLabel->"Out[42]=",
 CellID->7503357,ExpressionUUID->"90ddec0e-6240-45be-961c-2715ae369df2"]
}, Open  ]],

Cell["Here is the count.", "TechNoteMathCaption",
 CellID->288178981,ExpressionUUID->"2717d955-37d1-48ef-844a-e8fe2b22ce5a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EnumerateMultisetPartialDerangements", "[", "subsetRandomMultiset", 
  "]"}]], "Input",
 CellLabel->"In[43]:=",
 CellID->153664891,ExpressionUUID->"d42a5e1f-865f-4a6a-a549-ec42ca8f66c4"],

Cell[BoxData["6"], "Output",
 CellLabel->"Out[43]=",
 CellID->20629447,ExpressionUUID->"545060aa-00df-4b9d-8897-8735c140f3c5"]
}, Open  ]],

Cell["\<\
List partial derangements with 3 points, then take the length.\
\>", "TechNoteMathCaption",
 CellID->669234462,ExpressionUUID->"de0c5ad6-439b-4c27-86aa-fd4ea4668638"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"MultisetPartialDerangements", "[", 
   RowBox[{"subsetRandomMultiset", ",", "3"}], "]"}], "]"}]], "Input",
 CellLabel->"In[46]:=",
 CellID->223182031,ExpressionUUID->"5774c222-d31f-41ba-b064-1d0b0e847e68"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
db7IziIq5qJ2PxudL/lBLl92fPfc7/evj9sJT9qXy2X5+xp/0pKdtOO0StZl
tIfCT0vK1DXh5Jy9fWFJGM8zZCdfXUU9ZnW+yM4iKuaidj8bnS/hQS5rdhZ4
fWed63nUJVF3PY+6RFol6zLaQ+fbqOuNdeV+GeOshNV5L1lXUY9ZnS+ys4ii
uYjTYo979x5XIDsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFTIMQ9M0bdu+eyAA6zN525k8x83J
DhiG7ACkkTU7PsW+719//nn8GXVJxvD54xh1qdEq2MPjH59Rl5a65PPl7O1M
LhmDD7JjIzsl69KVU7KjMTu6PBahpWr9yZedWQ6Hw+zP3dhu3e/ASz5Bt19d
4CUPVDmtgj10eezOt8BLHl5d3vCZXAjZsZGdknWpyynZUZcddR4L1dK2/mTK
TpSW2QnSZoZACC8HObJTf13qckp21GVHncdCtbStPxzkbASKg1wl3mAzIjuV
1KUup2RHXXbUeSxUS9v6w0HORqA4yFXiDTYjslNJXepySnbUZUedx0K1tK0/
HORsBIqDXCXeYDMiO5XUpS6nZEdddtR5LFRL2/pT5iDX933btrNfHRoNT5A2
MwRCeBfma9nqCZAdS9lhk13oIdlRlx11HgvV0rb+rJ6dWc7ns1O53++z/2p2
grSZIRDCuzBfzuTO6s7wkpE8Q3YsZYdNdqGHZEdddtR5LFRL2/qzenZ8OCHf
q07khZxOp8AS5BNUqVbBHsrDW2ddq4TXmdy3ccSO5wHZMZOdknXpyulIdhRm
R5fH6uxhtdnxkelZBTfCjy+6rvt2DMIJqlerYA+F4a22rgLPyEWNJ+S2ivpT
r5bRHirK6QTZUZcdRR6rtoc1ZydKS1jI9XqdBhnyvJ9wgurVKthDYXirravA
QS5qPCG3VdSferWM9lBRTifIjrrsKPJYtT2sOTtRWvJCmqZxgwz5a3ryzbpS
rYI9lH+cXmddZb61Gj6ekNvq6k+lWkZ7qCunI9lRmB1dHquzhzVnJ0oruZBh
GLqum0bocMfOb8eQPEG1axXsYXJ4K68r60EuYTwht1XRn9q1jPZQRU6fITvq
sqPCY5X3sObs+LRmn8dLLuTxgeFut8v9EGPtWgV7mBzeyuuSH+ScvX2BShjP
M2THRnZK1qUipw/IjsbsqPBY5T2sOTu+e+73+9fH7YQn7cvlsvx9jT9pyU7a
9WoV7KHwt7Bq6xIe5Jycs7cvLAnjeYbs2MhOybpU5HSC7CjNjgqPVd7DmrOz
wOs761b5aDGQou+H0fYumkB4d9DsfOV+GeOshKL+1KtltIeKckp2lGZHkcfi
tPSsPwWyE4gbW9Ql0vpxjLrUaBXsoctj1KWlrpLztRZW+2M1OyXrsprTtbA6
73hM2XwpzA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAgCWGYWiapm3bdw8EYH0mbzuT57g52QHDkB2ANLJm
x6fY9/3rz83+MVyjWmb/ULJYy9nbmVwyBh9byw4e0zVfci2yozI7Rv+4vK66
8mVnlsPhMPtzN7Zb9zvwkk/Q7VcXeMkXN5NaLvvd+RZ4yTfZct5YQ8tnciFb
yw4e0zVfq2iRHX3ZKekxo/NV874TpWV2goxqsclykMNjCrS0rT9kR192tB14
rNbFQa7yxa1CLTZZDnJ4TIGWtvWH7OjLjrYDj9W6OMhVvrhVqMUmy0EOjynQ
0rb+kB192dF24LFaFwe5yhe3CrXYZDnI4TEFWtrWH7KjLzvaDjxW6ypzkOv7
vm3b2a8OjYYnyKgWm+yC1rLVE9hmdvCYrvlaRYvs6MuOtgOP1bpWz84s5/PZ
qdzv99l/NTtBRrXYZBe0nMmd1Z3hJSN5ZpvZwWO65msVLbKjLzvaDjxW61o9
Oz6ckO9VJ/JCTqdTYAnyCUJLvlBE1FXSG2sEypnct3HEjufBBrODx3TN1yob
H9nRl52SHjM6X9XuOz4yPavgRvjxRdd1345BOEFojeKFIq6ukt7I/6xC1HhC
bms1O3hM13wVeEaO7NSYnZIeMzpfNe87UVrCQq7X6zTIkOf9hBOE1iheKOLq
KumN/IGKGk/Iba1mB4/pmq8CBzmyU2N2SnrM6HzVvO9EackLaZrGDTLkr+nJ
Fxy05B/dR9RV0htFvj0UPp6Q21rNDh7TNV9lvrVKdqrLTkmPGZ2vmvedKK3k
QoZh6LpuGqHDHTu/HUPyBKH1IHmhSKmrpDdyBiphPCG3tZodPKZrvrIe5MhO
vdkp6TGj81XzvuPTmn0eL7mQxweGu90u90OMaD1IXihS6irpDXGgnL19gUoY
zzNbyw4e0zVf8oMc2VGZnZIeMzpfNe87vnvu9/vXx+2EJ+3L5bL8fY0/aclO
2miN4t/44uoq6Q1ZoJycs7cvLAnjeWZr2cFjuuZLeJAjO1qzU9JjRuer5n1n
gdd31q3y0WIgRd8PY1SLd3zNauV+GeOshNXs4DFd8yXUIjtas6PtfWv26iqQ
nUDc2KIukdaPY9SF1isu+1GXqK6S3iiotRZWs4PHdM1XSa21sDoXRbNT0mNG
50vjvgMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAADwdoZhaJqmbdt3DwRgfSZvO5PnuDnZAcOQHYA0
smbHp9j3/evPP48/oy7JGI5/fEZdEq2SdX3+OEZdarRU9dDZ25lcMgYfm8sO
HttYXWRHZXasapXMjlgrX3ZmORwOsz93Y7t1vwMveaC68y3wkh/kitXlfHv7
1QVe8kCV09LWQ5/JhWwuO3hse3WRHX3ZsapVMjtraGXKTpSW2UBpW0hr1NLW
QzYjfZuRNo9ZrYvs6MuOVS0Ocn42FyhtC2mNWtp6yGakbzPS5jGrdZEdfdmx
qsVBzs/mAqVtIa1RS1sP2Yz0bUbaPGa1LrKjLztWtTjI+dlcoLQtpDVqaesh
m5G+zUibx6zWRXb0ZceqFge5Ofq+b9t29qtDo+FAaVtIa9TS1sNlqyew0ezg
se3VRXb0ZceqlraD3OrZmeV8PjuV+/0++69mA6VtIa1RS1sPncmd1Z3hJSN5
ZqPZwWPbq4vs6MuOVS1tB7nVs+PDCfledSIv5HQ6BZYgD1S4Vsm65CavVEtV
D8evl1b5No7Y8TzYYnbw2MbqGsmOxuxY1SqZnTUOcjmy4yPTswpuhB9fdF33
7RiEgYrSKlmX0OT1aunp4cTyswpR4wm5rdns4LEt1TVBdvRlx6pWyezkf0Yu
OTtRWsJCrtfrNMiQ5/2EgYrSKlmX0OT1aunp4cSyUNR4Qm5rNjt4bEt1TZAd
fdmxqlUyO/kPcsnZidKSF9I0jRtkyF/Tk3/EHa5Vsi75QlqplqoejgHfHgof
T8htzWYHj22srpHsaMyOVa2S2SnyrdW07ERpJRcyDEPXddMIHe7Y+e0YkgOV
oFWyrmST166loYfP+EyeMJ6Q25rNDh7bRl3PkB192bGqVTI7OQ9ywuz4tGaf
x0su5PGB4W63y/3QaYJWybqSTV67loYePnD29gUqYTzPbC47eGwbdT0gOyqz
Y1WrZHbEB7l82fHdc7/fvz5uJzz9Xi6X5e9rPCP8zShKq2Rdwt9W6tXS0MMJ
J+fs7QtLwnie2Vx28Ng26pogO1qzY1WrZHZkB7ms2Vng9Z11bmxRl0TdZSTq
kmiVrMv5NupSo6Wnh7lfxjgrYTY7eGxLdZEdrdmxqlUyOzKtAtkBAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAqJBhGJqmadv23QMBWJ/J287kOW5OdsAwZAcgjazZ8Sn2ff/6888f
x6hLMobP48+oS42W1R4WrOv4x2fU9XoHZ29ncskYfJAdPBZdl6oekh2yU4+W
rpzmy84sh8Nh9ueu57dfXeAlD9St+x14yQNVTstqDwvW5fLYnW+Bly+8PpML
ITt4LLoubT0kO2SnEi11Oc2UnSgtAqUsUEbr4iC3DNmpxGOhdWnrIdkhO5Vo
qcspBzkCRV0THOSWITuVeCy0Lm09JDtkpxItdTnlIEegqGuCg9wyZKcSj4XW
pa2HZIfsVKKlLqcc5AgUdU1wkFuG7FTisdC6tPWQ7JCdSrTU5bTMQa7v+7Zt
Z786NBIodYEyWtcq4V22egJkB48l1qWth2SH7FSipS6nq2dnlvP57FTu9/vs
vxIoZYEyWtcq4XUmd1Z3hpeM5Bmyg8cS69LWQ7JDdirRUpfT1bPjwwn5XnUi
n6DT6RRYgrxplWpZ7WHBulYJrzO5b+OIHc8DsoPHUupS1cOR7JCdarR05XTM
kx0fmZ5VcCP8+KLrum/HIGxavVpWe1iwrgLPyEWNJ+S2Zucdj815zGoPJ8gO
2alES1FOJzJlJ0pLOEHX63UaZMjzfsKm1atltYcF6ypwkIsaT8htzc47Hpvz
mNUeTpAdslOJlqKcTmTKTpSWfBFomsYNMuSv6cmbVqmW1R4WrKvMt1bDxxNy
W7Pzjsc8HrPaw5HskJ1qtHTldMyWnSit5AkahqHrummEDnfs/HYMyU2rXctq
DwvWlfUglzCekNuanXc89mePWe3hM2SH7FSipSKnz2TKjk9r9nm85Al6fGC4
2+1yP1hYu5bVHhasS36Qc/b2BSphPM+QnY17zGoPH5AdslOPloqcPsiXHd89
9/v96+N2wpP25XJZ/r7Gn7Rkv63Uq2W1hwXrEh7knJyzty8sCeN5huxs3GNW
ezhBdshOVVoqcjqRNTsLvL6zzvU86pKouz5EXWq0rPawYF0uj1HX3/2/534Z
46yE2XnHY3Mei6tLTw/JDtmpSktRTgtkBwAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKBChmFomqZt
23cPBGB9Jm87k+e4OdkBw5AdgDSyZsen2Pf9688/fxyjLskYPo8/oy60ZrQK
ztfxj8+o6711OXs7k0vG4IPs5NMq6jGjOSU7y5idd6Nrgq49Ll92ZjkcDrM/
d324/eoCL7nxbt3vwEtuPJtaBefL+bY73wIv+UFOXpfP5ELITj6toh4zmlOy
s4zZeTe6Jqjb4zJlJ0oL4ynT0mbyknWxGanzMwc5DnKmsmO1LqM95CCXgFnj
YXIOcmQnCQ5yHORMZcdqXUZ7yEEuAbPGw+Qc5MhOEhzkOMiZyo7Vuoz2kINc
AmaNh8k5yJGdJDjIcZAzlR2rdRntoaKDXN/3bdvOfnVoxHjqtLSZvGRdy1ZP
gOxwkEvU0naQIzv65t3omqBuj1s9O7Ocz2encr/fZ/8V4ynT0mbyknU5kzur
O8NLRvIM2eEgl6il7SBHdvTNu9E1Qd0et3p2fDgh36tO5E07nU6BJcjNgFbJ
+ZKbvGRd49dLq3wbR+x4HpCdrFpFPWY0p2RnGbPzbnRN0LXHjXmy4yPTswpu
hB9fdF337RiEZkBrLDtfQpOXrGti+VmFqPGE3JbsyLWKesxoTsnOMmbn3eia
oGiPm8iUnSgtYdOu1+s0yJDn/YRmQGssO19Ck5esa2JZKGo8IbclO3Ktoh4z
mlOys4zZeTe6Jija4yYyZSdKS74INE3jBhny1/TkH8+iVXK+5CYvWdcY8O2h
8PGE3JbsyLWKesxoTsnOMmbn3eiaoGuPG7NlJ0oruWnDMHRdN43Q4Y6d344h
2Qxo/U2r4Hwlm7xkXc/4TJ4wnpDbkh25VlGPGc0p2VnG7LwbXRNU7HHPZMqO
T2v2ebzkpj0+MNztdrkfmETrb1oF5yvZ5CXreuDs7QtUwnieITv5tIp6zGhO
yc4yZufd6JqgYo97kC87vnvu9/vXx+2Ep9/L5bL8fY0/aclO9WiNZedL+GlJ
mbomnJyzty8sCeN5huzk0yrqMaM5JTvLmJ13o2uCij1uImt2Fnh9Z13Jd7YU
fReNVS1t79gpU1fulzHOSpAduRbvkVvBG2RnEbPzbnRNULTHFchOIK4PUZdI
6/gz6kJrRqvgfDnfRl1a6loLsiPXKuoxozklO99oWZ13o2uC1T0OAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AABeGYahaZq2bd89EID1mbztTJ7j5mQHDEN2ANLImh2fYt/3rz83+0d+jdbF
Hxn3zZeztzO5ZAw+yA51xaIrp2QHj31Tl9Ee1pydWQ6Hw+zPXR9uv7rAS960
W/c78JKbwWRdLo/d+RZ4ycOra758JhdCdqgrFnU5JTt4bKkuoz2sOTtRWuqa
FqpltC7Cy0FOxVxsvC51OSU7eGypLqM9rDk7UVrqmhaqZbQuwstBTsVcbLwu
dTklO3hsqS6jPaw5O1Fa6poWqmW0LsLLQU7FXGy8LnU5JTt4bKkuoz2sOTtR
WuqaFqpltC7Cy0FOxVxsvC51OSU7eGypLqM9rDk7f0ff923bzn51aFTYtFAt
o3UR3oX5WrZ6AmSHutJQl1Oyg8eW6jLawzqzM8v5fHYq9/t99l/VNS1Uy2hd
hHdhvpzJndWd4SUjeYbsUFca6nJKdvDYUl1Ge1hndnw4Id+rTuRNO51OgSXI
mxahZbQueXjrrGuV8DqT+zaO2PE8IDvUlaClK6cj2cFjy3UZ7WG12fGR6VkF
N8KPL7qu+3YMwqbFaRmtSxjeausq8Ixc1HhCbmvVY9Qlr0tRTifIDh5bqsto
D2vOTpSWsGnX63UaZMjzfsKmxWkZrUsY3mrrKnCQixpPyG2teoy65HUpyukE
2cFjS3UZ7WHN2YnSkm+gTdO4QYb8NT150yK0jNYl/zi9zrrKfGs1fDwht7Xq
MeqS16UrpyPZwWPLdRntYc3ZidJKbtowDF3XTSN0uGPnt2NIblqKltG6ksNb
eV1ZD3IJ4wm5rVWPUZe8LhU5fYbs4LEN9rDm7Pi0Zp/HS27a4wPD3W6X+8HC
FC2jdSWHt/K65Ac5Z29foBLG8wzZoS6TOX1AdvDYNntYc3Z899zv96+P2wlP
v5fLZfn7Gn/Skp3q47SM1iX8LazauoQHOSfn7O0LS8J4niE71GUypxNkB499
X5fRHtacnQVe31mn7p0toVpG6+LdQbPzlftljLMSVj1GXfK6FOWU7OCx7+sy
2sP6sxOI60PUJdI6/oy6qOsVl8eoS0tdJedrLax6jLrkdVnN6VrgMTzm1TLq
DQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAzDMPQNE3btu8eCMD6TN52Js9xc7IDhiE7AGlkzY5P
se/7159//jhGXZIxfB5/Rl0irZJ1FdQ6/vEZdYnqKjlfYi1nb2dyyRh8bC07
eGxr6w/ZUZkdoz3UVVe+7MxyOBxmf+76cPvVBV7ypt2634GX3Azl6iqo5bLf
nW+Bl3yTLTdfa2j5TC5ka9nBYxtcf8iOvuwY7aG6ujJlJ0pLXdNCtbQtpIGw
yXKQM7UZafNYqJa29Yfs6MuO0R6qq4uDnBEzcJCrY5NlM9K3GWnzWKiWtvWH
7OjLjtEeqquLg5wRM3CQq2OTZTPStxlp81iolrb1h+zoy47RHqqri4OcETNw
kKtjk2Uz0rcZafNYqJa29Yfs6MuO0R6qq6vMQa7v+7ZtZ786NCpsWqiWtoU0
EDbZBa1lqyewzezgsQ2uP2RHX3aM9lBdXatnZ5bz+exU7vf77L+qa1qolraF
NBA22QUtZ3JndWd4yUie2WZ28NgG1x+yoy87Rnuorq7Vs+PDCfledSJv2ul0
CixB3rQIrZJ1FdSSLxSVztcagXIm920cseN5sMHs4LGtrT8j2dGYHaM91FXX
mCc7PjI9q+BG+PFF13XfjkHYtDitknUV1BIuFPXOV/5nFaLGE3Jbq9nBY5ta
fybIjr7sGO2horomMmUnSkvYtOv1Og0y5Hk/YdPitErWVVBLuFDUO1/5AxU1
npDbWs0OHtvU+jNBdvRlx2gPFdU1kSk7UVryRaBpGjfIkL+mJ29ahFbJugpq
yT+6r3S+inx7KHw8Ibe1mh08trX1ZyQ7GrNjtIe66hqzZSdKK7lpwzB0XTeN
0OGOnd+OIblpKVol6yqolbxQ1D5fOQOVMJ6Q21rNDh7byPrzDNnRlx2jPVRR
1zOZsuPTmn0eL7lpjw8Md7td7gcLU7RK1lVQK3mhqH2+xIFy9vYFKmE8z2wt
O3hsI+vPA7KjMjtGe6iirgf5suO7536/f33cTnj6vVwuy9/X+JOW7FQfp1Wy
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
EJeRqEui5foQdanR+nGMutRoGe3hWpjNDh6jrsyQHWV7gdXsFNQCAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAMMMwDE3TtG377oEArM/kbWfyHDcnO2AYsgOQRkh21s2Xu1vf968/
P/7xGXVJxvD54xh1ibSOP6Mu6nqzlriHzt7O5JIx+NhcdvCzLi2ys4jZ7JDT
CrRCsrNivg6Hw+zPXUa68y3wkgfq9qsLvOTGu3W/Ay/5QmqzLm099JlcyOay
g591aZGdRcxmh5zWoRWSnbXytblAaVtIa6xLWw/ZjNggtqhFdhYxmx1yWocW
BzkjxrNal7YeshmxQWxRi+wsYjY75LQOLQ5yRoxntS5tPWQzYoPYohbZWcRs
dshpHVoc5IwYz2pd2nrIZsQGsUUtsrOI2eyQ0zq0yhzk+r5v23b2q0Oj4UBp
W0hrrEtbD5etnsBGs4OfdWmRnUXMZoec1qEVkh15vs7ns7vD/X6f/VezgdK2
kNZYl7YeOpM7qzvDS0byzEazg591aZGdRcxmh5zWoRWSnVXy5W7ie42JPFCn
0ylweHLjRWiJJ4i6dPVw/HpplW/jiB3Pgy1mBz/r0iI7i5jNDjmtQGsMyE7g
fxNCpmcVXMc+vui67tsxCI0XpyWbIOoqrZX/OZ+o8YTc1mx28LMuLbKziNns
kNN3a00Y+LLD9XqdmhYyTqHx4rRkE0RdpbXyb0ZR4wm5rdns4GddWmRnEbPZ
Iafv1powcJAbvz4zdE0L+Wt68gUnQks8QdSlq4djQFjCxxNyW7PZwc+6tMjO
ImazQ04r0BqVH+SGYei6buqYwx2Dvx1DsvFStFIniLp09fAZn8kTxhNyW7PZ
wc+6tMjOImazQ07fp/VM4YPc7LN2yYF6fIC52+1yP5yZopU6QdSlq4cPnL19
YUkYzzObyw5+1qVFdhYxmx1y+j6tBwvZifpvAnE17vf718f/hL8ZXS6X8O9i
CH+DiNOSneqpq7SWbDNycs7evvAmjOeZzWUHP+vSIjuLmM0OOX2f1sRydsL/
m1he30fnMhJ1SdSdl6IukdbxZ9RFXW/WkvVwxReZ+thQdvCzLi2ys4jZ7JDT
d2uFZKdAvgAAAAAAAAAAACCE/weqeMUk
    "], {{0, 261.}, {501., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{501., 261.},
  PlotRange->{{0, 501.}, {0, 261.}}]], "Output",
 CellLabel->"Out[46]=",
 CellID->108341859,ExpressionUUID->"26c24063-b193-4e25-8705-ca95c0f121ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"MultisetPartialDerangements", "[", 
   RowBox[{"subsetRandomMultiset", ",", "3"}], "]"}], "]"}]], "Input",
 CellLabel->"In[47]:=",
 CellID->34464176,ExpressionUUID->"c098d751-1693-4fc3-9352-3e59c81c281a"],

Cell[BoxData["45"], "Output",
 CellLabel->"Out[47]=",
 CellID->192324916,ExpressionUUID->"5080876d-b876-43a6-9d4f-88603f1c342b"]
}, Open  ]],

Cell["\<\
If we compute partials derangements with 3 fixed points, we will get 101 \
elements.\
\>", "TechNoteMathCaption",
 CellID->211204775,ExpressionUUID->"191491d7-28ae-49d2-b280-5df059491014"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EnumerateMultisetPartialDerangements", "[", 
  RowBox[{"subsetRandomMultiset", ",", "3"}], "]"}]], "Input",
 CellLabel->"In[44]:=",
 CellID->16120653,ExpressionUUID->"8e17bd8e-879f-4b57-9eb8-7a3d90d9b447"],

Cell[BoxData["45"], "Output",
 CellLabel->"Out[44]=",
 CellID->16473884,ExpressionUUID->"6f78bde4-a1c7-4ee4-9bde-c54a62434147"]
}, Open  ]],

Cell["\<\
I will limit the output to 20 this time. This is the third argument.\
\>", "TechNoteMathCaption",
 CellID->103140816,ExpressionUUID->"45da4802-5986-4cc2-b868-0661601cf182"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"MultisetPartialDerangements", "[", 
   RowBox[{"subsetRandomMultiset", ",", "3", ",", "20"}], "]"}], 
  "]"}]], "Input",
 CellLabel->"In[48]:=",
 CellID->217632446,ExpressionUUID->"52cd852c-e0a5-43fb-8c93-eca7b7b5cb59"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
S62lwM/4WYVWQ28AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAMAj4zhut9uu6549EIDluXo7mLzGzckOOIbs
AJRRNTtzisMwPH6dP168wB8vbjmHXv94sVgr2DuYXDKGOVRkx+kfkqYueV3y
vY7s4LE4nKftz51JNpvN5NfDPJz674mXdNIaagUv9ftT4iU3Xrs5fH87fesT
L3lzZUtrzuRCVGSn5VpQl6m6FtnryA4ei8B52v7cydKikXtB43nV4jDiMHrB
umjk4uAxJR5LrcvaHNLI0chla1lrrlpqcRhxGL1gXTRycfCYEo+l1mVtDmnk
aOSytaw1Vy21OIw4jF6wLhq5OHhMicdS67I2hzRyNHLZWtaaq5ZaHEYcRi9Y
F41cHDymxGOpdVmbwzaN3DAMXddNfnToQiP3ksbzqhW3egGKssNhRF0zLLLX
kR08FoHztOW5M8l+vw8q5/N58l9p5F7QeF61gsmD1YPhJSO5R1F2OIyoa4ZF
9jqyg8cicJ62PHfmCEJzrzqRT9put0ssoaWW3Hg665Ibz6vW5cdLq+YOjtzx
3NCSnZZrQV2m6lrkkCU7eCwC52njc2eOSs8qhBF++UHf95+OoaWW0Hhq6xIa
z6vWlfizClnjSbmt23WnLlN1NXhGjuzgMc7TxudOlpZw0o7H43WQKc/7tdQS
Gk9tXULjedW6EhfKGk/Kbd2uO3WZqqtBI0d28BjnaeNzJ0tL/mvM7XYbBpny
1/Raask3N511yY3nVeuS8Omh9PGk3NbtulOXqbrafGqV7OAxztPJm1TKTpZW
8aSN49j3/XWEgdB2fjqGllrFxlNeV7HxvGrdM2fygvGk3NbtulOXqbqqNnJk
B49dOE+fce7MaU0+j1c8abdfGK5Wq9oPMRZoFRtPeV3FxvOqdSPYey5QBeO5
R0V2Wq4FdZmqS97IkR08FofztP25M3fP9Xr9+LidsPs9HA7xz2s8S0v4E4Ta
uoQ/hfnTuhLkgr3nwlIwnntUZKflWlCXqbqEjRzZwWOfwnna/tyJ8PjOuqbv
bOE9cjree+NPq/bLGCcl3K47dZmqS7jXkR089imcp886dxIJ85B1WdEKXsq6
rNQVvJR1oVUPt+tOXabqarnXLYXXtfBaF+epnnMHAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4OmM
47jdbruue/ZAAJbn6u1g8ho3JzvgGLIDUEbV7MwpDsPw+PWPt9+zLskYPt7f
si6Rlte6Gmq9ff3IukR1idcr2DuYXDKGOchOxbqczmHT7IjrIjsWs2Nrf87Q
MnWe1svOJJvNZvLrYc5P/ffES75Ap2994iUPlM+6GmqF7Pf7U+Il3yjk6zVn
ciFkp2JdTuewaXaWqIvsmMuOuf05VcvaeVopO1labhfIa11eDyMauShus+N0
Dmnk4rf1uu40csbWS3F2srTcLpDXurweRjRyUdxmx+kc0sjFb+t13WnkjK2X
4uxkabldIK91eT2MaOSiuM2O0zmkkYvf1uu608gZWy/F2cnScrtAXuvyehjR
yEVxmx2nc0gjF7+t13WnkTO2Xoqz8xPDMHRdN/nRoYvjBfJal9fDaIn1ilu9
ALJDI1eGuUaO7JjLjrn9OVXL2nm6eHYm2e/3QeV8Pk/+q9sF8lqX18NoifUK
Jg9WD4aXjOQeskMjV4a5Ro7smMuOuf05Vcvaebp4duYIQnOvOpEv0G63SyxB
PmkZWl7raqgl3yhartflx0ur5g6O3PHcIDt163I6h02zs8RhRHbMZcfW/qx0
vbRmZ45KzyqEEX75Qd/3n45BOGl5Wl7raqgl3CharteV+LMKWeNJua1bj7Ws
y+kcNs1O/ed8yI5CPxvan/Wul+LsZGkJF+h4PF4HmfK8n3DS8rS81tVQS7hR
tFyvK3GhrPGk3Natx1rW5XQOm2an/mFEdhT62dD+rHe9FGcnS0t+gG632zDI
lL+mJ5+0DC2vdTXUkv/qvuV6XRI+PZQ+npTbuvVYy7qczmHT7DT55B3Z0eZn
W/uz0vVSnJ0sreIFGsex7/vrCAOh7fx0DMWTVqLlta6GWsUbRcv1umfO5AXj
SbmtW4+1rMvpHDbNTs3DiOyo9bOJ/Vn7einOzpzW5PN4xQt0+4XharWq/WBh
iZbXuhpqFW8ULdfrRrD3XKAKxnMP2alYl9M5bJod8WFEdixmx8T+rH29FGdn
7p7r9frxcTthp304HOKf1/iDlqzTztPyWldDLeFPfG3W60qQC/aeC0vBeO4h
OxXrcjqHTbMjO4zIjtHsmNifta+X4uxEeHxnXZjzrEuiHuYh6xJpea2roVbI
ftYlqku2XrVfxjgp4dZjLetyOodNsyOri+wYzY6h/TlPy8552iA7AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAoZx3G73XZd9+yBACzP1dvB5DVuTnbAMWQHoIyq2ZlTHIbh8esf
b79nXZIxfLy/ZV1mtFrOodP1evv6kXU93iHYO5hcMoY5yI6P7Mg9prMu+XqR
HbKjpy5bOa2XnUk2m83k18PYTv33xEtuhtO3PvGSB6qdVss5dLpeIY/9/pR4
zYV3zuRCyI6P7CziMYV1LbJeZIfsKKnLXE4rZSdLy6sZ3AbK6XrRyMUhOzRy
s1o0clHIjq05NJdTGjkCpVrLWng5jMhOBHMHRKoWjVwUsmNrDs3llEaOQKnW
shZeDiOyE8HcAZGqRSMXhezYmkNzOaWRI1CqtayFl8OI7EQwd0CkatHIRSE7
tubQXE7bNHLDMHRdN/nRoYtfM7gNlNP1WiS8casXQHY8ZcfcAZGqtcR6kR2y
o6QuczldPDuT7Pf7oHI+nyf/1asZ3AbK6XotEt5g8mD1YHjJSO4hO56yY+6A
SNVaYr3IDtlRUpe5nC6enTmC0NyrTuSF7Ha7xBLkZlCq1XIOna7XIuENJp87
OHLHc4PsuMmO3GM661rkkCU7ZEdJXbZyeqmTnTkqPasQRvjlB33ffzoGoRn0
arWcQ6fr1eAZuazxpNzW61p4zY7QY2rravCMHNnRqOV0Dg3l9Eql7GRpCQs5
Ho/XQaY87yc0g16tlnPodL0aNHJZ40m5rde18JodocfU1tWgkSM7GrWczqGh
nF6plJ0sLXkh2+02DDLlr+nJNxylWi3n0Ol6tfnUavp4Um7rdS28ZkfuMZ11
tfnUKtlRp+V0Dm3l9FItO1laxYWM49j3/XWEgdB2fjqGYjNo12o5h07Xq2oj
VzCelNt6XQuv2Sn2mPK6qjZyZEevltM5NJHTeyplZ05r8nm84kJuvzBcrVa1
H5jUrtVyDp2ul7yRC/aeC1TBeO4hOz6yU+wx5XXJGzmyQ3b01GUipzfqZWfu
nuv1+vFxO2FXfzgc4p/X+IOWrKvXq9VyDp2ul7CRC3LB3nNhKRjPPWTHR3aE
P+mrrUvYyJEdsqOqLhM5vVI1OxEe31m3yK8WE2n5LpqmWrxH7tnvDqr9MsZJ
Ca9r4TU75t5PlaolWy+yQ3ZU1WUopw2yk0gYW9Yl0np/y7rMaLWcQ6frFfKY
dUm0lsLrWnjNTkuPefXGUnidH6/Z8XoWtJxDAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4ZBzH7Xbbdd2z
BwKwPFdvB5PXuDnZAceQHYAyqmZnTnEYhseve/3Du/yRX2PrJa4r2DuYXDKG
OciODy23OSU7UfCYBo9laJnaf+plZ5LNZjP59TDnp/574iVfoNO3PvGSL1Az
rZDHfn9KvOTh9bleS9Q1Z3IhZMeHltuckp0oeEyJx1K1rO0/lbKTpcUCEd5Z
LRq56G3droVTLbc5JTtR8JgSj6VqWdt/aOSUL1AibsNLIxe9rdu1cKrlNqdk
JwoeU+KxVC1r+w+NnPIFSsRteGnkord1uxZOtdzmlOxEwWNKPJaqZW3/oZFT
vkCJuA0vjVz0tm7XwqmW25ySnSh4TInHUrWs7T9tGrlhGLqum/zo0IUFIrwR
LWuNXNzqBZAdT1puc0p2ouAxJR5L1bK2/yyenUn2+31QOZ/Pk//KAhHeWS1r
jVwwebB6MLxkJPeQHU9abnNKdqLgMSUeS9Wytv8snp05gtDcq07kC7Tb7RJL
kE+aTi15eDPq8rpeS2wUweRzB0fueG6QHTdabnNKdqLgMQ0e07leizRyNbIz
R6VnFcIIv/yg7/tPxyCcNLVawvDm1eV1veo/55M1npTbul0Lp1puc0p2ouCx
p3tM7Xo1eEauODtZWsIFOh6P10GmPO8nnDS1WsLw5tXldb3qH0ZZ40m5rdu1
cKrlNqdkJwoee7rH1K5Xg0auODtZWvJNYLvdhkGm/DU9+aTp1JL/Oj2jLq/r
1eSTd+njSbmt27VwquU2p2QnCh7T4DGd69XmU6tl2cnSKl6gcRz7vr+OMBDa
zk/HUDxpyrWKw1tSl9f1qnkYFYwn5bZu18Kpltuckp0oeOyJHlO+XlUbOWF2
5rQmn8crXqDbLwxXq1XtBwuVaxWHt6Qur+slPoyCvecCVTCee8iODy23OSU7
UfDYEz2mfL3kjVy97Mzdc71ePz5uJ+y0D4dD/PMaf9CSddpqtYQ/heXV5XW9
ZIdRkAv2ngtLwXjuITs+tNzmlOxEwWNP9Jjy9RI2clWzE+HxnXW8H0au5fbd
QXbeI1f7ZYyTEm7XwqmW25ySnSh47Okey9Oys/80yE4iYc6zLpHW+1vWZUUr
5DHrEtXldb0a1rUUbtfCqZbbnJKduBYeM+Uxr/sPAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgBvG
cdxut13XPXsgAMtz9XYweY2bkx1wDNkBKCMlO8vmK9xtGIbHr3+8/Z51Scbw
8f6WdUm03r5+ZF1W6vK6XvK6gr2DySVjmENDdpr62avHTPm5ZV1kh7OAuupl
Z8F8bTabya+HeTj13xMv+aSdvvWJl9AMIY/9/pR4ycPbrC6v67VIXXMmF6Ih
O0397NVj1vzcsi6yw1lAXfWys1S+NASKRu4FTd6yLg4jGjktWtbmkOxwFlAX
jVwKNHIvaPKWdXEY0chp0bI2h2SHs4C6aORSoJF7QZO3rIvDiEZOi5a1OSQ7
nAXURSOXAo3cC5q8ZV0cRjRyWrSszSHZ4SygLs2N3DAMXddNfnToYnDSEiG8
ttZrkbriVi9AT3Zo5GjkqtZFdjgLqKteduT52u/34Q7n83m6EGuTlgjhtbVe
i9QVTB6sHgwvGck9erJDI0cjV7UussNZQF31srNIvsJN5l5jIp+03W6XODz5
pKVrycOrsy6v67VIeIPJ5w6O3PHcUJKdpn726jFTfm5Z14XscBZQV7XsJH5P
CpWeVQgz9uUHfd9/OgbhpGVpCcOrti6v69XgGbms8aTctuVaNPWzV4/Z8XPL
uq6QHc4C6qqRnfTvSaFSoI7H43XSUsYpnLQsLWF41dbldb0aNHJZ40m5bcu1
aOpnrx6z4+eWdV0hO5wF1PWyjdzlx+8Mw6Sl/DU9+aSla8l/na6zLq/r1eZT
q+njSblty7Vo6mevHjPl55Z1XcgOZwF1vWQjN45j3/fXGQuENvjTMRRPWoFW
cXiV1+V1vao2cgXjSblty7Vo6mevHrPg55Z13UN2OAuoy0QjN/msXfGk3X6B
uVqtaj9YWKBVHF7ldXldL3kjF+w9F5aC8dyjITtN/ezVYxb83LKuG2SHs4C6
Fs9O1vckEmpcr9ePj/8Ju9/D4ZD+WQxhV5+lJfwpTG1dXtdL2MgFuWDvufAW
jOceDdlp6mevHrPg55Z1XSE7nAXUVSM76d+Ty+P76MI8ZF0S9TAPWZdEK+Qx
67JSl9f1Eta14ItM53hudpr62avH7Pi5ZV1kh7OAuuplp0G+AAAAAAAAAAAA
IIX/A/i41Ng=
    "], {{0, 120.6}, {501., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{501., 120.6},
  PlotRange->{{0, 501.}, {0, 120.6}}]], "Output",
 CellLabel->"Out[48]=",
 CellID->707156688,ExpressionUUID->"79c0e06f-8644-4bf8-b64e-76a87f188fe1"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Multichoose", "TechNoteSection",
 CellID->399341884,ExpressionUUID->"9e280db4-c641-46b9-bcf5-4aa1fd810235"],

Cell["\<\
There are four candies: gummy bears, gummy worms, chocolate bars,and \
marshmallows. There are three children named Peter, James, and Andrew (after \
the apostles from the Bible). How many ways can the four candies be \
distributed among the four children?\
\>", "TechNoteMathCaption",
 CellID->469287308,ExpressionUUID->"54f27349-1ed0-4e77-9324-f274311a24bd"],

Cell["Let's list all the orderless combinations.", "TechNoteMathCaption",
 CellID->504481481,ExpressionUUID->"360f1035-1233-4d69-9ee5-347fba9babf7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"OrderlessCombinations", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<gummy-bears\>\"", ",", "\"\<gummy-worms\>\"", ",", 
      "\"\<chocolate-bars\>\"", ",", "\"\<marshmallows\>\""}], "}"}], ",", 
    RowBox[{"{", "3", "}"}]}], "]"}], "]"}]], "Input",
 CellLabel->"In[62]:=",
 CellID->204438902,ExpressionUUID->"da421a35-0363-4242-8f47-b3fb3dfdd164"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
AAAAAABgcf5/3uFAVg==
    "], {{0, 173.4}, {634.1999999999999, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{634.1999999999999, 173.4},
  PlotRange->{{0, 634.1999999999999}, {0, 173.4}}]], "Output",
 CellLabel->"Out[62]=",
 CellID->81764621,ExpressionUUID->"2ce3a670-c988-4fee-9212-c4508c56a204"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"OrderlessCombinations", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<gummy-bears\>\"", ",", "\"\<gummy-worms\>\"", ",", 
      "\"\<chocolate-bars\>\"", ",", "\"\<marshmallows\>\""}], "}"}], ",", 
    RowBox[{"{", "3", "}"}]}], "]"}], "]"}]], "Input",
 CellLabel->"In[50]:=",
 CellID->1607685,ExpressionUUID->"db4e61b9-e63c-4918-bb44-38468764fa68"],

Cell[BoxData["20"], "Output",
 CellLabel->"Out[50]=",
 CellID->162408320,ExpressionUUID->"1e237630-3784-4030-ac4d-85839ba26076"]
}, Open  ]],

Cell[TextData[{
 "We can compute 4 multichoose 3, written as ",
 Cell[BoxData[
  RowBox[{"(", 
   RowBox[{"(", GridBox[{
      {"4"},
      {"3"}
     }], ")"}], ")"}]], "Input",ExpressionUUID->
  "3d32e3af-3d88-4d7d-b982-c715b3570b96"],
 "."
}], "TechNoteMathCaption",
 CellID->418159723,ExpressionUUID->"bff5b926-f987-4c45-95f1-40dc1f0acecb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multichoose", "[", 
  RowBox[{"4", ",", "3"}], "]"}]], "Input",
 CellLabel->"In[51]:=",
 CellID->22090076,ExpressionUUID->"fc922e8d-de4b-444b-a0b4-a0d7ba1360ba"],

Cell[BoxData["20"], "Output",
 CellLabel->"Out[51]=",
 CellID->25208491,ExpressionUUID->"03d3e6fd-de1f-4bca-97d5-cd55c160ed03"]
}, Open  ]],

Cell["\<\
There are ten candies: licorice, peppermint drops, lemon drops, truffles, \
gummy bears, gummy worms, chocolate bars, jelly beans, peanut butter cups, \
and marshmallows. There are four children named Peter, James, John, and \
Andrew. How many ways can the ten candies be distributed among the four \
children?\
\>", "TechNoteMathCaption",
 CellID->305515986,ExpressionUUID->"b013918c-4a2e-4d17-a7cf-95b8954d4bdf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"OrderlessCombinations", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<licorice\>\"", ",", "\"\<peppermint-drops\>\"", ",", 
      "\"\<lemon drops\>\"", ",", "\"\<truffles\>\"", ",", 
      "\"\<gummy-bears\>\"", ",", "\"\<gummy-worms\>\"", ",", 
      "\"\<chocolate-bars\>\"", ",", "\"\<jelly-beans\>\"", ",", 
      "\"\<peanut-butter-cups\>\"", ",", "\"\<marshmallows\>\""}], "}"}], ",", 
    RowBox[{"{", "4", "}"}]}], "]"}], "]"}]], "Input",
 CellLabel->"In[52]:=",
 CellID->904920670,ExpressionUUID->"26072508-28bc-42dc-b7de-6fb8870399e8"],

Cell[BoxData["715"], "Output",
 CellLabel->"Out[52]=",
 CellID->18002359,ExpressionUUID->"d840c82f-1020-4e1a-80d6-96a7716a4d50"]
}, Open  ]],

Cell[" We can compute 10 multichoose 4.", "TechNoteMathCaption",
 CellID->572182296,ExpressionUUID->"91f0974b-b429-4dbb-b881-6b87bf991194"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multichoose", "[", 
  RowBox[{"10", ",", "4"}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`Combinatorics`"],
 CellLabel->"In[53]:=",
 CellID->39383660,ExpressionUUID->"5c6b411a-c055-443f-ae00-5fc1fa8600a2"],

Cell[BoxData["715"], "Output",
 CellLabel->"Out[53]=",
 CellID->481380362,ExpressionUUID->"74876ce8-9d83-443f-9730-f2689228a8ac"]
}, Open  ]],

Cell[TextData[{
 "Another way of entering it is like this is infix notation, written as ",
 Cell[BoxData[
  RowBox[{"(", 
   RowBox[{"(", GridBox[{
      {"10"},
      {"4"}
     }], ")"}], ")"}]], "Input",ExpressionUUID->
  "aa6bc2b0-88bb-4925-9e43-c2e61204c76c"],
 "."
}], "TechNoteMathCaption",
 CellID->17219148,ExpressionUUID->"dae02b5c-3d50-4dd7-bc42-cdfd6e4c3dac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"10", "~", "Multichoose", "~", "4"}]], "Input",
 CellProlog:>Needs["PeterBurbery`Combinatorics`"],
 CellLabel->"In[992]:=",
 CellID->47120929,ExpressionUUID->"e47033b7-c500-4939-9cfe-e88f155e3694"],

Cell[BoxData["715"], "Output",
 CellLabel->"Out[992]=",
 CellID->64792566,ExpressionUUID->"082d05bf-acdb-4c19-9f06-2e94a6ebe0f9"]
}, Open  ]],

Cell["\<\
We can also generate all the combinations and count them. Since there are a \
lot of combinations, I am not listing them all here and then using Length. \
I'm just going to use Length immediately.\
\>", "TechNoteMathCaption",
 CellID->14643919,ExpressionUUID->"44580e7e-41d4-4562-b481-a7ad60178081"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"OrderlessCombinations", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<licorice\>\"", ",", "\"\<peppermint drops\>\"", ",", 
      "\"\<lemon drops\>\"", ",", "\"\<truffles\>\"", ",", 
      "\"\<gummy bears\>\"", ",", "\"\<gummy worms\>\"", ",", 
      "\"\<chocolate bars\>\"", ",", "\"\<jelly beans\>\"", ",", 
      "\"\<peanut butter cups\>\"", ",", "\"\<marshmallows\>\""}], "}"}], ",", 
    RowBox[{"{", "4", "}"}]}], "]"}]}]], "Input",
 CellProlog:>Needs["PeterBurbery`Combinatorics`"],
 CellLabel->"In[993]:=",
 CellID->37517731,ExpressionUUID->"70ff0a6c-d458-42c7-8c99-5c6a9e50d3d8"],

Cell[BoxData["715"], "Output",
 CellLabel->"Out[993]=",
 CellID->530337700,ExpressionUUID->"71a3b817-6565-4275-9e5d-7ea2bdea12ae"]
}, Open  ]],

Cell["Get length four sets from a list of length two:", "TechNoteMathCaption",
 CellID->968157184,ExpressionUUID->"70cf6342-3c4b-4d2b-b269-ca7a19b464ff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OrderlessCombinations", "[", 
  RowBox[{
   RowBox[{"Range", "[", "2", "]"}], ",", 
   RowBox[{"{", "4", "}"}]}], "]"}]], "Input", "ExampleInput",
 CellLabel->"In[1015]:=",
 CellID->702446134,ExpressionUUID->"7ba54b35-ed04-4668-a272-06c024b4c6c9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[1015]=",
 CellID->306566547,ExpressionUUID->"5cca346d-7d0a-4f2e-827f-b6543aea294b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "bc7955bf-9b80-4680-a22c-3956c0993ade"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->14107562,ExpressionUUID->"b8d544be-ab51-49a3-b0d0-259ecf14aa98"],

Cell["Elements need not be integers:", "TechNoteMathCaption",
 CellID->505671602,ExpressionUUID->"7e175591-2abd-42c1-8c80-44e10684f4a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OrderlessCombinations", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<dog\>\"", ",", "\"\<cat\>\"", ",", "\"\<bird\>\""}], "}"}], 
   ",", "3"}], "]"}]], "Input", "ExampleInput",
 CellLabel->"In[1016]:=",
 CellID->618773088,ExpressionUUID->"f933d93a-5e6c-4230-a7ab-1232a8d6cfe2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "\<\"bird\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"cat\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"dog\"\>", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"bird\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"cat\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"dog\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cat\"\>", ",", "\<\"cat\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cat\"\>", ",", "\<\"dog\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"dog\"\>", ",", "\<\"dog\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"bird\"\>", ",", "\<\"bird\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"bird\"\>", ",", "\<\"cat\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"bird\"\>", ",", "\<\"dog\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"cat\"\>", ",", "\<\"cat\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"cat\"\>", ",", "\<\"dog\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"dog\"\>", ",", "\<\"dog\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cat\"\>", ",", "\<\"cat\"\>", ",", "\<\"cat\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cat\"\>", ",", "\<\"cat\"\>", ",", "\<\"dog\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cat\"\>", ",", "\<\"dog\"\>", ",", "\<\"dog\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"dog\"\>", ",", "\<\"dog\"\>", ",", "\<\"dog\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[1016]=",
 CellID->525838052,ExpressionUUID->"8b81a49b-c006-45ff-88cf-43a59b0b25ff"]
}, Open  ]],

Cell["\<\
We could consider {\"cat\", \"cat\", \"cat\"} and {\"dog\", \"dog\", \"dog\"} \
as partly equal.\
\>", "TechNoteMathCaption",
 CellID->330285041,ExpressionUUID->"f33eda08-fae3-4479-a6c4-e636cede7441"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CanonicalMultiset", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<cat\>\"", ",", "\"\<cat\>\"", ",", "\"\<cat\>\""}], "}"}], 
  "]"}]], "Input",
 CellLabel->"In[1017]:=",
 CellID->149666305,ExpressionUUID->"56cd4124-2cba-4cc3-9cc9-2d894388b1fa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "1"}], "}"}]], "Output",
 CellLabel->"Out[1017]=",
 CellID->164357416,ExpressionUUID->"29d6c201-3240-429e-bda2-f44a1eee1902"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CanonicalMultiset", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<dog\>\"", ",", "\"\<dog\>\"", ",", "\"\<dog\>\""}], "}"}], 
  "]"}]], "Input",
 CellLabel->"In[1018]:=",
 CellID->279831655,ExpressionUUID->"c29e76db-da18-4009-a1a9-00b2f6268e11"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "1"}], "}"}]], "Output",
 CellLabel->"Out[1018]=",
 CellID->240178721,ExpressionUUID->"506a5827-d849-47d1-96a2-7cae7399f25b"]
}, Open  ]],

Cell["\<\
If we delete duplicates by CanonicalMultiset, we get fewer elements.\
\>", "TechNoteMathCaption",
 CellID->377750434,ExpressionUUID->"77c588f9-414c-40a5-b716-15302bd28261"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DeleteDuplicatesBy", "[", "CanonicalMultiset", "]"}], "[", 
  RowBox[{"OrderlessCombinations", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<dog\>\"", ",", "\"\<cat\>\"", ",", "\"\<bird\>\""}], "}"}], 
    ",", "3"}], "]"}], "]"}]], "Input",
 CellLabel->"In[1019]:=",
 CellID->80880133,ExpressionUUID->"b149bf79-ed77-4cbb-8feb-b7afb792d0d1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "\<\"bird\"\>", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"bird\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"cat\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"bird\"\>", ",", "\<\"bird\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"bird\"\>", ",", "\<\"cat\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"cat\"\>", ",", "\<\"cat\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"cat\"\>", ",", "\<\"dog\"\>"}], "}"}]}],
   "}"}]], "Output",
 CellLabel->"Out[1019]=",
 CellID->99913589,ExpressionUUID->"536c2c04-ff2d-4b73-aa3d-96006db8e4e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CanonicalMultiset", "/@", 
  RowBox[{
   RowBox[{"DeleteDuplicatesBy", "[", "CanonicalMultiset", "]"}], "[", 
   RowBox[{"OrderlessCombinations", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<dog\>\"", ",", "\"\<cat\>\"", ",", "\"\<bird\>\""}], "}"}],
      ",", "3"}], "]"}], "]"}]}]], "Input",
 CellLabel->"In[1022]:=",
 CellID->281231649,ExpressionUUID->"24db643a-a35a-4577-81ab-92455c12558f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[1022]=",
 CellID->480068261,ExpressionUUID->"63674874-397f-4e7b-aa54-0fa486e76d42"]
}, Open  ]],

Cell["Here's what we would get something like.", "TechNoteMathCaption",
 CellID->88233538,ExpressionUUID->"0a4a5c63-eac7-46e4-9838-4db8022b656c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OrderlessCombinationsOfUnmarkedElements", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<dog\>\"", ",", "\"\<cat\>\"", ",", "\"\<bird\>\""}], "}"}], 
   ",", "3"}], "]"}]], "Input",
 CellLabel->"In[1020]:=",
 CellID->926616109,ExpressionUUID->"6fbc3631-04e7-4667-bf57-374fd925a058"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[1020]=",
 CellID->78903040,ExpressionUUID->"a217b7b3-0f3e-406c-ab37-e7c7ef5a9c3b"]
}, Open  ]],

Cell["These produce the same output.", "TechNoteMathCaption",
 CellID->97113938,ExpressionUUID->"4ee85dcc-da93-4d49-b9de-456690e750cd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CanonicalMultiset", "/@", 
  RowBox[{
   RowBox[{"DeleteDuplicatesBy", "[", "CanonicalMultiset", "]"}], "[", 
   RowBox[{"OrderlessCombinations", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<dog\>\"", ",", "\"\<cat\>\"", ",", "\"\<bird\>\""}], "}"}],
      ",", "3"}], "]"}], "]"}]}]], "Input",
 CellLabel->"In[1023]:=",
 CellID->22984984,ExpressionUUID->"898e048a-fe61-4538-b291-e76d75a22734"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[1023]=",
 CellID->239111319,ExpressionUUID->"91a2c43c-0a49-4a0f-84c9-1bbd64d855a7"]
}, Open  ]],

Cell["Let's compare the performance for a large set.", "TechNoteMathCaption",
 CellID->396413639,ExpressionUUID->"74e5a1b3-aa91-4119-baeb-242f085774eb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<EchoPerformance\>\"", "]"}], "[", 
  RowBox[{"CanonicalMultiset", "/@", 
   RowBox[{
    RowBox[{"DeleteDuplicatesBy", "[", "CanonicalMultiset", "]"}], "[", 
    RowBox[{"OrderlessCombinations", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<dog\>\"", ",", "\"\<cat\>\"", ",", "\"\<bird\>\""}], 
       "}"}], ",", "3"}], "]"}], "]"}]}], "]"}]], "Input",
 CellLabel->"In[1024]:=",
 CellID->229833682,ExpressionUUID->"e2f71c0e-42b9-49c7-84d8-b7c41c1ae607"],

Cell[BoxData[
 RowBox[{
  TagBox["Map",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    StyleBox[
     TemplateBox[{"0.0005623`", "\" s\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]], ",", 
    StyleBox[
     TemplateBox[{"7168", "\" B\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]]}], "}"}]}]], "Echo",
 CellID->834526706,ExpressionUUID->"453344bc-2da8-40c0-8181-f2a5297bbfb2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[1024]=",
 CellID->630516631,ExpressionUUID->"26e85f3b-38bc-435b-a0a9-df6218359c78"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<EchoPerformance\>\"", "]"}], "[", 
  RowBox[{"OrderlessCombinationsOfUnmarkedElements", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<dog\>\"", ",", "\"\<cat\>\"", ",", "\"\<bird\>\""}], "}"}], 
    ",", "3"}], "]"}], "]"}]], "Input",
 CellLabel->"In[1025]:=",
 CellID->162857240,ExpressionUUID->"61dccad2-9386-42ce-8468-30c7b3d07ce2"],

Cell[BoxData[
 RowBox[{
  TagBox["OrderlessCombinationsOfUnmarkedElements",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    StyleBox[
     TemplateBox[{"0.0003973`", "\" s\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]], ",", 
    StyleBox[
     TemplateBox[{"7280", "\" B\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]]}], "}"}]}]], "Echo",
 CellID->267038778,ExpressionUUID->"8592ff58-114a-4072-8309-fbfbd35cfbed"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[1025]=",
 CellID->51852502,ExpressionUUID->"8f61954f-183e-4433-8b6d-3ae9ffcd9a05"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<EchoPerformance\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"CanonicalMultiset", "/@", 
    RowBox[{
     RowBox[{"DeleteDuplicatesBy", "[", "CanonicalMultiset", "]"}], "[", 
     RowBox[{"OrderlessCombinations", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<dog\>\"", ",", "\"\<cat\>\"", ",", "\"\<bird\>\""}], 
        "}"}], ",", "7"}], "]"}], "]"}]}], ";"}], "]"}]], "Input",
 CellLabel->"In[1028]:=",
 CellID->306376386,ExpressionUUID->"a9656146-6819-4835-8c73-1994d049d83d"],

Cell[BoxData[
 RowBox[{
  TagBox["CompoundExpression",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    StyleBox[
     TemplateBox[{"0.0026763`", "\" s\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]], ",", 
    StyleBox[
     TemplateBox[{"40688", "\" B\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]]}], "}"}]}]], "Echo",
 CellID->448272658,ExpressionUUID->"de4d32a2-fda2-4058-8440-0f057c70bc4e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<EchoPerformance\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"OrderlessCombinationsOfUnmarkedElements", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<dog\>\"", ",", "\"\<cat\>\"", ",", "\"\<bird\>\""}], "}"}],
      ",", "7"}], "]"}], ";"}], "]"}]], "Input",
 CellLabel->"In[1029]:=",
 CellID->3601619,ExpressionUUID->"e4437f9b-a46b-41fc-8db7-0244ce2f3101"],

Cell[BoxData[
 RowBox[{
  TagBox["CompoundExpression",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    StyleBox[
     TemplateBox[{"0.0021079`", "\" s\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]], ",", 
    StyleBox[
     TemplateBox[{"40272", "\" B\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]]}], "}"}]}]], "Echo",
 CellID->88055709,ExpressionUUID->"118d84c1-73c1-4e04-a98f-0302a47d25eb"]
}, Open  ]],

Cell["\<\
The definition of the function is significantly faster and uses significantly \
less memory.\
\>", "TechNoteMathCaption",
 CellID->100378946,ExpressionUUID->"adb2da3f-fc1b-4721-8aab-2dc30747aed8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<EchoPerformance\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"CanonicalMultiset", "/@", 
    RowBox[{
     RowBox[{"DeleteDuplicatesBy", "[", "CanonicalMultiset", "]"}], "[", 
     RowBox[{"OrderlessCombinations", "[", 
      RowBox[{
       RowBox[{"RandomWord", "[", 
        RowBox[{"\"\<Noun\>\"", ",", "7"}], "]"}], ",", "17"}], "]"}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellLabel->"In[1030]:=",
 CellID->268140765,ExpressionUUID->"c6c5a97b-d069-4211-b5d1-7372b4b935fa"],

Cell[BoxData[
 RowBox[{
  TagBox["CompoundExpression",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    StyleBox[
     TemplateBox[{"16.5168917`", "\" s\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]], ",", 
    StyleBox[
     TemplateBox[{"148109320", "\" B\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]]}], "}"}]}]], "Echo",
 CellID->434075465,ExpressionUUID->"858ceb05-cacb-4cba-aca3-f4d7b308f244"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<EchoPerformance\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"OrderlessCombinationsOfUnmarkedElements", "[", 
    RowBox[{
     RowBox[{"RandomWord", "[", 
      RowBox[{"\"\<Noun\>\"", ",", "7"}], "]"}], ",", "17"}], "]"}], ";"}], 
  "]"}]], "Input",
 CellLabel->"In[1031]:=",
 CellID->589080666,ExpressionUUID->"e3c8de3b-c47d-4149-8e7a-e15d13339f24"],

Cell[BoxData[
 RowBox[{
  TagBox["CompoundExpression",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    StyleBox[
     TemplateBox[{"9.0295319`", "\" s\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]], ",", 
    StyleBox[
     TemplateBox[{"84408424", "\" B\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]]}], "}"}]}]], "Echo",
 CellID->323976790,ExpressionUUID->"a7a9a0a2-4119-4393-9072-546c55af6cfc"]
}, Open  ]],

Cell["Make a Ferrers diagram for every partition of 5.", "TechNoteMathCaption",
 CellID->478421323,ExpressionUUID->"dab32751-7fe4-42f8-988e-18e668dc4f85"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{"FerrersDiagram", "/@", 
     RowBox[{"IntegerPartitions", "[", "5", "]"}]}], ",", 
    RowBox[{"UpTo", "[", "3", "]"}]}], "]"}], "]"}]], "Input",
 CellLabel->"In[1005]:=",
 CellID->542729463,ExpressionUUID->"56fcecae-9ed5-4142-a8f2-3f3fb4dda47c"],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      TagBox[GridBox[{
         {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>"}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], {29.5625, -40.3125}, {Center, Center}, {55., 75.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      TagBox[GridBox[{
         {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>", "", "", ""}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], {88.6875, -40.3125}, {Center, Center}, {55., 75.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      TagBox[GridBox[{
         {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", ""}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], {147.8125, -40.3125}, {Center, Center}, {55., 75.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {
     InsetBox[
      TagBox[GridBox[{
         {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>", "", ""},
         {"\<\"\[FilledCircle]\"\>", "", ""}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], {29.5625, -120.9375}, {Center, Center}, {55., 75.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      TagBox[GridBox[{
         {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>", ""}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], {88.6875, -120.9375}, {Center, Center}, {55., 75.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      TagBox[GridBox[{
         {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>", ""},
         {"\<\"\[FilledCircle]\"\>", ""},
         {"\<\"\[FilledCircle]\"\>", ""}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], {147.8125, -120.9375}, {Center, Center}, {55., 75.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {
     InsetBox[
      TagBox[GridBox[{
         {"\<\"\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>"}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], {29.5625, -201.5625}, {Center, Center}, {55., 75.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     TagBox[InsetBox["", {88.6875, -201.5625}, {Center, Center}, {55., 75.},
       BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}],
      "InsetString"], 
     TagBox[InsetBox["", {147.8125, -201.5625}, {Center, Center}, {55., 75.},
       BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}],
      "InsetString"]}}, {}},
  ImageSize->Automatic,
  PlotRangePadding->{6, 5}]], "Output",
 CellLabel->"Out[1005]=",
 CellID->25169857,ExpressionUUID->"eec87719-43d3-42cc-a766-9784791c77ca"]
}, Open  ]],

Cell["Rows 1 to 4 have 5, 4, 2, 2 dots:", "TechNoteMathCaption",
 CellID->59602588,ExpressionUUID->"88786608-25c5-45d8-8697-ffb397f6d0e9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FerrersDiagram", "[", 
  RowBox[{"{", 
   RowBox[{"5", ",", "4", ",", "2", ",", "2"}], "}"}], "]"}]], "Input",
 CellLabel->"In[18]:=",
 CellID->141527026,ExpressionUUID->"715a7406-b524-4f24-aa11-9f368e1dcfb0"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>"},
    {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", ""},
    {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "", "", ""},
    {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "", "", ""}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->"Out[18]=",
 CellID->387932858,ExpressionUUID->"0dff4e2e-84e5-46d4-823b-54b73c2e9565"]
}, Open  ]],

Cell[TextData[{
 "Here is a",
 StyleBox[" ", "MathCaption"],
 "random choice of one of the 204226 partitions of 50:"
}], "TechNoteMathCaption",
 CellID->909413053,ExpressionUUID->"9a7bb339-5acc-450c-90aa-457b2e7a0a8b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Framed", "@", 
  RowBox[{"FerrersDiagram", "@", 
   RowBox[{"RandomChoice", "[", 
    RowBox[{"IntegerPartitions", "@", "50"}], "]"}]}]}]], "Input",
 CellLabel->"In[20]:=",
 CellID->285728069,ExpressionUUID->"20bac007-b674-4699-9022-8c0f5d30c013"],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\
\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", \
"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", \
"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>"},
     {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\
\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", \
"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", \
"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>"},
     {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\
\<\"\[FilledCircle]\"\>", "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\
\<\"\[FilledCircle]\"\>", "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>", "", "", "", "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "", "", "", "", 
      "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "", "", "", "", 
      "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "", "", "", "", 
      "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "", "", "", "", 
      "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "", "", "", "", "", "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "", "", "", "", "", "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "", "", "", "", "", "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "", "", "", "", "", "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "", "", "", "", "", "", "", "", "", ""}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  StripOnInput->False]], "Output",
 CellLabel->"Out[20]=",
 CellID->291815495,ExpressionUUID->"478ab664-36b3-4451-b715-fd5da17c7ce2"]
}, Open  ]],

Cell["\<\
Select from the list {5,6,7,8,9} those permutations that form a prime when \
concatenating the digits: \
\>", "TechNoteMathCaption",
 CellID->123284224,ExpressionUUID->"e54e82a6-dbce-4362-9169-a9975857f455"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"PrimeQ", "@*", "FromDigits"}]}], "]"}]], "Input", "ExampleInput",
 CellLabel->"In[1033]:=",
 CellID->841619866,ExpressionUUID->"3a40e6c4-01d6-4f96-8bd0-a7f195673010"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "8", ",", "9", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "7", ",", "6", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8", ",", "6", ",", "7", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8", ",", "9", ",", "6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "5", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "7", ",", "5", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "8", ",", "5", ",", "9", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "9", ",", "8", ",", "5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "5", ",", "6", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "5", ",", "8", ",", "6", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8", ",", "5", ",", "6", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "6", ",", "5", ",", "7", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "9", ",", "5", ",", "6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "9", ",", "6", ",", "5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "6", ",", "5", ",", "8", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "6", ",", "8", ",", "5", ",", "7"}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[1033]=",
 CellID->89679823,ExpressionUUID->"d40d7588-7387-4503-990c-25053f44c00b"]
}, Open  ]],

Cell["Here are the numbers.", "TechNoteMathCaption",
 CellID->24958883,ExpressionUUID->"93c199ef-1dcf-4716-a2f7-32565162c0eb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FromDigits", "/@", 
  RowBox[{
   StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
    RowBox[{"PrimeQ", "@*", "FromDigits"}]}], "]"}]}]], "Input",
 CellLabel->"In[1036]:=",
 CellID->484647955,ExpressionUUID->"a05b1c3d-d8fa-43fb-ab74-5b0e0d9534c1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "56897", ",", "57689", ",", "58679", ",", "58967", ",", "65789", ",", 
   "67589", ",", "68597", ",", "69857", ",", "75689", ",", "75869", ",", 
   "78569", ",", "86579", ",", "89567", ",", "89657", ",", "96587", ",", 
   "96857"}], "}"}]], "Output",
 CellLabel->"Out[1036]=",
 CellID->123777944,ExpressionUUID->"dfc55999-6db3-493f-95aa-675d46d6f0a3"]
}, Open  ]],

Cell["Select permutations of length 3:", "TechNoteMathCaption",
 CellID->837471449,ExpressionUUID->"51599647-8f38-4c09-ba4b-d079463656aa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"PrimeQ", "@*", "FromDigits"}]}], "]"}]], "Input", "ExampleInput",
 CellLabel->"In[1034]:=",
 CellID->724085147,ExpressionUUID->"a74b27e6-7e06-41c1-8edf-440bf1936693"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "5", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "6", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "6", ",", "7"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[1034]=",
 CellID->96753963,ExpressionUUID->"a1d9c8f1-a109-4904-a164-af271fee0430"]
}, Open  ]],

Cell["Here are the numbers.", "TechNoteMathCaption",
 CellID->505704633,ExpressionUUID->"44b0e377-0c8c-46e7-91f5-5640159abd91"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FromDigits", "/@", 
  RowBox[{
   StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
    RowBox[{"{", "3", "}"}], ",", 
    RowBox[{"PrimeQ", "@*", "FromDigits"}]}], "]"}]}]], "Input",
 CellLabel->"In[1039]:=",
 CellID->220964068,ExpressionUUID->"81ae2a2e-003a-4e0e-b19c-dd1fa212fff1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "569", ",", "587", ",", "659", ",", "769", ",", "857", ",", "859", ",", 
   "967"}], "}"}]], "Output",
 CellLabel->"Out[1039]=",
 CellID->74427375,ExpressionUUID->"90f5a01e-f50c-4e1a-ac65-0307a3e292da"]
}, Open  ]],

Cell["Select permutations with length 3\[LongDash]4:", "TechNoteMathCaption",
 CellID->733329592,ExpressionUUID->"ef31bdc3-7a7b-478d-a9df-6d13a2c6e136"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"PrimeQ", "@*", "FromDigits"}]}], "]"}]], "Input", "ExampleInput",
 CellLabel->"In[1035]:=",
 CellID->472360365,ExpressionUUID->"037bf1b1-4429-4ecb-8d0a-49b30135a33c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "5", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "6", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8", ",", "6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8", ",", "6", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8", ",", "7", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8", ",", "9", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "9", ",", "8", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "8", ",", "5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "5", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5", ",", "9", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "5", ",", "8", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "8", ",", "5", ",", "7"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[1035]=",
 CellID->45157847,ExpressionUUID->"d65f0a6a-bdcf-4a7f-85f8-ae6da196fa34"]
}, Open  ]],

Cell["Here are the numbers.", "TechNoteMathCaption",
 CellID->232625522,ExpressionUUID->"068eeb79-7927-4169-be98-c524cd2500ea"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FromDigits", "/@", 
  RowBox[{
   StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}], ",", 
    RowBox[{"PrimeQ", "@*", "FromDigits"}]}], "]"}]}]], "Input",
 CellLabel->"In[1040]:=",
 CellID->129412639,ExpressionUUID->"0efe243a-63d2-4cdc-85cf-1f19f74ea8e1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "569", ",", "587", ",", "659", ",", "769", ",", "857", ",", "859", ",", 
   "967", ",", "5689", ",", "5867", ",", "5869", ",", "5879", ",", "5897", 
   ",", "5987", ",", "6857", ",", "7589", ",", "8597", ",", "9587", ",", 
   "9857"}], "}"}]], "Output",
 CellLabel->"Out[1040]=",
 CellID->294220470,ExpressionUUID->"d0d3a66b-109a-421b-9050-78f24f1c1453"]
}, Open  ]],

Cell["\<\
Select permutations for which the first two elements and the last elements \
add up to the same value:\
\>", "TechNoteMathCaption",
 CellID->979377819,ExpressionUUID->"4b9a050f-32fa-451a-bac4-d8ef338e7ebb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "2"}], "]"}], "]"}], "]"}], "==", 
     RowBox[{"Total", "[", 
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"3", ";;", "4"}], "]"}], "]"}], "]"}]}], "&"}]}], 
  "]"}]], "Input", "ExampleInput",
 CellLabel->"In[1041]:=",
 CellID->174898405,ExpressionUUID->"db9223bc-91e4-4f53-a226-b4e760d7eda0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "3", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[1041]=",
 CellID->408943794,ExpressionUUID->"e3291f4d-e4f6-4261-8a8d-df5edf23dde4"]
}, Open  ]],

Cell["\<\
Select the first ten permutations of length 4 for which the elements add up \
to an odd number:\
\>", "TechNoteMathCaption",
 CellID->559719523,ExpressionUUID->"c1f934dc-d3e6-449f-b0b9-64c63eb50be6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}], 
   ",", 
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"OddQ", "@*", "Total"}], ",", "10"}], "]"}]], "Input", \
"ExampleInput",
 CellLabel->"In[1042]:=",
 CellID->359245144,ExpressionUUID->"616ed975-f9df-42c3-9189-7aa024bf0bd5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "5", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "6", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "5", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "5", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "6", ",", "5"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[1042]=",
 CellID->162633939,ExpressionUUID->"ccfeaaf9-a77c-49e6-b431-80aa0267357b"]
}, Open  ]],

Cell[TextData[{
 "Select polynomials for which the slope is 1 at ",
 Cell[BoxData[
  RowBox[{
   StyleBox["x", "TI"], "=", "0"}]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "26244d3e-17eb-4031-b202-0121586834d9"],
 ":"
}], "TechNoteMathCaption",
 CellID->306011383,ExpressionUUID->"49b0ae1b-f115-420e-a74a-9f0a60daa6bd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"out", "=", 
  RowBox[{"Total", "/@", 
   RowBox[{
    StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"4", "x"}], ",", "1", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "-", "2"}], ")"}], "^", "2"}]}], "}"}], ",", "4", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"Total", "[", "#", "]"}], ",", "x"}], "]"}], ")"}], "/.", 
         RowBox[{"x", "\[Rule]", "0"}]}], ")"}], "\[Equal]", "1"}], "&"}]}], 
    "]"}]}]}]], "Input", "ExampleInput",
 CellLabel->"In[1043]:=",
 CellID->884651642,ExpressionUUID->"d89d3e87-2f7e-4938-a750-d180213c8877"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"1", "+", "x"}], ",", 
   RowBox[{"1", "+", "x"}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}]}], "}"}]], "Output",
 CellLabel->"Out[1043]=",
 CellID->320654796,ExpressionUUID->"555a95b2-dad9-4348-abe6-9fc80ab72fd2"]
}, Open  ]],

Cell["Expand the polynomials.", "TechNoteMathCaption",
 CellID->22585214,ExpressionUUID->"97f20388-d472-480e-9907-179c765d3fc5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", "out", "]"}]], "Input",
 CellLabel->"In[1045]:=",
 CellID->548368980,ExpressionUUID->"78c44ea5-b68d-4257-aafc-7352432ccaf2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"1", "+", "x"}], ",", 
   RowBox[{"1", "+", "x"}], ",", 
   RowBox[{"4", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"4", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"4", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"4", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"4", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"4", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}]}], "}"}]], "Output",
 CellLabel->"Out[1045]=",
 CellID->266909173,ExpressionUUID->"b21eae70-47a7-4c6a-a07f-b35f1c609c75"]
}, Open  ]],

Cell["There are really only three unique ones.", "TechNoteMathCaption",
 CellID->305030941,ExpressionUUID->"cdbcd419-8839-43cd-bab5-048193b552f0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeleteDuplicates", "[", 
  RowBox[{"Expand", "[", "out", "]"}], "]"}]], "Input",
 CellLabel->"In[1050]:=",
 CellID->206631954,ExpressionUUID->"54844170-c23b-4eb7-bedb-63f808af91e0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"1", "+", "x"}], ",", 
   RowBox[{"4", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}]}], "}"}]], "Output",
 CellLabel->"Out[1050]=",
 CellID->390480037,ExpressionUUID->"b500366e-f9a0-4c94-ac23-8a4ac6367df0"]
}, Open  ]],

Cell["Make a graph of all of them.", "TechNoteMathCaption",
 CellID->240106575,ExpressionUUID->"c038b589-14ad-4b1d-9f1b-71965f63bb06"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Expand", "[", "out", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "2"}], "Pi"}], ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellLabel->"In[1051]:=",
 CellID->154729335,ExpressionUUID->"09639f36-1c3f-4b05-8983-809a44c7eef4"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1:eJxF1OlLE3AcgPHpnJut6S53WK1WJJhiSia2mTNCU0NS05wvUhJcS3FODSNm
2Mi0UElpUPMqqZkHOjMkaV7VdGllU0SHEmKbOkxqznvqqKB9fy8ePv/Bw03P
SchwxmAwsX/7Z0y0+/kdLnvAIb+r0ELgIP24P+sYXkj3bd1WIBU51iRvFzsj
hYR19uQPFnhdN2PpeIEsjmiuFx1H5k7YqI9pTHDkqpfZRGOAe30tHTy2J2js
XKmKd6ODwQ2uExVEGhh6dNy/bIsCHpS53ylfIoP62kCh6LsH+E38ZvG0hgQ2
+oyFxPUSwYBqvTRv2A3kBpydZrTiwaV3ETjX1zjwQJbm2q1yLGgfoaosuU5g
vmB/4o1Ne7/D7lNfB9a7bKCaMtTB7N0A83lKbFiOFeTdT4syZy6Dv8W7j4oe
mMB72hqeYGsKnNSEaluwA2CaX+ReYlWfwOFclDBJUm8A19QCNYtvAqdVHMmK
fhmUSTRRSc+soPD5yeTaig1QVDrsPKu3gR+LfX3LP9vBVMr8B3qKU7jDVZ4u
bK4AC6pzSNvpUhzoUrQgT1fgQbnyWDRT4QZedCny0T4kgu3R2YZfzSQwpLp/
cFTlAbanj4czFsig6Eii77k1CthpxHdFWqhgDB3nXeZEBwtigoJbMJ7gcJM1
YdCGFN+0XTm8jwnWRATZLuNZYEtb8pM+IrLbUxbkQ0ZOzr+X2FlIcsklY9MJ
ZMlQ5pe9WGTehYb6VwqkXK3lU5XISqbZUFiHbFv0pyU0Is2lPaW7b5Gpn6ak
8TPI7IAdUs8ssvApp9XbhFSKM+Z3lpEThNWURjvSKGVskrFs0Go4o5DhkR7N
d0fjyEgO5WWWho70u60jeLOR/LklVeUh5P9vgX8AEpM2Xw==
          "]], LineBox[CompressedData["
1:eJwt1P9P1HUcwHHgPA84D+7b5+79kc9R2KQRRLiIERifVxYENEMJAX8A6xZ4
iQJqkQZFVyY1cMmCKaCYC+jACYQxXHz5vBOEICWg62C4hsjXAPFABDzgrNbr
h+ce/8HTS58Rm+Lk4OCw+9/+MzrK7bU1L5b+L0NDG3Oszp4sylA/r9mLmq0s
ylC3x12rO5QsytB+k7HW4MSiDE10fsRa7hFUTQ923bHWf09QNT0VXl2eup2g
anrUbFN+q9KiKtqTtHV6XKVBlXSjraY+hGVQBR1rWCjc66JG5TTo8mbzGamK
Ht4lM3lo3ejObQP++asKeuL1iiTNgpRy2W6fFMzIafAyZyN/utC+CzsSU/9y
RyX0d8O1qZeaZaiYVvn0B+9plaIiGlDal3ms2wV1pF4Brwxrrkjornc+/un5
+CfCzM/h4s0/iqn5w3zXLfo1wSOt+d2PCkQ0yJLVPk9WBHuPstJ61JGuF2+P
Hh1bFI7zW+LeX7ELk58S08D8feH6i7fpo0abkHmw1DibNiHUKTrrta3LQksE
aU9eGhaOh5SIwjIWhfN/dHPWk+1CyJcHIqcPzQkBFlFrq6mFf2BY/yb3q3Fh
m7/krsMDC/9FR1kIvzootOka9HdF47yleWdHjYgKrv3Wt5gns/wBv4iNuMI2
vlNvjmH+XuBHIxP3pZcP8cHK+OKyZ5f5pTq+joSO87bBSwkFOhs/XOmZvtA3
x9+PdW86YbDz2enNkfsuLfJhTUkVNTGOkPjdCwkXzizzfn3nfHsjRJCa1+00
0mfjr7W/Z8wwiKH9lK9vwW92Xn+jmOlMkUCyYuKGer8j6gIPQ7rCRrNEqBTq
MmSP9ZliVAabcieN+iIJ6g7GkmeitEUuQG8VVkh75PDmplyfjq+l4P25oL7X
oYDaqCND89UyGKwIOrxiVkJwqXCzt9IduNsj+qkBFdTqB0AzKUfVkPp0nO+r
SwqUgYYxSWOEVYlqIFot9s53VKMEsqIDg2ocGJSFbtNi7E0bg7Jg+MAW/5Sr
FvWAsvBA29sSgnJQczXhXJuUoBxcZ7IDfeQE5cAy8Uu6nRCUA/npmDHTcwTl
4HTnoVsbuwnKwbE3Lpf/UERQDox1HaHKEoJycFY7PZRzkaAcXJ3yV8VWEZSD
6byWvPUmgnKQ/Otg5t47BOXgSMCarGWEoBzknPe84j1OUA5KDCkTa3ME5cDs
/HB/lZ2gHIxlalbkIhbVweLQy0XZEhbVgXv1Z7175CyqA09FRVqzmkV14Hey
y9mbZVEdhI7OVJ7VsagO8F+oDv4BHdg3PA==
          "]], LineBox[CompressedData["
1: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
          "]], LineBox[CompressedData["
1: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
Ffz//wu4v5dGC3e3gv8BbCq7cg==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
      Slot["HighlightElements"], 
      Slot["LayoutOptions"], 
      Slot["Meta"], 
      Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1:eJxF1OlLE3AcgPHpnJut6S53WK1WJJhiSia2mTNCU0NS05wvUhJcS3FODSNm
2Mi0UElpUPMqqZkHOjMkaV7VdGllU0SHEmKbOkxqznvqqKB9fy8ePv/Bw03P
SchwxmAwsX/7Z0y0+/kdLnvAIb+r0ELgIP24P+sYXkj3bd1WIBU51iRvFzsj
hYR19uQPFnhdN2PpeIEsjmiuFx1H5k7YqI9pTHDkqpfZRGOAe30tHTy2J2js
XKmKd6ODwQ2uExVEGhh6dNy/bIsCHpS53ylfIoP62kCh6LsH+E38ZvG0hgQ2
+oyFxPUSwYBqvTRv2A3kBpydZrTiwaV3ETjX1zjwQJbm2q1yLGgfoaosuU5g
vmB/4o1Ne7/D7lNfB9a7bKCaMtTB7N0A83lKbFiOFeTdT4syZy6Dv8W7j4oe
mMB72hqeYGsKnNSEaluwA2CaX+ReYlWfwOFclDBJUm8A19QCNYtvAqdVHMmK
fhmUSTRRSc+soPD5yeTaig1QVDrsPKu3gR+LfX3LP9vBVMr8B3qKU7jDVZ4u
bK4AC6pzSNvpUhzoUrQgT1fgQbnyWDRT4QZedCny0T4kgu3R2YZfzSQwpLp/
cFTlAbanj4czFsig6Eii77k1CthpxHdFWqhgDB3nXeZEBwtigoJbMJ7gcJM1
YdCGFN+0XTm8jwnWRATZLuNZYEtb8pM+IrLbUxbkQ0ZOzr+X2FlIcsklY9MJ
ZMlQ5pe9WGTehYb6VwqkXK3lU5XISqbZUFiHbFv0pyU0Is2lPaW7b5Gpn6ak
8TPI7IAdUs8ssvApp9XbhFSKM+Z3lpEThNWURjvSKGVskrFs0Go4o5DhkR7N
d0fjyEgO5WWWho70u60jeLOR/LklVeUh5P9vgX8AEpM2Xw==
             "]], 
            Line[CompressedData["
1:eJwt1P9P1HUcwHHgPA84D+7b5+79kc9R2KQRRLiIERifVxYENEMJAX8A6xZ4
iQJqkQZFVyY1cMmCKaCYC+jACYQxXHz5vBOEICWg62C4hsjXAPFABDzgrNbr
h+ce/8HTS58Rm+Lk4OCw+9/+MzrK7bU1L5b+L0NDG3Oszp4sylA/r9mLmq0s
ylC3x12rO5QsytB+k7HW4MSiDE10fsRa7hFUTQ923bHWf09QNT0VXl2eup2g
anrUbFN+q9KiKtqTtHV6XKVBlXSjraY+hGVQBR1rWCjc66JG5TTo8mbzGamK
Ht4lM3lo3ejObQP++asKeuL1iiTNgpRy2W6fFMzIafAyZyN/utC+CzsSU/9y
RyX0d8O1qZeaZaiYVvn0B+9plaIiGlDal3ms2wV1pF4Brwxrrkjornc+/un5
+CfCzM/h4s0/iqn5w3zXLfo1wSOt+d2PCkQ0yJLVPk9WBHuPstJ61JGuF2+P
Hh1bFI7zW+LeX7ELk58S08D8feH6i7fpo0abkHmw1DibNiHUKTrrta3LQksE
aU9eGhaOh5SIwjIWhfN/dHPWk+1CyJcHIqcPzQkBFlFrq6mFf2BY/yb3q3Fh
m7/krsMDC/9FR1kIvzootOka9HdF47yleWdHjYgKrv3Wt5gns/wBv4iNuMI2
vlNvjmH+XuBHIxP3pZcP8cHK+OKyZ5f5pTq+joSO87bBSwkFOhs/XOmZvtA3
x9+PdW86YbDz2enNkfsuLfJhTUkVNTGOkPjdCwkXzizzfn3nfHsjRJCa1+00
0mfjr7W/Z8wwiKH9lK9vwW92Xn+jmOlMkUCyYuKGer8j6gIPQ7rCRrNEqBTq
MmSP9ZliVAabcieN+iIJ6g7GkmeitEUuQG8VVkh75PDmplyfjq+l4P25oL7X
oYDaqCND89UyGKwIOrxiVkJwqXCzt9IduNsj+qkBFdTqB0AzKUfVkPp0nO+r
SwqUgYYxSWOEVYlqIFot9s53VKMEsqIDg2ocGJSFbtNi7E0bg7Jg+MAW/5Sr
FvWAsvBA29sSgnJQczXhXJuUoBxcZ7IDfeQE5cAy8Uu6nRCUA/npmDHTcwTl
4HTnoVsbuwnKwbE3Lpf/UERQDox1HaHKEoJycFY7PZRzkaAcXJ3yV8VWEZSD
6byWvPUmgnKQ/Otg5t47BOXgSMCarGWEoBzknPe84j1OUA5KDCkTa3ME5cDs
/HB/lZ2gHIxlalbkIhbVweLQy0XZEhbVgXv1Z7175CyqA09FRVqzmkV14Hey
y9mbZVEdhI7OVJ7VsagO8F+oDv4BHdg3PA==
             "]], 
            Line[CompressedData["
1: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
             "]], 
            Line[CompressedData["
1:eJwt2Hk0VuvbB3Ayh+LZz2xWVGaSOfsyDymFOhSiExWFyjxUNCByJDkUiiRK
IUQZ7idlihyVMmV+SKJMmem337Xev/b6rLXX2mvf9/f67nttmWO+dh4bODg4
hDk5OP7vam21yWRFhsHaV2lvvkY3Af2y8Cl+SQYr/2nwRivMBJRkfmRQmQzW
XNrHhtvCJrBpqWFRncRg+brJqWhsMIEPeZHPTm5gsIZyzPMDfxiDI/9vxpch
OuuDYLCTSo0xnGjomSp6QGe9OJCS5XjcGK6Y5Wd6ytFZidWsttQSIzjbvky6
hdFY4uU7N1QbAbxzYY6xMSpLRbiU4/P0blireVykx6CwsofbFbF4fRh+Pn3z
gACZZd375vcqWRe0snjbbwhirMxPoa9uj2mBgexHlbhFUZa7mloHo1gTxMM2
RcSPi7AO/DenxH6kAW3p6o6evZtZ19P7jFoG1eC/kyXfdlUKs57JnghuVlOB
3B0fdPZXC7LIv8j7LosrgtqdNr9zTQIsGxuHI4cPbgcZtd3d1Cd8rJWTAf3V
KXIw/sqMh7eYh7UYt6vou8UWEPOudA+K52K5GcxF0jfJwPo70sOps5ys7UkR
Z+1sJOFAqnwZzYuT9YKWzSGPS0KOh16d4TFO1nUND2NODUmw5jg2Em/HyeLf
3tDbSpOElF3Fcjt2crJsSMvn64clQPm+ba77HAdLnC0muS1CApwD4h99DORg
tYbbnnpWJg7ncSGHUwvryC0qsKd9txiYmqCrf4+uo/Z/+huy1MWAanGu3OXz
Oqr66l8bJCcGFfs6mXYl62hcc+uQobAYrLrkDOr5rqPOvtvNur1MuBJu4Cv0
bQ19pNeZD11gQsrL09cLv6wiUzn7vrVGBlTsfM/6XbaMlO4rJx0NpoMa7YYl
KXcZkWcKtBm+dMhbtmlTSVlG47PVrG4POqS+buk/EbiMDvPdjgiwp0OQbct6
l9YysjlDyxZQpYOWd7NBTfkSOrfrTErBNxqUZjdVXHu5iKZfOCv1utJA6Vos
PMhfRO68JNNbh2iQc8qqEaUtomoeJ/zAPhokqzV1LIYsIl1y+gB7Nw3O1zTO
e+ktIlO/+fdeEjTQ6G7QtK1cQDlbV+2ne6lQKFpfRKueRzcu7BH+fpwKdq6i
1gNP5hH7NM+LP85UmH/sPJx3Zx4leqxmSR2kgoHpLEUveB79CMgyCTOjQmOg
dJjzznl0n9T4NEueCgM9oWZZ+b/RRoNoiSfjFBDNVe1WSJlDI/veexWFUKB0
JvT87JU59CN6e9ivcxRwxOuFqs7PIdNmVqv2aQpkdjrjew/MoXm/PJztSgEF
wes5vkJz6LCOg2WBKQWM/dg+pVGzaGu5xO9FUQqc10vjMvSdQbX+wVVXSsiQ
nCz29ZDrDJoW9dDkfUaG0p8Zpb57Z5DMr/W0xDwyzGdne2QpziD/U3oqrAwy
BAsWNHCPTaMZl7bQ6zFkuPC1Jq7ZbRrZmAfnNB8lQ6aW0XG27TSyHNZZ6DlM
BpT4xmDNcBqZsHK1fx8kA4dZ46SKxDRS0LseaWxDhstPP9gmdU2hj8p+upa6
ZIi5wMac7KbQJXKFLgeFDHmdnhNnjaaQebHNiXsiZGjS+P72utoUEkhIiLIQ
IsPGb5MBVZumUAwfM+o5FxmY934W4im/0KFl24ezMxjIGZF13kf/RE792uGy
nzDQu3rUcsxrAnXmLnhr3MGgaTHioeueCUStExPZ9i8GjqfTN3xWnEDCjRdC
tiRjEGDfVfV64gfaEc6ZvjMBgyIZe/W7Pj8QM2NJqjgKg2015sx958YR+3Xp
FpkzGLxQ9wh6azeOahUbxJK8MDB9eLldb+c4OhxK79p4EoNj8ayEbXPfUXld
0APsbwwyD+txcQZ+R+qUHUFRThiQF5QnSkLGEP+/h5ifLTB44GVjpXB4DMXY
/OVZa4aBRp9X7n29MfR6NCWo3ASD/XWP3G6sfEOeTR+/V+AYxN2S+ewZ8Q15
WOwWZuhgwOQDjV6Xb6hUdtdlUy0M8kJd/7E3/IbQkHdNkCYG9e53reDPKOIV
TbnyWw2DDWqUGkbkKLKQ77Xdp4DBzQc7xRLdR5HXtpZf5dsxkKbZBfMajyJz
4WWHHdsw2L2eoDG7YRQpRZN8t2zFILiF/1HLlRFUslNryF8SAz7Yxm3iMYJy
D4sXiEtgkFJi5v7SbATZeRrpt4hhUHonSiyXdwR9VbTMN2Zg8Ovk6j8XY9go
x9fybTwZg/Zn6iL7PNnop3Gr3REMg1dznonipmyES5Zw7SRhcOXSh8SXf4bR
hsm0lrXNGHjV84rG9A4jv4G77KlNGNgKGdw8VDmMJnpWJSeFifVIzb05GziM
lsZ7ljmEMPjT2yNa6zCMEted0umCGLC3iCYlagwjNaa2m+5GDAoLw5KUfw6h
hFObbFP4MUj+XURabR5C1hn8oR/5MAjVH016lz+ENne5N9AImzbsv3XCYwi9
OqneVM2DwQ7ha5iWyRDKrHoUIUl4k33lLW6ZIRRPj3CI4cZgLnUK+7Q+iKLC
i/eucGHQ1SeXnPWV8JjpqSDCNVuPkP1eDaIbztqPVjdgkOOVmGyYOojud8bw
xRGOLaojCwcOohpn3euyhH3ml5N77AfR6Jil6htODOwN1CiP1QcRNaJ8/jRh
nSiP28GbB9F+xtUBKcKSjXcoFpMD6HZ18UQPBwZcm9puU5oH0PCp3WJZhMfs
eajsvAGkJ7n9tC/h1jS9lOfXBlB699l+c8Il/b7UyOMDiPceM2Ab4VS5hym2
xgMo1FtWWZRwhHc3VVJ6AC3isXzchOuOSal0rfSjS+K23ByEE3/GqgSW9yNR
Tv8tPIQPh86pYOf7UcHkwnGMsBzvUdUilX5kN9TdqEB46maT6t7xPsTRL267
h/ArCU218Yd9qHy4esGf8NX8TLVo9z4UOlVd+4jw/l0C6lsl+pAZj0TRMGHm
6/Pqrzt7EVO2B20n3n/Epk/dNbkXLZsvTgcSLuq01Fix7UVD5/3NWwmHHi/R
SBXsRZ/ybKtViPU1m5LYuavhK2obiT2USribb3anr+FXxA4Sm7pG7FfOLRdN
oeUetNpybkqQ2F9fqUbN/LIeJK2wA7tDmFs7Y9ewUg+6tPocfSDy0FrLp3Vp
rBvVnr1mFcaLQdq+c1oSOd1I4FfFb2UiTyqeFtp/iXWjV5z6Zc+I/C1OF2vP
felC0v9ebwwXwOBNhLjOzaQulKCpu25P5NXx9rROs0AXio8uaZMg8n357V09
fLEDLdwQJ0mJEPvZqnvLo6IDcQf7e28RxWBfV8ePuOAOVMvQrVQl5on5E8vo
XPyCXK7wG7oR81dEi/9zdukz4plHbdLEfFJlFRxTX35GzzMieo8zMQhTaiyq
CfmMSGuPBoqIeTY34j4muNyOpoeM37kR89/rFf42Z/kTkt5zU0Ga6AfjAKZE
86tP6HRR6fgDOaKPLlYETId+Qn7vTbNUiT7xT56TN1z5iBJVnky7Ev2zseZ0
bMfKB2R2I1FKQp3It+yrdPLyfyikqrqQBhjoas/vdQ/9DwlmFHxhGhPra6Px
5+lyK9q3i39OzhSDuwGP3S1W3qPFeB6SgyUGjY135ENXm1F5J71n8wEMZH3D
ivrXGxDPUFYWz3EMJi+XuytdbEBdu51VYzwxqEidJYX8qUfHDlwuIZ0i+qTW
O4DEUY8S79Hu4T4YhFOc9cw43yLXTkeupWAMvlQavH3MxUK1lbs5xv/BQDzk
WN+MEEJxSadrvyZhEB+6RzORVINU9GsVO25j4B0hMfBOogoJbRiaHbqLgcLl
19qgWYGkPWedDuVhkJ8g8E3BvQjlRLtEFNQS/S89EpL4/hnSCl8qZtRjQNpS
LtfcWYAeGFfdSGjC4MP2IxHwKw9RzF7o/dNG5F/zgZKieBbaLx3uNdGHQVup
Zgm/2wm0Rc1WhrpG9Kt/gaFGsS1+wdixcY2DDBlBZt/3p5/HX8jHUCe5yfAh
h0S194/Fq4475w0R31tv/RAlB7d0XKr8S9YOCTJUXCsod/jyFDcqI03I42Q4
qmS+5nCzBl+j5vX2EecDg9TchPn7CO+3/u4il0AGoSguERtHFv7JYLTf/xYZ
vk/+nTV54jU+cxj7rpJJhuy6rW/Vot/gopf0RDaXkoEckCtQXteAN52pKr44
SIbV7w7v3GXacPmOBCNZEwrMcj9VsfZow53eWyzFWFFgXIrnlkZ+G34/sur5
oi0FOg+WHeFS/4Af39qlMOtMgbLXlMkc+Ig32/WrOgRRwCfty+axo+042V7q
Rv1TCgxaOh70yezEkwfPJJ+WoYLhSLj7+95O/L3Py8hz26lwJzLrjJJEFy6U
uWx+SZU4/70avzp+twtPHnJxKtlNhVrFiBeead14J1deRtBhKmRvyqYdTf6K
azyyzgm+TQWN8d8T28wGcMWzTfnOojSYK8QL6fpsXIn09HaBNB1aFPVJfi5s
3HS25t4pBTo8eKQV0HCRjbeRQgZUNelgd09ZP/AtGzcXHuXptKBDcYJYw6e9
I3jur+yBFOL87HNmoS/BbRRX8sr73MqiwzeFwk0818ZwZ62h6m1eDOh+KOkz
3TaBH1QUjY7oZMIL3gK7vJkJfLs4td+WzYRbJ3S1j5IncS9dH7riFBNsdjhw
vP9rEoclmuoqnxjUFMQm5fVN4ooJByb4dcQgq2TuxdGJnzivsEtuS5oYlLqN
/Bm9PIU3u36mr/0tDmE+lZYH783gKXZ7FjgxSXC8r/pX+o15/Iuz8NzaO2nw
jG7a0N+2jGc8brTdsygLb64oKsY3r+NHTNrHJI3lwFV0pJbsxAmGuof0h6u3
waxeg+FgIBe49GaeyShVgEJf4aVjfjyQHCJ/RO6lMnBfHI08lswHIux3cnHZ
ahCZtsWKliwAeRxc9XHeGrCH++KOt7GCoDPjkpJprQnPrM50/swXhuei2BXO
AC3QuYPqWh9uBh4Qfcl3VweeHfsI1FERGJ1GHzJJ+uAp7aBoNCcK+9/ciXuS
vRueD/OVmU+RYDEhMpqoD7Am88jHcZKhyOfQCakoIwi01tR6zEGBA3H+xXNj
xtCUN2NXt0w4T7lju6MpnPRfPiS1kQa9f6crti+YwV0zzWV7PjokNKlsHY+z
gMdP//q3RpAOwc88eJi3LKCCEqa5Q4QOGjeKJffcsYAvI6991ul0YOrELBXl
WYDINdvhPCI3BSbq++PqLOBavVfL2l46jKmfiwz9YwHnLLIyHyXTodSrcNbY
3xIiC9/qk9KI+2OvdqSFWUIibawzPIMOgdl+s9NRlvD0mwpml0s8//XVTw9v
WsJYdFX0ajkdTMueaIoXWoJrY4ffgR46zJwfDTUZt4QzaivCVf2EVYUGnk5b
Qniq5BN5Nh1qR8wjGEuWkHbSY2Rlgg4fDVeOzvFZQTv/rFPuOh0qc4/WV8hZ
wbAfdUGEiwGG6soTSspWMNOpmxzGx4Ckss3W2ZpWsDn/Uut+EQY8foI9SzSx
AknRHO9KMgP8JHaVCuyxAqWQBn55BgO4Y71nLttZgf7g+MNECQZ4/Xxx8o+T
Ffz//wu4v5dGC3e3gv8BbCq7cg==
             "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{(-2) Pi, 2 Pi}, {-6.283185050723043, 
            50.76159943235257}}, "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
          "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>]]& )[<|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{(-2) Pi, 2 Pi}, {-6.283185050723043, 
           50.76159943235257}}, "Frame" -> {{False, False}, {False, False}}, 
         "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
         "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
         "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}}]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJxF1OlLE3AcgPHpnJut6S53WK1WJJhiSia2mTNCU0NS05wvUhJcS3FODSNm
2Mi0UElpUPMqqZkHOjMkaV7VdGllU0SHEmKbOkxqznvqqKB9fy8ePv/Bw03P
SchwxmAwsX/7Z0y0+/kdLnvAIb+r0ELgIP24P+sYXkj3bd1WIBU51iRvFzsj
hYR19uQPFnhdN2PpeIEsjmiuFx1H5k7YqI9pTHDkqpfZRGOAe30tHTy2J2js
XKmKd6ODwQ2uExVEGhh6dNy/bIsCHpS53ylfIoP62kCh6LsH+E38ZvG0hgQ2
+oyFxPUSwYBqvTRv2A3kBpydZrTiwaV3ETjX1zjwQJbm2q1yLGgfoaosuU5g
vmB/4o1Ne7/D7lNfB9a7bKCaMtTB7N0A83lKbFiOFeTdT4syZy6Dv8W7j4oe
mMB72hqeYGsKnNSEaluwA2CaX+ReYlWfwOFclDBJUm8A19QCNYtvAqdVHMmK
fhmUSTRRSc+soPD5yeTaig1QVDrsPKu3gR+LfX3LP9vBVMr8B3qKU7jDVZ4u
bK4AC6pzSNvpUhzoUrQgT1fgQbnyWDRT4QZedCny0T4kgu3R2YZfzSQwpLp/
cFTlAbanj4czFsig6Eii77k1CthpxHdFWqhgDB3nXeZEBwtigoJbMJ7gcJM1
YdCGFN+0XTm8jwnWRATZLuNZYEtb8pM+IrLbUxbkQ0ZOzr+X2FlIcsklY9MJ
ZMlQ5pe9WGTehYb6VwqkXK3lU5XISqbZUFiHbFv0pyU0Is2lPaW7b5Gpn6ak
8TPI7IAdUs8ssvApp9XbhFSKM+Z3lpEThNWURjvSKGVskrFs0Go4o5DhkR7N
d0fjyEgO5WWWho70u60jeLOR/LklVeUh5P9vgX8AEpM2Xw==
          "]], 
         Line[CompressedData["
1:eJwt1P9P1HUcwHHgPA84D+7b5+79kc9R2KQRRLiIERifVxYENEMJAX8A6xZ4
iQJqkQZFVyY1cMmCKaCYC+jACYQxXHz5vBOEICWg62C4hsjXAPFABDzgrNbr
h+ce/8HTS58Rm+Lk4OCw+9/+MzrK7bU1L5b+L0NDG3Oszp4sylA/r9mLmq0s
ylC3x12rO5QsytB+k7HW4MSiDE10fsRa7hFUTQ923bHWf09QNT0VXl2eup2g
anrUbFN+q9KiKtqTtHV6XKVBlXSjraY+hGVQBR1rWCjc66JG5TTo8mbzGamK
Ht4lM3lo3ejObQP++asKeuL1iiTNgpRy2W6fFMzIafAyZyN/utC+CzsSU/9y
RyX0d8O1qZeaZaiYVvn0B+9plaIiGlDal3ms2wV1pF4Brwxrrkjornc+/un5
+CfCzM/h4s0/iqn5w3zXLfo1wSOt+d2PCkQ0yJLVPk9WBHuPstJ61JGuF2+P
Hh1bFI7zW+LeX7ELk58S08D8feH6i7fpo0abkHmw1DibNiHUKTrrta3LQksE
aU9eGhaOh5SIwjIWhfN/dHPWk+1CyJcHIqcPzQkBFlFrq6mFf2BY/yb3q3Fh
m7/krsMDC/9FR1kIvzootOka9HdF47yleWdHjYgKrv3Wt5gns/wBv4iNuMI2
vlNvjmH+XuBHIxP3pZcP8cHK+OKyZ5f5pTq+joSO87bBSwkFOhs/XOmZvtA3
x9+PdW86YbDz2enNkfsuLfJhTUkVNTGOkPjdCwkXzizzfn3nfHsjRJCa1+00
0mfjr7W/Z8wwiKH9lK9vwW92Xn+jmOlMkUCyYuKGer8j6gIPQ7rCRrNEqBTq
MmSP9ZliVAabcieN+iIJ6g7GkmeitEUuQG8VVkh75PDmplyfjq+l4P25oL7X
oYDaqCND89UyGKwIOrxiVkJwqXCzt9IduNsj+qkBFdTqB0AzKUfVkPp0nO+r
SwqUgYYxSWOEVYlqIFot9s53VKMEsqIDg2ocGJSFbtNi7E0bg7Jg+MAW/5Sr
FvWAsvBA29sSgnJQczXhXJuUoBxcZ7IDfeQE5cAy8Uu6nRCUA/npmDHTcwTl
4HTnoVsbuwnKwbE3Lpf/UERQDox1HaHKEoJycFY7PZRzkaAcXJ3yV8VWEZSD
6byWvPUmgnKQ/Otg5t47BOXgSMCarGWEoBzknPe84j1OUA5KDCkTa3ME5cDs
/HB/lZ2gHIxlalbkIhbVweLQy0XZEhbVgXv1Z7175CyqA09FRVqzmkV14Hey
y9mbZVEdhI7OVJ7VsagO8F+oDv4BHdg3PA==
          "]], 
         Line[CompressedData["
1:eJwtmHk0lV3YxslU4TmDwzlEUqiQeTzkuc2nEoVKRaJQKqTIkFeFSuRV5KNB
EaIQGUvZpzImvcZMmWeZnWRK3/Ot9f2112+tvdbez3Vf97Xv9ci4eNm4ruPi
4hLm5uL6v3XvHsxkRUacbVVqa/4nwRj0C6/OrN8szs7M9t+4J9YYlGR+PhGT
EGdzEhurHtw1BmypalGNKs72OimnrH7DGBoyruecWSfO7k81z/Q7Zwz263+J
f+9nsBsE/Y8qGxqDe1XnTO5zBrvoYHyy/aARhJllJrnJMdgxH9j1CRpGcLF5
mRorQmfrebrzBobi8MVRYnRQRIytLFzA1TJrAH/KXuYyxUXZKQPNiiJRTBh4
M3vv4AYae2/X51+rNF3QTuZvvisowk5qCnz3YFQLDLY2KkcuUtjOqqqt4nka
IBmEBUeNk9kH/+MoDb5Qg/rHavZuXSQ2Te9DaMJnFfjvTP6IVqkwO2eru3+t
qhKk72zQPfBBkE2bplmFSu4E1Yf13j41G9iWlnbHjx2SBxnV3R1irwTYK2d8
ez7Eb4Pxd2Z8/Hl87MVIrdwxCxnYdK7U+UoUD5vtP8qjJrkZ1r5Q02YucrN3
3A++aGMpAQcT5AvpHtzsInoKlzwuAamuzApDF272HXVXY251CdjL5TIUZcPN
Xr+jqusbXQLitfLkdmpwsy2py5cqB8Rh1zPrdGcOF1tycNPm7cHi4OAb9aLR
j4v97ar12ZxCBlzChezO/l5DLjf8Opt308HUBIWfGl5Djf/2VCWr0UHMwqfY
sWUNvftx+dMVOTqUWLVJ2OSvoQlN2X5DYTqsOqb2Mb3WUFv3g1q9LjEIu2rg
JTTyBzUyKsz7/xGD+Lfn77z+vopM5Wy7/1SLQolGHftX4TJSerbrvpM/DVTp
d1nU9GVEm8vSEfeiQcayZb1y/DIan//A7nClQcLHrz3ufsvomMCDYF9bGlyx
/rrWrr2MLC/QUzao0ED7XK1BWfES8tG6EJ81IgIFKTUlN98uotkiB6WuEyKg
dDMCnmcuImd+qmnsYRFIPbunGiUuog98R/GDViIQp1rTuhiwiPRoj3sHd4vA
pbLqBQ/mIjL1XqjzkBIB9Y4qTevS3yhVdtV2tosKrymVufQPC+juP/uEx05T
weYEZW/vqwU0eJ6v6K8DFRZeOgxkPFxAMa6rydKHqGBgOi/K9F9AP32TTYLM
qFDttyXIQWMBPaNWZyfLU6G3M9AsOfMX2mhwS+rVOAUo6SodCvEcNGRV55Eb
QIGCucBL82Ec9PPWjqBpHwrY45VC7y9xkGkt+5vOeQoktTng+w9y0IJ3Bj54
ggIKgndSvYQ46JiuHSvLlALG3oOeBTfmkWyx1K9FCgUuMRN5DL3m0KfL/u/D
8skQF7fpx+ETc2iW4qrJn0OGgqknBV7755DM9FpiTAYZFlJSXJMV59Dls0xl
9hMy+AtmVfGOzqI5x/rAO7fJ8M+Pssjak7PI0tw/tdaJDEnaRqcHrWcRa0D3
d+cxMqCYzwZ/DGeRCTtd59chMnCZVU8qS80iBead68aWZAjNbrC+3z6DGnd5
67H0yHD7n0GRozYz6BqtRI9LlAwZbW4TF41mkHmepftTMhlq1MfK76jOoA3R
0TcshMiwcWTS9z02g24LSNx4w0MGiadTr/H4aZTFebp3ZIgEckY03bpbU+hN
mdeiaToJmOFOrFGPCZS7f7r1tCYJahaD007sm0BKd3S2WCmTwP7843UtihNI
IubPnPkOEvjatr//OPET2Syu03WXJEGujK3aI8+fSJM5j7vwkWB7mbmElc84
qgw9a2HcgUGRmuuVcptxFHYkWke2BQPTtNBmpsY4KuCovhGtx8Alih29nTOG
vCOnzbdXYpB0jMnD7TeGTivYTPHmY0D7vWsiP2AUCStna778F4PnHpZ7FI6N
InJiztewSAzUuz3SnzFH0bW6XdOetzA4UPHi5N2VEfTlflrTxRAMImNlWtyC
R1B1dKCEujcGEgKg3uU4gs6YefBHnMcgI/DEv7aGI+haRevV6TMYVDo/2gN/
h5HQVqUNP50xWKcqWiZ+fRhFW757+tgOg3vPNTbFOA+jJquEHq+DGGyh2/jz
Gw+jKAlOpo0VBrvXotXn1w0je0yu25yFgf/X9S++hg0hN/fz5WMGGAjAdl4T
1yG0r1DXXo+JQXy+mfNbsyGU/vWGX4IOBgUPb2xK5x9ChUdibMLVMZg+s/pv
yO1BtKcn5rb4Tgyac9TIVm6DqDP8cVqRPAbvOG4xkqaD6B8DNwE3WQzCrjXE
vP07gHg6NBJXpDHwqOSn3O4aQL1snZo+KQyshQzuHS4dQK3FS7s7NhF6JKTf
m/cbQHMtxb+4GRj87eqkfLIbQDJ/8nXVxDAY3Ea5H6M+gJw0Pdk+NAxevw66
v2uqH21qkkxSomAQ9yuXulrbj2KZFE4qCYNA/eH7XzL70eY3n6NVMKLeVQdi
3V37kW+Dy/0gQQx2Ct8U0TbpR/oB1isGGzHAbEtjeWX6EUNtOYO8AQNOwoxI
01of4llyebQggEF7t1xc8g+CGyIap/gxKJM9TvN+14ck3npaLfFhkOoRE2eY
0IeM8igkMYIjcitown59KOitD82MFwPPheW4Tts+9LXh3ombPBjYGqiKvlTr
Q0rLnpPt6zDQveH6wJ/Uh56pb/yIE7y5+qGoxWQvUgg61V7MjQEPVv9AtLYX
VTYFahsTPGrLJzaY0YsuGxxo6+bC4FsiM/7NzV6kWzhQdpfg/B4vseune5GQ
oda4FcEJcmnx1sa9iPPd9NhWgoPPdYht3tKLZkKopPUEV7hIK7ev9CBuvaT1
XATHTEUo+xX3oK3rRs03EnwskKMscqkH2XdO18gTLMfvpJKr3IPSygvvHSJ4
5l6Nyv7xbsRVppcUT/A7KU3V8bRu5FkVND1GcHhmkuot5270qzco3Jq4/wGt
DWqyUt3ozkbmySqCJT5eUvvY1oU0TYtCDhLfP2TZrXYirgv9ujszMElwbhtL
fcW6C5WPjEY9JvQLPJ2vniDYhdIPPg10JPQ1m5HS0Kr6gZJrRbJVCf07BOY1
vAx/oOpp7V5hon6psY6aQsudaDFxqJe+HgMv6WrNzMJOhNvZyGsS9ebVeaI1
oNSJuJZcQ54T/vj2SUD72mgHCh0Qil0QwiDRykdbKrUDUbsv/jxO+EnZzULn
yKYOdInHz8OR8N/ibJ4O53s7wpVF7y1RMfgcLKl77347kjzrs/qC8Kv9g1nd
2g3tiE5yT9Yn/B1a/oiJL7aiqU16soZbiHp+04t1LWlFAjOj3823YmDV3voz
0r8VhWv4+DkR/SQxJfKkbfE7ereecpW9g9CDHvX34lIL2jgRkmxE9KfYVgX7
hLct6LT+yrsaTQyClKpzywJa0LZl64/ORD+bG/G6CC43o/6K8LiPRP93eVwt
T11uQhC/9RAQ+WDsKyFV+64JtZ8822Kxj8ijkBLf2cAm1PMwwtiJyJPLcRx5
w5VGtMXx8MAHIn82lp2PaF1pQHckZHCmC+Hvre8e05b/Q3P+QU4q1zDQ01nY
7xz4HxJjHs3WCiP0tVT/m738DT3xII/uu43BI9+XzhYrdWhGXFA2IwaD6uqH
8oGrtcgzT61IOgWDrV5BuT1rVWhjuYmJYDUGk6HFzkohVehNUMkJch0GJQnz
1IC/lag8hd9drpHIk0/nfKlclUgaVzEM+YHBVVEHphl3OSrNzeOfm8Xge6lB
+UseNgq/EsTVLE0CyQCX7jkhhMTk2sPeypEgKnCfZgy1DDn4hR3JUSTBuWCp
3i9S7xGdt3ykQocECqEfdUCzBMHX4fysAyTIjN4wouCci1ik0mX7cBKobxkK
iKnLQecX505pRJGAuq1YrrYtC1mE+2+SiiVBw47jwTCdgRTunPfdnEyCA5rP
lRQlk9EzWGxu+0CC+gLN/PUn3ZH5ySRjpWUSNF/OMlTPs8b/Mbav/sNFhidX
zMYOPL6EF8nfFpvkJUNDKlXM9nIE/v60Q0Y/8d6e0w9Qsjv5GJcu/p68U4oM
JTeziu2+Z+NGhdQJeZwMTkrmf+zuleFrYhld3cR8YJCQHr3wDOE9e8cc5aLJ
IHSDh2xpz8abDIZ7LseSYWzyVPKk+0d8/pjImHISGVIqZMtVb33GKdeYZFIB
GWi+6RuKK6rwLxfe54X0kWF1zO6Ls0w9Lt8abbTVhALzvNnKe13r8aN1Fku3
91BgXJovVj2zHn92/f2bRWsKtB0qPM6j1oCflm1XmHegQOFH0clUaMRrbXpU
7K5QwDPxO2nUqRmn2UrfrcymQB/L/pBnUhse13ch7rwMFQyHrjrXdbXhdZ5v
r/vsoMLD68kXlKTacaGkZfNrKsT89248fPxROx7X73g0fzcVPikGF7klduBt
PBlPrhyjQgqWQneK+4Grv9ib6v+ACurjvya2m/XiihdrMh0oIsB5jb9m6A/i
StTsB1lbaPBVUZ/q7TiIm86XPT2rQIPnL7R9q0IG8XpqQK+KJg1snu7S9ysf
xM2Fh/naLGiQF72pqmn/EJ4+ndIbT8zPnhd+d0efHMaVPDJavrFpMKLwGuO7
OYo7aPd/2O4hCh1pmz1n6yfwQ4qUW8FtYlDEn2WTMTeB75AU67EeFINYdz0d
J9ok7qHnyVCcEQPLnXZcdUcmcViiq6wK0KEsK+J+Rvckrhh9cGK9Lh2S8zlF
ThNTOL+wY/rXRDoUnBz6Oxw6g9eeaGH8OcWAIM9S1qGnc3i8zb7f3CISYP9M
5cjjuwt41luJ0ZUHUuB2q2ZdT/0y/uRltfW+xS3wOUxRMap2DT9u0jy62Xgb
nKAMfaId5QZDvcP6Ax/kYJ5ZZdjnxwOOXUkXnhTsgNdewksu3nwQFyB/XO6t
IvCGDF93iRMAmeoH+8TMVOB64rY99LgNkMHFUxl5Tg328YbsLI8QBN05x/ik
vRqQs+dC21SmMLyhiIRx+2qB7kNU8S2NBHxAeSvwSAdyXBpBbJgMw7OoIYnK
BLctdopGHAoc+Pww8lWKAbwZECg0n6HCrBQPqUYeh700PvlIbhrkeh52l15n
BH57NbVfconCwcjLeZwzxlCTMWdTsUxwxq7WHW0mcOby8mHpjXToOvVYsfmK
GTwy01y2FWBAdI2y7LigBbzMPvI/ZYIM8M9x5ZMQsYAS0SDNnWQGqN/N27xP
wgK+D330XGMwQEL39lLuDgsg37QeyFBgQJaJ2oFIMwu4Wenx9c9+Boyq+VwP
DLEAH4vkpBdxDCjweD1vzLGA66/L9amJxP6I8NbEFQuIoY+2XX3CAL8U7/nZ
dSzIHlEWsUknzv8Y3pRGYcHorfe3VosZYFr4SlNShQUnqlu9D3YyYO7ScKCJ
BwsuqK4Iv+8hWEWoN/siC64mbH4lP8iAT0PmweIBLEg84zq0MsGARsMVJ84t
FjSvnz+avsaA0nSnypI0Fgx4i/0m84iDodquCaVsFsy16cUFCYjD/ULS3pQC
FpAyr307QBaHl69EcmI+s2AzJfVcKU0cvKW0CjbUskApoGq9vLg48Eacmwtt
ZIF+33hajJQ4eEwVnfnbzoL//38Bz/bT6Vf7WPC/huS+jQ==
          "]], 
         Line[CompressedData["
1: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
Ffz//wu4v5dGC3e3gv8BbCq7cg==
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PlotRange" -> {{(-2) Pi, 2 Pi}, {-6.283185050723043, 
         50.76159943235257}}, "Frame" -> {{False, False}, {False, False}}, 
       "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
       "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
       "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{411., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{(-2) Pi, 2 Pi}, {-6.283185050723043, 
     50.76159943235257}}, {{-6.283185307179586, 
    6.283185307179586}, {-6.283185050723043, 50.76159943235257}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[1051]=",
 CellID->256275073,ExpressionUUID->"f154aec9-1c63-4687-af42-d0ccf2bb4af5"]
}, Open  ]],

Cell[TextData[{
 "Confirm that the slope is indeed unity at ",
 Cell[BoxData[
  RowBox[{
   StyleBox["x", "TI"], "=", "0"}]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "22a4b2a9-e671-41b6-aece-9fbdc10c71a5"],
 ":"
}], "TechNoteMathCaption",
 CellID->700662694,ExpressionUUID->"c49c47bb-07bf-4089-86bb-5876026c9710"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"#", ",", "x"}], "]"}], "/.", 
    RowBox[{"x", "\[Rule]", "0"}]}], "&"}], "/@", "out"}]], "Input", \
"ExampleInput",
 CellLabel->"In[1044]:=",
 CellID->70632808,ExpressionUUID->"a98557a9-9b98-4467-9b05-2a75aa7ee5c5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1"}], "}"}]], "Output",
 CellLabel->"Out[1044]=",
 CellID->542659924,ExpressionUUID->"e8303556-47fa-44dc-be41-04fab469a82a"]
}, Open  ]],

Cell["Duplicated items are treated the same:", "TechNoteMathCaption",
 CellID->444986081,ExpressionUUID->"cad94071-5735-4208-946d-8633c71f82c6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"6", ",", "7", ",", "7", ",", "7", ",", "8"}], "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Total", "[", "#", "]"}], "\[Equal]", "14"}], ")"}], "&"}]}], 
  "]"}]], "Input", "ExampleInput",
 CellLabel->"In[1053]:=",
 CellID->991815813,ExpressionUUID->"c0c0989c-ee18-4052-b455-a6d37724b89c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"6", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[1053]=",
 CellID->33854908,ExpressionUUID->"0f978c9a-ffce-47f3-a31b-a17e7d767b52"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "506cb10a-9da0-4c29-8a33-2152eec9a97d"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->14107563,ExpressionUUID->"26a11390-68be-4741-bd0b-257c701cdbaa"],

Cell[TextData[{
 "The main difference between ",
 Cell[BoxData[
  RowBox[{
   StyleBox["SelectPermutations", "InlineResourceFunction"], "[", 
   RowBox[{
    StyleBox["list", "TI"], ",", 
    StyleBox["crit", "TI"]}], "]"}]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "887b0cdb-4aa9-475a-8a51-00a6b4931aff"],
 " and ",
 Cell[BoxData[
  RowBox[{
   TagBox[
    TemplateBox[{
      Cell[
       TextData[
        StyleBox[
        "Select", "SymbolsRefLink", ShowStringCharacters -> True, FontFamily -> 
         "Source Sans Pro"]]], "paclet:ref/Select"},
     "RefLink",
     BaseStyle->{"InlineFormula"}],
    MouseAppearanceTag["LinkHand"]], "[", 
   RowBox[{
    RowBox[{
     TagBox[
      TemplateBox[{
        Cell[
         TextData[
          StyleBox[
          "Permutations", "SymbolsRefLink", ShowStringCharacters -> True, 
           FontFamily -> "Source Sans Pro"]]], "paclet:ref/Permutations"},
       "RefLink",
       BaseStyle->{"InlineFormula"}],
      MouseAppearanceTag["LinkHand"]], "[", 
     StyleBox["list", "TI"], "]"}], ",", 
    StyleBox["crit", "TI"]}], "]"}]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "3fce018e-60cb-463b-bfb8-83aa4e798172"],
 " is the memory usage:"
}], "TechNoteMathCaption",
 CellID->771301361,ExpressionUUID->"88cb37a6-3315-4822-b6f3-13fb9720dfb8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MaxMemoryUsed", "[", 
  RowBox[{
   RowBox[{"result1", "=", 
    RowBox[{
     StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"3", ",", "13"}], "]"}], ",", "6", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Total", "[", "#", "]"}], "\[Equal]", "24"}], "&"}]}], 
     "]"}]}], ";"}], "]"}]], "Input", "ExampleInput",
 CellLabel->"In[1063]:=",
 CellID->535666113,ExpressionUUID->"f7552833-4362-40df-b886-80a1a576e5dd"],

Cell[BoxData["76800"], "Output",
 CellLabel->"Out[1063]=",
 CellID->27544576,ExpressionUUID->"835b6aa8-cabc-4a9d-8fcc-ef6f20ff0999"]
}, Open  ]],

Cell[TextData[{
 "Using ",
 Cell[BoxData[
  TagBox[
   TemplateBox[{
     Cell[
      TextData[
       StyleBox[
       "Select", "SymbolsRefLink", ShowStringCharacters -> True, FontFamily -> 
        "Source Sans Pro"]]], "paclet:ref/Select"},
    "RefLink",
    BaseStyle->{"InlineFormula"}],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "23aaab05-6e53-479f-8ef4-f954753eb9e5"],
 " and ",
 Cell[BoxData[
  TagBox[
   TemplateBox[{
     Cell[
      TextData[
       StyleBox[
       "Permutations", "SymbolsRefLink", ShowStringCharacters -> True, 
        FontFamily -> "Source Sans Pro"]]], "paclet:ref/Permutations"},
    "RefLink",
    BaseStyle->{"InlineFormula"}],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "cf010945-528b-4498-8a76-bd117c2c5e70"],
 " uses 500 times more memory:"
}], "TechNoteMathCaption",
 CellID->444708281,ExpressionUUID->"507f59f5-e50f-482c-82e3-a22514659678"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MaxMemoryUsed", "[", 
  RowBox[{
   RowBox[{"result2", "=", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"Permutations", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"3", ",", "13"}], "]"}], ",", "6"}], "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Total", "[", "#", "]"}], "\[Equal]", "24"}], "&"}]}], 
     "]"}]}], ";"}], "]"}]], "Input", "ExampleInput",
 CellLabel->"In[1064]:=",
 CellID->887464862,ExpressionUUID->"5b6fc599-e64c-4912-894b-4ca97226a080"],

Cell[BoxData["37563192"], "Output",
 CellLabel->"Out[1064]=",
 CellID->141130879,ExpressionUUID->"f697d21b-748f-4239-8677-d899dbb70ca3"]
}, Open  ]],

Cell["Verify that the results are identical:", "TechNoteMathCaption",
 CellID->486162817,ExpressionUUID->"dbb75bbd-ba6c-4d7e-810c-301c7eef1ecd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result1", "\[Equal]", "result2"}]], "Input", "ExampleInput",
 CellLabel->"In[1065]:=",
 CellID->615462631,ExpressionUUID->"ad01a415-f04d-42f8-9562-c0fdbb2a247c"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[1065]=",
 CellID->86302315,ExpressionUUID->"ba76ab0b-b0b0-4a5c-9eaa-34d8c0e08a80"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "f032f54c-6037-4833-bd46-ad26cb5b760f"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->14107564,ExpressionUUID->"0c2ec0db-99f8-49c3-ad10-05c18b8ff704"],

Cell[TextData[{
 Cell[BoxData[
  TagBox[
   TemplateBox[{
     Cell[
      TextData[
       StyleBox[
       "Head", "SymbolsRefLink", ShowStringCharacters -> True, FontFamily -> 
        "Source Sans Pro"]]], "paclet:ref/Head"},
    "RefLink",
    BaseStyle->{"InlineFormula"}],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "8c0f8384-76d7-4673-a539-f1ad4ec1be0d"],
 " does not have to be ",
 Cell[BoxData[
  TagBox[
   TemplateBox[{
     Cell[
      TextData[
       StyleBox[
       "List", "SymbolsRefLink", ShowStringCharacters -> True, FontFamily -> 
        "Source Sans Pro"]]], "paclet:ref/List"},
    "RefLink",
    BaseStyle->{"InlineFormula"}],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "aaec6739-c6bd-4abd-b4fc-5b22a5e5aa1d"],
 ":"
}], "TechNoteMathCaption",
 CellID->177535240,ExpressionUUID->"12d95e0b-3357-46b9-8228-02dbd8d5f70e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "]"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Plus", "@@", "#"}], ")"}], "\[Equal]", "6"}], "&"}], ")"}]}], 
  "]"}]], "Input", "ExampleInput",
 CellLabel->"In[1066]:=",
 CellID->661797484,ExpressionUUID->"eb5243ad-37c4-464d-8548-9ddc6f6ee58b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "5"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"2", ",", "4"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"4", ",", "2"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"5", ",", "1"}], "]"}]}], "}"}]], "Output",
 CellLabel->"Out[1066]=",
 CellID->4477802,ExpressionUUID->"cf32f940-542b-4426-a494-db342588d3ce"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  StyleBox["SelectPermutations", "InlineResourceFunction"]], "Text", 
  "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "a72f8cac-92f4-45e3-9a47-37d138b78aed"],
 " might take longer as it is written in higher-level code as compared to the \
implementation of ",
 Cell[BoxData[
  TagBox[
   TemplateBox[{
     Cell[
      TextData[
       StyleBox[
       "Permutations", "SymbolsRefLink", ShowStringCharacters -> True, 
        FontFamily -> "Source Sans Pro"]]], "paclet:ref/Permutations"},
    "RefLink",
    BaseStyle->{"InlineFormula"}],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "8a59004e-aaca-42b5-aba0-136efb425491"],
 ":"
}], "TechNoteMathCaption",
 CellID->445973593,ExpressionUUID->"9833fc09-0507-48b0-9628-3da3e6ba1653"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"MaxMemoryUsed", "[", 
   RowBox[{"time", "=", 
    RowBox[{
     RowBox[{"AbsoluteTiming", "[", 
      RowBox[{
       RowBox[{"result1", "=", 
        RowBox[{
         StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"3", ",", "13"}], "]"}], ",", "6", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Total", "[", "#", "]"}], "\[Equal]", "24"}], "&"}]}], 
         "]"}]}], ";"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<Time [sec]:\>\"", ",", "time"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Memory usage [bytes]:\>\"", ",", "%"}], "}"}]}], "}"}], 
  "]"}]}], "Input", "ExampleInput",
 CellLabel->"In[1067]:=",
 CellID->869163183,ExpressionUUID->"567e5de2-e258-4c15-b489-04cabbda0e04"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Time [sec]:\"\>", "3.1487261`"},
    {"\<\"Memory usage [bytes]:\"\>", "76800"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->"Out[1068]=",
 CellID->56459738,ExpressionUUID->"6a7ba05b-87fd-43d7-80f7-f59039185438"]
}, Open  ]],

Cell["\<\
Using the built-in functions is faster at the expense of 500\[Times] more \
memory:\
\>", "TechNoteMathCaption",
 CellID->686745089,ExpressionUUID->"91c3c161-1737-4015-8ba4-ac5c75fb472a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"MaxMemoryUsed", "[", 
   RowBox[{"time", "=", 
    RowBox[{
     RowBox[{"AbsoluteTiming", "[", 
      RowBox[{
       RowBox[{"result2", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Permutations", "[", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"3", ",", "13"}], "]"}], ",", "6"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Total", "[", "#", "]"}], "\[Equal]", "24"}], "&"}]}], 
         "]"}]}], ";"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<Time [sec]:\>\"", ",", "time"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Memory usage [bytes]:\>\"", ",", "%"}], "}"}]}], "}"}], 
  "]"}]}], "Input", "ExampleInput",
 CellLabel->"In[1069]:=",
 CellID->674295727,ExpressionUUID->"08342840-648c-44c8-8431-aa966b2c60ee"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Time [sec]:\"\>", "0.8987349`"},
    {"\<\"Memory usage [bytes]:\"\>", "37562680"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->"Out[1070]=",
 CellID->504109667,ExpressionUUID->"88ab02f2-9c85-4be6-a491-3d0a77cdbd08"]
}, Open  ]],

Cell["Select subsets from {1,2,3,4,5} that add up to 10:", \
"TechNoteMathCaption",
 CellID->694507399,ExpressionUUID->"a944aa67-117c-410d-b531-213c1b4d9d91"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{
    RowBox[{"EqualTo", "[", "10", "]"}], "@*", "Total"}]}], "]"}]], "Input", \
"ExampleInput",
 CellLabel->"In[1074]:=",
 CellID->875714386,ExpressionUUID->"65ef81a9-6627-48fc-91e1-199beb392379"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[1074]=",
 CellID->242003258,ExpressionUUID->"72a11c81-e6d6-4596-9748-82ccbcde0016"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "249cf626-a736-4403-9583-bfc786d954fc"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->112658320,ExpressionUUID->"548c40d2-9bc6-4475-9cb7-2618ace248d1"],

Cell["Select subsets of length 2 to 4 that sum up to a prime:", \
"TechNoteMathCaption",
 CellID->327143208,ExpressionUUID->"969c7aee-e0a9-493f-a91b-b62746b479be"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}], ",", 
   RowBox[{"PrimeQ", "@*", "Total"}]}], "]"}]], "Input", "ExampleInput",
 CellLabel->"In[1075]:=",
 CellID->283656556,ExpressionUUID->"2ec72d0c-2952-4567-94b4-a6b2ef859521"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4", ",", "5"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[1075]=",
 CellID->121246890,ExpressionUUID->"9ccc8339-e6e4-4fc9-8763-f1dcc98a0af8"]
}, Open  ]],

Cell["Select all subsets of length 2 that add up to 6:", "TechNoteMathCaption",
 CellID->158433383,ExpressionUUID->"155e1765-89ad-4e48-a483-0c47f2abb86b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{
    RowBox[{"EqualTo", "[", "6", "]"}], "@*", "Total"}]}], "]"}]], "Input", \
"ExampleInput",
 CellLabel->"In[1076]:=",
 CellID->499374772,ExpressionUUID->"920b9332-cd2e-4a1a-95aa-3af1ed757202"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[1076]=",
 CellID->171051003,ExpressionUUID->"75276d12-dd1c-49ae-81b3-12bbc18fadac"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "150bfaf0-2496-47a3-baad-a980aa1e4c86"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->519906287,ExpressionUUID->"be682dd5-00fa-4cc4-acda-8b7f313209dc"],

Cell["Select all subsets that add up to 0:", "TechNoteMathCaption",
 CellID->858830434,ExpressionUUID->"e0d777b5-2516-4700-aa24-aff6f1513f46"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", "3"}], "}"}], ",",
    "All", ",", 
   RowBox[{
    RowBox[{"EqualTo", "[", "0", "]"}], "@*", "Total"}]}], "]"}]], "Input", \
"ExampleInput",
 CellLabel->"In[1077]:=",
 CellID->634576773,ExpressionUUID->"893e219a-b964-4906-b220-e837d68eab36"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "0", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", "0", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", "3"}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[1077]=",
 CellID->226659544,ExpressionUUID->"4c2140e6-c76c-4560-9789-02b32634e170"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "b2ed95a6-2217-4950-99d7-ebe665e54669"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->490055446,ExpressionUUID->"00957d36-3b2d-46bc-95dd-91866f27fe0e"],

Cell["Select all subsets of odd length that add up to a prime:", \
"TechNoteMathCaption",
 CellID->535860945,ExpressionUUID->"4342f691-4bc1-465a-a81f-8ef916ea81ce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "7", ",", "2"}], "}"}], ",", 
   RowBox[{"PrimeQ", "@*", "Total"}]}], "]"}]], "Input", "ExampleInput",
 CellLabel->"In[1078]:=",
 CellID->630622865,ExpressionUUID->"1caefee4-4a4d-4150-bd62-4f7e22ad8ff3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "2"}], "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", "0", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "0", ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", "3"}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[1078]=",
 CellID->313507277,ExpressionUUID->"7a3df43e-f6cc-4c9e-be6e-17a80c545361"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "3b47da2f-2b37-418d-a4b3-d0029c7a8d9f"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->14107565,ExpressionUUID->"e1f489ff-f249-4336-bcb1-ef172450e1dc"],

Cell["Select the first 8 subsets that add up to a prime:", \
"TechNoteMathCaption",
 CellID->792813693,ExpressionUUID->"f0356223-7d11-43f9-9048-e35539618d9b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", "All", 
   ",", 
   RowBox[{"PrimeQ", "@*", "Total"}], ",", "8"}], "]"}]], "Input", \
"ExampleInput",
 CellLabel->"In[1079]:=",
 CellID->885845820,ExpressionUUID->"a17f5670-cc1e-4099-92dc-0686fd6a1d80"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "5", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[1079]=",
 CellID->9609939,ExpressionUUID->"35cb148e-f11d-4987-a7cd-0f780f760801"]
}, Open  ]],

Cell["Find subsets that add up to 25:", "TechNoteMathCaption",
 CellID->221442697,ExpressionUUID->"7b2b434d-690b-4139-ad9f-7e5c4b03e086"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
  RowBox[{
   RowBox[{"Range", "[", 
    RowBox[{"6", ",", "13"}], "]"}], ",", "All", ",", 
   RowBox[{
    RowBox[{"EqualTo", "[", "25", "]"}], "@*", "Total"}]}], "]"}]], "Input", \
"ExampleInput",
 CellLabel->"In[1080]:=",
 CellID->874035320,ExpressionUUID->"286f7bd4-4d6e-4fc6-98b2-311a5775b450"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"12", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "7", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "8", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "9", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8", ",", "10"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[1080]=",
 CellID->272543979,ExpressionUUID->"7f814eb0-9c6a-418b-83fd-cc4e9e11e07c"]
}, Open  ]],

Cell[TextData[{
 "The main difference between ",
 Cell[BoxData[
  TagBox[
   TemplateBox[{
     Cell[
      TextData[
       StyleBox[
       "Select", "SymbolsRefLink", ShowStringCharacters -> True, FontFamily -> 
        "Source Sans Pro"]]], "paclet:ref/Select"},
    "RefLink",
    BaseStyle->{"InlineFormula"}],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "4e3a29a6-d825-41a5-95e5-746e57e0e82d"],
 " and ",
 Cell[BoxData[
  TagBox[
   TemplateBox[{
     Cell[
      TextData[
       StyleBox[
       "Subsets", "SymbolsRefLink", ShowStringCharacters -> True, FontFamily -> 
        "Source Sans Pro"]]], "paclet:ref/Subsets"},
    "RefLink",
    BaseStyle->{"InlineFormula"}],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "46f507ca-f282-4d93-8caa-71bb9d9b1cb5"],
 ", and ",
 Cell[BoxData[
  StyleBox["SelectSubsets", "InlineResourceFunction"]], "Text", 
  "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "f86a3070-918d-410d-878a-e936161f670a"],
 " is the amount of memory used:"
}], "TechNoteMathCaption",
 CellID->132229044,ExpressionUUID->"69692191-aab4-4299-952f-c1cc1c89509f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MaxMemoryUsed", "[", 
  RowBox[{"res1", "=", 
   RowBox[{
    StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"6", ",", "24"}], "]"}], ",", 
     RowBox[{
      RowBox[{"EqualTo", "[", "25", "]"}], "@*", "Total"}]}], "]"}]}], 
  "]"}]], "Input", "ExampleInput",
 CellLabel->"In[1081]:=",
 CellID->982577960,ExpressionUUID->"e473066b-12ac-4029-b1f9-3063d00a0763"],

Cell[BoxData["62528"], "Output",
 CellLabel->"Out[1081]=",
 CellID->70864155,ExpressionUUID->"7033a7e9-5bbc-4577-83de-084d9f274c16"]
}, Open  ]],

Cell["\<\
Compared to naive implementation, which requires roughly a 1000 times more \
memory:\
\>", "TechNoteMathCaption",
 CellID->361259892,ExpressionUUID->"01d99b74-67fc-4c7e-a702-d948e589dc42"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MaxMemoryUsed", "[", 
  RowBox[{"res2", "=", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Subsets", "[", 
      RowBox[{"Range", "[", 
       RowBox[{"6", ",", "24"}], "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"EqualTo", "[", "25", "]"}], "@*", "Total"}]}], "]"}]}], 
  "]"}]], "Input", "ExampleInput",
 CellLabel->"In[1082]:=",
 CellID->823753171,ExpressionUUID->"fd138c29-3c6c-4ca5-9a35-b6408e129f2e"],

Cell[BoxData["65071816"], "Output",
 CellLabel->"Out[1082]=",
 CellID->877496089,ExpressionUUID->"2eb1c1d4-4eee-41d0-b5d2-18fd98ea0206"]
}, Open  ]],

Cell["Verify the result is the same:", "TechNoteMathCaption",
 CellID->324048877,ExpressionUUID->"b7a75d80-b305-450d-8fa1-ecf87acb9afc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"res1", "===", "res2"}]], "Input", "ExampleInput",
 CellLabel->"In[1083]:=",
 CellID->183907914,ExpressionUUID->"b042107b-7011-4203-af01-f18a94cfe317"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[1083]=",
 CellID->386927958,ExpressionUUID->"48448890-250e-4c48-bd77-4ed4143c8ec0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "15bb47e8-7b90-44e7-b198-e92c8205aad5"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->14107566,ExpressionUUID->"32ec51a3-cc5b-45d9-bc7a-6b390b2e9f99"],

Cell[TextData[{
 "With a criterion that is a tautology, ",
 Cell[BoxData[
  StyleBox["SelectSubsets", "InlineResourceFunction"]], "Text", 
  "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "ee25029d-a3a5-402d-a2c3-227f6f7b0cbb"],
 " and ",
 Cell[BoxData[
  TagBox[
   TemplateBox[{
     Cell[
      TextData[
       StyleBox[
       "Subsets", "SymbolsRefLink", ShowStringCharacters -> True, FontFamily -> 
        "Source Sans Pro"]]], "paclet:ref/Subsets"},
    "RefLink",
    BaseStyle->{"InlineFormula"}],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "32120120-c115-4a1b-b58d-e18eca257fa2"],
 " give the same results:"
}], "TechNoteMathCaption",
 CellID->273207191,ExpressionUUID->"ff04ed52-8585-41d4-86d1-ef63a3cb6c19"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
   RowBox[{
    RowBox[{"Range", "[", "5", "]"}], ",", 
    RowBox[{"True", "&"}]}], "]"}], "\[Equal]", 
  RowBox[{"Subsets", "[", 
   RowBox[{"Range", "[", "5", "]"}], "]"}]}]], "Input", "ExampleInput",
 CellLabel->"In[1084]:=",
 CellID->1112728,ExpressionUUID->"a31f1c2c-9660-4aea-b6ba-f484fcc76302"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[1084]=",
 CellID->381398679,ExpressionUUID->"09abf768-1f85-4170-bd9e-24709506b4e0"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  StyleBox["SelectSubsets", "InlineResourceFunction"]], "Text", 
  "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "8921f981-8874-4c58-8abd-5434a354d305"],
 " might not be able to return the number of elements that are requested:"
}], "TechNoteMathCaption",
 CellID->306503519,ExpressionUUID->"995a27ef-339b-460d-9fb8-3fa3567a57a0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
  RowBox[{
   RowBox[{"Range", "[", "5", "]"}], ",", "All", ",", 
   RowBox[{
    RowBox[{"EqualTo", "[", "8", "]"}], "@*", "Total"}], ",", "5"}], 
  "]"}]], "Input", "ExampleInput",
 CellLabel->"In[1085]:=",
 CellID->999001902,ExpressionUUID->"8d8ff493-9d70-4d9b-8d48-71d887b781e3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[1085]=",
 CellID->185246950,ExpressionUUID->"1f8aab64-0291-4aba-a70a-da1900cc6eb0"]
}, Open  ]],

Cell["Find subsets that add up to 0:", "TechNoteMathCaption",
 CellID->90617371,ExpressionUUID->"ca47c3ed-690f-4d1e-b3ef-81c36d7c99bd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sets", "=", 
   RowBox[{
    StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"-", "7"}], ",", "7"}], "]"}], ",", "All", ",", 
     RowBox[{
      RowBox[{"EqualTo", "[", "0", "]"}], "@*", "Total"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Short", "[", "sets", "]"}]}], "Input", "ExampleInput",
 CellLabel->"In[1086]:=",
 CellID->760328926,ExpressionUUID->"4f7fd09b-2206-4822-a61d-59674520a617"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{"{", "0", "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "1517", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "7"}], ",", 
      RowBox[{"-", "6"}], ",", 
      RowBox[{"-", "5"}], ",", 
      RowBox[{"-", "4"}], ",", 
      RowBox[{"-", "3"}], ",", 
      RowBox[{"-", "2"}], ",", 
      RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", "3", ",", "4", 
      ",", "5", ",", "6", ",", "7"}], "}"}]}], "}"}],
  Short]], "Output",
 CellLabel->"Out[1087]//Short=",
 CellID->1214865,ExpressionUUID->"bb6dfa57-c34a-4848-9c93-5922335b537b"]
}, Open  ]],

Cell["Visualize the lengths of the lists:", "TechNoteMathCaption",
 CellID->809946818,ExpressionUUID->"a06af547-0bad-4bc3-83bc-345397bee2b1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Length", "/@", "sets"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input", "ExampleInput",
 CellLabel->"In[1088]:=",
 CellID->628177917,ExpressionUUID->"89fc304b-f038-4fae-858d-28194346e998"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.0055000000000000005`], AbsoluteThickness[2], 
         LineBox[CompressedData["
1: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
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
          Annotation[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.0055000000000000005`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1: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
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0., 1520.}, {0, 15.}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0., 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              PointSize[0.0055000000000000005`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0., 1520.}, {0, 15.}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0., 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
          "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             PointSize[0.0055000000000000005`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0., 1520.}, {0, 15.}}, 
        "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0., 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.0055000000000000005`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentSet", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 1520.}, {0, 15.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[1088]=",
 CellID->552668493,ExpressionUUID->"9f53ab79-4611-48b9-99ab-610bc2af6563"]
}, Open  ]],

Cell["Find out for which 2-tuple the sum is a prime:", "TechNoteMathCaption",
 CellID->806991552,ExpressionUUID->"819a6a83-54b9-4ab8-a960-250e2a2866d8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SelectTuples", "[", 
  RowBox[{
   RowBox[{"Range", "[", "10", "]"}], ",", "2", ",", 
   RowBox[{"PrimeQ", "@*", "Total"}]}], "]"}]], "Input", "ExampleInput",
 CellLabel->"In[1089]:=",
 CellID->777243378,ExpressionUUID->"f18850c4-776d-403a-a5fc-282dee5f7090"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "9"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[1089]=",
 CellID->24878681,ExpressionUUID->"50c014f8-c941-4601-95d5-7f1ab20dacca"]
}, Open  ]],

Cell["Only get the first five:", "TechNoteMathCaption",
 CellID->962257849,ExpressionUUID->"9ff9bc64-f194-4624-bfbb-b54bda29aa4b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SelectTuples", "[", 
  RowBox[{
   RowBox[{"Range", "[", "10", "]"}], ",", "2", ",", 
   RowBox[{"PrimeQ", "@*", "Total"}], ",", "5"}], "]"}]], "Input", \
"ExampleInput",
 CellLabel->"In[1090]:=",
 CellID->574613800,ExpressionUUID->"86224c05-d668-451c-a1b5-7009814611ca"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "10"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[1090]=",
 CellID->22940605,ExpressionUUID->"43a001ad-90dc-4a57-a242-d95bce0cb527"]
}, Open  ]],

Cell["Find the first 15 three-letter palindromic lists:", \
"TechNoteMathCaption",
 CellID->817657987,ExpressionUUID->"432586f1-953d-4930-833f-b4880144191b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SelectTuples", "[", 
  RowBox[{
   RowBox[{"CharacterRange", "[", 
    RowBox[{"\"\<a\>\"", ",", "\"\<e\>\""}], "]"}], ",", "3", ",", 
   RowBox[{"PalindromeQ", "@*", "StringJoin"}], ",", "15"}], "]"}]], "Input", \
"ExampleInput",
 CellLabel->"In[1091]:=",
 CellID->88400611,ExpressionUUID->"fa81e9bc-8688-493c-a7d8-41a4e2340a14"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"a\"\>", ",", "\<\"a\"\>", ",", "\<\"a\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"a\"\>", ",", "\<\"b\"\>", ",", "\<\"a\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"a\"\>", ",", "\<\"c\"\>", ",", "\<\"a\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"a\"\>", ",", "\<\"d\"\>", ",", "\<\"a\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"a\"\>", ",", "\<\"e\"\>", ",", "\<\"a\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"b\"\>", ",", "\<\"a\"\>", ",", "\<\"b\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"b\"\>", ",", "\<\"b\"\>", ",", "\<\"b\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"b\"\>", ",", "\<\"c\"\>", ",", "\<\"b\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"b\"\>", ",", "\<\"d\"\>", ",", "\<\"b\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"b\"\>", ",", "\<\"e\"\>", ",", "\<\"b\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"c\"\>", ",", "\<\"a\"\>", ",", "\<\"c\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"c\"\>", ",", "\<\"b\"\>", ",", "\<\"c\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"c\"\>", ",", "\<\"c\"\>", ",", "\<\"c\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"c\"\>", ",", "\<\"d\"\>", ",", "\<\"c\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"c\"\>", ",", "\<\"e\"\>", ",", "\<\"c\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[1091]=",
 CellID->264187089,ExpressionUUID->"c6b5a596-dc4f-45e1-a87f-fd6fee152b19"]
}, Open  ]],

Cell["Find vectors for which the norm is an integer:", "TechNoteMathCaption",
 CellID->834775918,ExpressionUUID->"a90f562e-98cb-4ff2-8efc-a486c208bd1f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SelectTuples", "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"-", "100"}], ",", "100"}], "]"}], ",", "2", ",", 
     RowBox[{"IntegerQ", "@*", "Norm"}]}], "]"}], "//", "Point"}], "//", 
  "Graphics"}]], "Input", "ExampleInput",
 CellLabel->"In[1092]:=",
 CellID->283080979,ExpressionUUID->"24588ed6-8736-46f3-a39a-27cf0bee4417"],

Cell[BoxData[
 GraphicsBox[PointBox[CompressedData["
1:eJx92fuXVlUdx/GtggqiTDRjY07TkJNOE6NTkqBNAYaGojYqlYkXkn6uv6P/
IbtqeeliKV28DZplkFYaKuaFySRNEQEFQrRpf1bv95rdWmfNrHXWa+19zpnn
OWffvvv7LL3pG1d9/dhSyjePKyV+a2ZmZks9YqG8vnpzdU89bqY+9la/Tfk7
+N3qr+sRd+LL6PkBHMF11e9x/vv4A7ylel89bmnKF1VvrT5Sj1upjxPVH1b/
UI/4FyzUj+PK6o+ov636YD1ua8oXVm+nfAfeiT+u3lWP+BC+gG+h152MZ+Aq
nKz+hOt+ij9D//ddPF98Fvei1y3Bs3ACN1R/znW/wLurz9fj7qY8XL2n+mg9
7qE+nl+1D2yhHbdwfgvtFr9W/SX1v0LbPk7hdnwJX0ev78NBPA/X4Kbqb7j+
3uqr9bi3KfdX7SP3UR+vq95ffbwe91Mfz60+QNm2f7ApX1P1u09RP0U/3Uq/
2kr9VvqVfeEh2i3uw8L5HpzAtNPDnP8t2qdt+0ea//lXnMZX8CB6/0l4Gg7h
GK7CSdxY/R33/x7tE4825cuqjq34NO7CwvmlOIrXVrfx3rZx3Tbem31jO/Xb
ec9/pPzYzP/6/2NNOf3dNn2c+ri2+ifKf0bnANvM7xCfxz14AL3vFOzFYVyB
qzHP9wT3PYm2VXwZX0XP9+MApl/s4H3u4LodvM+nKPvO4060fgQzvz1DvXOw
Y3hnc+9LeBi9fgEO4iiux4xH5yTb5lnuj8sx/etv1D+HzkG++7gb96PXLcbT
cRwvrzrnxrexUL8IM75epN4+6rvd1dQvw7w3x9Y07TXNddO01zTt9HfqndN8
l3Efer4HRzD9+x+cd220j8TX0fN9OIZ5/76z3Vy3m/75T8rODa805Xxv5077
os8Y9+IhPIKF+07AhbgEh3AML67+i/teQ+d8ny3uQc/34gDmPRlzOEb3NPfu
x8J1i7EPx3Fz9Q2ucw31Wfc29f2Yfvsm9c7htuk++tu+5vwiHMTMr/bl/c13
/TcWzp+IvZj2cw46wHUHeA5ji7eoj+nf9v23m+92GI9i4br5uAB7MPGJa8hB
rj9If7EvHKL+EO/JOeNw85mF+kWY/u4zx3ewUH88pt3sa0c4f4TPeae5t1DO
e/PZjlJ/lM99t/pePd6lPtbQtlj3HvVxXvU/lGcwf8a+xrpdMW6cK2aNxqbG
oG3MGeeKMeNcMWLsivGisZwxW1eMFtuYKho7GSu1MVKcmpmNeaKxTVcME7ti
imisYCzg2t+u+dG1vWtNj11rbnTtbNfM2K6J0TWra42KrintGhJdE9o1ILZz
enRubufk6JzaNUdG57R2zortnBSdS5wrnBsc845lx65j1DHoWHNsOZYcO46V
rjGSv2PwWDwO5+F8PB5PwBNxAS7Ek3ARnoyn4GLswffhEnw/9mIfnoofwH48
DT+Ip+MAfggH8cM4hEvxI3gGDuNH8Uw8C0fwYziKH8dlOIZn4zk4jp/AT+K5
uBw/hefhClyJ5+MF+GmcwM/gZ3EVrsY1eCF+DtfiRXgxfh7X4SV4Ka7Hy/By
vAK/gJN4JV6FV+MG/CJ+Cb+M1+BX8FrciNfh9XgD3oib8Kt4E27G7Iu7xoZr
keV5HK5FhXLOuVY7hmLGhWumYypmPBmbOcZiP+eMNVw7C/Xem3FlzG9s4Nhc
wOfG9FtjP8fsQj7HPadjOE5wrzG5sZIxgmt24br5zWfFHsy4MpfinBDTzu7R
nCPiOM/kHsLY0FijcN5n78VhPtO9urG7sVJpvlMcxIyLdi4yN2OMbH0/pv+2
c5W5NPeaxsLGhl7nd+3DcdxMnbkU9wzGwqW5Jw5gxmHX3GhOxT2qex9jZGNA
YzTvs8/ZJ3zmIRzDzAfmJpyDY/pLOxe797M8zHc3h+je2T1DaZ5tgM+Lm8r/
z+XmmtzjGrt73rYdwbyndu43p+Lex3qfNc9hDiS6hy/UL8PMw+3aYa7QmNx6
x8AG3oG5O3MS7v3cQxSus0/77sYx82rX2mQu0RyL9ctxkndi7tZcoLkH97jG
/oXrnTt8p6O4HtM+7Vpo7sjcQ2nuGeW9tWtl4rJlTTnv1lyXe2b3pq6p9kX7
SEy7da215o7N9Zm7MifhXtO9mvc5FzlWbYMVuBqz/nSt5eYqLa+lLcyxlKZt
2rXeHKrldXymuavSfIeVZTYnbu5oFxbO21d99/m+iR3MFRfKWbe7Yglz8+ao
zYGa8zKnYo7Cvaf3u5Y4RwyhbbYKJzHreFfsYg7eHKh7dc/3NP8rZrytLrO5
vlJm28zctDHQGt5zYiF/QyiUE2+0sZG5Sstp28RK/rZRKCcOyVxpTqVQTr9t
Yyl/Q5lCc6jmmsyleL1zv3ObfcRn2FS6YzN/CzIXaL1jOXFP+oC54kI5fSNz
jrm7QjnjoSu28zcSc9TmEs3NeJ1rqXOTfSDtNlds6G8k5uDNFZpT8TpjDOde
+0Q+Y67Y0t8QLKcPtLGmOXFzx9Y7F2SMbSyzuflCOc+XPuFvG4Vy+spcsaq/
oZi7NYfoeddI5+L0ga7Y1lya5cxraXN/CyqU0xf+C5AC+pk=
   "]]]], "Output",
 CellLabel->"Out[1092]=",
 CellID->104575,ExpressionUUID->"0fb15520-1537-468b-a205-ed45140da02d"]
}, Open  ]],

Cell[TextData[{
 "The main difference between ",
 Cell[BoxData[
  TagBox[
   TemplateBox[{
     Cell[
      TextData[
       StyleBox[
       "Select", "SymbolsRefLink", ShowStringCharacters -> True, FontFamily -> 
        "Source Sans Pro"]]], "paclet:ref/Select"},
    "RefLink",
    BaseStyle->{"InlineFormula"}],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "f68c8a03-606c-4a19-9cad-5cc0d7703cd8"],
 " and ",
 Cell[BoxData[
  TagBox[
   TemplateBox[{
     Cell[
      TextData[
       StyleBox[
       "Tuples", "SymbolsRefLink", ShowStringCharacters -> True, FontFamily -> 
        "Source Sans Pro"]]], "paclet:ref/Tuples"},
    "RefLink",
    BaseStyle->{"InlineFormula"}],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "76a659c4-c642-484a-8a86-0989d5e715d1"],
 " and ",
 Cell[BoxData[
  StyleBox["SelectTuples", "InlineResourceFunction"]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "acab0cdf-393e-4e6b-a3e7-7451ff8b0a34"],
 " is the amount of memory used:"
}], "TechNoteMathCaption",
 CellID->405355337,ExpressionUUID->"d7c0f20f-806d-41a6-95b5-378593ce6d19"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MaxMemoryUsed", "[", 
  RowBox[{"SelectTuples", "[", 
   RowBox[{
    RowBox[{"Range", "[", "10", "]"}], ",", "5", ",", 
    RowBox[{
     RowBox[{"EqualTo", "[", "30", "]"}], "@*", "Total"}]}], "]"}], 
  "]"}]], "Input", "ExampleInput",
 CellLabel->"In[1093]:=",
 CellID->811262678,ExpressionUUID->"71fee645-3cca-4e3a-beef-ac702671b9c6"],

Cell[BoxData["1049416"], "Output",
 CellLabel->"Out[1093]=",
 CellID->9194802,ExpressionUUID->"ccad7069-24bf-427f-85ef-9d76ffe771ca"]
}, Open  ]],

Cell["Compared to naive implementation:", "TechNoteMathCaption",
 CellID->376441899,ExpressionUUID->"9bd2bd94-323f-4e1f-a362-6038ff2bfe1b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MaxMemoryUsed", "[", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Tuples", "[", 
     RowBox[{
      RowBox[{"Range", "[", "10", "]"}], ",", "5"}], "]"}], ",", 
    RowBox[{
     RowBox[{"EqualTo", "[", "30", "]"}], "@*", "Total"}]}], "]"}], 
  "]"}]], "Input", "ExampleInput",
 CellLabel->"In[1094]:=",
 CellID->695357144,ExpressionUUID->"e86e35a3-cf64-453c-9bbd-f05f70b03ee1"],

Cell[BoxData["21711208"], "Output",
 CellLabel->"Out[1094]=",
 CellID->11269696,ExpressionUUID->"753dda81-e37e-4c0e-b2ab-4c814a84e7c2"]
}, Open  ]],

Cell[TextData[{
 "The length of the results might be smaller than the argument ",
 Cell[BoxData[
  StyleBox["m", "TI"]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "50881908-e530-43c6-9c48-f5c0b9e091b3"],
 ":"
}], "TechNoteMathCaption",
 CellID->449563358,ExpressionUUID->"5d8fe7cb-95c4-496a-a473-3d2d2f95152d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SelectTuples", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], ",", "3", ",", 
   RowBox[{
    RowBox[{"EqualTo", "[", "1", "]"}], "@*", "Norm"}], ",", "10"}], 
  "]"}]], "Input", "ExampleInput",
 CellLabel->"In[1095]:=",
 CellID->168888283,ExpressionUUID->"a7ad3ebf-21e1-4949-8755-0d2a2dc4604b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[1095]=",
 CellID->83774134,ExpressionUUID->"fc47d679-dd56-45ef-ae30-4e9401ffa585"]
}, Open  ]],

Cell["I got kind of confused with this.", "TechNoteMathCaption",
 CellID->39057588,ExpressionUUID->"adb8f1b8-8d53-4dc0-b180-eb71fb028075"],

Cell[TextData[{
 "Combinatorica's ",
 Cell[BoxData[
  RowBox[{"Eulerian", "[", 
   RowBox[{"n", ",", "k"}], "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "e137fa3b-ae48-4ef7-a30a-15d43ef57bb5"],
 " gives the number of permutations of length ",
 Cell[BoxData["n"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "cb00ef45-9c8c-4a66-a481-69c7c7f4f2d9"],
 " with ",
 Cell[BoxData["k"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "41d4a592-f041-44d8-809e-618e117ac888"],
 " runs."
}], "TechNoteMathCaption",
 CellID->236283598,ExpressionUUID->"31dfacce-571c-4333-8462-7b6da12806a9"],

Cell["This function uses a different index for k.", "TechNoteMathCaption",
 CellID->3969473,ExpressionUUID->"daaf1a1b-19dd-4322-adb4-c46706602373"],

Cell[TextData[{
 "If you have ",
 Cell[BoxData[
  RowBox[{"EulerianNumber", "[", 
   RowBox[{"n", ",", "k"}], "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "d4361591-f6a4-4d72-9d33-542b18903af3"],
 ", do ",
 Cell[BoxData[
  RowBox[{"Eulerian", "[", 
   RowBox[{"n", ",", 
    RowBox[{"k", "-", "1"}]}], "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "d58c5dfa-1f1f-42e8-8037-93908698442f"],
 "."
}], "TechNoteMathCaption",
 InitializationCell->True,
 CellID->442612299,ExpressionUUID->"560ad241-d25d-45b1-9b0b-70a743fe8828"],

Cell[TextData[{
 "If you have ",
 Cell[BoxData[
  RowBox[{"Eulerian", "[", 
   RowBox[{"n", ",", "k"}], "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "64969bb8-eb3c-458f-8bc7-da1e6804b4c2"],
 ", do ",
 Cell[BoxData[
  RowBox[{"EulerianNumber", "[", 
   RowBox[{"n", ",", 
    RowBox[{"k", "+", "1"}]}], "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "e87c02a2-2f48-4d65-b0a8-b3019c733c9e"],
 "."
}], "TechNoteMathCaption",
 CellID->90642782,ExpressionUUID->"8e112108-47db-4f4f-a17b-272603f45175"],

Cell["\<\
This also affects the definition of other related functions like \
EulerianCatalanNumber.\
\>", "TechNoteMathCaption",
 CellID->112995886,ExpressionUUID->"d8db5819-e7d4-4000-8220-05521785e728"],

Cell[TextData[{
 "One interpretation of the Eulerian Catalan number is \"Twice the number of \
permutations of ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "...", ",", 
    RowBox[{"2", "n"}]}], "}"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "8c07b4c8-0918-4e83-8af3-5e1dd61329fe"],
 " with ",
 Cell[BoxData["n"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "c23e924a-d9b9-4788-a0fd-7808e9671c42"],
 " ascents\"."
}], "TechNoteMathCaption",
 CellID->129906996,ExpressionUUID->"d7dc1e25-9cbf-490a-838b-afdf48623da5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{"\"\<n\>\"", "->", 
       RowBox[{"EulerianCatalanNumber", "[", "#", "]"}]}], "|>"}], "&"}], 
    "]"}], "[", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "21"}], "]"}], "]"}], "]"}]], "Input",
 CellLabel->"In[2541]:=",
 CellID->239135585,ExpressionUUID->"d35217b9-167a-4854-be3b-01f5b3f105f7"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      0 -> <|"n" -> 1|>, 1 -> <|"n" -> 2|>, 2 -> <|"n" -> 22|>, 
       3 -> <|"n" -> 604|>, 4 -> <|"n" -> 31238|>, 5 -> <|"n" -> 2620708|>, 
       6 -> <|"n" -> 325024572|>, 7 -> <|"n" -> 55942352184|>, 
       8 -> <|"n" -> 12765597850950|>, 9 -> <|"n" -> 3730771315561300|>, 
       10 -> <|"n" -> 1359124435588313876|>, 
       11 -> <|"n" -> 603916464771468176392|>, 
       12 -> <|"n" -> 321511316149669476991132|>, 
       13 -> <|"n" -> 202039976682357297272094824|>, 
       14 -> <|"n" -> 147980747895225006590333244088|>, 
       15 -> <|"n" -> 124963193751534047864734415925360|>, 
       16 -> <|"n" -> 120523981455993504966525708346887750|>, 
       17 -> <|"n" -> 131671692334895976886647813958596908340|>, 
       18 -> <|"n" -> 161759954125032708920885781040309430206500|>, 
       19 -> <|"n" -> 222019441630075420847480526017947263931809000|>, 
       20 -> <|"n" -> 338476895760295138790385051321218766549279671220|>, 
       21 -> <|"n" -> 570180937724400876712836731188276811777920749126840|>|>,
      "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[16]} -> 1, {All, "n"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 1, {All}]]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n"}, {
         TypeSystem`Atom[Integer]}], 22], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[16]} -> 1, {All, "n"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 1, {All}]]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n"}, {
         TypeSystem`Atom[Integer]}], 22], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 1, "DataRowCount" -> 22, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["n", 
                  Style[
                  "n", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "n"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "n"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["604"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["31238"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2620708"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["325024572"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["55942352184"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12765597850950"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3730771315561300"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1359124435588313876"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["11"], 
                  Style[
                   RawBoxes["11"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[11]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["603916464771468176392"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["12"], 
                  Style[
                   RawBoxes["12"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[12]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["321511316149669476991132"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["13"], 
                  Style[
                   RawBoxes["13"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[13]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["202039976682357297272094824"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["14"], 
                  Style[
                   RawBoxes["14"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[14]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["147980747895225006590333244088"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["15"], 
                  Style[
                   RawBoxes["15"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[15]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124963193751534047864734415925360"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["16"], 
                  Style[
                   RawBoxes["16"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[16]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["120523981455993504966525708346887750"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["17"], 
                  Style[
                   RawBoxes["17"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[17]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["131671692334895976886647813958596908340"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["18"], 
                  Style[
                   RawBoxes["18"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[18]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["161759954125032708920885781040309430206500"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["19"], 
                  Style[
                   RawBoxes["19"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[19]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["222019441630075420847480526017947263931809000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{406., {299.8544921875, 305.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{406., {299.8544921875, 305.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[2541]=",
 CellID->375946613,ExpressionUUID->"66d92971-c59e-4279-a1ee-739141b70e1a"]
}, Open  ]],

Cell["The table of Eulerian numbers up to 10:", "TechNoteMathCaption",
 CellID->537854770,ExpressionUUID->"ee7446b0-40a5-403b-bdde-215444fd24b0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"EulerianNumber", "[", 
      RowBox[{"n", ",", "k"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "n"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "->", "All"}]}], "]"}]], "Input",
 CellLabel->"In[2542]:=",
 CellID->400353117,ExpressionUUID->"35180ea3-39a9-4c9e-b742-0cbcc30a4cd9"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "", "", "", "", "", "", "", "", ""},
    {"1", "1", "", "", "", "", "", "", "", ""},
    {"1", "4", "1", "", "", "", "", "", "", ""},
    {"1", "11", "11", "1", "", "", "", "", "", ""},
    {"1", "26", "66", "26", "1", "", "", "", "", ""},
    {"1", "57", "302", "302", "57", "1", "", "", "", ""},
    {"1", "120", "1191", "2416", "1191", "120", "1", "", "", ""},
    {"1", "247", "4293", "15619", "15619", "4293", "247", "1", "", ""},
    {"1", "502", "14608", "88234", "156190", "88234", "14608", "502", "1", ""},
    {"1", "1013", "47840", "455192", "1310354", "1310354", "455192", "47840", 
     "1013", "1"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->"Out[2542]=",
 CellID->283072746,ExpressionUUID->"407a9cab-8db9-45bc-9152-7890ca8ecf9f"]
}, Open  ]],

Cell[TextData[{
 "Eulerian numbers of the second kind are written something like ",
 Cell[BoxData[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"\[LeftAngleBracket]", GridBox[{
      {"n"},
      {"m"}
     }], "\[RightAngleBracket]"}], "\[RightAngleBracket]"}]], "Input",
  ExpressionUUID->"35078a52-8699-43df-b165-6ad4cb8cc896"],
 "."
}], "TechNoteMathCaption",
 CellID->50294008,ExpressionUUID->"7366cc46-444b-4419-b0fc-1a6407402307"],

Cell["\<\
The first 9 rows of the triangle of Eulerian numbers of the second kind:\
\>", "TechNoteMathCaption",
 CellID->426907475,ExpressionUUID->"b6bcc5b8-ce41-4584-801c-dbc823f6c7ce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"EulerianNumberOfTheSecondKind", "[", 
      RowBox[{"n", ",", "k"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "n"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "->", "All"}]}], "]"}]], "Input",
 CellLabel->"In[2548]:=",
 CellID->283987963,ExpressionUUID->"a9d54f0d-8253-4746-af1a-2d0259b42734"],

Cell[BoxData[
 TagBox[GridBox[{
    {"0", "", "", "", "", "", "", "", ""},
    {"2", "0", "", "", "", "", "", "", ""},
    {"8", "6", "0", "", "", "", "", "", ""},
    {"22", "58", "24", "0", "", "", "", "", ""},
    {"52", "328", "444", "120", "0", "", "", "", ""},
    {"114", "1452", "4400", "3708", "720", "0", "", "", ""},
    {"240", "5610", "32120", "58140", "33984", "5040", "0", "", ""},
    {"494", "19950", "195800", "644020", "785304", "341136", "40320", "0", ""},
    {"1004", "67260", "1062500", "5765500", "12440064", "11026296", "3733920",
      "362880", "0"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->"Out[2548]=",
 CellID->74394165,ExpressionUUID->"20679db5-8b5f-46b8-8211-76c595af01d0"]
}, Open  ]],

Cell["The first 14 rows of the Narayana triangle read as follows:", \
"TechNoteMathCaption",
 CellID->69975013,ExpressionUUID->"2f9b2766-3d05-4472-8d69-3d01a2471a6e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"NarayanaNumber", "[", 
      RowBox[{"n", ",", "k"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "14"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "n"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "->", "All"}]}], "]"}]], "Input",
 CellLabel->"In[2553]:=",
 CellID->447664363,ExpressionUUID->"ed5568ec-e753-4c5c-b6e6-92635033aa7c"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "", "", "", "", "", "", "", "", "", "", "", "", ""},
    {"1", "1", "", "", "", "", "", "", "", "", "", "", "", ""},
    {"1", "3", "1", "", "", "", "", "", "", "", "", "", "", ""},
    {"1", "6", "6", "1", "", "", "", "", "", "", "", "", "", ""},
    {"1", "10", "20", "10", "1", "", "", "", "", "", "", "", "", ""},
    {"1", "15", "50", "50", "15", "1", "", "", "", "", "", "", "", ""},
    {"1", "21", "105", "175", "105", "21", "1", "", "", "", "", "", "", ""},
    {"1", "28", "196", "490", "490", "196", "28", "1", "", "", "", "", "", ""},
    {"1", "36", "336", "1176", "1764", "1176", "336", "36", "1", "", "", "", 
     "", ""},
    {"1", "45", "540", "2520", "5292", "5292", "2520", "540", "45", "1", "", 
     "", "", ""},
    {"1", "55", "825", "4950", "13860", "19404", "13860", "4950", "825", "55",
      "1", "", "", ""},
    {"1", "66", "1210", "9075", "32670", "60984", "60984", "32670", "9075", 
     "1210", "66", "1", "", ""},
    {"1", "78", "1716", "15730", "70785", "169884", "226512", "169884", 
     "70785", "15730", "1716", "78", "1", ""},
    {"1", "91", "2366", "26026", "143143", "429429", "736164", "736164", 
     "429429", "143143", "26026", "2366", "91", "1"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->"Out[2553]=",
 CellID->405832833,ExpressionUUID->"dd1f0ef3-095d-4fed-ae3f-5a73b25fcf65"]
}, Open  ]],

Cell["Make a table of signed and unsigned Lah numbers.", "TechNoteMathCaption",
 CellID->629424924,ExpressionUUID->"64e0c246-9433-4c95-b61f-8bfc6c54564a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"SignedLahNumber", "[", 
      RowBox[{"n", ",", "k"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "n"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "->", "All"}]}], "]"}]], "Input",
 CellLabel->"In[2556]:=",
 CellID->282716016,ExpressionUUID->"d0aa78f7-b36d-4676-9714-b1b54804e203"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"-", "1"}], "", "", "", "", "", "", "", ""},
    {"2", "1", "", "", "", "", "", "", ""},
    {
     RowBox[{"-", "6"}], 
     RowBox[{"-", "6"}], 
     RowBox[{"-", "1"}], "", "", "", "", "", ""},
    {"24", "36", "12", "1", "", "", "", "", ""},
    {
     RowBox[{"-", "120"}], 
     RowBox[{"-", "240"}], 
     RowBox[{"-", "120"}], 
     RowBox[{"-", "20"}], 
     RowBox[{"-", "1"}], "", "", "", ""},
    {"720", "1800", "1200", "300", "30", "1", "", "", ""},
    {
     RowBox[{"-", "5040"}], 
     RowBox[{"-", "15120"}], 
     RowBox[{"-", "12600"}], 
     RowBox[{"-", "4200"}], 
     RowBox[{"-", "630"}], 
     RowBox[{"-", "42"}], 
     RowBox[{"-", "1"}], "", ""},
    {"40320", "141120", "141120", "58800", "11760", "1176", "56", "1", ""},
    {
     RowBox[{"-", "362880"}], 
     RowBox[{"-", "1451520"}], 
     RowBox[{"-", "1693440"}], 
     RowBox[{"-", "846720"}], 
     RowBox[{"-", "211680"}], 
     RowBox[{"-", "28224"}], 
     RowBox[{"-", "2016"}], 
     RowBox[{"-", "72"}], 
     RowBox[{"-", "1"}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->"Out[2556]=",
 CellID->18739418,ExpressionUUID->"56ddab65-3ea6-4ede-92a4-21daf91eafd8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"UnsignedLahNumber", "[", 
      RowBox[{"n", ",", "k"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "n"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "->", "All"}]}], "]"}]], "Input",
 CellLabel->"In[2557]:=",
 CellID->28645306,ExpressionUUID->"afe0ed75-de31-4070-b748-e293016ef3ad"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "", "", "", "", "", "", "", ""},
    {"2", "1", "", "", "", "", "", "", ""},
    {"6", "6", "1", "", "", "", "", "", ""},
    {"24", "36", "12", "1", "", "", "", "", ""},
    {"120", "240", "120", "20", "1", "", "", "", ""},
    {"720", "1800", "1200", "300", "30", "1", "", "", ""},
    {"5040", "15120", "12600", "4200", "630", "42", "1", "", ""},
    {"40320", "141120", "141120", "58800", "11760", "1176", "56", "1", ""},
    {"362880", "1451520", "1693440", "846720", "211680", "28224", "2016", 
     "72", "1"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->"Out[2557]=",
 CellID->120305284,ExpressionUUID->"9986148c-d0c7-4a5c-a5ae-85b81372fcb8"]
}, Open  ]],

Cell["\<\
Find the sum of even-valued Fibonacci numbers less than 4 million.\
\>", "TechNoteMathCaption",
 CellID->688126866,ExpressionUUID->"30160aeb-f07f-4485-8605-95d408a0309f"],

Cell[TextData[{
 "We aren't counting 4 million, so we need to find the inverse of ",
 Cell[BoxData[
  RowBox[{"4000000", "-", "1"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "dc5a2bce-e3a9-4f92-b352-f1d47cdda051"],
 ", or ",
 Cell[BoxData["3999999"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "88f8d2d9-57a7-4cfc-8bcd-7cd80fd8871c"],
 "."
}], "TechNoteMathCaption",
 CellID->462783584,ExpressionUUID->"a9f94d20-b230-4e78-810c-a675031b5401"],

Cell["Compute the inverse Fibonacci of 4 million.", "TechNoteMathCaption",
 CellID->161103956,ExpressionUUID->"19f52c75-9b28-4b66-8feb-67669209b992"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InverseFibonacci", "[", "3999999", "]"}]], "Input",
 CellLabel->"In[2561]:=",
 CellID->630387027,ExpressionUUID->"e64e6ac8-5592-4e72-bf79-1401a712e97b"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"Root", 
    InterpretationBox[
     StyleBox[
      TemplateBox[{"\"33.3\"", 
        DynamicBox[
         FEPrivate`FrontEndResource[
         "FEExpressions", "NumericalApproximationElider"]]}, "RowDefault"], 
      ShowStringCharacters -> False], 
     33.2629474001778504543835879303514957428`15.954589770191003, Editable -> 
     False], 
    TagBox[
     RowBox[{"Root", "[", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{
             RowBox[{
               RowBox[{"-", "3999999"}], "+", 
               RowBox[{"Fibonacci", "[", "#1", "]"}]}], "&"}], ",", 
           "33.2629474001778682831`9.663180428680144"}], "}"}], "]"}], 
     Short[#, 7]& ], 33.26294740017785},
   "NumericalApproximation"],
  Root[{-3999999 + Fibonacci[#]& , 
    33.2629474001778682831`9.663180428680144}]]], "Output",
 CellLabel->"Out[2561]=",
 CellID->401184551,ExpressionUUID->"369cac84-fe2e-474b-8453-6314252ca63f"]
}, Open  ]],

Cell[TextData[{
 "Now we can solve Project Euler Problem 2 ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Even Fibonacci Numbers"]], 
    "https://projecteuler.net/problem=2"},
   "WebLink",
   BaseStyle->{"TechNoteMathCaption"}]],ExpressionUUID->
  "c3937be8-a67e-4c9f-ab74-32eb2779369c"],
 "."
}], "TechNoteMathCaption",
 CellID->478852567,ExpressionUUID->"79cbf0ed-340e-465c-a348-5c39be9e5355"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fibonacci", "[", 
  RowBox[{"Range", "[", 
   RowBox[{"Floor", "[", 
    RowBox[{"InverseFibonacci", "[", "3999999", "]"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellLabel->"In[2562]:=",
 CellID->2173387,ExpressionUUID->"d860018a-3cd5-4779-aa4f-006713b55d18"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "2", ",", "3", ",", "5", ",", "8", ",", "13", ",", "21",
    ",", "34", ",", "55", ",", "89", ",", "144", ",", "233", ",", "377", ",", 
   "610", ",", "987", ",", "1597", ",", "2584", ",", "4181", ",", "6765", ",",
    "10946", ",", "17711", ",", "28657", ",", "46368", ",", "75025", ",", 
   "121393", ",", "196418", ",", "317811", ",", "514229", ",", "832040", ",", 
   "1346269", ",", "2178309", ",", "3524578"}], "}"}]], "Output",
 CellLabel->"Out[2562]=",
 CellID->59007347,ExpressionUUID->"f34e702d-4ea4-4dc5-9c4e-b8415e19b155"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", "EvenQ", "]"}], "[", 
  RowBox[{"Fibonacci", "[", 
   RowBox[{"Range", "[", 
    RowBox[{"Floor", "[", 
     RowBox[{"InverseFibonacci", "[", "3999999", "]"}], "]"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellLabel->"In[2563]:=",
 CellID->48490791,ExpressionUUID->"d3f43468-90b7-49d8-acb6-7c0d9550dcab"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "8", ",", "34", ",", "144", ",", "610", ",", "2584", ",", "10946",
    ",", "46368", ",", "196418", ",", "832040", ",", "3524578"}], 
  "}"}]], "Output",
 CellLabel->"Out[2563]=",
 CellID->249968189,ExpressionUUID->"3528c9d3-ad6b-4e84-ad7e-f79ba7e1a3ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{
   RowBox[{"Select", "[", "EvenQ", "]"}], "[", 
   RowBox[{"Fibonacci", "[", 
    RowBox[{"Range", "[", 
     RowBox[{"Floor", "[", 
      RowBox[{"InverseFibonacci", "[", "3999999", "]"}], "]"}], "]"}], "]"}], 
   "]"}], "]"}]], "Input",
 CellLabel->"In[2564]:=",
 CellID->144665321,ExpressionUUID->"4fb3f03c-dbc9-4e66-a1b3-9a94f6426667"],

Cell[BoxData["4613732"], "Output",
 CellLabel->"Out[2564]=",
 CellID->495057432,ExpressionUUID->"be003799-849f-4601-89bb-7ede3a8a344e"]
}, Open  ]],

Cell["That's the answer.", "TechNoteMathCaption",
 CellID->66692240,ExpressionUUID->"deacbe29-c222-4820-a7ef-e80254ad01cd"],

Cell[TextData[{
 "Let's work through the examples from the Wolfram Challenge ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Next Permutation"]], 
    "https://challenges.wolframcloud.com/challenge/next-permutation"},
   "WebLink",
   BaseStyle->{"TechNoteMathCaption"}]],ExpressionUUID->
  "4331135a-056f-4243-a981-0e8775b57dcd"],
 "."
}], "TechNoteMathCaption",
 CellID->308194261,ExpressionUUID->"b7319d6e-23da-44a3-98c2-50adb6177629"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NextPermutation", "[", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "1"}], "}"}], "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->88352769,ExpressionUUID->"61d58fae-a6d4-4d9d-8719-6f7a07bd3d01"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "1", ",", "2"}], "}"}]], "Output",
 CellLabel->"Out[1]=",
 CellID->253919081,ExpressionUUID->"e60f72dc-21bd-4d7e-b8f8-65ff7a45c026"]
}, Open  ]],

Cell["Here are more examples.", "TechNoteMathCaption",
 CellID->402833805,ExpressionUUID->"f99244b4-ba61-44ce-a3d9-485b3b0288cd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NextPermutation", "[", 
  RowBox[{"{", 
   RowBox[{"3", ",", "2", ",", "1"}], "}"}], "]"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->133361772,ExpressionUUID->"358f0f0d-a757-413b-982f-93ae00f34410"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellLabel->"Out[2]=",
 CellID->98606068,ExpressionUUID->"ac6731c8-04ba-4a15-8607-5b220fb5de63"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NextPermutation", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "4", ",", "5"}], "}"}], "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->282609746,ExpressionUUID->"d1a14ee2-d45f-47b4-a7a7-fe6646a9396c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "5", ",", "4"}], "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->184445757,ExpressionUUID->"97ef1641-3598-4eea-8e73-e56d154c45a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NextPermutation", "[", 
  RowBox[{"{", 
   RowBox[{"4", ",", "5", ",", "1", ",", "0"}], "}"}], "]"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->170282164,ExpressionUUID->"b0783c2d-32f0-476e-9948-0b0f3b857b4d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "0", ",", "1", ",", "4"}], "}"}]], "Output",
 CellLabel->"Out[4]=",
 CellID->586261813,ExpressionUUID->"1ab71d52-d06c-4b6f-8526-90cf83f1a4a3"]
}, Open  ]],

Cell["\<\
For some reason, although I have a function that can compute the next \
permutation, I have not solved this Wolfram Challenge.\
\>", "TechNoteMathCaption",
 CellID->406463550,ExpressionUUID->"aea1b186-7caf-4fb9-bf2b-d09548c07a54"],

Cell["Consider the permutation:", "TechNoteMathCaption",
 CellID->300631353,ExpressionUUID->"dc188418-c05f-44bd-8c4e-c48deb4e766c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "8", ",", "1", ",", "5", ",", "4", ",", "7", ",", "6", ",", "3",
      ",", "9"}], "}"}]}], ";"}]], "Input", "ExampleInput",
 CellLabel->"In[470]:=",
 CellID->518707108,ExpressionUUID->"beb465c3-3f0f-47d3-b578-0039ef6ea163"],

Cell[TextData[{
 "Its ascents are at the indices 1, 3, 5, 8, corresponding to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", " ", "<", " ", "8"}], TraditionalForm]],ExpressionUUID->
  "baea43be-3728-4803-ad85-c6bd98e4b5e1"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", " ", "<", " ", "5"}], TraditionalForm]],ExpressionUUID->
  "236d3d49-f9c7-48b6-966e-a415ac5aba67"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"4", " ", "<", " ", "7"}], TraditionalForm]],ExpressionUUID->
  "1620ea6b-d50f-449f-8d29-ebb8a9ac53f2"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"3", " ", "<", " ", "9"}], TraditionalForm]],ExpressionUUID->
  "68a4ee01-cb46-48b1-8fb9-68a6dec41785"],
 ":"
}], "TechNoteMathCaption",
 CellID->8375492,ExpressionUUID->"d97a0dea-0982-481b-9c40-f1bc7083ebad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PermutationAscents", "@", "p"}]], "Input", "ExampleInput",
 CellLabel->"In[471]:=",
 CellID->835168205,ExpressionUUID->"719b64f1-3111-4dd4-8198-0bea21ed6d22"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "5", ",", "8"}], "}"}]], "Output",
 CellLabel->"Out[471]=",
 CellID->111339732,ExpressionUUID->"bef85f6b-e773-42cd-9469-7d840085d80b"]
}, Open  ]],

Cell["The descents follow easily:", "TechNoteMathCaption",
 CellID->258727906,ExpressionUUID->"c959693b-6af8-419f-82b9-e61a8407052a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reverse", "[", 
  RowBox[{
   RowBox[{"Length", "@", "p"}], "-", 
   RowBox[{"PermutationAscents", "@", 
    RowBox[{"Reverse", "@", "p"}]}]}], "]"}]], "Input", "ExampleInput",
 CellLabel->"In[472]:=",
 CellID->97985540,ExpressionUUID->"61a497b6-1cbd-4429-b72a-bf0811518140"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "4", ",", "6", ",", "7"}], "}"}]], "Output",
 CellLabel->"Out[472]=",
 CellID->107056388,ExpressionUUID->"edc63cac-0508-4d53-97c6-5bafd3eb9a04"]
}, Open  ]],

Cell["There is also a function for this.", "TechNoteMathCaption",
 CellID->892397338,ExpressionUUID->"f8b8fb5e-6178-44eb-960d-8bbc4e363658"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PermutationDescents", "[", "p", "]"}]], "Input",
 CellLabel->"In[938]:=",
 CellID->70290140,ExpressionUUID->"2d3edf4c-7cbb-4b61-8ee9-8e3db183b436"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "4", ",", "6", ",", "7"}], "}"}]], "Output",
 CellLabel->"Out[938]=",
 CellID->100322807,ExpressionUUID->"e8cc5950-dbc9-4133-9a15-99363811d554"]
}, Open  ]],

Cell["A triangular table of Gauss factorials up to 7::", "TechNoteMathCaption",
 CellID->819912601,ExpressionUUID->"62f1ea29-4de0-47ea-9170-9ca4830dd1b2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"GaussFactorial", "[", 
    RowBox[{"n", ",", "k"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "n"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[940]:=",
 CellID->375659687,ExpressionUUID->"7f18710c-a721-438e-b20a-3774e8f82efc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "3", ",", "8", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"120", ",", "15", ",", "40", ",", "15", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"720", ",", "15", ",", "40", ",", "15", ",", "144", ",", "5"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5040", ",", "105", ",", "280", ",", "105", ",", "1008", ",", "35", ",", 
     "720"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[940]=",
 CellID->223206235,ExpressionUUID->"6ba019bc-b907-4a05-a53d-2633d532511e"]
}, Open  ]],

Cell["Make a grid with a frame:", "TechNoteMathCaption",
 CellID->652840542,ExpressionUUID->"28484c4f-addc-4141-9242-12772d48ed02"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"GaussFactorial", "[", 
      RowBox[{"n", ",", "k"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "n"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "->", "All"}]}], "]"}]], "Input",
 CellLabel->"In[939]:=",
 CellID->115721087,ExpressionUUID->"2f24e8ff-2a22-411d-bf7d-01ddee90b250"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "", "", "", "", "", ""},
    {"2", "1", "", "", "", "", ""},
    {"6", "3", "2", "", "", "", ""},
    {"24", "3", "8", "3", "", "", ""},
    {"120", "15", "40", "15", "24", "", ""},
    {"720", "15", "40", "15", "144", "5", ""},
    {"5040", "105", "280", "105", "1008", "35", "720"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->"Out[939]=",
 CellID->424564025,ExpressionUUID->"7fc46201-42cf-4a42-aa1a-b16fdd99b76d"]
}, Open  ]],

Cell["Phitorial of 10:", "TechNoteMathCaption",
 CellID->395670977,ExpressionUUID->"6525585c-3051-4328-9726-48e3658d8a86"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Phitorial", "[", "10", "]"}]], "Input",
 CellLabel->"In[941]:=",
 CellID->566799357,ExpressionUUID->"90cc6718-063c-4fc2-9d6e-b95c4373cac5"],

Cell[BoxData["189"], "Output",
 CellLabel->"Out[941]=",
 CellID->63581800,ExpressionUUID->"00be94c9-5930-4123-9ff1-2c1777d1373a"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Project Euler Problem 754 Product of Gauss Factorials"]], 
    "https://projecteuler.net/problem=754"},
   "WebLink",
   BaseStyle->{"TechNoteMathCaption"}]],ExpressionUUID->
  "6120e83e-3cab-4de9-b894-24911566bca3"],
 " states, \"The Gauss Factorial of a number ",
 Cell[BoxData["n"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "cdd55467-e970-43aa-a689-8dd699f26441"],
 " is defined as the product of all positive numbers ",
 Cell[BoxData[
  RowBox[{"<=", "n"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "90a1f65b-df29-401e-bec8-85a173b712e9"],
 "  that are relatively prime to ",
 Cell[BoxData["n"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "faff3b96-00de-4cd1-b0fb-60a444c8f904"],
 ". For example, ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"g", 
    RowBox[{"(", "10", ")"}]}], "=", 
   RowBox[{
    RowBox[{"1", " ", "3", " ", "7", " ", "9"}], "=", "189"}]}]], 
  "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "b1b28254-0af3-4f33-9cbd-c40497170b0b"],
 ". Also, we define ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"G", 
    RowBox[{"(", "n", ")"}]}], "=", 
   RowBox[{
    UnderoverscriptBox["\[Product]", 
     RowBox[{"i", "=", "1"}], "n"], 
    RowBox[{"g", 
     RowBox[{"(", "i", ")"}]}]}]}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "7059b8f7-21a3-4385-b187-a8d8357a7dfb"],
 ". You are given ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"G", 
    RowBox[{"(", "10", ")"}]}], "=", "23044331520000"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "f3b70840-70fe-4ec5-8479-5959c07473c4"],
 ". Find ",
 Cell[BoxData[
  RowBox[{"G", 
   RowBox[{"(", 
    SuperscriptBox["10", "8"], ")"}]}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "5ed8bf83-d31e-4c88-8113-3cff1a68f917"],
 ". Give your answer modulo ",
 Cell[BoxData["1000000007"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "616cb41e-6795-462a-8ddf-bdf60828a1eb"],
 ".\""
}], "TechNoteMathCaption",
 CellID->255766314,ExpressionUUID->"e0e4efa2-fc2f-462f-878a-346871875012"],

Cell[TextData[{
 "Compute the products of the first 10 phitorials to verify the statement ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"G", 
    RowBox[{"(", "10", ")"}]}], "=", "23044331520000"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "149f77ee-f703-4d35-997a-a1bbebab62af"],
 ":"
}], "TechNoteMathCaption",
 CellID->561182461,ExpressionUUID->"06f221c4-3a6e-420e-9281-132cd2c5f8ae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EchoTiming", "@", 
  RowBox[{"Product", "[", 
   RowBox[{
    RowBox[{"Phitorial", "[", "n", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellLabel->"In[127]:=",
 CellID->178093661,ExpressionUUID->"b26267a8-a88e-4b11-998c-c9f3ed3a96e0"],

Cell[BoxData["0.0002024`"], "EchoTiming",
 CellID->11277768,ExpressionUUID->"75b36053-ebab-4fd4-84c3-4a96f58d6a14"],

Cell[BoxData["23044331520000"], "Output",
 CellLabel->"Out[127]=",
 CellID->135146785,ExpressionUUID->"043dbcd8-910f-46bb-b1e2-ce4a21954487"]
}, Open  ]],

Cell[TextData[{
 "Compute the phitorial product up to ",
 Cell[BoxData[
  SuperscriptBox["10", "4"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "ae35e7e6-9ca1-46f3-8d1c-a9d110eb9b2e"],
 ":"
}], "TechNoteMathCaption",
 CellID->102959412,ExpressionUUID->"f58db4b4-936e-4b86-aada-cea71209cfce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EchoTiming", "[", 
  RowBox[{"Product", "[", 
   RowBox[{
    RowBox[{"Phitorial", "[", "n", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", 
      SuperscriptBox["10", "4"]}], "}"}]}], "]"}], "]"}]], "Input",
 CellLabel->"In[124]:=",
 CellID->65194424,ExpressionUUID->"b585f376-455e-4f06-b10c-ef2bd26cdb38"],

Cell[BoxData["43.6647207`"], "EchoTiming",
 CellID->593897543,ExpressionUUID->"af637982-a044-45ec-97bb-ad1e6624cc54"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{
      "59164868729671610938246087809704188976914193685488458108710146404740892\
822379871539934845489808218821604928896809249436472645406000833488216177847592\
980464286442442444398876837616", 
       TemplateBox[{"101789813"}, "OutputSizeLimit`Skeleton"], 
       "0000000000000000000000000000000000000000000000000000000000000000000000\
000000000000000000000000000000000000000000000000000000000000000000000000000000\
00000000000000000000000000000000"}], Short[#, 8]& ], "line" -> 124, 
   "sessionID" -> 34156895453523762438, "byteCount" -> 42267528, "size" -> 8, 
   "stored" -> False, "expr" -> Missing["NotAvailable", "NewSessionID"], 
   "wrap" -> OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellLabel->"Out[124]=",
 CellID->74761761,ExpressionUUID->"67310363-e70b-466f-8b52-b90d651fa870"]
}, Open  ]],

Cell["Compute the answer mod 1000000007:", "TechNoteMathCaption",
 CellID->298809539,ExpressionUUID->"dde14458-f295-4034-b96c-42c1ac1c0293"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mod", "[", 
  RowBox[{"%", ",", "1000000007"}], "]"}]], "Input",
 CellLabel->"In[125]:=",
 CellID->7216617,ExpressionUUID->"24512014-d96b-4551-b5aa-7a0f6b459a9f"],

Cell[BoxData["517055464"], "Output",
 CellLabel->"Out[125]=",
 CellID->150133947,ExpressionUUID->"d369b39a-78bb-460c-aef1-c5cf8726addb"]
}, Open  ]],

Cell["Product of primes up to 20:", "TechNoteMathCaption",
 CellID->6621231,ExpressionUUID->"7ba554c1-8774-4fdf-ba30-250586c1dbac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Primorial", "[", "20", "]"}]], "Input",
 CellLabel->"In[893]:=",
 CellID->238009890,ExpressionUUID->"b499c1cc-970e-4ba7-8fc5-afa7ca346ad9"],

Cell[BoxData["9699690"], "Output",
 CellLabel->"Out[893]=",
 CellID->441155702,ExpressionUUID->"b2f4ef0a-b277-4457-ac6a-7e6142c0dc0a"]
}, Open  ]],

Cell["Product of primes up to 54:", "TechNoteMathCaption",
 CellID->784853736,ExpressionUUID->"7f518fad-62a5-498a-b432-f6a13fb51be6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Primorial", "[", "54", "]"}]], "Input",
 CellLabel->"In[894]:=",
 CellID->610437364,ExpressionUUID->"c47d54bf-f526-45d8-86c0-15fc82c21df9"],

Cell[BoxData["32589158477190044730"], "Output",
 CellLabel->"Out[894]=",
 CellID->38186909,ExpressionUUID->"b96e6d6d-52c5-4995-ae59-13e4feda1f86"]
}, Open  ]],

Cell[TextData[{
 "Compute the primorial ",
 Cell[BoxData[
  StyleBox[
   TagBox[
    RowBox[{"23", "#"}],
    "ForceRasterization"], "MarkedForRasterization"]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "eb07feed-a274-4a5f-a844-512765aac8d7"],
 ":"
}], "TechNoteMathCaption",
 CellID->393571408,ExpressionUUID->"9027f44a-5a42-40d6-b0d8-272bdc6bbdcd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Primorial", "[", "23", "]"}]], "Input", "ExampleInput",
 CellLabel->"In[125]:=",
 CellID->878786336,ExpressionUUID->"bf26b9c2-a90b-40a6-9edc-15853409fe61"],

Cell[BoxData["223092870"], "Output",
 CellLabel->"Out[125]=",
 CellID->369524703,ExpressionUUID->"d1ea0b12-49dd-4c79-9485-c3963fb6bde0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "60c7273e-ba87-402e-b571-550c1461e7da"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->404754789,ExpressionUUID->"ba87e999-f67c-40da-a475-c2ab4398ea57"],

Cell["Compute a list of the first 15 primorials:", "TechNoteMathCaption",
 CellID->394823239,ExpressionUUID->"d4e3f1c0-4936-41b8-b9f2-641ef783b90e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Primorial", "[", 
  RowBox[{"Range", "[", "15", "]"}], "]"}]], "Input", "ExampleInput",
 CellLabel->"In[126]:=",
 CellID->627889596,ExpressionUUID->"277c5bb1-140a-4367-8f49-95e8f595bc53"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "6", ",", "6", ",", "30", ",", "30", ",", "210", ",", 
   "210", ",", "210", ",", "210", ",", "2310", ",", "2310", ",", "30030", ",",
    "30030", ",", "30030"}], "}"}]], "Output",
 CellLabel->"Out[126]=",
 CellID->95453950,ExpressionUUID->"2942f647-ab50-4d31-bef9-d43e7d7fd636"]
}, Open  ]],

Cell["Compare with the definition:", "TechNoteMathCaption",
 CellID->731096908,ExpressionUUID->"46f4d3a9-a5cc-4a21-ba7d-c1bbf723259a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"k", "=", "7"}], "}"}], ",", 
   RowBox[{
    RowBox[{"Product", "[", 
     RowBox[{
      RowBox[{"Prime", "[", "j", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", 
        RowBox[{"PrimePi", "[", "k", "]"}]}], "}"}]}], "]"}], "\[Equal]", 
    RowBox[{"Primorial", "[", "k", "]"}]}]}], "]"}]], "Input", "ExampleInput",
 CellLabel->"In[128]:=",
 CellID->219626058,ExpressionUUID->"a99f34f5-1dd9-4cfd-bec7-d4eb4f90db18"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[128]=",
 CellID->169546956,ExpressionUUID->"5a6ed990-717c-465b-90e8-b4868cf4cce5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "7ac510f6-e7d6-4a1a-8de5-62a2ca02f4dd"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->96742026,ExpressionUUID->"a89fbfd0-d78a-461c-96cb-a46b935d33cd"],

Cell[TextData[{
 "The resource function ",
 Cell[BoxData[Cell[BoxData[
   TemplateBox[{
     Cell[
      TextData["ChebyshevTheta"]], 
     "https://resources.wolframcloud.com/FunctionRepository/resources/\
ChebyshevTheta/"},
    "WebLink",
    BaseStyle->{"TechNoteMathCaption"}]],ExpressionUUID->
   "fa4ffe29-08ac-4e67-939b-fb2647096757"]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "66718a7e-f7ec-4bfb-a1f2-0359948ae870"],
 " is the logarithm of the primorial:"
}], "TechNoteMathCaption",
 CellID->575191782,ExpressionUUID->"cfb986fe-9b39-47ba-b733-186f5d3aaf67"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"k", "=", "7"}], "}"}], ",", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"ResourceFunction", "[", "\"\<ChebyshevTheta\>\"", "]"}], "[", 
      "k", "]"}], "]"}], "\[Equal]", 
    RowBox[{"Primorial", "[", "k", "]"}]}]}], "]"}]], "Input", "ExampleInput",
 CellLabel->"In[129]:=",
 CellID->154121207,ExpressionUUID->"9b2e32bd-e83c-46ba-971b-f2624e8e809b"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[129]=",
 CellID->179973804,ExpressionUUID->"21e21422-7732-4605-b3a3-256caf1da68b"]
}, Open  ]],

Cell[TextData[{
 "Evaluate the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["infinite primorial"]], 
    "https://doi.org/10.1007/s00220-007-0350-z"},
   "WebLink",
   BaseStyle->{"TechNoteMathCaption"}]],ExpressionUUID->
  "10745a98-9c6f-4355-a458-e853d4920249"],
 ":"
}], "TechNoteMathCaption",
 CellID->812166021,ExpressionUUID->"af105472-3a2c-49ad-a9f3-e60c9a7f1cf0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Product", "[", 
  RowBox[{
   RowBox[{"Prime", "[", "k", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"Regularization", "\[Rule]", "\"\<Dirichlet\>\""}]}], 
  "]"}]], "Input", "ExampleInput",
 CellLabel->"In[130]:=",
 CellID->624985202,ExpressionUUID->"194a904e-1a03-43e5-82ed-58a7c855999c"],

Cell[BoxData[
 RowBox[{"4", " ", 
  SuperscriptBox["\[Pi]", "2"]}]], "Output",
 CellLabel->"Out[130]=",
 CellID->51179190,ExpressionUUID->"a35cef06-10a6-4353-8849-a3e29372d31b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Primorial", "[", "\[Infinity]", "]"}]], "Input", "ExampleInput",
 CellLabel->"In[131]:=",
 CellID->368150137,ExpressionUUID->"3bbb094f-afd8-4d9e-917e-8fc00b5c1fe7"],

Cell[BoxData[
 RowBox[{"4", " ", 
  SuperscriptBox["\[Pi]", "2"]}]], "Output",
 CellLabel->"Out[131]=",
 CellID->288813044,ExpressionUUID->"e27c18fa-0ace-473f-9850-2802dbfcb17b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "51b36d3e-aa6d-48c6-9367-7082fb6581ef"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->758872197,ExpressionUUID->"300ccbfc-a465-43c1-909a-cf81d5cf8e29"],

Cell["Compare the growth rate of the primorial versus factorial:", \
"TechNoteMathCaption",
 CellID->230671479,ExpressionUUID->"22c43446-717d-427c-8724-8ef85c36a4c5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"DiscretePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Primorial", "[", "n", "]"}], ",", 
      RowBox[{"Factorial", "[", "n", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "50"}], "}"}], ",", 
    RowBox[{"ScalingFunctions", "\[Rule]", "\"\<Log\>\""}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<n#\>\"", ",", "\"\<n!\>\""}], "}"}]}]}], "]"}], 
  "]"}]], "Input", "ExampleInput",
 CellLabel->"In[61]:=",
 CellID->968332860,ExpressionUUID->"766cbd30-55d6-4147-a59d-1cc1785998ec"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAAAAAAAAAEDz/D8xbDE0=
    "], {{0, 145.2}, {288., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{288., 145.2},
  PlotRange->{{0, 288.}, {0, 145.2}}]], "Output",
 CellLabel->"Out[61]=",
 CellID->202642854,ExpressionUUID->"51dace37-36f8-49d3-b97f-bd4f6a4a668c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "68bbd246-b5f3-435e-891f-d355c7b9e74b"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->115354593,ExpressionUUID->"f24c0561-8ff7-4952-b8ff-995eb85767e0"],

Cell[TextData[{
 "Plot the differences between the factorial and the primorial up to ",
 Cell[BoxData[
  StyleBox["n", "TI"]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "bc3e8b60-5e96-4501-aa91-234b96533b39"],
 ":"
}], "TechNoteMathCaption",
 CellID->201723607,ExpressionUUID->"18159654-2701-405c-b018-8a78c437bab8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Differences", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Log", "[", 
       FractionBox[
        RowBox[{"n", "!"}], 
        RowBox[{"Primorial", "[", "n", "]"}]], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", "100", ",", "1"}], "}"}]}], "]"}], "]"}], 
   ",", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       RowBox[{
         DynamicBox[
          FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]], 
         "\[Rule]", 
         DynamicBox[
          FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]]}], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["Rule", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["56", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    Filling -> Axis,
    SelectWithContents->True,
    Selectable->False]}], "]"}]], "Input", "ExampleInput",
 CellLabel->"In[134]:=",
 CellID->746283470,ExpressionUUID->"c83f1248-66a4-4918-b1bf-caa29000eb9c"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[GraphicsComplexBox[CompressedData["
1:eJztlYtPU2cYhytMUSuXOdeJ9YZMp1jZKCIisP5aoHItvVJkuOASohEMKmUY
ccuRGJ0xJoLExGu8BRQEo4kKVi5jKXMuM0G0LovLtkAMaowkIBRF2Izvm6Vf
4n/Qk5yc/N7nPO93Tk6+84Z9U2Iu9JPJZD//d769vjsGNDLvA95xKl7EvRrX
RQ7TfSECnwW/hRGv5A1jxGcLfC5KG+I1V89y34WQ+zfufHp4EuVFUNiuOa8U
+VH+VPCX4LtTPbcU//hTfanAI1DnfKi4M3cy1VVYkJoVp6jnHEnPP4XyF4If
hb1VRWsqFgRQXS3waFT1llboRpivxJWmkprIr6ZSjsFtV2K54ybnVYIfi1FV
9a664mlUX43og89HtB2c4/DbnIGnNSHTKa/BoT3+zX+t5xyP8PQj7rwLnBOE
/ok47paP1sbIqf6lwDUout3c1tPCHOhufjD0u4eyBAwHtuwei5lBXAvXYLAl
bxtlSUvfl7nOu7+kwwXtT66u0ECqJ8Ed+MOmUQNlKQmB29XxPZXMkwU/GSsS
I63tj5mnCDwFSdaxVZP1QVTX4/wv576VOyhLehTrDrUGnWG+VvDXosxpTFjt
YZ4Ke566afuiYPJTcVl56ca9DMqyNEzITBMFDuZpSLvYVL/4BPN0oX86ZnzU
Wb71CfMMDI7fXFcZQPtEyoCxOOLXl6G8bzKx7ljjmY9VzDORpe9y9SUyzxL6
Z+GAuvDR8QLmBoEb8OzRZ3s+r2SeDeXs3v6qau6fTfuPuRFly2oOV1+lDCNq
w9P/WNnJ9xu9+3cYEXfXebrrb/ZNcM6pOdnygn0TwrQb95eNs28SfBM09qF8
g/JDqpu9OcyY1zDmzo8lLpmRH3D2mDKFcocZM/s7OhvM7FuQoM7cF1RAGRYs
M4TPStnCvkVY34JkacebqH3sW+n/w74VhSdr/SpOs28VfCvuFw5PW9rCvg3T
z3m+1rvYt0Hf+mQzutm34Z6m+oNP/uTnt6Fg2/rXd/rZzxHePwchqijl3Qn2
c9CWv/jH+fKZ5OfAsamuLVtBWWbHVvdg54YwyrDjaHtduU1FWbKj99YbaXks
+3Z4zgd836dlP1dYPxebHZ7rk+zs52L5PEXoxg3s59L/+f/s5fvmh29++OaH
b3745gf5vvnxvvnxL9XJezc=
       "], {{{}, 
         {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
          None], GraphicsGroupBox[{
            PolygonBox[{{2, 4, 3}, {4, 6, 5}, {16, 18, 17}, {28, 30, 29}, {10,
              12, 11}, {70, 72, 71}, {40, 42, 41}, {58, 60, 59}}], 
            PolygonBox[{{12, 16, 15, 14, 13}, {66, 70, 69, 68, 67}, {18, 22, 
             21, 20, 19}, {6, 10, 9, 8, 7}, {96, 100, 99, 98, 97}, {36, 40, 
             39, 38, 37}, {42, 46, 45, 44, 43}, {78, 82, 81, 80, 79}}], 
            PolygonBox[{{60, 66, 65, 64, 63, 62, 61}, {22, 28, 27, 26, 25, 24,
              23}, {46, 52, 51, 50, 49, 48, 47}, {82, 88, 87, 86, 85, 84, 
             83}, {72, 78, 77, 76, 75, 74, 73}, {52, 58, 57, 56, 55, 54, 
             53}, {30, 36, 35, 34, 33, 32, 31}}], 
            PolygonBox[{{88, 96, 95, 94, 93, 92, 91, 90, 
             89}}]}]}, {}, {}}, {{}, {}, 
         TagBox[
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[2], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
             18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
            34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
            50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 
            66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 
            82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 
            98, 99}]},
          Annotation[#, "Charting`Private`Tag#1"]& ]}}],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", 
        GraphicsComplex[CompressedData["
1:eJztlYtPU2cYhytMUSuXOdeJ9YZMp1jZKCIisP5aoHItvVJkuOASohEMKmUY
ccuRGJ0xJoLExGu8BRQEo4kKVi5jKXMuM0G0LovLtkAMaowkIBRF2Izvm6Vf
4n/Qk5yc/N7nPO93Tk6+84Z9U2Iu9JPJZD//d769vjsGNDLvA95xKl7EvRrX
RQ7TfSECnwW/hRGv5A1jxGcLfC5KG+I1V89y34WQ+zfufHp4EuVFUNiuOa8U
+VH+VPCX4LtTPbcU//hTfanAI1DnfKi4M3cy1VVYkJoVp6jnHEnPP4XyF4If
hb1VRWsqFgRQXS3waFT1llboRpivxJWmkprIr6ZSjsFtV2K54ybnVYIfi1FV
9a664mlUX43og89HtB2c4/DbnIGnNSHTKa/BoT3+zX+t5xyP8PQj7rwLnBOE
/ok47paP1sbIqf6lwDUout3c1tPCHOhufjD0u4eyBAwHtuwei5lBXAvXYLAl
bxtlSUvfl7nOu7+kwwXtT66u0ECqJ8Ed+MOmUQNlKQmB29XxPZXMkwU/GSsS
I63tj5mnCDwFSdaxVZP1QVTX4/wv576VOyhLehTrDrUGnWG+VvDXosxpTFjt
YZ4Ke566afuiYPJTcVl56ca9DMqyNEzITBMFDuZpSLvYVL/4BPN0oX86ZnzU
Wb71CfMMDI7fXFcZQPtEyoCxOOLXl6G8bzKx7ljjmY9VzDORpe9y9SUyzxL6
Z+GAuvDR8QLmBoEb8OzRZ3s+r2SeDeXs3v6qau6fTfuPuRFly2oOV1+lDCNq
w9P/WNnJ9xu9+3cYEXfXebrrb/ZNcM6pOdnygn0TwrQb95eNs28SfBM09qF8
g/JDqpu9OcyY1zDmzo8lLpmRH3D2mDKFcocZM/s7OhvM7FuQoM7cF1RAGRYs
M4TPStnCvkVY34JkacebqH3sW+n/w74VhSdr/SpOs28VfCvuFw5PW9rCvg3T
z3m+1rvYt0Hf+mQzutm34Z6m+oNP/uTnt6Fg2/rXd/rZzxHePwchqijl3Qn2
c9CWv/jH+fKZ5OfAsamuLVtBWWbHVvdg54YwyrDjaHtduU1FWbKj99YbaXks
+3Z4zgd836dlP1dYPxebHZ7rk+zs52L5PEXoxg3s59L/+f/s5fvmh29++OaH
b3745gf5vvnxvvnxL9XJezc=
         "], {{{}, {
            EdgeForm[], 
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             Opacity[0.2]], 
            GraphicsGroup[{
              
              Polygon[{{2, 4, 3}, {4, 6, 5}, {16, 18, 17}, {28, 30, 29}, {10, 
               12, 11}, {70, 72, 71}, {40, 42, 41}, {58, 60, 59}}], 
              
              Polygon[{{12, 16, 15, 14, 13}, {66, 70, 69, 68, 67}, {18, 22, 
               21, 20, 19}, {6, 10, 9, 8, 7}, {96, 100, 99, 98, 97}, {36, 40, 
               39, 38, 37}, {42, 46, 45, 44, 43}, {78, 82, 81, 80, 79}}], 
              
              Polygon[{{60, 66, 65, 64, 63, 62, 61}, {22, 28, 27, 26, 25, 24, 
               23}, {46, 52, 51, 50, 49, 48, 47}, {82, 88, 87, 86, 85, 84, 
               83}, {72, 78, 77, 76, 75, 74, 73}, {52, 58, 57, 56, 55, 54, 
               53}, {30, 36, 35, 34, 33, 32, 31}}], 
              
              Polygon[{{88, 96, 95, 94, 93, 92, 91, 90, 
               89}}]}]}, {}, {}}, {{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[1, 60]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             
             Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
              18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
              34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
              50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 
              66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 
              82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 
              98, 99}]}, "Charting`Private`Tag#1"]}}], <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0., 99.}, {0, 4.605170185988092}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0., 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              PointSize[
               Rational[1, 60]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {{{}, {
               EdgeForm[], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                Opacity[0.2]], 
               GraphicsGroup[{{
                  Polygon[{{2., 0.}, {4., 0.}, {3., 1.3862943611198906`}}], 
                  Polygon[{{4., 0.}, {6., 0.}, {5., 1.791759469228055}}], 
                  Polygon[{{16., 0.}, {18., 0.}, {17., 2.8903717578961645`}}], 
                  Polygon[{{28., 0.}, {30., 0.}, {29., 3.4011973816621555`}}], 
                  Polygon[{{10., 0.}, {12., 0.}, {11., 2.4849066497880004`}}], 
                  Polygon[{{70., 0.}, {72., 0.}, {71., 4.276666119016055}}], 
                  Polygon[{{40., 0.}, {42., 0.}, {41., 3.7376696182833684`}}], 
                  Polygon[{{58., 0.}, {60., 0.}, {59., 4.0943445622221}}]}, {
                  
                  Polygon[{{12., 0.}, {16., 0.}, {15., 2.772588722239781}, {
                   14., 2.70805020110221}, {13., 2.6390573296152584`}}], 
                  
                  Polygon[{{66., 0.}, {70., 0.}, {69., 4.248495242049359}, {
                   68., 4.23410650459726}, {67., 4.219507705176107}}], 
                  
                  Polygon[{{18., 0.}, {22., 0.}, {21., 3.091042453358316}, {
                   20., 3.044522437723423}, {19., 2.995732273553991}}], 
                  
                  Polygon[{{6., 0.}, {10., 0.}, {9., 2.302585092994046}, {8., 
                   2.1972245773362196`}, {7., 2.0794415416798357`}}], 
                  
                  Polygon[{{96., 0.}, {99., 0.}, {99., 4.605170185988092}, {
                   98., 4.59511985013459}, {97., 4.584967478670572}}], 
                  
                  Polygon[{{36., 0.}, {40., 0.}, {39., 3.6888794541139363`}, {
                   38., 3.6635616461296463`}, {37., 3.6375861597263857`}}], 
                  
                  Polygon[{{42., 0.}, {46., 0.}, {45., 3.828641396489095}, {
                   44., 3.8066624897703196`}, {43., 3.784189633918261}}], 
                  
                  Polygon[{{78., 0.}, {82., 0.}, {81., 4.406719247264253}, {
                   80., 4.394449154672439}, {79., 4.382026634673881}}]}, {
                  
                  Polygon[{{60., 0.}, {66., 0.}, {65., 4.189654742026425}, {
                   64., 4.174387269895637}, {63., 4.1588830833596715`}, {62., 
                   4.143134726391533}, {61., 4.127134385045092}}], 
                  
                  Polygon[{{22., 0.}, {28., 0.}, {27., 3.332204510175204}, {
                   26., 3.295836866004329}, {25., 3.258096538021482}, {24., 
                   3.2188758248682006`}, {23., 3.1780538303479458`}}], 
                  
                  Polygon[{{46., 0.}, {52., 0.}, {51., 3.9512437185814275`}, {
                   50., 3.9318256327243257`}, {49., 3.912023005428146}, {48., 
                   3.8918202981106265`}, {47., 3.871201010907891}}], 
                  
                  Polygon[{{82., 0.}, {88., 0.}, {87., 4.477336814478207}, {
                   86., 4.465908118654584}, {85., 4.454347296253507}, {84., 
                   4.442651256490317}, {83., 4.430816798843313}}], 
                  
                  Polygon[{{72., 0.}, {78., 0.}, {77., 4.356708826689592}, {
                   76., 4.343805421853684}, {75., 4.330733340286331}, {74., 
                   4.31748811353631}, {73., 4.30406509320417}}], 
                  
                  Polygon[{{52., 0.}, {58., 0.}, {57., 4.060443010546419}, {
                   56., 4.04305126783455}, {55., 4.02535169073515}, {54., 
                   4.007333185232471}, {53., 3.9889840465642745`}}], 
                  
                  Polygon[{{30., 0.}, {36., 0.}, {35., 3.58351893845611}, {
                   34., 3.5553480614894135`}, {33., 3.5263605246161616`}, {
                   32., 3.4965075614664802`}, {31., 3.4657359027997265`}}]}, {
                  
                  Polygon[{{88., 0.}, {96., 0.}, {95., 4.564348191467836}, {
                   94., 4.553876891600541}, {93., 4.543294782270004}, {92., 
                   4.532599493153256}, {91., 4.5217885770490405`}, {90., 
                   4.51085950651685}, {89., 
                   4.499809670330265}}]}}]}, {}, {}}, {{}, {}, 
              Annotation[{
                Hue[0.67, 0.6, 0.6], 
                Directive[
                 PointSize[
                  Rational[1, 60]], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[2]], 
                Line[CompressedData["
1:eJxdlH1MzHEcx08hnJJw5DwljznRkaRy77vq9HjdY5fEwhpT5umSCftp5mFm
U5rN4zytkLJsKEeSXfMwNuKYMSyzMGOLXKQwn88f9/1tt9vr8/q9Pr/f7fb7
hSxbY87zkclky/9+/n3/P75qZN4HvLEfvkT/7NaFd9B5gYIfCp9xYT/lVV3k
Rwh+FDZUxWguneK94yD3rd788UAv4vFQ2C47a/N9iCcI/SRsPd5yXfHWl+ZT
BB+GSuczxb1RfWiuwtik9GjFeeZwuv++xDOFPgI7S/PnFY/1o7la8LNQ2rqh
WPeD/WzU1qwpD1/UjzgSd1xxRY5rzHOEPgqdqrItlQX9aT4Xs/Z9/qFtZI7G
g5FfP5YHDiCeh/07fOteL2aOQWjKQXf2WeZYYX8cjrjlnRWRcprPF7wG+Xfq
Glrq2QOP6p5+e+4hloAO//rtXZEDyWvhah9kyV5HLGnp/2Wv894v6XBWe9vV
HOxP83i4/Xev7DQQS/HwX6+OaSlhnyD0CZgeF269+Z59ouATEW/tmtNHH0Bz
Pc7cPb1R7iCW9CjQ7b8RcJL9AqFfgEKnMXauh30S7NnqmvXjB1GfhIvKC1cf
pxLLktEjM/XkOtgnI/lczfmJR9mnCPtTMHBIU9HaD+xT0d59bWGJHz0nUiqM
BWH3vwfzc5OGhYerTw5TsU9Dur7Z9S6OfbqwPx171Xkvj+SyNwjegE8vJ++Y
UcI+A8oRrW2lZbw/g54/9kYUTi0/UHaJGEZUhKa8mN3E5xu99zcaEf3QeaL5
DfcmOEeWH6v/wr0JIdoVewq7uTcJvQka+7ccg3Iwzc3eHmaMrupy50SRl8zI
8Tt1WJlI3GhGUFtjU5WZewti1Wm7AnKJYcFUQ+jQxNXcW4TrW5AgbfodsYt7
K71/uLci71iFT/EJ7q1Cb8WTvI7+U+q5t2HAac8SvYt7G/Q3PqzCI+5teKwp
6z38Fd+/DbnrFv+618Z9pvD7MxGoilA+7OE+Ew05E2+NkQdRnwnHysqGDAWx
zI617vampSHEsOPQzcoim4pYsqP1+m9pWhT3dnjO+G17p+U+S7h+FlY5PFd6
2bnPwrTRiuAVS7nPovdzEP4AqJo9xg==
                 "]]}, "Charting`Private`Tag#1"]}}, "GCFlag" -> True|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0., 99.}, {0, 4.605170185988092}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0., 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
          "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             PointSize[
              Rational[1, 60]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {{{}, {
              EdgeForm[], 
              Directive[
               RGBColor[0.368417, 0.506779, 0.709798], 
               Opacity[0.2]], 
              GraphicsGroup[{{
                 Polygon[{{2., 0.}, {4., 0.}, {3., 1.3862943611198906`}}], 
                 Polygon[{{4., 0.}, {6., 0.}, {5., 1.791759469228055}}], 
                 Polygon[{{16., 0.}, {18., 0.}, {17., 2.8903717578961645`}}], 
                 Polygon[{{28., 0.}, {30., 0.}, {29., 3.4011973816621555`}}], 
                 Polygon[{{10., 0.}, {12., 0.}, {11., 2.4849066497880004`}}], 
                 Polygon[{{70., 0.}, {72., 0.}, {71., 4.276666119016055}}], 
                 Polygon[{{40., 0.}, {42., 0.}, {41., 3.7376696182833684`}}], 
                 Polygon[{{58., 0.}, {60., 0.}, {59., 4.0943445622221}}]}, {
                 
                 Polygon[{{12., 0.}, {16., 0.}, {15., 2.772588722239781}, {
                  14., 2.70805020110221}, {13., 2.6390573296152584`}}], 
                 
                 Polygon[{{66., 0.}, {70., 0.}, {69., 4.248495242049359}, {
                  68., 4.23410650459726}, {67., 4.219507705176107}}], 
                 
                 Polygon[{{18., 0.}, {22., 0.}, {21., 3.091042453358316}, {
                  20., 3.044522437723423}, {19., 2.995732273553991}}], 
                 
                 Polygon[{{6., 0.}, {10., 0.}, {9., 2.302585092994046}, {8., 
                  2.1972245773362196`}, {7., 2.0794415416798357`}}], 
                 
                 Polygon[{{96., 0.}, {99., 0.}, {99., 4.605170185988092}, {
                  98., 4.59511985013459}, {97., 4.584967478670572}}], 
                 
                 Polygon[{{36., 0.}, {40., 0.}, {39., 3.6888794541139363`}, {
                  38., 3.6635616461296463`}, {37., 3.6375861597263857`}}], 
                 
                 Polygon[{{42., 0.}, {46., 0.}, {45., 3.828641396489095}, {
                  44., 3.8066624897703196`}, {43., 3.784189633918261}}], 
                 
                 Polygon[{{78., 0.}, {82., 0.}, {81., 4.406719247264253}, {
                  80., 4.394449154672439}, {79., 4.382026634673881}}]}, {
                 
                 Polygon[{{60., 0.}, {66., 0.}, {65., 4.189654742026425}, {
                  64., 4.174387269895637}, {63., 4.1588830833596715`}, {62., 
                  4.143134726391533}, {61., 4.127134385045092}}], 
                 
                 Polygon[{{22., 0.}, {28., 0.}, {27., 3.332204510175204}, {
                  26., 3.295836866004329}, {25., 3.258096538021482}, {24., 
                  3.2188758248682006`}, {23., 3.1780538303479458`}}], 
                 
                 Polygon[{{46., 0.}, {52., 0.}, {51., 3.9512437185814275`}, {
                  50., 3.9318256327243257`}, {49., 3.912023005428146}, {48., 
                  3.8918202981106265`}, {47., 3.871201010907891}}], 
                 
                 Polygon[{{82., 0.}, {88., 0.}, {87., 4.477336814478207}, {
                  86., 4.465908118654584}, {85., 4.454347296253507}, {84., 
                  4.442651256490317}, {83., 4.430816798843313}}], 
                 
                 Polygon[{{72., 0.}, {78., 0.}, {77., 4.356708826689592}, {
                  76., 4.343805421853684}, {75., 4.330733340286331}, {74., 
                  4.31748811353631}, {73., 4.30406509320417}}], 
                 
                 Polygon[{{52., 0.}, {58., 0.}, {57., 4.060443010546419}, {
                  56., 4.04305126783455}, {55., 4.02535169073515}, {54., 
                  4.007333185232471}, {53., 3.9889840465642745`}}], 
                 
                 Polygon[{{30., 0.}, {36., 0.}, {35., 3.58351893845611}, {34.,
                   3.5553480614894135`}, {33., 3.5263605246161616`}, {32., 
                  3.4965075614664802`}, {31., 3.4657359027997265`}}]}, {
                 
                 Polygon[{{88., 0.}, {96., 0.}, {95., 4.564348191467836}, {
                  94., 4.553876891600541}, {93., 4.543294782270004}, {92., 
                  4.532599493153256}, {91., 4.5217885770490405`}, {90., 
                  4.51085950651685}, {89., 
                  4.499809670330265}}]}}]}, {}, {}}, {{}, {}, 
             Annotation[{
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[1, 60]], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]], 
               Line[CompressedData["
1:eJxdlH1MzHEcx08hnJJw5DwljznRkaRy77vq9HjdY5fEwhpT5umSCftp5mFm
U5rN4zytkLJsKEeSXfMwNuKYMSyzMGOLXKQwn88f9/1tt9vr8/q9Pr/f7fb7
hSxbY87zkclky/9+/n3/P75qZN4HvLEfvkT/7NaFd9B5gYIfCp9xYT/lVV3k
Rwh+FDZUxWguneK94yD3rd788UAv4vFQ2C47a/N9iCcI/SRsPd5yXfHWl+ZT
BB+GSuczxb1RfWiuwtik9GjFeeZwuv++xDOFPgI7S/PnFY/1o7la8LNQ2rqh
WPeD/WzU1qwpD1/UjzgSd1xxRY5rzHOEPgqdqrItlQX9aT4Xs/Z9/qFtZI7G
g5FfP5YHDiCeh/07fOteL2aOQWjKQXf2WeZYYX8cjrjlnRWRcprPF7wG+Xfq
Glrq2QOP6p5+e+4hloAO//rtXZEDyWvhah9kyV5HLGnp/2Wv894v6XBWe9vV
HOxP83i4/Xev7DQQS/HwX6+OaSlhnyD0CZgeF269+Z59ouATEW/tmtNHH0Bz
Pc7cPb1R7iCW9CjQ7b8RcJL9AqFfgEKnMXauh30S7NnqmvXjB1GfhIvKC1cf
pxLLktEjM/XkOtgnI/lczfmJR9mnCPtTMHBIU9HaD+xT0d59bWGJHz0nUiqM
BWH3vwfzc5OGhYerTw5TsU9Dur7Z9S6OfbqwPx171Xkvj+SyNwjegE8vJ++Y
UcI+A8oRrW2lZbw/g54/9kYUTi0/UHaJGEZUhKa8mN3E5xu99zcaEf3QeaL5
DfcmOEeWH6v/wr0JIdoVewq7uTcJvQka+7ccg3Iwzc3eHmaMrupy50SRl8zI
8Tt1WJlI3GhGUFtjU5WZewti1Wm7AnKJYcFUQ+jQxNXcW4TrW5AgbfodsYt7
K71/uLci71iFT/EJ7q1Cb8WTvI7+U+q5t2HAac8SvYt7G/Q3PqzCI+5teKwp
6z38Fd+/DbnrFv+618Z9pvD7MxGoilA+7OE+Ew05E2+NkQdRnwnHysqGDAWx
zI617vampSHEsOPQzcoim4pYsqP1+m9pWhT3dnjO+G17p+U+S7h+FlY5PFd6
2bnPwrTRiuAVS7nPovdzEP4AqJo9xg==
                "]]}, "Charting`Private`Tag#1"]}}, "GCFlag" -> True|>, 
        "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListLinePlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[
     GraphicsComplex[CompressedData["
1:eJztlYtPU2cYhytMUSuXOdeJ9YZMp1jZKCIisP5aoHItvVJkuOASohEMKmUY
ccuRGJ0xJoLExGu8BRQEo4kKVi5jKXMuM0G0LovLtkAMaowkIBRF2Izvm6Vf
4n/Qk5yc/N7nPO93Tk6+84Z9U2Iu9JPJZD//d769vjsGNDLvA95xKl7EvRrX
RQ7TfSECnwW/hRGv5A1jxGcLfC5KG+I1V89y34WQ+zfufHp4EuVFUNiuOa8U
+VH+VPCX4LtTPbcU//hTfanAI1DnfKi4M3cy1VVYkJoVp6jnHEnPP4XyF4If
hb1VRWsqFgRQXS3waFT1llboRpivxJWmkprIr6ZSjsFtV2K54ybnVYIfi1FV
9a664mlUX43og89HtB2c4/DbnIGnNSHTKa/BoT3+zX+t5xyP8PQj7rwLnBOE
/ok47paP1sbIqf6lwDUout3c1tPCHOhufjD0u4eyBAwHtuwei5lBXAvXYLAl
bxtlSUvfl7nOu7+kwwXtT66u0ECqJ8Ed+MOmUQNlKQmB29XxPZXMkwU/GSsS
I63tj5mnCDwFSdaxVZP1QVTX4/wv576VOyhLehTrDrUGnWG+VvDXosxpTFjt
YZ4Ke566afuiYPJTcVl56ca9DMqyNEzITBMFDuZpSLvYVL/4BPN0oX86ZnzU
Wb71CfMMDI7fXFcZQPtEyoCxOOLXl6G8bzKx7ljjmY9VzDORpe9y9SUyzxL6
Z+GAuvDR8QLmBoEb8OzRZ3s+r2SeDeXs3v6qau6fTfuPuRFly2oOV1+lDCNq
w9P/WNnJ9xu9+3cYEXfXebrrb/ZNcM6pOdnygn0TwrQb95eNs28SfBM09qF8
g/JDqpu9OcyY1zDmzo8lLpmRH3D2mDKFcocZM/s7OhvM7FuQoM7cF1RAGRYs
M4TPStnCvkVY34JkacebqH3sW+n/w74VhSdr/SpOs28VfCvuFw5PW9rCvg3T
z3m+1rvYt0Hf+mQzutm34Z6m+oNP/uTnt6Fg2/rXd/rZzxHePwchqijl3Qn2
c9CWv/jH+fKZ5OfAsamuLVtBWWbHVvdg54YwyrDjaHtduU1FWbKj99YbaXks
+3Z4zgd836dlP1dYPxebHZ7rk+zs52L5PEXoxg3s59L/+f/s5fvmh29++OaH
b3745gf5vvnxvvnxL9XJezc=
      "], {{{}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroup[{
           
           Polygon[{{2, 4, 3}, {4, 6, 5}, {16, 18, 17}, {28, 30, 29}, {10, 12,
             11}, {70, 72, 71}, {40, 42, 41}, {58, 60, 59}}], 
           
           Polygon[{{12, 16, 15, 14, 13}, {66, 70, 69, 68, 67}, {18, 22, 21, 
            20, 19}, {6, 10, 9, 8, 7}, {96, 100, 99, 98, 97}, {36, 40, 39, 38,
             37}, {42, 46, 45, 44, 43}, {78, 82, 81, 80, 79}}], 
           
           Polygon[{{60, 66, 65, 64, 63, 62, 61}, {22, 28, 27, 26, 25, 24, 
            23}, {46, 52, 51, 50, 49, 48, 47}, {82, 88, 87, 86, 85, 84, 83}, {
            72, 78, 77, 76, 75, 74, 73}, {52, 58, 57, 56, 55, 54, 53}, {30, 
            36, 35, 34, 33, 32, 31}}], 
           
           Polygon[{{88, 96, 95, 94, 93, 92, 91, 90, 
            89}}]}]}, {}, {}}, {{}, {}, 
        Annotation[{
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[1, 60]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]], 
          
          Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
            19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
           35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
            52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 
           68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
            85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99}]}, 
         "Charting`Private`Tag#1"]}}], <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0., 99.}, {0, 4.605170185988092}}, 
        "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0., 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[
            Rational[1, 60]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {{{}, {
            EdgeForm[], 
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             Opacity[0.2]], 
            GraphicsGroup[{{
               Polygon[{{2., 0.}, {4., 0.}, {3., 1.3862943611198906`}}], 
               Polygon[{{4., 0.}, {6., 0.}, {5., 1.791759469228055}}], 
               Polygon[{{16., 0.}, {18., 0.}, {17., 2.8903717578961645`}}], 
               Polygon[{{28., 0.}, {30., 0.}, {29., 3.4011973816621555`}}], 
               Polygon[{{10., 0.}, {12., 0.}, {11., 2.4849066497880004`}}], 
               Polygon[{{70., 0.}, {72., 0.}, {71., 4.276666119016055}}], 
               Polygon[{{40., 0.}, {42., 0.}, {41., 3.7376696182833684`}}], 
               Polygon[{{58., 0.}, {60., 0.}, {59., 4.0943445622221}}]}, {
               
               Polygon[{{12., 0.}, {16., 0.}, {15., 2.772588722239781}, {14., 
                2.70805020110221}, {13., 2.6390573296152584`}}], 
               
               Polygon[{{66., 0.}, {70., 0.}, {69., 4.248495242049359}, {68., 
                4.23410650459726}, {67., 4.219507705176107}}], 
               
               Polygon[{{18., 0.}, {22., 0.}, {21., 3.091042453358316}, {20., 
                3.044522437723423}, {19., 2.995732273553991}}], 
               
               Polygon[{{6., 0.}, {10., 0.}, {9., 2.302585092994046}, {8., 
                2.1972245773362196`}, {7., 2.0794415416798357`}}], 
               
               Polygon[{{96., 0.}, {99., 0.}, {99., 4.605170185988092}, {98., 
                4.59511985013459}, {97., 4.584967478670572}}], 
               
               Polygon[{{36., 0.}, {40., 0.}, {39., 3.6888794541139363`}, {
                38., 3.6635616461296463`}, {37., 3.6375861597263857`}}], 
               
               Polygon[{{42., 0.}, {46., 0.}, {45., 3.828641396489095}, {44., 
                3.8066624897703196`}, {43., 3.784189633918261}}], 
               
               Polygon[{{78., 0.}, {82., 0.}, {81., 4.406719247264253}, {80., 
                4.394449154672439}, {79., 4.382026634673881}}]}, {
               
               Polygon[{{60., 0.}, {66., 0.}, {65., 4.189654742026425}, {64., 
                4.174387269895637}, {63., 4.1588830833596715`}, {62., 
                4.143134726391533}, {61., 4.127134385045092}}], 
               
               Polygon[{{22., 0.}, {28., 0.}, {27., 3.332204510175204}, {26., 
                3.295836866004329}, {25., 3.258096538021482}, {24., 
                3.2188758248682006`}, {23., 3.1780538303479458`}}], 
               
               Polygon[{{46., 0.}, {52., 0.}, {51., 3.9512437185814275`}, {
                50., 3.9318256327243257`}, {49., 3.912023005428146}, {48., 
                3.8918202981106265`}, {47., 3.871201010907891}}], 
               
               Polygon[{{82., 0.}, {88., 0.}, {87., 4.477336814478207}, {86., 
                4.465908118654584}, {85., 4.454347296253507}, {84., 
                4.442651256490317}, {83., 4.430816798843313}}], 
               
               Polygon[{{72., 0.}, {78., 0.}, {77., 4.356708826689592}, {76., 
                4.343805421853684}, {75., 4.330733340286331}, {74., 
                4.31748811353631}, {73., 4.30406509320417}}], 
               
               Polygon[{{52., 0.}, {58., 0.}, {57., 4.060443010546419}, {56., 
                4.04305126783455}, {55., 4.02535169073515}, {54., 
                4.007333185232471}, {53., 3.9889840465642745`}}], 
               
               Polygon[{{30., 0.}, {36., 0.}, {35., 3.58351893845611}, {34., 
                3.5553480614894135`}, {33., 3.5263605246161616`}, {32., 
                3.4965075614664802`}, {31., 3.4657359027997265`}}]}, {
               
               Polygon[{{88., 0.}, {96., 0.}, {95., 4.564348191467836}, {94., 
                4.553876891600541}, {93., 4.543294782270004}, {92., 
                4.532599493153256}, {91., 4.5217885770490405`}, {90., 
                4.51085950651685}, {89., 
                4.499809670330265}}]}}]}, {}, {}}, {{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[1, 60]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1:eJxdlH1MzHEcx08hnJJw5DwljznRkaRy77vq9HjdY5fEwhpT5umSCftp5mFm
U5rN4zytkLJsKEeSXfMwNuKYMSyzMGOLXKQwn88f9/1tt9vr8/q9Pr/f7fb7
hSxbY87zkclky/9+/n3/P75qZN4HvLEfvkT/7NaFd9B5gYIfCp9xYT/lVV3k
Rwh+FDZUxWguneK94yD3rd788UAv4vFQ2C47a/N9iCcI/SRsPd5yXfHWl+ZT
BB+GSuczxb1RfWiuwtik9GjFeeZwuv++xDOFPgI7S/PnFY/1o7la8LNQ2rqh
WPeD/WzU1qwpD1/UjzgSd1xxRY5rzHOEPgqdqrItlQX9aT4Xs/Z9/qFtZI7G
g5FfP5YHDiCeh/07fOteL2aOQWjKQXf2WeZYYX8cjrjlnRWRcprPF7wG+Xfq
Glrq2QOP6p5+e+4hloAO//rtXZEDyWvhah9kyV5HLGnp/2Wv894v6XBWe9vV
HOxP83i4/Xev7DQQS/HwX6+OaSlhnyD0CZgeF269+Z59ouATEW/tmtNHH0Bz
Pc7cPb1R7iCW9CjQ7b8RcJL9AqFfgEKnMXauh30S7NnqmvXjB1GfhIvKC1cf
pxLLktEjM/XkOtgnI/lczfmJR9mnCPtTMHBIU9HaD+xT0d59bWGJHz0nUiqM
BWH3vwfzc5OGhYerTw5TsU9Dur7Z9S6OfbqwPx171Xkvj+SyNwjegE8vJ++Y
UcI+A8oRrW2lZbw/g54/9kYUTi0/UHaJGEZUhKa8mN3E5xu99zcaEf3QeaL5
DfcmOEeWH6v/wr0JIdoVewq7uTcJvQka+7ccg3Iwzc3eHmaMrupy50SRl8zI
8Tt1WJlI3GhGUFtjU5WZewti1Wm7AnKJYcFUQ+jQxNXcW4TrW5AgbfodsYt7
K71/uLci71iFT/EJ7q1Cb8WTvI7+U+q5t2HAac8SvYt7G/Q3PqzCI+5teKwp
6z38Fd+/DbnrFv+618Z9pvD7MxGoilA+7OE+Ew05E2+NkQdRnwnHysqGDAWx
zI617vampSHEsOPQzcoim4pYsqP1+m9pWhT3dnjO+G17p+U+S7h+FlY5PFd6
2bnPwrTRiuAVS7nPovdzEP4AqJo9xg==
              "]]}, "Charting`Private`Tag#1"]}}, "GCFlag" -> True|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListLinePlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 99.}, {0, 4.605170185988092}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[134]=",
 CellID->405154369,ExpressionUUID->"fa80da1c-1b49-43f0-b904-8d01c79e3abc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "LucasNumberU1"}]], "Input",
 CellLabel->"In[942]:=",
 CellID->317076608,ExpressionUUID->"2145833e-270d-417d-8a73-dfcd1238268f"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              
              ButtonData->
               "paclet:PeterBurbery/Combinatorics/ref/LucasNumberU1",
              
              ButtonNote->
               "paclet:PeterBurbery/Combinatorics/ref/LucasNumberU1"],
             "\"paclet:PeterBurbery/Combinatorics/ref/LucasNumberU1\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"LucasNumberU1[n, p, q] calculates the term of the \
Lucas sequence of the first kind U_n(p, q).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"LucasNumberU1", "[", 
                    
                    RowBox[{
                    "0", ",", "PeterBurbery`Combinatorics`Private`p_", ",", 
                    "PeterBurbery`Combinatorics`Private`q_"}], "]"}], ":=", 
                    "0"}]}, {" "}, {
                    RowBox[{
                    RowBox[{"LucasNumberU1", "[", 
                    
                    RowBox[{
                    "1", ",", "PeterBurbery`Combinatorics`Private`p_", ",", 
                    "PeterBurbery`Combinatorics`Private`q_"}], "]"}], ":=", 
                    "1"}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"LucasNumberU1", "[", 
                    
                    RowBox[{
                    "PeterBurbery`Combinatorics`Private`n_", ",", 
                    "PeterBurbery`Combinatorics`Private`p_", ",", 
                    "PeterBurbery`Combinatorics`Private`q_"}], "]"}], "/;", 
                    
                    RowBox[{
                    "PeterBurbery`Combinatorics`Private`n", ">", "1"}]}], 
                    ":=", 
                    RowBox[{
                    RowBox[{"LucasNumberU1", "[", 
                    
                    RowBox[{
                    "PeterBurbery`Combinatorics`Private`n", ",", 
                    "PeterBurbery`Combinatorics`Private`p", ",", 
                    "PeterBurbery`Combinatorics`Private`q"}], "]"}], "=", 
                    RowBox[{
                    RowBox[{"PeterBurbery`Combinatorics`Private`p", " ", 
                    RowBox[{"LucasNumberU1", "[", 
                    RowBox[{
                    
                    RowBox[{"PeterBurbery`Combinatorics`Private`n", "-", 
                    "1"}], ",", "PeterBurbery`Combinatorics`Private`p", ",", 
                    "PeterBurbery`Combinatorics`Private`q"}], "]"}]}], "-", 
                    RowBox[{"PeterBurbery`Combinatorics`Private`q", " ", 
                    RowBox[{"LucasNumberU1", "[", 
                    RowBox[{
                    
                    RowBox[{"PeterBurbery`Combinatorics`Private`n", "-", 
                    "2"}], ",", "PeterBurbery`Combinatorics`Private`p", ",", 
                    "PeterBurbery`Combinatorics`Private`q"}], 
                    "]"}]}]}]}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:PeterBurbery/Combinatorics/ref/LucasNumberU1", 
                    "paclet:PeterBurbery/Combinatorics/ref/LucasNumberU1", 
                    "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"Listable", ",", "NumericFunction"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], \
"\<\"PeterBurbery`Combinatorics`LucasNumberU1\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              
              ButtonData->
               "paclet:PeterBurbery/Combinatorics/ref/LucasNumberU1",
              
              ButtonNote->
               "paclet:PeterBurbery/Combinatorics/ref/LucasNumberU1"],
             "\"paclet:PeterBurbery/Combinatorics/ref/LucasNumberU1\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"LucasNumberU1[n, p, q] calculates the term of the \
Lucas sequence of the first kind U_n(p, q).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "LucasNumberU1[n, p, q] calculates the term of the Lucas sequence of the \
first kind U_n(p, q).", 
    "Documentation" -> <|
     "Local" -> "paclet:PeterBurbery/Combinatorics/ref/LucasNumberU1"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, PeterBurbery`Combinatorics`LucasNumberU1, {
      PeterBurbery`Combinatorics`LucasNumberU1[0, 
         Pattern[PeterBurbery`Combinatorics`Private`p, 
          Blank[]], 
         Pattern[PeterBurbery`Combinatorics`Private`q, 
          Blank[]]] :> 0, PeterBurbery`Combinatorics`LucasNumberU1[1, 
         Pattern[PeterBurbery`Combinatorics`Private`p, 
          Blank[]], 
         Pattern[PeterBurbery`Combinatorics`Private`q, 
          Blank[]]] :> 1, Condition[
         PeterBurbery`Combinatorics`LucasNumberU1[
          Pattern[PeterBurbery`Combinatorics`Private`n, 
           Blank[]], 
          Pattern[PeterBurbery`Combinatorics`Private`p, 
           Blank[]], 
          Pattern[PeterBurbery`Combinatorics`Private`q, 
           Blank[]]], PeterBurbery`Combinatorics`Private`n > 1] :> (
        PeterBurbery`Combinatorics`LucasNumberU1[
         PeterBurbery`Combinatorics`Private`n, 
          PeterBurbery`Combinatorics`Private`p, 
          PeterBurbery`Combinatorics`Private`q] = 
        PeterBurbery`Combinatorics`Private`p 
          PeterBurbery`Combinatorics`LucasNumberU1[
           PeterBurbery`Combinatorics`Private`n - 1, 
            PeterBurbery`Combinatorics`Private`p, 
            PeterBurbery`Combinatorics`Private`q] - 
         PeterBurbery`Combinatorics`Private`q 
         PeterBurbery`Combinatorics`LucasNumberU1[
          PeterBurbery`Combinatorics`Private`n - 2, 
           PeterBurbery`Combinatorics`Private`p, 
           PeterBurbery`Combinatorics`Private`q])}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Listable, NumericFunction}, 
    "FullName" -> "PeterBurbery`Combinatorics`LucasNumberU1"|>, 
   False]]], "Output",
 CellLabel->"Out[942]=",
 CellID->38873197,ExpressionUUID->"c37bf87a-01a3-4546-a389-5f8ae6b80033"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["U", "n"], 
   RowBox[{"(", 
    RowBox[{"2", ",", 
     RowBox[{"-", "1"}]}], ")"}]}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "c1acf4d9-0fcc-48e5-9ac0-bad1f08d980d"],
 " represents the Pell numbers:"
}], "TechNoteMathCaption",
 CellID->199205649,ExpressionUUID->"9f339b50-5073-46ab-b559-6afbfc68508c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EchoTiming", "[", 
  RowBox[{"LucasNumberU1", "[", 
   RowBox[{
    RowBox[{"Range", "[", "21", "]"}], ",", "2", ",", 
    RowBox[{"-", "1"}]}], "]"}], "]"}]], "Input",
 CellLabel->"In[332]:=",
 CellID->444434879,ExpressionUUID->"38468ac1-a3c6-435d-8492-6dbcba6d534b"],

Cell[BoxData["0.0000281`"], "EchoTiming",
 CellID->24383746,ExpressionUUID->"518b49fb-79a4-422e-b727-5d95afdd5fc1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "5", ",", "12", ",", "29", ",", "70", ",", "169", ",", 
   "408", ",", "985", ",", "2378", ",", "5741", ",", "13860", ",", "33461", 
   ",", "80782", ",", "195025", ",", "470832", ",", "1136689", ",", "2744210",
    ",", "6625109", ",", "15994428", ",", "38613965"}], "}"}]], "Output",
 CellLabel->"Out[332]=",
 CellID->280470809,ExpressionUUID->"7c84ceb6-4536-4e6e-bc1c-df00b7167423"]
}, Open  ]],

Cell["You can also do the Pell numbers with LinearRecurrence:", \
"TechNoteMathCaption",
 CellID->48779360,ExpressionUUID->"c5b0573b-d75e-4cac-833a-0813e8bbc5bd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearRecurrence", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", "21"}], "]"}]], "Input",
 CellLabel->"In[104]:=",
 CellID->59766089,ExpressionUUID->"46b6b145-6b17-48ad-8dfa-5a7beaa89a94"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "2", ",", "5", ",", "12", ",", "29", ",", "70", ",", 
   "169", ",", "408", ",", "985", ",", "2378", ",", "5741", ",", "13860", ",",
    "33461", ",", "80782", ",", "195025", ",", "470832", ",", "1136689", ",", 
   "2744210", ",", "6625109", ",", "15994428"}], "}"}]], "Output",
 CellLabel->"Out[104]=",
 CellID->6049817,ExpressionUUID->"a4668739-8315-40bc-a691-1b7eb76e9e8c"]
}, Open  ]],

Cell["Find a linear recurrence:", "TechNoteMathCaption",
 CellID->234878772,ExpressionUUID->"dd62178d-8c1c-4ba1-aca1-740c63f138b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindLinearRecurrence", "[", 
  RowBox[{"EchoTiming", "[", 
   RowBox[{"LucasNumberU1", "[", 
    RowBox[{
     RowBox[{"Range", "[", "21", "]"}], ",", "2", ",", 
     RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}]], "Input",
 CellLabel->"In[107]:=",
 CellID->148202768,ExpressionUUID->"2079eaf2-d394-48cd-83a5-5d4d53a10096"],

Cell[BoxData["0.0001767`"], "EchoTiming",
 CellID->510846472,ExpressionUUID->"3d17b65d-ba4a-4e2d-bffd-d26b33670772"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "1"}], "}"}]], "Output",
 CellLabel->"Out[107]=",
 CellID->23869527,ExpressionUUID->"943f211b-bacd-44a6-8e54-217377f4b7fa"]
}, Open  ]],

Cell["Generate a linear recurrence:", "TechNoteMathCaption",
 CellID->10558311,ExpressionUUID->"af58ae10-9fd4-4365-b0f2-7866760e00ab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearRecurrence", "[", 
  RowBox[{
   RowBox[{"FindLinearRecurrence", "[", 
    RowBox[{"EchoTiming", "[", 
     RowBox[{"LucasNumberU1", "[", 
      RowBox[{
       RowBox[{"Range", "[", "21", "]"}], ",", "2", ",", 
       RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"LucasNumberU1", "[", 
      RowBox[{
       RowBox[{"Range", "[", "2", "]"}], ",", "2", ",", 
       RowBox[{"-", "1"}]}], "]"}], ",", "2"}], "]"}], ",", "10"}], 
  "]"}]], "Input",
 CellLabel->"In[108]:=",
 CellID->58237670,ExpressionUUID->"ee973644-c5f8-4937-8527-17a00cc833d9"],

Cell[BoxData["0.0000285`"], "EchoTiming",
 CellID->74044636,ExpressionUUID->"9f8dfc6d-d741-4c75-b946-7ae824d87aad"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "5", ",", "12", ",", "29", ",", "70", ",", "169", ",", 
   "408", ",", "985", ",", "2378"}], "}"}]], "Output",
 CellLabel->"Out[108]=",
 CellID->51587048,ExpressionUUID->"2922147b-7600-46da-b2d9-b4fde2a85e24"]
}, Open  ]],

Cell["We can also find a Fibonacci function:", "TechNoteMathCaption",
 CellID->74692364,ExpressionUUID->"57e21972-6e19-4fef-b01e-fdce50c226f8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindSequenceFunction", "[", 
  RowBox[{"LucasNumberU1", "[", 
   RowBox[{
    RowBox[{"Range", "[", "21", "]"}], ",", "2", ",", 
    RowBox[{"-", "1"}]}], "]"}], "]"}]], "Input",
 CellLabel->"In[109]:=",
 CellID->436274302,ExpressionUUID->"9211cf51-4147-46b6-aed7-1f17900d35d2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Fibonacci", "[", 
   RowBox[{"#1", ",", "2"}], "]"}], "&"}]], "Output",
 CellLabel->"Out[109]=",
 CellID->581705438,ExpressionUUID->"fab75de9-b937-447b-805b-dc5a6b556450"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "7d5851d3-b4ef-4b53-8956-3367102884eb"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->376301338,ExpressionUUID->"59e2a5ae-fce3-4dd7-b8c6-45272d4df550"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["U", "n"], 
   RowBox[{"(", 
    RowBox[{"1", ",", 
     RowBox[{"-", "2"}]}], ")"}]}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "434252ba-23c3-4924-bb32-31b2f433e13e"],
 " represents the Jacobsthal numbers:"
}], "TechNoteMathCaption",
 CellID->228255672,ExpressionUUID->"7e6b4922-3269-49ee-976d-91c2f31eeac8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EchoTiming", "[", 
  RowBox[{"LucasNumberU1", "[", 
   RowBox[{
    RowBox[{"Range", "[", "21", "]"}], ",", "1", ",", 
    RowBox[{"-", "2"}]}], "]"}], "]"}]], "Input",
 CellLabel->"In[333]:=",
 CellID->72949216,ExpressionUUID->"3e60e04b-d5e7-4afc-81c5-3c23a3d969a3"],

Cell[BoxData["0.0000269`"], "EchoTiming",
 CellID->196950653,ExpressionUUID->"efe29f3c-9060-4c81-903a-465db95e4031"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "3", ",", "5", ",", "11", ",", "21", ",", "43", ",", 
   "85", ",", "171", ",", "341", ",", "683", ",", "1365", ",", "2731", ",", 
   "5461", ",", "10923", ",", "21845", ",", "43691", ",", "87381", ",", 
   "174763", ",", "349525", ",", "699051"}], "}"}]], "Output",
 CellLabel->"Out[333]=",
 CellID->157710615,ExpressionUUID->"1d0c998b-4a0d-4ad7-8e2a-90d14435d9c3"]
}, Open  ]],

Cell["We can find a pattern:", "TechNoteMathCaption",
 CellID->63779103,ExpressionUUID->"1e4b92f7-e518-4c7a-bbb9-af945ea9513e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindSequenceFunction", "[", 
  RowBox[{"LucasNumberU1", "[", 
   RowBox[{
    RowBox[{"Range", "[", "21", "]"}], ",", "1", ",", 
    RowBox[{"-", "2"}]}], "]"}], "]"}]], "Input",
 CellLabel->"In[111]:=",
 CellID->559477600,ExpressionUUID->"24bb35b4-afa1-4f7a-9260-d471bb36ee13"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "3"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "#1"]}], "+", 
     SuperscriptBox["2", "#1"]}], ")"}]}], "&"}]], "Output",
 CellLabel->"Out[111]=",
 CellID->854014107,ExpressionUUID->"0a8e641f-0530-4c91-817d-323af6a72a95"]
}, Open  ]],

Cell["Generate a new array:", "TechNoteMathCaption",
 CellID->297234162,ExpressionUUID->"dc41bc03-1bd8-49a6-8ed4-83d4ed3271d0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Array", "[", 
  RowBox[{
   RowBox[{"FindSequenceFunction", "[", 
    RowBox[{"LucasNumberU1", "[", 
     RowBox[{
      RowBox[{"Range", "[", "21", "]"}], ",", "1", ",", 
      RowBox[{"-", "2"}]}], "]"}], "]"}], ",", "21"}], "]"}]], "Input",
 CellLabel->"In[112]:=",
 CellID->384199976,ExpressionUUID->"2e0a4f58-ddfe-45ed-ae5b-5472d94c4f0a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "3", ",", "5", ",", "11", ",", "21", ",", "43", ",", 
   "85", ",", "171", ",", "341", ",", "683", ",", "1365", ",", "2731", ",", 
   "5461", ",", "10923", ",", "21845", ",", "43691", ",", "87381", ",", 
   "174763", ",", "349525", ",", "699051"}], "}"}]], "Output",
 CellLabel->"Out[112]=",
 CellID->60351254,ExpressionUUID->"35f46a67-f7d6-408d-ba5c-b2d5fc60d1d1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "5e3a4a9e-84d7-4b6b-9205-30d071cd0386"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->64234199,ExpressionUUID->"6756b5f4-9657-4abf-9450-75f41a9b31c0"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["U", "n"], 
   RowBox[{"(", 
    RowBox[{"3", ",", "2"}], ")"}]}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "6e561618-7bb1-4180-aec0-5cb710c825ea"],
 " represents the Mersenne numbers:"
}], "TechNoteMathCaption",
 CellID->71222372,ExpressionUUID->"e1005b44-bded-426d-b06c-955f31c1b9ca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EchoTiming", "[", 
  RowBox[{"LucasNumberU1", "[", 
   RowBox[{
    RowBox[{"Range", "[", "21", "]"}], ",", "3", ",", "2"}], "]"}], 
  "]"}]], "Input",
 CellLabel->"In[334]:=",
 CellID->612463501,ExpressionUUID->"3d5ac883-7de1-4322-b013-6d0302ae5697"],

Cell[BoxData["0.0000259`"], "EchoTiming",
 CellID->339196886,ExpressionUUID->"6c8ae07b-ea38-46d2-918c-6d744ea62f5b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "3", ",", "7", ",", "15", ",", "31", ",", "63", ",", "127", ",", 
   "255", ",", "511", ",", "1023", ",", "2047", ",", "4095", ",", "8191", ",",
    "16383", ",", "32767", ",", "65535", ",", "131071", ",", "262143", ",", 
   "524287", ",", "1048575", ",", "2097151"}], "}"}]], "Output",
 CellLabel->"Out[334]=",
 CellID->244982401,ExpressionUUID->"58b0c377-8151-4d4b-99f7-35587cce3e3a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "077fbe10-d18b-410f-a005-11e55bf000f5"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->795616469,ExpressionUUID->"2570f326-9c45-4e15-8cf7-1f6510d72ec0"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["U", "n"], 
   RowBox[{"(", 
    RowBox[{"6", ",", "1"}], ")"}]}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "36cc9198-a616-4efb-9558-fbf2e1be50f7"],
 " represents the square roots of the square triangular numbers:"
}], "TechNoteMathCaption",
 CellID->29412029,ExpressionUUID->"38fd6c99-0323-48d5-8c8a-ee87bc0b0f8e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EchoTiming", "[", 
  RowBox[{"LucasNumberU1", "[", 
   RowBox[{
    RowBox[{"Range", "[", "21", "]"}], ",", "6", ",", "1"}], "]"}], 
  "]"}]], "Input",
 CellLabel->"In[335]:=",
 CellID->13291710,ExpressionUUID->"1388e7bc-4f63-4e15-844d-ed41ed1f9c1f"],

Cell[BoxData["0.0000271`"], "EchoTiming",
 CellID->61324748,ExpressionUUID->"6c6180b0-5e78-474c-a16f-fd85e6470520"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "6", ",", "35", ",", "204", ",", "1189", ",", "6930", ",", 
   "40391", ",", "235416", ",", "1372105", ",", "7997214", ",", "46611179", 
   ",", "271669860", ",", "1583407981", ",", "9228778026", ",", "53789260175",
    ",", "313506783024", ",", "1827251437969", ",", "10650001844790", ",", 
   "62072759630771", ",", "361786555939836", ",", "2108646576008245"}], 
  "}"}]], "Output",
 CellLabel->"Out[335]=",
 CellID->60671734,ExpressionUUID->"b4142020-309e-4611-b400-ff0a860c47a4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "7faa0ac4-939e-4210-9851-e857240750ed"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->179371755,ExpressionUUID->"a9f4da8b-9717-4440-97a3-a81a826cf0b3"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["U", "n"], 
   RowBox[{"(", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}]}], ")"}]}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "002aca0c-fe6b-4cdf-9952-c7d650ff1326"],
 " represents the Fibonacci polynomials:"
}], "TechNoteMathCaption",
 CellID->68513831,ExpressionUUID->"25526e0b-41f0-4cd4-989a-d8d5c8e51715"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"LucasNumberU1", "[", 
   RowBox[{
    RowBox[{"Range", "[", "7", "]"}], ",", "x", ",", 
    RowBox[{"-", "1"}]}], "]"}], "]"}]], "Input",
 CellLabel->"In[337]:=",
 CellID->691053818,ExpressionUUID->"ff80815c-36a8-4530-8230-5c00f280538b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "x", ",", 
   RowBox[{"1", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{
    RowBox[{"2", " ", "x"}], "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"1", "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    SuperscriptBox["x", "4"]}], ",", 
   RowBox[{
    RowBox[{"3", " ", "x"}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["x", "3"]}], "+", 
    SuperscriptBox["x", "5"]}], ",", 
   RowBox[{"1", "+", 
    RowBox[{"6", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["x", "4"]}], "+", 
    SuperscriptBox["x", "6"]}]}], "}"}]], "Output",
 CellLabel->"Out[337]=",
 CellID->116155483,ExpressionUUID->"f0631126-44c7-401b-9618-3b06bd748545"]
}, Open  ]],

Cell["Verify the statement up to 7:", "TechNoteMathCaption",
 CellID->295365794,ExpressionUUID->"f8c0947b-4543-44e6-a7b6-b8997177e4a7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SameQ", "[", 
  RowBox[{
   RowBox[{"Expand", "[", 
    RowBox[{"LucasNumberU1", "[", 
     RowBox[{
      RowBox[{"Range", "[", "7", "]"}], ",", "x", ",", 
      RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
   RowBox[{"Fibonacci", "[", 
    RowBox[{
     RowBox[{"Range", "[", "7", "]"}], ",", "x"}], "]"}]}], "]"}]], "Input",
 CellLabel->"In[338]:=",
 CellID->549686470,ExpressionUUID->"85cb8bb3-a6cd-4c32-96d2-de7e5e27511d"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[338]=",
 CellID->471038115,ExpressionUUID->"a90adbf7-efd0-411c-894b-a20ce11596c8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "25102d95-e036-4882-a21d-c93dad731779"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->439332369,ExpressionUUID->"c2fce5b9-644d-46b4-8060-9f61b38cc84d"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["U", "n"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", "x"}], ",", "1"}], ")"}]}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "f6164041-424d-4fed-a66b-12b63c0931a7"],
 " represents Chebyshev polynomials of the second kind:"
}], "TechNoteMathCaption",
 CellID->142865217,ExpressionUUID->"c31c990b-0888-4526-b3a1-34c1f0418da9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"LucasNumberU1", "[", 
   RowBox[{
    RowBox[{"Range", "[", "7", "]"}], ",", 
    RowBox[{"2", "x"}], ",", "1"}], "]"}], "]"}]], "Input",
 CellLabel->"In[339]:=",
 CellID->819507155,ExpressionUUID->"09dae856-fd1b-4cf1-ae42-6ea2c672de93"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"2", " ", "x"}], ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["x", "2"]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "4"}], " ", "x"}], "+", 
    RowBox[{"8", " ", 
     SuperscriptBox["x", "3"]}]}], ",", 
   RowBox[{"1", "-", 
    RowBox[{"12", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"16", " ", 
     SuperscriptBox["x", "4"]}]}], ",", 
   RowBox[{
    RowBox[{"6", " ", "x"}], "-", 
    RowBox[{"32", " ", 
     SuperscriptBox["x", "3"]}], "+", 
    RowBox[{"32", " ", 
     SuperscriptBox["x", "5"]}]}], ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"24", " ", 
     SuperscriptBox["x", "2"]}], "-", 
    RowBox[{"80", " ", 
     SuperscriptBox["x", "4"]}], "+", 
    RowBox[{"64", " ", 
     SuperscriptBox["x", "6"]}]}]}], "}"}]], "Output",
 CellLabel->"Out[339]=",
 CellID->451625855,ExpressionUUID->"4b1bf549-7600-4542-94bb-12c0ffdf9a8d"]
}, Open  ]],

Cell["Verify this statement:", "TechNoteMathCaption",
 CellID->38534065,ExpressionUUID->"feaee20e-bee1-46f5-8faf-4ea37940d83a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SameQ", "[", 
  RowBox[{
   RowBox[{"Expand", "[", 
    RowBox[{"LucasNumberU1", "[", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{
        RowBox[{"1", "+", "1"}], ",", 
        RowBox[{"7", "+", "1"}]}], "]"}], ",", 
      RowBox[{"2", "x"}], ",", "1"}], "]"}], "]"}], ",", 
   RowBox[{"ChebyshevU", "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"1", "+", "0"}], ",", 
       RowBox[{"7", "+", "0"}]}], "]"}], ",", "x"}], "]"}]}], "]"}]], "Input",
 CellLabel->"In[341]:=",
 CellID->391099469,ExpressionUUID->"28b056e8-f157-4c59-9aaa-664b1d2bc637"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[341]=",
 CellID->22022784,ExpressionUUID->"c48deaaf-96ea-4676-aee0-3bd9787e56ce"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "a740bb36-6ac8-415d-b243-61e77db4fe7f"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->86887181,ExpressionUUID->"17971e2f-7b7f-48ef-a4f3-d49652c07cc7"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["U", "n"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"x", "+", "1"}], ",", "x"}], ")"}]}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "d5a17ac5-fc1b-41ea-a919-4c527d245fb9"],
 " represents repunits in base x:"
}], "TechNoteMathCaption",
 CellID->119722245,ExpressionUUID->"5eee0843-df34-4f8c-a3a2-e7168839c76d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"LucasNumberU1", "[", 
   RowBox[{
    RowBox[{"1", "+", 
     RowBox[{"Range", "[", "7", "]"}]}], ",", 
    RowBox[{"x", "+", "1"}], ",", "x"}], "]"}], "]"}]], "Input",
 CellLabel->"In[347]:=",
 CellID->681843340,ExpressionUUID->"01505b88-07d1-431a-a852-1294a171456c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "+", "x"}], ",", 
   RowBox[{"1", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"1", "+", "x", "+", 
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"1", "+", "x", "+", 
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["x", "3"], "+", 
    SuperscriptBox["x", "4"]}], ",", 
   RowBox[{"1", "+", "x", "+", 
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["x", "3"], "+", 
    SuperscriptBox["x", "4"], "+", 
    SuperscriptBox["x", "5"]}], ",", 
   RowBox[{"1", "+", "x", "+", 
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["x", "3"], "+", 
    SuperscriptBox["x", "4"], "+", 
    SuperscriptBox["x", "5"], "+", 
    SuperscriptBox["x", "6"]}], ",", 
   RowBox[{"1", "+", "x", "+", 
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["x", "3"], "+", 
    SuperscriptBox["x", "4"], "+", 
    SuperscriptBox["x", "5"], "+", 
    SuperscriptBox["x", "6"], "+", 
    SuperscriptBox["x", "7"]}]}], "}"}]], "Output",
 CellLabel->"Out[347]=",
 CellID->567660469,ExpressionUUID->"6eb35a37-fba9-43d0-90f5-a710145fbdf9"]
}, Open  ]],

Cell["The first 21 Lucas numbers:", "TechNoteMathCaption",
 CellID->69391295,ExpressionUUID->"8c1b2aff-269f-4c6b-af50-4a86de808117"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LucasNumberV2", "[", 
  RowBox[{
   RowBox[{"Range", "[", "21", "]"}], ",", "1", ",", 
   RowBox[{"-", "1"}]}], "]"}]], "Input",
 CellLabel->"In[381]:=",
 CellID->139948453,ExpressionUUID->"9c0d56ee-42a7-4f16-b8a3-b2279a311707"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "3", ",", "4", ",", "7", ",", "11", ",", "18", ",", "29", ",", 
   "47", ",", "76", ",", "123", ",", "199", ",", "322", ",", "521", ",", 
   "843", ",", "1364", ",", "2207", ",", "3571", ",", "5778", ",", "9349", 
   ",", "15127", ",", "24476"}], "}"}]], "Output",
 CellLabel->"Out[381]=",
 CellID->46523418,ExpressionUUID->"9654a30c-14f9-4c13-ab1d-2a847e830e06"]
}, Open  ]],

Cell["Compare the function to LucasL:", "TechNoteMathCaption",
 CellID->173598441,ExpressionUUID->"367843e9-a815-41e6-b3cc-4777dd3252b9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"LucasL", "[", 
   RowBox[{"Range", "[", "21", "]"}], "]"}], "===", 
  RowBox[{"LucasNumberV2", "[", 
   RowBox[{
    RowBox[{"Range", "[", "21", "]"}], ",", "1", ",", 
    RowBox[{"-", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[382]:=",
 CellID->298773496,ExpressionUUID->"66eb091e-693d-4f63-9d90-f31cbddc3525"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[382]=",
 CellID->135097200,ExpressionUUID->"9d57d837-12d4-49d6-8062-69e239b60866"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["V", "n"], 
   RowBox[{"(", 
    RowBox[{"2", ",", 
     RowBox[{"-", "1"}]}], ")"}]}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "65f182a0-d70a-4ee9-a2dd-e0be4db7b9ab"],
 " gives the Pell-Lucas numbers (companion Pell numbers):"
}], "TechNoteMathCaption",
 CellID->6568824,ExpressionUUID->"70ee95cb-344b-4b70-9b67-cdd0249948f4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LucasNumberV2", "[", 
  RowBox[{
   RowBox[{"Range", "[", "21", "]"}], ",", "2", ",", 
   RowBox[{"-", "1"}]}], "]"}]], "Input",
 CellLabel->"In[383]:=",
 CellID->354624742,ExpressionUUID->"df58bb67-34d7-4b0a-ae20-3d3034890527"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "6", ",", "14", ",", "34", ",", "82", ",", "198", ",", "478", ",",
    "1154", ",", "2786", ",", "6726", ",", "16238", ",", "39202", ",", 
   "94642", ",", "228486", ",", "551614", ",", "1331714", ",", "3215042", ",",
    "7761798", ",", "18738638", ",", "45239074", ",", "109216786"}], 
  "}"}]], "Output",
 CellLabel->"Out[383]=",
 CellID->229632868,ExpressionUUID->"c01b9325-6497-40d3-988f-a42401cdad92"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "535f1a1f-ff5e-4fd1-ae28-224f859ff7c7"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->225973015,ExpressionUUID->"6f45ae32-8d1d-4b6f-91d2-30ad57ac8372"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["V", "n"], 
   RowBox[{"(", 
    RowBox[{"1", ",", 
     RowBox[{"-", "2"}]}], ")"}]}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "1444714a-d266-480f-9540-51ba29f0a30f"],
 " gives the Jacobsthal-Lucas numbers:"
}], "TechNoteMathCaption",
 CellID->597709743,ExpressionUUID->"299d3497-c448-425f-ae4d-27ef21071ec5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LucasNumberV2", "[", 
  RowBox[{
   RowBox[{"Range", "[", "21", "]"}], ",", "1", ",", 
   RowBox[{"-", "2"}]}], "]"}]], "Input",
 CellLabel->"In[384]:=",
 CellID->559137007,ExpressionUUID->"1da378d8-f1a4-495c-909f-94f97c138c73"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "5", ",", "7", ",", "17", ",", "31", ",", "65", ",", "127", ",", 
   "257", ",", "511", ",", "1025", ",", "2047", ",", "4097", ",", "8191", ",",
    "16385", ",", "32767", ",", "65537", ",", "131071", ",", "262145", ",", 
   "524287", ",", "1048577", ",", "2097151"}], "}"}]], "Output",
 CellLabel->"Out[384]=",
 CellID->350769182,ExpressionUUID->"625a3339-8cc6-4a3d-ab76-ccc991fe8e37"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "2b11b829-8158-4571-912c-30c82f479542"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->87474974,ExpressionUUID->"9977a560-b8fc-4002-8f54-361c61b49e18"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["V", "n"], 
   RowBox[{"(", 
    RowBox[{"3", ",", "2"}], ")"}]}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "81f9f372-d2db-44df-b1be-e39806cfb0f4"],
 " gives number of the form ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["2", "n"], "+", "1"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "fdd2ad17-c066-4142-91ee-4d8235da2537"],
 ", which includes the Fermat numbers:"
}], "TechNoteMathCaption",
 CellID->655288947,ExpressionUUID->"bae659a8-c5b3-46d9-9e0d-0e2aed973301"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LucasNumberV2", "[", 
  RowBox[{
   RowBox[{"Range", "[", "21", "]"}], ",", "3", ",", "2"}], "]"}]], "Input",
 CellLabel->"In[386]:=",
 CellID->68325774,ExpressionUUID->"5758b2bb-27f8-486d-b229-db56cae2b888"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "5", ",", "9", ",", "17", ",", "33", ",", "65", ",", "129", ",", 
   "257", ",", "513", ",", "1025", ",", "2049", ",", "4097", ",", "8193", ",",
    "16385", ",", "32769", ",", "65537", ",", "131073", ",", "262145", ",", 
   "524289", ",", "1048577", ",", "2097153"}], "}"}]], "Output",
 CellLabel->"Out[386]=",
 CellID->411603969,ExpressionUUID->"c7ee4db5-c947-4c08-910f-4fa78dbea082"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "27c25c54-d207-4347-80fe-fdd362e6fb01"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->380977308,ExpressionUUID->"d4c7db51-4321-45ef-8eb1-cb4d274232bf"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["V", "n"], 
   RowBox[{"(", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}]}], ")"}]}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "eb112537-f6f3-47d1-b116-e989529ff96f"],
 " gives the Lucas polynomials:"
}], "TechNoteMathCaption",
 CellID->206574541,ExpressionUUID->"7c75aea6-20cf-4d96-981d-e82876598f0a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"LucasNumberV2", "[", 
   RowBox[{
    RowBox[{"Range", "[", "7", "]"}], ",", "x", ",", 
    RowBox[{"-", "1"}]}], "]"}], "]"}]], "Input",
 CellLabel->"In[389]:=",
 CellID->571446576,ExpressionUUID->"bd59701c-0077-4452-8170-8fd2982646f2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"2", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{
    RowBox[{"3", " ", "x"}], "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"2", "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    SuperscriptBox["x", "4"]}], ",", 
   RowBox[{
    RowBox[{"5", " ", "x"}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["x", "3"]}], "+", 
    SuperscriptBox["x", "5"]}], ",", 
   RowBox[{"2", "+", 
    RowBox[{"9", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"6", " ", 
     SuperscriptBox["x", "4"]}], "+", 
    SuperscriptBox["x", "6"]}], ",", 
   RowBox[{
    RowBox[{"7", " ", "x"}], "+", 
    RowBox[{"14", " ", 
     SuperscriptBox["x", "3"]}], "+", 
    RowBox[{"7", " ", 
     SuperscriptBox["x", "5"]}], "+", 
    SuperscriptBox["x", "7"]}]}], "}"}]], "Output",
 CellLabel->"Out[389]=",
 CellID->579836633,ExpressionUUID->"1afb934d-ebb3-4d12-a4a2-69b6889633bf"]
}, Open  ]],

Cell["Let's compare this to LucasL:", "TechNoteMathCaption",
 CellID->849664802,ExpressionUUID->"397e0390-68a0-4509-bdf0-2ff48b03c862"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Expand", "[", 
   RowBox[{"LucasNumberV2", "[", 
    RowBox[{
     RowBox[{"Range", "[", "7", "]"}], ",", "x", ",", 
     RowBox[{"-", "1"}]}], "]"}], "]"}], "===", 
  RowBox[{"LucasL", "[", 
   RowBox[{
    RowBox[{"Range", "[", "7", "]"}], ",", "x"}], "]"}]}]], "Input",
 CellLabel->"In[395]:=",
 CellID->5746910,ExpressionUUID->"15328761-e03b-470b-bea3-0c18054f2c6c"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[395]=",
 CellID->145466617,ExpressionUUID->"836000f5-01df-4a70-9154-8ebd114f9b61"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "9767a7b9-9f82-4921-8180-0f571614ae81"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->64856443,ExpressionUUID->"c9244920-c2ae-4d3e-9fe6-2c3a07e364f6"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["V", "n"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", "x"}], ",", "1"}], ")"}]}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "a0af9fe9-0cb6-45cf-9276-16a3949d5f5d"],
 " gives Chebyshev polynomials of first kind multiplied by 2:"
}], "TechNoteMathCaption",
 CellID->200874845,ExpressionUUID->"5c8bcf58-2f7c-4ff7-876f-945b58039bfb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"LucasNumberV2", "[", 
   RowBox[{
    RowBox[{"Range", "[", "7", "]"}], ",", 
    RowBox[{"2", "x"}], ",", "1"}], "]"}], "]"}]], "Input",
 CellLabel->"In[396]:=",
 CellID->2790924,ExpressionUUID->"275b987d-3cbe-4efc-82e8-a02b9fcc1db4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"2", " ", "x"}], ",", 
   RowBox[{
    RowBox[{"-", "2"}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["x", "2"]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "6"}], " ", "x"}], "+", 
    RowBox[{"8", " ", 
     SuperscriptBox["x", "3"]}]}], ",", 
   RowBox[{"2", "-", 
    RowBox[{"16", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"16", " ", 
     SuperscriptBox["x", "4"]}]}], ",", 
   RowBox[{
    RowBox[{"10", " ", "x"}], "-", 
    RowBox[{"40", " ", 
     SuperscriptBox["x", "3"]}], "+", 
    RowBox[{"32", " ", 
     SuperscriptBox["x", "5"]}]}], ",", 
   RowBox[{
    RowBox[{"-", "2"}], "+", 
    RowBox[{"36", " ", 
     SuperscriptBox["x", "2"]}], "-", 
    RowBox[{"96", " ", 
     SuperscriptBox["x", "4"]}], "+", 
    RowBox[{"64", " ", 
     SuperscriptBox["x", "6"]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "14"}], " ", "x"}], "+", 
    RowBox[{"112", " ", 
     SuperscriptBox["x", "3"]}], "-", 
    RowBox[{"224", " ", 
     SuperscriptBox["x", "5"]}], "+", 
    RowBox[{"128", " ", 
     SuperscriptBox["x", "7"]}]}]}], "}"}]], "Output",
 CellLabel->"Out[396]=",
 CellID->749587632,ExpressionUUID->"830d6089-c213-4047-992b-df152cbbd119"]
}, Open  ]],

Cell["Test this statement:", "TechNoteMathCaption",
 CellID->193111019,ExpressionUUID->"e549e506-e7f2-4eb4-86d6-2568a21f3989"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Expand", "[", 
   RowBox[{"LucasNumberV2", "[", 
    RowBox[{
     RowBox[{"Range", "[", "7", "]"}], ",", 
     RowBox[{"2", "x"}], ",", "1"}], "]"}], "]"}], "===", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Expand", "[", 
      RowBox[{"2", "*", "#"}], "]"}], "&"}], "/@", 
    RowBox[{"ChebyshevT", "[", 
     RowBox[{
      RowBox[{"Range", "[", "7", "]"}], ",", "x"}], "]"}]}], ")"}]}]], "Input",
 CellLabel->"In[397]:=",
 CellID->257744413,ExpressionUUID->"7ce600dc-91c5-42de-a6a3-096ad6e31d19"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[397]=",
 CellID->599489833,ExpressionUUID->"767a9306-e04c-4ea4-8b02-9cc2fc52e8c1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "8891ddda-1621-4374-b744-befbe92b300f"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->506165783,ExpressionUUID->"4110419f-5dc7-4931-9994-9cea2c6b3d09"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["V", "n"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"x", "+", "1"}], ",", "x"}], ")"}]}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "6d048519-f1a4-4296-b62e-6424b6bdf137"],
 " gives ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["x", "n"], "+", "1"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "19badfaa-654e-45bc-a0c3-3a8338f26430"],
 ":"
}], "TechNoteMathCaption",
 CellID->230848754,ExpressionUUID->"d1728467-aa1e-456d-9d64-9d4cc336b306"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"LucasNumberV2", "[", 
   RowBox[{
    RowBox[{"Range", "[", "7", "]"}], ",", 
    RowBox[{"x", "+", "1"}], ",", "x"}], "]"}], "]"}]], "Input",
 CellLabel->"In[398]:=",
 CellID->4310976,ExpressionUUID->"192b318c-c5a0-4ece-955f-ad4ba72fe887"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "+", "x"}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox["x", "4"]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox["x", "5"]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox["x", "6"]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox["x", "7"]}]}], "}"}]], "Output",
 CellLabel->"Out[398]=",
 CellID->362774086,ExpressionUUID->"0c7a55ab-d034-4ac4-8574-2ba240958473"]
}, Open  ]],

Cell["Test this statement:", "TechNoteMathCaption",
 CellID->373578484,ExpressionUUID->"539abed6-0d82-4db2-948c-47cae4db9d5b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Expand", "[", 
   RowBox[{"LucasNumberV2", "[", 
    RowBox[{
     RowBox[{"Range", "[", "7", "]"}], ",", 
     RowBox[{"x", "+", "1"}], ",", "x"}], "]"}], "]"}], "===", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "n"], "+", "1"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "7"}], "}"}]}], "]"}]}]], "Input",
 CellLabel->"In[399]:=",
 CellID->194038522,ExpressionUUID->"df0e3b0f-5023-4ea7-afe1-47fcf51b32b4"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[399]=",
 CellID->154595223,ExpressionUUID->"36f2a83e-6c64-4299-b5a5-5f0fd4cdc4f1"]
}, Open  ]],

Cell["Evaluate the q-exponential.", "TechNoteMathCaption",
 CellID->554419,ExpressionUUID->"d7a05787-6f02-414a-9742-fadf8cb21e37"],

Cell["Evaluate numerically:", "TechNoteMathCaption",
 CellID->55753721,ExpressionUUID->"a1ede218-d1e2-4fab-822f-a4689f9da609"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QExponential", "[", 
  RowBox[{"3.4", ",", "1"}], "]"}]], "Input",
 CellLabel->"In[943]:=",
 CellID->14566,ExpressionUUID->"97527786-74ce-483b-aeae-79c170696a86"],

Cell[BoxData["29.96410004739701`"], "Output",
 CellLabel->"Out[943]=",
 CellID->18188826,ExpressionUUID->"0478556b-8d2d-4dbd-9907-c54164d93ab5"]
}, Open  ]],

Cell["Change q from 1 to 2.", "TechNoteMathCaption",
 CellID->563784370,ExpressionUUID->"1ffe97a1-014f-4393-a691-ef4e85d80ecd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QExponential", "[", 
  RowBox[{
   FractionBox["17", "5"], ",", "2"}], "]"}]], "Input",
 CellLabel->"In[952]:=",
 CellID->20592017,ExpressionUUID->"c226d48b-1655-40ac-895b-d55a7ff2c4e6"],

Cell[BoxData["10.59829409278693878204709467134680730861`15.954589770191003"], \
"Output",
 CellLabel->"Out[952]=",
 CellID->151593018,ExpressionUUID->"95450a68-7a0a-433d-af3e-6288400520b2"]
}, Open  ]],

Cell["Ask for 40 digits of precision.", "TechNoteMathCaption",
 CellID->237785666,ExpressionUUID->"2926dc8e-c7b0-406f-b2ef-9b3a046ae978"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QExponential", "[", 
  RowBox[{
   FractionBox["17", "5"], ",", "2", ",", "40"}], "]"}]], "Input",
 CellLabel->"In[953]:=",
 CellID->298472260,ExpressionUUID->"2530bc27-8969-4b41-afef-b483a4e70a43"],

Cell[BoxData["10.5982940927869387820470946713468073086211252051161675464583`\
40."], "Output",
 CellLabel->"Out[953]=",
 CellID->74152669,ExpressionUUID->"cd9e5393-820c-4613-8e21-bfcec2453b1d"]
}, Open  ]],

Cell["Evaluate the q-multinomial.", "TechNoteMathCaption",
 CellID->496593996,ExpressionUUID->"a16aed2f-37fa-4248-ba25-3c8378564892"],

Cell["Evaluate numerically:", "TechNoteMathCaption",
 CellID->489039817,ExpressionUUID->"25bca102-3ddb-4059-98e3-35c7aae25c7c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QMultinomial", "[", 
  RowBox[{"1", ",", "2", ",", "1", ",", "E"}], "]"}]], "Input",
 CellLabel->"In[954]:=",
 CellID->88658836,ExpressionUUID->"d3fcb365-ab54-4fbc-ac80-d853920a31e6"],

Cell[BoxData[
 FractionBox[
  RowBox[{"QGamma", "[", 
   RowBox[{"5", ",", "\[ExponentialE]"}], "]"}], 
  RowBox[{"1", "+", "\[ExponentialE]"}]]], "Output",
 CellLabel->"Out[954]=",
 CellID->66741005,ExpressionUUID->"8a1968aa-ddb9-4eab-82a9-4b0f6bf50f91"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"QMultinomial", "[", 
   RowBox[{"1", ",", "2", ",", "1", ",", "E"}], "]"}], "]"}]], "Input",
 CellLabel->"In[955]:=",
 CellID->471752441,ExpressionUUID->"2b68496a-c06d-45c2-9723-4c9454ca991d"],

Cell[BoxData["346.469801892138`"], "Output",
 CellLabel->"Out[955]=",
 CellID->374027243,ExpressionUUID->"2bb09ddc-01cd-4317-91ba-1578df6a351a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"QMultinomial", "[", 
    RowBox[{"1", ",", "2", ",", "1", ",", "E"}], "]"}], ",", "40"}], 
  "]"}]], "Input",
 CellLabel->"In[956]:=",
 CellID->796052010,ExpressionUUID->"793f838d-bed0-425b-a5d7-d426729ca4e0"],

Cell[BoxData["346.4698018921381259525335487344495385550883060897418205888714`\
40."], "Output",
 CellLabel->"Out[956]=",
 CellID->199263104,ExpressionUUID->"1c051f22-4445-47b6-9c34-29f9148dc836"]
}, Open  ]],

Cell["\<\
Find the period of the decimal representation of a rational number.\
\>", "TechNoteMathCaption",
 CellID->143975390,ExpressionUUID->"32dfee19-2e50-4c9c-8391-d3d95a061bdd"],

Cell[TextData[{
 "Find the period of the repetend of the repeating decimal corresponding to  ",
 Cell[BoxData[
  FractionBox["1", "983"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "58449394-b174-48c5-a0c8-4c5e1eab0ffb"],
 "."
}], "TechNoteMathCaption",
 CellID->27787895,ExpressionUUID->"a789702a-61b4-4bb8-81e3-852e2f8f97d6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", 
  FractionBox["1", "983"], "]"}]], "Input",
 CellLabel->"In[957]:=",
 CellID->236189147,ExpressionUUID->"cb755224-414c-425a-9f6c-247ecbfedcd5"],

Cell[BoxData["982"], "Output",
 CellLabel->"Out[957]=",
 CellID->557292175,ExpressionUUID->"1c882708-b36b-4dba-a0a8-1ab20f0fbad9"]
}, Open  ]],

Cell["3/2 has a period of 0.", "TechNoteMathCaption",
 CellID->35640176,ExpressionUUID->"fc810b30-7b27-4ff3-956c-a06f30673832"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  FractionBox["3", "2"], "]"}]], "Input",
 CellLabel->"In[958]:=",
 CellID->761312723,ExpressionUUID->"6a6e4854-8819-4f33-aa0c-e02cc6e28a36"],

Cell[BoxData["1.5`"], "Output",
 CellLabel->"Out[958]=",
 CellID->290448543,ExpressionUUID->"6fe740a5-ee25-4fdc-9f9b-2741f130453f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", 
  FractionBox["3", "2"], "]"}]], "Input",
 CellLabel->"In[959]:=",
 CellID->60940240,ExpressionUUID->"9c003edc-bebd-4a8b-9035-fb3cd9bf1f76"],

Cell[BoxData["0"], "Output",
 CellLabel->"Out[959]=",
 CellID->200714134,ExpressionUUID->"907cd726-df94-4c9f-b6b3-fdf2794e4df8"]
}, Open  ]],

Cell["\<\
A unit fraction contains 1 in the numerator. The decimal representation of \
the unit fractions with denominators 2 to 10 are given.\
\>", "TechNoteMathCaption",
 CellID->459322947,ExpressionUUID->"85ef1705-8de8-4b82-b654-9de6e4db892f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<fraction\>\"", "->", 
        FractionBox["1", "#"]}], ",", 
       RowBox[{"\"\<decimal\>\"", "->", 
        RowBox[{"N", "[", 
         FractionBox["1", "#"], "]"}]}]}], "|>"}], "&"}], "]"}], "[", 
   RowBox[{"Range", "[", 
    RowBox[{"2", ",", "10", ",", "1"}], "]"}], "]"}], "]"}]], "Input",
 CellLabel->"In[38]:=",
 CellID->132252402,ExpressionUUID->"560f8828-0669-49b0-9558-6741a4dd6088"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      2 -> <|"fraction" -> Rational[1, 2], "decimal" -> 0.5|>, 
       3 -> <|"fraction" -> Rational[1, 3], "decimal" -> 0.3333333333333333|>,
        4 -> <|"fraction" -> Rational[1, 4], "decimal" -> 0.25|>, 
       5 -> <|"fraction" -> Rational[1, 5], "decimal" -> 0.2|>, 
       6 -> <|"fraction" -> Rational[1, 6], "decimal" -> 
         0.16666666666666666`|>, 
       7 -> <|"fraction" -> Rational[1, 7], "decimal" -> 
         0.14285714285714285`|>, 
       8 -> <|"fraction" -> Rational[1, 8], "decimal" -> 0.125|>, 
       9 -> <|"fraction" -> Rational[1, 9], "decimal" -> 0.1111111111111111|>,
        10 -> <|"fraction" -> Rational[1, 10], "decimal" -> 0.1|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[10]} -> 1, {All, "fraction"} -> 
        1, {All, "decimal"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "fraction" -> TypeSystem`PackageScope`AtomShape[60], "decimal" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 2, {All}]]], 9, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"fraction", "decimal"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 9], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[10]} -> 1, {All, "fraction"} -> 
        1, {All, "decimal"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "fraction" -> TypeSystem`PackageScope`AtomShape[60], "decimal" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 2, {All}]]], 9, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"fraction", "decimal"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 9], "Path" -> {}, "DisplayedRowCount" -> 9, 
     "DisplayedColumnCount" -> 2, "DataRowCount" -> 9, "DataColumnCount" -> 2,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["fraction", 
                  Style[
                  "fraction", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "fraction"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "fraction"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["decimal", 
                  Style[
                  "decimal", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "decimal"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "decimal"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1/2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["fraction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["decimal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1/3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["fraction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.333333"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["decimal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1/4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["fraction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["decimal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1/5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["fraction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["decimal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1/6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["fraction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.166667"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["decimal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1/7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["fraction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.142857"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["decimal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1/8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["fraction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.125"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["decimal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1/9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["fraction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.111111"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["decimal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1/10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["fraction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["decimal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{179., {140.8544921875, 146.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{179., {140.8544921875, 146.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[38]=",
 CellID->504232840,ExpressionUUID->"7ab5285a-9352-459c-be9d-f43ec23141bb"]
}, Open  ]],

Cell[TextData[{
 "We can indicate the part that is repeating with a vinculum like this. ",
 Cell[BoxData[
  RowBox[{"0.", 
   OverscriptBox["142857", "_"]}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "1daf619e-61d9-4f7c-98f2-22c801dd9ee2"]
}], "TechNoteMathCaption",
 CellID->142153006,ExpressionUUID->"4822f68f-bdbd-49ca-aeb1-0f284bddc6f5"],

Cell[TextData[{
 "Where ",
 Cell[BoxData[
  RowBox[{"0.1", 
   OverscriptBox["6", "_"]}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "aa656890-7222-4e13-98d1-696a165cdcb5"],
 " means ",
 Cell[BoxData[
  RowBox[{"0.1666666666666666666666666666666666666666", "\[Ellipsis]"}]], 
  "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "271bee76-bf15-4c2a-abc8-95f0bec3808f"],
 ", and has a 1 digit recurring cycle. It can be seen that ",
 Cell[BoxData[
  FractionBox["1", "7"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "ce6d03d9-d7df-4aa1-9626-1aa31dae5fa5"],
 " has a 6-digit recurring cycle."
}], "TechNoteMathCaption",
 CellID->468172920,ExpressionUUID->"91d5e03c-dd1e-4838-8496-588fede3251c"],

Cell[TextData[{
 "Find the value of ",
 Cell[BoxData[
  RowBox[{"d", "<", "1000"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "9ee89654-a82f-483b-afc0-b94812224b1a"],
 " for which ",
 Cell[BoxData[
  FractionBox["1", "d"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "2181a98a-f64d-4722-a37d-14325417215b"],
 " contains the largest recurring cycle in its decimal fraction part."
}], "TechNoteMathCaption",
 CellID->75005970,ExpressionUUID->"d5849d2a-302d-4f44-8d88-0a8920d1b70d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EchoTiming", "[", 
  RowBox[{
   RowBox[{"MaximalBy", "[", 
    RowBox[{
     RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", 
      FractionBox["1", "#"], "]"}], "&"}], "]"}], "[", 
   RowBox[{"Cases", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"#", "<", "1000"}], "&"}], "]"}], "[", 
      RowBox[{"Range", "[", "1000", "]"}], "]"}], ",", 
     RowBox[{"Except", "[", "1", "]"}]}], 
    RowBox[{"(*", 
     RowBox[{"because", " ", 
      RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", "1", "]"}], " ", 
      "just", " ", "returns", " ", 
      RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", "1", "]"}]}], 
     "*)"}], "]"}], "]"}], "]"}]], "Input",
 CellLabel->"In[45]:=",
 CellID->696606258,ExpressionUUID->"eb3efec0-0d60-4152-a744-c70f2a5b7f57"],

Cell[BoxData["0.0232995`"], "EchoTiming",
 CellID->114796685,ExpressionUUID->"1c686108-4c1d-4d25-8ae9-0e950cf0c285"],

Cell[BoxData[
 RowBox[{"{", "983", "}"}]], "Output",
 CellLabel->"Out[45]=",
 CellID->36436604,ExpressionUUID->"3c616d5a-762f-44c0-96ad-d23a12d5654a"]
}, Open  ]],

Cell["We can use Identity@@ to get just the number.", "TechNoteMathCaption",
 CellID->595536278,ExpressionUUID->"dfa7b79c-212e-4724-b232-3bc53429e538"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EchoTiming", "[", 
  RowBox[{"Identity", "@@", 
   RowBox[{
    RowBox[{"MaximalBy", "[", 
     RowBox[{
      RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", 
       FractionBox["1", "#"], "]"}], "&"}], "]"}], "[", 
    RowBox[{"Cases", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"#", "<", "1000"}], "&"}], "]"}], "[", 
       RowBox[{"Range", "[", "1000", "]"}], "]"}], ",", 
      RowBox[{"Except", "[", "1", "]"}]}], 
     RowBox[{"(*", 
      RowBox[{"because", " ", 
       RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", "1", "]"}], " ", 
       "just", " ", "returns", " ", 
       RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", "1", "]"}]}], 
      "*)"}], "]"}], "]"}]}], "]"}]], "Input",
 CellLabel->"In[46]:=",
 CellID->135456001,ExpressionUUID->"ca927cb3-4b81-4200-9c31-5f4c1aa1ae0b"],

Cell[BoxData["0.023724`"], "EchoTiming",
 CellID->47425443,ExpressionUUID->"36a881af-1c68-4087-a8eb-7e68bd359ffb"],

Cell[BoxData["983"], "Output",
 CellLabel->"Out[46]=",
 CellID->3416495,ExpressionUUID->"e2f36e7c-e60b-481e-89ec-49ac22d66ff5"]
}, Open  ]],

Cell["We can use EchoPerformance to see how much memory we used.", \
"TechNoteMathCaption",
 CellID->197268136,ExpressionUUID->"796a24a3-e417-4b3c-98fe-717748591c11"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<EchoPerformance\>\"", "]"}], "[", 
  RowBox[{"Identity", "@@", 
   RowBox[{
    RowBox[{"MaximalBy", "[", 
     RowBox[{
      RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", 
       FractionBox["1", "#"], "]"}], "&"}], "]"}], "[", 
    RowBox[{"Cases", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"#", "<", "1000"}], "&"}], "]"}], "[", 
       RowBox[{"Range", "[", "1000", "]"}], "]"}], ",", 
      RowBox[{"Except", "[", "1", "]"}]}], 
     RowBox[{"(*", 
      RowBox[{"because", " ", 
       RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", "1", "]"}], " ", 
       "just", " ", "returns", " ", 
       RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", "1", "]"}]}], 
      "*)"}], "]"}], "]"}]}], "]"}]], "Input",
 CellLabel->"In[47]:=",
 CellID->325931600,ExpressionUUID->"5a891e7c-bfe1-472b-9ae0-0c9444018952"],

Cell[BoxData[
 RowBox[{
  TagBox["Apply",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    StyleBox[
     TemplateBox[{"0.0227526`", "\" s\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]], ",", 
    StyleBox[
     TemplateBox[{"91480", "\" B\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]]}], "}"}]}]], "Echo",
 CellID->211601392,ExpressionUUID->"510df0bd-da77-4d67-a26a-89809ac41837"],

Cell[BoxData["983"], "Output",
 CellLabel->"Out[47]=",
 CellID->24671701,ExpressionUUID->"0fa85a32-acfd-4570-9d34-176580a3411b"]
}, Open  ]],

Cell[TextData[{
 "This is how I solved ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Project Euler Problem 26 Reciprocal Cycles"]], 
    "https://projecteuler.net/problem=26"},
   "WebLink",
   BaseStyle->{"TechNoteMathCaption"}]],ExpressionUUID->
  "6ca60ce2-972b-4736-9c6f-ffad3788db57"],
 "."
}], "TechNoteMathCaption",
 CellID->109955765,ExpressionUUID->"190cab5f-dcb7-4b0d-978d-730b429f839c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "8a1d47fb-beaf-4c61-878a-05ce896e477a"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->65014155,ExpressionUUID->"3db4bb68-5941-4591-9955-77182d8b09f2"],

Cell[TextData[{
 "Make a sequence of the running maximum in terms of the number with the \
maximum repeating decimal period for ",
 Cell[BoxData[
  FractionBox["1", "n"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "ced6ba3e-e686-408e-b955-c213808b36e9"],
 " for the first 54 numbers."
}], "TechNoteMathCaption",
 CellID->213110306,ExpressionUUID->"e4d643d2-0839-4e74-9736-06d85f247202"],

Cell[BoxData[
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", 
    RowBox[{"Array", "[", 
     RowBox[{
      RowBox[{
       FractionBox["1", "#"], "&"}], ",", "54", ",", "2"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[36]:=",
 CellID->149658206,ExpressionUUID->"46cb4607-e799-4b0d-a013-56acf5b4beec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"runningMaximum", "=", 
  RowBox[{"Rest", "@", 
   RowBox[{"FoldList", "[", 
    RowBox[{"Max", ",", 
     RowBox[{"First", "[", "list", "]"}], ",", 
     RowBox[{"Rest", "[", "list", "]"}]}], "]"}]}]}]], "Input",
 CellLabel->"In[37]:=",
 CellID->174838792,ExpressionUUID->"ca32e6e0-fb11-4b2c-b513-e05eeae7d908"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "1", ",", "1", ",", "6", ",", "6", ",", "6", ",", "6", 
   ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "16", ",",
    "16", ",", "18", ",", "18", ",", "18", ",", "18", ",", "22", ",", "22", 
   ",", "22", ",", "22", ",", "22", ",", "22", ",", "28", ",", "28", ",", 
   "28", ",", "28", ",", "28", ",", "28", ",", "28", ",", "28", ",", "28", 
   ",", "28", ",", "28", ",", "28", ",", "28", ",", "28", ",", "28", ",", 
   "28", ",", "28", ",", "28", ",", "46", ",", "46", ",", "46", ",", "46", 
   ",", "46", ",", "46", ",", "46", ",", "46", ",", "46"}], "}"}]], "Output",
 CellLabel->"Out[37]=",
 CellID->6197371,ExpressionUUID->"7cd37ba9-ed24-4047-aaf7-ee0fe9fb65db"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Rest", "@", 
    RowBox[{"FoldList", "[", 
     RowBox[{"Max", ",", 
      RowBox[{"First", "[", "list", "]"}], ",", 
      RowBox[{"Rest", "[", "list", "]"}]}], "]"}]}], ",", 
   RowBox[{"ImageSize", "->", "Full"}]}], "]"}]], "Input",
 CellLabel->"In[71]:=",
 CellID->758948014,ExpressionUUID->"95e69e44-66e7-4bf7-bc38-6900064555e3"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[2], 
         LineBox[CompressedData["
1:eJx1yTkKAlEQRdGHkaGBgYGBioiINE7trN3OQ+gSBGO30Et2CSqWyL9YHz6X
U696vV9uOUnx67/7eY8krNLQebgAF80lp2W4AtfgOtyAm3ALbsORteO0a+05
7cMDOLYOnY7gMTyBp/DMOne6gJdwAqehM1gr7LDW2GFtsMPaYoe1ww5rj/3r
w/9mvB+xwzphh3XG/vMTDq07nw==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
          Annotation[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              Rational[1, 60]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1:eJx1yTkKAlEQRdGHkaGBgYGBioiINE7trN3OQ+gSBGO30Et2CSqWyL9YHz6X
U696vV9uOUnx67/7eY8krNLQebgAF80lp2W4AtfgOtyAm3ALbsORteO0a+05
7cMDOLYOnY7gMTyBp/DMOne6gJdwAqehM1gr7LDW2GFtsMPaYoe1ww5rj/3r
w/9mvB+xwzphh3XG/vMTDq07nw==
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0., 53.}, {0, 46.}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0., 0}, "ImageSize" -> {680, 680/GoldenRatio}, 
           "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              PointSize[
               Rational[1, 60]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0., 53.}, {0, 46.}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0., 0}, "ImageSize" -> {680, 680/GoldenRatio}, 
          "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             PointSize[
              Rational[1, 60]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListLinePlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 60]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJx1yTkKAlEQRdGHkaGBgYGBioiINE7trN3OQ+gSBGO30Et2CSqWyL9YHz6X
U696vV9uOUnx67/7eY8krNLQebgAF80lp2W4AtfgOtyAm3ALbsORteO0a+05
7cMDOLYOnY7gMTyBp/DMOne6gJdwAqehM1gr7LDW2GFtsMPaYoe1ww5rj/3r
w/9mvB+xwzphh3XG/vMTDq07nw==
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0., 53.}, {0, 46.}}, 
        "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0., 0}, 
        "ImageSize" -> {680, 680/GoldenRatio}, "Axes" -> {True, True}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[
            Rational[1, 60]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListLinePlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Full,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 53.}, {0, 46.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[71]=",
 CellID->52008308,ExpressionUUID->"86c4c849-7778-4e86-ab94-fbae93ada2eb"]
}, Open  ]],

Cell["Make a list for the first 1000 numbers.", "TechNoteMathCaption",
 CellID->123945420,ExpressionUUID->"fe1eb189-4714-4b05-88df-137b19a3af94"],

Cell[BoxData[
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", 
    RowBox[{"Array", "[", 
     RowBox[{
      RowBox[{
       FractionBox["1", "#"], "&"}], ",", "1000", ",", "2"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[60]:=",
 CellID->121949185,ExpressionUUID->"28876f7c-fb90-41f5-92c7-842a30f670fd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"runningMaximum", "=", 
   RowBox[{"Rest", "@", 
    RowBox[{"FoldList", "[", 
     RowBox[{"Max", ",", 
      RowBox[{"First", "[", "list", "]"}], ",", 
      RowBox[{"Rest", "[", "list", "]"}]}], "]"}]}]}], ";"}]], "Input",
 CellLabel->"In[65]:=",
 CellID->112015657,ExpressionUUID->"dcde7698-ae49-41ff-aee1-d31846a2a7af"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Rest", "@", 
    RowBox[{"FoldList", "[", 
     RowBox[{"Max", ",", 
      RowBox[{"First", "[", "list", "]"}], ",", 
      RowBox[{"Rest", "[", "list", "]"}]}], "]"}]}], ",", 
   RowBox[{"ImageSize", "->", "Full"}]}], "]"}]], "Input",
 CellLabel->"In[68]:=",
 CellID->397875431,ExpressionUUID->"16e6ca4f-f99e-4b14-8566-c369a53b95e3"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[2], 
         LineBox[CompressedData["
1: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
Xw==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
          Annotation[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1:eJx10DeMxFoVgOEraKZ0QTEFhUEIjRBCJg/xmTxk80hDNnmIz4845Esessst
XW7pcstbbulyS3ds6XJLhPAK+dN6ml+fj84c2S/5ynPPfv0FIYR/vzCE//Z/
v+mZZUO59AZn+EWztyt9Mc7xS/HL8MvxDr8CvxK/am6x0lfPfc1KX4tfh18/
9w0rfSPe4zfhN+O3zH3rSt+G346fweXSEYd3MMfhncxxeBdzHN7NHIf3MMfh
vcwf/b6nG31+YI7D+5nj8AHmOHyQOQ4fYv7oDz/d+OiPPN3o848yx6FausQR
Jxw+xj6OOOHwLPs44oTDx9nHESccPsE+jjjh8En2ccQJh0+xjyNOOHyafRxx
evTx6ZY44uTeZ9jHESccPss+jjg9+nNPt8QRp0d//umWOOLk3hfYxxEnHL7I
Po444fAl9nHECYd66Xx2udIaR9zhhEccvrx0jktc44g7nPCIw1e4j0tcz44r
7XDCIw5fXTrHJa5xxB1OeMTha9zHJa5xxN3stNIRh68vneMS1zjiDic84vAN
7s8uV1rPjSvtcMIjDt9cOsclrnHEHU54nB1OTzfHJa5xxB1OePTut7iPS1zj
iDuc8IjDt7mPS1zjiDuc8IjDd7iPS1zjiLvZaaUjDt9dOsclrmfHlXY44XFu
+N7TzXGJaxxxhxMevft97uMS1zjiDic84vAc93GJaxxxhxMeH9083QznuMAl
rubWK21wxC3ucD83rXTAI55weH7pDOe4wCWucI0bHHGLO9zjhAc84un55XuH
Hyyd4RwXuMQVrnGDI25xh3uc8IBHPOHww6UznOMCl7jCNW5mx5W2uMM9TnjA
I55w+NHSGc5xgUtc4Ro3OOIWd7jHCQ94xNPs8OOnm+EcF7jEFa5xgyNucYd7
nPCARzz53j9ZOsM5LnCJK1zjZvbjd4m4xR3uccLD7HGlEw4/XTrDOS5wiStc
4wZH3M7uVtrjhIfH/1vphMN56QznuJhdrrTCNW5wxC3ucI8THvCIJxx+tnSG
c1zgEle4xg2OuMUd7nHCAx7xhMPPl85m5ystcIkrXOMGR9ziDvc44QGPeJob
fvF0M5zjApe4wjVucMQt7nCPEx7wiCff+5dLZzjHBS5xhWvc4Ihb3OF+dlrp
gEc84fCrpTOc4wKXuMI1bnDELe5wjxMe8IgnHH69dIZzXOASV7PrlTY44nZu
t9IeJzzgEU84/GbpbHa+0gKXuJpbr7TBEbe4w/3ctNIBj3jCIS69wRne4hzv
cIH3uMQHXOEjrvEJN/iMI77gFl/hDl/jHt/ghG/xgO9mjyu9xxN+wOG3S29w
hrc4xztc4D0u8QFX+IhrfMINPuOIL7jFV7jD17jHNzjh29nDSu/wiO/xhB/m
ht893Q3O8BbneIcLvMclPuAKH3GNT7jB57lxpRfc4ivc4Wvc4xuc8C0e8B0e
8T2e8AMOv196gzO8xTne4QLvcYkPs6uVHnGNT7jBZxzxBbf4Cnf4Gvf4Bid8
iwd8h0d8jyf8gMMflt7gDG9xjnezi5XucYkPuMJHXOMTbvAZR3yZ2670Cnf4
Gvf4Bid8iwd8h0d8jyf8gMMfl97gDG9xjne4wHtc4gOu8BHX+IQbfMYRX3CL
r3CHr3GPb3DCt3jAd7PHld7jCT/g8KelNzjD29n5Sne4wHtc4gOu8BHX+IQb
fMYRX3CLr3CHr+f2K73BCd/iAd/hEd/jCT/g8OelNzjDW5zj3exipXtc4gOu
8BHX+IQbfMYRX3CLr3CHr3GPb3DCt3jAd3jE93jCDzhclt7gDG9xjne4wHtc
4gOu8BHX+IQbfMYRX3CLr3CHr3GPb3DCt3jAd3jE93jCDzj8ZekNzvAW53iH
C7zHJT7MrlZ6xDU+4QafccQX3OKrud1Kr+f2K73BCd/iAd/hEd/jCT/g8Nel
NzjDW5zjHS7wHpf4gCt8xDU+4QafccQX3OIr3OFr3OOb2Wmlt3jAd3jE93On
lT7g8LelNzjDW5zjHS7wHpf4gCt8xDU+4QafccQX3OIr3OHr2f1Kb3DCt3jA
d3jE93jCDzj8fekNzvAW53iHC7zHJT7gCh9xjU+4wWcc8QW3+Ap3+Br3+AYn
fIsHfIdHfI8n/IDDP5be4AxvcY53uMD72eVKD7jCx7n1Sk+4wWcc8QW3+Ap3
+Br3+GZuWuktHvAdHvE9nvADDv9ceoMzvMU53uEC73GJD7OrlR5xjU+4wee5
caUX3OIr3OHruf1Kb3DCt3jAd3jE93jCDzj8a+kNzvAW53iHC7z/v/8Dl0PT
Xw==
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0., 999.}, {0, 982.}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0., 0}, "ImageSize" -> {680, 680/GoldenRatio}, 
           "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              PointSize[
               Rational[1, 90]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0., 999.}, {0, 982.}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0., 0}, "ImageSize" -> {680, 680/GoldenRatio}, 
          "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListLinePlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 90]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
Xw==
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0., 999.}, {0, 982.}}, 
        "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0., 0}, 
        "ImageSize" -> {680, 680/GoldenRatio}, "Axes" -> {True, True}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[
            Rational[1, 90]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListLinePlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Full,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 999.}, {0, 982.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[68]=",
 CellID->797935073,ExpressionUUID->"98dc5fd5-e3f6-42a2-9b84-6948620a4cd2"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, "RelatedGuide.png"]],
     ImageSizeCache->{50., {27., 33.}}], GridBox[{
      {
       StyleBox[
        RowBox[{"Related", " ", "Guides"}], "TutorialMoreAboutSection"]},
      {
       RowBox[{
       "\[FilledVerySmallSquare]", Cell[TextData[ButtonBox["Combinatorics",
         BaseStyle->"Link",
         ButtonData->
          "paclet:PeterBurbery/Combinatorics/guide/Combinatorics"]], 
         "TutorialMoreAbout",ExpressionUUID->
         "e9ca2037-ef5e-4655-9f9b-1a8ce38d4e44"]}]},
      {
       RowBox[{
       "\[FilledVerySmallSquare]", Cell[TextData[ButtonBox[
        "Functions I Understand in combinatorics",
         BaseStyle->"Link",
         ButtonData->
          "paclet:PeterBurbery/Combinatorics/guide/\
FunctionsIunderstandincombinatorics"]], "TutorialMoreAbout",ExpressionUUID->
         "30690779-ef18-4c4d-b9a2-4c115a23cab0"]}]}
     }]}
  }]], "TutorialMoreAboutSection",ExpressionUUID->"6fac913d-95bf-4700-bac9-\
85b74e97a0ba"],

Cell[BoxData[""], "Input",ExpressionUUID->"b32072a2-aa97-4a7e-9231-721ceadd7dab"]
}, Open  ]]
}, Open  ]],

Cell[" ", "FooterCell",ExpressionUUID->"688b66c7-1a34-4d87-b300-c0fa6dd7d09f"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{900, 604.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"Combinatorics",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "", "LinkTrails" -> "", 
  "ExampleCounter" -> 1, 
  "Openers" -> {
   "PrimaryExamplesSection" -> Open, "ExampleSection" -> {"0" -> Open}}, 
  "NewStyles" -> True, "CitationPopupData" -> {$Failed, ""}, "ShowCitation" -> 
  False, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2023, 8, 3, 20, 39, 27.9026641}", 
    "history" -> {"XX", "", "", ""}, "context" -> 
    "PeterBurbery`Combinatorics`", "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Peter Burbery/ Combinatorics Tech Note", "language" -> "en", "paclet" -> 
    "PeterBurbery/Combinatorics", "status" -> "None", "summary" -> 
    "This paclet is for the study of combinatorics. I am a combinatorialist. \
That means I study combinatorics. The functions defined in the \
PeterBurbery`Combinatorics` context provide support for finding solutions to \
combinatorics-related problems. x=0", "synonyms" -> {}, "tabletags" -> 
    DocumentationBuild`Make`Private`tabletaggingrules$265889, "title" -> 
    "Combinatorics", "titlemodifier" -> "", "metadescription" -> "", 
    "windowtitle" -> "Combinatorics", "type" -> "Tech Note", "uri" -> 
    "PeterBurbery/Combinatorics/tutorial/Combinatorics"}},
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (June 3, 2023)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> Notebook], 
   Cell[
    StyleData["Output"], CellContext -> Notebook], 
   Cell[
    StyleData["TutorialMoreAboutSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["RelatedTutorialsSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["TutorialRelatedLinksSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}]}, Visible -> False, 
  FrontEndVersion -> "13.3 for Microsoft Windows (64-bit) (June 3, 2023)", 
  StyleDefinitions -> "Default.nb"],
ExpressionUUID->"f33dab13-eff9-419b-9004-4f5de6c3064a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "RasterizedOutput"->{
  Cell[457245, 9311, 5122, 90, 51, "Output",ExpressionUUID->"3c2d6ccb-9608-4041-a5cd-6a1b9a3dc567",
   CellTags->"RasterizedOutput",
   CellID->254652224],
  Cell[488167, 10097, 165324, 2716, 242, "Output",ExpressionUUID->"4894fc0b-6435-440e-a736-fe460106dd29",
   CellTags->"RasterizedOutput",
   CellID->489329554]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"RasterizedOutput", 1252066, 26628}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[585, 21, 3546, 82, 56, "AnchorBarGrid",ExpressionUUID->"469ec1b7-7342-4fc0-9a7a-f8a131d04d0a",
 CellID->1],
Cell[CellGroupData[{
Cell[4156, 107, 112, 1, 68, "TechNoteTitle",ExpressionUUID->"29863ea0-08dc-46b8-b497-cb6f5f528f0c",
 CellID->28422271],
Cell[4271, 110, 4455, 100, 114, "TechNoteJumpBox",ExpressionUUID->"13159a33-f3b1-421a-ac79-2ed8c3ebbe3d"],
Cell[8729, 212, 214, 4, 36, "TechNoteText",ExpressionUUID->"c9cda3f0-8f4e-4867-9c22-5cb081f88c20",
 CellID->106321115],
Cell[8946, 218, 386, 8, 60, "TechNoteText",ExpressionUUID->"2768152e-beee-4843-9be6-e009958bdc11",
 CellID->345096676],
Cell[9335, 228, 218, 4, 42, "Input",ExpressionUUID->"e2eeb9fd-67f8-4057-a237-75c17f9df3c9",
 InitializationCell->True,
 CellID->13366579],
Cell[CellGroupData[{
Cell[9578, 236, 108, 1, 80, "TechNoteSection",ExpressionUUID->"94baa558-d014-4759-9107-28d629b3dc9c",
 CellID->12394907],
Cell[9689, 239, 3209, 88, 169, "DefinitionBox",ExpressionUUID->"5cf8197e-0767-4bab-b6e7-417fa46727b6",
 CellID->124942403],
Cell[12901, 329, 160, 2, 31, "TechNoteCaption",ExpressionUUID->"4bfbbaaf-1b42-48b6-a4c3-a5a305a58f86",
 CellID->520428306],
Cell[13064, 333, 143, 1, 70, "TechNoteMathCaption",ExpressionUUID->"f43506a1-7771-4158-a9c0-54ec169572db",
 CellID->31903801],
Cell[CellGroupData[{
Cell[13232, 338, 281, 6, 70, "Input",ExpressionUUID->"7598acd3-6389-4c45-952d-4464965c6e07",
 CellID->2966739],
Cell[13516, 346, 223, 5, 70, "Echo",ExpressionUUID->"f066f4bb-3bf8-434a-9e49-a31946bcb20a",
 CellID->829559052],
Cell[13742, 353, 129, 2, 35, "Output",ExpressionUUID->"917f2ec9-b63e-4e49-b26d-a2b29b07ae42",
 CellID->9137373]
}, Open  ]],
Cell[13886, 358, 126, 1, 70, "TechNoteMathCaption",ExpressionUUID->"04b3ff9b-2b0f-4761-a60b-8aed1ef39046",
 CellID->591549556],
Cell[CellGroupData[{
Cell[14037, 363, 195, 4, 70, "Input",ExpressionUUID->"d783cff5-3a8f-4ff8-a24b-8cbc5953d7ae",
 CellID->281752241],
Cell[14235, 369, 248, 6, 35, "Output",ExpressionUUID->"75324d47-0bb8-4560-a357-e84a5be0cfe1",
 CellID->69714785]
}, Open  ]],
Cell[14498, 378, 335, 5, 70, "TechNoteMathCaption",ExpressionUUID->"f2ad7b3e-b352-44eb-93a1-3b887280e5a3",
 CellID->114128779],
Cell[CellGroupData[{
Cell[14858, 387, 654, 17, 70, "Input",ExpressionUUID->"157110f4-2bfa-40c5-9452-4bedaadba74c",
 CellID->123225409],
Cell[15515, 406, 259, 6, 35, "Output",ExpressionUUID->"dfc393ca-515e-4aa7-a026-227ca82b12ac",
 CellID->565924694]
}, Open  ]],
Cell[15789, 415, 178, 3, 70, "TechNoteMathCaption",ExpressionUUID->"f7523c82-c609-4bd7-ac6a-101682c7d785",
 CellID->198474650],
Cell[CellGroupData[{
Cell[15992, 422, 690, 18, 70, "Input",ExpressionUUID->"f6ee380a-4739-4721-a9c7-73721e6057cf",
 CellID->96415675],
Cell[16685, 442, 258, 6, 35, "Output",ExpressionUUID->"2d250a20-2f3b-4743-912c-9184cd3d8621",
 CellID->187311040]
}, Open  ]],
Cell[16958, 451, 132, 1, 70, "TechNoteMathCaption",ExpressionUUID->"17bb4736-5c24-4017-850c-e27538d06e14",
 CellID->460961065],
Cell[CellGroupData[{
Cell[17115, 456, 744, 19, 70, "Input",ExpressionUUID->"a52ff0eb-569f-4664-8c55-c62fa39b960a",
 CellID->348169710],
Cell[17862, 477, 134, 2, 35, "Output",ExpressionUUID->"36c2d559-21c4-4959-9b9a-f77a2523a960",
 CellID->12882949]
}, Open  ]],
Cell[18011, 482, 128, 1, 70, "TechNoteMathCaption",ExpressionUUID->"bcb88308-d60b-448d-85d9-7cb5da93ed7b",
 CellID->215938530],
Cell[18142, 485, 128, 1, 70, "TechNoteMathCaption",ExpressionUUID->"2353ef8d-02c7-40d7-813d-2f1ec64d119b",
 CellID->142381604],
Cell[CellGroupData[{
Cell[18295, 490, 220, 5, 70, "Input",ExpressionUUID->"50a8906b-1d34-4e2b-a456-bb398b05870c",
 CellID->347150823],
Cell[18518, 497, 128, 2, 35, "Output",ExpressionUUID->"af55f9e2-6bed-4d19-95da-a7e33b9c2c07",
 CellID->160256386]
}, Open  ]],
Cell[18661, 502, 120, 1, 70, "TechNoteMathCaption",ExpressionUUID->"aa13f796-6084-4be4-b68f-69ee4bd51d4d",
 CellID->9730894],
Cell[CellGroupData[{
Cell[18806, 507, 191, 4, 70, "Input",ExpressionUUID->"cd861de1-c55b-4f65-b868-a785400a8b7b",
 CellID->172885937],
Cell[19000, 513, 181, 4, 35, "Output",ExpressionUUID->"e6a0cb59-0782-43fb-a8a8-a82b96865c08",
 CellID->13566930]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19230, 523, 129, 1, 70, "TechNoteSection",ExpressionUUID->"791c635c-1e03-4372-949b-fa4d96525879",
 CellID->57602827],
Cell[19362, 526, 147, 1, 70, "TechNoteMathCaption",ExpressionUUID->"b83f86d4-9d83-499b-ab40-b811d6930b35",
 CellID->237155657],
Cell[CellGroupData[{
Cell[19534, 531, 179, 3, 70, "Input",ExpressionUUID->"3077938e-d049-4d8d-a063-4be05b563e2d",
 CellID->114626256],
Cell[19716, 536, 157, 2, 35, "Output",ExpressionUUID->"6d2b2a59-ce78-473d-bfec-f2e65f9d3bd9",
 CellID->21111411]
}, Open  ]],
Cell[CellGroupData[{
Cell[19910, 543, 177, 3, 70, "Input",ExpressionUUID->"c4b67cc6-ff82-4326-9aca-1b660f7fcf40",
 CellID->72962348],
Cell[20090, 548, 208, 5, 35, "Output",ExpressionUUID->"a2a6b74a-9608-4542-8d81-ef5b97813ba2",
 CellID->144120138]
}, Open  ]],
Cell[20313, 556, 135, 1, 70, "TechNoteMathCaption",ExpressionUUID->"df0d52ca-bffd-45a1-b519-758e939bc207",
 CellID->172959633],
Cell[CellGroupData[{
Cell[20473, 561, 261, 6, 70, "Input",ExpressionUUID->"6bac6800-1d14-44bc-b44b-9c6af422b49a",
 CellID->103210421],
Cell[20737, 569, 207, 6, 53, "Output",ExpressionUUID->"0c88aaef-5c05-4d5b-855f-86576afe9105",
 CellID->78156444]
}, Open  ]],
Cell[20959, 578, 129, 1, 70, "TechNoteMathCaption",ExpressionUUID->"8860ba47-aeb6-4f5b-b590-f7dec769ca82",
 CellID->452686366],
Cell[CellGroupData[{
Cell[21113, 583, 410, 11, 70, "Input",ExpressionUUID->"ce3c5df2-0acd-4351-a168-d4b9b9224a22",
 CellID->422387114],
Cell[21526, 596, 83223, 1588, 70, "Output",ExpressionUUID->"cc2bb6ca-d1b9-4f35-9ca1-76c6f1a54a4e",
 CellID->209532304]
}, Open  ]],
Cell[104764, 2187, 595, 20, 70, "TechNoteMathCaption",ExpressionUUID->"19c2ede4-6eb4-40b0-81d5-58bc4f1c47e3",
 CellID->56151557],
Cell[CellGroupData[{
Cell[105384, 2211, 507, 13, 70, "Input",ExpressionUUID->"315ff5bc-9c19-4562-8561-5cdfe006134d",
 CellID->392545453],
Cell[105894, 2226, 43072, 807, 70, "Output",ExpressionUUID->"6938d4d0-e2d1-4edf-99a6-e133788f86ff",
 CellID->242033643]
}, Open  ]],
Cell[148981, 3036, 345, 9, 70, "TechNoteMathCaption",ExpressionUUID->"a69dedee-e839-4836-915d-a71a2bd2e532",
 CellID->100832978],
Cell[CellGroupData[{
Cell[149351, 3049, 234, 6, 70, "Input",ExpressionUUID->"ede388b5-b5be-44c7-9b93-ba162d25e9a4",
 CellID->438135564],
Cell[149588, 3057, 192, 3, 35, "Output",ExpressionUUID->"19947191-b27a-4d1e-b954-8c5a7c725dd1",
 CellID->287705978]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[149829, 3066, 138, 1, 70, "TechNoteSection",ExpressionUUID->"043711de-c6d3-40d5-b6bb-10780552ed50",
 CellID->33461597],
Cell[149970, 3069, 164, 2, 70, "TechNoteMathCaption",ExpressionUUID->"f2fd091d-1e6f-4e71-a2ff-d6101f367dc1",
 CellID->139662984],
Cell[CellGroupData[{
Cell[150159, 3075, 446, 12, 70, "Input",ExpressionUUID->"3981f08a-a266-4abb-a862-b0e114c10814",
 CellID->398286937],
Cell[150608, 3089, 83094, 1586, 70, "Output",ExpressionUUID->"ae81a371-746d-4db3-8569-2cdc530451cb",
 CellID->52134645]
}, Open  ]],
Cell[233717, 4678, 585, 20, 70, "TechNoteMathCaption",ExpressionUUID->"bd50a358-8472-43db-92f1-56cedce74600",
 CellID->254962743],
Cell[CellGroupData[{
Cell[234327, 4702, 634, 21, 70, "Input",ExpressionUUID->"267bdab1-9ef9-4c49-b84e-33848c84d88e",
 CellID->208306947],
Cell[234964, 4725, 128, 2, 35, "Output",ExpressionUUID->"cb1ae230-d39e-470b-a545-a1d1657fe595",
 CellID->2750224]
}, Open  ]],
Cell[235107, 4730, 129, 1, 70, "TechNoteMathCaption",ExpressionUUID->"38bf2122-d295-44fe-b7d6-2b0ba09be970",
 CellID->48756516],
Cell[CellGroupData[{
Cell[235261, 4735, 1975, 55, 70, "Input",ExpressionUUID->"2641e297-6863-4235-8bc2-47fc51ba52c5",
 CellID->415836666],
Cell[237239, 4792, 109685, 2156, 70, "Output",ExpressionUUID->"5599e82a-0cd2-4e01-ab51-4e33be1716e4",
 CellID->14127691]
}, Open  ]],
Cell[346939, 6951, 177, 3, 70, "TechNoteMathCaption",ExpressionUUID->"2da1dd1c-e47f-4ea8-b8ba-bcf09aa5bd9d",
 CellID->699600308],
Cell[CellGroupData[{
Cell[347141, 6958, 1973, 55, 70, "Input",ExpressionUUID->"acc42a94-28db-43b7-b697-59374793c6c2",
 CellID->6091911],
Cell[349117, 7015, 94091, 1863, 70, "Output",ExpressionUUID->"350cacfc-f3d9-4328-978d-e8b694387e77",
 CellID->222447527]
}, Open  ]],
Cell[443223, 8881, 586, 19, 70, "TechNoteMathCaption",ExpressionUUID->"563f31ea-55ed-4d75-ab9b-003c901d5d2b",
 CellID->259341750]
}, Open  ]],
Cell[CellGroupData[{
Cell[443846, 8905, 114, 1, 70, "TechNoteSection",ExpressionUUID->"8f4cfabc-dce5-4c88-b354-6d94488bc0ec",
 CellID->468515064],
Cell[443963, 8908, 267, 4, 70, "TechNoteMathCaption",ExpressionUUID->"25a2f533-8afc-4b3c-aede-acf63b70597b",
 CellID->26838858],
Cell[CellGroupData[{
Cell[444255, 8916, 236, 5, 70, "Input",ExpressionUUID->"4455d744-25af-483a-ab40-62fc0937d666",
 CellID->320045123],
Cell[444494, 8923, 290, 8, 35, "Output",ExpressionUUID->"3b26dff5-133d-4ef0-bf76-01aa3f3f35c3",
 CellID->144098166]
}, Open  ]],
Cell[444799, 8934, 136, 1, 70, "TechNoteMathCaption",ExpressionUUID->"d04fe5e1-0714-429c-a3e2-efbf84935857",
 CellID->502664438],
Cell[CellGroupData[{
Cell[444960, 8939, 246, 5, 70, "Input",ExpressionUUID->"47780729-629f-4d5f-acd1-c6eac089fef1",
 CellID->460674117],
Cell[445209, 8946, 863, 22, 51, "Output",ExpressionUUID->"806c4663-4a79-4798-91e2-24770e3ecbcd",
 CellID->567622007]
}, Open  ]],
Cell[446087, 8971, 139, 1, 70, "TechNoteMathCaption",ExpressionUUID->"5701f91e-7e0d-4917-a8b9-7708f920be97",
 CellID->318945664],
Cell[CellGroupData[{
Cell[446251, 8976, 288, 6, 70, "Input",ExpressionUUID->"f35939f1-9467-4a9e-aeae-0ac0fee32aa9",
 CellID->228472135],
Cell[446542, 8984, 1619, 49, 66, "Output",ExpressionUUID->"d36e98bf-2add-4311-85d7-52f5863d6454",
 CellID->167688184]
}, Open  ]],
Cell[CellGroupData[{
Cell[448198, 9038, 500, 13, 70, "Input",ExpressionUUID->"41624195-a6e6-44e3-8e0a-57c6790425ed",
 CellID->498538805],
Cell[448701, 9053, 1277, 40, 51, "Output",ExpressionUUID->"75df63de-643c-4547-88a9-701e87b5059e",
 CellID->488440420]
}, Open  ]],
Cell[449993, 9096, 142, 1, 70, "TechNoteMathCaption",ExpressionUUID->"2b54ecbc-a10b-4b91-9653-1b0a6026c258",
 CellID->30430800],
Cell[450138, 9099, 964, 26, 70, "Input",ExpressionUUID->"80aee334-7f65-4353-bb1a-185d9178d61e",
 CellID->338626900],
Cell[451105, 9127, 509, 13, 70, "TechNoteMathCaption",ExpressionUUID->"688cd8b4-68ba-40f0-8577-1497a1c6709d",
 CellID->33966879],
Cell[CellGroupData[{
Cell[451639, 9144, 230, 5, 70, "Input",ExpressionUUID->"45aa8478-c27d-4605-a540-afc2ab20ae16",
 CellID->463235003],
Cell[451872, 9151, 290, 8, 35, "Output",ExpressionUUID->"76f48552-e3e9-4e30-ae22-490c81a9b56c",
 CellID->130931456]
}, Open  ]],
Cell[CellGroupData[{
Cell[452199, 9164, 240, 5, 70, "Input",ExpressionUUID->"6bcdafe3-9b04-48a2-a43e-70dd3fe54d0e",
 CellID->220685702],
Cell[452442, 9171, 863, 22, 51, "Output",ExpressionUUID->"45a16a00-9b44-4196-a5b7-dd46c44cc127",
 CellID->529899974]
}, Open  ]],
Cell[453320, 9196, 258, 4, 70, "TechNoteMathCaption",ExpressionUUID->"da8b13e2-b463-4a54-aa61-8adf809b2bad",
 CellID->667234787],
Cell[453581, 9202, 424, 11, 70, "TechNoteMathCaption",ExpressionUUID->"4c803681-4fbd-46ab-9275-3f2628f789b1",
 CellID->20786854],
Cell[CellGroupData[{
Cell[454030, 9217, 590, 15, 70, "Input",ExpressionUUID->"cc518051-0b47-4527-be52-615a2377de4f",
 CellID->712923585],
Cell[454623, 9234, 1066, 28, 35, "Output",ExpressionUUID->"8e3978c4-3cd5-4682-a41c-07c7bc826c3d",
 CellID->241317559]
}, Open  ]],
Cell[455704, 9265, 290, 5, 70, "TechNoteMathCaption",ExpressionUUID->"b2cab360-7f8e-4cb9-9c34-d8df9cad1965",
 CellID->122464914],
Cell[CellGroupData[{
Cell[456019, 9274, 238, 5, 70, "Input",ExpressionUUID->"2ea0defc-cf50-4ff4-93b4-f1b4111c4338",
 CellID->435070527],
Cell[456260, 9281, 758, 20, 35, "Output",ExpressionUUID->"2be94706-6fe8-4a50-8fef-bde6038250c7",
 CellID->411803166]
}, Open  ]],
Cell[CellGroupData[{
Cell[457055, 9306, 187, 3, 70, "Input",ExpressionUUID->"f25ef3fa-9f61-49df-9215-52fe614f2ace",
 CellID->57678985],
Cell[457245, 9311, 5122, 90, 51, "Output",ExpressionUUID->"3c2d6ccb-9608-4041-a5cd-6a1b9a3dc567",
 CellTags->"RasterizedOutput",
 CellID->254652224]
}, Open  ]],
Cell[462382, 9404, 125, 1, 70, "TechNoteMathCaption",ExpressionUUID->"b5db532c-5b12-428a-8047-8d7ed3ec3697",
 CellID->169212145],
Cell[CellGroupData[{
Cell[462532, 9409, 224, 5, 70, "Input",ExpressionUUID->"29b12264-aa72-4b91-950e-204a57731fae",
 CellID->228145050],
Cell[462759, 9416, 127, 2, 35, "Output",ExpressionUUID->"aa09011d-a3f2-44a9-960b-92bce6787057",
 CellID->147813536]
}, Open  ]],
Cell[462901, 9421, 467, 7, 70, "TechNoteMathCaption",ExpressionUUID->"f4faf4d3-94d4-4b2e-bfa2-b2c265ebfb41",
 CellID->388376040],
Cell[CellGroupData[{
Cell[463393, 9432, 167, 3, 70, "Input",ExpressionUUID->"07240d2b-0f6f-4f8b-8242-5af8a5eeddc8",
 CellID->131012795],
Cell[463563, 9437, 127, 2, 35, "Output",ExpressionUUID->"95466749-a6c2-49aa-9caf-c04c6f011711",
 CellID->127222859]
}, Open  ]],
Cell[CellGroupData[{
Cell[463727, 9444, 203, 4, 70, "Input",ExpressionUUID->"719d76b5-4a27-406b-806d-59dfe453e417",
 CellID->844247],
Cell[463933, 9450, 126, 2, 35, "Output",ExpressionUUID->"330dea22-5ca7-468e-9746-cffed5f70a96",
 CellID->91695846]
}, Open  ]],
Cell[464074, 9455, 121, 1, 70, "TechNoteMathCaption",ExpressionUUID->"159cc44c-235b-484d-88e1-67d35413ced5",
 CellID->205495515],
Cell[CellGroupData[{
Cell[464220, 9460, 196, 4, 70, "Input",ExpressionUUID->"32d0986b-bc65-4208-9aa1-44b305e67f6a",
 CellID->13581624],
Cell[464419, 9466, 278, 6, 35, "Output",ExpressionUUID->"a0e890d2-e2e4-45b7-8955-1919e0d5d40d",
 CellID->1801989]
}, Open  ]],
Cell[464712, 9475, 186, 3, 70, "TechNoteMathCaption",ExpressionUUID->"c0197bc7-b22a-4591-8806-d2948b2cd1af",
 CellID->488934143],
Cell[CellGroupData[{
Cell[464923, 9482, 165, 3, 70, "Input",ExpressionUUID->"e17a94e1-d5ba-43ff-8054-e203ab242bff",
 CellID->52403940],
Cell[465091, 9487, 289, 5, 51, "Output",ExpressionUUID->"95165ae1-57eb-42f5-bedf-eca142aa39fb",
 CellID->27588445]
}, Open  ]],
Cell[465395, 9495, 140, 1, 70, "TechNoteMathCaption",ExpressionUUID->"9ccadf12-a266-49b6-9aee-845b7e61273c",
 CellID->733937479],
Cell[CellGroupData[{
Cell[465560, 9500, 213, 4, 70, "Input",ExpressionUUID->"54d0bb40-af6b-4cdb-b2aa-c348c67aa9d7",
 CellID->288697611],
Cell[465776, 9506, 3061, 44, 70, "Message",ExpressionUUID->"11a09ede-14fc-4636-9e98-5e6fed1a97cc",
 CellID->508655313],
Cell[468840, 9552, 465, 9, 70, "Message",ExpressionUUID->"61c4ec33-d153-4976-bebc-da595f21c199",
 CellID->488314992],
Cell[469308, 9563, 465, 9, 70, "Message",ExpressionUUID->"85f5b3b5-9d25-4a99-ac1d-3396cc94da12",
 CellID->360908914],
Cell[469776, 9574, 159, 3, 35, "Output",ExpressionUUID->"f71ef3b5-9c62-4fbf-aa1e-49343805478f",
 CellID->45875794]
}, Open  ]],
Cell[469950, 9580, 165, 2, 70, "TechNoteMathCaption",ExpressionUUID->"7bf90a20-6188-43c2-9f73-517fb25295f5",
 CellID->101847644],
Cell[470118, 9584, 151, 1, 70, "TechNoteMathCaption",ExpressionUUID->"41455be0-9584-4ae8-bd09-d4f8e2c1d502",
 CellID->211580469],
Cell[470272, 9587, 916, 26, 70, "TechNoteMathCaption",ExpressionUUID->"b74b0eb3-1bb3-407b-aad3-bb46ef060f2d",
 CellID->247846069],
Cell[471191, 9615, 941, 27, 70, "TechNoteMathCaption",ExpressionUUID->"00526329-007b-4bb3-a489-ea2c3205e127",
 CellID->819467623],
Cell[472135, 9644, 177, 3, 70, "TechNoteMathCaption",ExpressionUUID->"b3b33bd4-9e8b-4ddd-bc93-4657a2a0aff6",
 CellID->153350675],
Cell[472315, 9649, 297, 9, 70, "Input",ExpressionUUID->"9de6ac57-a921-4708-857f-728f1270ef0a",
 CellID->151625861],
Cell[CellGroupData[{
Cell[472637, 9662, 681, 20, 70, "Input",ExpressionUUID->"0a9f7884-a030-4518-87cf-d605e5683169",
 CellID->41007170],
Cell[473321, 9684, 280, 6, 35, "Output",ExpressionUUID->"a640971d-e134-4d77-99e5-aae5df8a9510",
 CellID->123741561]
}, Open  ]],
Cell[473616, 9693, 164, 2, 70, "TechNoteMathCaption",ExpressionUUID->"ccd09c2a-2724-4bd4-a34f-7bf89f1c8e44",
 CellID->107675305],
Cell[CellGroupData[{
Cell[473805, 9699, 613, 18, 70, "Input",ExpressionUUID->"6f22068e-e10b-4b67-a738-bbff8ceba994",
 CellID->295429183],
Cell[474421, 9719, 466, 14, 51, "Output",ExpressionUUID->"6e23889d-dc8a-4c39-9ac8-e923ebc7f2e1",
 CellID->211184276]
}, Open  ]],
Cell[CellGroupData[{
Cell[474924, 9738, 211, 5, 70, "Input",ExpressionUUID->"64f41a23-2d2e-494b-bd0f-1c8b5600ffc4",
 CellID->309536517],
Cell[475138, 9745, 294, 4, 51, "Output",ExpressionUUID->"ca6e255e-35e1-4094-b5b3-e8b85c132f14",
 CellID->378659440]
}, Open  ]],
Cell[475447, 9752, 248, 6, 70, "Input",ExpressionUUID->"2914dcb4-bec4-4137-a7a9-1ec9abf1cfe2",
 CellID->45741824],
Cell[CellGroupData[{
Cell[475720, 9762, 210, 5, 70, "Input",ExpressionUUID->"3b966260-56e3-475d-849c-28571063b6fd",
 CellID->14451647],
Cell[475933, 9769, 295, 4, 51, "Output",ExpressionUUID->"03c25537-11c5-4ce1-851b-9c4e11f08809",
 CellID->1000642904]
}, Open  ]],
Cell[476243, 9776, 162, 3, 70, "Input",ExpressionUUID->"25292622-7e3c-4f2d-8678-79e050fc4ba8",
 CellID->468290609],
Cell[476408, 9781, 483, 12, 70, "TechNoteMathCaption",ExpressionUUID->"5ff7c9db-cd91-48d6-b219-f2a740e0835a",
 CellID->136909599],
Cell[476894, 9795, 262, 4, 70, "TechNoteMathCaption",ExpressionUUID->"f039239a-0dd8-466a-86d7-0cf614539986",
 CellID->207794795],
Cell[477159, 9801, 666, 15, 70, "TechNoteMathCaption",ExpressionUUID->"66a8b6ba-4466-462e-8a7b-ea3a1ae5c37d",
 CellID->93210004],
Cell[477828, 9818, 365, 9, 70, "TechNoteMathCaption",ExpressionUUID->"eaf9795c-a061-4059-8646-8abe5b39a10f",
 CellID->597830687],
Cell[478196, 9829, 1285, 40, 70, "TechNoteMathCaption",ExpressionUUID->"f63b4d4d-4162-48b9-83c4-f953f4c27b56",
 CellID->267850361],
Cell[479484, 9871, 131, 1, 70, "TechNoteMathCaption",ExpressionUUID->"25cdf2bd-1629-4b75-9634-58187ae6f7ed",
 CellID->238909488],
Cell[CellGroupData[{
Cell[479640, 9876, 424, 13, 70, "Input",ExpressionUUID->"365de1bd-c2eb-485e-bb9a-40393ee11f1d",
 CellID->520558764],
Cell[480067, 9891, 293, 8, 48, "Output",ExpressionUUID->"d598d300-134f-412b-9ee0-294e8d150fd5",
 CellID->350941219]
}, Open  ]],
Cell[CellGroupData[{
Cell[480397, 9904, 574, 18, 70, "Input",ExpressionUUID->"8aed61c8-2918-4fab-8542-4975b9139ae3",
 CellID->8825156],
Cell[480974, 9924, 165, 3, 35, "Output",ExpressionUUID->"b9bcf6b0-5d10-449c-9701-bd0e7ddd806c",
 CellID->278680919]
}, Open  ]],
Cell[481154, 9930, 135, 1, 70, "TechNoteMathCaption",ExpressionUUID->"2a079b84-81a1-440d-9526-c687f401f30a",
 CellID->806936389],
Cell[481292, 9933, 733, 23, 70, "TechNoteMathCaption",ExpressionUUID->"ee1d79df-fd83-40fe-a0e9-a37b76b829cb",
 InitializationCell->True,
 CellID->25842481],
Cell[482028, 9958, 143, 1, 70, "TechNoteMathCaption",ExpressionUUID->"cc806c81-096f-4880-8464-a1a13fb2ca56",
 CellID->14619546],
Cell[CellGroupData[{
Cell[482196, 9963, 246, 6, 70, "Input",ExpressionUUID->"a09ecd2a-6bfe-485f-a751-332856466e8a",
 CellID->367209639],
Cell[482445, 9971, 246, 6, 35, "Output",ExpressionUUID->"381652f4-560f-48a8-8c8c-4ac02f02ea67",
 CellID->19629526]
}, Open  ]],
Cell[482706, 9980, 125, 1, 70, "TechNoteMathCaption",ExpressionUUID->"70d08c46-0333-4fc0-9bcc-de185089f00d",
 CellID->339981277],
Cell[CellGroupData[{
Cell[482856, 9985, 541, 14, 70, "Input",ExpressionUUID->"1daf6273-80c8-41be-ba20-de5fb5a366ad",
 CellID->558391696],
Cell[483400, 10001, 4094, 72, 171, "Output",ExpressionUUID->"1c11c862-d9de-45e9-a44e-e382be1d1717",
 CellID->716575968]
}, Open  ]],
Cell[487509, 10076, 142, 1, 70, "TechNoteMathCaption",ExpressionUUID->"32c713da-0ccb-450d-a84b-c5d8cb4fecc5",
 CellID->214227103],
Cell[CellGroupData[{
Cell[487676, 10081, 488, 14, 70, "Input",ExpressionUUID->"e5bbad70-1297-4dee-ac1f-6cc82320250d",
 CellID->618289619],
Cell[488167, 10097, 165324, 2716, 242, "Output",ExpressionUUID->"4894fc0b-6435-440e-a736-fe460106dd29",
 CellTags->"RasterizedOutput",
 CellID->489329554]
}, Open  ]],
Cell[653506, 12816, 135, 1, 70, "TechNoteMathCaption",ExpressionUUID->"93e4cba2-e9f6-40ac-b35c-d5b724101b4c",
 CellID->4255939],
Cell[CellGroupData[{
Cell[653666, 12821, 376, 10, 70, "Input",ExpressionUUID->"b923682e-3aca-42d6-ae7b-5bea08cf7d3b",
 CellID->340278271],
Cell[654045, 12833, 1247, 38, 51, "Output",ExpressionUUID->"5b167192-ee4c-429e-9de3-8b7bd368992c",
 CellID->394553506]
}, Open  ]],
Cell[CellGroupData[{
Cell[655329, 12876, 241, 5, 70, "ExampleDelimiter",ExpressionUUID->"d4de0650-3190-42b0-9c31-770d4431893d",
 CellID->34228752],
Cell[655573, 12883, 398, 12, 70, "TechNoteMathCaption",ExpressionUUID->"e46f27bf-79ee-4660-8f1d-262f0ce49783",
 CellID->758466417],
Cell[CellGroupData[{
Cell[655996, 12899, 386, 10, 70, "Input",ExpressionUUID->"493e10ca-749f-4655-bf54-450d4805f0c7",
 CellID->11744335],
Cell[656385, 12911, 835, 29, 55, "Output",ExpressionUUID->"220c8eb9-f074-4eb2-b14f-ef14ba24b8cf",
 CellID->112085041]
}, Open  ]],
Cell[657235, 12943, 247, 4, 70, "TechNoteMathCaption",ExpressionUUID->"897e261b-9f80-4bc1-94ea-4446dee6daa6",
 CellID->732162013],
Cell[CellGroupData[{
Cell[657507, 12951, 242, 5, 70, "Input",ExpressionUUID->"1bd0426c-e96a-4fa5-996a-a31cc35b220b",
 CellID->244982983],
Cell[657752, 12958, 761, 20, 35, "Output",ExpressionUUID->"00a28877-87a4-43be-be10-dadca77222c0",
 CellID->851438496]
}, Open  ]],
Cell[658528, 12981, 233, 4, 70, "TechNoteMathCaption",ExpressionUUID->"9b2c532d-49e8-4d07-98f6-b28566e30386",
 CellID->28447423],
Cell[CellGroupData[{
Cell[658786, 12989, 252, 5, 70, "Input",ExpressionUUID->"ef94b61b-9733-45ee-802b-860d2c27da03",
 CellID->260451403],
Cell[659041, 12996, 2415, 44, 37, "Output",ExpressionUUID->"3877dd5f-675d-4c37-8b53-29a251e1e9ea",
 CellID->665869934]
}, Open  ]],
Cell[661471, 13043, 163, 2, 70, "TechNoteMathCaption",ExpressionUUID->"637fc695-73cb-4552-98d8-9248f77a06ad",
 CellID->45932736],
Cell[CellGroupData[{
Cell[661659, 13049, 241, 5, 70, "Input",ExpressionUUID->"1cccdb83-a550-42c4-88ed-f4242236dad3",
 CellID->277919701],
Cell[661903, 13056, 1063, 28, 35, "Output",ExpressionUUID->"1708b15a-774d-4a92-80ef-80968d8c6e03",
 CellID->7493652]
}, Open  ]],
Cell[CellGroupData[{
Cell[663003, 13089, 229, 5, 70, "Input",ExpressionUUID->"7ebf39f8-6af9-4c48-a32c-48a0c392a1d6",
 CellID->87289371],
Cell[663235, 13096, 11851, 198, 159, "Output",ExpressionUUID->"829462fb-ae0e-4589-bdbf-2217a6caad16",
 CellID->172278896]
}, Open  ]],
Cell[675101, 13297, 123, 1, 70, "TechNoteMathCaption",ExpressionUUID->"3c5a780f-fdc5-4b8c-8bcb-435b5a6d7aa5",
 CellID->372409988],
Cell[CellGroupData[{
Cell[675249, 13302, 227, 5, 70, "Input",ExpressionUUID->"925ce5b7-47d0-482e-96e0-8b15ae8ba1ea",
 CellID->204572566],
Cell[675479, 13309, 128, 2, 35, "Output",ExpressionUUID->"3faee07a-3cc3-4ece-b24b-b549e78c5bc7",
 CellID->349098055]
}, Open  ]],
Cell[675622, 13314, 211, 4, 70, "TechNoteMathCaption",ExpressionUUID->"c2c81c0c-bdc3-4711-b3bc-c58137a77e21",
 CellID->705395511],
Cell[CellGroupData[{
Cell[675858, 13322, 203, 4, 70, "Input",ExpressionUUID->"b0f6e602-3517-4a9a-b45e-d7065b0491b0",
 CellID->197135344],
Cell[676064, 13328, 127, 2, 35, "Output",ExpressionUUID->"0ec3b7b5-b5e2-4562-9552-650a04c2098c",
 CellID->56352306]
}, Open  ]],
Cell[676206, 13333, 235, 4, 70, "TechNoteMathCaption",ExpressionUUID->"7c91506f-eea1-48b1-8169-536253d8b897",
 CellID->311141836],
Cell[CellGroupData[{
Cell[676466, 13341, 243, 5, 70, "Input",ExpressionUUID->"5f534a7e-390d-4c0b-857c-a24416cf9189",
 CellID->407433582],
Cell[676712, 13348, 3353, 88, 35, "Output",ExpressionUUID->"a05e8e23-80dd-42c5-b540-87c68a5ed59d",
 CellID->349274851]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[680114, 13442, 239, 5, 70, "ExampleDelimiter",ExpressionUUID->"a7e96a3c-e960-43f3-88d8-5c7ae8ed68df",
 CellID->518217],
Cell[680356, 13449, 129, 1, 70, "TechNoteMathCaption",ExpressionUUID->"8a623dcc-c4a3-48bc-be74-66a4583c3e90",
 CellID->194380331],
Cell[CellGroupData[{
Cell[680510, 13454, 204, 4, 70, "Input",ExpressionUUID->"4fba9995-ef54-4903-a9ba-2f911c42fe97",
 CellID->653333490],
Cell[680717, 13460, 137, 2, 35, "Output",ExpressionUUID->"1d2b0466-ff75-43c2-ad85-644d1bbf2847",
 CellID->531801412]
}, Open  ]],
Cell[680869, 13465, 148, 1, 70, "TechNoteMathCaption",ExpressionUUID->"0fd1d169-6383-4dc2-aa7f-6035d1e4d12f",
 CellID->158717184],
Cell[CellGroupData[{
Cell[681042, 13470, 224, 4, 70, "Input",ExpressionUUID->"d9ee7595-8603-4b05-a772-0c5f5dc9ab1c",
 CellID->414886273],
Cell[681269, 13476, 137, 2, 35, "Output",ExpressionUUID->"3a49f47a-410e-45c9-ab97-83477f2128c4",
 CellID->341067037]
}, Open  ]],
Cell[681421, 13481, 181, 3, 70, "TechNoteMathCaption",ExpressionUUID->"303e33f6-8cef-4939-ba37-6f4b49478744",
 CellID->36989666],
Cell[CellGroupData[{
Cell[681627, 13488, 250, 5, 70, "Input",ExpressionUUID->"b85dd037-8b12-465b-80d7-f1e1f79b5fec",
 CellID->55412944],
Cell[681880, 13495, 22108, 367, 282, "Output",ExpressionUUID->"4b972b21-917e-4be9-8d74-2cb4fa1c83d8",
 CellID->438918729]
}, Open  ]],
Cell[704003, 13865, 184, 3, 70, "TechNoteMathCaption",ExpressionUUID->"8aa7701c-9460-487b-9364-c83c1fb4ffa7",
 CellID->45514529],
Cell[CellGroupData[{
Cell[704212, 13872, 248, 5, 70, "Input",ExpressionUUID->"a0cd8854-8e3c-4822-ae69-0e89c5f2a429",
 CellID->274862742],
Cell[704463, 13879, 127, 2, 35, "Output",ExpressionUUID->"6af504c3-f53c-428f-9ff3-16df328f3264",
 CellID->24836199]
}, Open  ]],
Cell[704605, 13884, 152, 1, 70, "TechNoteMathCaption",ExpressionUUID->"9b718d6e-579b-424e-9e04-b0354691fec5",
 CellID->21262637],
Cell[CellGroupData[{
Cell[704782, 13889, 221, 4, 70, "Input",ExpressionUUID->"5187a265-6ea1-4db6-903c-9cf260e35fe0",
 CellID->3910711],
Cell[705006, 13895, 128, 2, 35, "Output",ExpressionUUID->"4a2a06b0-4a13-43c1-9d8a-eba0899fc0a8",
 CellID->453491458]
}, Open  ]],
Cell[705149, 13900, 209, 4, 70, "TechNoteMathCaption",ExpressionUUID->"db908ab1-467b-47ab-95ae-fc0e35d44b67",
 CellID->959787810],
Cell[705361, 13906, 153, 1, 70, "TechNoteMathCaption",ExpressionUUID->"35192e33-4309-4b80-8cbf-178af813f842",
 CellID->402703826],
Cell[CellGroupData[{
Cell[705539, 13911, 222, 4, 70, "Input",ExpressionUUID->"12c89bd9-7460-4295-877e-cd07e7453f49",
 CellID->1592074],
Cell[705764, 13917, 138, 2, 35, "Output",ExpressionUUID->"17366ec5-2fb8-4873-ab1c-76ee54ccd577",
 CellID->238165924]
}, Open  ]],
Cell[705917, 13922, 200, 4, 70, "TechNoteMathCaption",ExpressionUUID->"7964130f-02ba-4935-9672-d5101e21b288",
 CellID->708478496],
Cell[CellGroupData[{
Cell[706142, 13930, 253, 5, 70, "Input",ExpressionUUID->"62363314-f3d0-4d1e-b8ed-7a6aae943156",
 CellID->450230421],
Cell[706398, 13937, 762, 20, 35, "Output",ExpressionUUID->"5bde5e2a-8138-4175-8004-79c02ebbdedf",
 CellID->26904101]
}, Open  ]],
Cell[CellGroupData[{
Cell[707197, 13962, 279, 6, 70, "Input",ExpressionUUID->"bd5e9cc7-94c3-4c12-983c-458b41a3f732",
 CellID->212638519],
Cell[707479, 13970, 1219, 32, 35, "Output",ExpressionUUID->"2cf2b7cf-23b3-40f9-ad31-1110fbf47faf",
 CellID->295663189]
}, Open  ]],
Cell[708713, 14005, 156, 2, 70, "TechNoteMathCaption",ExpressionUUID->"7c44a0f1-df14-4809-81c7-83e4aca601b6",
 CellID->19185935],
Cell[CellGroupData[{
Cell[708894, 14011, 236, 5, 70, "Input",ExpressionUUID->"f9a6d67a-18d4-438c-a6a7-3d758e464c3d",
 CellID->65654456],
Cell[709133, 14018, 3182, 57, 54, "Output",ExpressionUUID->"90ddec0e-6240-45be-961c-2715ae369df2",
 CellID->7503357]
}, Open  ]],
Cell[712330, 14078, 124, 1, 70, "TechNoteMathCaption",ExpressionUUID->"2717d955-37d1-48ef-844a-e8fe2b22ce5a",
 CellID->288178981],
Cell[CellGroupData[{
Cell[712479, 14083, 210, 4, 70, "Input",ExpressionUUID->"d42a5e1f-865f-4a6a-a549-ec42ca8f66c4",
 CellID->153664891],
Cell[712692, 14089, 126, 2, 35, "Output",ExpressionUUID->"545060aa-00df-4b9d-8897-8735c140f3c5",
 CellID->20629447]
}, Open  ]],
Cell[712833, 14094, 176, 3, 70, "TechNoteMathCaption",ExpressionUUID->"de0c5ad6-439b-4c27-86aa-fd4ea4668638",
 CellID->669234462],
Cell[CellGroupData[{
Cell[713034, 14101, 258, 5, 70, "Input",ExpressionUUID->"5774c222-d31f-41ba-b064-1d0b0e847e68",
 CellID->223182031],
Cell[713295, 14108, 18746, 312, 282, "Output",ExpressionUUID->"26c24063-b193-4e25-8705-ca95c0f121ff",
 CellID->108341859]
}, Open  ]],
Cell[CellGroupData[{
Cell[732078, 14425, 254, 5, 70, "Input",ExpressionUUID->"c098d751-1693-4fc3-9352-3e59c81c281a",
 CellID->34464176],
Cell[732335, 14432, 128, 2, 35, "Output",ExpressionUUID->"5080876d-b876-43a6-9d4f-88603f1c342b",
 CellID->192324916]
}, Open  ]],
Cell[732478, 14437, 198, 4, 70, "TechNoteMathCaption",ExpressionUUID->"191491d7-28ae-49d2-b280-5df059491014",
 CellID->211204775],
Cell[CellGroupData[{
Cell[732701, 14445, 229, 4, 70, "Input",ExpressionUUID->"8e17bd8e-879f-4b57-9eb8-7a3d90d9b447",
 CellID->16120653],
Cell[732933, 14451, 127, 2, 35, "Output",ExpressionUUID->"6f78bde4-a1c7-4ee4-9bde-c54a62434147",
 CellID->16473884]
}, Open  ]],
Cell[733075, 14456, 182, 3, 70, "TechNoteMathCaption",ExpressionUUID->"45da4802-5986-4cc2-b868-0661601cf182",
 CellID->103140816],
Cell[CellGroupData[{
Cell[733282, 14463, 272, 6, 70, "Input",ExpressionUUID->"52cd852c-e0a5-43fb-8c93-eca7b7b5cb59",
 CellID->217632446],
Cell[733557, 14471, 9091, 154, 141, "Output",ExpressionUUID->"79c0e06f-8644-4bf8-b64e-76a87f188fe1",
 CellID->707156688]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[742709, 14632, 113, 1, 70, "TechNoteSection",ExpressionUUID->"9e280db4-c641-46b9-bcf5-4aa1fd810235",
 CellID->399341884],
Cell[742825, 14635, 370, 6, 70, "TechNoteMathCaption",ExpressionUUID->"54f27349-1ed0-4e77-9324-f274311a24bd",
 CellID->469287308],
Cell[743198, 14643, 148, 1, 70, "TechNoteMathCaption",ExpressionUUID->"360f1035-1233-4d69-9ee5-347fba9babf7",
 CellID->504481481],
Cell[CellGroupData[{
Cell[743371, 14648, 418, 10, 70, "Input",ExpressionUUID->"da421a35-0363-4242-8f47-b3fb3dfdd164",
 CellID->204438902],
Cell[743792, 14660, 29816, 493, 194, "Output",ExpressionUUID->"2ce3a670-c988-4fee-9212-c4508c56a204",
 CellID->81764621]
}, Open  ]],
Cell[CellGroupData[{
Cell[773645, 15158, 413, 10, 70, "Input",ExpressionUUID->"db4e61b9-e63c-4918-bb44-38468764fa68",
 CellID->1607685],
Cell[774061, 15170, 128, 2, 35, "Output",ExpressionUUID->"1e237630-3784-4030-ac4d-85839ba26076",
 CellID->162408320]
}, Open  ]],
Cell[774204, 15175, 344, 11, 70, "TechNoteMathCaption",ExpressionUUID->"bff5b926-f987-4c45-95f1-40dc1f0acecb",
 CellID->418159723],
Cell[CellGroupData[{
Cell[774573, 15190, 185, 4, 70, "Input",ExpressionUUID->"fc922e8d-de4b-444b-a0b4-a0d7ba1360ba",
 CellID->22090076],
Cell[774761, 15196, 127, 2, 35, "Output",ExpressionUUID->"03d3e6fd-de1f-4bca-97d5-cd55c160ed03",
 CellID->25208491]
}, Open  ]],
Cell[774903, 15201, 424, 7, 70, "TechNoteMathCaption",ExpressionUUID->"b013918c-4a2e-4d17-a7cf-95b8954d4bdf",
 CellID->305515986],
Cell[CellGroupData[{
Cell[775352, 15212, 610, 13, 70, "Input",ExpressionUUID->"26072508-28bc-42dc-b7de-6fb8870399e8",
 CellID->904920670],
Cell[775965, 15227, 128, 2, 35, "Output",ExpressionUUID->"d840c82f-1020-4e1a-80d6-96a7716a4d50",
 CellID->18002359]
}, Open  ]],
Cell[776108, 15232, 139, 1, 70, "TechNoteMathCaption",ExpressionUUID->"91f0974b-b429-4dbb-b881-6b87bf991194",
 CellID->572182296],
Cell[CellGroupData[{
Cell[776272, 15237, 237, 5, 70, "Input",ExpressionUUID->"5c6b411a-c055-443f-ae00-5fc1fa8600a2",
 CellID->39383660],
Cell[776512, 15244, 129, 2, 35, "Output",ExpressionUUID->"74876ce8-9d83-443f-9730-f2689228a8ac",
 CellID->481380362]
}, Open  ]],
Cell[776656, 15249, 371, 11, 70, "TechNoteMathCaption",ExpressionUUID->"dae02b5c-3d50-4dd7-bc42-cdfd6e4c3dac",
 CellID->17219148],
Cell[CellGroupData[{
Cell[777052, 15264, 220, 4, 70, "Input",ExpressionUUID->"e47033b7-c500-4939-9cfe-e88f155e3694",
 CellID->47120929],
Cell[777275, 15270, 129, 2, 35, "Output",ExpressionUUID->"082d05bf-acdb-4c19-9f06-2e94a6ebe0f9",
 CellID->64792566]
}, Open  ]],
Cell[777419, 15275, 309, 5, 70, "TechNoteMathCaption",ExpressionUUID->"44580e7e-41d4-4562-b481-a7ad60178081",
 CellID->14643919],
Cell[CellGroupData[{
Cell[777753, 15284, 656, 14, 70, "Input",ExpressionUUID->"70ff0a6c-d458-42c7-8c99-5c6a9e50d3d8",
 CellID->37517731],
Cell[778412, 15300, 130, 2, 35, "Output",ExpressionUUID->"71a3b817-6565-4275-9e5d-7ea2bdea12ae",
 CellID->530337700]
}, Open  ]],
Cell[778557, 15305, 153, 1, 70, "TechNoteMathCaption",ExpressionUUID->"70cf6342-3c4b-4d2b-b269-ca7a19b464ff",
 CellID->968157184],
Cell[CellGroupData[{
Cell[778735, 15310, 271, 6, 70, "Input",ExpressionUUID->"7ba54b35-ed04-4668-a272-06c024b4c6c9",
 CellID->702446134],
Cell[779009, 15318, 549, 14, 35, "Output",ExpressionUUID->"5cca346d-7d0a-4f2e-827f-b6543aea294b",
 CellID->306566547]
}, Open  ]],
Cell[CellGroupData[{
Cell[779595, 15337, 241, 5, 70, "ExampleDelimiter",ExpressionUUID->"b8d544be-ab51-49a3-b0d0-259ecf14aa98",
 CellID->14107562],
Cell[779839, 15344, 136, 1, 70, "TechNoteMathCaption",ExpressionUUID->"7e175591-2abd-42c1-8c80-44e10684f4a3",
 CellID->505671602],
Cell[CellGroupData[{
Cell[780000, 15349, 308, 7, 70, "Input",ExpressionUUID->"f933d93a-5e6c-4230-a7ab-1232a8d6cfe2",
 CellID->618773088],
Cell[780311, 15358, 1804, 49, 66, "Output",ExpressionUUID->"8b81a49b-c006-45ff-88cf-43a59b0b25ff",
 CellID->525838052]
}, Open  ]],
Cell[782130, 15410, 210, 4, 70, "TechNoteMathCaption",ExpressionUUID->"f33eda08-fae3-4479-a6c4-e636cede7441",
 CellID->330285041],
Cell[CellGroupData[{
Cell[782365, 15418, 261, 6, 70, "Input",ExpressionUUID->"56cd4124-2cba-4cc3-9cc9-2d894388b1fa",
 CellID->149666305],
Cell[782629, 15426, 184, 4, 35, "Output",ExpressionUUID->"29d6c201-3240-429e-bda2-f44a1eee1902",
 CellID->164357416]
}, Open  ]],
Cell[CellGroupData[{
Cell[782850, 15435, 261, 6, 70, "Input",ExpressionUUID->"c29e76db-da18-4009-a1a9-00b2f6268e11",
 CellID->279831655],
Cell[783114, 15443, 184, 4, 35, "Output",ExpressionUUID->"506a5827-d849-47d1-96a2-7cae7399f25b",
 CellID->240178721]
}, Open  ]],
Cell[783313, 15450, 182, 3, 70, "TechNoteMathCaption",ExpressionUUID->"77c588f9-414c-40a5-b716-15302bd28261",
 CellID->377750434],
Cell[CellGroupData[{
Cell[783520, 15457, 384, 9, 70, "Input",ExpressionUUID->"b149bf79-ed77-4cbb-8feb-b7afb792d0d1",
 CellID->80880133],
Cell[783907, 15468, 777, 21, 35, "Output",ExpressionUUID->"536c2c04-ff2d-4b73-aa3d-96006db8e4e2",
 CellID->99913589]
}, Open  ]],
Cell[CellGroupData[{
Cell[784721, 15494, 431, 10, 70, "Input",ExpressionUUID->"24db643a-a35a-4577-81ab-92455c12558f",
 CellID->281231649],
Cell[785155, 15506, 582, 17, 35, "Output",ExpressionUUID->"63674874-397f-4e7b-aa54-0fa486e76d42",
 CellID->480068261]
}, Open  ]],
Cell[785752, 15526, 145, 1, 70, "TechNoteMathCaption",ExpressionUUID->"0a4a5c63-eac7-46e4-9838-4db8022b656c",
 CellID->88233538],
Cell[CellGroupData[{
Cell[785922, 15531, 310, 7, 70, "Input",ExpressionUUID->"6fbc3631-04e7-4667-bf57-374fd925a058",
 CellID->926616109],
Cell[786235, 15540, 581, 17, 35, "Output",ExpressionUUID->"a217b7b3-0f3e-406c-ab37-e7c7ef5a9c3b",
 CellID->78903040]
}, Open  ]],
Cell[786831, 15560, 135, 1, 70, "TechNoteMathCaption",ExpressionUUID->"4ee85dcc-da93-4d49-b9de-456690e750cd",
 CellID->97113938],
Cell[CellGroupData[{
Cell[786991, 15565, 430, 10, 70, "Input",ExpressionUUID->"898e048a-fe61-4538-b291-e76d75a22734",
 CellID->22984984],
Cell[787424, 15577, 582, 17, 35, "Output",ExpressionUUID->"91a2c43c-0a49-4a0f-84c9-1bbd64d855a7",
 CellID->239111319]
}, Open  ]],
Cell[788021, 15597, 152, 1, 70, "TechNoteMathCaption",ExpressionUUID->"74e5a1b3-aa91-4119-baeb-242f085774eb",
 CellID->396413639],
Cell[CellGroupData[{
Cell[788198, 15602, 532, 12, 70, "Input",ExpressionUUID->"e2f71c0e-42b9-49c7-84d8-b7c41c1ae607",
 CellID->229833682],
Cell[788733, 15616, 852, 24, 70, "Echo",ExpressionUUID->"453344bc-2da8-40c0-8181-f2a5297bbfb2",
 CellID->834526706],
Cell[789588, 15642, 582, 17, 35, "Output",ExpressionUUID->"26e85f3b-38bc-435b-a0a9-df6218359c78",
 CellID->630516631]
}, Open  ]],
Cell[CellGroupData[{
Cell[790207, 15664, 407, 9, 70, "Input",ExpressionUUID->"61dccad2-9386-42ce-8468-30c7b3d07ce2",
 CellID->162857240],
Cell[790617, 15675, 888, 24, 70, "Echo",ExpressionUUID->"8592ff58-114a-4072-8309-fbfbd35cfbed",
 CellID->267038778],
Cell[791508, 15701, 581, 17, 35, "Output",ExpressionUUID->"8f61954f-183e-4433-8b6d-3ae9ffcd9a05",
 CellID->51852502]
}, Open  ]],
Cell[CellGroupData[{
Cell[792126, 15723, 558, 13, 70, "Input",ExpressionUUID->"a9656146-6819-4835-8c73-1994d049d83d",
 CellID->306376386],
Cell[792687, 15738, 868, 24, 70, "Echo",ExpressionUUID->"de4d32a2-fda2-4058-8440-0f057c70bc4e",
 CellID->448272658]
}, Open  ]],
Cell[CellGroupData[{
Cell[793592, 15767, 428, 10, 70, "Input",ExpressionUUID->"e4437f9b-a46b-41fc-8db7-0244ce2f3101",
 CellID->3601619],
Cell[794023, 15779, 867, 24, 70, "Echo",ExpressionUUID->"118d84c1-73c1-4e04-a98f-0302a47d25eb",
 CellID->88055709]
}, Open  ]],
Cell[794905, 15806, 206, 4, 70, "TechNoteMathCaption",ExpressionUUID->"adb2da3f-fc1b-4721-8aab-2dc30747aed8",
 CellID->100378946],
Cell[CellGroupData[{
Cell[795136, 15814, 540, 13, 70, "Input",ExpressionUUID->"c6c5a97b-d069-4211-b5d1-7372b4b935fa",
 CellID->268140765],
Cell[795679, 15829, 873, 24, 70, "Echo",ExpressionUUID->"858ceb05-cacb-4cba-aca3-f4d7b308f244",
 CellID->434075465]
}, Open  ]],
Cell[CellGroupData[{
Cell[796589, 15858, 412, 10, 70, "Input",ExpressionUUID->"e3c8de3b-c47d-4149-8e7a-e15d13339f24",
 CellID->589080666],
Cell[797004, 15870, 871, 24, 70, "Echo",ExpressionUUID->"a7a9a0a2-4119-4393-9072-546c55af6cfc",
 CellID->323976790]
}, Open  ]],
Cell[797890, 15897, 154, 1, 70, "TechNoteMathCaption",ExpressionUUID->"dab32751-7fe4-42f8-988e-18e668dc4f85",
 CellID->478421323],
Cell[CellGroupData[{
Cell[798069, 15902, 345, 8, 70, "Input",ExpressionUUID->"56fcecae-9ed5-4142-a8f2-3f3fb4dda47c",
 CellID->542729463],
Cell[798417, 15912, 3918, 90, 261, "Output",ExpressionUUID->"eec87719-43d3-42cc-a766-9784791c77ca",
 CellID->25169857]
}, Open  ]],
Cell[802350, 16005, 138, 1, 70, "TechNoteMathCaption",ExpressionUUID->"88786608-25c5-45d8-8697-ffb397f6d0e9",
 CellID->59602588],
Cell[CellGroupData[{
Cell[802513, 16010, 233, 5, 70, "Input",ExpressionUUID->"715a7406-b524-4f24-aa11-9f368e1dcfb0",
 CellID->141527026],
Cell[802749, 16017, 662, 13, 80, "Output",ExpressionUUID->"0dff4e2e-84e5-46d4-823b-54b73c2e9565",
 CellID->387932858]
}, Open  ]],
Cell[803426, 16033, 218, 5, 70, "TechNoteMathCaption",ExpressionUUID->"9a7bb339-5acc-450c-90aa-457b2e7a0a8b",
 CellID->909413053],
Cell[CellGroupData[{
Cell[803669, 16042, 271, 6, 70, "Input",ExpressionUUID->"20bac007-b674-4699-9022-8c0f5d30c013",
 CellID->285728069],
Cell[803943, 16050, 2213, 40, 246, "Output",ExpressionUUID->"478ab664-36b3-4451-b715-fd5da17c7ce2",
 CellID->291815495]
}, Open  ]],
Cell[806171, 16093, 217, 4, 70, "TechNoteMathCaption",ExpressionUUID->"e54e82a6-dbce-4362-9169-a9975857f455",
 CellID->123284224],
Cell[CellGroupData[{
Cell[806413, 16101, 366, 8, 70, "Input",ExpressionUUID->"3a40e6c4-01d6-4f96-8bd0-a7f195673010",
 CellID->841619866],
Cell[806782, 16111, 1580, 37, 66, "Output",ExpressionUUID->"d40d7588-7387-4503-990c-25053f44c00b",
 CellID->89679823]
}, Open  ]],
Cell[808377, 16151, 126, 1, 70, "TechNoteMathCaption",ExpressionUUID->"93c199ef-1dcf-4716-a2f7-32565162c0eb",
 CellID->24958883],
Cell[CellGroupData[{
Cell[808528, 16156, 388, 9, 70, "Input",ExpressionUUID->"a05b1c3d-d8fa-43fb-ab74-5b0e0d9534c1",
 CellID->484647955],
Cell[808919, 16167, 393, 8, 35, "Output",ExpressionUUID->"dfc55999-6db3-493f-95aa-675d46d6f0a3",
 CellID->123777944]
}, Open  ]],
Cell[809327, 16178, 138, 1, 70, "TechNoteMathCaption",ExpressionUUID->"51599647-8f38-4c09-ba4b-d079463656aa",
 CellID->837471449],
Cell[CellGroupData[{
Cell[809490, 16183, 400, 9, 70, "Input",ExpressionUUID->"a74b27e6-7e06-41c1-8edf-440bf1936693",
 CellID->724085147],
Cell[809893, 16194, 636, 18, 35, "Output",ExpressionUUID->"a1d9c8f1-a109-4904-a164-af271fee0430",
 CellID->96753963]
}, Open  ]],
Cell[810544, 16215, 127, 1, 70, "TechNoteMathCaption",ExpressionUUID->"44b0e377-0c8c-46e7-91f5-5640159abd91",
 CellID->505704633],
Cell[CellGroupData[{
Cell[810696, 16220, 423, 10, 70, "Input",ExpressionUUID->"81ae2a2e-003a-4e0e-b19c-dd1fa212fff1",
 CellID->220964068],
Cell[811122, 16232, 244, 6, 35, "Output",ExpressionUUID->"90f5a01e-f50c-4e1a-ac65-0307a3e292da",
 CellID->74427375]
}, Open  ]],
Cell[811381, 16241, 152, 1, 70, "TechNoteMathCaption",ExpressionUUID->"ef31bdc3-7a7b-478d-a9df-6d13a2c6e136",
 CellID->733329592],
Cell[CellGroupData[{
Cell[811558, 16246, 425, 10, 70, "Input",ExpressionUUID->"037bf1b1-4429-4ecb-8d0a-49b30135a33c",
 CellID->472360365],
Cell[811986, 16258, 1505, 40, 51, "Output",ExpressionUUID->"d65f0a6a-bdcf-4a7f-85f8-ae6da196fa34",
 CellID->45157847]
}, Open  ]],
Cell[813506, 16301, 127, 1, 70, "TechNoteMathCaption",ExpressionUUID->"068eeb79-7927-4169-be98-c524cd2500ea",
 CellID->232625522],
Cell[CellGroupData[{
Cell[813658, 16306, 449, 11, 70, "Input",ExpressionUUID->"0efe243a-63d2-4cdc-85cf-1f19f74ea8e1",
 CellID->129412639],
Cell[814110, 16319, 396, 8, 35, "Output",ExpressionUUID->"d0d3a66b-109a-421b-9050-78f24f1c1453",
 CellID->294220470]
}, Open  ]],
Cell[814521, 16330, 216, 4, 70, "TechNoteMathCaption",ExpressionUUID->"4b9a050f-32fa-451a-bac4-d8ef338e7ebb",
 CellID->979377819],
Cell[CellGroupData[{
Cell[814762, 16338, 615, 18, 70, "Input",ExpressionUUID->"db9223bc-91e4-4f53-a226-b4e760d7eda0",
 CellID->174898405],
Cell[815380, 16358, 786, 20, 35, "Output",ExpressionUUID->"e3291f4d-e4f6-4261-8a8d-df5edf23dde4",
 CellID->408943794]
}, Open  ]],
Cell[816181, 16381, 209, 4, 70, "TechNoteMathCaption",ExpressionUUID->"c1f934dc-d3e6-449f-b0b9-64c63eb50be6",
 CellID->559719523],
Cell[CellGroupData[{
Cell[816415, 16389, 420, 11, 70, "Input",ExpressionUUID->"616ed975-f9df-42c3-9189-7aa024bf0bd5",
 CellID->359245144],
Cell[816838, 16402, 944, 24, 51, "Output",ExpressionUUID->"ccfeaaf9-a77c-49e6-b431-80aa0267357b",
 CellID->162633939]
}, Open  ]],
Cell[817797, 16429, 354, 9, 70, "TechNoteMathCaption",ExpressionUUID->"49b0ae1b-f115-420e-a74a-9f0a60daa6bd",
 CellID->306011383],
Cell[CellGroupData[{
Cell[818176, 16442, 793, 23, 70, "Input",ExpressionUUID->"d89d3e87-2f7e-4938-a750-d180213c8877",
 CellID->884651642],
Cell[818972, 16467, 5302, 186, 102, "Output",ExpressionUUID->"555a95b2-dad9-4348-abe6-9fc80ab72fd2",
 CellID->320654796]
}, Open  ]],
Cell[824289, 16656, 128, 1, 70, "TechNoteMathCaption",ExpressionUUID->"97f20388-d472-480e-9907-179c765d3fc5",
 CellID->22585214],
Cell[CellGroupData[{
Cell[824442, 16661, 162, 3, 70, "Input",ExpressionUUID->"78c44ea5-b68d-4257-aafc-7352432ccaf2",
 CellID->548368980],
Cell[824607, 16666, 2332, 66, 71, "Output",ExpressionUUID->"b21eae70-47a7-4c6a-a07f-b35f1c609c75",
 CellID->266909173]
}, Open  ]],
Cell[826954, 16735, 146, 1, 70, "TechNoteMathCaption",ExpressionUUID->"cdbcd419-8839-43cd-bab5-048193b552f0",
 CellID->305030941],
Cell[CellGroupData[{
Cell[827125, 16740, 205, 4, 70, "Input",ExpressionUUID->"54844170-c23b-4eb7-bedb-63f808af91e0",
 CellID->206631954],
Cell[827333, 16746, 338, 9, 39, "Output",ExpressionUUID->"b500366e-f9a0-4c94-ac23-8a4ac6367df0",
 CellID->390480037]
}, Open  ]],
Cell[827686, 16758, 134, 1, 70, "TechNoteMathCaption",ExpressionUUID->"c038b589-14ad-4b1d-9f1b-71965f63bb06",
 CellID->240106575],
Cell[CellGroupData[{
Cell[827845, 16763, 458, 13, 70, "Input",ExpressionUUID->"09639f36-1c3f-4b05-8983-809a44c7eef4",
 CellID->154729335],
Cell[828306, 16778, 47030, 827, 70, "Output",ExpressionUUID->"f154aec9-1c63-4687-af42-d0ccf2bb4af5",
 CellID->256275073]
}, Open  ]],
Cell[875351, 17608, 349, 9, 70, "TechNoteMathCaption",ExpressionUUID->"c49c47bb-07bf-4089-86bb-5876026c9710",
 CellID->700662694],
Cell[CellGroupData[{
Cell[875725, 17621, 300, 9, 70, "Input",ExpressionUUID->"a98557a9-9b98-4467-9b05-2a75aa7ee5c5",
 CellID->70632808],
Cell[876028, 17632, 503, 9, 35, "Output",ExpressionUUID->"e8303556-47fa-44dc-be41-04fab469a82a",
 CellID->542659924]
}, Open  ]],
Cell[876546, 17644, 144, 1, 70, "TechNoteMathCaption",ExpressionUUID->"cad94071-5735-4208-946d-8633c71f82c6",
 CellID->444986081],
Cell[CellGroupData[{
Cell[876715, 17649, 478, 13, 70, "Input",ExpressionUUID->"c0c0989c-ee18-4052-b455-a6d37724b89c",
 CellID->991815813],
Cell[877196, 17664, 330, 10, 35, "Output",ExpressionUUID->"0f978c9a-ffce-47f3-a31b-a17e7d767b52",
 CellID->33854908]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[877575, 17680, 241, 5, 70, "ExampleDelimiter",ExpressionUUID->"26a11390-68be-4741-bd0b-257c701cdbaa",
 CellID->14107563],
Cell[877819, 17687, 1369, 41, 70, "TechNoteMathCaption",ExpressionUUID->"88cb37a6-3315-4822-b6f3-13fb9720dfb8",
 CellID->771301361],
Cell[CellGroupData[{
Cell[879213, 17732, 521, 14, 70, "Input",ExpressionUUID->"f7552833-4362-40df-b886-80a1a576e5dd",
 CellID->535666113],
Cell[879737, 17748, 132, 2, 35, "Output",ExpressionUUID->"835b6aa8-cabc-4a9d-8fcc-ef6f20ff0999",
 CellID->27544576]
}, Open  ]],
Cell[879884, 17753, 1026, 31, 70, "TechNoteMathCaption",ExpressionUUID->"507f59f5-e50f-482c-82e3-a22514659678",
 CellID->444708281],
Cell[CellGroupData[{
Cell[880935, 17788, 534, 15, 70, "Input",ExpressionUUID->"5b6fc599-e64c-4912-894b-4ca97226a080",
 CellID->887464862],
Cell[881472, 17805, 136, 2, 35, "Output",ExpressionUUID->"f697d21b-748f-4239-8677-d899dbb70ca3",
 CellID->141130879]
}, Open  ]],
Cell[881623, 17810, 144, 1, 70, "TechNoteMathCaption",ExpressionUUID->"dbb75bbd-ba6c-4d7e-810c-301c7eef1ecd",
 CellID->486162817],
Cell[CellGroupData[{
Cell[881792, 17815, 185, 3, 70, "Input",ExpressionUUID->"ad01a415-f04d-42f8-9562-c0fdbb2a247c",
 CellID->615462631],
Cell[881980, 17820, 131, 2, 35, "Output",ExpressionUUID->"ba76ab0b-b0b0-4a5c-9eaa-34d8c0e08a80",
 CellID->86302315]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[882160, 17828, 241, 5, 70, "ExampleDelimiter",ExpressionUUID->"0c2ec0db-99f8-49c3-ad10-05c18b8ff704",
 CellID->14107564],
Cell[882404, 17835, 984, 30, 70, "TechNoteMathCaption",ExpressionUUID->"12d95e0b-3357-46b9-8228-02dbd8d5f70e",
 CellID->177535240],
Cell[CellGroupData[{
Cell[883413, 17869, 505, 14, 70, "Input",ExpressionUUID->"eb5243ad-37c4-464d-8548-9ddc6f6ee58b",
 CellID->661797484],
Cell[883921, 17885, 408, 12, 35, "Output",ExpressionUUID->"cf32f940-542b-4426-a494-db342588d3ce",
 CellID->4477802]
}, Open  ]],
Cell[884344, 17900, 853, 23, 70, "TechNoteMathCaption",ExpressionUUID->"9833fc09-0507-48b0-9628-3da3e6ba1653",
 CellID->445973593],
Cell[CellGroupData[{
Cell[885222, 17927, 971, 27, 70, "Input",ExpressionUUID->"567e5de2-e258-4c15-b489-04cabbda0e04",
 CellID->869163183],
Cell[886196, 17956, 347, 9, 49, "Output",ExpressionUUID->"6a7ba05b-87fd-43d7-80f7-f59039185438",
 CellID->56459738]
}, Open  ]],
Cell[886558, 17968, 197, 4, 70, "TechNoteMathCaption",ExpressionUUID->"91c3c161-1737-4015-8ba4-ac5c75fb472a",
 CellID->686745089],
Cell[CellGroupData[{
Cell[886780, 17976, 988, 28, 70, "Input",ExpressionUUID->"08342840-648c-44c8-8431-aa966b2c60ee",
 CellID->674295727],
Cell[887771, 18006, 351, 9, 49, "Output",ExpressionUUID->"88ab02f2-9c85-4be6-a491-3d0a77cdbd08",
 CellID->504109667]
}, Open  ]],
Cell[888137, 18018, 158, 2, 70, "TechNoteMathCaption",ExpressionUUID->"a944aa67-117c-410d-b531-213c1b4d9d91",
 CellID->694507399],
Cell[CellGroupData[{
Cell[888320, 18024, 392, 10, 70, "Input",ExpressionUUID->"65ef81a9-6627-48fc-91e1-199beb392379",
 CellID->875714386],
Cell[888715, 18036, 371, 10, 35, "Output",ExpressionUUID->"72a11c81-e6d6-4596-9748-82ccbcde0016",
 CellID->242003258]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[889135, 18052, 242, 5, 70, "ExampleDelimiter",ExpressionUUID->"548c40d2-9bc6-4475-9cb7-2618ace248d1",
 CellID->112658320],
Cell[889380, 18059, 163, 2, 70, "TechNoteMathCaption",ExpressionUUID->"969c7aee-e0a9-493f-a91b-b62746b479be",
 CellID->327143208],
Cell[CellGroupData[{
Cell[889568, 18065, 417, 10, 70, "Input",ExpressionUUID->"2ec72d0c-2952-4567-94b4-a6b2ef859521",
 CellID->283656556],
Cell[889988, 18077, 745, 22, 35, "Output",ExpressionUUID->"9ccc8339-e6e4-4fc9-8763-f1dcc98a0af8",
 CellID->121246890]
}, Open  ]],
Cell[890748, 18102, 154, 1, 70, "TechNoteMathCaption",ExpressionUUID->"155e1765-89ad-4e48-a483-0c47f2abb86b",
 CellID->158433383],
Cell[CellGroupData[{
Cell[890927, 18107, 425, 11, 70, "Input",ExpressionUUID->"920b9332-cd2e-4a1a-95aa-3af1ed757202",
 CellID->499374772],
Cell[891355, 18120, 272, 8, 35, "Output",ExpressionUUID->"75276d12-dd1c-49ae-81b3-12bbc18fadac",
 CellID->171051003]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[891676, 18134, 242, 5, 70, "ExampleDelimiter",ExpressionUUID->"be682dd5-00fa-4cc4-acda-8b7f313209dc",
 CellID->519906287],
Cell[891921, 18141, 142, 1, 70, "TechNoteMathCaption",ExpressionUUID->"e0d777b5-2516-4700-aa24-aff6f1513f46",
 CellID->858830434],
Cell[CellGroupData[{
Cell[892088, 18146, 490, 14, 70, "Input",ExpressionUUID->"893e219a-b964-4906-b220-e837d68eab36",
 CellID->634576773],
Cell[892581, 18162, 2242, 73, 66, "Output",ExpressionUUID->"4c2140e6-c76c-4560-9789-02b32634e170",
 CellID->226659544]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[894872, 18241, 242, 5, 70, "ExampleDelimiter",ExpressionUUID->"00957d36-3b2d-46bc-95dd-91866f27fe0e",
 CellID->490055446],
Cell[895117, 18248, 164, 2, 70, "TechNoteMathCaption",ExpressionUUID->"4342f691-4bc1-465a-a81f-8ef916ea81ce",
 CellID->535860945],
Cell[CellGroupData[{
Cell[895306, 18254, 510, 13, 70, "Input",ExpressionUUID->"1caefee4-4a4d-4150-bd62-4f7e22ad8ff3",
 CellID->630622865],
Cell[895819, 18269, 3230, 106, 81, "Output",ExpressionUUID->"7a3df43e-f6cc-4c9e-be6e-17a80c545361",
 CellID->313507277]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[899098, 18381, 241, 5, 70, "ExampleDelimiter",ExpressionUUID->"e1f489ff-f249-4336-bcb1-ef172450e1dc",
 CellID->14107565],
Cell[899342, 18388, 158, 2, 70, "TechNoteMathCaption",ExpressionUUID->"f0356223-7d11-43f9-9048-e35539618d9b",
 CellID->792813693],
Cell[CellGroupData[{
Cell[899525, 18394, 386, 10, 70, "Input",ExpressionUUID->"a17f5670-cc1e-4099-92dc-0686fd6a1d80",
 CellID->885845820],
Cell[899914, 18406, 549, 17, 35, "Output",ExpressionUUID->"35cb148e-f11d-4987-a7cd-0f780f760801",
 CellID->9609939]
}, Open  ]],
Cell[900478, 18426, 137, 1, 70, "TechNoteMathCaption",ExpressionUUID->"7b2b434d-690b-4139-ad9f-7e5c4b03e086",
 CellID->221442697],
Cell[CellGroupData[{
Cell[900640, 18431, 384, 10, 70, "Input",ExpressionUUID->"286f7bd4-4d6e-4fc6-98b2-311a5775b450",
 CellID->874035320],
Cell[901027, 18443, 495, 14, 35, "Output",ExpressionUUID->"7f814eb0-9c6a-418b-83fd-cc4e9e11e07c",
 CellID->272543979]
}, Open  ]],
Cell[901537, 18460, 1242, 37, 70, "TechNoteMathCaption",ExpressionUUID->"69692191-aab4-4299-952f-c1cc1c89509f",
 CellID->132229044],
Cell[CellGroupData[{
Cell[902804, 18501, 452, 12, 70, "Input",ExpressionUUID->"e473066b-12ac-4029-b1f9-3063d00a0763",
 CellID->982577960],
Cell[903259, 18515, 132, 2, 35, "Output",ExpressionUUID->"7033a7e9-5bbc-4577-83de-084d9f274c16",
 CellID->70864155]
}, Open  ]],
Cell[903406, 18520, 198, 4, 70, "TechNoteMathCaption",ExpressionUUID->"01d99b74-67fc-4c7e-a702-d948e589dc42",
 CellID->361259892],
Cell[CellGroupData[{
Cell[903629, 18528, 443, 12, 70, "Input",ExpressionUUID->"fd138c29-3c6c-4ca5-9a35-b6408e129f2e",
 CellID->823753171],
Cell[904075, 18542, 136, 2, 35, "Output",ExpressionUUID->"2eb1c1d4-4eee-41d0-b5d2-18fd98ea0206",
 CellID->877496089]
}, Open  ]],
Cell[904226, 18547, 136, 1, 70, "TechNoteMathCaption",ExpressionUUID->"b7a75d80-b305-450d-8fa1-ecf87acb9afc",
 CellID->324048877],
Cell[CellGroupData[{
Cell[904387, 18552, 174, 3, 70, "Input",ExpressionUUID->"b042107b-7011-4203-af01-f18a94cfe317",
 CellID->183907914],
Cell[904564, 18557, 132, 2, 35, "Output",ExpressionUUID->"48448890-250e-4c48-bd77-4ed4143c8ec0",
 CellID->386927958]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[904745, 18565, 241, 5, 70, "ExampleDelimiter",ExpressionUUID->"32ec51a3-cc5b-45d9-bc7a-6b390b2e9f99",
 CellID->14107566],
Cell[904989, 18572, 812, 23, 70, "TechNoteMathCaption",ExpressionUUID->"ff04ed52-8585-41d4-86d1-ef63a3cb6c19",
 CellID->273207191],
Cell[CellGroupData[{
Cell[905826, 18599, 399, 10, 70, "Input",ExpressionUUID->"a31f1c2c-9660-4aea-b6ba-f484fcc76302",
 CellID->1112728],
Cell[906228, 18611, 132, 2, 35, "Output",ExpressionUUID->"09abf768-1f85-4170-bd9e-24709506b4e0",
 CellID->381398679]
}, Open  ]],
Cell[906375, 18616, 383, 8, 70, "TechNoteMathCaption",ExpressionUUID->"995a27ef-339b-460d-9fb8-3fa3567a57a0",
 CellID->306503519],
Cell[CellGroupData[{
Cell[906783, 18628, 368, 9, 70, "Input",ExpressionUUID->"8d8ff493-9d70-4d9b-8d48-71d887b781e3",
 CellID->999001902],
Cell[907154, 18639, 351, 10, 35, "Output",ExpressionUUID->"1f8aab64-0291-4aba-a70a-da1900cc6eb0",
 CellID->185246950]
}, Open  ]],
Cell[907520, 18652, 135, 1, 70, "TechNoteMathCaption",ExpressionUUID->"ca47c3ed-690f-4d1e-b3ef-81c36d7c99bd",
 CellID->90617371],
Cell[CellGroupData[{
Cell[907680, 18657, 527, 14, 70, "Input",ExpressionUUID->"4f7fd09b-2206-4822-a61d-59674520a617",
 CellID->760328926],
Cell[908210, 18673, 664, 19, 47, "Output",ExpressionUUID->"bb6dfa57-c34a-4848-9c93-5922335b537b",
 CellID->1214865]
}, Open  ]],
Cell[908889, 18695, 141, 1, 70, "TechNoteMathCaption",ExpressionUUID->"a06af547-0bad-4bc3-83bc-345397bee2b1",
 CellID->809946818],
Cell[CellGroupData[{
Cell[909055, 18700, 272, 6, 70, "Input",ExpressionUUID->"89fc304b-f038-4fae-858d-28194346e998",
 CellID->628177917],
Cell[909330, 18708, 18143, 361, 70, "Output",ExpressionUUID->"9f53ab79-4611-48b9-99ab-610bc2af6563",
 CellID->552668493]
}, Open  ]],
Cell[927488, 19072, 152, 1, 70, "TechNoteMathCaption",ExpressionUUID->"819a6a83-54b9-4ab8-a960-250e2a2866d8",
 CellID->806991552],
Cell[CellGroupData[{
Cell[927665, 19077, 283, 6, 70, "Input",ExpressionUUID->"f18850c4-776d-403a-a5fc-282dee5f7090",
 CellID->777243378],
Cell[927951, 19085, 2344, 78, 66, "Output",ExpressionUUID->"50c014f8-c941-4601-95d5-7f1ab20dacca",
 CellID->24878681]
}, Open  ]],
Cell[930310, 19166, 130, 1, 70, "TechNoteMathCaption",ExpressionUUID->"9ff9bc64-f194-4624-bfbb-b54bda29aa4b",
 CellID->962257849],
Cell[CellGroupData[{
Cell[930465, 19171, 295, 7, 70, "Input",ExpressionUUID->"86224c05-d668-451c-a1b5-7009814611ca",
 CellID->574613800],
Cell[930763, 19180, 449, 14, 35, "Output",ExpressionUUID->"43a001ad-90dc-4a57-a242-d95bce0cb527",
 CellID->22940605]
}, Open  ]],
Cell[931227, 19197, 157, 2, 70, "TechNoteMathCaption",ExpressionUUID->"432586f1-953d-4930-833f-b4880144191b",
 CellID->817657987],
Cell[CellGroupData[{
Cell[931409, 19203, 354, 8, 70, "Input",ExpressionUUID->"fa81e9bc-8688-493c-a7d8-41a4e2340a14",
 CellID->88400611],
Cell[931766, 19213, 1552, 35, 51, "Output",ExpressionUUID->"c6b5a596-dc4f-45e1-a87f-fd6fee152b19",
 CellID->264187089]
}, Open  ]],
Cell[933333, 19251, 152, 1, 70, "TechNoteMathCaption",ExpressionUUID->"a90f562e-98cb-4ff2-8efc-a486c208bd1f",
 CellID->834775918],
Cell[CellGroupData[{
Cell[933510, 19256, 406, 11, 70, "Input",ExpressionUUID->"24588ed6-8736-46f3-a39a-27cf0bee4417",
 CellID->283080979],
Cell[933919, 19269, 2783, 47, 260, "Output",ExpressionUUID->"0fb15520-1537-468b-a205-ed45140da02d",
 CellID->104575]
}, Open  ]],
Cell[936717, 19319, 1235, 36, 70, "TechNoteMathCaption",ExpressionUUID->"d7c0f20f-806d-41a6-95b5-378593ce6d19",
 CellID->405355337],
Cell[CellGroupData[{
Cell[937977, 19359, 362, 9, 70, "Input",ExpressionUUID->"71fee645-3cca-4e3a-beef-ac702671b9c6",
 CellID->811262678],
Cell[938342, 19370, 133, 2, 35, "Output",ExpressionUUID->"ccad7069-24bf-427f-85ef-9d76ffe771ca",
 CellID->9194802]
}, Open  ]],
Cell[938490, 19375, 139, 1, 70, "TechNoteMathCaption",ExpressionUUID->"9bd2bd94-323f-4e1f-a362-6038ff2bfe1b",
 CellID->376441899],
Cell[CellGroupData[{
Cell[938654, 19380, 409, 11, 70, "Input",ExpressionUUID->"e86e35a3-cf64-453c-9bbd-f05f70b03ee1",
 CellID->695357144],
Cell[939066, 19393, 135, 2, 35, "Output",ExpressionUUID->"753dda81-e37e-4c0e-b2ab-4c814a84e7c2",
 CellID->11269696]
}, Open  ]],
Cell[939216, 19398, 344, 8, 70, "TechNoteMathCaption",ExpressionUUID->"5d8fe7cb-95c4-496a-a473-3d2d2f95152d",
 CellID->449563358],
Cell[CellGroupData[{
Cell[939585, 19410, 373, 10, 70, "Input",ExpressionUUID->"a7ad3ebf-21e1-4949-8755-0d2a2dc4604b",
 CellID->168888283],
Cell[939961, 19422, 630, 19, 35, "Output",ExpressionUUID->"fc47d679-dd56-45ef-ae30-4e9401ffa585",
 CellID->83774134]
}, Open  ]],
Cell[940606, 19444, 138, 1, 70, "TechNoteMathCaption",ExpressionUUID->"adb8f1b8-8d53-4dc0-b180-eb71fb028075",
 CellID->39057588],
Cell[940747, 19447, 654, 17, 70, "TechNoteMathCaption",ExpressionUUID->"31dfacce-571c-4333-8462-7b6da12806a9",
 CellID->236283598],
Cell[941404, 19466, 147, 1, 70, "TechNoteMathCaption",ExpressionUUID->"daaf1a1b-19dd-4322-adb4-c46706602373",
 CellID->3969473],
Cell[941554, 19469, 583, 17, 70, "TechNoteMathCaption",ExpressionUUID->"560ad241-d25d-45b1-9b0b-70a743fe8828",
 InitializationCell->True,
 CellID->442612299],
Cell[942140, 19488, 555, 16, 70, "TechNoteMathCaption",ExpressionUUID->"8e112108-47db-4f4f-a17b-272603f45175",
 CellID->90642782],
Cell[942698, 19506, 203, 4, 70, "TechNoteMathCaption",ExpressionUUID->"d8db5819-e7d4-4000-8220-05521785e728",
 CellID->112995886],
Cell[942904, 19512, 588, 15, 70, "TechNoteMathCaption",ExpressionUUID->"d7dc1e25-9cbf-490a-838b-afdf48623da5",
 CellID->129906996],
Cell[CellGroupData[{
Cell[943517, 19531, 432, 12, 70, "Input",ExpressionUUID->"d35217b9-167a-4854-be3b-01f5b3f105f7",
 CellID->239135585],
Cell[943952, 19545, 83909, 1595, 70, "Output",ExpressionUUID->"66d92971-c59e-4279-a1ee-739141b70e1a",
 CellID->375946613]
}, Open  ]],
Cell[1027876, 21143, 145, 1, 70, "TechNoteMathCaption",ExpressionUUID->"ee7446b0-40a5-403b-bdde-215444fd24b0",
 CellID->537854770],
Cell[CellGroupData[{
Cell[1028046, 21148, 458, 13, 70, "Input",ExpressionUUID->"35180ea3-39a9-4c9e-b742-0cbcc30a4cd9",
 CellID->400353117],
Cell[1028507, 21163, 943, 19, 189, "Output",ExpressionUUID->"407a9cab-8db9-45bc-9152-7890ca8ecf9f",
 CellID->283072746]
}, Open  ]],
Cell[1029465, 21185, 437, 11, 70, "TechNoteMathCaption",ExpressionUUID->"7366cc46-444b-4419-b0fc-1a6407402307",
 CellID->50294008],
Cell[1029905, 21198, 186, 3, 70, "TechNoteMathCaption",ExpressionUUID->"b6bcc5b8-ce41-4584-801c-dbc823f6c7ce",
 CellID->426907475],
Cell[CellGroupData[{
Cell[1030116, 21205, 472, 13, 70, "Input",ExpressionUUID->"a9d54f0d-8253-4746-af1a-2d0259b42734",
 CellID->283987963],
Cell[1030591, 21220, 864, 18, 172, "Output",ExpressionUUID->"20679db5-8b5f-46b8-8211-76c595af01d0",
 CellID->74394165]
}, Open  ]],
Cell[1031470, 21241, 166, 2, 70, "TechNoteMathCaption",ExpressionUUID->"2f9b2766-3d05-4472-8d69-3d01a2471a6e",
 CellID->69975013],
Cell[CellGroupData[{
Cell[1031661, 21247, 458, 13, 70, "Input",ExpressionUUID->"ed5568ec-e753-4c5c-b6e6-92635033aa7c",
 CellID->447664363],
Cell[1032122, 21262, 1525, 28, 255, "Output",ExpressionUUID->"dd1f0ef3-095d-4fed-ae3f-5a73b25fcf65",
 CellID->405832833]
}, Open  ]],
Cell[1033662, 21293, 154, 1, 70, "TechNoteMathCaption",ExpressionUUID->"64e0c246-9433-4c95-b61f-8bfc6c54564a",
 CellID->629424924],
Cell[CellGroupData[{
Cell[1033841, 21298, 458, 13, 70, "Input",ExpressionUUID->"d0aa78f7-b36d-4676-9714-b1b54804e203",
 CellID->282716016],
Cell[1034302, 21313, 1365, 42, 172, "Output",ExpressionUUID->"56ddab65-3ea6-4ede-92a4-21daf91eafd8",
 CellID->18739418]
}, Open  ]],
Cell[CellGroupData[{
Cell[1035704, 21360, 459, 13, 70, "Input",ExpressionUUID->"afe0ed75-de31-4070-b748-e293016ef3ad",
 CellID->28645306],
Cell[1036166, 21375, 847, 18, 172, "Output",ExpressionUUID->"9986148c-d0c7-4a5c-a5ae-85b81372fcb8",
 CellID->120305284]
}, Open  ]],
Cell[1037028, 21396, 180, 3, 70, "TechNoteMathCaption",ExpressionUUID->"30160aeb-f07f-4485-8605-95d408a0309f",
 CellID->688126866],
Cell[1037211, 21401, 494, 12, 70, "TechNoteMathCaption",ExpressionUUID->"a9f94d20-b230-4e78-810c-a675031b5401",
 CellID->462783584],
Cell[1037708, 21415, 149, 1, 70, "TechNoteMathCaption",ExpressionUUID->"19f52c75-9b28-4b66-8feb-67669209b992",
 CellID->161103956],
Cell[CellGroupData[{
Cell[1037882, 21420, 176, 3, 70, "Input",ExpressionUUID->"e64e6ac8-5592-4e72-bf79-1401a712e97b",
 CellID->630387027],
Cell[1038061, 21425, 969, 26, 45, "Output",ExpressionUUID->"369cac84-fe2e-474b-8453-6314252ca63f",
 CellID->401184551]
}, Open  ]],
Cell[1039045, 21454, 409, 12, 70, "TechNoteMathCaption",ExpressionUUID->"79cbf0ed-340e-465c-a348-5c39be9e5355",
 CellID->478852567],
Cell[CellGroupData[{
Cell[1039479, 21470, 280, 7, 70, "Input",ExpressionUUID->"d860018a-3cd5-4779-aa4f-006713b55d18",
 CellID->2173387],
Cell[1039762, 21479, 596, 10, 51, "Output",ExpressionUUID->"f34e702d-4ea4-4dc5-9c4e-b8415e19b155",
 CellID->59007347]
}, Open  ]],
Cell[CellGroupData[{
Cell[1040395, 21494, 349, 9, 70, "Input",ExpressionUUID->"d3f43468-90b7-49d8-acb6-7c0d9550dcab",
 CellID->48490791],
Cell[1040747, 21505, 306, 7, 35, "Output",ExpressionUUID->"3528c9d3-ad6b-4e84-ad7e-f79ba7e1a3ad",
 CellID->249968189]
}, Open  ]],
Cell[CellGroupData[{
Cell[1041090, 21517, 388, 10, 70, "Input",ExpressionUUID->"4fb3f03c-dbc9-4e66-a1b3-9a94f6426667",
 CellID->144665321],
Cell[1041481, 21529, 135, 2, 35, "Output",ExpressionUUID->"be003799-849f-4601-89bb-7ede3a8a344e",
 CellID->495057432]
}, Open  ]],
Cell[1041631, 21534, 123, 1, 70, "TechNoteMathCaption",ExpressionUUID->"deacbe29-c222-4820-a7ef-e80254ad01cd",
 CellID->66692240],
Cell[1041757, 21537, 449, 12, 70, "TechNoteMathCaption",ExpressionUUID->"b7319d6e-23da-44a3-98c2-50adb6177629",
 CellID->308194261],
Cell[CellGroupData[{
Cell[1042231, 21553, 222, 5, 70, "Input",ExpressionUUID->"61d58fae-a6d4-4d9d-8719-6f7a07bd3d01",
 CellID->88352769],
Cell[1042456, 21560, 181, 4, 35, "Output",ExpressionUUID->"e60f72dc-21bd-4d7e-b8f8-65ff7a45c026",
 CellID->253919081]
}, Open  ]],
Cell[1042652, 21567, 129, 1, 70, "TechNoteMathCaption",ExpressionUUID->"f99244b4-ba61-44ce-a3d9-485b3b0288cd",
 CellID->402833805],
Cell[CellGroupData[{
Cell[1042806, 21572, 223, 5, 70, "Input",ExpressionUUID->"358f0f0d-a757-413b-982f-93ae00f34410",
 CellID->133361772],
Cell[1043032, 21579, 180, 4, 35, "Output",ExpressionUUID->"ac6731c8-04ba-4a15-8607-5b220fb5de63",
 CellID->98606068]
}, Open  ]],
Cell[CellGroupData[{
Cell[1043249, 21588, 233, 5, 70, "Input",ExpressionUUID->"d1a14ee2-d45f-47b4-a7a7-fe6646a9396c",
 CellID->282609746],
Cell[1043485, 21595, 191, 4, 35, "Output",ExpressionUUID->"97ef1641-3598-4eea-8e73-e56d154c45a3",
 CellID->184445757]
}, Open  ]],
Cell[CellGroupData[{
Cell[1043713, 21604, 233, 5, 70, "Input",ExpressionUUID->"b0783c2d-32f0-476e-9948-0b0f3b857b4d",
 CellID->170282164],
Cell[1043949, 21611, 191, 4, 35, "Output",ExpressionUUID->"1ab71d52-d06c-4b6f-8526-90cf83f1a4a3",
 CellID->586261813]
}, Open  ]],
Cell[1044155, 21618, 240, 4, 70, "TechNoteMathCaption",ExpressionUUID->"aea1b186-7caf-4fb9-bf2b-d09548c07a54",
 CellID->406463550],
Cell[1044398, 21624, 131, 1, 70, "TechNoteMathCaption",ExpressionUUID->"dc188418-c05f-44bd-8c4e-c48deb4e766c",
 CellID->300631353],
Cell[1044532, 21627, 313, 8, 70, "Input",ExpressionUUID->"beb465c3-3f0f-47d3-b578-0039ef6ea163",
 CellID->518707108],
Cell[1044848, 21637, 774, 23, 70, "TechNoteMathCaption",ExpressionUUID->"d97a0dea-0982-481b-9c40-f1bc7083ebad",
 CellID->8375492],
Cell[CellGroupData[{
Cell[1045647, 21664, 182, 3, 70, "Input",ExpressionUUID->"719b64f1-3111-4dd4-8198-0bea21ed6d22",
 CellID->835168205],
Cell[1045832, 21669, 193, 4, 35, "Output",ExpressionUUID->"bef85f6b-e773-42cd-9469-7d840085d80b",
 CellID->111339732]
}, Open  ]],
Cell[1046040, 21676, 133, 1, 70, "TechNoteMathCaption",ExpressionUUID->"c959693b-6af8-419f-82b9-e61a8407052a",
 CellID->258727906],
Cell[CellGroupData[{
Cell[1046198, 21681, 299, 7, 70, "Input",ExpressionUUID->"61a497b6-1cbd-4429-b72a-bf0811518140",
 CellID->97985540],
Cell[1046500, 21690, 193, 4, 35, "Output",ExpressionUUID->"edc63cac-0508-4d53-97c6-5bafd3eb9a04",
 CellID->107056388]
}, Open  ]],
Cell[1046708, 21697, 140, 1, 70, "TechNoteMathCaption",ExpressionUUID->"f8b8fb5e-6178-44eb-960d-8bbc4e363658",
 CellID->892397338],
Cell[CellGroupData[{
Cell[1046873, 21702, 171, 3, 70, "Input",ExpressionUUID->"2d3edf4c-7cbb-4b61-8ee9-8e3db183b436",
 CellID->70290140],
Cell[1047047, 21707, 193, 4, 35, "Output",ExpressionUUID->"e8cc5950-dbc9-4133-9a15-99363811d554",
 CellID->100322807]
}, Open  ]],
Cell[1047255, 21714, 154, 1, 70, "TechNoteMathCaption",ExpressionUUID->"62f1ea29-4de0-47ea-9170-9ca4830dd1b2",
 CellID->819912601],
Cell[CellGroupData[{
Cell[1047434, 21719, 356, 10, 70, "Input",ExpressionUUID->"7f18710c-a721-438e-b20a-3774e8f82efc",
 CellID->375659687],
Cell[1047793, 21731, 736, 20, 51, "Output",ExpressionUUID->"6ba019bc-b907-4a05-a53d-2633d532511e",
 CellID->223206235]
}, Open  ]],
Cell[1048544, 21754, 131, 1, 70, "TechNoteMathCaption",ExpressionUUID->"28484c4f-addc-4141-9242-12772d48ed02",
 CellID->652840542],
Cell[CellGroupData[{
Cell[1048700, 21759, 456, 13, 70, "Input",ExpressionUUID->"2f24e8ff-2a22-411d-bf7d-01ddee90b250",
 CellID->115721087],
Cell[1049159, 21774, 613, 15, 139, "Output",ExpressionUUID->"7fc46201-42cf-4a42-aa1a-b16fdd99b76d",
 CellID->424564025]
}, Open  ]],
Cell[1049787, 21792, 122, 1, 70, "TechNoteMathCaption",ExpressionUUID->"6525585c-3051-4328-9726-48e3658d8a86",
 CellID->395670977],
Cell[CellGroupData[{
Cell[1049934, 21797, 163, 3, 70, "Input",ExpressionUUID->"90cc6718-063c-4fc2-9d6e-b95c4373cac5",
 CellID->566799357],
Cell[1050100, 21802, 129, 2, 35, "Output",ExpressionUUID->"00be94c9-5930-4123-9ff1-2c1777d1373a",
 CellID->63581800]
}, Open  ]],
Cell[1050244, 21807, 2199, 64, 70, "TechNoteMathCaption",ExpressionUUID->"e0e4efa2-fc2f-462f-878a-346871875012",
 CellID->255766314],
Cell[1052446, 21873, 409, 10, 70, "TechNoteMathCaption",ExpressionUUID->"06f221c4-3a6e-420e-9281-132cd2c5f8ae",
 CellID->561182461],
Cell[CellGroupData[{
Cell[1052880, 21887, 306, 8, 70, "Input",ExpressionUUID->"b26267a8-a88e-4b11-998c-c9f3ed3a96e0",
 CellID->178093661],
Cell[1053189, 21897, 115, 1, 70, "EchoTiming",ExpressionUUID->"75b36053-ebab-4fd4-84c3-4a96f58d6a14",
 CellID->11277768],
Cell[1053307, 21900, 141, 2, 35, "Output",ExpressionUUID->"043dbcd8-910f-46bb-b1e2-ce4a21954487",
 CellID->135146785]
}, Open  ]],
Cell[1053463, 21905, 317, 8, 70, "TechNoteMathCaption",ExpressionUUID->"f58db4b4-936e-4b86-aada-cea71209cfce",
 CellID->102959412],
Cell[CellGroupData[{
Cell[1053805, 21917, 338, 9, 70, "Input",ExpressionUUID->"b585f376-455e-4f06-b10c-ef2bd26cdb38",
 CellID->65194424],
Cell[1054146, 21928, 117, 1, 70, "EchoTiming",ExpressionUUID->"af637982-a044-45ec-97bb-ad1e6624cc54",
 CellID->593897543],
Cell[1054266, 21931, 904, 15, 115, "Output",ExpressionUUID->"67310363-e70b-466f-8b52-b90d651fa870",
 CellID->74761761]
}, Open  ]],
Cell[1055185, 21949, 140, 1, 70, "TechNoteMathCaption",ExpressionUUID->"dde14458-f295-4034-b96c-42c1ac1c0293",
 CellID->298809539],
Cell[CellGroupData[{
Cell[1055350, 21954, 186, 4, 70, "Input",ExpressionUUID->"24512014-d96b-4551-b5aa-7a0f6b459a9f",
 CellID->7216617],
Cell[1055539, 21960, 136, 2, 35, "Output",ExpressionUUID->"d369b39a-78bb-460c-aef1-c5cf8726addb",
 CellID->150133947]
}, Open  ]],
Cell[1055690, 21965, 131, 1, 70, "TechNoteMathCaption",ExpressionUUID->"7ba554c1-8774-4fdf-ba30-250586c1dbac",
 CellID->6621231],
Cell[CellGroupData[{
Cell[1055846, 21970, 163, 3, 70, "Input",ExpressionUUID->"b499c1cc-970e-4ba7-8fc5-afa7ca346ad9",
 CellID->238009890],
Cell[1056012, 21975, 134, 2, 35, "Output",ExpressionUUID->"b2f4ef0a-b277-4457-ac6a-7e6142c0dc0a",
 CellID->441155702]
}, Open  ]],
Cell[1056161, 21980, 133, 1, 70, "TechNoteMathCaption",ExpressionUUID->"7f518fad-62a5-498a-b432-f6a13fb51be6",
 CellID->784853736],
Cell[CellGroupData[{
Cell[1056319, 21985, 163, 3, 70, "Input",ExpressionUUID->"c47d54bf-f526-45d8-86c0-15fc82c21df9",
 CellID->610437364],
Cell[1056485, 21990, 146, 2, 35, "Output",ExpressionUUID->"b96e6d6d-52c5-4995-ae59-13e4feda1f86",
 CellID->38186909]
}, Open  ]],
Cell[1056646, 21995, 384, 11, 70, "TechNoteMathCaption",ExpressionUUID->"9027f44a-5a42-40d6-b0d8-272bdc6bbdcd",
 CellID->393571408],
Cell[CellGroupData[{
Cell[1057055, 22010, 179, 3, 70, "Input",ExpressionUUID->"bf26b9c2-a90b-40a6-9edc-15853409fe61",
 CellID->878786336],
Cell[1057237, 22015, 136, 2, 35, "Output",ExpressionUUID->"d1ea0b12-49dd-4c79-9485-c3963fb6bde0",
 CellID->369524703]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1057422, 22023, 242, 5, 70, "ExampleDelimiter",ExpressionUUID->"ba87e999-f67c-40da-a475-c2ab4398ea57",
 CellID->404754789],
Cell[1057667, 22030, 148, 1, 70, "TechNoteMathCaption",ExpressionUUID->"d4e3f1c0-4936-41b8-b9f2-641ef783b90e",
 CellID->394823239],
Cell[CellGroupData[{
Cell[1057840, 22035, 211, 4, 70, "Input",ExpressionUUID->"277c5bb1-140a-4367-8f49-95e8f595bc53",
 CellID->627889596],
Cell[1058054, 22041, 341, 7, 35, "Output",ExpressionUUID->"2942f647-ab50-4d31-bef9-d43e7d7fd636",
 CellID->95453950]
}, Open  ]],
Cell[1058410, 22051, 134, 1, 70, "TechNoteMathCaption",ExpressionUUID->"46f4d3a9-a5cc-4a21-ba7d-c1bbf723259a",
 CellID->731096908],
Cell[CellGroupData[{
Cell[1058569, 22056, 517, 14, 70, "Input",ExpressionUUID->"a99f34f5-1dd9-4cfd-bec7-d4eb4f90db18",
 CellID->219626058],
Cell[1059089, 22072, 131, 2, 35, "Output",ExpressionUUID->"5a6ed990-717c-465b-90e8-b4868cf4cce5",
 CellID->169546956]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1059269, 22080, 241, 5, 70, "ExampleDelimiter",ExpressionUUID->"a89fbfd0-d78a-461c-96cb-a46b935d33cd",
 CellID->96742026],
Cell[1059513, 22087, 601, 15, 70, "TechNoteMathCaption",ExpressionUUID->"cfb986fe-9b39-47ba-b733-186f5d3aaf67",
 CellID->575191782],
Cell[CellGroupData[{
Cell[1060139, 22106, 452, 12, 70, "Input",ExpressionUUID->"9b2e32bd-e83c-46ba-971b-f2624e8e809b",
 CellID->154121207],
Cell[1060594, 22120, 131, 2, 35, "Output",ExpressionUUID->"21e21422-7732-4605-b3a3-256caf1da68b",
 CellID->179973804]
}, Open  ]],
Cell[1060740, 22125, 384, 12, 70, "TechNoteMathCaption",ExpressionUUID->"af105472-3a2c-49ad-a9f3-e60c9a7f1cf0",
 CellID->812166021],
Cell[CellGroupData[{
Cell[1061149, 22141, 373, 9, 70, "Input",ExpressionUUID->"194a904e-1a03-43e5-82ed-58a7c855999c",
 CellID->624985202],
Cell[1061525, 22152, 177, 4, 36, "Output",ExpressionUUID->"a35cef06-10a6-4353-8849-a3e29372d31b",
 CellID->51179190]
}, Open  ]],
Cell[CellGroupData[{
Cell[1061739, 22161, 188, 3, 70, "Input",ExpressionUUID->"3bbb094f-afd8-4d9e-917e-8fc00b5c1fe7",
 CellID->368150137],
Cell[1061930, 22166, 178, 4, 36, "Output",ExpressionUUID->"e27c18fa-0ace-473f-9850-2802dbfcb17b",
 CellID->288813044]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1062157, 22176, 242, 5, 70, "ExampleDelimiter",ExpressionUUID->"300ccbfc-a465-43c1-909a-cf81d5cf8e29",
 CellID->758872197],
Cell[1062402, 22183, 166, 2, 70, "TechNoteMathCaption",ExpressionUUID->"22c43446-717d-427c-8724-8ef85c36a4c5",
 CellID->230671479],
Cell[CellGroupData[{
Cell[1062593, 22189, 624, 16, 70, "Input",ExpressionUUID->"766cbd30-55d6-4147-a59d-1cc1785998ec",
 CellID->968332860],
Cell[1063220, 22207, 10144, 171, 166, "Output",ExpressionUUID->"51dace37-36f8-49d3-b97f-bd4f6a4a668c",
 CellID->202642854]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1073413, 22384, 242, 5, 70, "ExampleDelimiter",ExpressionUUID->"f24c0561-8ff7-4952-b8ff-995eb85767e0",
 CellID->115354593],
Cell[1073658, 22391, 350, 8, 70, "TechNoteMathCaption",ExpressionUUID->"18159654-2701-405c-b018-8a78c437bab8",
 CellID->201723607],
Cell[CellGroupData[{
Cell[1074033, 22403, 1455, 39, 70, "Input",ExpressionUUID->"c83f1248-66a4-4918-b1bf-caa29000eb9c",
 CellID->746283470],
Cell[1075491, 22444, 32485, 627, 70, "Output",ExpressionUUID->"fa80da1c-1b49-43f0-b904-8d01c79e3abc",
 CellID->405154369]
}, Open  ]],
Cell[CellGroupData[{
Cell[1108013, 23076, 156, 3, 70, "Input",ExpressionUUID->"2145833e-270d-417d-8a73-dfcd1238268f",
 CellID->317076608],
Cell[1108172, 23081, 16688, 398, 70, "Output",ExpressionUUID->"c37bf87a-01a3-4546-a389-5f8ae6b80033",
 CellID->38873197]
}, Open  ]],
Cell[1124875, 23482, 390, 11, 70, "TechNoteMathCaption",ExpressionUUID->"9f339b50-5073-46ab-b559-6afbfc68508c",
 CellID->199205649],
Cell[CellGroupData[{
Cell[1125290, 23497, 292, 7, 70, "Input",ExpressionUUID->"38468ac1-a3c6-435d-8492-6dbcba6d534b",
 CellID->444434879],
Cell[1125585, 23506, 115, 1, 70, "EchoTiming",ExpressionUUID->"518b49fb-79a4-422e-b727-5d95afdd5fc1",
 CellID->24383746],
Cell[1125703, 23509, 447, 8, 51, "Output",ExpressionUUID->"7c84ceb6-4536-4e6e-bc1c-df00b7167423",
 CellID->280470809]
}, Open  ]],
Cell[1126165, 23520, 162, 2, 70, "TechNoteMathCaption",ExpressionUUID->"c5b0573b-d75e-4cac-833a-0813e8bbc5bd",
 CellID->48779360],
Cell[CellGroupData[{
Cell[1126352, 23526, 300, 8, 70, "Input",ExpressionUUID->"46b6b145-6b17-48ad-8dfa-5a7beaa89a94",
 CellID->59766089],
Cell[1126655, 23536, 438, 8, 51, "Output",ExpressionUUID->"a4668739-8315-40bc-a691-1b7eb76e9e8c",
 CellID->6049817]
}, Open  ]],
Cell[1127108, 23547, 131, 1, 70, "TechNoteMathCaption",ExpressionUUID->"dd62178d-8c1c-4ba1-aca1-740c63f138b6",
 CellID->234878772],
Cell[CellGroupData[{
Cell[1127264, 23552, 343, 8, 70, "Input",ExpressionUUID->"2079eaf2-d394-48cd-83a5-5d4d53a10096",
 CellID->148202768],
Cell[1127610, 23562, 116, 1, 70, "EchoTiming",ExpressionUUID->"3d17b65d-ba4a-4e2d-bffd-d26b33670772",
 CellID->510846472],
Cell[1127729, 23565, 172, 4, 35, "Output",ExpressionUUID->"943f211b-bacd-44a6-8e54-217377f4b7fa",
 CellID->23869527]
}, Open  ]],
Cell[1127916, 23572, 134, 1, 70, "TechNoteMathCaption",ExpressionUUID->"af58ae10-9fd4-4365-b0f2-7866760e00ab",
 CellID->10558311],
Cell[CellGroupData[{
Cell[1128075, 23577, 630, 17, 70, "Input",ExpressionUUID->"ee973644-c5f8-4937-8527-17a00cc833d9",
 CellID->58237670],
Cell[1128708, 23596, 115, 1, 70, "EchoTiming",ExpressionUUID->"9f8dfc6d-d741-4c75-b946-7ae824d87aad",
 CellID->74044636],
Cell[1128826, 23599, 271, 6, 35, "Output",ExpressionUUID->"2922147b-7600-46da-b2d9-b4fde2a85e24",
 CellID->51587048]
}, Open  ]],
Cell[1129112, 23608, 143, 1, 70, "TechNoteMathCaption",ExpressionUUID->"57e21972-6e19-4fef-b01e-fdce50c226f8",
 CellID->74692364],
Cell[CellGroupData[{
Cell[1129280, 23613, 302, 7, 70, "Input",ExpressionUUID->"9211cf51-4147-46b6-aed7-1f17900d35d2",
 CellID->436274302],
Cell[1129585, 23622, 206, 5, 35, "Output",ExpressionUUID->"fab75de9-b937-447b-805b-dc5a6b556450",
 CellID->581705438]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1129840, 23633, 242, 5, 70, "ExampleDelimiter",ExpressionUUID->"59e2a5ae-fce3-4dd7-b8c6-45272d4df550",
 CellID->376301338],
Cell[1130085, 23640, 396, 11, 70, "TechNoteMathCaption",ExpressionUUID->"7e6b4922-3269-49ee-976d-91c2f31eeac8",
 CellID->228255672],
Cell[CellGroupData[{
Cell[1130506, 23655, 291, 7, 70, "Input",ExpressionUUID->"3e60e04b-d5e7-4afc-81c5-3c23a3d969a3",
 CellID->72949216],
Cell[1130800, 23664, 116, 1, 70, "EchoTiming",ExpressionUUID->"efe29f3c-9060-4c81-903a-465db95e4031",
 CellID->196950653],
Cell[1130919, 23667, 428, 8, 35, "Output",ExpressionUUID->"1d0c998b-4a0d-4ad7-8e2a-90d14435d9c3",
 CellID->157710615]
}, Open  ]],
Cell[1131362, 23678, 127, 1, 70, "TechNoteMathCaption",ExpressionUUID->"1e4b92f7-e518-4c7a-bbb9-af945ea9513e",
 CellID->63779103],
Cell[CellGroupData[{
Cell[1131514, 23683, 302, 7, 70, "Input",ExpressionUUID->"24bb35b4-afa1-4f7a-9260-d471bb36ee13",
 CellID->559477600],
Cell[1131819, 23692, 369, 12, 50, "Output",ExpressionUUID->"0a8e641f-0530-4c91-817d-323af6a72a95",
 CellID->854014107]
}, Open  ]],
Cell[1132203, 23707, 127, 1, 70, "TechNoteMathCaption",ExpressionUUID->"dc41bc03-1bd8-49a6-8ed4-83d4ed3271d0",
 CellID->297234162],
Cell[CellGroupData[{
Cell[1132355, 23712, 367, 9, 70, "Input",ExpressionUUID->"2e0a4f58-ddfe-45ed-ae5b-5472d94c4f0a",
 CellID->384199976],
Cell[1132725, 23723, 427, 8, 35, "Output",ExpressionUUID->"35f46a67-f7d6-408d-ba5c-b2d5fc60d1d1",
 CellID->60351254]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1133201, 23737, 241, 5, 70, "ExampleDelimiter",ExpressionUUID->"6756b5f4-9657-4abf-9450-75f41a9b31c0",
 CellID->64234199],
Cell[1133445, 23744, 372, 10, 70, "TechNoteMathCaption",ExpressionUUID->"e1005b44-bded-426d-b06c-955f31c1b9ca",
 CellID->71222372],
Cell[CellGroupData[{
Cell[1133842, 23758, 275, 7, 70, "Input",ExpressionUUID->"3d5ac883-7de1-4322-b013-6d0302ae5697",
 CellID->612463501],
Cell[1134120, 23767, 116, 1, 70, "EchoTiming",ExpressionUUID->"6c8ae07b-ea38-46d2-918c-6d744ea62f5b",
 CellID->339196886],
Cell[1134239, 23770, 438, 8, 51, "Output",ExpressionUUID->"58b0c377-8151-4d4b-99f7-35587cce3e3a",
 CellID->244982401]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1134726, 23784, 242, 5, 70, "ExampleDelimiter",ExpressionUUID->"2570f326-9c45-4e15-8cf7-1f6510d72ec0",
 CellID->795616469],
Cell[1134971, 23791, 401, 10, 70, "TechNoteMathCaption",ExpressionUUID->"38fd6c99-0323-48d5-8c8a-ee87bc0b0f8e",
 CellID->29412029],
Cell[CellGroupData[{
Cell[1135397, 23805, 274, 7, 70, "Input",ExpressionUUID->"1388e7bc-4f63-4e15-844d-ed41ed1f9c1f",
 CellID->13291710],
Cell[1135674, 23814, 115, 1, 70, "EchoTiming",ExpressionUUID->"6c6180b0-5e78-474c-a16f-fd85e6470520",
 CellID->61324748],
Cell[1135792, 23817, 535, 10, 66, "Output",ExpressionUUID->"b4142020-309e-4611-b400-ff0a860c47a4",
 CellID->60671734]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1136376, 23833, 242, 5, 70, "ExampleDelimiter",ExpressionUUID->"a9f4da8b-9717-4440-97a3-a81a826cf0b3",
 CellID->179371755],
Cell[1136621, 23840, 398, 11, 70, "TechNoteMathCaption",ExpressionUUID->"25526e0b-41f0-4cd4-989a-d8d5c8e51715",
 CellID->68513831],
Cell[CellGroupData[{
Cell[1137044, 23855, 287, 7, 70, "Input",ExpressionUUID->"ff80815c-36a8-4530-8230-5c00f280538b",
 CellID->691053818],
Cell[1137334, 23864, 771, 24, 39, "Output",ExpressionUUID->"f0631126-44c7-401b-9618-3b06bd748545",
 CellID->116155483]
}, Open  ]],
Cell[1138120, 23891, 135, 1, 70, "TechNoteMathCaption",ExpressionUUID->"f8c0947b-4543-44e6-a7b6-b8997177e4a7",
 CellID->295365794],
Cell[CellGroupData[{
Cell[1138280, 23896, 448, 12, 70, "Input",ExpressionUUID->"85cb8bb3-a6cd-4c32-96d2-de7e5e27511d",
 CellID->549686470],
Cell[1138731, 23910, 131, 2, 35, "Output",ExpressionUUID->"a90adbf7-efd0-411c-894b-a20ce11596c8",
 CellID->471038115]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1138911, 23918, 242, 5, 70, "ExampleDelimiter",ExpressionUUID->"c2fce5b9-644d-46b4-8060-9f61b38cc84d",
 CellID->439332369],
Cell[1139156, 23925, 414, 11, 70, "TechNoteMathCaption",ExpressionUUID->"c31c990b-0888-4526-b3a1-34c1f0418da9",
 CellID->142865217],
Cell[CellGroupData[{
Cell[1139595, 23940, 287, 7, 70, "Input",ExpressionUUID->"09dae856-fd1b-4cf1-ae42-6ea2c672de93",
 CellID->819507155],
Cell[1139885, 23949, 993, 33, 39, "Output",ExpressionUUID->"4b1bf549-7600-4542-94bb-12c0ffdf9a8d",
 CellID->451625855]
}, Open  ]],
Cell[1140893, 23985, 127, 1, 70, "TechNoteMathCaption",ExpressionUUID->"feaee20e-bee1-46f5-8faf-4ea37940d83a",
 CellID->38534065],
Cell[CellGroupData[{
Cell[1141045, 23990, 618, 18, 70, "Input",ExpressionUUID->"28b056e8-f157-4c59-9aaa-664b1d2bc637",
 CellID->391099469],
Cell[1141666, 24010, 130, 2, 35, "Output",ExpressionUUID->"c48deaaf-96ea-4676-aee0-3bd9787e56ce",
 CellID->22022784]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1141845, 24018, 241, 5, 70, "ExampleDelimiter",ExpressionUUID->"17971e2f-7b7f-48ef-a4f3-d49652c07cc7",
 CellID->86887181],
Cell[1142089, 24025, 397, 11, 70, "TechNoteMathCaption",ExpressionUUID->"5eee0843-df34-4f8c-a3a2-e7168839c76d",
 CellID->119722245],
Cell[CellGroupData[{
Cell[1142511, 24040, 318, 8, 70, "Input",ExpressionUUID->"01505b88-07d1-431a-a852-1294a171456c",
 CellID->681843340],
Cell[1142832, 24050, 1147, 32, 56, "Output",ExpressionUUID->"6eb35a37-fba9-43d0-90f5-a710145fbdf9",
 CellID->567660469]
}, Open  ]],
Cell[1143994, 24085, 132, 1, 70, "TechNoteMathCaption",ExpressionUUID->"8c1b2aff-269f-4c6b-af50-4a86de808117",
 CellID->69391295],
Cell[CellGroupData[{
Cell[1144151, 24090, 252, 6, 70, "Input",ExpressionUUID->"9c0d56ee-42a7-4f16-b8a3-b2279a311707",
 CellID->139948453],
Cell[1144406, 24098, 415, 8, 35, "Output",ExpressionUUID->"9654a30c-14f9-4c13-ab1d-2a847e830e06",
 CellID->46523418]
}, Open  ]],
Cell[1144836, 24109, 137, 1, 70, "TechNoteMathCaption",ExpressionUUID->"367843e9-a815-41e6-b3cc-4777dd3252b9",
 CellID->173598441],
Cell[CellGroupData[{
Cell[1144998, 24114, 347, 9, 70, "Input",ExpressionUUID->"66eb091e-693d-4f63-9d90-f31cbddc3525",
 CellID->298773496],
Cell[1145348, 24125, 131, 2, 35, "Output",ExpressionUUID->"9d57d837-12d4-49d6-8062-69e239b60866",
 CellID->135097200]
}, Open  ]],
Cell[1145494, 24130, 414, 11, 70, "TechNoteMathCaption",ExpressionUUID->"70ee95cb-344b-4b70-9b67-cdd0249948f4",
 CellID->6568824],
Cell[CellGroupData[{
Cell[1145933, 24145, 252, 6, 70, "Input",ExpressionUUID->"df58bb67-34d7-4b0a-ae20-3d3034890527",
 CellID->354624742],
Cell[1146188, 24153, 459, 9, 51, "Output",ExpressionUUID->"c01b9325-6497-40d3-988f-a42401cdad92",
 CellID->229632868]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1146696, 24168, 242, 5, 70, "ExampleDelimiter",ExpressionUUID->"6f45ae32-8d1d-4b6f-91d2-30ad57ac8372",
 CellID->225973015],
Cell[1146941, 24175, 397, 11, 70, "TechNoteMathCaption",ExpressionUUID->"299d3497-c448-425f-ae4d-27ef21071ec5",
 CellID->597709743],
Cell[CellGroupData[{
Cell[1147363, 24190, 252, 6, 70, "Input",ExpressionUUID->"1da378d8-f1a4-495c-909f-94f97c138c73",
 CellID->559137007],
Cell[1147618, 24198, 438, 8, 51, "Output",ExpressionUUID->"625a3339-8cc6-4a3d-ab76-ccc991fe8e37",
 CellID->350769182]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1148105, 24212, 241, 5, 70, "ExampleDelimiter",ExpressionUUID->"9977a560-b8fc-4002-8f54-361c61b49e18",
 CellID->87474974],
Cell[1148349, 24219, 584, 16, 70, "TechNoteMathCaption",ExpressionUUID->"bae659a8-c5b3-46d9-9e0d-0e2aed973301",
 CellID->655288947],
Cell[CellGroupData[{
Cell[1148958, 24239, 232, 5, 70, "Input",ExpressionUUID->"5758b2bb-27f8-486d-b229-db56cae2b888",
 CellID->68325774],
Cell[1149193, 24246, 438, 8, 51, "Output",ExpressionUUID->"c7ee4db5-c947-4c08-910f-4fa78dbea082",
 CellID->411603969]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1149680, 24260, 242, 5, 70, "ExampleDelimiter",ExpressionUUID->"d4c7db51-4321-45ef-8eb1-cb4d274232bf",
 CellID->380977308],
Cell[1149925, 24267, 390, 11, 70, "TechNoteMathCaption",ExpressionUUID->"7c75aea6-20cf-4d96-981d-e82876598f0a",
 CellID->206574541],
Cell[CellGroupData[{
Cell[1150340, 24282, 287, 7, 70, "Input",ExpressionUUID->"bd59701c-0077-4452-8170-8fd2982646f2",
 CellID->571446576],
Cell[1150630, 24291, 971, 31, 39, "Output",ExpressionUUID->"1afb934d-ebb3-4d12-a4a2-69b6889633bf",
 CellID->579836633]
}, Open  ]],
Cell[1151616, 24325, 135, 1, 70, "TechNoteMathCaption",ExpressionUUID->"397e0390-68a0-4509-bdf0-2ff48b03c862",
 CellID->849664802],
Cell[CellGroupData[{
Cell[1151776, 24330, 405, 11, 70, "Input",ExpressionUUID->"15328761-e03b-470b-bea3-0c18054f2c6c",
 CellID->5746910],
Cell[1152184, 24343, 131, 2, 35, "Output",ExpressionUUID->"836000f5-01df-4a70-9154-8ebd114f9b61",
 CellID->145466617]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1152364, 24351, 241, 5, 70, "ExampleDelimiter",ExpressionUUID->"c9244920-c2ae-4d3e-9fe6-2c3a07e364f6",
 CellID->64856443],
Cell[1152608, 24358, 420, 11, 70, "TechNoteMathCaption",ExpressionUUID->"5c8bcf58-2f7c-4ff7-876f-945b58039bfb",
 CellID->200874845],
Cell[CellGroupData[{
Cell[1153053, 24373, 285, 7, 70, "Input",ExpressionUUID->"275b987d-3cbe-4efc-82e8-a02b9fcc1db4",
 CellID->2790924],
Cell[1153341, 24382, 1247, 42, 39, "Output",ExpressionUUID->"830d6089-c213-4047-992b-df152cbbd119",
 CellID->749587632]
}, Open  ]],
Cell[1154603, 24427, 126, 1, 70, "TechNoteMathCaption",ExpressionUUID->"e549e506-e7f2-4eb4-86d6-2568a21f3989",
 CellID->193111019],
Cell[CellGroupData[{
Cell[1154754, 24432, 548, 16, 70, "Input",ExpressionUUID->"7ce600dc-91c5-42de-a6a3-096ad6e31d19",
 CellID->257744413],
Cell[1155305, 24450, 131, 2, 35, "Output",ExpressionUUID->"767a9306-e04c-4ea4-8b02-9cc2fc52e8c1",
 CellID->599489833]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1155485, 24458, 242, 5, 70, "ExampleDelimiter",ExpressionUUID->"4110419f-5dc7-4931-9994-9cea2c6b3d09",
 CellID->506165783],
Cell[1155730, 24465, 556, 17, 70, "TechNoteMathCaption",ExpressionUUID->"d1728467-aa1e-456d-9d64-9d4cc336b306",
 CellID->230848754],
Cell[CellGroupData[{
Cell[1156311, 24486, 290, 7, 70, "Input",ExpressionUUID->"192b318c-c5a0-4ece-955f-ad4ba72fe887",
 CellID->4310976],
Cell[1156604, 24495, 547, 17, 39, "Output",ExpressionUUID->"0c7a55ab-d034-4ac4-8574-2ba240958473",
 CellID->362774086]
}, Open  ]],
Cell[1157166, 24515, 126, 1, 70, "TechNoteMathCaption",ExpressionUUID->"539abed6-0d82-4db2-948c-47cae4db9d5b",
 CellID->373578484],
Cell[CellGroupData[{
Cell[1157317, 24520, 480, 14, 70, "Input",ExpressionUUID->"df0e3b0f-5023-4ea7-afe1-47fcf51b32b4",
 CellID->194038522],
Cell[1157800, 24536, 131, 2, 35, "Output",ExpressionUUID->"36f2a83e-6c64-4299-b5a5-5f0fd4cdc4f1",
 CellID->154595223]
}, Open  ]],
Cell[1157946, 24541, 130, 1, 70, "TechNoteMathCaption",ExpressionUUID->"d7a05787-6f02-414a-9742-fadf8cb21e37",
 CellID->554419],
Cell[1158079, 24544, 126, 1, 70, "TechNoteMathCaption",ExpressionUUID->"a1ede218-d1e2-4fab-822f-a4689f9da609",
 CellID->55753721],
Cell[CellGroupData[{
Cell[1158230, 24549, 186, 4, 70, "Input",ExpressionUUID->"97527786-74ce-483b-aeae-79c170696a86",
 CellID->14566],
Cell[1158419, 24555, 144, 2, 35, "Output",ExpressionUUID->"0478556b-8d2d-4dbd-9907-c54164d93ab5",
 CellID->18188826]
}, Open  ]],
Cell[1158578, 24560, 127, 1, 70, "TechNoteMathCaption",ExpressionUUID->"1ffe97a1-014f-4393-a691-ef4e85d80ecd",
 CellID->563784370],
Cell[CellGroupData[{
Cell[1158730, 24565, 210, 5, 70, "Input",ExpressionUUID->"c226d48b-1655-40ac-895b-d55a7ff2c4e6",
 CellID->20592017],
Cell[1158943, 24572, 189, 3, 35, "Output",ExpressionUUID->"95450a68-7a0a-433d-af3e-6288400520b2",
 CellID->151593018]
}, Open  ]],
Cell[1159147, 24578, 137, 1, 70, "TechNoteMathCaption",ExpressionUUID->"2926dc8e-c7b0-406f-b2ef-9b3a046ae978",
 CellID->237785666],
Cell[CellGroupData[{
Cell[1159309, 24583, 222, 5, 70, "Input",ExpressionUUID->"2530bc27-8969-4b41-afef-b483a4e70a43",
 CellID->298472260],
Cell[1159534, 24590, 193, 3, 35, "Output",ExpressionUUID->"cd9e5393-820c-4613-8e21-bfcec2453b1d",
 CellID->74152669]
}, Open  ]],
Cell[1159742, 24596, 133, 1, 70, "TechNoteMathCaption",ExpressionUUID->"a16aed2f-37fa-4248-ba25-3c8378564892",
 CellID->496593996],
Cell[1159878, 24599, 127, 1, 70, "TechNoteMathCaption",ExpressionUUID->"25bca102-3ddb-4059-98e3-35c7aae25c7c",
 CellID->489039817],
Cell[CellGroupData[{
Cell[1160030, 24604, 207, 4, 70, "Input",ExpressionUUID->"d3fcb365-ab54-4fbc-ac80-d853920a31e6",
 CellID->88658836],
Cell[1160240, 24610, 255, 6, 51, "Output",ExpressionUUID->"8a1968aa-ddb9-4eab-82a9-4b0f6bf50f91",
 CellID->66741005]
}, Open  ]],
Cell[CellGroupData[{
Cell[1160532, 24621, 237, 5, 70, "Input",ExpressionUUID->"2b68496a-c06d-45c2-9723-4c9454ca991d",
 CellID->471752441],
Cell[1160772, 24628, 144, 2, 35, "Output",ExpressionUUID->"2bb09ddc-01cd-4317-91ba-1578df6a351a",
 CellID->374027243]
}, Open  ]],
Cell[CellGroupData[{
Cell[1160953, 24635, 266, 7, 70, "Input",ExpressionUUID->"793f838d-bed0-425b-a5d7-d426729ca4e0",
 CellID->796052010],
Cell[1161222, 24644, 195, 3, 35, "Output",ExpressionUUID->"1c051f22-4445-47b6-9c34-29f9148dc836",
 CellID->199263104]
}, Open  ]],
Cell[1161432, 24650, 181, 3, 70, "TechNoteMathCaption",ExpressionUUID->"32dfee19-2e50-4c9c-8391-d3d95a061bdd",
 CellID->143975390],
Cell[1161616, 24655, 353, 8, 70, "TechNoteMathCaption",ExpressionUUID->"a789702a-61b4-4bb8-81e3-852e2f8f97d6",
 CellID->27787895],
Cell[CellGroupData[{
Cell[1161994, 24667, 212, 4, 70, "Input",ExpressionUUID->"cb755224-414c-425a-9f6c-247ecbfedcd5",
 CellID->236189147],
Cell[1162209, 24673, 130, 2, 35, "Output",ExpressionUUID->"1c882708-b36b-4dba-a0a8-1ab20f0fbad9",
 CellID->557292175]
}, Open  ]],
Cell[1162354, 24678, 127, 1, 70, "TechNoteMathCaption",ExpressionUUID->"fc810b30-7b27-4ff3-956c-a06f30673832",
 CellID->35640176],
Cell[CellGroupData[{
Cell[1162506, 24683, 175, 4, 70, "Input",ExpressionUUID->"6a6e4854-8819-4f33-aa0c-e02cc6e28a36",
 CellID->761312723],
Cell[1162684, 24689, 131, 2, 35, "Output",ExpressionUUID->"6fe740a5-ee25-4fdc-9f9b-2741f130453f",
 CellID->290448543]
}, Open  ]],
Cell[CellGroupData[{
Cell[1162852, 24696, 209, 4, 70, "Input",ExpressionUUID->"9c003edc-bebd-4a8b-9035-fb3cd9bf1f76",
 CellID->60940240],
Cell[1163064, 24702, 128, 2, 35, "Output",ExpressionUUID->"907cd726-df94-4c9f-b6b3-fdf2794e4df8",
 CellID->200714134]
}, Open  ]],
Cell[1163207, 24707, 246, 4, 70, "TechNoteMathCaption",ExpressionUUID->"85ef1705-8de8-4b82-b654-9de6e4db892f",
 CellID->459322947],
Cell[CellGroupData[{
Cell[1163478, 24715, 549, 15, 70, "Input",ExpressionUUID->"560f8828-0669-49b0-9558-6741a4dd6088",
 CellID->132252402],
Cell[1164030, 24732, 50393, 960, 70, "Output",ExpressionUUID->"7ab5285a-9352-459c-be9d-f43ec23141bb",
 CellID->504232840]
}, Open  ]],
Cell[1214438, 25695, 368, 8, 70, "TechNoteMathCaption",ExpressionUUID->"4822f68f-bdbd-49ca-aeb1-0f284bddc6f5",
 CellID->142153006],
Cell[1214809, 25705, 761, 20, 70, "TechNoteMathCaption",ExpressionUUID->"91d5e03c-dd1e-4838-8496-588fede3251c",
 CellID->468172920],
Cell[1215573, 25727, 531, 13, 70, "TechNoteMathCaption",ExpressionUUID->"d5849d2a-302d-4f44-8d88-0a8920d1b70d",
 CellID->75005970],
Cell[CellGroupData[{
Cell[1216129, 25744, 844, 22, 70, "Input",ExpressionUUID->"eb3efec0-0d60-4152-a744-c70f2a5b7f57",
 CellID->696606258],
Cell[1216976, 25768, 116, 1, 70, "EchoTiming",ExpressionUUID->"1c686108-4c1d-4d25-8ae9-0e950cf0c285",
 CellID->114796685],
Cell[1217095, 25771, 150, 3, 35, "Output",ExpressionUUID->"3c616d5a-762f-44c0-96ad-d23a12d5654a",
 CellID->36436604]
}, Open  ]],
Cell[1217260, 25777, 151, 1, 70, "TechNoteMathCaption",ExpressionUUID->"dfa7b79c-212e-4724-b232-3bc53429e538",
 CellID->595536278],
Cell[CellGroupData[{
Cell[1217436, 25782, 894, 23, 70, "Input",ExpressionUUID->"ca927cb3-4b81-4200-9c31-5f4c1aa1ae0b",
 CellID->135456001],
Cell[1218333, 25807, 114, 1, 70, "EchoTiming",ExpressionUUID->"36a881af-1c68-4087-a8eb-7e68bd359ffb",
 CellID->47425443],
Cell[1218450, 25810, 127, 2, 35, "Output",ExpressionUUID->"e2f36e7c-e60b-481e-89ec-49ac22d66ff5",
 CellID->3416495]
}, Open  ]],
Cell[1218592, 25815, 166, 2, 70, "TechNoteMathCaption",ExpressionUUID->"796a24a3-e417-4b3c-98fe-717748591c11",
 CellID->197268136],
Cell[CellGroupData[{
Cell[1218783, 25821, 950, 24, 70, "Input",ExpressionUUID->"5a891e7c-bfe1-472b-9ae0-0c9444018952",
 CellID->325931600],
Cell[1219736, 25847, 855, 24, 70, "Echo",ExpressionUUID->"510df0bd-da77-4d67-a26a-89809ac41837",
 CellID->211601392],
Cell[1220594, 25873, 128, 2, 35, "Output",ExpressionUUID->"0fa85a32-acfd-4570-9d34-176580a3411b",
 CellID->24671701]
}, Open  ]],
Cell[1220737, 25878, 410, 12, 70, "TechNoteMathCaption",ExpressionUUID->"190cab5f-dcb7-4b0d-978d-730b429f839c",
 CellID->109955765]
}, Open  ]],
Cell[CellGroupData[{
Cell[1221184, 25895, 241, 5, 70, "ExampleDelimiter",ExpressionUUID->"3db4bb68-5941-4591-9955-77182d8b09f2",
 CellID->65014155],
Cell[1221428, 25902, 412, 9, 70, "TechNoteMathCaption",ExpressionUUID->"e4d643d2-0839-4e74-9736-06d85f247202",
 CellID->213110306],
Cell[1221843, 25913, 355, 10, 70, "Input",ExpressionUUID->"46cb4607-e799-4b0d-a013-56acf5b4beec",
 CellID->149658206],
Cell[CellGroupData[{
Cell[1222223, 25927, 335, 8, 70, "Input",ExpressionUUID->"ca32e6e0-fb11-4b2c-b513-e05eeae7d908",
 CellID->174838792],
Cell[1222561, 25937, 750, 12, 51, "Output",ExpressionUUID->"7cd37ba9-ed24-4047-aaf7-ee0fe9fb65db",
 CellID->6197371]
}, Open  ]],
Cell[CellGroupData[{
Cell[1223348, 25954, 402, 10, 70, "Input",ExpressionUUID->"95e69e44-66e7-4bf7-bc38-6900064555e3",
 CellID->758948014],
Cell[1223753, 25966, 8460, 209, 70, "Output",ExpressionUUID->"86c4c849-7778-4e86-ab94-fbae93ada2eb",
 CellID->52008308]
}, Open  ]],
Cell[1232228, 26178, 145, 1, 70, "TechNoteMathCaption",ExpressionUUID->"fe1eb189-4714-4b05-88df-137b19a3af94",
 CellID->123945420],
Cell[1232376, 26181, 357, 10, 70, "Input",ExpressionUUID->"28876f7c-fb90-41f5-92c7-842a30f670fd",
 CellID->121949185],
Cell[1232736, 26193, 358, 9, 70, "Input",ExpressionUUID->"dcde7698-ae49-41ff-aee1-d31846a2a7af",
 CellID->112015657],
Cell[CellGroupData[{
Cell[1233119, 26206, 402, 10, 70, "Input",ExpressionUUID->"16e6ca4f-f99e-4b14-8566-c369a53b95e3",
 CellID->397875431],
Cell[1233524, 26218, 14802, 314, 70, "Output",ExpressionUUID->"98dc5fd5-e3f6-42a2-9b84-6948620a4cd2",
 CellID->797935073]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1248387, 26539, 1082, 27, 70, "TutorialMoreAboutSection",ExpressionUUID->"6fac913d-95bf-4700-bac9-85b74e97a0ba"],
Cell[1249472, 26568, 81, 0, 70, "Input",ExpressionUUID->"b32072a2-aa97-4a7e-9231-721ceadd7dab"]
}, Open  ]]
}, Open  ]],
Cell[1249580, 26572, 78, 0, 70, "FooterCell",ExpressionUUID->"688b66c7-1a34-4d87-b300-c0fa6dd7d09f"]
}
]
*)

(* End of internal cache information *)

