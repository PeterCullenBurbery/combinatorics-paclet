(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    194878,       4042]
NotebookOptionsPosition[    179968,       3739]
NotebookOutlinePosition[    182639,       3805]
CellTagsIndexPosition[    182524,       3799]
WindowTitle->EulerianNumber
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {GridBox[{
      {
       ItemBox[Cell[BoxData[
         RowBox[{
          TemplateBox[{12},
           "Spacer1"], Cell[
          "PETER BURBERY/ COMBINATORICS SYMBOL", "PacletNameCell",
           TextAlignment->Center,ExpressionUUID->
           "bce73db2-427b-4bd7-98fb-8f0bf66b7cad"], 
          TemplateBox[{8},
           "Spacer1"]}]],
         TextAlignment->Center,ExpressionUUID->
         "4d581108-0236-4600-84d2-264db5233398"],
        Background->RGBColor[0.490196, 0.576471, 0.690196],
        ItemSize->Full], ""}
     },
     GridBoxAlignment->{"Rows" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {Full, 
         Scaled[0.02]}, "Rows" -> {{2.5}}}], Cell[TextData[{
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "See Also",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "0fe2b901-8fea-4710-855e-1cdcca0029f5"]
         }],ExpressionUUID->"73e82ea1-7801-4ec3-8ec1-59a27c69117e"],
         StripOnInput->False],{
        "\"Permutations\"" :> 
         Documentation`HelpLookup["paclet:ref/Permutations"], 
         "\"PermutationList\"" :> 
         Documentation`HelpLookup["paclet:ref/PermutationList"], Delimiter, 
         StyleBox[
          "\"Functions\"", "SeeAlsoSection", FontSize -> 14, FontSlant -> 
           "Italic", StripOnInput -> False] :> 
         NotebookFind[EvaluationNotebook[], "SeeAlsoSection", All, CellStyle],
          StyleBox[
          "\"PermutationAscents\"", "SeeAlsoRelated", StripOnInput -> False] :> 
         Documentation`HelpLookup[
          "paclet:PeterBurbery/Combinatorics/ref/PermutationAscents"], 
         StyleBox[
          "\"TangentNumber\"", "SeeAlsoRelated", StripOnInput -> False] :> 
         Documentation`HelpLookup[
          "paclet:PeterBurbery/Combinatorics/ref/TangentNumber"]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"SeeAlso"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "2444ec33-d752-494b-99bf-d2a63a3f5440"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "Related Guides",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "9269a733-1a3e-4f5a-b4d8-4a6ef7dc33a1"]
         }],ExpressionUUID->"3e3bd305-62d6-404c-8c3d-5d28aa7d91c3"],
         StripOnInput->False],{
        "\"Combinatorics\"" :> 
         Documentation`HelpLookup[
          "paclet:PeterBurbery/Combinatorics/guide/Combinatorics"], 
         "\"Functions I understand in combinatorics\"" :> 
         Documentation`HelpLookup[
          "paclet:PeterBurbery/Combinatorics/guide/\
FunctionsIunderstandincombinatorics"]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"MoreAbout"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "d90e3696-034f-4d87-95fb-ea5dc7ec59db"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "URL",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "c4d77fd2-419b-43ea-9131-800b751a0ab5"]
         }],ExpressionUUID->"05f62947-81f5-44a5-9cd2-b186fb928344"],
         StripOnInput->False],{
        "\"PeterBurbery/Combinatorics/ref/EulerianNumber\"" :> None, 
         "\"Copy Wolfram Documentation Center URL\"" :> 
         Module[{DocumentationSearch`Private`nb$}, 
           DocumentationSearch`Private`nb$ = 
            NotebookPut[
             Notebook[{Cell["PeterBurbery/Combinatorics/ref/EulerianNumber"]},
                Visible -> False]]; 
           SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
           FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
           NotebookClose[DocumentationSearch`Private`nb$]; Null], Delimiter, 
         "\"Copy web URL\"" :> 
         Module[{DocumentationSearch`Private`nb$}, 
           DocumentationSearch`Private`nb$ = 
            NotebookPut[
             Notebook[{
               Cell[BoxData[
                 MakeBoxes[
                  Hyperlink[
                   "http://reference.wolfram.com/language/PeterBurbery/\
Combinatorics/ref/EulerianNumber.html"], StandardForm]], "Input", 
                 TextClipboardType -> "PlainText"]}, Visible -> False]]; 
           SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
           FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
           NotebookClose[DocumentationSearch`Private`nb$]; Null], 
         "\"Go to web URL\"" :> 
         FrontEndExecute[{
           NotebookLocate[{
             URL[If[TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$204096], 
                 "http://reference.wolfram.com/system-modeler/", 
                 "http://reference.wolfram.com/language/"] <> 
               "PeterBurbery/Combinatorics/ref/EulerianNumber" <> ".html"], 
              None}]}]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"URLMenu"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "3bc8a9e3-88d6-49da-924b-6469b0c60985"]
    }], "AnchorBar",
     CacheGraphics->False,ExpressionUUID->
     "d809dc0d-6fbf-4db2-aa7c-1cc6582bcabe"]}
  }]], "AnchorBarGrid",
 CellID->1,ExpressionUUID->"733a18db-5603-462a-abe1-dde3b1bd4db2"],

Cell["PeterBurbery`Combinatorics`", "ContextNameCell",ExpressionUUID->"c9955c91-e14d-4e1e-91e0-537845a15a24"],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {Cell[TextData[{
     Cell[
     "EulerianNumber", "ObjectName",ExpressionUUID->
      "c11c305b-930f-493d-86f3-ff9dd7aad12d"],
     Cell[BoxData[
      TemplateBox[{8},
       "Spacer1"]],ExpressionUUID->"7257dbba-da5e-49da-9d9f-edc73dafc3d8"],
     Cell[BoxData[
     ""], "ObjectNameTranslation",ExpressionUUID->
      "09104700-c00c-433e-805d-7bbfe1235603"]
    }],ExpressionUUID->"05d3551a-bc8b-4d7f-8936-ff766ef15679"], 
    "\[SpanFromLeft]"}
  }]], "ObjectNameGrid",ExpressionUUID->"bbcff1ff-0709-4bff-9961-\
fa00c719e55d"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["EulerianNumber"]], 
         "paclet:PeterBurberyCombinatoricsPaclet/ref/EulerianNumber", 
         "PeterBurberyCombinatoricsPaclet Package Symbol"},
        "PackageLink",
        BaseStyle->"InlineFormula"], "[", 
       RowBox[{
        StyleBox["n", "TI"], ",", 
        StyleBox["k", "TI"]}], "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "6ddf4d78-7082-4d84-b4b1-91fc494d2765"],
     "\[LineSeparator]gives the number of permutations of the numbers 1 to ",
     Cell[BoxData[
      StyleBox["n", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "4e7ba258-6ef4-484f-bb5c-41fafcdb28ec"],
     " in which exactly ",
     Cell[BoxData[
      StyleBox["k", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "bd1ec774-e1d3-49d7-a35c-d6b78cc72622"],
     " elements are greater than the previous element (permutations with ",
     Cell[BoxData[
      StyleBox["k", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "9b10fe49-069b-47bb-8fca-5427fa0b5466"],
     " \"ascents\")"
    }],ExpressionUUID->"5d101140-52e6-4af8-9567-b322276c349d"]}
  }]], "Usage",
 CellID->426482105,ExpressionUUID->"cb091d47-1032-4e4d-a702-dcd722ea251d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    DynamicBox[ToBoxes[
      If[
       MatchQ[
        CurrentValue[
         EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, 
         Closed], 
        Alternatives[Open, True]], 
       Style[
        Graphics[{
          Thickness[0.18], 
          RGBColor[0.8509803921568627, 0.396078431372549, 0], 
          Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
         PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
        0.68 Inherited], 
       Rotate[
        Style[
         Graphics[{
           Thickness[0.18], 
           RGBColor[0.8509803921568627, 0.396078431372549, 0], 
           Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
          PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
         0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
     ImageSizeCache->{
      13.600000000000001`, {0.5800000000000001, 13.020000000000001`}}]],
    ExpressionUUID->"5998f673-fc66-4cc1-85f5-cf797397b24b"],
   Cell[BoxData[
    TemplateBox[{1},
     "Spacer1"]],ExpressionUUID->"4a989a87-db69-4700-a673-ec02e7199e68"],
   "Details and Options"
  }], "NotesFrameText",ExpressionUUID->"4d9b5aab-3f6e-48b8-b718-39eb6e40fa40"],
  Appearance->{Automatic, None, "Normal", Automatic},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->
   "Preemptive"]],ExpressionUUID->"3d5ee27e-4d8c-4ca8-86a1-66cda1438b72"]], \
"NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CacheGraphics->False,
 CellID->615727120,ExpressionUUID->"940cd3c5-ff52-4a70-9d43-4485d969560e"],

Cell["This is not to be confused with Euler number.", "Notes",
 CellID->442113155,ExpressionUUID->"adf61880-ece6-4960-abad-5727f3a3b982"],

Cell[TextData[{
 "The Eulerian number is written ",
 Cell[BoxData[
  RowBox[{"\[LeftAngleBracket]", GridBox[{
     {"n"},
     {"k"}
    }], "\[RightAngleBracket]"}]], "Input",ExpressionUUID->
  "0321a644-a7e2-4875-a64f-8fe4d93da9f9"],
 "."
}], "Notes",
 CellID->105800301,ExpressionUUID->"ca69fa7b-2ded-4ca1-b561-575af5effa75"],

Cell[TextData[{
 "The index ",
 Cell[BoxData[
  StyleBox["i", "TI"]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "30f8b831-d915-4901-a436-7bf7ca7e2bb0"],
 " of a permutation written as ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     StyleBox["p", "TI"], 
     StyleBox["1", "TR"]], ",", 
    SubscriptBox[
     StyleBox["p", "TI"], 
     StyleBox["2", "TR"]], ",", 
    StyleBox["\[Ellipsis]", "TI"], ",", 
    SubscriptBox[
     StyleBox["p", "TI"], 
     StyleBox["n", "TI"]]}], TraditionalForm]],ExpressionUUID->
  "8734f022-4a3c-47a2-b990-5e0a48333177"],
 " in one-line notation is an ascent if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     StyleBox["p", "TI"], 
     StyleBox["i", "TI"]], "<", 
    SubscriptBox[
     StyleBox["p", "TI"], 
     RowBox[{"i", "+", "1"}]]}], TraditionalForm]],ExpressionUUID->
  "941a47a3-9d58-478a-9ff8-bbd1c7fca901"],
 "."
}], "Notes",
 CellTags->"TabNext",
 CellID->521904482,ExpressionUUID->"82845203-b486-41c3-ba74-7bb442edf092"],

Cell["\<\
I created this function on my own, and then I realized there was a \
ResourceFunction for this with a better definition, so I used that definition \
instead. This is one case of where I both programmed the function myself and \
used someone else's work from the Function Repository for this paclet.\
\>", "Notes",
 CellID->247947816,ExpressionUUID->"455aca93-9776-4324-9cd6-5867d0ac7453"],

Cell["I got kind of confused with this.", "Notes",
 CellID->39057588,ExpressionUUID->"22950d6f-4d66-4b78-aa96-10a446d26d1d"],

Cell[TextData[{
 "Combinatorica's ",
 Cell[BoxData[
  RowBox[{"Eulerian", "[", 
   RowBox[{"n", ",", "k"}], "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "bc8ec03c-c378-41fd-97c0-fd3f11c47f31"],
 " gives the number of permutations of length ",
 Cell[BoxData["n"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "99619b88-72ef-40a1-846c-5146ff63ac03"],
 " with ",
 Cell[BoxData["k"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "1d1ce25f-6f53-4521-8229-ecef9ac7ba0b"],
 " runs."
}], "Notes",
 CellID->236283598,ExpressionUUID->"ec3bb0f4-2c62-4b29-9308-e5de10c91972"],

Cell["This function uses a different index for k.", "Notes",
 CellID->3969473,ExpressionUUID->"2f9a2fd1-ed90-46b9-82f7-acd02c90910f"],

Cell[TextData[{
 "If you have ",
 Cell[BoxData[
  RowBox[{"EulerianNumber", "[", 
   RowBox[{"n", ",", "k"}], "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "0b46da06-b338-4e34-905c-0110f09efe5c"],
 ", do ",
 Cell[BoxData[
  RowBox[{"Eulerian", "[", 
   RowBox[{"n", ",", 
    RowBox[{"k", "-", "1"}]}], "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "87933a0b-bdd5-4d79-8318-14e20b006d24"],
 "."
}], "Notes",
 InitializationCell->True,
 CellID->442612299,ExpressionUUID->"142a31cb-1e2a-41f9-8a2f-391c4dce9b8e"],

Cell[TextData[{
 "If you have ",
 Cell[BoxData[
  RowBox[{"Eulerian", "[", 
   RowBox[{"n", ",", "k"}], "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "49a50f1c-2a29-4e33-8723-a91a99574458"],
 ", do ",
 Cell[BoxData[
  RowBox[{"EulerianNumber", "[", 
   RowBox[{"n", ",", 
    RowBox[{"k", "+", "1"}]}], "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "3b147262-33ee-4dde-88f5-18d065a96c09"],
 "."
}], "Notes",
 CellID->90642782,ExpressionUUID->"5d3fcb86-6466-4feb-826c-bc7cab2fbe44"],

Cell["\<\
This also affects the definition of other related functions like \
EulerianCatalanNumber.\
\>", "Notes",
 CellID->112995886,ExpressionUUID->"6f35b0f1-581f-4b46-8c43-5cf3075508b8"]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "PrimaryExamplesSection"}, Open], 
      Alternatives[True, Open]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{13.600000000000001`, {5., 8.600000000000001}}]],
  ExpressionUUID->"2e0b9711-349b-4b46-9926-3eabd6c2c367"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"42f10bc5-c077-4f2f-834c-5b8d2013aafa"],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(7)", "ExampleCount",ExpressionUUID->
  "97bb071a-edeb-4964-8fef-126623ce87b0"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellTags->"PrimaryExamplesSection",
 CellID->145259871,ExpressionUUID->"68ae0fcb-f50d-4ba6-bf0e-2420c095bc61"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<PeterBurbery`Combinatorics`\>\"", "]"}]], "Input",\
 "ExampleInitialization",
 CellLabel->"In[1]:=",
 CellID->28192180,ExpressionUUID->"b23e9b36-3899-482b-8c6c-1ed35f101705"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{13.600000000000001`, {5., 8.600000000000001}}]],
  ExpressionUUID->"bac6c4b3-abbe-4aa8-900e-386afb04b2e1"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"e547b6cf-6eaa-4f81-bfa7-4116d805aa57"],
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(3)", "ExampleCount",ExpressionUUID->
  "c94b2d9b-b983-4c5a-afec-c3a18e44d76b"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->193189557,ExpressionUUID->"fcd5a2c6-ed4f-4cab-8abe-008b75489cf7"],

Cell["The table of Eulerian numbers up to 10:", "ExampleText",
 CellID->537854770,ExpressionUUID->"29438bd6-6ce1-4334-aaac-3fe4b1e05853"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"EulerianNumber", "[", 
      RowBox[{"n", ",", "k"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "n"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "->", "All"}]}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`Combinatorics`"],
 CellLabel->"In[1]:=",
 CellID->400353117,ExpressionUUID->"006371a9-ccdf-49f0-92bb-7940aa8a86bc"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "", "", "", "", "", "", "", "", ""},
    {"1", "1", "", "", "", "", "", "", "", ""},
    {"1", "4", "1", "", "", "", "", "", "", ""},
    {"1", "11", "11", "1", "", "", "", "", "", ""},
    {"1", "26", "66", "26", "1", "", "", "", "", ""},
    {"1", "57", "302", "302", "57", "1", "", "", "", ""},
    {"1", "120", "1191", "2416", "1191", "120", "1", "", "", ""},
    {"1", "247", "4293", "15619", "15619", "4293", "247", "1", "", ""},
    {"1", "502", "14608", "88234", "156190", "88234", "14608", "502", "1", ""},
    {"1", "1013", "47840", "455192", "1310354", "1310354", "455192", "47840", 
     "1013", "1"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->"Out[1]=",
 CellID->135332569,ExpressionUUID->"36a513f5-3d59-44ae-b4aa-6c946c8ca2b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "cc9d2997-5d37-417a-be0c-5109039f4238"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->15717069,ExpressionUUID->"51f76d5c-6566-4b0f-a9ae-9cdcb33a6a80"],

Cell["Consider the permutation:", "ExampleText",
 CellID->909251125,ExpressionUUID->"4782dd54-d520-443a-9695-3cfa482f0197"],

Cell[BoxData[
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "8", ",", "1", ",", "5", ",", "4", ",", "7", ",", "6", ",", "3",
      ",", "9"}], "}"}]}], ";"}]], "Input", "ExampleInput",
 CellProlog:>Needs["PeterBurbery`Combinatorics`"],
 CellLabel->"In[1]:=",
 CellID->1823612118,ExpressionUUID->"7e021ba6-010f-4286-a13c-ceb92e482da3"],

Cell[TextData[{
 "Here are its four ascents, corresponding to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", "<", "8"}], TraditionalForm]],ExpressionUUID->
  "6cd10400-34f7-45bb-8233-379af01e2ec7"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "<", "5"}], TraditionalForm]],ExpressionUUID->
  "1473397e-28e6-481c-a9ec-fc6cc3b38ae0"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"4", "<", "7"}], TraditionalForm]],ExpressionUUID->
  "fadf93b2-416d-450c-b70c-b0eff302ea6f"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"3", "<", "9"}], TraditionalForm]],ExpressionUUID->
  "c51636e7-a801-4e52-8d3f-b9ba50ad1e08"],
 ":"
}], "ExampleText",
 CellID->13078159,ExpressionUUID->"210b81a9-5918-43b1-8b75-cb4d07139054"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PermutationAscents", "@", "p"}]], "Input", "ExampleInput",
 CellProlog:>Needs["PeterBurbery`Combinatorics`"],
 CellLabel->"In[2]:=",
 CellID->1376129491,ExpressionUUID->"44330443-1364-4641-8bd2-3a4f82fd58f1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "5", ",", "8"}], "}"}]], "Output",
 CellLabel->"Out[2]=",
 CellID->499998123,ExpressionUUID->"cddccdd0-0c54-42ad-a67a-1dd749376a72"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "afadab20-2a50-4957-8eac-4a6725677fa4"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->6054766,ExpressionUUID->"3c0fc781-c9fe-45e8-a360-b6a7aec863b6"],

Cell[TextData[{
 "This counts the number of ascents of the 24 permutations of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], TraditionalForm]],
  ExpressionUUID->"a1a5dbd4-c494-4839-94e1-4d91bafb37d6"],
 ":"
}], "ExampleText",
 CellID->1699811797,ExpressionUUID->"dc661e41-bcbd-4f30-b2c4-11d6e4728473"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Length", "@*", "PermutationAscents"}], "/@", 
  RowBox[{"Permutations", "@", 
   RowBox[{"Range", "[", "4", "]"}]}]}]], "Input", "ExampleInput",
 CellProlog:>Needs["PeterBurbery`Combinatorics`"],
 CellLabel->"In[1]:=",
 CellID->1488198176,ExpressionUUID->"56088dee-aae5-4fe1-b3f6-ba48e7891b21"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "2", ",", "1", 
   ",", "2", ",", "2", ",", "2", ",", "1", ",", "2", ",", "1", ",", "1", ",", 
   "1", ",", "2", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "0"}], "}"}]], "Output",
 CellLabel->"Out[1]=",
 CellID->248859223,ExpressionUUID->"74a02eb7-58ee-4bae-8225-0f3ec6ad2a55"]
}, Open  ]],

Cell["This tallies up permutations by the number of ascents:", "ExampleText",
 CellID->645905163,ExpressionUUID->"4f8c1371-247d-4deb-9e84-b04dce4169fa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "/@", 
  RowBox[{"Tally", "[", 
   RowBox[{"Sort", "@", 
    RowBox[{"Flatten", "@", "%"}]}], "]"}]}]], "Input", "ExampleInput",
 CellProlog:>Needs["PeterBurbery`Combinatorics`"],
 CellLabel->"In[2]:=",
 CellID->221808456,ExpressionUUID->"5b39a924-62f9-4a81-9a8c-d0dea9c42a76"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "11", ",", "11", ",", "1"}], "}"}]], "Output",
 CellLabel->"Out[2]=",
 CellID->316796322,ExpressionUUID->"fe6efbcb-93dd-47f9-bed8-87afaded71ae"]
}, Open  ]],

Cell["\<\
This gives the same list, calculated without implicitly listing the \
individual ascents:\
\>", "ExampleText",
 CellID->1074356342,ExpressionUUID->"fd3769bc-9018-4a9d-9777-4f9af3786b6c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EulerianNumber", "[", 
  RowBox[{"4", ",", 
   RowBox[{"Range", "[", "4", "]"}]}], "]"}]], "Input", "ExampleInput",
 CellProlog:>Needs["PeterBurbery`Combinatorics`"],
 CellLabel->"In[3]:=",
 CellID->1533068896,ExpressionUUID->"73d2a32d-5307-433b-86ac-c3f6982f60a3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "11", ",", "11", ",", "1"}], "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->24045907,ExpressionUUID->"c6d66bf3-3483-4083-9d36-e6983530dc1a"]
}, Open  ]],

Cell["Plot over a subset of the complexes:", "ExampleText",
 CellID->214227103,ExpressionUUID->"1d48a906-dfc8-4652-9d33-1398594b10a8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexPlot3D", "[", 
  RowBox[{
   RowBox[{"EulerianNumber", "[", 
    RowBox[{"z", ",", "5"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{
      RowBox[{"-", "2"}], "-", 
      RowBox[{"2", "I"}]}], ",", 
     RowBox[{"2", "+", 
      RowBox[{"2", "I"}]}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`Combinatorics`"],
 CellLabel->"In[4]:=",
 CellID->618289619,ExpressionUUID->"84adb279-ed8a-41fd-a10e-8763ebeb8104"],

Cell[BoxData[
 TemplateBox[{
   Graphics3DBox[{
     GraphicsComplex3DBox[CompressedData["
1:eJzF3HlUjfvbx/ESocF4kjFFhDKHENsYCccsJUNJImN0DFGmSuVUpJCjKIpE
RGncKqIORYNKHUoKx5gxKT2/9eRz7fW9rL2e9fz1W+usda9eUnt4n+2+7++g
Y71+jm0TBQWFt0oKCv/5T+GI47dHDQ0NUhwvrgxpd734h8SrwOZyi7/rf/Hd
I7Ld2wZ8/8X/OGa0pPPyb7/42u+nDXsafP3FbazUVQ2+fiL/cq/+QMWwOski
6R/lhmkfyD9Gnjaz7l0j+V3nadyYg+/JvV7p56+L+CTxVD7W9WD0a3L/4s33
q85XS5yy1maeNHlBHhCbcVrD+K3E+s8JTtGlFeQb3Ty93le9lASFDTDZV/mY
XL2iYuRk4yrJJoOi4PC2D8nrAmfvDtCtkBxapfTxyI4scp0hmlXvPMskru8v
TI8Pv0y+M32Wzon4Uoluo0vgSrfDXyv9VixZ0fhzyDNfNzPo2vKhxLLx95Lr
TdVJ/O6aJ9nX+DjJu+f1XLfB7oFkQePzIq9Pve5mvDBHsrrxdSAf22TkgtEu
dyW7Gl838pYt41cbD8qSmDa+zrLHozIjTtf8jmRu4/tCbqmhWpzzIkNi1fg+
kneW2J47WXhLYtf4vpO/jpg0qne3W5KNjZ2Q97/qsV/x2k3JjsauyBd07Tkl
86+bkv2NHZLXPG+vaVR8E1+Tr6xxTtjncIu+Rr+8Z+7omTt65o6e4XExPaPO
xddRz/ClZgtWRK6ooZ7hymOqPzaN+kQ9ww+Ul0yf71pNPcN1LSeenBn0hnqG
Zyo+DShSeUk9wztNfv7q1ZBK6hm+XTPV7Mm3cuoZftVzziQLv8fUM3xDWcGX
VI1H1DO87LjNIwWrh9Qz3MfxTqvSKXnUM/z2TWNLz8T71DO8w6GhWxMm3KOe
4QFPS64l3M2knuEPCrZ1SvmcQT3DDa82X9Qv7Cb1DJeu3/Bjdnoa9Qx/O3zN
jvgJqdQz/FZm0aOtGjeoZ3iXEsvD221SqGf4CZ2BUQXaydQz/LJW5+LERUnU
M3zeKP1lx1smUc/wz955bU8OSqKe4Q39Dtq3zyeXolPeM3d8zR09w4vPbGt9
N6ueeoZLa2we1mp/o57hI9Wr7Z7ofKae4TU2S/65F19NPcNf6p151i3qDfUM
17dr53kt+wX1DP9gt7fv2fhn1DM8+Wxxl9rZ5dQz3G/XUZt/60qpZ/jb64ER
qrOLqGf4eBXntnZb86lneFftGr12sx5Qz/BepwZZljneo57hxz3HN3lglEk9
w6MHuBtq3LxFPcMHhRR2nfghjXqGW6+4GLnt7A3qGZ56IOGPR4eSqWf4j9Ac
L0W/BOoZ7lTRWftj3+vUM32eDc2ZeN4klnqGd5izRMOt4Cr1DC83PvjAJTOG
eoaHq6W0O9EphnqGn32S2PnwjSvUM/zuuDHzryRdoZ7hm5rmH1ZoE0M9o0fe
M3f8fe74Gse/QzpbFFjXUs/wlOfbTbapfaGe4UdLFwTmWXygnuGmQdsMkje/
pZ7hmQFjojoNeUk9w7Wr9rR2v/uMeoZX6U7aGtGrnHqGRx1fsah4Yin1DHcw
2PlWYXYh9QxfoamS7WqSRz3D3d8NPBRam0M9w1tNU1dWCc+inuHjvO+10DLP
oJ7hSQmPh/0oTaOe4TP73cobq36DeoYrf7g5oc4nkXqG778RYBRbGUc9w29I
LpllVV+lnuENF6LmGx2+Qj3T811rsrt3dDT1DDd85zmqZtVF6plet469R4bo
XKCe4edXqlWPdjxPPcOzBgX728w4Rz3DfY8Pqd97JoJ6hsfPMPdZ4xRBPcMT
0884SW6QS9Ed75k7eoafcrZvsWt4Hf1c+PdFn9t+cfpKPeM44fSDd85rPlLP
8EvDVi22+fGOeoYHDEpeaD/mX+oZbtK8v+OkDZXUMzxqxr4LHZ3KqWf4iIFj
arKXl1LP8Nq5qm5NVAupZ/hz3SY+b2JzqWf46O4Xow02Z1PP8Jqwo6aBpXeo
Z/jhLtYpzW1vUs/w0DH1+ksLblDP8KxTtl8L6hOpZ/jIAwMqJvwRRz3DP558
ojb5UQz1TK9/3eqSbl+jqWd4kN22fbNnR1HP8PSKbdPHh52jnuFGJp/K9iac
pZ7hXR5+14ndGEY9w+u140r2XDpNPcOrQlLqeyw7RT3DPymoWY/fEkI9w3Ny
x7+dkhVMPcMV1iitNZgXTD3DfZqOWWi6j1yKvnjPcLvI3j/KLsh6ho/QXftM
eYPs/ze4rWl6/dwa2fOEqynXxO0aWE0946jZfOwgH8XX1DN8b3nHuS8vV1HP
8Ni/26wOnP6UeobnO+3q19/6H+oZbhYcMMdrbyH1DG+mHnQ04nYu9QxXbT1i
b2bdPeoZ/qw0/HTT2tvUM/z04tJznY3TqWe4Qyu7t2rNpNQzvEq79HRG/3jq
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
/97nVeFFs8PUMzxmuqX39wIv6hkenuJ9u3PH/dQzXDJbapE+x5V6hn9Z6RY5
vdU26hle9/zutRU5m6hnuEqfskW20jXUM7xz8IeI3Z4rqGe4/+ySmC6WS6ln
+OGPI18pPTannuG9rvb+baDWPOoZHjnq3KQcs1nUM9zd1+zYWv9p1DM8bd2N
BUfdTahneKLiuV4XgiZRz/R6FkU5SCPJpXjfjJPKJ1iNraGe4S7L/j52ef1H
2XjMT0+SKF/oeu8t9QxPX57o3klTdt8TPvNb9PB8v6fUM3zsugJbzX6l1DPN
m1B83cv5az71DL8ff8h5r2+27Pzsp+s9kX5anHKLeoZnKjkqD9VIoZ7hieeP
fDXVu0qvC/zFoiNaM9qcp55pnDBqf6tzpiHUM3xGamgzKyV/6hmuW7DDVm3H
AeoZnlBoM+186z3UM42r75k2KsjGmXqG/zOs5UPvfCfqGV41dO8Ry+iN1DN8
2cb3uc0f2VPP8LZ6rQsmvFtOPcOv9JAM8w41p57p95YlzN+sPod6hj+uWz/K
4Ml06hme32x3btH+KdQz3EG7d2DH5ROoZ7rOrl+4K/b0aOoZPmjyvaNbtw+j
nuHuik2tt74dQj3DVXUTTs3xH0o94/1pFbL237BY2bg7fM1A/b3Nv8rGO+EX
smJn+H19Qz3D820tXqlaPqee4fHLJo9TelNOPcPto0y896iUUM9wlbHuW4Pr
86hn+D51Xzvpk7vUMzyy3lxz7NSb1DPcolZ5+rODidQzPK1HB0niJ9nnJnxd
ZbHmRcOz9HrBLxu27/v6yjHqGUetlcF+s8O9qGf445YPJ3jH7aSe4V2yF77b
mbmZeobrV9ypNb+/iXqGa68/+abg4gbqGb65z9kjL46spp7hGpOLN/Z/YE09
wxOmNe9Uf3Ih9Uz30YN6BhpvM6Oe4ftdI4KcgyZQz3C3z5dz+3iNo57hdlab
Om1XHEM9w2cV3Vm1OWcY9Qz311s14ma9PvUMjwq0q41M1aGe4avjlOta7+xG
PcOTe13t6PupO/WM9yEjroPlAkdZz/Do5g9qjRJlPcPtVSoHZB6U9Qzf/D43
srq+inqGn9Q4OWtzkKxneIpW5iWJ8yPqGR6sOk+v2R5Zz/DKA1mO+1vKeobv
OtnEK+rPdOoZnhbo0TDPLIF6puelZ9jJoziaeobHfXvmPdQojHqGj7N165VU
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
57P1sHAzth6Wfi9bDwsfUC+uh4U3Y+th6TyXrYeFb2frYeEZ+eJ6WLg5Ww+L
owtbDws3qFMV1sPCV+WI62Hp/WLrYeGfFcT1sPg9vGfu6Jk7eoansf0K4HFs
vwKan8L2K4CPZfsVwFPYfgVwTbZfAbyE7VcAP872K4AvZvsVwOex/QrgS9l+
BfDnpuJ+BfCebL8CeAjbr4BeB7ZfAVyD7VcAf8X2K4DXsf0K4OOixP0K4HfY
fgV0vlAt7lcAf9JV3K8Abrta3K8Ax+7DxP0K4MVsvwJ4R7ZfAdxeKu5XgJ/H
e+aOnrmjZ3gO208GfpXtJwMfwvaTgb9n+8nAH7H9ZODabD8Z+Eu2nwz8CttP
hvY1YfvJwJ+y/WTo8bP9ZODqbD8ZeFe2nww8jO0nAz/I9pOB8/1kaN0S208G
/oDtJwPvHCbuJwP3YfvJwFuw/WTodWP7ycD9Rov7ycCjVMX9ZHCMKBP3k4Ef
GCvuJwM3UBT3k8Hf4z1zR8/caR8T5ugZHsX2+4IvZPt9wRuMxf2+4HvYfl/w
Dmy/L3gs2+8Lrs72+4Lbs/2+4D5svy+4BdvvC36P7fcF38z2+4Insf2+4D/8
xP2+4JfYfl/wMrbfFzyC7fcFX7ZB3O+Lfu8Icb8v+Lsscb8veNw/4n5f8Jqe
4n5fcD1tcb8v+G223xeO5p7ifl/wLzrifl/4czn7Mf7SM3e2H+MvPXNn+zFK
5OzHKJGzH6NEzn6MEjn7MUrk7McokbMfo0TOfowSOfsxSuTsxyiRsx+jRM5+
jBI5+zFK5OzHKJGzH6NEzn6MEjn7MUrk7McokbMfo0TOfowSOfsxSuTsxyiR
sx+jRM5+jBI5+zFKsB+j7/++Pj+kOKI3dM79YOPX9PduG76aMswylX4u/Fta
lEe/E6n0Nf4e//nc8TWOusMafz6+ps7P3zy2SlP2+Pn+pez7pXK+nz8e+nuq
6Y2Pv52af5u0TQ1SHPH9bRu/pj9fc+dNlOaUdPoaf86/H0fDzMbvx+OT9/Px
58HaHiOUJbfo58t7/Ph7lqmOXZqtT+ffz99f+nOrG43fj++T9/jx9/B48Hm1
fOnorjkvZZ2s66B5oHuXml/253xaNd7FzvDLL48Hn4ceflv9+/avIx+mXdbb
N0e2LyK8u4N2k2lzf913Dt9nYL1RL6SmhvzRv5MLOobWyd0HbHjk0zELND+T
v19/U2l8iWw/JfhSjYH38kt+/LJfjdaKuDu1Wb/u+4Hnqdh78aahCjLX+fn9
fNwH39+k8fvJrX/+Xn5fHY9T3v3JwY3Pi/zxz9dB3n0e/cbXjbzHz9eZXy+P
+vm+yLvu+Pk+km/62YO887ef/UjkdEKekD01tOu5r9KiiJbaTabKessf9/qK
fegXad31CYtM/pB1ZRn7913rk9+ktvOWf1mUJ+vn9vz5eVqhNdISP9fe6uqy
Po3bKut1camV4kiPZ9LhjGMj66TZLVY5RubI+qn0mdsvfs13aUl1skLacFmH
hpZ5ixwL6qVqFc4xAYqyrswt9zQpb1YvHbU7df/3lV/IWxbGx0W6/pAW3rj3
vPCPj+Snu15c8t6gQbpylYFtr3fV5EV7S66ZFzVIDw2+eSjAVtZVQ/Esr5Xh
DdInCZ7NCytl/Uxa9LuSzr/10rBinfj2RbJO9rh3iP2RWSvdYPp+YP/+tfJe
///zdZb3OSDv/ZL3+SDvfZH3+SDv/ZX3uSHv/ZX3eSLv/ZX3OSOvE3mfP/J6
kPe5JK8reZ9X8rqS9zkmr7f/7+ebvD7lfb7J+zyU17O8z0N5nf+3Pifl/f/1
3/r8/B+0HlcC
      "], {{{
         EdgeForm[], 
         Texture[
          GraphicsBox[
           TagBox[
            RasterBox[CompressedData["
1:eJysvWVwHEm3rX3iuxHveGyPaXimW2NmkMWyJJNsy2xLlklmlJmZGWVmZmaW
xWxBk1otMzNLAx74d9femVldLclz3hvxRfQ9ce6JGLmrVu61n7Uzq7rK4PFh
w/+///mf/5lcCv8jbND0FpMmDZrZrQL+P93HTR4ZOW7Y0HbjpgyLHDbJb/D/
wf9xvfx/9L+HbnnadduTrjseddn1sPPeB5323+tw8G77I7fbHrsVciK/9WlH
8Fl78wu5TS9ZA66a/aJNXrHZnnE3vOLTvBOSfBLifBOjfZOu+CVf8Es+45dy
wj/1iF/aAb+0PX7p230zNvvcWO+dudora7ln1qLG2XMb5cxoYJrsYRrvYxrd
xBzZ1DykhXlAK3NEiKVHe0toJ0vHLpY2YdYW4dYmPaxevaz1I2zV+tq+H2qr
OC634ozcCgvt5VfZy23K+2pXXtlDjjKnHKUvOUrHOr5MzS+Vk/+FPf8/N+2l
71q+epBd4XHG189Tvn2V8P3bmB8/XP258ILh9zNufx7/5Z/DVf7eU+OvLXX+
XNvgj2Xuv8/z/G2ad+FY34/D/D/0CXgXGvSmTdPXwa1fNe/wMjDshX+v5979
nzUe+qTBqMd1Jj6qPv2B29x7xqW3jWtuGrfkGfbYDEfMhrNZhqsZhsQUY2Z8
VfO1OrkXGuWf8rpz2P/BnqAnW5u/WNvq7bKQjws6FcwJL5jRp2DyoIJxIwpH
ji0cPLmwz4zC7vMKwpe967b2JVTovOcBbnur03lBl62esdm4vb5JV/1STuF+
+mZsxW30yF7Q0DQ1bOPz0M1PQ7dCssck2Z4Hnfbd7wjJDt9pdxSS3Wx9iiRr
cZ4lu2KBZN4x2R5xmUqyeN/E6/+FZMuKSOZrGh1Akg1uae7f2hzR1tK9g6Vr
J0uHrpbWYdZm3a3+Pa0eva11+9gq97N9HZlbcWJuhdn2Ckvs5dfklduS99Xe
vLJHHWXOOkpfdXyZkF8qI/8LS/4XDscXt21l7pnKPcqs+DTtmxdJ372O++F9
9E8Flw2/nTN+OvnLX0cr/7O/2l87av+5od6nlY3+WNj4t5lev070KRjh92FA
k/fdA9+2b/q6VctXLdq9DOryokmP5z59n3kOftpw5OO64x/VmPqg8ux7bovv
GFffNG5yGHblGg5bDKezDVcyDPEpxoyEKubo2rkXG+af9rxzxO/B3sAn25q/
WBf8ZnnIh4UdC+ZCr4iCKYMKxkeSXkMmF/bV9FpTRC+LZ2yWd0Ii3VXSa79v
xhbvzFUe2fMbmKZ0W/cybMPzsE3PQrc+7br9cZedjzrvZskO3OtwCJLdbnv8
ZptTjlZn8iBZs4u2wCsW/2uaZOneCclOyZIg2VlXyXa4SrZQSNbQNMmTJBsV
YB7ejCTr19rcu60lvIOlS2dL+66WVt2sTbtbfXta3Xtba/exuQ2wVRqVW3FK
boV59vLL7eXW55XbnvfVAUfZE44yFxylrzu+TM4vlZX/RS6V2Jd3RIndqFRS
iVX+51CVv3fX/Gtz3T/XNPhjqfvvcz1/neJdOMbv4+Am73sHvO0c9KZ189ct
Q1416/QyIPyFX8Qzr4FP3SOf1Bv7qNbkh1Vm3XdbeNe48pZxg8OwI9dw0GI4
mWO4dMMQm2pMS/zFdL2W7VIDxxmP20d97+8LeLy92fP1wa9XtGG9uhXMhF4D
lV6ThF6F3ZdCr1dSr8NKrzhNr5M6veZhqYdHvUI9dlv/ImzjM/xXocIbd8Mb
73fcT5KxN95sczIff6rlOTskwx+EZD7XczzisjwhWTwkS/BNjKH6TbrIkp30
Tz36ecnmNMqZzpKN8zONCiTJBgWb+7Ux92pn6dbR0rmzpV2oJbibNaiH1aeX
tWGErUZf20+DbZXG5lac7uqKhx1lTjtKX3Z8GZdfKi2/lIlL7FZumXvmcg+z
Kj5N/+ZFMpXYO12J/X2k8t/7qv+1vfaf6+t/WtHo9wUev83wKhzvWzDc/0O/
gHdhgW9CYImtXC1x2JMGox/Xnviw2owHbvPuGpffNq7LN2yzG/ZbDcdNhguZ
hutpxpQkY05MDevl+nlnPW4d87m3P+DRjmbPNwS/Xtnm/aIOBfPCCmb2LpgK
vYYXjhpTOHRSYT/oNbdkvTykXpdZr324gd6ZKxtnz8NNC1/5Jnz1a/wn3dZB
sudhm5+RN27XvJHb2WFnO2tJ7QySWZtcNftKyTK84lMgmc//Itk6KVm2lKyR
aZIXJDNDsmHNSbK+bcw921nCOlo6dbGEhFpbhlsDdI3su2G2ihNyK86yV1is
c8VjjjLnHKWvOb5Myi+Vmf+FLf8/+Xml7ljL3s8pjxJ7lvrtq8SSSmwXldin
qIZ/LGn8+2zPXyf7FIzy+ziwyfsegW87BMESX8MSmypL9BhCllhn/KPq0x78
MueecYmuhR01G85lGaLTDUnJxqzY6pYr9eznGt887nPvQJNHO5s+29jy1arW
7xe1L5gXWjCrV8HUAQUThrFeEwv7TRd6vZd67S6qlx/pdcIvba9vxibvzBVk
TaaJ8M/wFW/DV73uxoUmvXFLEW/8TDuDZNE5aI5CMvwTPomxvknX/JIu6SQ7
+DnJGuZMwxfwMo31M48MIskGtjL3CbH01LFHc7CHrpFVGpFbcXJuhbn28svs
5dcpVzzpKHPRUTpGgUde/n9u5Za+yyX2JP1rKrH4kkpsW+0/19X/tLzR7/M9
iDrG+X4c6v8hIuBdF1his9ct2+gscdDTRrDEcY9qTnlYGZa46I5x1S3VwsyG
M9mEHAlAjriqlqt17efdb570vnvI/+Gupk83t3i1uvW7xe0K5nclvab1J71G
jy4cNrGw//TCHnMKuy95jzsPhPgv9JrjbprYffEHSBy+/K0sNOmNDCHFvLHd
EZd21vSiJBAFjalSskQh2Tm0S5IstQTJPCBZzmxNMn+SbCjjYh/GRcke3Yg9
/HpaG3MjMw60VRqdW3FaboUF9vIr7eU2Klc84yh9RQceKLHbzhL75mXxEjtY
lUpsU91Pqxv+sbjxb7MUdfRv8i488E1bzRJDnZZYf8zj2pMeVp15323BXeMK
XQs7lWO4fMMQn6qQQ4eIT7e0eBnV+u3itqTX7J6k18ShSq9pUq9wqddDFAUc
TOmVAL38pV4bvTKXu+fMbmya0H1+QfeFH+i/0gqNvFGDEJ036lBftTMXAvHU
oDGROF8n2TGWbK9OslVeWUsBqPgODU3TsGy8TWP8zSOEZBou6tmjl7WRaGRD
bJWA9zNzyRWjdK543lE6WoEHs/2XYPuH2RW4xL4tocT2Vv9rK8C+vgD7X6cq
6ugV+LYTSqzF6xZtXxW1xAmK6pfdNq7VWlgOtbCYNIUcFxs6TnveFogokH4p
kL5LweweBdP7kV5jRhUOn1A4YFphT+i1GHq9Rhvq4qqXD+l1yT/lOJY66ZW1
zD1nFriaJJ5X0H3BR5dCi1KFJrxxWzFv1NrZOdHOmEBicnScLyS77Jd8/r+Q
bKq7aQIka2IegVDGhK/hIrFHuDWwh9W7l7UBGlk/23fDbYT3c+wVirgi4lhc
/pcAD7OT7cs/yqz0LI1LLFaV2Gm3P49xie2s9efGep9WNRRgXziBqaOvCGKa
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
7/24jhlYoIukXYd1czi4XUwW4ot4Ys06j29mrFhdxsAXw2opvRMIh/cy8Tus
sRtbBPj57IQ5QSdUzDiqmMGoUBk+72hCrl9cX2txPcTiUo9sML41SKNF+k8d
zcJkrxlWxyK7VYw1Pkzg8LrDDS/jlI/foLCRXXrzG8HGv2oC8+0B82K+YJYZ
boxiePgOb0itdks1Y/S6pHp5xkrKaojFdYRLtqwm2bJSYle0iOqBsQMLdOFQ
0Ii17jgfSnBifeuLhfNHBu++WADCFwMgVMZwY2s6AV6jjHAnVMOlmHFQGP5Q
wsc0yDHFdc+4bx4Y+e3DLC54ZGD8+bSnQBrNGmN7vNiuPmyGfIjhNzZDfZ7g
lw0g+ctC8jq8eObFfcIGNpZyQ6PCYfejt1uYz6D5ErPcJ5k7eZKx32A29Vpj
9ToU0iub93lfvyroRa54McVwBcuqKKqsplpi99HC74HewArevCgUFLRifaGO
2G0Ob7vkGmJNqOjCEMNZLQXCEGPYsTU184oCfKgTavQUYEbhwQRh+J1keDHI
WlzzWVzTWFyv4YsapLv9eY7cFR/VONJ4Gu8ylA9I9ZshPrpeYWINIXk3vLj/
+cYSDzYWM4kab5LDOy3MZ7Yqbi90J9MnyYRRU7DD4eASRHa+Xsobi0N6Wa6I
W1bIlwyxG7RQe6U90AYXoYG116DgDoOCarJMfPF/xELiZHwx6R1xrgIhGQPW
ODy2BOA11NVOqCG8dEKLGUUHDMPDIDN9yjkeVVz3S3ENMx7ZYLwljVa0XT1D
2+Pxac3iB//INSQfDK/Pb+UHG3DKey1sLCy9+S3C4UDolSgw36Gkgb/6j2HU
GLNNzui1OYVreTy9zpqFV5OuCi07F3yNslJin2vtleuBDtrdwNKw/aCioC8W
4wsn1tmwWBdjxVKr5YDwlZ6WMTTRfdLmTgD4cCe00dPOBxQzwPDWICN94qFk
qLhwLll9CDyywfiANBDwduXTDENdM+QjGkvvxyMgJHnEUG54MeY9bGEjl7cb
pjM57HdUk94nnilJF/NFs9xdgEE4QaoDYW+w/S+eXnPPGb3GVNQw4ZItK3xp
luUR+5zYHuhBuw4sny4Mt0OsjeqIrVj+wzFRYjHLfc5ZLUfvFgidNXZjSwA+
u8kFhrpBJ9z4BAwXcl2DGcrwW5k+Xau41CNbjHdP1WTSdvWoFzTDKbYZLkes
ISQfDK8DOrzglD8nbGzkNxvzCIcjvqjUmzsAO5fUEvPVtrgVFwD2YBiF1ZrJ
+JItO75euU6vi/JDyWT3ymqijW3ftMRu7VWoByq0u4EVogvvEZljcMRrT7Rc
faq1vkuir134Yk27jPPHieWdbYihVisAQssYao3t2DIA/26jH0KdsNZJNVy7
7i/eU/kIMWOPGmSmT1HF9frZe1+zAdQAYHxKN5BGOkgDX4S2waNCyKAGp4be
PVn0oJK8GV677PAqwvDSxwt28BhlGZOoycdueSWA+eSnSxqJWdZwQxiP4eG4
6+jVits1zSYl7g+RsqrJskoKykrRwtkrvwdGDSylC4q1M55Yq64j1o++WOqL
+zqxCISOMZDotsPHaVmZV9/KAMDPa3x+YcNzrhNqCL+1eumOB4EZ+PAJUeEu
a5BX89xkwcnEOV5xjdIACh5ZMd6RRkZDfaem3G+GM/D2k4k11uNTwysf36XD
61sOL3HKxYSNbWU3rOMKR4XDYWZ17UPchooFm5nFncRG1Y0MFGZg2Dudh19L
65pNZUYv6U5Gr3nUazL0smU1xUOLORYtFrs80IN2HVjGDitdKApq3t4kH444
84N4YmX7YuGURBMn9cV9o4DQYww3tqY3/2mWjTJCnbDmCc11FTP2Jx4gw6tB
Xstzk6jiwqG/8ciK8Y40aLsud2AGNdBrhrMewwMNOVVB8nZ40Xnhg42viuGU
FTa2cEOUwuGEAOYfpvlq2qb4ycxI50aRF/jZfEiv1Dh6ncKug3nfd5h5QX4x
+du+Blq4HrjC9kA7sPaagSV0kawPn+0s8k2We54pvlgzrFjMcjXEEKsV0PsA
nEI6xlBrLGPrjZbInWZm/DinSdAJc9kJneECZlRRzFCG3xxTXDNOV846U3k8
ziWrGY8MjK/TFYGhkAa+06DtetY2wxFeM1z4kCH5fFwacsPr7KFK6pQVNj6y
cDjjGI6VmfT+u0tJ9Y4lqWKWNdxoGOnJ8PCVmgjn3+Rh5VL3ghLWNqpeq05h
3YHu2MyCXuGymhfugS64QMrEgaV22NCFvlInKJi2pSRKrNBbWlFiZQViqS/u
EwWEvcp9a4yxFQA8owzbCdegE8Jwaa5LzNCosIAGWYtrRZzicgGUwXiSBk5P
MmC72rMZ9mMzHG0fwpv7CJ5OUJK3wwtnXgdvO1MEp6ywsfs41mcpHL4ZwPzd
NF/1aJafah7p0jDSS5wUw3mn17KQXlyzafSar9uhsQkwjBZ+D3TBhRtYaodJ
FxYFHbc3zS9t/qfFciFGYLUsEBrGiBpbBPhZzS5FdcJ1yYHhAmYwKrQMr+mT
K65sFFeiFpcGUA7ju2mmcQGkQdvV0WuGY5PwneHbjDWU5NdXrrDD64d95k0r
Cxv44DCft1Hm8VhZYJ7fiCbqkvx2xc1bF7djGNUrBXq9KvOIh5VRehXG0wuf
cMT2QFxsxMBaS2j3B5ZHF7sOI8J1Ypn4QiN3foARK9b0kFjOakUBoTJGzNhS
gEeUsTj9e9MJU9AJiRnHBDMK7jVRIRle0yctrsW2uKZjtZqmu+qRFeMD0qDt
aivNsL42Q2SGE/DRNR5hJMmbGMoMLxPz+rCx3cJhtoV5PmpQxZplhBsZka7p
kd4pRwbXuK5eTc0aW+7qkd8QyxsrrL3ye6AP7ZsDO2yCJsPt9beG4gvzgur1
xdIsl774+RHGajkgVMYY2T08tpg7uShjUbrthHVOa/QEwxVghmF4GuQ8nptE
FdeEs/eNth5ZMd6RBgNezaC6ec1wUi28m8lYQ0j+97XB8LrwyR3nMLwC2NjH
JErhcLaFeWu+zLsGGkalRfognD8ygosB3+LHGyG96m8tNgvYde2w0av8f8Rp
wso=
             "], {{0, 144.}, {144., 0}}, {0, 255}, ColorFunction -> RGBColor], 
            BoxForm`ImageTag[
            "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
            False], DefaultBaseStyle -> "ImageGraphics", 
           ImageSizeRaw -> {144., 144.}, 
           PlotRange -> {{0, 144.}, {0, 144.}}]], 
         GraphicsGroup3DBox[
          TagBox[{
            Polygon3DBox[CompressedData["
1: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
3dZckaf/AzScTaE=
             "]], 
            Polygon3DBox[CompressedData["
1:eJwtkDsOQUEUhid3RH0bCxBqa2ABGgtQqIVS4a5DWIJeLAFBPG4Qr3jGKyiu
FfhOzhRf5ktm/pzzT7JULVQ8Y0wCYjC3xgScdQjxLXTxBezwI9QINOCE3yDE
I7jjI8jxNgtjfG81+4MDPrF6V4Qpvoam0Rkb/At5KMtcyVrdpQVLq4hLZoW/
IeMyH+hDmrsUDPALdDzd8Yo/wXeZFwytvpWdZXfpJN0kc8YfVrv5LtuDuNEZ
Mks6SbcI2vjMarfA/eUfFL86Xw==
             "]]}, Annotation[#, "Charting`Private`Tag$159483#1"]& ]]}, {}, {
         EdgeForm[], 
         GrayLevel[0.82], 
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1:eJxNk71KA0EUhTcZLV0fIVnbxEeIqeOmsjVpbDQKWmu/gQREwiISxP9fNPiD
CqKI/w8g1r6C8RE8l/mKFCdncmfuveee2YlmlqYWs0EQVAQn3OtnWLwjjsRZ
4mPwkNDSYlKYE8r6nw/82Qfnz22LR4SiUBBWFJsWasKEkCPnT8VHtR9Sr0DO
ODHb+4Svnc8pU+NJ/+viffFX1tfqC2vO6zNtj+jbc753iVzr1eBMVVgQ5oV1
oSM0hZiYnTO9Cf1D9BVBPKDduMJ+lb06PU1HgzMWf8aXQ/rE5NzCN0IqtJnH
NCVoiQd8KuJ1CPp4Ybmb5HeYLaPcH/G3+I14V1il14Ywi9fm+ZXzntW4P4Np
XhaO0G9znFl99TxHo9Ub/G7s27h0XteF837UqWt6Q2Y4wC+721/u5c75O03x
IYefJWawWU7Fr3ZW6xPxi82i9bH4HW2m8cN81brHPbS4rwS9eb7tNvEmHiV4
k6KlSzzD+4jI7TB7gvcpfm45/6bsbe0674m9lX9831/w
            "]], 
           
           Polygon3DBox[{{947, 844, 813, 946}, {942, 752, 721, 941}, {951, 4, 
            5, 925}, {946, 813, 783, 965}, {926, 34, 4, 951}, {930, 93, 63, 
            955}, {944, 783, 752, 943}, {932, 122, 92, 956}, {940, 691, 661, 
            963}, {941, 721, 691, 964}, {934, 151, 121, 958}, {956, 92, 93, 
            931}, {958, 121, 122, 933}, {929, 63, 33, 953}, {935, 181, 151, 
            960}, {936, 211, 181, 961}, {953, 33, 34, 928}, {949, 875, 844, 
            948}}]}]}, {}, {}}, {{
         GrayLevel[0], 
         Line3DBox[{921, 1, 917, 902, 31, 61, 91, 121, 151, 181, 211, 989, 
          962, 936, 961, 935, 960, 934, 958, 933, 959, 932, 956, 931, 957, 
          930, 955, 929, 953, 928, 954, 926, 951, 925, 952, 927, 5, 4, 3, 2, 
          909, 921}], 
         Line3DBox[CompressedData["
1:eJwt0kkv3lEUB+B/SWroS7WmUprYNvoF1AcQdl21lhZSCS81U7SGYCFvLESk
6VIXttL4ACRUzUOLVszUnPoCeCQWT85Nbm5+OefcnJLKN+EHQRBEiOEhk9FB
MMUPpvnJDLPMMc8CiyyxzAqr/OI3a6yzwR/+sskWI1zJeSz4FUWU0cM3Jtjl
huyoIHjNOxrY9naHXfbY54BDjvjHMSeccsY5F4xRTgVhKqniA9XUUEsd9TTQ
SBPNfKSFVtr4xGfa6aCTPr7SxRD9lFLAS0Jc6mORUQao5y15ZHGt7x3GGaab
9xSSSyL/zW+Z7wzSSDH59Mr4wou7OzVCtnMWz8kkg2ekk0YqKSTzlCck3e2I
RBII8Yh44oi9/zO3fIBMnw==
          "]], 
         Line3DBox[{939, 661, 691, 721, 751, 781, 811, 841, 906, 923, 871, 
          919, 911, 872, 873, 874, 875, 1006, 949, 948, 947, 946, 965, 945, 
          944, 943, 942, 941, 964, 940, 963, 938, 939}]}}}, 
      VertexNormals -> CompressedData["
1:eJy0fHk01m3bdYNoIBkyJEpJKfMYqqMSKRESQmWMhAYZMlemEDIUITOFzEPG
k0yZZZ7nebrMmtT3O6/ve/97n3etb63ve9b917Huda/7ua/d+dv72HsfnPoP
VY22bdmyZWH7li3EX//hf4vw/3vepdzO/aFrHBBzbcPZiDGoog6Y96PvAEf/
CulHU2PgEb9+Vm18DMLi2OvVXnZBqUafV8bAKBziMpGcYh4HH7WY94vHeuGQ
JeWmWuEIbG5TbM0RGActKo4m9ZV+GMySvNTgPAydCf9yuo6Pw89PzIcEHw2B
UdTqOyOBIdBUfOfn/WcMKIVn11YXhuF9nsX28g/9sPUDhcFG8hgcnS2y6jcb
hZM2181fNPRAh4OB/4D4GCg7cwscHBqDD0qDhy/+7oSe4HmXyahRKIia6LwO
EyBnrn8q5HQ7fO59p6G7OAJU90P6Il9MQrnTLnfboBaoRHMWz/lGwJxfL847
bgpS+VkuBBxoBt8jIjwGesMgleWyKh0zDReyCtu64+qg1kiEcSloCI5dupGm
aj8DFGN8F+KcqiEmZU1FPGoQ3Ec4bt0VmoWQ+VcxmWXlcETvIn2N8ABwFxRK
81XPQsuHqB0exqWgwcW49m62D9oKSjUPnJ8D/q90pk/rCmCHpLHS7PdeMKsf
EnsTOQf3eatc9t3NgWfWg8ZLMz1QPaV6JHlqDlrTWcxyzNOBcU9NsblUD9i5
eJzYYJ8HsUpLzvtZifByxIDndnk39FAftbp1YR5MvpX289F/gPiSsT4Pz25Y
YNl3Zu3GPDif2GZ5y9oLWp0XJ5d8usFhhKfsgPo81JwjCSuymKOJguoDp9q6
4faTD80Cl+fB2jH/yfT+YJSaoCPyQr8HIqKa114dmwc288LjB/tjUflqKt3f
M73gfXWdQ2ph7v87blkunapzPzQJ3tcf2fZLjkKQgOUE/3A7nO4/Z3BAYgLu
cf312Os+CrvKTWvOPeoCVpfis26C47APzaszFY8C2Cs/uCbdC78nPt5U2T0G
Tvskz4d3jQIa232+TnoAvLd2bcurGAEZ6a+Xr7SMAl+OiPhK5hDosoqev6o/
DDXML+TS40bh4EO3LZxqI6DMd/v7SPMg2A1SoAfXRkH098Kr++uj8LpGaqai
pA8u8jYn89aMgHbC+xiX1+OwUyj2PimmG/aJ35DT5iD+3Pzre21EMwnN8dtu
tgZ2wPHAupifqsMw/4TCl9ZsClSijzI7J7TCD1me2ALiz88//yKjTAKfBw/u
u9Y72wxWttk+nDsGQZFv651zqTMQ37IviHqgHj5WF/9U4+6HpK3sFHR+s6D3
fa31sOk32G+vkfRaoxfmT6jfYpafA/V/75sj7CtA6LLREYHEbthc8ZQo7Z8D
I3exZefdZXC/ZeSQ2qEuEORKo9tzcx7uGclc+stQBNL0/NM6VR2g6v2writz
HnYsbCR1tufCbT4Vhe7IdrC1NBV6+XsedpZRV8RJZYKQ5e1F589t4JrDLp8i
vABpY/p1hbIpEPo8effuxVbYuwAyQtoL8CuzfN/sYBwIn09sHTNuBZkm9TEB
mwXQOKtRJUgfDp11pJUv+1vh4DH3Z/s8FyB3cuwz5WFfuKCT/anjVwtEF10w
9/FdAN2n1pE0J/RBJ1ZCxJ+1FT4yxh9J9lqAvrQBvkN+buif321RF6tW2BSt
70i3X4AX+n4qS2EhSHeqeaORoQ1O6wlx/Li78P8Mt2++0Tbe15qCOS2eYN7a
YfgTumOvoVE7dKQ+ui3jNAlPaNPsfx8YARN+S6uIHV2wZa9eOq/LBNQcec11
R3ME8rS72Xxne8CQ/rfBnM44+OatvJS1HwHBeNGoLfQD8KNdvmuCfgzeeGoH
H3MYAaHfJ0/l5A7B0vU5Od7YEXhHn/Bh9sYIzAQMyHpajcDBwA8pD+mHofpx
aoL25jCUXZDj/3p6DFxZdNnWWgYg3P/HY1/rYQjjj7vsuDQOHQ1r4ffu94Ih
09SpvV+HoHTjfFua/ySMdJ22OUH8+5bcL/1N3zgISQeeDPjtmoaQVaHc3q9t
MA6sJuVD/RDxh8P45Y0Z4NZIGtct+A6LGmcGM9p7YfvOif1rprPQKXx4pXGj
ARTaBMJ2V3WDjNZunxnlObg3zv5MlqMGJMfjS3WqO8GQlfcM2jUPPurst9Km
KmDo7unbPdPtMMEgIRwRNg+Ba1+ZBq6VgbuIgRvT6TZI+PH4BB/NAqyd232n
7GkRmFw4rlSX1wLaO88pZBsuwGfhe+HqZ/Kgh8Z/D9uD72AR7HnoQ+IC3Dsw
Ek5VmwnVWm+ou1SaIUfsZrd6zwLEf2U4c3nlM7ixJ/672N4Ia39f8d7YQoLV
bSnP3NUSYd3IzFTXuAEqWgef8h8kgXik5ns1h2h4+fLDwnf1euKdft5fL0AC
actq95T7IVC9t+SkY3QddKYaMT87QwLDjwdy+wRfw6ZU2fiGXB1QPxfM/HmR
BCVtPzjsAp4Cx8vkMporddC3NvU6TIYEEgk7bbbLPUYcblHnlVPqwH3xBZ/A
OeKf78aEvhj5IIr8Kltf23pI7G/g+ylE+n+G54OvMjaUCqbAptPn/Na4ISjb
6eGbfrUTOh6fOPmxdhKKHQ0oNaaGIKP7xkrEmR54Ev4nyzdjAgQMigvnGYfh
1sTWWxvP+uFr1k12jgfjkGakWOLEOQz6H69HGzoMgZnznUxq4h2l5ZmNC90x
DB3uNeKSBH6Nnvu4SNwcgS/9w9SsBUNgce95RorIGJR5ZyQ0+w9B6oBT+qbU
EFyXn3dwoZ6A4lyVn4tm/eDQkc5+jn4QXpx9Gm5YNwklApKH3dK64R1N2Juu
m/2gffA52wndaQgeC5hK39sBSye4Us2Id5JL5eL+UDQDE3+7qnWTW0DjFf8O
ZZFuGO91kd4Ym4WVb7/PCUg1QZ3oOYl7lJ0QKjjmH/R9Dn4kCC+OD9aA6at9
xsXTbSDKF0B1xHseqgXfOJxVqIT3gd88dy22QPar2GF/1gXYvRplIvSoDAaP
oSWmY9/hV72Gq5zbAgi8zyj7aFkE1uXvN+TZm8Cv01pirX0Bjv1diAw5lAdx
KRnVvdr18OEr9yF6ehJ07ZmdPZ6dCZeY42mit9VCrGRd1xcCD/tjFxle70mF
53USb3X3fAM1Kmf7urskiPXivanVnwgc4yNWGxZVIPJpbOGELQmOlPTJK0TE
wHMWm/wo7kro4RjYNv6KBHt8YnvVToSDB8VpgyTeClAV6/eyfUsCZQk99SCu
IEjXsCnrdyiHpbNv7cY/kGCH5pHm07mvQP1mY8hXxnK4fZ71WnMsCZaOOIjr
/LGB5OiPiT9WvkL1GoeObzwJzPY47JRmuoyGSnq3PDtYDmGdok9440jQLOrk
Q23ohEaPCFtKBJbDfRbNKpPI/3s8C+qGZNycmAbW1T/TVTIDUHdnhUPlagdc
+car+233NDiPbp592jUAgayNVzJPd4PnQoHpk+1T8OoGf3+17CD8smPi13Ho
g6EY1QiK2gnIGC1l32c/CNNtfIEnqYZADabfndEaB3pqCs5+o0Ew1Az4soU0
DF+YBJRIWaNg816kP251AOh+L/B0To6Ck0PeJHP/MChk6xZWHhgAz1E6iu6B
cXg7+PbYTOUgUAZ/Mlpu64PQ/PPqQSWTMHh+TEE3sxeaHo/JCPL2Qq+Pr23v
k2mYvvon/tXnTvAqXhWKEOuG9u0/JlvmZuCw8/50idFWsPkYvyNybyfEcbtz
Wh6bA8lD3jl8Vs2QqtHiRNHZBkepN9n9CD7Zcvh5Xv18LYiuf7O1IfA+wN92
rLF3Hk62Sr9Q6q0Efq4j7IvRzWARedWr7/4CvJGSr4XEMlB58Lib9k0D8B2d
bP35fQGcTj9z6XlUBMXeAhYS12rhg/azcw/YScD65rML3VAu/Azcwt5hUw2a
bnz09TdI4PLxptHInUzY2tfvS0FbCbo37LvX7Eiw/Qqfco75Z1DTs5pZ3lkO
fh+bBCXekcCC5uEgm1UiBFffPuirXQZS0x3G8ckkSBqijrvsReBWb6Xd7BeC
x2numQ8KiPfQy557/2g4yFDxLh+vKwa5Htp86koSuJvtjBJeCYa76RteiK0I
vpaHBwTWk+B0XYhU/5gfcMjJlg4NFwBf2L+EnO8E/r9w6G0Vd4NA2zA7G6YC
gLeNd6fbSKDRqvVyZ5k1XIwLWhvOyYdwc1rxpx0ksD5+017a8zqIC92+51Sa
D9tm058+JuaSzfRc57PN0V0BC0oN6QKQZ06+29r2n/EczfwyevnPDHC1KNxV
5+sFNEjiOkLfDi/3OHdtSs5A8lydlmZNL6Rmve+qmO+EfccSdp9XmAYdq18i
gZf74HucwaOH3L3w+eKRU4onpmA9SoUuOKQPJOZt357PH4BQr6i91TUTcGPs
YuefT32Q8W1AvPnaMLhdqzkRcWoceNy5L5uY9IHrHdVcKQ2CF7M6cw1cH4Vt
cg95OMt7gSF8paPBZBxOHE/8wHlhGJg1bftpMnrA4WKFx9f7k3DK72Y5PfcA
vLFVtTlF4PPBJQ7fkgvT4KEfF+yEukE7Bsmd1O2E0pi0Dqb+GZgvfnqsyK0d
Vsf9xOsU26G0MyFmXHAODFSYmBISv8NfCtLWHxytkHf1ajHbmXnwtc67tNez
Hq6R/ijJrjSD2pnH3G47FoCjeuvcv8YqGLRM7nT91gBUzMa+8iELQJcQtXiB
4yskP/jOXENZC/TPXuqFEd9xS7WKWwU5RfD88c+No9lV4P+Wo/TtFRL0cX7y
WyzJhRI32V2T7eVQubqx9ZwDCQbX5kz2784EloEzShnGZSB6g9FGm3iXtOP6
2/ujU8Dt+bmV2pISGBSrXKzNIwGn4/C7g9kJsPvVHxlJvUIYnMlUm/pGgpO7
J/1+LUXD6P0sE4EPX6Ctl/fqLwIPupnLyl4C4bAobBKgqZsL02wB3zz6SeAZ
WfUgdDgYsvP+sim9zQY56Req70ZJsNOY7c5mnD+wM/A90hfOgkd/I/27J0kg
032Hqv+eJ7xSmUqlOpkJWm9KWCpnSPBJPk6MJcEFXBXlyqysMkAk+ddI4hwJ
YswHDc+oWkJtvnSbK20GoU+yjTLnSRA24/9Oi+4WsAb2y15fT4dLkR/2bBLz
0qfwXDr1FtreJBtsfSoDJA03LnvP/2c865W9jXJXmQVBXxtv3o9dMB3ZrxVs
1gFVlMM22i4zYBPHadso2A1lmQxNT191w6i6sUWf/TT8NT2TyB/SDYLbkgLr
dvXDA2bPst1SUzAlFNwS09AN9/Sy5a9YDgE1r29vbeYE8P0ztZ4s7oakn0ci
qdxHgN/gsNbu0THQ8JcwHbjZDRtJgi9jkscgVtVYSL15BN6y33AT8OiCq628
T+LqJuDmhNlhae8hYI3ReZGi2Am1pDkrsdopkCFpRo7p9MErA7Xf65ntIGUW
aHbQdwaUEiwULmV3QoZe+9n1hlZgPrApVUg5B50j4hKNt1qhy8zx8VjxdzBK
uHWLRmAezA9dHGbcaIRnKjulO+SaYHHNccKFegG85CKcpgy/Af3k1J8+sTqw
2DIQuzOZwLPW4jxQlkNrifvkPkvi/Yzp3V/DQoIaSl/j2VfFMKU7Z5DOUgHF
Kjrorz4JCvZM/2ZczIUcVYkVFeEyoDmwfcguiARRnCG7KAcz4HnNxWpO52L4
3Ry6qZJDgrO5U2ly68nwouBs1MGH+aDUWZnCX0eCu4tjAQcW4+EYm/PEO9Zc
sNt7IaG/mwTJVrsjGE9Hw7tl5ygNvSx4F/b2cBeBQ0Od7d79G++hnPn+bCWB
B5VlL65sAm9H+fszjLcFw7J7a0FWVSpoXxeNtSKRID1ItD9Hwh8M1/XGpEnJ
UClyeKpimQRnLIJNiqI8wYdNVEb5yyfQUqC12LdGAjowO5R5+AWUd55JcN37
ERZamwKi10nAeKCG6jjbM8gx4lMMGEmA0Zc/Ij5ukCBohwrstLaAqoS5SRae
BJBdQGKXfpDgMvuDzORmTZh9EqQZ0RsPFLtSEt2I+dDLHtHD9hdRuFaaBd/P
eOA6lm1t+eM/43kbj4/Yy/ezcP574koKVQds7hr89yy/E5SvmrzJzp8B2epz
Wa8cOuBSyLmDnxl7wY/hXeHbiGk4zFFB/72hA7yFdgXvJngHR6ljaxGB52ea
fw6rzXRA9M1/TQn2w/AybrdVnecEGH5p2LpQ0gHvVH5dF0kehRE5NZ0I9zEw
V7Wf2CnVASHMHb8nR8dBh3NE0uLcCGxJknUaUW4H1H3ZQGfnFFif3ndXwm8Q
FrpvVWdQtMHVQzL3eH9Nw+OICPogjx44d3inQqYh8d1neyr6InoWPofZbFil
tUPXn4nZi97N0E2j6167PAc9S/Wu4nLfQchk9e4ofwNIjqQlxJPmYcyv8NDa
bC3E7JcfXL5WAw2gdEU7dgGUz9RqeUZXwIDdsV/ZkZXQpsMt7k/wgeBn21lv
KiGg1eZbfyT/FSbUBc8OmZPgrWKjq1pGHnxhuad6J7cEWrab5JlGk+Dq081D
6Vszgc5ytdIU5QNp655jdF8JnH98I2sekgx1uQWNDfE58Kntnn4O8Z09XyLr
dlw1HvKPiMKAaiYIH2ni7SfwWURNkx7jGwWz1UuaD5XSQNS8f58e8e5lK5tl
NRWGgpuQ+RjsSAaRd77yf5dIoFfbQ7m+GAjnLbaGMwcmgof73KcyAodv97Ws
rZX6gpnPCYPcxjg4mDjZokTg5AFlgUq+jwfocJ1Ptgwj+MjXqeE9v0jAt23O
51bTc5DrO9dYNBYFLcdCv0n9JkEa+vFOH+ygOTrqlZ9oJGRcuzFH+YcETYXR
ihHXn4BMBRtzv3YEBDclzfgQ82bn7Qs7cu4By1D1UVuCjyuxZ00PEHNqI8Ov
mjpqoGIXPNXhFQYVau6fqDaJv5+2jI/SjgsJ2m0tZnMIg8+dwWbUxHyzlJpO
JnAOtjsrGuzoaIEtvmKD3nXt4L6lsoCuaxaav5fQUSi1wq/n0dUOS12QXUf5
on1iBngidoubpLXC4FMPIyv3PjD3SLsinjkNxz3ojazmWmHtu1avmMwQFD3J
of/ANwUPp5vYr6+2wuqEEPPLhyPw2Pux5m6VCXi9cCDzT3YrKO3iXArLGYOP
kUeuneQYA6Nneu3PD7VCfmKDWcjPCejvCvldHjcMdur7CxT4WmDH0/1P6Q9M
g+bTTLE7lAOQsau73mKsGdjcNM1HNmbg2p+lPT/LuiDo3LqhRVoj0LbEfnBy
moOtRuHVOnWtkGbhvadApg4aLvbp3/s4D5VPxZVmShuhfi/f8Lniatj3LpD7
teMCWJd9mQ1QqIZBT9HcMwoV8Fopo6aWhgSNvdt4KhSJ732v/n5DujJQuKo2
umZKgjGZHFces3wwFK25n6haBM/M49PW4zBPYNg+mZwJCs9FVp/I54Hibc7P
R4nvvnUi1VBVbjK0LXvsp2HMAt5GfgY+4vs+O7uW1TUZB4W792hM302DR7FP
w79Ok2B5Z8/fhC1R8Lots/c2VRLUchZo3SPwGa7KojOaEgK0xTJJTV3x4F5k
YH2CeA8NRk8dWvkXAK5N9aF8vjFwIquLQewnCRxV+vQKGF6Dk9az/pH+SMhu
1v0mSuBQdMDMUOmgO0Su+8UsfgqDnjV+JU8CV3eXXjc9K3EBidkHfzdVQ4Dp
hPNRUwI/Bt8ervCKPIPDAtfyswqDYZZKdeYfMf95nrlzOvgJnKZYv9BVGwiV
fivR+n9J0LHq96+B0hSoTJiP3jMOgIkd46kxxLyt6fyCjoQuHH2sQ/vC7g0Y
GejdqSXmpY1ZbF5RiuBtF5sau+IPOaPc5YPE/JSTZNkIAzXar5X850eNP5TX
TrFNEPMZ84iL1M1z0BvlkNHM0gyzS1d1tb90gOQ/DaGPu+dAv8MI1Tg2w3Xl
324KND1QfMOOf8uuWQhMuKoaVt8MJgYPhLZ39EN85bP9fEXTUFh0NEvwRzPQ
cpS+0N8xDO3fXRZqmaagwT+3bmCxGc7UWjneujIKky30z7/RTYARpax+VUIz
PA+f3DsSOQ5aSY/StDNH4W/d9iS+vc2Q25PDZTM1CZKhOygF9w7Dz9xX6txX
GkF5Yfzy8t9pWI+x+8cZ1Ae3MytMTk/WwV7m2AaqylkwkzuRuHq0Ez4do3CI
56iBmXVFjY8n54HWy1c/9GALdDAHLpkeroKsNwxCTwUXIDbfajzkYR0kB2w5
o81aDpxJ6uXpowvgr7vRHn+8AnJYmtc3TpZCWjQDnY4GCeQl/3y63l8Et9ra
51u6CkD5y+5j1wj9/k6hIzBPOxtk+NpFXg7lAO/XbZub1SS4Mvf8C111Crym
c3QS9M+Ak8bcMXmDJJAwnXyyXBUHEE+lfmd7Cvh+JsX8IN5V85PFx93WPoDQ
vwynDIsEiDwkEaS/SoLKRqbbsR/fwYGejRsWwjGwM7tvLIZ4PyUiN5glpQOA
KefFg8fbPkCaTmsqP4HPD3oCmz/6vCF0wnVZlC0Ulv9ZmlUT+OTYr3FBZs0V
pB3tI4Ulg8EoWS+1icBhvej+kjlBZ5gaf6shwBwAwUHDo/YETpILG0Rcz9kA
Zxw91U0+P3gx+Utslpg7O0QFZ1g8BgkxxPhb1Ru45s5oCv8jAW/7fZmJwfuw
YvE6QtfREyw83oTcJeZTgm1d42L6QJnkvCvCyR22ie9RdiDmF8WLOBqd1EEq
JLPt+wk3mJQmMfkSc5MutnuqHjJwL+5MGLW2K3w+dH9XCDH/KWrZldW4Hx10
OH3lzXZXcP3c2R1GzFX4GsUPbJsHkz8OvcN+tUAZyPJr0aMTnh3Y/LghPAea
P615ekXq4OuWhudzO3qBR8Y+uoZzFtLCdnH8Tq2DcttU2xO/B4Aq4VC2Zsk0
eHX13q+ZroMLJ/ISt6cOgx63aEHrr0k4o9umOPqtDkYMSVfDKMbAI6bvXND3
cXh45M0/WuE6OPfw1X6+exNwglVaNV1hFLpWM+pSGGshXaub0zh1Clxu5v71
ch2CVr4mda0n34DpFn1dRN4MlFsXtn671gtTMyFKAvpVkPqV8Yur0RyUvtXV
ZCpth4uGlotVuytgy+nUVyMp83Crf1uafmYzpFHxPu0ILoN9P06YNAUugFQS
a7BD6jfwe67l2ihfAhHcn0yiT5GAq1tfy9CnDGyGSm9PBeTDQM3bVrlXhH6n
E1e4tPsL/FLUp7c+kAMDH2YO1yES0J6EUwm70uEuLBQtLqbDCzGRZzPEeyug
crxZ+Uk8aDOcb39rnwR2ugmf2wn9MjVYJHBxJgJiev8KrxnGgU0BfeM/4rtf
fkovvEHiLQx79ht89IsE9hfe+XzE933hzfm7hy68gb0b+r9yFkOAI/kEnQmB
z1iGG/zqq15ATalXrSYVBPz2z9gzCHy6gt6WZWdXyDjU+YiyyB/4zr7vcyJw
ONdePyu91QlOZ20Xy5/zht+iVJUUBB6OmU4r3LW1AqGkk61lqh5QkGQhqE3M
PQcPUT4WeAjLlKXKeoEvIYq17Z8/Mb9lX6DT6mIMIzEcgnIFLlB1fvF+BjGf
TBlTTe7XAyaDd47/zB2BVUptuIKY6/VtLnx2uwVDUSfn3mbbQQB6P9xMzJu4
Z+fc5pSgnU19sHPSFhy+813rIuZ8lr1rW+wlYGWkqv9GrQ2hf6sd+4h5TZOp
9MzsUbRj7hN9ANjA3qO/hAaIeanQg54EnnnIfEN/t7a+AtL3OVTuEuuCCWuj
ry0qc7DbJt70skIlnGB3Nqdr74WILyacs8KzkJvDJTiRUAlVPClHMhYGQWV2
v1lm4TS4xu34cKC+En6n2/tekxyB2lwp5nMDkxBumZmeGlcJXGoMLHURYyDu
e/x2wNtx2Omye2fQwUrY61ofzkQ5Cakzji5BSyNwMiXPTYmnAmTYr9zfvDoN
/S3TS0W0Q1D3eVWnuPkrGFXPrl6Vm4VbLEsKJ6AHFOssQelkGShve3xIfGAO
qqT6SZMxbeBXJ+uSl14C6we3lG8ndFzy25eT9XxNIPRlUo7iVwGIxnEkSfQs
wJiZ90SKbxUcEbVTHL+bBytjPF923CbBPrPE5rC9CJZDqYQ/LmZB9k96kQdJ
xPv5I6Sp+lQ23NnOQP04NB3qFmKHzrQT3zuzizc8Kj9CydVPlw66JUGvPVOY
0SwJxNVldi6xfQDZT6mDgWxxEPduMuYIwQe8Gwta6dcDgdlg6MH1JxHg2dBC
t5d4V6NXJte/3/GFmH0LGyypwfB10vKSDIFPc0M6N5Z1TzDQicyUCPaH2clH
wioEPic0KFq6FV1Bc5lzysHfC5q3MLhMEfM/3xjZd006AftDk75bG24g5ZL0
WYH43fMdZs7qeVpBg/69piMXX4CStvBnP2L+/dQj9VxdMzDMY+kpa3OEq82S
9YXEfL9GnrlopAGcD1a/HkBvC/V2FBXtxHzlzebPhHd3oFTcbdSl0RL05EVa
R4n5ffstIgyTmkDPrnThz67H4Lb41mKWmLd/466meawKR38xq36JsoDtRbHb
F4l5zrbLD7piZWHyg2hGu44ZyLPz/Fwm5jeyhccis3kgpdVjW/mMKcRc9Ytd
JearfiYSK9WnUND7pgS1M6aQqpshvEbM2Vkj/H/KzcPeQdPX2waKgZ162J29
sAvKflvu2GcyB5/bGzy135TAnyq+nDtWfbC+LTh+77lZsJGi99WnReB5/89e
tZtDULv04dFm7jRkbabvaJZCwDbVMnI+bgQMElmyaCsnYYZdRYVnpQQWuj7L
P6YfB7/rVUUzRuNwKPvSzpyDJRDH05Wn5zQJyWN2CVWfRsCUIohtd0oRaC79
kB8n3n259mm2p6aDQDU2oJCWVgCOx1aoez/PQk6JOc+cZTeM8Ma+11P+AlIH
xzWmROYhuGqddKWlFUZYzzBuVObAharUyt+KC/C+bh/DQHgDeO7Z94LqchY8
PDz4pWsXCdRHb5VoslWCYZEOT+SvdLhT7lr0xpHQNaEPllfUi+ASvQgPRcdn
OLWkrxVHvMMPhOjVTEwzwO/rr2C9gU+gytdQ7zlCAsWSCxwVlTHQZpJwO1Ei
Hvp9bghbrpDgBK9fMMeTACignpf04oyETGoQHSHe27DNsudH+d0hoiehXGQh
CKzEn3Q3Erhd3Hyv2EjzEvoOJqqWPfKBR1wWW3oJfIZ8CLygdvIF8Y5TuKy1
u0LgdPn6eeJ3fEk5uknN6AKR1RdYcyJdIPmr12U7Ys7NydpKUWcLAj7hPzJO
OcB+0W2/E/F33z/qK2/5Q5jpTbTSoLIlvtdG3PXE3PpNkPCxA3oQ1c2YOnbB
Eop225wfI+bLF9ODJOfVwFzD6/GRJTOQZXITWSLmazIi3LebVEGg+V1Y4ZV7
cD3reO86MTe7MvRT8rgqSOpaKXxL1QfdI5cv/iTmYa8lA2feXYOXt7R03Zp1
QZYz/dsvYv4vh1R3Th0gLYanVOvvHagu2bHtDzE/ITrvccyXFULEZANraW6D
GYdqBp5Hq0/rbsgIoIyU0+de++hARvznMjzPKNgY0NCahyNVr6Msf2eAi/Bk
bxBTN5z2C6Ayt56DOepqwaf3MuGnaY5O7EgfsDlIMkVemgVNdD5kW3omPJYp
2HcheAhO+Xwwe07owQO9OxmpqjKhv9H0b87cCAQUjbDYZk7CvUNvHzYFZYJK
ih/Pmu44ePdyHH8qMw5MmQP5CtSZUH/U5HBo4ySUiVpLcdmOwLCoS4Tx8Qx4
2hD9D/bMwIv3l7/QLg4Aa9wcm+9oGlQdkv7HtDQLWXmZc6PzXaD5KLR1be9n
8KfN14gznYeyHXb+woqtoCG655H+wST4y68cYWCzAOqTYeoCSfXgG3kwzPhW
IribJZKEjhN875J87xelCqggHb95lzoegi5KDEu9Id7Vqer6dppCOMnw5uLM
k1gIoGa6xF9PAkmV5B+KfOnQIDC88ComBlQMXpkKzhC/V6b709gjETBUadJO
fz8aAgx5opY2SFAb3nIxTcYO7GaHGksqQuCizHvFhwRuddXrLhxlugfWLbyR
7GneYBuhUnGa+F1EPf9efeP9FPoMtksEPnGB7Njbf6KJ+VXZjfv1bvbwdssb
YZ9mawgp9D6UTsyXsqzZA3PtQYXUcslV+wms+5iRCoi5tN89GWVFayjZI8pL
mfwILr0N8Wki5ixMx1SkGE1hovO0KwPVI6BcVFMZJ+ZaqPAVY7wivLQzyrp9
2BS4ueef4ffw7JXV3b/fi0CWjwFdmrcucGkvRf3G/EHvoKwKsyxcFVNVunZX
Hb6syoZvEvMBPmOZEEVFWBITMEm7ogoG1KM9eP74vr8oifcK1IUtNRwWV4Gb
zsqSf/H/r8WzJp5G4iAdd3eeikMZBgqH+/B8UrLhbbUbBXAoMe3w3X8NZp6Z
SP0j5oaxPrt2GJ9ClEfqJq75K8JGfjkrnofrUQj8MJiHsZUzUoEUIcAzqCKy
cqkb/F4xXLZ2nAPzt1JrTQEhsJ33guyWA/3AWN9ZGXN5FlZXG0ttVkLAJb3k
cmjOEOQMBOV3p01DUC3NXsa9oXDb9vf5y3SjEFHN7xn9cRL0BVZ95b+FQAtF
5IcHnuNw1LBuJUZoHLpDP1UeowkBeobrqqnrk7BPcSSq784IVJbxcp3pfAsU
XRP32YVmQFV2mTI2c4D4fVinLpwOBsHy0Q1O+jn4Kdkw35fcBekafxkcNQNB
Uyz2p6zbPNg/K5Lwo2kFvtAWIQqLN/AmSYZe1XsBds2faztzth78VD4LOhv7
Qebtn+94xEiQsm8h4Oy2CnBnCf4U0+EDdEJp4bbviXcvvEZ550ABfGx6rP5s
wxvmXg6jze8kELQR2CuVnA5WTbdkfv7yhUt8t4U/E3y4d67w1sKDSJBbPou4
M96BZk9h/fJPEtBIKWfW/HuJjAL+oVE3fwi8emTDi3hv1fmVJZiKHyGb2Sx1
hlorCDjn3Yz5JNXnfCPOWgOYKLP2T5o3gue3993B31/+wgipiGM2wOxtn31m
y20I/6gr1UvMe3om7/YctgNhVmHuoI8aEF3GfqwVv1fa5VOeftYQ8M2PToyY
VxW7bcE801yle7bLyhzsxEaNKqR04fDdYtUFYv6x4aJiWsklpMzR9WIuSx/O
npNix+9ny0SMq4DuRaT6eVtBaLw83FfIY8D4eZl2n69IRALYBCmGdkhIw6WT
+9LxnLcChczQKIBaGY3JkzkxOB/28ySen8sZ1dv54SrUmFsctimRgNGCuFN4
rn3sbrNKKj98Y3NIY5a/AFq9UQl4HvGw7ku39GhJJ4v+S9dsQfCSerWA5zJ/
zscElzGjIocT6cTPAIZmVAjP3/l08GM8u7IqdQRQhCDp/e6iGM9M0vZkPPt/
Glsh8IyKzqbIYDzrBpeR8bxsbixnuxKCru3P+O/wjP4LzyvFVz0wnr3vsE4Q
eEbtTi6RGM+LFxPWMJ4fG3+8wU0TghasPJQxnr91lkVjPGevp5QSeEZepONk
PDNd49yJ8azceTbl4ulgBN0PyHimYZKew3jW0xNjJPCMAoU2yHgedBwWx3hO
a2WhIPCMKtXNyHgu7JUk4znm1GVfAs9oR8UKGc97DI6+xng+m/7tB4FnxKk5
TsbzUn+lF8azcqo/l92GN0rUoifj+Ym/6pok8R8yeoZmz69fvijgjysZzxEi
YncxnlUOiXUSeEZpdLlkPPv2yJAwnu/RWXKNufmj4UV6Mp4rReQcWQk817xN
fsRYa4XOGj0n4/mETdU0FYFnvT2PtxTPG6EQRwYyntliw+UxnutaLK9d3HIb
fZK+S8Yz654IrnkCzzPvGAdefdRAmtojXBjPtFaeApEEniNzs1+REjVQX8UN
Mp71hS72zhF4FhEe4S6Q0kVbJdLJeH5rlV8Qjy6hrMvhDt1Z+ui+rjQZz7TO
HVfTb19EtPu3B0QmyKOJyDIynq913OIQE5aAMJkN4JCSRlz7dpPxbInOH07e
qwALG2sZpgti6PnOGTKeKd8kF+6IuAr/0jVTaL5KoF63RDKeC0otLtp+5oeH
otY6S/IXUI/qezKeB78YlGE8c/eO5NFkC6K3wl5kPGsOXmDRIPC81PppwzId
0Be1nWQ8Ux56MIj5hvOPaneCb6DWwuUezDcq3tfsxHyD8n4DH8E30LuKXZqY
bzCIHSfzjbq4PhuCb6D9N0zpMN9IiG16gPmG9C59KYJvEGxklsw3cj09mDDf
KNTO0iH4BopdNufFfMN4Ow2Zbyh251YSfAOd5lEj8w2NC8pnMN9gkYsLJ/gG
Khu98RfzjZ0bC7mYb9gaw0mCb6AxXi8y31CT/E7CfENxbbmF4Bvoosc+Mt9g
ld3zGvON3jAVPYJvoNHfk2S+8dmddBfzDQHRKHuCbyCBPDEy37g4SRrFfGNH
3JwawTdQjtrAEOYbSnOl3zHfCHz6lYvgG0hPm5nMN7ZfyZzHfOOEciWTV0wM
6tfwJPONGyTXJMw36nx+JxB8A7HoipP5hucEiTWP4Bsrhj6TqCIE1QtcJfON
5dCHGSIE32g9LJfBluaNrvzSJfMNmas07wIIvrFUxa7g98QF0fvZkfnGRGev
FeYbv3PuyL1rtkbsvx+Q+Ua3kIlEAME3CAY28Vr7CVL1u0XmG3yMMW9lCb5h
R2UWup70CKnUdfxvvrGdIUGE4Bvv/rBlc1E9QkyLEmS+8Z5fKDaC4BsbhQrW
jw6bIu+xdjLfmHmdTfssVAQKDznaP/XWRcYaDNGYbyy+Eop2YZKFy5Gn6vh1
1dHkGjeZb0Q+VRjvVVIExkMzpacVVNFP5RAy32B1aUq+Q/ANi4UXfHliKsis
0YjMN7gYvemHjMXBgkJL9xCHMmo/3UXmG16NA1X73SngRUFryt7D11DrUJsk
xq1zpnls5L1TSIo66PtqgCIKrQ8n8w2fgt1+WA9ud1deJPQgKjLpJevBs3Iv
yHpQzji5mNCDiJ7PJAPrwd0RkXFYD07RqCFCDyK6XYdosR68aWNI1oMOkntZ
CD2IbF5+JOvB096RmVgPrip12RF6EL22v0jWg5rPXhRjPTgZ9ut39sEStLX2
AVkPDszwJmI9qBQtL0roQXSvYxdZD94PFDmA9eBA8EMLQg+iuyIzZD1oRavN
jfVg9m3BMEIPouh0X02sB290dZD14J6KXccJPYhqVh3JerCcTZgO68Gny3/c
CD2IDs4ukfVg34ZHLtaDtgrzcoQeRHT9IWQ9aP5Fbh3rQTPHuTOEHkQPYi+S
9WCNsKA21oNHW30FCT2IHKdpG7Ae7JLrLMZ60Oquy3lCD6JVrl1kPShjfWnr
IUIPKn1TC/TmjEQfrHpFsB7kdbl2iZ3QgzKtuaaiC0Foki2crAefOTxp+k7o
wQu7E9fRIx/Us1eXrAc/7v5Uo0rowUd3WeJW213Ra5Eesh6M3Zr/di+hB6XV
tlAURbqgZ2aXyHpQK2iP/U5CDz6aitiZfsoBbWRs/sJ68Iuxg+1pQg821rzT
ukVli87fViPrQTvmV1R8hB6kVVRgrL9gidgZUsl6MGhddPjJnBqc3SbE7bxk
hrK+qJD14Kf3nwvkCT143rPU6dWVeyjjvSJZDxI/yNk8blU4w/O5wjpVH1nK
viLrQY5xigHh0Guwcwsn1XKzLhLJMiTrQbOM91bPVAHOPPChOb3lLmKZj9qK
9R19Fp38DUIPDqZTv5fdcxutPh0j60E/ptvKzvICKOk049OfPjpIdv8bsh6k
68ztxvs6jazSB7X1FSio93jVf7OvQ/+1r9t2Wv0o3teJ8XLzTiRUog2Obwfx
vs7rcZwp3tf579bKP1Bfic4Z2ZH3de2itfvxvu4+d2RlalwlsnC8Q97XhRsz
6OB93anFG6xBByuRYNt38r4uLifCGe/rLpqedlfiqUCUUTPkfZ0T/9AK3tcJ
Hky2Lm7+iga4Pi7jfd19uzh5vK8rGLO7qnSyDFExfCPv69imdy3hfZ3rjqas
vPQS9HL+Zxne15mc8ZnB+7qlBtunFL8KULSE0ie8r5Ni7+nG+7p7uxNtx+/m
obJz0uR9XejuNy14Xze7sST2cTELMYdvJe/rqGqeV+F9nduFcqHHoeloRMeM
vK8T/jkbh/d16rlBvAfdklAg++x7vK/zP7Krb5HtA1wRUrsfxBaH7twPI+/r
gryn3PC+jkmUP1fpSQRSrdxJj/d1eo92G+B93Z82ijiW1GDkOO5F3tcF0m5k
0ax7QiVdvdvpYH8096aPvK/baagf1aLoCpX00tlO/l7o86lL5H3dy81uerZJ
J4jOK/W+vuGGFB50kPd1V5i3Mjl4WsGv38eHqS6+QJ/XB8n7usK/vj6vdM3A
UjzUK6PNEU1qfSDv62qyux7LRxrA94Xxk2n0tkjrTnQ53tdJxaaEJL67A2x/
bdTcGy1Rxqdj5H2dgRD9xsiEJvxdRv9Kdj1GmzVHHuJ9nTiTp73cI1XQlwx0
4Ym2QCzsauR93ZWjt/0S4mTh2c4fH7pum6E/I1I/ML9KeFXGl1zIA+OROzIP
zJsi34NvovH3IvZTfnllC6EHR3Kdjc6YIg+e9+R93fKfNTHsp8Sfnlgc9qtF
u+olfmA/5U76rk/YT9HhLmboFalDTif2eWA/pd26Mgr7Ke4ZDby/U+vQyvCA
DfZTpP6mk/2UY4NHrtZM16H+AYok7KcoST7Jx35KDM+q0ui3OiRcVKKA/RTn
UA+yn1JabTpLK1yHuLIMmLGf4j3hTPZTPBxq+1IYa9EbtxeHsZ9yZE54E/sp
VUIqhlpPvqF3B86Q/ZS/2UNd2E9xv1ZyR0C/CqV4Uuf+N34K+i8/JSO8JwP7
KV7G70w7gsvQ52p2sp8S5+jqh/2UbbLVLo3yJWhn1SbZT5k1Tr+F/ZSaiVLx
qYB8ROXC1ob9FM/gdxewnzLwbGDd6kAOWptS5sR+yi36FXXsp/BdGUhdXExH
QUd+2mI/5cU1mg7spyTm0f58a5+EtHNdyX7KhZQU8QszETB4I9551TAO5Voi
sp/CmBOkhv0U+1qR3ES/SBTb9pXspzzaFnuU/cIbYPDxOZ+7GIIkGU3Ifoor
18dTOqtesGVD4rWaVBDqnBci+ykCl1lUV51doS0iuo2qyB/dW7xB9lP+OR6N
P7bVCVxM2vUy57yRLV0B2U/J++nwU83WCkJjPJyKVD0Qtdc3sp8idDJe5b7A
Q6i+wFPyOPAlCm+SIvspMw4HfPc+NwYOl7kcrgIX9Ly6zxT7KdOuopSe/Xqg
wRoUvN3CETEMaZL9lBcO8hnzHrdA3vOhVkq2HSLpDQ1hveD0Ob/nzqwSKMXU
822dskVsu5EC9lM2Rzfi1h0lgIEt/H1FjQ1aTTRxxn6KqdbtPKHFowh6LXNV
wAbRPc8UxrqguH33eex32++prGpmaUbt4TJ3sN/tM4XIfrd5QlhJjWMzejhd
6Ir9bvG9SgLY79bP1VQIq29GkjQ3hbHfHZhgzYT97osO5V8EfzSjyvkeZ+x3
37qSOY397p+XFYcGFpvROeUlJ+x3D52lccJ+d33aKZuqhGb0in6DBvvdW9o3
07HfPcKxp4hvbzMarjM+jP1uYQN5Cux3g0rRfe4rjaicN47sd1t7Ht52JKgP
bGpfuJ2erEM0b7nrsN/NL5mRiv3up7xn3eI5atBJOeWb2O/+/prnDva7NV1e
Mz04XIUufNotiP3ua0e2jGK/2ydhUUmbtRz9lSn5iv3u2HqnJux3L5e8Zvtx
shQtrHHvw3735KZrCPa7xzSlJlq6CtDkTUOy3+1kdcce+91e0joJL4dy0GM2
yj/Y7864cmUW+93D1yzmBP0z0Kw0ZTT2u3fe+qWD/e6zG3t07mxPQT+SfpD9
7mew0Ir97mlWtch0iwTUeDqJ7HebeLlIxH18BwG27e/NhGOQjG7aOPa71Vg1
5bHf/bg0Qc5i2wf0V+5VGva739Fpi//s84bNEMUpPrZQZObaYo797mC5Z6UX
11yhSO9yzAnJYLRjH2069rs5ty4ubQo6Q4YAbygPcwC6pGUxhv3ux79LeTPP
2UBNNb+BEp8fKmvvI/vdearPtqZYPAYjcZ8bi6re6DFlH9nvXpz4LkE1dB9y
hSrZzR090Vhd/zvsd1/by8I6I6YP90ZfHq52ckd+2gJK2O8+IJqf+sJZHXbE
cIfS8Lihp4c1GLHfXUJp9T7USwZOP2xnMdR2ReH+jTuw302rOXl5vHU/Yr5d
Qxux3RUlLeuS/W73A0/24TySaz7bgx0dLYjrU3QvziOliJ8uxnmkC94JFBRK
rYhLr7UK55EGyw88x3mkpJfOZ0zSWpEZ/2tDnEf6cTtFFueRAtlMna3mWlGa
flQ3ziOFD9fvw3kktgXbo9dXW1Gb70kWnEdK/XdfHeeRdmg1ZP3JbkXFr6eX
cR7pq/UNBZxHWj0u1f/8UCvayzD8AOeRjujPkPNIekdlvirwtaCTrHpPcB6J
v6hPFOeREio4Wi3GmlGeb4gZziPVltyjwHkk5lPOrhZpjch4/Tg5j2RnwViJ
80h7xvy4CmTqkOa9Lj2cRzoWfOc8ziOJSd3dPFdcjWIRAzmPVOvgMI/zSIZL
C/lnFCqQ7DErch6pjWR3AueR/tKqCBvSlSEvl9sjOI/UO6nqg/NIg4xnHBNV
ixDPjcvkPNKu0K26OI+k9rRw+ol8HmJIMkrBeSSxsEOGOI90o7HJhoYxCzUL
pdHjPNJy6+nI7sk4GHTZ+2v2bhrinLgYivNINKbykYlboiBmT1eeNlUSOsZ/
QgfnkU6cozw4mBIC5/Qb05u64pGhrJANziMdoLuUtfovAI5uvFk55RuDqLPf
MOI8kppnx658htfgWb+TZ6w/EqlXcpLzSNHy0cbaB90hMGeFZulTGHrV4qGI
80g/OQcaXXAeaY6taE01BNnYdnDhPNJTL55NcZFnkBlrORlWGIz0tp5bwHmk
13eOZ6wHP4EXPe/WJ2sDUd2AcSTOI8U9asv/QmkK8lfvjxsYByCRVvk0nEdy
3fA5vF9CF8x9Dhe8tnuD5gbmdXAeaZeB2NpmpCLYzf1iSlrxR1SFN7/iPNJh
UWkxNkpqVOkzZHK81h8d9GjZj/NI/ykvutODSxjnRe+IDVJ9pupA82NLf3Be
tM0n+zXOi8p383595dCBmk5Yc+C86P6KvDycF30y9/rI94YOtLhb6i3Oiyor
ybXgvGgFcjimNtOBFDXEmnFedMsLQ3JedJ8FxY6Fkg4U9jxeCedFCXZwC+dF
i/RbF3dKdSBp1/fkvKi4VIEIzouWBPO4jii3I/b6+Hs4L/pE200P50WbYrqr
MijaUGhxuBHOi9o+amLBeVGNdl6dTMMW1LSfXRDnRQXC+9dwXtTOl3buoncz
erA7kZwX9WY+bI/zoo3HfziP8jeg7E5Ocl40jb2NEedFU7f+7l++VoMOl/wg
50W1rwc8xnnR+1fTNrIjK9FJGmUxnBdN1cudVlNCECFcufex/FdUMUFFzotW
MaZV4rwof93v+Tu5JahU60o2zotG5PZYp23NBIEaZ31TlI+SjjQcx3nRfo4r
v3FeNHEnw4nG+By0qNGhi/OibimmGdyq8RDkRx3Qr5qJlktm+HFe1PTsTdVY
3yhI9R7PMFdKQzKcJ+hxXvSZ/yXWxsJQaMr7GHpuRzIy2PhxBedFU2v9d60u
BsK25HEPhsBEdIXz3GecF7Wz6Xk8VeoLL2lrXuU0xiFZbtk2nBf9WL31VaSP
B7R9ufXCOiwGOdo/JudFw2n/LBo0PQf2CRfG4rEopGXJTM6L0qe/3KMJdgQP
XBcLFI1EkW/8Z3FedDbo7NiX608gPu7mBIVOBEpluzKM86LKH1ctFrPvQZDz
o+TYE+Ho9g++IZwXbTVPzzfUVoOFHwf3jniFodh5uUScF7UulHZIceJCm9q2
n8UdwhCtXc09nBf9T3je2KsbjfP8iNvIg/djFxroe6GN8/yOsV52OM8v5nTD
tFGwG4k/j/uO8/zNLhZmOM9vnxabwR/SjS5+NX2D8/xtT5u/4jx/udcszvOj
uwupcjjPP7HK14Pz/EziiS8mi7sRi15AOM7zC5w5roHz/KaFz60Hbnaj30Xm
L3CeP+rmQWGc53dz1/UR8OhCvZUZD3GeP8ro5lGc5ze0FnZLUexExi9ULHGe
Xz6M7i3O818b0qDYyGxHFtfEzXGeX+r6gBzO83N3GF5db2hF+qxFkjjP3/z7
KB/O8yvPdlqOFX9HpYGftHCePyhLbQrn+f1j30p1yDUh25J95Dz/So/xB5zn
D4joYe8Xq0M1X6yicJ5/W/TGvvOU5SAQ84OazrIaLf8spcd5fgWlic6ZV8Ww
bPHpUTpLBXodtl6K8/y2V56T8/z5cmi7qnAZoj7/dBDn+bf5ASXO8+9um3Tk
dC5GHsqZf3Ge3/9kp8zl9WRY6t9+/ODDfBQTX/0Z5/mlWtRyDi7Gw4pdGSmE
NRcN209F4zz/14cDayyno6HG632Khl4WMr1+mAPn+X9rvxIZ3HgPUvOv91af
ykB/i0o4cZ6/+iG/tN62YPgTvi0yqyoV0Vy8G4fz/G+P0M4USviDxvtmOEtK
Ri/7Tk3gPP/7rfINTVGe8KFf5Mm1L5+Qgp3wI5znL9D9eP3b4RfQ3PzwkNfe
j8h+bPI1zvMbRdfJ8rE9g+j5Ryn+Iwmo8CxtJM7zB/OmxNNbW8Cpe5f8mXgS
UH7aTQmc5w8VzbzX0qQJn2f5u973xqOnlD6fcJ5fq8pDIcf+IsrSrq478zMe
fXM/ZPY/5fn9acRjcN/qwQ8mfXW+XnQirJQd960Uc1rIfSsWqZ06mjW9SPlD
UTvuW+09o02N+1ZdGcr8gZf70PDo3EPct3oxrnIC963OlyscCQ7pQ1NGbn64
b/XQhYUG963YSv+M/fnUhwLTRERw38qqgYEb962Wjm/cNDHpQ8WNXVm4b3X4
Pv0x3Lcy0s7l5yzvRUcLv7ThvpWJrGAk7lvtfu4yRJPRg1L/PXfHfatq6b9l
uG9l12jueEqsG0km/PXBfavg0TceuG+ldFriykndTuRr7daN+1Z3y6L4cN9q
S/TSuTrFdtTN+yIS961q7aqYcd/ql8033LdC/rdoyX2rzeYRddy36jCtVJBd
aUY7hL8fw32rgUSjPVuaquCK+f1tbt8a0FaSuhfuWznnPZzCfSt6wdFTNZS1
6KjTV13ct/oV3BaM+1ahVtrlR7Or0A+q+DLct0obMRzFfav3H7jqJtrLkdNZ
2+24b/W29FkH7lsxc36kzDAuQ9Ff/G1x3+qW33v6gegUkB42T6orKUFmB7/N
474VhWyDF0t2AkgZc3ie1itEqhSHtHDf6vu/hKmfS9Eg6xz5XuDDF3Qjd/EK
7lvJON7cYycQDlK69iyaurnoZP7zBty3Gt3oMH09HAxCTbP+Sm+zkamZwQ3c
t7JuUfL5G+cPD7dxpOgJZ6E7D5UDcN8qqe75tvV7nhDcQXloz8lM9PdpPi3u
W/FPt2ylSnCB+U8UtDZWGSjrSPoQ7ltlOR8VvaVqCdqXLBk9aTNQ90mHO7hv
RRKxsPWhvwUpL8tkr6yno9DcIyy4b3VVjnHx7+dbyO/Sx5qHxJ9H6XfR6v9T
3+o/zd8FjmbiPmycW/l4lcwA8tRJIfdhdwQY38V92JBsR3jaNYBsSFQKuA9r
4U9pgvuwX2nvT1XLDiKRk8MncR82qYPzHe7DfggP4dtnP4gOpooE4T6sObVw
AO7Dap1xF+w3GkR+pW/JfVgbh33KuA/LYOgxF7c6gA78O3gE92G5bv6dxn3Y
NMcbZZUHBtCDep4tuA+bbDrFjvuwAWFmT5bb+hDj92U13Ic9b9quiPuw8Omw
iiBvLxLvcnqK+7CMiifJfdjIadrLEQT+163ERnEftiPTOxX3YQ+2fmWP3NuJ
LGx6D+I+rNcj9AX3Ya+cDQ6g6GxDEkP/WHEfVnV/lSvuw+41lXexSW5B9wVc
j+M+LNdtSh/ch3XP0ji5GN2MjHP3eOI+7Olc1nnchzV/aVpK+6YBSQqeaMN9
2B2jd1h6HxVB7q2C8xLXatH+nGxyH5a9tVAP92FjxtVZO2yqkVxjFrkPe2EP
9fbRO5kQ+O9xyXbaSpS0UjaE+7D2V7gNss0/Q1PJtqPLO8sR/zUBSdyH5bpi
2MxilQgDRu0xr7XL0M3ISxa4D6vp7FR8xSsGmPMZpc1+IfT4b1EW7sP2vU15
QDMaDsl31aO464pR3HIFwn3YpUMkDZGVYBiPtygsYStCR1q0gnEfFgUaK/0c
8wP7XJ3HI8MFSC7fLRL3YTPD6uxmxNzA7sQeN0emAvSdd+0a7sM28xiZC5VZ
g0pvLOdUTj6a9k3ixH3YlBFPi3nv61D9yVPvRWk+CpwNMsZ92FtmlHu4ss3R
Bc5uTj3pArTz4tNz/1Mf9v92btF3eh3fK1Cxs7i0NW4IRe5Ke4XvFVhyZx7D
9wq2+cZSa0wNIcXCe+R7BTnbKXPwvYKauoWiecZh9CGa+ga+V1D2f+4VZP7v
ewVI7//cK/CYlUzF9wry3zl9Ct0xjJqSqCXwvYJhtgsv8b0CGdp7+1gLhtB9
t6Mp+F6BRbpSLL5XwCPHnLMpNYT6QpnI9wo2H1SS8L2Cnl3yJ87RD6K6zuUw
fK/gWKj6UXyvwMVtJrTrZj/qslJmwfcKCg8Ur+B7BZsqH9LMNHqR5+Mgenyv
IMapOwPfKxA3o6dTFulGnB+dz+B7BdE/Uo/gewXc+5iu36PsRIcT9vjiewUa
o1qr+F5BROA3/eLpNqQ4yLoT3yuIfLrfG98rWKl2erVrsQVp+I8M4XsFdOuH
nfC9grX4sE2mY99RZ/PUc3yvYOCAXQm+VyDMESlwhb0JbdX8JYLvFVCWfjF8
fygP9r+nmO/VrkfM9WXM+F6B9tXSKJ7sTKCVZmqI3laLlrRQLb5XwMH93MFr
Tyqwhnzv0tvzDRV/cLfA9wqW6SYeqPUnwlNVq7wfFlUo6yH1OL5XYBNy0u5y
RAx4mpYZRnNXoioz0ubYK4K33NwhffNEOOS9f+aUxFuBPptlvML3CkznnnwM
4QoC+tNPBgYcypHhz1kLfK/graoNxY3cV/CtiVGigrEcyRw5Lo3vFSyYDh41
/GMDTY3/q507j6YCbQMAXkwq0eJOlpAQKY1USFJvUqmbTCTps2Qp0qRlipDs
stOgwVCXCk3LrSwlLU+yjCVluRfXet17LdeSlGWk+O7TzHx/fOfonJkzf8z5
zvfvc57z3Oc87/O+995/frJZQ+9fgIX4qD96BeavA+7NWmgEvV3JEmflCoG2
tjcIvYLRZdJnyh19QD+XukQnrhBcSr9n/BWvYKr4G3nRl+jJZD35KnFleTs0
zMgXR0/G3+L7/ejJzDSjB4wv4kDjisqz6MkIF01moyeza3imsq0lB9T5XAp6
MiHPgu3Qk2GJS4duO8eBmCcsGnoyNJXnVejJbJZWvKzizQEVIdpnT4bZmGKI
nkz/mPC13r0coBmyt6Inc0luLAs9mZ6QzHSrT+3waLhmOXoyJowoUfRkShTz
PKPd2+FBq/1nT2aWr2YsejJpfpKr5r5gg1+mAhM9ma9L1d3QkymcYTKX8qoN
Xt6Zw0JPZtldpQz0ZIYW8aML2S2QfXr7QfRk2uhzqtCTybI89f4+swl+LDH8
Gj2ZSMrtxa9HK8lCT49M0RIWyByyuYCeTB/bJA09mV9cRMusf6mHhEkjXfRk
zraeS6d3F5Hi931ejXwmDP+croWeTMnKp6vQk7FiZ0RJ6jJASVRNFT2Z1DXa
dPRkqJZvYise1oDZoBdBT6at4IHtfv2HZIHfnrOLvquG4hjqGvRkfJbKuYuU
Z5G65ddEGkyr4O3Mvmb0ZLp11n617f0dIhKkEbmF+Qr0lJq10ZOZL9tZE2Se
Sa42FffZOVfCsVsux9GT8Q+6kWbpnUbORReGVVu8hNiJMTZ6MpfLxVfRXBJJ
hXuAzPm0ChAbG1qEnkz7tw57qjSjyLsssfMj2yuAcfxSCXoy83tVDONjz5DS
GQpJ83ZWgEFH32n0ZO6Uaf7qvP0UZCyZsDG9XQGL/Rvk0JMxpZY8me4UCfs9
6FrRHi+BLRP2t3oyU8VrozqL0Pvqnp7h17KeC6npUjz0vpwksx3Q+2q5qR0x
9wIX2HYKBeh9jY5z9dD7ssoKs5Z8yoWSZ72O6H3t7Xhoit5XDP3s9pQGLgzc
lNZD7yuT1fDxQRGHBJyuNNlZw4XDD+O10PvyzHXQRO8r1YVqfu86FzY8eP7Z
+6o/7cxE72t7z/dF3xlzQYJCCUTvK/TIpxL0vhY9Pv58ZRkHQvLtU9D7Wttf
QkXv61xe/F6rxRygbhaJRO/rXBiYoPel7u5AHzNrhwirTSHofQUUmMqj96Wm
Uk3PP8kGh3KKDXpfywI1VqP3ZT5wJkVxRhuc0bpng97X3sDSdPS+nr0UmrZP
tQXq0ndNR+9Ljad9FL0v/gJbTpTge2HCyM8Uva/JCM929L5cGAc2rspkgZ7Z
S030vo7IbNyD3tfYPg1lc4UGCDThSqL3ld+UE/eJ8oS0tdYlW5fUAVnQ1oze
V65rkQx6X77SiWtYNCYcnkhah97XCC04JFMvi2RUulb63mGA4ZljRuh9fZTY
7/9k223iKzxNSPRtLUCn0Fb0vuzf8LPR+3qWPZ7Ac64FxxjnfvS+boyXNRKJ
FGJdIrc+b2EteFZvjkPv64dcx4CFS6KJ1CHdn+o+1ICxJRxH76v0rvXGuWoO
5PzbucExMrXQvaZtI3pfH07FKInEBMNQdMojf7da2KhYloTe10ia+UB/ciIk
+cye9prCgGHxYPm/0/v6s/F1XRaL0WM8HS7J2niZB4Wyn3joMc5kx2mhx6hm
mmZk3sGDoti7hegxrijyCEOPMcll74ZuqQ7I93+SiB7j0bu6o+gxSq1/0JS7
qgPEjtYVo8cYkkPfgB5j45BxYcOyDpi3dYEUeoy64sEX0WPc/MgmJeIjD7Sm
0fvRY6zKnxh7caWFHBrVOTZ6iwf63pEn0GPMPsmxQ49xabDflVYdHnQNeqig
x7jaoV4GPcbejrPhXalcuNRsV40eo7iWmhJ6jJeprU52bznQZnOwBj1G/Yrl
PugxLpCU9vX/hgNxTweS0GM8/aOKDnqMG5tObHO0bwd6PIWLHqOJ2uNy9BiD
IiOWDsazYejgs3T0GN93N+ujxxjvNeiok9oG98YUzNFjDM+xo6HHKExRVC5b
0woB73euQ4+xKj1eDD3Gf802KU7obYaOZfmH0GNkbdl9HD1GXmj4ht7qJtDd
5KSHHuO9vOpA9Bj1a0QsBnsaoevwKVX0GM34BRfRYxzhVycf02sEygF/F/QY
Q9vqdqDHGL5iYpd1IQt2rSlIR4+xTXy0FD3GngvKeqGhLNBvLVuGHqNogc8p
9BiLD6QPDEaygO7sDegxuh3T2IQe4/t0964VDBbkwEATeoz1sXNuoMcodDWw
38+hEbJVg0m4Sj/Zx7s6HT1GamTDpwn9JjD5xqtr/V/wGCd9Vv808W0CSL/a
yo+SrSeGei+oCsx+Mies6qBoJA1480nkicB6ctupNajrWf+frm/uz3veKagv
dliTGiFbD7GHbaux/qvzPd1R666AWsW2vM7iRhD2WHCMITZ1/Q87a2yiBfnD
S4df84obSWG4W/OX8i9ebqELCfo3zlEvcA2sh9Tv0tq/1L+izr6Lc6fRYIX+
vp4CeRYpih7Xfnx06vxZURtWLxbk71U2ly6SZ4FS7ov8/C/kF+h2N9Hd0uBW
8WPyZqKRqLNVk3dPTH1eulUtWVeepoFFY4w7xZIFBgnuj99ZT11/aOntB9cF
+W7UOCFBPomzbar6Uv4OudjD2I+RnULU4EQjJDOu1xl/oZ//x3+L18mwnEJs
+4i31cEjN5kMolWflyMryvzH9flPi2+G5a9vmHeSbxy1Wje78mDbAfXkyXLG
P67P/9X4f82f/DH/PHENtdqkTnK8Mmh4npwgrlQkd6VZ8L/LpadNiN9JfD9K
Paoq5BK/nybV3BgMcm2t0wO5dV1kXYeG+qgDl6TvExFO6WSQt1G0i5aeXWSW
up1B1tdcEr1EobCilUEGu6Qonq+7iKtPtBntKoc8zbzzQ9kQg7y7RHlO3dRN
5C3elJUv5JDQFYpnKYI6OZ/M3H491E0chR9t0m1rJy8ORC6t7WcQk1u11TX+
3UTufmro9bx2IuOtaKDVI/jcsQU21e+6Sd3woZn689pJ91XHIs2ZTHJkt1rD
nhN8Yhue3dl4gE1kTNJO9L9jkJJ9YkxVXz5RtrBf0knY5Npm2d7cEQZhbw1r
9kjkk1ydHaN3pdmkcn5MN1XQZ1bswLI3Qj3EXLxu0dXCVrL9YZQ+VZxJcob5
9t4GPSSg6M16A8HvLVtbK+elwkySwJoMiAvoISSqQ7ZmopmY7OcEzacwSVdP
o0LZaA8J9tC30DZtIg2ywX0qEwxyS/KmRuBEDzloPL6Wo91EZNJHQsUnGURT
qnvl+PRe4uqVyo9QayLK10Z2ewnyDQdcmOdP9pKTQgUX5u1gkfqft3RSZZhE
dfuuEpnMXnIx9ZSHiW0DoRnQtZXmMYmSmeaj2pZeYsWPz3q4t57cb7x8/rQc
k9jmc0Of6Qvee3Xuux/DmeTwkZSU7NlTv2OSVolxbdv6iMLD9nurLZlE2i1x
coYY8z/voddv7yH88R5a/15/9m/1wen3+j6U/aFhqoL/HxoJk64fmTCYlyHx
QZAfVPauGPtvj97vKegfvh05o4P9S/Tr5kXP6SVBmcunuU5vgr7MTV5pgvkc
tL+v/nk+Chl9gvkAjW68B+dDg1fyOGeXkA32gjlDl8vjbpxzcpKBDZ4X69hc
Y8F5Abe08hCeV4NhBAvPvdOXNi44d9igWM/Hc8+oPVmD+7Pcizsg2B9wqs09
jvsjYUvLuCLLJ9VXP2rsYLFBnncTOgTxo95in/dTe7gpRLCfIFJnb4T7mfDx
JOCe51W8LRfsOZROxrvjnq9+VRyB90XPeYuR4L5A/QnXz/dFgjnEwnt3rty1
QHDvQC0yXhnv3VTn8m9GcxgP
       "], VertexTextureCoordinates -> CompressedData["
1:eJyt23uo32UdwPFjocx/YmapaQairihLLQ017atRdqGLlxShpJyOoKRMJSOX
brksKstKjqVdFLWjRmtOqx2XNS8zUslblOkqLddM3UwyJpSZ4V5f4T1+9E9/
Pby3c3bOvu/f8zyf23eX+R87YsHzpqamNjx/auq/69TUon0PPWv+G62XH/nA
qdfOXDzgf+3yi/tnZ64aebcLdv7c9OnXjjxv62unZ2euH/mAt6z968w2N4/8
7sVzD5o+/ZaR51/3hnOXrP3VyCsXXv3x2Zk7R16949svXLbm7pFvX/GHm2a2
+c3Ivzv61A3fOfSekR98Yusdpk+/d+QNX/vuIecsWzPyk3vt+5Ela/8w8uIP
LbjloHPuH/ns1+/1gdmZB0b+4pb//Ps+N/xp5HN/vfrzy9b8eeTpS87deY+N
D458wcnvWz6zzV9GvuiQeW/ddY91I1869/H7vnPoQyNf+ceVJ+143F9HXrr0
7C2nT3945Gs+ffgF20w/MvKKd750z3OWPTryz3Zad+OcW9ePfMPDVx2zZO2G
kW+ZXbj+6acfGyZ57cov5hfzi/nF/GJ+Mb+YX8wv5hfzi/nF/GJ+Mb+YX8wv
5hfzi/nF/GJ+Mb+YX8wv5hfzi/mdtE/rtSu/mF/ML+YX84v5xfxifjG/mF/M
L+YX84v5xfxifjG/mF/ML+YX84v5xfxifjG/mF/M76Rzt/u0Xrvyi/nF/GJ+
Mb+YX8wv5hfzi/nF/GJ+Mb+YX8wv5hfzi/nF/GJ+Mb+YX8wv5hfzi/mddI/2
3O0+rdeu/GJ+Mb+YX8wv5hfzi/nF/GJ+Mb+YX8wv5hfzi/nF/GJ+Mb+YX8wv
5hfzi/nF/E6Ki3qP9tztPq3XrvxifjG/mF/ML+YX84v5xfxifjG/mF/ML+YX
84v5xfxifjG/mF/ML+YX84v5nRTnNi7qPdpzt/u0Xrvyi/nF/GJ+Mb+YX8wv
5hfzi/nF/GJ+Mb+YX8wv5hfzi/nF/GJ+Mb+YX8zvpLylcW7jot6jPXe7T+u1
K7+YX8wv5hfzi/nF/GJ+Mb+YX8wv5hfzi/nF/GJ+Mb+YX8wv5hfzi/mdlIc2
b2mc27io92jP3e7Teu3KL+YX84v5xfxifjG/mF/ML+YX84v5xfxifjG/mF/M
L+YX84v5xfxOqis0D23e0ji3cVHv0Z673af12pVfzC/mF/OL+cX8Yn4xv5hf
zC/mF/OL+cX8Yn4xv5hfzC/mF/M7qU7UukLz0OYtjXMbF/Ue7bnbfVqvXfnF
/GJ+Mb+YX8wv5hfzi/nF/GJ+Mb+YX8wv5hfzi/nF/GJ+J9X9WidqXaF5aPOW
xrmNi3qP9tztPq3XrvxifjG/mF/ML+YX84v5xfxifjG/mF/ML+YX84v5xfxi
fifVcVv3a52odYXmoc1bGuc2Luo92nO3+7Reu/KL+cX8Yn4xv5hfzC/mF/OL
+cX8Yn4xv5hfzC/mF/M7qS7fOm7rfq0Tta7QPLR5S+PcxkW9R3vudp/Wa1d+
Mb+YX8wv5hfzi/nF/GJ+Mb+YX8wv5hfzi/nF/E7qs7Qu3zpu636tE7Wu0Dy0
eUvj3MZFvUd77naf1mtXfjG/mF/ML+YX84v5xfxifjG/mF/ML+YX84v5ndQ3
a5+ldfnWcVv3a52odYXmoc1bGuc2Luo92nO3+7Reu/KL+cX8Yn4xv5hfzC/m
F/OL+cX8Yn4xv5jfSX3Q9s3aZ2ldvnXc1v1aJ2pdoXlo85bGuY2Leo/23O0+
rdeu/GJ+Mb+YX8wv5hfzi/nF/GJ+Mb+YX8zvpL52+6Dtm7XP0rp867it+7VO
1LpC89DmLY1zGxf1Hu25231ar135xfxifjG/mF/ML+YX84v5xfxifjG/k+YU
2tduH7R9s/ZZWpdvHbd1v9aJWldoHtq8pXFu46Leoz13u0/rtSu/mF/ML+YX
84v5xfxifjG/mF/M76S5k84ptK/dPmj7Zu2ztC7fOm7rfq0Tta7QPLR5S+Pc
xkW9R3vudp/Wa1d+Mb+YX8wv5hfzi/nF/GJ+Mb+T5og6d9I5hfa12wdt36x9
ltblW8dt3a91otYVmoc2b2mc27io92jP3e7Teu3KL+YX84v5xfxifjG/mF/M
76S5sM4Rde6kcwrta7cP2r5Z+yyty7eO27pf60StKzQPbd7SOLdxUe/Rnrvd
p/XalV/ML+YX84v5xfxifjG/k+b8OhfWOaLOnXROoX3t9kHbN2ufpXX51nFb
92udqHWF5qHNWxrnNi7qPdpzt/u0Xrvyi/nF/GJ+Mb+YX8zvpLnNzvl1Lqxz
RJ076ZxC+9rtg7Zv1j5L6/Kt47bu1zpR6wrNQ5u3NM5tXNR7tOdu92m9duUX
84v5xfxifjG/k+ZwO7fZOb/OhXWOqHMnnVNoX7t90PbN2mdpXb513Nb9Widq
XaF5aPOWxrmNi3qP9tztPq3XrvxifjG/mF/M76S56s7hdm6zc36dC+scUedO
OqfQvnb7oO2btc/SunzruK37tU7UukLz0OYtjXMbF/Ue7bnbfVqvXfnF/GJ+
Mb+T5uQ7V9053M5tds6vc2GdI+rcSecU2tduH7R9s/ZZWpdvHbd1v9aJWldo
Htq8pXFu46Leoz13u0/rtSu/mF/M76T3Hjon37nqzuF2brNzfp0L6xxR5046
p9C+dvug7Zu1z9K6fOu4rfu1TtS6QvPQ5i2NcxsX9R7tudt9Wq9d+cX8TnqP
pe89dE6+c9Wdw+3cZuf8OhfWOaLOnXROoX3t9kHbN2ufpXX51nFb92udqHWF
5qHNWxrnNi7qPdpzt/u0XrvyO+m9pL7H0vceOiffuerO4XZus3N+nQvrHFHn
Tjqn0L52+6Dtm7XP0rp867it+7VO1LpC89DmLY1zGxf1Hu25231ar12nfvLi
b6+c+epzq/fONvGhR2y/6w0nP/d1k75v/LpN348nrZv9O/m+/h79vX3dqk+f
sf66mcXjOmerd8w5bnbyn3f1c/p1/fP+/P6c7pP+eX9u98fftn7HgS84/qvD
2753yX2Lv/7zcZ8d+NqFW+x9/o2bvUe06pQ3vP/q6aXDHmeeecLPr18x7sMl
7zlj42+XL9/s/aLDTjtg/pk7/3TY64o7jtp/3ZWbvRd43hUHLDnyztXDokVr
Hti4+3PvN8y98gWvvvpNX3tunvrxd1164Wc+vNn87b+vfutO33z69mHRY8/+
ffPvLbZ9zexLph4a7r/i2X/P59zPa/72jaMef9n3v/jwMHfT79t4f7urVmx7
2MJHh09u+v/aBztseh6NJ25624G3nLfdhmG/Tc+398+yH+785XWnPjY+b36+
NP+jszf/YNWw6OQFT//+zAuHY854+QV7zN4wLLr/8t/us/3i4bx5d9526tmz
w4lLPzXvG8uXDQ9efuXyJadcN7zi4/+8dfr8mWHuynXHf/35Px7Xv92z4Na9
X7d0OGHDni+54oOrhhNXXXX0TocvH87bb85TG3dbOXxw3oK9F7z34uGh/bf6
5l3/Wj0cvPv6RzbeMTN86amFT8x57Y3DSV+Zv+TN/zh/OOKME/Y6bO4vh1Uf
OfCVTxz3hWGfPWf2/dEutw1TL3rjCy+7+/hhzbdOu/eufW4fDl70y1cdO+8T
w0nHrj7rkZOfef77fnbtxqUXDXc9eu6arU98Jr984LKXb3nPNcOK3Z48f3q7
9Zt93vr/7ee1z6ef3z6Pfn77/Pp57vPr57vPr5/3Pu9+/vt8ux/qo/ujPrpf
NvPzP/ZP/XX/dH9t5jf7q77/3/utn5//9/77D+1vMjY=
       "]], {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, Ticks -> {Automatic, Automatic, Automatic}, FaceGrids -> None, 
     DisplayFunction -> Identity, Axes -> True, 
     AxesLabel -> {None, None, None}, 
     AxesOrigin -> {Automatic, Automatic, Automatic}, 
     BoxRatios -> {1, 1, 0.4}, DisplayFunction :> Identity, Lighting -> 
     "Neutral", Method -> {"RotationControl" -> "Globe"}, 
     PlotRange -> {{-2., 2.}, {-2., 2.}, {0., 1.9281540610885872`}}, 
     PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             RasterBox[CompressedData["
1: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

              "], {{
                Rational[-15, 2], -75}, {
                Rational[15, 2], 75}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], -75}, {
                  Rational[-15, 2], -75}, {
                  Rational[-15, 2], 75}, {
                  Rational[15, 2], 75}, {
                  Rational[15, 2], -75}}, {{
                 7.5, -75}, {-7.5, -75}, {-7.5, 75}, {7.5, 75}, {
                 7.5, -75}}]]}, {
              CapForm[None], {}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                LineBox[{{7.5, -75.}, {7.5, 75.}}], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]]}, StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{7.5, -75.}, 
                    Offset[{4., 0}, {7.5, -75.}]}, {{7.5, -37.5}, 
                    Offset[{4., 0}, {7.5, -37.5}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 37.5}, 
                    Offset[{4., 0}, {7.5, 37.5}]}, {{7.5, 75.}, 
                    Offset[{4., 0}, {7.5, 75.}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False], 
                   StyleBox[
                    LineBox[{{{7.5, -67.5}, 
                    Offset[{2.5, 0.}, {7.5, -67.5}]}, {{7.5, -60.}, 
                    Offset[{2.5, 0.}, {7.5, -60.}]}, {{7.5, -52.5}, 
                    Offset[{2.5, 0.}, {7.5, -52.5}]}, {{7.5, -45.}, 
                    Offset[{2.5, 0.}, {7.5, -45.}]}, {{7.5, -45.}, 
                    Offset[{2.5, 0.}, {7.5, -45.}]}, {{7.5, -30.}, 
                    Offset[{2.5, 0.}, {7.5, -30.}]}, {{7.5, -22.5}, 
                    Offset[{2.5, 0.}, {7.5, -22.5}]}, {{7.5, -15.}, 
                    Offset[{2.5, 0.}, {7.5, -15.}]}, {{7.5, -15.}, 
                    Offset[{2.5, 0.}, {7.5, -15.}]}, {{7.5, -7.5}, 
                    Offset[{2.5, 0.}, {7.5, -7.5}]}, {{7.5, 7.5}, 
                    Offset[{2.5, 0.}, {7.5, 7.5}]}, {{7.5, 15.}, 
                    Offset[{2.5, 0.}, {7.5, 15.}]}, {{7.5, 15.}, 
                    Offset[{2.5, 0.}, {7.5, 15.}]}, {{7.5, 22.5}, 
                    Offset[{2.5, 0.}, {7.5, 22.5}]}, {{7.5, 30.}, 
                    Offset[{2.5, 0.}, {7.5, 30.}]}, {{7.5, 45.}, 
                    Offset[{2.5, 0.}, {7.5, 45.}]}, {{7.5, 45.}, 
                    Offset[{2.5, 0.}, {7.5, 45.}]}, {{7.5, 52.5}, 
                    Offset[{2.5, 0.}, {7.5, 52.5}]}, {{7.5, 60.}, 
                    Offset[{2.5, 0.}, {7.5, 60.}]}, {{7.5, 67.5}, 
                    Offset[{2.5, 0.}, {7.5, 67.5}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}, StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"-\[Pi]\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -75.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"-\[Pi]/2\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -37.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"0\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"\[Pi]/2\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 37.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"\[Pi]\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 75.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], {"GraphicsLabel"}, 
                   StripOnInput -> False]}, {"GraphicsTicks"}, StripOnInput -> 
                 False], {{
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4]], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4], 
                   Opacity[0.3]]}}, StripOnInput -> False]}, {"GraphicsAxes"},
               StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
            PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 150}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{
                   InterpretationBox[
                    RowBox[{
                    TagBox["ColorDataFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"MidShiftBalancedHue\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"MidShiftBalancedHue\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Class: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ThemeGradients\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ColorDataFunction[
                    "MidShiftBalancedHue", "ThemeGradients", {0, 1}, Blend[
                    "MidShiftBalancedHue", #]& ], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], "[", "#1",
                    "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "150"}], ",", 
           RowBox[{"\"ColorFunctionShading\"", "\[Rule]", "None"}], ",", 
           RowBox[{"OpacityFunction", "\[Rule]", "None"}], ",", 
           RowBox[{"\"OpacityFunctionTicks\"", "\[Rule]", "None"}], ",", 
           RowBox[{"\"OpacityFunctionSize\"", "\[Rule]", 
             RowBox[{"Scaled", "[", "0.5`", "]"}]}], ",", 
           RowBox[{"\"OpacityFunctionRange\"", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], ",", 
           RowBox[{"Charting`TickLabels", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "\"-\[Pi]\"", ",", "\"-\[Pi]/2\"", ",", "\"0\"", ",", 
                 "\"\[Pi]/2\"", ",", "\"\[Pi]\""}], "}"}]}], ",", 
           RowBox[{"Ticks", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.`", ",", "0.25`", ",", "0.5`", ",", "0.75`", ",", 
                    "1.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    FractionBox["1", "20"], ",", 
                    FractionBox["1", "10"], ",", 
                    FractionBox["3", "20"], ",", 
                    FractionBox["1", "5"]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox["1", "5"], ",", 
                    FractionBox["1", "4"], ",", 
                    FractionBox["3", "10"], ",", 
                    FractionBox["7", "20"], ",", 
                    FractionBox["2", "5"]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox["2", "5"], ",", 
                    FractionBox["9", "20"], ",", 
                    FractionBox["1", "2"], ",", 
                    FractionBox["11", "20"], ",", 
                    FractionBox["3", "5"]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox["3", "5"], ",", 
                    FractionBox["13", "20"], ",", 
                    FractionBox["7", "10"], ",", 
                    FractionBox["3", "4"], ",", 
                    FractionBox["4", "5"]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox["4", "5"], ",", 
                    FractionBox["17", "20"], ",", 
                    FractionBox["9", "10"], ",", 
                    FractionBox["19", "20"], ",", "1"}], "}"}]}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellLabel->"Out[4]=",
 CellID->4296769,ExpressionUUID->"d949bd2f-94a1-431a-b724-7c767df5dd60"]
}, Open  ]]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "1"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{
    13.600000000000001`, {0.5800000000000001, 13.020000000000001`}}]],
  ExpressionUUID->"825d080b-6d11-4c37-9ccb-bcc7942721d6"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"c191b474-3cc1-464c-a990-a298701bb3f5"],
 "Scope",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(2)", "ExampleCount",ExpressionUUID->
  "f7b0a116-d6b5-4eaf-a1de-25109ec9122f"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->334479563,ExpressionUUID->"82cb8e9e-0d4a-4db9-8299-197f236a57ce"],

Cell["The function accepts integers:", "ExampleText",
 CellID->490016989,ExpressionUUID->"183df960-5bcb-446e-996b-72e3c82acafa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EulerianNumber", "[", 
  RowBox[{"10", ",", "5"}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`Combinatorics`"],
 CellLabel->"In[1]:=",
 CellID->59577161,ExpressionUUID->"d7d3f188-be34-4296-9b08-86c5323f44df"],

Cell[BoxData["1310354"], "Output",
 CellLabel->"Out[1]=",
 CellID->688462889,ExpressionUUID->"8ccc40fc-b811-42cd-a403-78cdc26f27c2"]
}, Open  ]],

Cell["Fractions in the field of rational numbers:", "ExampleText",
 CellID->382877827,ExpressionUUID->"d77df102-7adf-45da-85d7-fffa49aacc07"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EulerianNumber", "[", 
  RowBox[{
   RowBox[{"2", "+", 
    FractionBox["1", "2"]}], ",", "3"}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`Combinatorics`"],
 CellLabel->"In[2]:=",
 CellID->598129556,ExpressionUUID->"a075b129-23f7-4ca3-9fd8-96bfffe910ee"],

Cell[BoxData[
 RowBox[{
  FractionBox["35", "8"], "-", 
  RowBox[{"14", " ", 
   SqrtBox["2"]}], "+", 
  RowBox[{"9", " ", 
   SqrtBox["3"]}]}]], "Output",
 CellLabel->"Out[2]=",
 CellID->460608749,ExpressionUUID->"5f36fdc1-8fbd-4126-a089-109850f6bfe5"]
}, Open  ]],

Cell["Numbers that are not exact with decimal points:", "ExampleText",
 CellID->91166975,ExpressionUUID->"a9df7105-6917-4250-9a1a-bd33a85b0700"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EulerianNumber", "[", 
  RowBox[{"2.6", ",", "3"}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`Combinatorics`"],
 CellLabel->"In[3]:=",
 CellID->221470833,ExpressionUUID->"9453a72c-5045-43cd-b1b3-600ae13c17a0"],

Cell[BoxData["0.2523198466361345`"], "Output",
 CellLabel->"Out[3]=",
 CellID->371323146,ExpressionUUID->"159783c0-72d0-4dfb-872a-c469050444de"]
}, Open  ]],

Cell["Complex numbers:", "ExampleText",
 CellID->134559292,ExpressionUUID->"e4ebec97-bb31-4a96-8016-7df7f6436608"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EulerianNumber", "[", 
  RowBox[{
   RowBox[{"2", "+", 
    FractionBox["\[ImaginaryI]", "2"]}], ",", "3"}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`Combinatorics`"],
 CellLabel->"In[4]:=",
 CellID->662639218,ExpressionUUID->"75e307e2-0d3c-4712-b372-9b51754812bf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    FractionBox["23", "8"], "+", 
    FractionBox[
     RowBox[{"5", " ", "\[ImaginaryI]"}], "4"]}], ")"}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"6", "+", "\[ImaginaryI]"}], ")"}], " ", 
   SuperscriptBox["2", 
    RowBox[{"1", "+", 
     FractionBox["\[ImaginaryI]", "2"]}]]}], "+", 
  SuperscriptBox["3", 
   RowBox[{"2", "+", 
    FractionBox["\[ImaginaryI]", "2"]}]]}]], "Output",
 CellLabel->"Out[4]=",
 CellID->204356677,ExpressionUUID->"6b34401f-1d12-429d-a8c7-b33a548f0dd1"]
}, Open  ]],

Cell["Irrational numbers:", "ExampleText",
 CellID->169871261,ExpressionUUID->"cd2f66b4-17a6-45fa-8fa1-bb9b0d3bed84"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EulerianNumber", "[", 
  RowBox[{
   SqrtBox["3"], ",", "3"}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`Combinatorics`"],
 CellLabel->"In[5]:=",
 CellID->209010047,ExpressionUUID->"49d35ed6-2e36-4d1f-b6ae-7b2c70f1b7da"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["3", 
   SqrtBox["3"]], "+", 
  RowBox[{
   SuperscriptBox["2", 
    SqrtBox["3"]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "-", 
     SqrtBox["3"]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"3", "+", 
     SqrtBox["3"]}], ")"}]}]}]], "Output",
 CellLabel->"Out[5]=",
 CellID->9597219,ExpressionUUID->"b8ad6252-e2bd-44ff-b076-31e4f69e661f"]
}, Open  ]],

Cell["Transcendental numbers:", "ExampleText",
 CellID->265650413,ExpressionUUID->"6d3e8a09-2d51-4f20-8018-22dea7531e74"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EulerianNumber", "[", 
  RowBox[{"E", ",", "3"}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`Combinatorics`"],
 CellLabel->"In[6]:=",
 CellID->127088801,ExpressionUUID->"418efe5d-e6f8-4e6c-8f4c-ac37ec0b4e18"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["3", "\[ExponentialE]"], "+", 
  RowBox[{
   SuperscriptBox["2", "\[ExponentialE]"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "-", "\[ExponentialE]"}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"\[ExponentialE]", "+", 
     SuperscriptBox["\[ExponentialE]", "2"]}], ")"}]}]}]], "Output",
 CellLabel->"Out[6]=",
 CellID->299998698,ExpressionUUID->"ea9209bb-90c4-4ca4-bf30-88d5e59b3a77"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "49ce7a5a-55fe-4768-943f-c3abae0667d5"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->48641167,ExpressionUUID->"35adae47-48fd-4c90-83ff-35407b0b6e27"],

Cell["The numbers form an infinite lower-triangular matrix:", "ExampleText",
 CellID->649685796,ExpressionUUID->"742f96c2-10aa-45a6-bf39-f28b11daeea8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"EulerianNumber", "[", 
     RowBox[{"n", ",", "k"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "7"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "n"}], "}"}]}], "]"}], "//", "Grid"}]], "Input", \
"ExampleInput",
 CellProlog:>Needs["PeterBurbery`Combinatorics`"],
 CellLabel->"In[1]:=",
 CellID->836153427,ExpressionUUID->"dbe550b4-b9c7-490c-8f1c-35009b1eb130"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "", "", "", "", "", ""},
    {"1", "1", "", "", "", "", ""},
    {"1", "4", "1", "", "", "", ""},
    {"1", "11", "11", "1", "", "", ""},
    {"1", "26", "66", "26", "1", "", ""},
    {"1", "57", "302", "302", "57", "1", ""},
    {"1", "120", "1191", "2416", "1191", "120", "1"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->"Out[1]=",
 CellID->856898196,ExpressionUUID->"765a05fb-37cf-42ff-901b-0222407c2022"]
}, Open  ]],

Cell["\<\
The row sums are the factorials because they count the number of permutations:\
\>", "ExampleText",
 CellID->1621432878,ExpressionUUID->"70bf302b-6b12-40d4-87ca-cba97b0439ce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "/@", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"EulerianNumber", "[", 
     RowBox[{"n", ",", "k"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "7"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "n"}], "}"}]}], "]"}]}]], "Input", "ExampleInput",
 CellProlog:>Needs["PeterBurbery`Combinatorics`"],
 CellLabel->"In[2]:=",
 CellID->806909704,ExpressionUUID->"86ec123f-f961-4085-a054-336401e133d9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "6", ",", "24", ",", "120", ",", "720", ",", "5040"}], 
  "}"}]], "Output",
 CellLabel->"Out[2]=",
 CellID->276292579,ExpressionUUID->"984b8028-9f41-44ec-8d12-c0a7a5ac02a8"]
}, Open  ]]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "1"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "3"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{
    13.600000000000001`, {0.5800000000000001, 13.020000000000001`}}]],
  ExpressionUUID->"a9fc6b88-a9ac-436b-9901-fb6c862347fe"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"12bd985a-7d59-47c4-a21e-0770c0fbafb9"],
 "Properties & Relations",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "404e577e-9fb5-4586-a276-348e1e8a6e4f"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->80270152,ExpressionUUID->"83d0f02a-fda5-406f-945c-286f52af4e77"],

Cell["Here is one way of defining the function:", "ExampleText",
 CellID->214774946,ExpressionUUID->"668e77ef-526b-483e-a90a-1a13f9716c54"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"oneWayOfImplementingEulerianNumbers", "[", 
    RowBox[{"n_", ",", "m_"}], "]"}], ":=", 
   RowBox[{"0", "/;", 
    RowBox[{"Or", "@@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"m", ">=", "n"}], ",", 
       RowBox[{"n", "===", "0"}]}], "}"}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"oneWayOfImplementingEulerianNumbers", "[", 
     RowBox[{"n_", ",", "m_"}], "]"}], "/;", 
    RowBox[{"m", "===", "0"}]}], ":=", "1"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"oneWayOfImplementingEulerianNumbers", "[", 
   RowBox[{"n_", ",", "m_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"oneWayOfImplementingEulerianNumbers", "[", 
    RowBox[{"n", ",", "m"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"n", "-", "m"}], ")"}], 
     RowBox[{"oneWayOfImplementingEulerianNumbers", "[", 
      RowBox[{
       RowBox[{"n", "-", "1"}], ",", 
       RowBox[{"m", "-", "1"}]}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"m", "+", "1"}], ")"}], 
     RowBox[{"oneWayOfImplementingEulerianNumbers", "[", 
      RowBox[{
       RowBox[{"n", "-", "1"}], ",", "m"}], "]"}]}]}]}]}], "\n"}], "Input",
 CellProlog:>Needs["PeterBurbery`Combinatorics`"],
 CellLabel->"In[1]:=",
 CellID->559164495,ExpressionUUID->"609700d1-a9db-4413-b707-3f6ddf900669"],

Cell[TextData[{
 "Notice we are using memoization with \n\
oneWayOfImplementingEulerianNumbers[n_, m_] := \
oneWayOfImplementingEulerianNumbers[n, m] =. This is important. However, this \
does not extend the function to noninteger numbers which the current \
definition with SeriesCoefficient and PolyLog based on the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ResourceFunction EulerianNumber"]], 
    "https://resources.wolframcloud.com/FunctionRepository/resources/\
EulerianNumber"},
   "WebLink",
   BaseStyle->{"ExampleText"}]],ExpressionUUID->
  "219cf489-8b14-4086-8846-515cbe58f526"],
 " does."
}], "ExampleText",
 CellID->13303137,ExpressionUUID->"1ccce827-9d3e-4965-9c08-9d4431b469ca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"oneWayOfImplementingEulerianNumbers", "[", 
  RowBox[{
   RowBox[{"2", "+", 
    FractionBox["1", "2"]}], ",", "3"}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`Combinatorics`"],
 CellLabel->"In[2]:=",
 CellID->92203917,ExpressionUUID->"5303569e-dea2-4a02-9560-f81ae2a38c58"],

Cell[BoxData["0"], "Output",
 CellLabel->"Out[2]=",
 CellID->209001974,ExpressionUUID->"71a119ed-3084-4f9a-96fc-ba0a5c03d3bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EulerianNumber", "[", 
  RowBox[{
   RowBox[{"2", "+", 
    FractionBox["1", "2"]}], ",", "3"}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`Combinatorics`"],
 CellLabel->"In[3]:=",
 CellID->267491802,ExpressionUUID->"b589d2f5-6e85-4529-b165-d2ab10cf5053"],

Cell[BoxData[
 RowBox[{
  FractionBox["35", "8"], "-", 
  RowBox[{"14", " ", 
   SqrtBox["2"]}], "+", 
  RowBox[{"9", " ", 
   SqrtBox["3"]}]}]], "Output",
 CellLabel->"Out[3]=",
 CellID->8679249,ExpressionUUID->"49982bbc-ac04-46e7-bdeb-743379e7a243"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "3"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "4"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{
    13.600000000000001`, {0.5800000000000001, 13.020000000000001`}}]],
  ExpressionUUID->"61e9135f-68ad-4432-840a-10899320d8a6"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"f9787fbe-a7eb-48cb-ad20-a3c2ee1cad43"],
 "Neat Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "eb038947-ce50-4ad3-a3a6-3f78ef79c7ee"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->628496213,ExpressionUUID->"04ae3599-6610-4add-8867-847715e6d4ec"],

Cell["Here the entries are signed in a checkerboard pattern:", "ExampleText",
 CellID->1929647873,ExpressionUUID->"c0237a0e-c57f-4e2f-b149-02df862f94ef"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"n", "-", "k"}], ")"}]}], 
     RowBox[{"EulerianNumber", "[", 
      RowBox[{"n", ",", "k"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "7"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "n"}], "}"}]}], "]"}], "//", "Grid"}]], "Input", \
"ExampleInput",
 CellProlog:>Needs["PeterBurbery`Combinatorics`"],
 CellLabel->"In[1]:=",
 CellID->526552805,ExpressionUUID->"bf6faacf-2936-4210-ab37-2f04fd09f93a"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "", "", "", "", "", ""},
    {
     RowBox[{"-", "1"}], "1", "", "", "", "", ""},
    {"1", 
     RowBox[{"-", "4"}], "1", "", "", "", ""},
    {
     RowBox[{"-", "1"}], "11", 
     RowBox[{"-", "11"}], "1", "", "", ""},
    {"1", 
     RowBox[{"-", "26"}], "66", 
     RowBox[{"-", "26"}], "1", "", ""},
    {
     RowBox[{"-", "1"}], "57", 
     RowBox[{"-", "302"}], "302", 
     RowBox[{"-", "57"}], "1", ""},
    {"1", 
     RowBox[{"-", "120"}], "1191", 
     RowBox[{"-", "2416"}], "1191", 
     RowBox[{"-", "120"}], "1"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->"Out[1]=",
 CellID->482920934,ExpressionUUID->"867af394-27bc-40cc-aba1-8d520493dd4f"]
}, Open  ]],

Cell["Here are those row sums:", "ExampleText",
 CellID->1203510731,ExpressionUUID->"c972538e-fa8a-496e-b5ef-b675bc780ceb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "/@", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"n", "-", "k"}], ")"}]}], 
     RowBox[{"EulerianNumber", "[", 
      RowBox[{"n", ",", "k"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "12"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "n"}], "}"}]}], "]"}]}]], "Input", "ExampleInput",
 CellProlog:>Needs["PeterBurbery`Combinatorics`"],
 CellLabel->"In[2]:=",
 CellID->582995949,ExpressionUUID->"b01447e5-1a0c-42f5-8dd6-27c647f67bba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0", ",", 
   RowBox[{"-", "2"}], ",", "0", ",", "16", ",", "0", ",", 
   RowBox[{"-", "272"}], ",", "0", ",", "7936", ",", "0", ",", 
   RowBox[{"-", "353792"}], ",", "0"}], "}"}]], "Output",
 CellLabel->"Out[2]=",
 CellID->291782009,ExpressionUUID->"2c53210a-5bb4-4366-819c-1d13a2211389"]
}, Open  ]],

Cell[TextData[{
 "Expand ",
 Cell[BoxData[
  TagBox[
   TemplateBox[{
     Cell[
      TextData[
       StyleBox[
       "Tan", "SymbolsRefLink", ShowStringCharacters -> True, FontFamily -> 
        "Source Sans Pro"]]], "paclet:ref/Tan"},
    "RefLink",
    BaseStyle->{"InlineFormula"}],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "04296c53-4f7b-4bda-afca-451a63eb903b"],
 Cell[BoxData[
  RowBox[{"[", 
   StyleBox["x", "TI"], "]"}]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "7a36765f-644c-418a-86dd-84ccd402e9c9"],
 ":"
}], "ExampleText",
 CellID->553844154,ExpressionUUID->"8f970c81-9830-4f94-af7b-d66cc3e4f78e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CoefficientList", "[", 
  RowBox[{
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"Tan", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "12"}], "}"}]}], "]"}], ",", "x"}], 
  "]"}]], "Input", "ExampleInput",
 CellProlog:>Needs["PeterBurbery`Combinatorics`"],
 CellLabel->"In[3]:=",
 CellID->1914788391,ExpressionUUID->"de0633da-edc9-4949-b769-ffbe94abc625"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1", ",", "0", ",", 
   FractionBox["1", "3"], ",", "0", ",", 
   FractionBox["2", "15"], ",", "0", ",", 
   FractionBox["17", "315"], ",", "0", ",", 
   FractionBox["62", "2835"], ",", "0", ",", 
   FractionBox["1382", "155925"]}], "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->546338240,ExpressionUUID->"0f75cfea-8ddf-4e92-9600-efab484a3fb7"]
}, Open  ]],

Cell["\<\
Get rid of the factorials in the denominators to match the row sums up to \
signs and a shift:\
\>", "ExampleText",
 CellID->259674315,ExpressionUUID->"0940f5d6-367c-45e8-a9c7-604ec99b3b35"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", " ", 
  RowBox[{
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "11"}], "]"}], "!"}], " "}]], "Input", "ExampleInput",
 CellProlog:>Needs["PeterBurbery`Combinatorics`"],
 CellLabel->"In[4]:=",
 CellID->295577922,ExpressionUUID->"bef1a8d1-9df6-4ae4-ad99-09c07a859fc4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "0", ",", "2", ",", "0", ",", "16", ",", "0", ",", 
   "272", ",", "0", ",", "7936", ",", "0", ",", "353792"}], "}"}]], "Output",
 CellLabel->"Out[4]=",
 CellID->676836955,ExpressionUUID->"424a2cfa-27dc-4b3e-b828-00d6e27558f3"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "4"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, 
  Closed]]]],

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, 
       "RelatedFunction.png"]],
     ImageSizeCache->{50., {27., 33.}}], GridBox[{
      {
       StyleBox[
        RowBox[{"See", " ", "Also"}], "SeeAlsoSection"]},
      {Cell[TextData[{
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Permutations"]], "paclet:ref/Permutations"},
          "RefLink",
          BaseStyle->{"InlineFormula"}]], "InlineFormula",
         FontFamily->"Source Sans Pro",
         CellTags->"37acc825-7afc-46dd-8898-6cd89ce9fdb2",ExpressionUUID->
         "cc570b9b-3087-4382-be90-7472604704dd"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["PermutationList"]], "paclet:ref/PermutationList"},
          "RefLink",
          BaseStyle->{"InlineFormula"}]], "InlineFormula",
         FontFamily->"Source Sans Pro",
         CellTags->"87bdc98b-51bc-49ad-9564-203beebfaf4b",ExpressionUUID->
         "e9282d33-a7d8-424f-8c0b-ec7fd6bfdd3f"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["TangentNumber"]], 
           "paclet:PeterBurbery/Combinatorics/ref/TangentNumber", 
           "PeterBurbery Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",
         CellTags->"2a51c4d1-8afb-4e66-aebd-def53adff4a6",ExpressionUUID->
         "c9dadfa1-36e7-4ed8-aa55-e8aa92e8ad2e"]
       }], "SeeAlso",ExpressionUUID->"aeede9a1-713e-4da4-bee6-19e8c208f551"]}
     }]}
  }]], "SeeAlsoSection",ExpressionUUID->"d1fa7d0b-0b44-4fa7-b2fd-\
e41fb88093dd"],

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, "RelatedGuide.png"]],
     ImageSizeCache->{50., {27., 33.}}], GridBox[{
      {
       StyleBox[
        RowBox[{"Related", " ", "Guides"}], "MoreAboutSection"]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Combinatorics"]], 
           "paclet:PeterBurbery/Combinatorics/guide/Combinatorics"},
          "RefLinkPlain",
          BaseStyle->{"MoreAbout"}]], "MoreAbout",ExpressionUUID->
         "d500e3de-401a-4672-ad42-b2cd6da5844f"]}]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Functions I understand in combinatorics"]], 
           "paclet:PeterBurbery/Combinatorics/guide/\
FunctionsIunderstandincombinatorics"},
          "RefLinkPlain",
          BaseStyle->{"MoreAbout"}]], "MoreAbout",ExpressionUUID->
         "3fd86ff6-c694-476d-b7a9-04b285ecd9f6"]}]}
     }]}
  }]], "MoreAboutSection",ExpressionUUID->"b0887e75-a65f-44c4-a78d-\
25b24883556b"],

Cell[BoxData[GridBox[{
   {
    TemplateBox[{29},
     "Spacer1"], GridBox[{
      {
       RowBox[{
        TemplateBox[{17},
         "Spacer1"], 
        StyleBox[
         RowBox[{"Related", " ", "Links"}], "RelatedLinksSection"]}]},
      {Cell[TextData[Cell[BoxData[
        RowBox[{
         TemplateBox[{16},
          "Spacer1"], "\[FilledVerySmallSquare]", Cell[BoxData[
          TemplateBox[{
            Cell[
             TextData[
              Cell[
               TextData[{
                 Cell[
                  BoxData[
                   TemplateBox[{2}, "Spacer1"]]], 
                 "Wikipedia\[LongDash]Eulerian number"}]]]], 
            "https://en.wikipedia.org/wiki/Eulerian_number"},
           "WebLink",
           BaseStyle->{"RelatedLinks"}]],ExpressionUUID->
          "a4feb4a2-7200-42f1-bc4e-3d442487b049"]}]],ExpressionUUID->
        "795fd873-e1cf-42a9-829e-79a9dc2f8e49"]], "RelatedLinks",
        ExpressionUUID->"837a5048-748b-44bf-8a99-2176f390bddf"]},
      {Cell[TextData[Cell[BoxData[
        RowBox[{
         TemplateBox[{16},
          "Spacer1"], "\[FilledVerySmallSquare]", Cell[BoxData[
          TemplateBox[{
            Cell[
             TextData[
              Cell[
               TextData[{
                 Cell[
                  BoxData[
                   TemplateBox[{2}, "Spacer1"]]], 
                 "Sage-math\[CloseCurlyQuote]s documentation for Eulerian \
numbers"}]]]], 
            "https://doc.sagemath.org/html/en/reference/combinat/sage/\
combinat/combinat.html#sage.combinat.combinat.eulerian_number"},
           "WebLink",
           BaseStyle->{"RelatedLinks"}]],ExpressionUUID->
          "d5e13102-3783-425a-96ed-1ef8f2bd5164"]}]],ExpressionUUID->
        "e1b036ae-502a-4a4f-b697-5e71907522f7"]], "RelatedLinks",
        ExpressionUUID->"ebc58851-3eef-4f47-abde-4e351db31316"]},
      {Cell[TextData[Cell[BoxData[
        TemplateBox[{
          Cell[
           TextData[
            Cell[
             TextData[{
               Cell[
                BoxData[
                 DynamicBox[
                  FEPrivate`ImportImage[
                   
                   FrontEnd`FileName[{"Documentation", "FooterIcons"}, 
                    "RelatedLinks-MathWorld.png"]]]]], 
               Cell[
                BoxData[
                 TemplateBox[{4}, "Spacer1"]]], 
               "Eulerian Number\[LongDash]Wolfram MathWorld"}]]]], 
          "https://mathworld.wolfram.com/EulerianNumber.html"},
         "WebLink",
         BaseStyle->{"RelatedLinks"}]],ExpressionUUID->
        "58bac69e-3f64-443b-910d-cfa2376212c0"]], "RelatedLinks",
        ExpressionUUID->"785316d4-b198-4ca1-b908-86bcc2314e7a"]},
      {Cell[TextData[Cell[BoxData[
        TemplateBox[{
          Cell[
           TextData[
            Cell[
             TextData[{
               Cell[
                BoxData[
                 DynamicBox[
                  FEPrivate`ImportImage[
                   
                   FrontEnd`FileName[{"Documentation", "FooterIcons"}, 
                    "RelatedLinks-MathWorld.png"]]]]], 
               Cell[
                BoxData[
                 TemplateBox[{4}, "Spacer1"]]], 
               "Tangent Number\[LongDash]Wolfram MathWorld"}]]]], 
          "https://mathworld.wolfram.com/TangentNumber.html"},
         "WebLink",
         BaseStyle->{"RelatedLinks"}]],ExpressionUUID->
        "7413f24a-8590-4303-84bd-773c45d56ca2"]], "RelatedLinks",
        ExpressionUUID->"681e69de-5c69-4761-9c90-10439e0e762a"]},
      {Cell[TextData[Cell[BoxData[
        TemplateBox[{
          Cell[
           TextData[
            Cell[
             TextData[{
               Cell[
                BoxData[
                 DynamicBox[
                  FEPrivate`ImportImage[
                   
                   FrontEnd`FileName[{"Documentation", "FooterIcons"}, 
                    "RelatedLinks-Demonstrations.png"]]]]], 
               Cell[
                BoxData[
                 TemplateBox[{4}, "Spacer1"]]], 
               "Eulerian Numbers versus Stirling Numbers of the First Kind\
\[LongDash]Wolfram Demonstrations Project"}]]]], 
          "https://demonstrations.wolfram.com/\
EulerianNumbersVersusStirlingNumbersOfTheFirstKind/"},
         "WebLink",
         BaseStyle->{"RelatedLinks"}]],ExpressionUUID->
        "37d1fea7-b419-4a81-b3e7-05becfd83252"]], "RelatedLinks",
        ExpressionUUID->"d4cf7b05-ff49-4d3c-b231-d3ab808b3590"]},
      {Cell[TextData[{
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData[
             Cell[
              TextData[{
                Cell[
                 BoxData[
                  DynamicBox[
                   FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Documentation", "FooterIcons"}, 
                    "RelatedLinks-FunctionRepository.png"]]]]], 
                Cell[
                 BoxData[
                  TemplateBox[{4}, "Spacer1"]]], "EulerianNumber"}]]]], 
           "https://resources.wolframcloud.com/FunctionRepository/resources/\
EulerianNumber"},
          "WebLink",
          BaseStyle->{"RelatedLinks"}]],ExpressionUUID->
         "e2d3f86f-7ed2-48c0-8d91-3fda3139a69b"],
        " Resource Function contributed by Wolfram Staff"
       }], "RelatedLinks",ExpressionUUID->
        "95169169-8446-4e73-badc-6821d0af24f6"]}
     }]}
  }]], "RelatedLinksSection",ExpressionUUID->"62657011-c534-4646-82e5-\
2d3d41d9544a"],

Cell[" ", "FooterCell",ExpressionUUID->"3dd82caa-fdfb-42cc-a8f3-5ef45dbcaed7"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{900, 604.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"EulerianNumber",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "", "LinkTrails" -> "", 
  "HasOptions" -> True, "ExampleCounter" -> 1, 
  "Openers" -> {
   "PrimaryExamplesSection" -> Open, 
    "ExampleSection" -> {
     "0" -> Open, "1" -> Closed, "3" -> Closed, "4" -> Closed}, 
    "NotesSection" -> Closed}, "NewStyles" -> True, 
  "CitationPopupData" -> $Failed, "ShowCitation" -> False, "RootCaptions" -> 
  "", "Metadata" -> {
   "built" -> "{2023, 8, 3, 20, 35, 25.2920331}", 
    "history" -> {"XX", "", "", ""}, "context" -> 
    "PeterBurbery`Combinatorics`", 
    "keywords" -> {
     "permutation", "ascent", "descent", "tangent number", "zag number", 
      "secant number", "zigzag number"}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Peter Burbery/ Combinatorics Symbol", "language" -> "en", "paclet" -> 
    "PeterBurbery/Combinatorics", "status" -> "None", "summary" -> 
    "EulerianNumber[n, k] gives the number of permutations of the numbers 1 \
to n in which exactly k elements are greater than the previous element \
(permutations with k \"ascents\")", "synonyms" -> {}, "tabletags" -> {}, 
    "title" -> "EulerianNumber", "titlemodifier" -> "", "metadescription" -> 
    "", "windowtitle" -> "EulerianNumber", "type" -> "Symbol", "uri" -> 
    "PeterBurbery/Combinatorics/ref/EulerianNumber"}},
CellContext->"Global`",
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (June 3, 2023)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "13.3 for Microsoft Windows (64-bit) (June 3, 2023)", 
  StyleDefinitions -> "Default.nb"],
ExpressionUUID->"fba78dbd-9708-4e09-842e-97e00ad9bc53"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "TabNext"->{
  Cell[11387, 296, 1037, 35, 70, "Notes",ExpressionUUID->"82845203-b486-41c3-ba74-7bb442edf092",
   CellTags->"TabNext",
   CellID->521904482]},
 "PrimaryExamplesSection"->{
  Cell[15166, 413, 1420, 37, 35, "PrimaryExamplesSection",ExpressionUUID->"68ae0fcb-f50d-4ba6-bf0e-2420c095bc61",
   CellTags->"PrimaryExamplesSection",
   CellID->145259871]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"TabNext", 182150, 3788},
 {"PrimaryExamplesSection", 182324, 3792}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[586, 21, 6265, 149, 56, "AnchorBarGrid",ExpressionUUID->"733a18db-5603-462a-abe1-dde3b1bd4db2",
 CellID->1],
Cell[6854, 172, 109, 0, 23, "ContextNameCell",ExpressionUUID->"c9955c91-e14d-4e1e-91e0-537845a15a24"],
Cell[CellGroupData[{
Cell[6988, 176, 557, 14, 56, "ObjectNameGrid",ExpressionUUID->"bbcff1ff-0709-4bff-9961-fa00c719e55d"],
Cell[7548, 192, 1409, 34, 132, "Usage",ExpressionUUID->"cb091d47-1032-4e4d-a702-dcd722ea251d",
 CellID->426482105]
}, Open  ]],
Cell[CellGroupData[{
Cell[8994, 231, 1919, 48, 37, "NotesSection",ExpressionUUID->"940cd3c5-ff52-4a70-9d43-4485d969560e",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->615727120],
Cell[10916, 281, 137, 1, 70, "Notes",ExpressionUUID->"adf61880-ece6-4960-abad-5727f3a3b982",
 CellID->442113155],
Cell[11056, 284, 328, 10, 70, "Notes",ExpressionUUID->"ca69fa7b-2ded-4ca1-b561-575af5effa75",
 CellID->105800301],
Cell[11387, 296, 1037, 35, 70, "Notes",ExpressionUUID->"82845203-b486-41c3-ba74-7bb442edf092",
 CellTags->"TabNext",
 CellID->521904482],
Cell[12427, 333, 398, 6, 70, "Notes",ExpressionUUID->"455aca93-9776-4324-9cd6-5867d0ac7453",
 CellID->247947816],
Cell[12828, 341, 124, 1, 70, "Notes",ExpressionUUID->"22950d6f-4d66-4b78-aa96-10a446d26d1d",
 CellID->39057588],
Cell[12955, 344, 640, 17, 70, "Notes",ExpressionUUID->"ec3bb0f4-2c62-4b29-9308-e5de10c91972",
 CellID->236283598],
Cell[13598, 363, 133, 1, 70, "Notes",ExpressionUUID->"2f9a2fd1-ed90-46b9-82f7-acd02c90910f",
 CellID->3969473],
Cell[13734, 366, 569, 17, 70, "Notes",ExpressionUUID->"142a31cb-1e2a-41f9-8a2f-391c4dce9b8e",
 InitializationCell->True,
 CellID->442612299],
Cell[14306, 385, 541, 16, 70, "Notes",ExpressionUUID->"5d3fcb86-6466-4feb-826c-bc7cab2fbe44",
 CellID->90642782],
Cell[14850, 403, 189, 4, 70, "Notes",ExpressionUUID->"6f35b0f1-581f-4b46-8c43-5cf3075508b8",
 CellID->112995886]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],
Cell[CellGroupData[{
Cell[15166, 413, 1420, 37, 35, "PrimaryExamplesSection",ExpressionUUID->"68ae0fcb-f50d-4ba6-bf0e-2420c095bc61",
 CellTags->"PrimaryExamplesSection",
 CellID->145259871],
Cell[16589, 452, 216, 4, 26, "Input",ExpressionUUID->"b23e9b36-3899-482b-8c6c-1ed35f101705",
 CellID->28192180],
Cell[CellGroupData[{
Cell[16830, 460, 1398, 36, 30, "ExampleSection",ExpressionUUID->"fcd5a2c6-ed4f-4cab-8abe-008b75489cf7",
 CellID->193189557],
Cell[18231, 498, 137, 1, 38, "ExampleText",ExpressionUUID->"29438bd6-6ce1-4334-aaac-3fe4b1e05853",
 CellID->537854770],
Cell[CellGroupData[{
Cell[18393, 503, 506, 14, 26, "Input",ExpressionUUID->"006371a9-ccdf-49f0-92bb-7940aa8a86bc",
 CellID->400353117],
Cell[18902, 519, 940, 19, 189, "Output",ExpressionUUID->"36a513f5-3d59-44ae-b4aa-6c946c8ca2b1",
 CellID->135332569]
}, Open  ]],
Cell[CellGroupData[{
Cell[19879, 543, 241, 5, 70, "ExampleDelimiter",ExpressionUUID->"51f76d5c-6566-4b0f-a9ae-9cdcb33a6a80",
 CellID->15717069],
Cell[20123, 550, 123, 1, 70, "ExampleText",ExpressionUUID->"4782dd54-d520-443a-9695-3cfa482f0197",
 CellID->909251125],
Cell[20249, 553, 363, 9, 70, "Input",ExpressionUUID->"7e021ba6-010f-4286-a13c-ceb92e482da3",
 CellID->1823612118],
Cell[20615, 564, 711, 23, 70, "ExampleText",ExpressionUUID->"210b81a9-5918-43b1-8b75-cb4d07139054",
 CellID->13078159],
Cell[CellGroupData[{
Cell[21351, 591, 232, 4, 70, "Input",ExpressionUUID->"44330443-1364-4641-8bd2-3a4f82fd58f1",
 CellID->1376129491],
Cell[21586, 597, 191, 4, 35, "Output",ExpressionUUID->"cddccdd0-0c54-42ad-a67a-1dd749376a72",
 CellID->499998123]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[21826, 607, 240, 5, 70, "ExampleDelimiter",ExpressionUUID->"3c0fc781-c9fe-45e8-a360-b6a7aec863b6",
 CellID->6054766],
Cell[22069, 614, 357, 9, 70, "ExampleText",ExpressionUUID->"dc661e41-bcbd-4f30-b2c4-11d6e4728473",
 CellID->1699811797],
Cell[CellGroupData[{
Cell[22451, 627, 329, 7, 70, "Input",ExpressionUUID->"56088dee-aae5-4fe1-b3f6-ba48e7891b21",
 CellID->1488198176],
Cell[22783, 636, 406, 8, 35, "Output",ExpressionUUID->"74a02eb7-58ee-4bae-8225-0f3ec6ad2a55",
 CellID->248859223]
}, Open  ]],
Cell[23204, 647, 152, 1, 70, "ExampleText",ExpressionUUID->"4f8c1371-247d-4deb-9e84-b04dce4169fa",
 CellID->645905163],
Cell[CellGroupData[{
Cell[23381, 652, 308, 7, 70, "Input",ExpressionUUID->"5b39a924-62f9-4a81-9a8c-d0dea9c42a76",
 CellID->221808456],
Cell[23692, 661, 193, 4, 35, "Output",ExpressionUUID->"fe6efbcb-93dd-47f9-bed8-87afaded71ae",
 CellID->316796322]
}, Open  ]],
Cell[23900, 668, 196, 4, 70, "ExampleText",ExpressionUUID->"fd3769bc-9018-4a9d-9777-4f9af3786b6c",
 CellID->1074356342],
Cell[CellGroupData[{
Cell[24121, 676, 289, 6, 70, "Input",ExpressionUUID->"73d2a32d-5307-433b-86ac-c3f6982f60a3",
 CellID->1533068896],
Cell[24413, 684, 192, 4, 35, "Output",ExpressionUUID->"c6d66bf3-3483-4083-9d36-e6983530dc1a",
 CellID->24045907]
}, Open  ]],
Cell[24620, 691, 134, 1, 70, "ExampleText",ExpressionUUID->"1d48a906-dfc8-4652-9d33-1398594b10a8",
 CellID->214227103],
Cell[CellGroupData[{
Cell[24779, 696, 540, 15, 70, "Input",ExpressionUUID->"84adb279-ed8a-41fd-a10e-8763ebeb8104",
 CellID->618289619],
Cell[25322, 713, 125621, 2150, 251, "Output",ExpressionUUID->"d949bd2f-94a1-431a-b724-7c767df5dd60",
 CellID->4296769]
}, Open  ]]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, Closed]]]],
Cell[CellGroupData[{
Cell[151104, 2872, 1412, 37, 70, "ExampleSection",ExpressionUUID->"82cb8e9e-0d4a-4db9-8299-197f236a57ce",
 CellID->334479563],
Cell[152519, 2911, 128, 1, 70, "ExampleText",ExpressionUUID->"183df960-5bcb-446e-996b-72e3c82acafa",
 CellID->490016989],
Cell[CellGroupData[{
Cell[152672, 2916, 239, 5, 70, "Input",ExpressionUUID->"d7d3f188-be34-4296-9b08-86c5323f44df",
 CellID->59577161],
Cell[152914, 2923, 132, 2, 35, "Output",ExpressionUUID->"8ccc40fc-b811-42cd-a403-78cdc26f27c2",
 CellID->688462889]
}, Open  ]],
Cell[153061, 2928, 141, 1, 70, "ExampleText",ExpressionUUID->"d77df102-7adf-45da-85d7-fffa49aacc07",
 CellID->382877827],
Cell[CellGroupData[{
Cell[153227, 2933, 286, 7, 70, "Input",ExpressionUUID->"a075b129-23f7-4ca3-9fd8-96bfffe910ee",
 CellID->598129556],
Cell[153516, 2942, 253, 8, 51, "Output",ExpressionUUID->"5f36fdc1-8fbd-4126-a089-109850f6bfe5",
 CellID->460608749]
}, Open  ]],
Cell[153784, 2953, 144, 1, 70, "ExampleText",ExpressionUUID->"a9df7105-6917-4250-9a1a-bd33a85b0700",
 CellID->91166975],
Cell[CellGroupData[{
Cell[153953, 2958, 241, 5, 70, "Input",ExpressionUUID->"9453a72c-5045-43cd-b1b3-600ae13c17a0",
 CellID->221470833],
Cell[154197, 2965, 144, 2, 35, "Output",ExpressionUUID->"159783c0-72d0-4dfb-872a-c469050444de",
 CellID->371323146]
}, Open  ]],
Cell[154356, 2970, 114, 1, 70, "ExampleText",ExpressionUUID->"e4ebec97-bb31-4a96-8016-7df7f6436608",
 CellID->134559292],
Cell[CellGroupData[{
Cell[154495, 2975, 298, 7, 70, "Input",ExpressionUUID->"75e307e2-0d3c-4712-b372-9b51754812bf",
 CellID->662639218],
Cell[154796, 2984, 543, 17, 51, "Output",ExpressionUUID->"6b34401f-1d12-429d-a8c7-b33a548f0dd1",
 CellID->204356677]
}, Open  ]],
Cell[155354, 3004, 117, 1, 70, "ExampleText",ExpressionUUID->"cd2f66b4-17a6-45fa-8fa1-bb9b0d3bed84",
 CellID->169871261],
Cell[CellGroupData[{
Cell[155496, 3009, 252, 6, 70, "Input",ExpressionUUID->"49d35ed6-2e36-4d1f-b6ae-7b2c70f1b7da",
 CellID->209010047],
Cell[155751, 3017, 449, 17, 50, "Output",ExpressionUUID->"b8ad6252-e2bd-44ff-b076-31e4f69e661f",
 CellID->9597219]
}, Open  ]],
Cell[156215, 3037, 121, 1, 70, "ExampleText",ExpressionUUID->"6d3e8a09-2d51-4f20-8018-22dea7531e74",
 CellID->265650413],
Cell[CellGroupData[{
Cell[156361, 3042, 239, 5, 70, "Input",ExpressionUUID->"418efe5d-e6f8-4e6c-8f4c-ac37ec0b4e18",
 CellID->127088801],
Cell[156603, 3049, 491, 14, 50, "Output",ExpressionUUID->"ea9209bb-90c4-4ca4-bf30-88d5e59b3a77",
 CellID->299998698]
}, Open  ]],
Cell[CellGroupData[{
Cell[157131, 3068, 241, 5, 70, "ExampleDelimiter",ExpressionUUID->"35adae47-48fd-4c90-83ff-35407b0b6e27",
 CellID->48641167],
Cell[157375, 3075, 151, 1, 70, "ExampleText",ExpressionUUID->"742f96c2-10aa-45a6-bf39-f28b11daeea8",
 CellID->649685796],
Cell[CellGroupData[{
Cell[157551, 3080, 457, 13, 70, "Input",ExpressionUUID->"dbe550b4-b9c7-490c-8f1c-35009b1eb130",
 CellID->836153427],
Cell[158011, 3095, 544, 14, 126, "Output",ExpressionUUID->"765a05fb-37cf-42ff-901b-0222407c2022",
 CellID->856898196]
}, Open  ]],
Cell[158570, 3112, 185, 3, 70, "ExampleText",ExpressionUUID->"70bf302b-6b12-40d4-87ca-cba97b0439ce",
 CellID->1621432878],
Cell[CellGroupData[{
Cell[158780, 3119, 456, 12, 70, "Input",ExpressionUUID->"86ec123f-f961-4085-a054-336401e133d9",
 CellID->806909704],
Cell[159239, 3133, 235, 6, 35, "Output",ExpressionUUID->"984b8028-9f41-44ec-8d12-c0a7a5ac02a8",
 CellID->276292579]
}, Open  ]]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "1"}, Closed]]]],
Cell[CellGroupData[{
Cell[159635, 3148, 1428, 37, 70, "ExampleSection",ExpressionUUID->"83d0f02a-fda5-406f-945c-286f52af4e77",
 CellID->80270152],
Cell[161066, 3187, 139, 1, 70, "ExampleText",ExpressionUUID->"668e77ef-526b-483e-a90a-1a13f9716c54",
 CellID->214774946],
Cell[161208, 3190, 1348, 39, 70, "Input",ExpressionUUID->"609700d1-a9db-4413-b707-3f6ddf900669",
 CellID->559164495],
Cell[162559, 3231, 711, 17, 70, "ExampleText",ExpressionUUID->"1ccce827-9d3e-4965-9c08-9d4431b469ca",
 CellID->13303137],
Cell[CellGroupData[{
Cell[163295, 3252, 306, 7, 70, "Input",ExpressionUUID->"5303569e-dea2-4a02-9560-f81ae2a38c58",
 CellID->92203917],
Cell[163604, 3261, 126, 2, 35, "Output",ExpressionUUID->"71a119ed-3084-4f9a-96fc-ba0a5c03d3bc",
 CellID->209001974]
}, Open  ]],
Cell[CellGroupData[{
Cell[163767, 3268, 286, 7, 70, "Input",ExpressionUUID->"b589d2f5-6e85-4529-b165-d2ab10cf5053",
 CellID->267491802],
Cell[164056, 3277, 251, 8, 51, "Output",ExpressionUUID->"49982bbc-ac04-46e7-bdeb-743379e7a243",
 CellID->8679249]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "3"}, Closed]]]],
Cell[CellGroupData[{
Cell[164456, 3293, 1420, 37, 70, "ExampleSection",ExpressionUUID->"04ae3599-6610-4add-8867-847715e6d4ec",
 CellID->628496213],
Cell[165879, 3332, 153, 1, 70, "ExampleText",ExpressionUUID->"c0237a0e-c57f-4e2f-b149-02df862f94ef",
 CellID->1929647873],
Cell[CellGroupData[{
Cell[166057, 3337, 610, 19, 70, "Input",ExpressionUUID->"bf6faacf-2936-4210-ab37-2f04fd09f93a",
 CellID->526552805],
Cell[166670, 3358, 796, 26, 126, "Output",ExpressionUUID->"867af394-27bc-40cc-aba1-8d520493dd4f",
 CellID->482920934]
}, Open  ]],
Cell[167481, 3387, 123, 1, 70, "ExampleText",ExpressionUUID->"c972538e-fa8a-496e-b5ef-b675bc780ceb",
 CellID->1203510731],
Cell[CellGroupData[{
Cell[167629, 3392, 610, 18, 70, "Input",ExpressionUUID->"b01447e5-1a0c-42f5-8dd6-27c647f67bba",
 CellID->582995949],
Cell[168242, 3412, 339, 7, 35, "Output",ExpressionUUID->"2c53210a-5bb4-4366-819c-1d13a2211389",
 CellID->291782009]
}, Open  ]],
Cell[168596, 3422, 722, 22, 70, "ExampleText",ExpressionUUID->"8f970c81-9830-4f94-af7b-d66cc3e4f78e",
 CellID->553844154],
Cell[CellGroupData[{
Cell[169343, 3448, 416, 11, 70, "Input",ExpressionUUID->"de0633da-edc9-4949-b769-ffbe94abc625",
 CellID->1914788391],
Cell[169762, 3461, 397, 9, 51, "Output",ExpressionUUID->"0f75cfea-8ddf-4e92-9600-efab484a3fb7",
 CellID->546338240]
}, Open  ]],
Cell[170174, 3473, 200, 4, 70, "ExampleText",ExpressionUUID->"0940f5d6-367c-45e8-a9c7-604ec99b3b35",
 CellID->259674315],
Cell[CellGroupData[{
Cell[170399, 3481, 296, 7, 70, "Input",ExpressionUUID->"bef1a8d1-9df6-4ae4-ad99-09c07a859fc4",
 CellID->295577922],
Cell[170698, 3490, 289, 6, 35, "Output",ExpressionUUID->"424a2cfa-27dc-4b3e-b828-00d6e27558f3",
 CellID->676836955]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "4"}, Closed]]]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, Closed]]]],
Cell[171229, 3505, 2007, 52, 70, "SeeAlsoSection",ExpressionUUID->"d1fa7d0b-0b44-4fa7-b2fd-e41fb88093dd"],
Cell[173239, 3559, 1151, 29, 70, "MoreAboutSection",ExpressionUUID->"b0887e75-a65f-44c4-a78d-25b24883556b"],
Cell[174393, 3590, 5490, 145, 70, "RelatedLinksSection",ExpressionUUID->"62657011-c534-4646-82e5-2d3d41d9544a"],
Cell[179886, 3737, 78, 0, 70, "FooterCell",ExpressionUUID->"3dd82caa-fdfb-42cc-a8f3-5ef45dbcaed7"]
}
]
*)

(* End of internal cache information *)

