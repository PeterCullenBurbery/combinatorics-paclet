(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     49360,       1009]
NotebookOptionsPosition[     44045,        896]
NotebookOutlinePosition[     46953,        965]
CellTagsIndexPosition[     46833,        959]
WindowTitle->MultisetPartialDerangements
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {GridBox[{
      {
       ItemBox[Cell[BoxData[
         RowBox[{
          TemplateBox[{12},
           "Spacer1"], Cell[
          "PETER BURBERY/ COMBINATORICS PACLET SYMBOL", "PacletNameCell",
           TextAlignment->Center,ExpressionUUID->
           "55d472b2-5d78-4d6f-bff6-0faeab3c1458"], 
          TemplateBox[{8},
           "Spacer1"]}]],
         TextAlignment->Center,ExpressionUUID->
         "ffbb48cf-3ec1-4968-8065-e927373d0f40"],
        Background->RGBColor[0.490196, 0.576471, 0.690196],
        ItemSize->Full], ""}
     },
     GridBoxAlignment->{"Rows" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {Full, 
         Scaled[0.02]}, "Rows" -> {{2.5}}}], Cell[TextData[Cell[BoxData[
     TagBox[
      ActionMenuBox[
       FrameBox[Cell[TextData[{
         "URL",
         " ",
         Cell[BoxData[
          GraphicsBox[
           {GrayLevel[0.66667], Thickness[0.13], 
            LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
           AspectRatio->1,
           ImageSize->20,
           PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
          "f93643f2-072a-47c9-95fd-08b3f02eb609"]
        }],ExpressionUUID->"648c985c-c440-4e80-8a56-af191df31079"],
        StripOnInput->False],{
       "\"PeterBurbery/CombinatoricsPaclet/ref/MultisetPartialDerangements\"" :> 
        None, "\"Copy Wolfram Documentation Center URL\"" :> 
        Module[{DocumentationSearch`Private`nb$}, 
          DocumentationSearch`Private`nb$ = 
           NotebookPut[
            Notebook[{
              Cell["PeterBurbery/CombinatoricsPaclet/ref/\
MultisetPartialDerangements"]}, Visible -> False]]; 
          SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
          FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
          NotebookClose[DocumentationSearch`Private`nb$]; Null], Delimiter, 
        "\"Copy web URL\"" :> 
        Module[{DocumentationSearch`Private`nb$}, 
          DocumentationSearch`Private`nb$ = 
           NotebookPut[
            Notebook[{
              Cell[BoxData[
                MakeBoxes[
                 Hyperlink[
                  "http://reference.wolfram.com/language/PeterBurbery/\
CombinatoricsPaclet/ref/MultisetPartialDerangements.html"], StandardForm]], 
                "Input", TextClipboardType -> "PlainText"]}, Visible -> 
              False]]; SelectionMove[
           DocumentationSearch`Private`nb$, All, Notebook]; 
          FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
          NotebookClose[DocumentationSearch`Private`nb$]; Null], 
        "\"Go to web URL\"" :> 
        FrontEndExecute[{
          NotebookLocate[{
            URL[If[TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$877724], 
                "http://reference.wolfram.com/system-modeler/", 
                "http://reference.wolfram.com/language/"] <> 
              "PeterBurbery/CombinatoricsPaclet/ref/\
MultisetPartialDerangements" <> ".html"], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"],
      MouseAppearanceTag["LinkHand"]]],
     LineSpacing->{1.4, 0},ExpressionUUID->
     "f2a57de1-e198-4fe4-847e-c2ad46efe4e9"]], "AnchorBar",
     CacheGraphics->False,ExpressionUUID->
     "ac6d1027-7b34-4cd1-856f-b87bfc69bd89"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1,ExpressionUUID->"54dfcbbd-7d1b-43a0-b730-375716bfbaa4"],

Cell["PeterBurbery`CombinatoricsPaclet`", "ContextNameCell",ExpressionUUID->"57ff6296-5a41-42fe-859c-85c3b954dc30"],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {Cell[TextData[{
     Cell[
     "MultisetPartialDerangements", "ObjectName",ExpressionUUID->
      "61c7424d-71e5-4b8e-9340-800d0122521d"],
     Cell[BoxData[
      TemplateBox[{8},
       "Spacer1"]],ExpressionUUID->"fc69da36-2e6a-4fa0-8f44-e9c211963216"],
     Cell[BoxData[
     ""], "ObjectNameTranslation",ExpressionUUID->
      "8afc9df5-9247-460c-98d0-da1ea3847553"]
    }],ExpressionUUID->"41dce600-7026-48f6-bea1-92a35e09515d"], 
    "\[SpanFromLeft]"}
  }]], "ObjectNameGrid",ExpressionUUID->"6897eecd-55a5-4b12-86ce-\
89e9dcbe6766"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["MultisetPartialDerangements"]], 
         "paclet:PeterBurberyCombinatoricsPaclet/ref/\
MultisetPartialDerangements", 
         "PeterBurberyCombinatoricsPaclet Package Symbol"},
        "PackageLink",
        BaseStyle->"InlineFormula"], "[", 
       StyleBox["multiset", "TI"], "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "a75f20d3-d229-4227-97d8-df676159dd61"],
     "\[LineSeparator]returns the derangements of the ",
     Cell[BoxData[
      StyleBox["multiset", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "1f6b23e3-3bf3-48b5-8369-f399a1545800"],
     " with 0 fixed points where every element moves. "
    }],ExpressionUUID->"fb2f4879-53a0-414f-bc8e-5367bfc1d43c"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["MultisetPartialDerangements"]], 
         "paclet:PeterBurberyCombinatoricsPaclet/ref/\
MultisetPartialDerangements", 
         "PeterBurberyCombinatoricsPaclet Package Symbol"},
        "PackageLink",
        BaseStyle->"InlineFormula"], "[", 
       RowBox[{
        StyleBox["multiset", "TI"], ",", 
        StyleBox["number", "TI"]}], "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "fc59fbee-d371-4cad-9317-f5580eb9f0ad"],
     "\[LineSeparator]returns the partial derangements of the ",
     Cell[BoxData[
      StyleBox["multiset", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "fcbd81fe-d84b-406e-a1cd-d6d0f00b7803"],
     " with the given ",
     Cell[BoxData[
      StyleBox["number", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "c0419ce1-dde8-4b0f-80ee-95a5f22d3b5f"],
     " of fixed points. "
    }],ExpressionUUID->"257481c7-8546-4d2b-ae10-54a10bfdefbf"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["MultisetPartialDerangements"]], 
         "paclet:PeterBurberyCombinatoricsPaclet/ref/\
MultisetPartialDerangements", 
         "PeterBurberyCombinatoricsPaclet Package Symbol"},
        "PackageLink",
        BaseStyle->"InlineFormula"], "[", 
       RowBox[{
        StyleBox["multiset", "TI"], ",", 
        StyleBox["number", "TI"], ",", 
        StyleBox["limit", "TI"]}], "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "59f04741-8632-40eb-be30-05a8a3cac12d"],
     "\[LineSeparator]returns only ",
     Cell[BoxData[
      StyleBox["limit", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "6b7e5a0f-4a69-4000-8a0a-3a5f4c4a73f4"],
     " derangements."
    }],ExpressionUUID->"a4596c29-90af-4b7e-9974-a3add83e0300"]}
  }]], "Usage",
 CellID->162363243,ExpressionUUID->"d39cde55-2f2d-48e2-b7b0-25e5d25edeb3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "PrimaryExamplesSection"}, Open], 
      Alternatives[True, Open]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{13.600000000000001`, {5., 8.600000000000001}}]],
  ExpressionUUID->"528c2b03-cb24-401e-a828-0cb819c042a3"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"1c0dc991-c229-42c8-bca5-1fc6e76c2259"],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "b60f0d2a-206b-43ac-9635-e5d6fb4db7de"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellTags->"PrimaryExamplesSection",
 CellID->3558110,ExpressionUUID->"b0f7fdd8-9318-4896-9340-757c4c6562f8"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<PeterBurbery`CombinatoricsPaclet`\>\"", 
  "]"}]], "Input", "ExampleInitialization",
 CellLabel->"In[1]:=",
 CellID->67793961,ExpressionUUID->"0abcc500-90cf-4147-b2eb-8c741ae2b005"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{13.600000000000001`, {5., 8.600000000000001}}]],
  ExpressionUUID->"fb1637ad-95bc-4ffd-9445-1eebf6764032"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"ac512ef4-7a6d-4c11-a6e8-367b98ea2d28"],
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "14a1d666-1294-4c0a-88a6-97d1051de221"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->635711967,ExpressionUUID->"989baf52-fc0f-470e-88a3-8e2d8e9ddeeb"],

Cell["Make a multiset:", "ExampleText",
 CellID->189216422,ExpressionUUID->"d0020f36-24d2-46af-b2cb-bd385b3e9f2d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"randomMultiset", "=", 
  RowBox[{"RandomChoice", "[", 
   RowBox[{
    RowBox[{"RGBColor", "/@", 
     RowBox[{"{", 
      RowBox[{
      "\"\<#89C9C7\>\"", ",", "\"\<#C789C9\>\"", ",", "\"\<#C9C789\>\""}], 
      "}"}]}], ",", "7"}], "]"}]}]], "Input",
 CellProlog:>Needs["PeterBurbery`CombinatoricsPaclet`"],
 CellLabel->"In[1]:=",
 CellID->78791522,ExpressionUUID->"19bb53f9-9682-48b5-b654-f6a7279fa9d2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|
    "color" -> RGBColor[
      0.7803921568627451, 0.5372549019607843, 0.788235294117647]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> RGBColor[
      0.5372549019607843, 0.788235294117647, 0.7803921568627451]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> RGBColor[
      0.7803921568627451, 0.5372549019607843, 0.788235294117647]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> RGBColor[
      0.788235294117647, 0.7803921568627451, 0.5372549019607843]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> RGBColor[
      0.788235294117647, 0.7803921568627451, 0.5372549019607843]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> RGBColor[
      0.788235294117647, 0.7803921568627451, 0.5372549019607843]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> RGBColor[
      0.7803921568627451, 0.5372549019607843, 0.788235294117647]|>,
    "RGBColorSwatchTemplate"]}], "}"}]], "Output",
 CellLabel->"Out[1]=",
 CellID->241711187,ExpressionUUID->"203c15fa-6796-4924-ad88-9c2025a9bd29"]
}, Open  ]],

Cell["Find all derangements:", "ExampleText",
 CellID->100644796,ExpressionUUID->"d5a273ce-c0ce-4ef5-b04a-aa22f623a2b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MultisetPartialDerangements", "[", "randomMultiset", "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`CombinatoricsPaclet`"],
 CellLabel->"In[2]:=",
 CellID->568061925,ExpressionUUID->"75024afc-57bb-4c44-a7e4-29f749bb7392"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAAAAAAAAAAAAAAADfOP8HDTi31A==
    "], {{0, 30.5}, {500.5, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{500.5, 30.5},
  PlotRange->{{0, 500.5}, {0, 30.5}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[2]=",
 CellID->609904592,ExpressionUUID->"b95ca122-c79c-4613-8b10-2f3432c01006"]
}, Open  ]],

Cell["\<\
Find partial derangements where the number of fixed points is 2:\
\>", "ExampleText",
 CellID->39913478,ExpressionUUID->"416148b9-6e05-417f-a873-9aab63922434"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MultisetPartialDerangements", "[", 
  RowBox[{"randomMultiset", ",", "2"}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`CombinatoricsPaclet`"],
 CellLabel->"In[3]:=",
 CellID->367795940,ExpressionUUID->"aee8e5ef-059e-41b3-8811-9733f57a7cc0"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
3jCeI/in2Mub8TzRyJVpY6o5zqPh8tj96jSA0C97GXQt+FWmSw/DkAnArk57
w3geDpCpw9+/f+/3+0n/pV+YIqGQ4MLy7ldw2hvGcwT/FHt5M54nGrkybUwF
x8sJzvm1JcHtftnLoFPBM+xfmTIs/QF2ddobxvNwgHwdTtY/PT0V/XSukODC
8u5XcNobxnME/xR7eTOeJxq5Ym1MacfLCc75tSXB7X7Zy6BTwfOcz+dJ/6Wv
anf14yuZreYj2qoLBNC2NzUDqO6CvOyrlcHS7mevw/T6qfjhcLjl0oG07ykh
uLC8+xVc5Zc9QGrAL+14bq/DhOCrA6jKWz6e9+gXjVyJ7v1Gx9sUnPNrS4Lb
/bKXQb+C56nzaLhxHB9eyWw1HxFWXSyAsL2pHEB1F7RlX7MMru5+9jp8i3HL
QydiaS+o8+Qo+8J26pc9QGrAL+F4bq/DtxgIviaAqry143mnftHIuZ4c1azg
nF9bEtzul70MuhY8Q53xfBiGhz+5/V/yC6suFkDY3lQOoLoL2rKvWQZXdz97
Hc7c2L3H0l5Qp3u3L2ynftkDpAb8Eo7n9jqcQfCVAVTlrR3PO/WLRs7VvTcr
OOfXlgS3+2Uvg64FzyB3/+qCn8/nt3dx+8PqhVUXCyBsbyoHUN0FbdnXLIOr
u5+9Dmdu7N5jaS8ocbirovYruMove4DUgF/C8dxehzMIvjKAqry143mnftHI
ubr3ZgXn/NqS4Ha/7GXQteAZ5O4v/TTB4XCY30WFHxxTBdD+7F7NAKq7IC/7
amWw9KM99jpM9/xGxUDaC0oc7qqo/Qqu8sseIDXgl/Znz+11mBB8dQBVect/
9rxHv2jkjL8WuU3BOb+2JLjdL3sZdC14hjrj+fyM+gffj1TEAgjbm8oBVHdB
W/Y1y+Dq7mevw5kbxY+lvaBO925f2E79sgdIDfglHM/tdTiD4CsDqMpbO553
6heNnKt7b1Zwzq8tCW73y14GXQueIfOLGyS7+ul0+vr16263m97C4+Pj+Xy+
PZuk6tYEkLQ3lgCqu6Aq+/plcLH72evwPcMw5MVfk/YCueDC8u5XcJVf9gCp
Ab8k47m9Dt+D4CsDqMpbNZ537ReNXInuPe9444Jzfm1JcLtf9jLoWvAM4zge
Doer+kt29fmzhfnjhXvfgqTq1gSQtDeWAKq7oCr7+mVwsfvZ6/CNSflJ5/wV
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
AAAAAAAAAAAAAAAAAACwxP8HcV8Sew==
    "], {{0, 136.5}, {666.5, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{666.5, 136.5},
  PlotRange->{{0, 666.5}, {0, 136.5}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[3]=",
 CellID->607513425,ExpressionUUID->"b3c29601-75e3-4ffa-9dcb-5300f272a3d2"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, 
  Closed]]]],

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, 
       "RelatedFunction.png"]],
     ImageSizeCache->{50., {27., 33.}}], GridBox[{
      {
       StyleBox[
        RowBox[{"See", " ", "Also"}], "SeeAlsoSection"]},
      {Cell[TextData[Cell[BoxData[
        TagBox[
         FrameBox["\"\<XXXX\>\""],
         "FunctionPlaceholder"]], "InlineFormula",
        FontFamily->"Source Sans Pro",ExpressionUUID->
        "eb179221-1ccf-4866-92fb-72b44f357624"]], "SeeAlso",ExpressionUUID->
        "beae4f53-2b6e-4b7e-b593-13cb81d21c3c"]}
     }]}
  }]], "SeeAlsoSection",ExpressionUUID->"c97ae54b-900f-43c2-b10e-\
4d2b8fd3e798"],

Cell[" ", "FooterCell",ExpressionUUID->"651fc549-3010-4c5e-ba9d-5f5c2d376df1"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{900, 604.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"MultisetPartialDerangements",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "", "LinkTrails" -> "", 
  "HasOptions" -> True, "ExampleCounter" -> 1, 
  "Openers" -> {
   "PrimaryExamplesSection" -> Open, "ExampleSection" -> {"0" -> Open}}, 
  "NewStyles" -> True, "CitationPopupData" -> $Failed, "ShowCitation" -> 
  False, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2023, 7, 15, 12, 25, 38.0367333}", 
    "history" -> {"XX", "", "", ""}, "context" -> 
    "PeterBurbery`CombinatoricsPaclet`", "keywords" -> {}, 
    "specialkeywords" -> {}, "tutorialcollectionlinks" -> {}, "index" -> True,
     "label" -> "Peter Burbery/ Combinatorics Paclet Symbol", "language" -> 
    "en", "paclet" -> "PeterBurbery/CombinatoricsPaclet", "status" -> "None", 
    "summary" -> 
    "MultisetPartialDerangements[multiset] returns the derangements of the \
multiset with 0 fixed points where every element moves. \
MultisetPartialDerangements[multiset, number] returns the partial \
derangements of the multiset with the given number of fixed points. \
MultisetPartialDerangements[multiset, number, limit] returns only limit \
derangements.", "synonyms" -> {}, "tabletags" -> {}, "title" -> 
    "MultisetPartialDerangements", "titlemodifier" -> "", "metadescription" -> 
    "", "windowtitle" -> "MultisetPartialDerangements", "type" -> "Symbol", 
    "uri" -> "PeterBurbery/CombinatoricsPaclet/ref/\
MultisetPartialDerangements"}},
CellContext->"Global`",
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (June 3, 2023)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "13.3 for Microsoft Windows (64-bit) (June 3, 2023)", 
  StyleDefinitions -> "Default.nb"],
ExpressionUUID->"297fe617-d261-46e3-b3f2-26ca1c4a2c6e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[7902, 205, 1418, 37, 35, "PrimaryExamplesSection",ExpressionUUID->"b0f7fdd8-9318-4896-9340-757c4c6562f8",
   CellTags->"PrimaryExamplesSection",
   CellID->3558110]},
 "RasterizedOutput"->{
  Cell[13143, 354, 5059, 89, 51, "Output",ExpressionUUID->"b95ca122-c79c-4613-8b10-2f3432c01006",
   CellTags->"RasterizedOutput",
   CellID->609904592],
  Cell[18685, 460, 24334, 405, 157, "Output",ExpressionUUID->"b3c29601-75e3-4ffa-9dcb-5300f272a3d2",
   CellTags->"RasterizedOutput",
   CellID->607513425]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 46301, 945},
 {"RasterizedOutput", 46498, 949}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[599, 21, 3561, 82, 56, "AnchorBarGrid",ExpressionUUID->"54dfcbbd-7d1b-43a0-b730-375716bfbaa4",
 CellID->1],
Cell[4163, 105, 115, 0, 23, "ContextNameCell",ExpressionUUID->"57ff6296-5a41-42fe-859c-85c3b954dc30"],
Cell[CellGroupData[{
Cell[4303, 109, 570, 14, 56, "ObjectNameGrid",ExpressionUUID->"6897eecd-55a5-4b12-86ce-89e9dcbe6766"],
Cell[4876, 125, 2989, 75, 266, "Usage",ExpressionUUID->"d39cde55-2f2d-48e2-b7b0-25e5d25edeb3",
 CellID->162363243]
}, Open  ]],
Cell[CellGroupData[{
Cell[7902, 205, 1418, 37, 35, "PrimaryExamplesSection",ExpressionUUID->"b0f7fdd8-9318-4896-9340-757c4c6562f8",
 CellTags->"PrimaryExamplesSection",
 CellID->3558110],
Cell[9323, 244, 223, 4, 26, "Input",ExpressionUUID->"0abcc500-90cf-4147-b2eb-8c741ae2b005",
 CellID->67793961],
Cell[CellGroupData[{
Cell[9571, 252, 1398, 36, 30, "ExampleSection",ExpressionUUID->"989baf52-fc0f-470e-88a3-8e2d8e9ddeeb",
 CellID->635711967],
Cell[10972, 290, 114, 1, 38, "ExampleText",ExpressionUUID->"d0020f36-24d2-46af-b2cb-bd385b3e9f2d",
 CellID->189216422],
Cell[CellGroupData[{
Cell[11111, 295, 431, 11, 26, "Input",ExpressionUUID->"19bb53f9-9682-48b5-b654-f6a7279fa9d2",
 CellID->78791522],
Cell[11545, 308, 1187, 32, 35, "Output",ExpressionUUID->"203c15fa-6796-4924-ad88-9c2025a9bd29",
 CellID->241711187]
}, Open  ]],
Cell[12747, 343, 120, 1, 38, "ExampleText",ExpressionUUID->"d5a273ce-c0ce-4ef5-b04a-aa22f623a2b6",
 CellID->100644796],
Cell[CellGroupData[{
Cell[12892, 348, 248, 4, 26, "Input",ExpressionUUID->"75024afc-57bb-4c44-a7e4-29f749bb7392",
 CellID->568061925],
Cell[13143, 354, 5059, 89, 51, "Output",ExpressionUUID->"b95ca122-c79c-4613-8b10-2f3432c01006",
 CellTags->"RasterizedOutput",
 CellID->609904592]
}, Open  ]],
Cell[18217, 446, 169, 3, 70, "ExampleText",ExpressionUUID->"416148b9-6e05-417f-a873-9aab63922434",
 CellID->39913478],
Cell[CellGroupData[{
Cell[18411, 453, 271, 5, 70, "Input",ExpressionUUID->"aee8e5ef-059e-41b3-8811-9733f57a7cc0",
 CellID->367795940],
Cell[18685, 460, 24334, 405, 157, "Output",ExpressionUUID->"b3c29601-75e3-4ffa-9dcb-5300f272a3d2",
 CellTags->"RasterizedOutput",
 CellID->607513425]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, Closed]]]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, Closed]]]],
Cell[43261, 874, 699, 18, 70, "SeeAlsoSection",ExpressionUUID->"c97ae54b-900f-43c2-b10e-4d2b8fd3e798"],
Cell[43963, 894, 78, 0, 70, "FooterCell",ExpressionUUID->"651fc549-3010-4c5e-ba9d-5f5c2d376df1"]
}
]
*)

(* End of internal cache information *)

