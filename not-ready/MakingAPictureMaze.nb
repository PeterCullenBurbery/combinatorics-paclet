(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1357709,      26498]
NotebookOptionsPosition[   1318284,      25797]
NotebookOutlinePosition[   1318782,      25815]
CellTagsIndexPosition[   1318739,      25812]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"gridGraph", "=", 
  RowBox[{"GridGraph", "[", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9004786880941997`*^9, 3.900478708266282*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"e0b361c3-99da-42a9-b096-74aeae10cb67"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
       SparseArray[
       Automatic, {9, 9}, 0, {
        1, {{0, 2, 5, 7, 10, 14, 17, 19, 22, 24}, {{2}, {4}, {1}, {3}, {5}, {
          2}, {6}, {1}, {5}, {7}, {2}, {4}, {6}, {8}, {3}, {5}, {9}, {4}, {
          8}, {5}, {7}, {9}, {6}, {8}}}, Pattern}]}, {
      GraphLayout -> {"GridEmbedding", "Dimension" -> {3, 3}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{1., 1.}, {1., 2.}, {1., 3.}, {2., 1.}, {2., 2.}, {
       2., 3.}, {3., 1.}, {3., 2.}, {3., 3.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 4}, {2, 3}, {2, 5}, {3, 6}, {4, 5}, {4, 7}, {5,
           6}, {5, 8}, {6, 9}, {7, 8}, {8, 9}}, 0.02261146496815286]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
         DiskBox[3, 0.02261146496815286], DiskBox[4, 0.02261146496815286], 
         DiskBox[5, 0.02261146496815286], DiskBox[6, 0.02261146496815286], 
         DiskBox[7, 0.02261146496815286], DiskBox[8, 0.02261146496815286], 
         DiskBox[9, 0.02261146496815286]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.9004787095552535`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"7b864851-8a78-4f03-895d-f07b46628931"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"RegularPolygon", "[", "4", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.900478712548914*^9, 3.9004787261495543`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"9412dfc8-d486-4858-bb6b-5cebe7d98b1d"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[
   PolygonBox[
    NCache[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
      2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
       Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
     0.7071067811865475, -0.7071067811865475}, {0.7071067811865475, 
     0.7071067811865475}, {-0.7071067811865475, 
     0.7071067811865475}, {-0.7071067811865475, -0.7071067811865475}}]],
   RegularPolygon[4]]]], "Output",
 CellChangeTimes->{3.900478726836006*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"df15bf6d-731b-41ec-a561-e47d4ac823ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionBoundary", "[", 
  RowBox[{"RegularPolygon", "[", "4", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.900478734695261*^9, 3.9004787408242044`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"ddd78bed-6061-4da6-b362-847810210841"],

Cell[BoxData[
 RowBox[{"Line", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      FractionBox["1", 
       SqrtBox["2"]], ",", 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["1", 
       SqrtBox["2"]], ",", 
      FractionBox["1", 
       SqrtBox["2"]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}], ",", 
      FractionBox["1", 
       SqrtBox["2"]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}], ",", 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["1", 
       SqrtBox["2"]], ",", 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}]}], "}"}]}], "}"}], "]"}]], "Output",
 CellChangeTimes->{3.900478741502571*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"58e7ed75-ee24-457e-a620-de27a5e362db"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"RegionBoundary", "[", 
   RowBox[{"RegularPolygon", "[", "4", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9004787436295652`*^9, 3.900478745406064*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"5c9e5ded-3671-4eaf-8c55-ae9884887aa9"],

Cell[BoxData[
 GraphicsBox[
  LineBox[NCache[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
     2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
      Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
     2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
    0.7071067811865475, -0.7071067811865475}, {0.7071067811865475, 
    0.7071067811865475}, {-0.7071067811865475, 
    0.7071067811865475}, {-0.7071067811865475, -0.7071067811865475}, {
    0.7071067811865475, -0.7071067811865475}}]]]], "Output",
 CellChangeTimes->{3.9004787457367563`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"b3c4b835-01e7-4a57-89bf-9eaee2ccbe86"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayMesh", "[", 
  RowBox[{"ConstantArray", "[", 
   RowBox[{"1", ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "5"}], "}"}]}], "]"}], "]"}]], "Input",
 CellLabel->"In[5]:=",ExpressionUUID->"5a05c0f3-2033-43a2-9416-4bfea3372cd8"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
    TagBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQjR98sEelCYkzOKCJO8AkGMEkB1welQ8DAmj6BdDk
RdDkYXwGNHU43QGn0ex3QLPPAWY+ujsJ+AOuHp2GmY/KF4GLozofZzjgMEcA
By2CRsMAoXBE9ze6OxHmAgAtPh4i
      "], 
      {Hue[0.6, 0.3, 0.95], EdgeForm[Hue[0.6, 0.3, 0.75]], 
       TagBox[
        PolygonBox[{{10, 12, 11, 9}, {17, 18, 12, 10}, {23, 24, 18, 17}, {29, 
         30, 24, 23}, {35, 36, 30, 29}, {8, 10, 9, 7}, {16, 17, 10, 8}, {22, 
         23, 17, 16}, {28, 29, 23, 22}, {34, 35, 29, 28}, {6, 8, 7, 5}, {15, 
         16, 8, 6}, {21, 22, 16, 15}, {27, 28, 22, 21}, {33, 34, 28, 27}, {4, 
         6, 5, 2}, {14, 15, 6, 4}, {20, 21, 15, 14}, {26, 27, 21, 20}, {32, 
         33, 27, 26}, {3, 4, 2, 1}, {13, 14, 4, 3}, {19, 20, 14, 13}, {25, 26,
          20, 19}, {31, 32, 26, 25}}],
        Annotation[#, "Geometry"]& ]}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> 
    Hue[0.1, 1, 0.7]}]], "Output",
 CellChangeTimes->{3.9004790691840305`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"845e0c49-6b91-4494-bffd-b91036ea6670"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GridGraph", "[", 
  RowBox[{"{", 
   RowBox[{"8", ",", "8"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.900481394092828*^9, 3.900481421003146*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"1f71b6a6-8590-4d25-848c-f8aa0ff53b8d"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
       38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55,
       56, 57, 58, 59, 60, 61, 62, 63, 64}, {Null, 
       SparseArray[
       Automatic, {64, 64}, 0, {
        1, {{0, 2, 5, 8, 11, 14, 17, 20, 22, 25, 29, 33, 37, 41, 45, 49, 52, 
          55, 59, 63, 67, 71, 75, 79, 82, 85, 89, 93, 97, 101, 105, 109, 112, 
          115, 119, 123, 127, 131, 135, 139, 142, 145, 149, 153, 157, 161, 
          165, 169, 172, 175, 179, 183, 187, 191, 195, 199, 202, 204, 207, 
          210, 213, 216, 219, 222, 224}, {{2}, {9}, {1}, {3}, {10}, {2}, {
          4}, {11}, {3}, {5}, {12}, {4}, {6}, {13}, {5}, {7}, {14}, {6}, {
          8}, {15}, {7}, {16}, {1}, {10}, {17}, {2}, {9}, {11}, {18}, {3}, {
          10}, {12}, {19}, {4}, {11}, {13}, {20}, {5}, {12}, {14}, {21}, {
          6}, {13}, {15}, {22}, {7}, {14}, {16}, {23}, {8}, {15}, {24}, {9}, {
          18}, {25}, {10}, {17}, {19}, {26}, {11}, {18}, {20}, {27}, {12}, {
          19}, {21}, {28}, {13}, {20}, {22}, {29}, {14}, {21}, {23}, {30}, {
          15}, {22}, {24}, {31}, {16}, {23}, {32}, {17}, {26}, {33}, {18}, {
          25}, {27}, {34}, {19}, {26}, {28}, {35}, {20}, {27}, {29}, {36}, {
          21}, {28}, {30}, {37}, {22}, {29}, {31}, {38}, {23}, {30}, {32}, {
          39}, {24}, {31}, {40}, {25}, {34}, {41}, {26}, {33}, {35}, {42}, {
          27}, {34}, {36}, {43}, {28}, {35}, {37}, {44}, {29}, {36}, {38}, {
          45}, {30}, {37}, {39}, {46}, {31}, {38}, {40}, {47}, {32}, {39}, {
          48}, {33}, {42}, {49}, {34}, {41}, {43}, {50}, {35}, {42}, {44}, {
          51}, {36}, {43}, {45}, {52}, {37}, {44}, {46}, {53}, {38}, {45}, {
          47}, {54}, {39}, {46}, {48}, {55}, {40}, {47}, {56}, {41}, {50}, {
          57}, {42}, {49}, {51}, {58}, {43}, {50}, {52}, {59}, {44}, {51}, {
          53}, {60}, {45}, {52}, {54}, {61}, {46}, {53}, {55}, {62}, {47}, {
          54}, {56}, {63}, {48}, {55}, {64}, {49}, {58}, {50}, {57}, {59}, {
          51}, {58}, {60}, {52}, {59}, {61}, {53}, {60}, {62}, {54}, {61}, {
          63}, {55}, {62}, {64}, {56}, {63}}}, Pattern}]}, {
      GraphLayout -> {"GridEmbedding", "Dimension" -> {8, 8}}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJx10zsKQyEUhGFJZWlhYXEKs5K4hiwhkDpbv0vIC0n4UOEy/BdhmDnH8+1x
vZ9SSuP1vfV7jstaP9f+OMMFrnCDA+5j7ZPGWjNc4Ao3OODpby598kYLXOEG
Bzz97dFc+pSNVrjBAU9/52aP5tKnbrTBAXfuuTfO0V7Nqa8acOe/e+reOEd7
Nae+akd378I9dW+co72a8+f7BDiQON4=
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 9}, {2, 3}, {2, 10}, {3, 4}, {3, 11}, {4, 5}, {
          4, 12}, {5, 6}, {5, 13}, {6, 7}, {6, 14}, {7, 8}, {7, 15}, {8, 
          16}, {9, 10}, {9, 17}, {10, 11}, {10, 18}, {11, 12}, {11, 19}, {12, 
          13}, {12, 20}, {13, 14}, {13, 21}, {14, 15}, {14, 22}, {15, 16}, {
          15, 23}, {16, 24}, {17, 18}, {17, 25}, {18, 19}, {18, 26}, {19, 
          20}, {19, 27}, {20, 21}, {20, 28}, {21, 22}, {21, 29}, {22, 23}, {
          22, 30}, {23, 24}, {23, 31}, {24, 32}, {25, 26}, {25, 33}, {26, 
          27}, {26, 34}, {27, 28}, {27, 35}, {28, 29}, {28, 36}, {29, 30}, {
          29, 37}, {30, 31}, {30, 38}, {31, 32}, {31, 39}, {32, 40}, {33, 
          34}, {33, 41}, {34, 35}, {34, 42}, {35, 36}, {35, 43}, {36, 37}, {
          36, 44}, {37, 38}, {37, 45}, {38, 39}, {38, 46}, {39, 40}, {39, 
          47}, {40, 48}, {41, 42}, {41, 49}, {42, 43}, {42, 50}, {43, 44}, {
          43, 51}, {44, 45}, {44, 52}, {45, 46}, {45, 53}, {46, 47}, {46, 
          54}, {47, 48}, {47, 55}, {48, 56}, {49, 50}, {49, 57}, {50, 51}, {
          50, 58}, {51, 52}, {51, 59}, {52, 53}, {52, 60}, {53, 54}, {53, 
          61}, {54, 55}, {54, 62}, {55, 56}, {55, 63}, {56, 64}, {57, 58}, {
          58, 59}, {59, 60}, {60, 61}, {61, 62}, {62, 63}, {63, 64}}, 
          0.05338164251207729]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.05338164251207729], DiskBox[2, 0.05338164251207729], 
         DiskBox[3, 0.05338164251207729], DiskBox[4, 0.05338164251207729], 
         DiskBox[5, 0.05338164251207729], DiskBox[6, 0.05338164251207729], 
         DiskBox[7, 0.05338164251207729], DiskBox[8, 0.05338164251207729], 
         DiskBox[9, 0.05338164251207729], DiskBox[10, 0.05338164251207729], 
         DiskBox[11, 0.05338164251207729], DiskBox[12, 0.05338164251207729], 
         DiskBox[13, 0.05338164251207729], DiskBox[14, 0.05338164251207729], 
         DiskBox[15, 0.05338164251207729], DiskBox[16, 0.05338164251207729], 
         DiskBox[17, 0.05338164251207729], DiskBox[18, 0.05338164251207729], 
         DiskBox[19, 0.05338164251207729], DiskBox[20, 0.05338164251207729], 
         DiskBox[21, 0.05338164251207729], DiskBox[22, 0.05338164251207729], 
         DiskBox[23, 0.05338164251207729], DiskBox[24, 0.05338164251207729], 
         DiskBox[25, 0.05338164251207729], DiskBox[26, 0.05338164251207729], 
         DiskBox[27, 0.05338164251207729], DiskBox[28, 0.05338164251207729], 
         DiskBox[29, 0.05338164251207729], DiskBox[30, 0.05338164251207729], 
         DiskBox[31, 0.05338164251207729], DiskBox[32, 0.05338164251207729], 
         DiskBox[33, 0.05338164251207729], DiskBox[34, 0.05338164251207729], 
         DiskBox[35, 0.05338164251207729], DiskBox[36, 0.05338164251207729], 
         DiskBox[37, 0.05338164251207729], DiskBox[38, 0.05338164251207729], 
         DiskBox[39, 0.05338164251207729], DiskBox[40, 0.05338164251207729], 
         DiskBox[41, 0.05338164251207729], DiskBox[42, 0.05338164251207729], 
         DiskBox[43, 0.05338164251207729], DiskBox[44, 0.05338164251207729], 
         DiskBox[45, 0.05338164251207729], DiskBox[46, 0.05338164251207729], 
         DiskBox[47, 0.05338164251207729], DiskBox[48, 0.05338164251207729], 
         DiskBox[49, 0.05338164251207729], DiskBox[50, 0.05338164251207729], 
         DiskBox[51, 0.05338164251207729], DiskBox[52, 0.05338164251207729], 
         DiskBox[53, 0.05338164251207729], DiskBox[54, 0.05338164251207729], 
         DiskBox[55, 0.05338164251207729], DiskBox[56, 0.05338164251207729], 
         DiskBox[57, 0.05338164251207729], DiskBox[58, 0.05338164251207729], 
         DiskBox[59, 0.05338164251207729], DiskBox[60, 0.05338164251207729], 
         DiskBox[61, 0.05338164251207729], DiskBox[62, 0.05338164251207729], 
         DiskBox[63, 0.05338164251207729], 
         DiskBox[64, 0.05338164251207729]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.900481398294512*^9, 3.900481421567479*^9}},
 CellLabel->"Out[32]=",ExpressionUUID->"e63a8d21-e7ce-4f7e-a35a-b6c4b47a3ebd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayMesh", "[", 
  RowBox[{"ConstantArray", "[", 
   RowBox[{"1", ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "5"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9004814290590396`*^9, 3.9004814674254894`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"5e60e24c-bfba-4c7a-9698-4271c5710f57"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
    TagBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQjR98sEelCYkzOKCJO8AkGMEkB1welQ8DAmj6BdDk
RdDkYXwGNHU43QGn0ex3QLPPAWY+ujsJ+AOuHp2GmY/KF4GLozofZzjgMEcA
By2CRsMAoXBE9ze6OxHmAgAtPh4i
      "], 
      {Hue[0.6, 0.3, 0.95], EdgeForm[Hue[0.6, 0.3, 0.75]], 
       TagBox[
        PolygonBox[{{10, 12, 11, 9}, {17, 18, 12, 10}, {23, 24, 18, 17}, {29, 
         30, 24, 23}, {35, 36, 30, 29}, {8, 10, 9, 7}, {16, 17, 10, 8}, {22, 
         23, 17, 16}, {28, 29, 23, 22}, {34, 35, 29, 28}, {6, 8, 7, 5}, {15, 
         16, 8, 6}, {21, 22, 16, 15}, {27, 28, 22, 21}, {33, 34, 28, 27}, {4, 
         6, 5, 2}, {14, 15, 6, 4}, {20, 21, 15, 14}, {26, 27, 21, 20}, {32, 
         33, 27, 26}, {3, 4, 2, 1}, {13, 14, 4, 3}, {19, 20, 14, 13}, {25, 26,
          20, 19}, {31, 32, 26, 25}}],
        Annotation[#, "Geometry"]& ]}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> 
    Hue[0.1, 1, 0.7]}]], "Output",
 CellChangeTimes->{3.9004814697309637`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"611ffd20-0020-4545-8225-2cec9cd231ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MeshConnectivityGraph", "[", 
  RowBox[{"ArrayMesh", "[", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "5"}], "}"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9004814708516016`*^9, 3.900481473671568*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"5c57c8b2-ea44-49d7-a190-14600f8a61b5"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{0, 1}, {0, 2}, {0, 3}, {0, 4}, {0, 5}, {0, 6}, {0, 7}, {0, 8}, {
      0, 9}, {0, 10}, {0, 11}, {0, 12}, {0, 13}, {0, 14}, {0, 15}, {0, 16}, {
      0, 17}, {0, 18}, {0, 19}, {0, 20}, {0, 21}, {0, 22}, {0, 23}, {0, 24}, {
      0, 25}, {0, 26}, {0, 27}, {0, 28}, {0, 29}, {0, 30}, {0, 31}, {0, 32}, {
      0, 33}, {0, 34}, {0, 35}, {0, 36}}, {Null, 
       SparseArray[
       Automatic, {36, 36}, 0, {
        1, {{0, 2, 5, 8, 12, 15, 19, 22, 26, 29, 33, 35, 38, 41, 45, 49, 53, 
          57, 60, 63, 67, 71, 75, 79, 82, 85, 89, 93, 97, 101, 104, 106, 109, 
          112, 115, 118, 120}, {{2}, {3}, {1}, {4}, {5}, {1}, {4}, {13}, {
          2}, {3}, {6}, {14}, {2}, {6}, {7}, {4}, {5}, {8}, {15}, {5}, {8}, {
          9}, {6}, {7}, {10}, {16}, {7}, {10}, {11}, {8}, {9}, {12}, {17}, {
          9}, {12}, {10}, {11}, {18}, {3}, {14}, {19}, {4}, {13}, {15}, {
          20}, {6}, {14}, {16}, {21}, {8}, {15}, {17}, {22}, {10}, {16}, {
          18}, {23}, {12}, {17}, {24}, {13}, {20}, {25}, {14}, {19}, {21}, {
          26}, {15}, {20}, {22}, {27}, {16}, {21}, {23}, {28}, {17}, {22}, {
          24}, {29}, {18}, {23}, {30}, {19}, {26}, {31}, {20}, {25}, {27}, {
          32}, {21}, {26}, {28}, {33}, {22}, {27}, {29}, {34}, {23}, {28}, {
          30}, {35}, {24}, {29}, {36}, {25}, {32}, {26}, {31}, {33}, {27}, {
          32}, {34}, {28}, {33}, {35}, {29}, {34}, {36}, {30}, {35}}}, 
         Pattern}]}, {VertexCoordinates -> CompressedData["
1:eJxTTMoPSmViYGBQAWIQjR98sEelCYkzOKCJO8AkGMEkB1welQ8DAmj6BdDk
RdDkYXwGNHU43QGn0ex3QLPPAWY+ujsJ+AOuHp2GmY/KF4GLozofZzjgMEcA
By2CRsMAoXBE9ze6OxHmAgAtPh4i
        "]}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQjR98sEelCYkzOKCJO8AkGMEkB1welQ8DAmj6BdDk
RdDkYXwGNHU43QGn0ex3QLPPAWY+ujsJ+AOuHp2GmY/KF4GLozofZzjgMEcA
By2CRsMAoXBE9ze6OxHmAgAtPh4i
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 3}, {2, 4}, {2, 5}, {3, 4}, {3, 13}, {4, 6}, {
          4, 14}, {5, 6}, {5, 7}, {6, 8}, {6, 15}, {7, 8}, {7, 9}, {8, 10}, {
          8, 16}, {9, 10}, {9, 11}, {10, 12}, {10, 17}, {11, 12}, {12, 18}, {
          13, 14}, {13, 19}, {14, 15}, {14, 20}, {15, 16}, {15, 21}, {16, 
          17}, {16, 22}, {17, 18}, {17, 23}, {18, 24}, {19, 20}, {19, 25}, {
          20, 21}, {20, 26}, {21, 22}, {21, 27}, {22, 23}, {22, 28}, {23, 
          24}, {23, 29}, {24, 30}, {25, 26}, {25, 31}, {26, 27}, {26, 32}, {
          27, 28}, {27, 33}, {28, 29}, {28, 34}, {29, 30}, {29, 35}, {30, 
          36}, {31, 32}, {32, 33}, {33, 34}, {34, 35}, {35, 36}}, 
          0.043048128342245986`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.043048128342245986], DiskBox[2, 0.043048128342245986], 
         DiskBox[3, 0.043048128342245986], DiskBox[4, 0.043048128342245986], 
         DiskBox[5, 0.043048128342245986], DiskBox[6, 0.043048128342245986], 
         DiskBox[7, 0.043048128342245986], DiskBox[8, 0.043048128342245986], 
         DiskBox[9, 0.043048128342245986], DiskBox[10, 0.043048128342245986], 
         DiskBox[11, 0.043048128342245986], DiskBox[12, 0.043048128342245986],
          DiskBox[13, 0.043048128342245986], 
         DiskBox[14, 0.043048128342245986], DiskBox[15, 0.043048128342245986],
          DiskBox[16, 0.043048128342245986], 
         DiskBox[17, 0.043048128342245986], DiskBox[18, 0.043048128342245986],
          DiskBox[19, 0.043048128342245986], 
         DiskBox[20, 0.043048128342245986], DiskBox[21, 0.043048128342245986],
          DiskBox[22, 0.043048128342245986], 
         DiskBox[23, 0.043048128342245986], DiskBox[24, 0.043048128342245986],
          DiskBox[25, 0.043048128342245986], 
         DiskBox[26, 0.043048128342245986], DiskBox[27, 0.043048128342245986],
          DiskBox[28, 0.043048128342245986], 
         DiskBox[29, 0.043048128342245986], DiskBox[30, 0.043048128342245986],
          DiskBox[31, 0.043048128342245986], 
         DiskBox[32, 0.043048128342245986], DiskBox[33, 0.043048128342245986],
          DiskBox[34, 0.043048128342245986], 
         DiskBox[35, 0.043048128342245986], 
         DiskBox[36, 0.043048128342245986]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.9004814743320436`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"f5b94977-30ab-41cc-a0ed-dad563461865"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayMesh", "[", 
  RowBox[{"ConstantArray", "[", 
   RowBox[{"1", ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9004814708516016`*^9, 3.900481485102307*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"07a64187-b89e-47e0-8bdb-b876652ca013"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
    TagBox[
     GraphicsComplexBox[{{0., 0.}, {0., 1.}, {1., 0.}, {1., 1.}, {0., 2.}, {
      1., 2.}, {0., 3.}, {1., 3.}, {2., 0.}, {2., 1.}, {2., 2.}, {2., 3.}, {
      3., 0.}, {3., 1.}, {3., 2.}, {3., 3.}}, 
      {Hue[0.6, 0.3, 0.95], EdgeForm[Hue[0.6, 0.3, 0.75]], 
       TagBox[
        PolygonBox[{{6, 8, 7, 5}, {11, 12, 8, 6}, {15, 16, 12, 11}, {4, 6, 5, 
         2}, {10, 11, 6, 4}, {14, 15, 11, 10}, {3, 4, 2, 1}, {9, 10, 4, 3}, {
         13, 14, 10, 9}}],
        Annotation[#, "Geometry"]& ]}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> 
    Hue[0.1, 1, 0.7]}]], "Output",
 CellChangeTimes->{3.9004814855327997`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"f975562d-6787-4129-9196-6d868ab75d4d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MeshConnectivityGraph", "[", 
  RowBox[{"ArrayMesh", "[", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.900481486488637*^9, 3.9004814894313197`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"e73c9130-6c3a-4de3-bb32-007fce1ba72a"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{0, 1}, {0, 2}, {0, 3}, {0, 4}, {0, 5}, {0, 6}, {0, 7}, {0, 8}, {
      0, 9}, {0, 10}, {0, 11}, {0, 12}, {0, 13}, {0, 14}, {0, 15}, {0, 16}}, {
      Null, 
       SparseArray[
       Automatic, {16, 16}, 0, {
        1, {{0, 2, 5, 8, 12, 15, 19, 21, 24, 27, 31, 35, 38, 40, 43, 46, 
          48}, {{2}, {3}, {1}, {4}, {5}, {1}, {4}, {9}, {2}, {3}, {6}, {10}, {
          2}, {6}, {7}, {4}, {5}, {8}, {11}, {5}, {8}, {6}, {7}, {12}, {3}, {
          10}, {13}, {4}, {9}, {11}, {14}, {6}, {10}, {12}, {15}, {8}, {11}, {
          16}, {9}, {14}, {10}, {13}, {15}, {11}, {14}, {16}, {12}, {15}}}, 
         Pattern}]}, {
      VertexCoordinates -> {{0., 0.}, {0., 1.}, {1., 0.}, {1., 1.}, {0., 
        2.}, {1., 2.}, {0., 3.}, {1., 3.}, {2., 0.}, {2., 1.}, {2., 2.}, {2., 
        3.}, {3., 0.}, {3., 1.}, {3., 2.}, {3., 3.}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{0., 0.}, {0., 1.}, {1., 0.}, {1., 1.}, {0., 2.}, {
       1., 2.}, {0., 3.}, {1., 3.}, {2., 0.}, {2., 1.}, {2., 2.}, {2., 3.}, {
       3., 0.}, {3., 1.}, {3., 2.}, {3., 3.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 3}, {2, 4}, {2, 5}, {3, 4}, {3, 9}, {4, 6}, {4,
           10}, {5, 6}, {5, 7}, {6, 8}, {6, 11}, {7, 8}, {8, 12}, {9, 10}, {9,
           13}, {10, 11}, {10, 14}, {11, 12}, {11, 15}, {12, 16}, {13, 14}, {
          14, 15}, {15, 16}}, 0.030239520958083826`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.030239520958083826], DiskBox[2, 0.030239520958083826], 
         DiskBox[3, 0.030239520958083826], DiskBox[4, 0.030239520958083826], 
         DiskBox[5, 0.030239520958083826], DiskBox[6, 0.030239520958083826], 
         DiskBox[7, 0.030239520958083826], DiskBox[8, 0.030239520958083826], 
         DiskBox[9, 0.030239520958083826], DiskBox[10, 0.030239520958083826], 
         DiskBox[11, 0.030239520958083826], DiskBox[12, 0.030239520958083826],
          DiskBox[13, 0.030239520958083826], 
         DiskBox[14, 0.030239520958083826], DiskBox[15, 0.030239520958083826],
          DiskBox[16, 0.030239520958083826]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.9004814898544154`*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"e1d1599b-6259-4db6-950d-7ac1d49ef89a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IsomorphicGraphQ", "[", 
  RowBox[{
   RowBox[{"MeshConnectivityGraph", "[", 
    RowBox[{"ArrayMesh", "[", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"GridGraph", "[", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4"}], "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9004814941067443`*^9, 3.900481509195919*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"88f6405e-31bb-4986-a838-d015de933d96"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.900481510297845*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"cc2b2f35-2f77-4aa6-b3b1-fb40b6b991e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mesh", "=", 
  RowBox[{"ArrayMesh", "[", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "5"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9004815848506947`*^9, 3.9004815862818823`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"4392bf04-65ba-43f5-9dbb-4ec2f196193c"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
    TagBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQjR98sEelCYkzOKCJO8AkGMEkB1welQ8DAmj6BdDk
RdDkYXwGNHU43QGn0ex3QLPPAWY+ujsJ+AOuHp2GmY/KF4GLozofZzjgMEcA
By2CRsMAoXBE9ze6OxHmAgAtPh4i
      "], 
      {Hue[0.6, 0.3, 0.95], EdgeForm[Hue[0.6, 0.3, 0.75]], 
       TagBox[
        PolygonBox[{{10, 12, 11, 9}, {17, 18, 12, 10}, {23, 24, 18, 17}, {29, 
         30, 24, 23}, {35, 36, 30, 29}, {8, 10, 9, 7}, {16, 17, 10, 8}, {22, 
         23, 17, 16}, {28, 29, 23, 22}, {34, 35, 29, 28}, {6, 8, 7, 5}, {15, 
         16, 8, 6}, {21, 22, 16, 15}, {27, 28, 22, 21}, {33, 34, 28, 27}, {4, 
         6, 5, 2}, {14, 15, 6, 4}, {20, 21, 15, 14}, {26, 27, 21, 20}, {32, 
         33, 27, 26}, {3, 4, 2, 1}, {13, 14, 4, 3}, {19, 20, 14, 13}, {25, 26,
          20, 19}, {31, 32, 26, 25}}],
        Annotation[#, "Geometry"]& ]}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> 
    Hue[0.1, 1, 0.7]}]], "Output",
 CellChangeTimes->{3.9004815870843973`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"afd108f2-722e-441f-9052-fa654057ce4b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MeshPrimitives", "[", 
  RowBox[{"mesh", ",", "2"}], "]"}]], "Input",
 CellLabel->"In[45]:=",ExpressionUUID->"3c3fc5d8-56df-49ae-867c-9b818af77818"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     TagBox["Polygon",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready",
       Typeset`spolygon$$ = 
      Polygon[{{1., 4.}, {1., 5.}, {0., 5.}, {0., 4.}}]}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                PolygonBox[{{1., 4.}, {1., 5.}, {0., 5.}, {0., 4.}}]}, 
               ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                PolygonBox[{{1., 4.}, {1., 5.}, {0., 5.}, {0., 4.}}]}, 
               ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Polygon[{{1., 4.}, {1., 5.}, {0., 5.}, {0., 4.}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["Polygon",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready",
       Typeset`spolygon$$ = 
      Polygon[{{2., 4.}, {2., 5.}, {1., 5.}, {1., 4.}}]}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                PolygonBox[{{2., 4.}, {2., 5.}, {1., 5.}, {1., 4.}}]}, 
               ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                PolygonBox[{{2., 4.}, {2., 5.}, {1., 5.}, {1., 4.}}]}, 
               ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Polygon[{{2., 4.}, {2., 5.}, {1., 5.}, {1., 4.}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["Polygon",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready",
       Typeset`spolygon$$ = 
      Polygon[{{3.0000000000000004`, 4.}, {3.0000000000000004`, 5.}, {2., 
       5.}, {2., 4.}}]}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                
                PolygonBox[{{3.0000000000000004`, 4.}, {3.0000000000000004`, 
                 5.}, {2., 5.}, {2., 4.}}]}, ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                
                PolygonBox[{{3.0000000000000004`, 4.}, {3.0000000000000004`, 
                 5.}, {2., 5.}, {2., 4.}}]}, ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Polygon[{{3.0000000000000004`, 4.}, {3.0000000000000004`, 5.}, {2., 5.}, {
     2., 4.}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["Polygon",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready",
       Typeset`spolygon$$ = 
      Polygon[{{4., 4.}, {4., 5.}, {3.0000000000000004`, 5.}, {
       3.0000000000000004`, 4.}}]}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                
                PolygonBox[{{4., 4.}, {4., 5.}, {3.0000000000000004`, 5.}, {
                 3.0000000000000004`, 4.}}]}, ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                
                PolygonBox[{{4., 4.}, {4., 5.}, {3.0000000000000004`, 5.}, {
                 3.0000000000000004`, 4.}}]}, ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Polygon[{{4., 4.}, {4., 5.}, {3.0000000000000004`, 5.}, {
     3.0000000000000004`, 4.}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["Polygon",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready",
       Typeset`spolygon$$ = 
      Polygon[{{5., 4.}, {5., 5.}, {4., 5.}, {4., 4.}}]}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                PolygonBox[{{5., 4.}, {5., 5.}, {4., 5.}, {4., 4.}}]}, 
               ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                PolygonBox[{{5., 4.}, {5., 5.}, {4., 5.}, {4., 4.}}]}, 
               ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Polygon[{{5., 4.}, {5., 5.}, {4., 5.}, {4., 4.}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["Polygon",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready",
       Typeset`spolygon$$ = 
      Polygon[{{1., 3.0000000000000004`}, {1., 4.}, {0., 4.}, {0., 
       3.0000000000000004`}}]}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                
                PolygonBox[{{1., 3.0000000000000004`}, {1., 4.}, {0., 4.}, {
                 0., 3.0000000000000004`}}]}, ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                
                PolygonBox[{{1., 3.0000000000000004`}, {1., 4.}, {0., 4.}, {
                 0., 3.0000000000000004`}}]}, ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Polygon[{{1., 3.0000000000000004`}, {1., 4.}, {0., 4.}, {0., 
     3.0000000000000004`}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["Polygon",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready",
       Typeset`spolygon$$ = 
      Polygon[{{2., 3.0000000000000004`}, {2., 4.}, {1., 4.}, {1., 
       3.0000000000000004`}}]}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                
                PolygonBox[{{2., 3.0000000000000004`}, {2., 4.}, {1., 4.}, {
                 1., 3.0000000000000004`}}]}, ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                
                PolygonBox[{{2., 3.0000000000000004`}, {2., 4.}, {1., 4.}, {
                 1., 3.0000000000000004`}}]}, ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Polygon[{{2., 3.0000000000000004`}, {2., 4.}, {1., 4.}, {1., 
     3.0000000000000004`}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["Polygon",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready",
       Typeset`spolygon$$ = 
      Polygon[{{3.0000000000000004`, 3.0000000000000004`}, {
       3.0000000000000004`, 4.}, {2., 4.}, {2., 3.0000000000000004`}}]}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                
                PolygonBox[{{3.0000000000000004`, 3.0000000000000004`}, {
                 3.0000000000000004`, 4.}, {2., 4.}, {2., 
                 3.0000000000000004`}}]}, ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                
                PolygonBox[{{3.0000000000000004`, 3.0000000000000004`}, {
                 3.0000000000000004`, 4.}, {2., 4.}, {2., 
                 3.0000000000000004`}}]}, ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Polygon[{{3.0000000000000004`, 3.0000000000000004`}, {3.0000000000000004`,
      4.}, {2., 4.}, {2., 3.0000000000000004`}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["Polygon",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready",
       Typeset`spolygon$$ = 
      Polygon[{{4., 3.0000000000000004`}, {4., 4.}, {3.0000000000000004`, 
       4.}, {3.0000000000000004`, 3.0000000000000004`}}]}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                
                PolygonBox[{{4., 3.0000000000000004`}, {4., 4.}, {
                 3.0000000000000004`, 4.}, {3.0000000000000004`, 
                 3.0000000000000004`}}]}, ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                
                PolygonBox[{{4., 3.0000000000000004`}, {4., 4.}, {
                 3.0000000000000004`, 4.}, {3.0000000000000004`, 
                 3.0000000000000004`}}]}, ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Polygon[{{4., 3.0000000000000004`}, {4., 4.}, {3.0000000000000004`, 4.}, {
     3.0000000000000004`, 3.0000000000000004`}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["Polygon",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready",
       Typeset`spolygon$$ = 
      Polygon[{{5., 3.0000000000000004`}, {5., 4.}, {4., 4.}, {4., 
       3.0000000000000004`}}]}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                
                PolygonBox[{{5., 3.0000000000000004`}, {5., 4.}, {4., 4.}, {
                 4., 3.0000000000000004`}}]}, ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                
                PolygonBox[{{5., 3.0000000000000004`}, {5., 4.}, {4., 4.}, {
                 4., 3.0000000000000004`}}]}, ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Polygon[{{5., 3.0000000000000004`}, {5., 4.}, {4., 4.}, {4., 
     3.0000000000000004`}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["Polygon",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready",
       Typeset`spolygon$$ = 
      Polygon[{{1., 2.}, {1., 3.0000000000000004`}, {0., 
       3.0000000000000004`}, {0., 2.}}]}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                
                PolygonBox[{{1., 2.}, {1., 3.0000000000000004`}, {0., 
                 3.0000000000000004`}, {0., 2.}}]}, ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                
                PolygonBox[{{1., 2.}, {1., 3.0000000000000004`}, {0., 
                 3.0000000000000004`}, {0., 2.}}]}, ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Polygon[{{1., 2.}, {1., 3.0000000000000004`}, {0., 3.0000000000000004`}, {
     0., 2.}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["Polygon",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready",
       Typeset`spolygon$$ = 
      Polygon[{{2., 2.}, {2., 3.0000000000000004`}, {1., 
       3.0000000000000004`}, {1., 2.}}]}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                
                PolygonBox[{{2., 2.}, {2., 3.0000000000000004`}, {1., 
                 3.0000000000000004`}, {1., 2.}}]}, ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                
                PolygonBox[{{2., 2.}, {2., 3.0000000000000004`}, {1., 
                 3.0000000000000004`}, {1., 2.}}]}, ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Polygon[{{2., 2.}, {2., 3.0000000000000004`}, {1., 3.0000000000000004`}, {
     1., 2.}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["Polygon",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready",
       Typeset`spolygon$$ = 
      Polygon[{{3.0000000000000004`, 2.}, {3.0000000000000004`, 
       3.0000000000000004`}, {2., 3.0000000000000004`}, {2., 2.}}]}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                
                PolygonBox[{{3.0000000000000004`, 2.}, {3.0000000000000004`, 
                 3.0000000000000004`}, {2., 3.0000000000000004`}, {2., 2.}}]},
                ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                
                PolygonBox[{{3.0000000000000004`, 2.}, {3.0000000000000004`, 
                 3.0000000000000004`}, {2., 3.0000000000000004`}, {2., 2.}}]},
                ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Polygon[{{3.0000000000000004`, 2.}, {3.0000000000000004`, 
     3.0000000000000004`}, {2., 3.0000000000000004`}, {2., 2.}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["Polygon",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready",
       Typeset`spolygon$$ = 
      Polygon[{{4., 2.}, {4., 3.0000000000000004`}, {3.0000000000000004`, 
       3.0000000000000004`}, {3.0000000000000004`, 2.}}]}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                
                PolygonBox[{{4., 2.}, {4., 3.0000000000000004`}, {
                 3.0000000000000004`, 3.0000000000000004`}, {
                 3.0000000000000004`, 2.}}]}, ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                
                PolygonBox[{{4., 2.}, {4., 3.0000000000000004`}, {
                 3.0000000000000004`, 3.0000000000000004`}, {
                 3.0000000000000004`, 2.}}]}, ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Polygon[{{4., 2.}, {4., 3.0000000000000004`}, {3.0000000000000004`, 
     3.0000000000000004`}, {3.0000000000000004`, 2.}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["Polygon",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready",
       Typeset`spolygon$$ = 
      Polygon[{{5., 2.}, {5., 3.0000000000000004`}, {4., 
       3.0000000000000004`}, {4., 2.}}]}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                
                PolygonBox[{{5., 2.}, {5., 3.0000000000000004`}, {4., 
                 3.0000000000000004`}, {4., 2.}}]}, ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                
                PolygonBox[{{5., 2.}, {5., 3.0000000000000004`}, {4., 
                 3.0000000000000004`}, {4., 2.}}]}, ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Polygon[{{5., 2.}, {5., 3.0000000000000004`}, {4., 3.0000000000000004`}, {
     4., 2.}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["Polygon",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready",
       Typeset`spolygon$$ = 
      Polygon[{{1., 1.}, {1., 2.}, {0., 2.}, {0., 1.}}]}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                PolygonBox[{{1., 1.}, {1., 2.}, {0., 2.}, {0., 1.}}]}, 
               ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                PolygonBox[{{1., 1.}, {1., 2.}, {0., 2.}, {0., 1.}}]}, 
               ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Polygon[{{1., 1.}, {1., 2.}, {0., 2.}, {0., 1.}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["Polygon",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready",
       Typeset`spolygon$$ = 
      Polygon[{{2., 1.}, {2., 2.}, {1., 2.}, {1., 1.}}]}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                PolygonBox[{{2., 1.}, {2., 2.}, {1., 2.}, {1., 1.}}]}, 
               ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                PolygonBox[{{2., 1.}, {2., 2.}, {1., 2.}, {1., 1.}}]}, 
               ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Polygon[{{2., 1.}, {2., 2.}, {1., 2.}, {1., 1.}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["Polygon",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready",
       Typeset`spolygon$$ = 
      Polygon[{{3.0000000000000004`, 1.}, {3.0000000000000004`, 2.}, {2., 
       2.}, {2., 1.}}]}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                
                PolygonBox[{{3.0000000000000004`, 1.}, {3.0000000000000004`, 
                 2.}, {2., 2.}, {2., 1.}}]}, ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                
                PolygonBox[{{3.0000000000000004`, 1.}, {3.0000000000000004`, 
                 2.}, {2., 2.}, {2., 1.}}]}, ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Polygon[{{3.0000000000000004`, 1.}, {3.0000000000000004`, 2.}, {2., 2.}, {
     2., 1.}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["Polygon",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready",
       Typeset`spolygon$$ = 
      Polygon[{{4., 1.}, {4., 2.}, {3.0000000000000004`, 2.}, {
       3.0000000000000004`, 1.}}]}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                
                PolygonBox[{{4., 1.}, {4., 2.}, {3.0000000000000004`, 2.}, {
                 3.0000000000000004`, 1.}}]}, ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                
                PolygonBox[{{4., 1.}, {4., 2.}, {3.0000000000000004`, 2.}, {
                 3.0000000000000004`, 1.}}]}, ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Polygon[{{4., 1.}, {4., 2.}, {3.0000000000000004`, 2.}, {
     3.0000000000000004`, 1.}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["Polygon",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready",
       Typeset`spolygon$$ = 
      Polygon[{{5., 1.}, {5., 2.}, {4., 2.}, {4., 1.}}]}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                PolygonBox[{{5., 1.}, {5., 2.}, {4., 2.}, {4., 1.}}]}, 
               ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                PolygonBox[{{5., 1.}, {5., 2.}, {4., 2.}, {4., 1.}}]}, 
               ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Polygon[{{5., 1.}, {5., 2.}, {4., 2.}, {4., 1.}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["Polygon",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready",
       Typeset`spolygon$$ = 
      Polygon[{{1., 0.}, {1., 1.}, {0., 1.}, {0., 0.}}]}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                PolygonBox[{{1., 0.}, {1., 1.}, {0., 1.}, {0., 0.}}]}, 
               ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                PolygonBox[{{1., 0.}, {1., 1.}, {0., 1.}, {0., 0.}}]}, 
               ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Polygon[{{1., 0.}, {1., 1.}, {0., 1.}, {0., 0.}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["Polygon",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready",
       Typeset`spolygon$$ = 
      Polygon[{{2., 0.}, {2., 1.}, {1., 1.}, {1., 0.}}]}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                PolygonBox[{{2., 0.}, {2., 1.}, {1., 1.}, {1., 0.}}]}, 
               ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                PolygonBox[{{2., 0.}, {2., 1.}, {1., 1.}, {1., 0.}}]}, 
               ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Polygon[{{2., 0.}, {2., 1.}, {1., 1.}, {1., 0.}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["Polygon",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready",
       Typeset`spolygon$$ = 
      Polygon[{{3.0000000000000004`, 0.}, {3.0000000000000004`, 1.}, {2., 
       1.}, {2., 0.}}]}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                
                PolygonBox[{{3.0000000000000004`, 0.}, {3.0000000000000004`, 
                 1.}, {2., 1.}, {2., 0.}}]}, ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                
                PolygonBox[{{3.0000000000000004`, 0.}, {3.0000000000000004`, 
                 1.}, {2., 1.}, {2., 0.}}]}, ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Polygon[{{3.0000000000000004`, 0.}, {3.0000000000000004`, 1.}, {2., 1.}, {
     2., 0.}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["Polygon",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready",
       Typeset`spolygon$$ = 
      Polygon[{{4., 0.}, {4., 1.}, {3.0000000000000004`, 1.}, {
       3.0000000000000004`, 0.}}]}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                
                PolygonBox[{{4., 0.}, {4., 1.}, {3.0000000000000004`, 1.}, {
                 3.0000000000000004`, 0.}}]}, ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                
                PolygonBox[{{4., 0.}, {4., 1.}, {3.0000000000000004`, 1.}, {
                 3.0000000000000004`, 0.}}]}, ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Polygon[{{4., 0.}, {4., 1.}, {3.0000000000000004`, 1.}, {
     3.0000000000000004`, 0.}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["Polygon",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready",
       Typeset`spolygon$$ = 
      Polygon[{{5., 0.}, {5., 1.}, {4., 1.}, {4., 0.}}]}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                PolygonBox[{{5., 0.}, {5., 1.}, {4., 1.}, {4., 0.}}]}, 
               ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Directive[
                 Hue[0.6, 0.3, 0.85], 
                 EdgeForm[
                  Hue[0.6, 0.3, 0.85]]], 
                PolygonBox[{{5., 0.}, {5., 1.}, {4., 1.}, {4., 0.}}]}, 
               ImageSize -> 
               Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification])]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Polygon[{{5., 0.}, {5., 1.}, {4., 1.}, {4., 0.}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.9004816681767673`*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"f3091cc3-814e-44ad-9aa7-0c2b851879df"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"centroids", "=", 
  RowBox[{"RegionCentroid", "/@", 
   RowBox[{"MeshPrimitives", "[", 
    RowBox[{"mesh", ",", "2"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.90048158820747*^9, 3.900481596746768*^9}, {
  3.900481644812789*^9, 3.9004816545974336`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"214f8675-b20a-4376-b2ad-b6710aa9086b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "4.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5`", ",", "4.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5`", ",", "4.500000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.5000000000000004`", ",", "4.499999999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.5`", ",", "4.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "3.5000000000000004`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5`", ",", "3.5000000000000004`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5`", ",", "3.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.4999999999999996`", ",", "3.4999999999999996`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.499999999999999`", ",", "3.5000000000000004`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "2.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5`", ",", "2.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5`", ",", "2.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.5`", ",", "2.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.500000000000001`", ",", "2.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "1.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5`", ",", "1.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5`", ",", "1.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.5000000000000004`", ",", "1.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.5`", ",", "1.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5`", ",", "0.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5`", ",", "0.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.5000000000000004`", ",", "0.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.5`", ",", "0.5`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.900481597663562*^9, 3.9004816584279737`*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"2537385a-77f8-48e5-9d15-bb37d8c47388"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{"mesh", ",", 
    RowBox[{"MeshConnectivityGraph", "[", 
     RowBox[{"mesh", ",", "2", ",", 
      RowBox[{"VertexCoordinates", "->", "centroids"}]}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.900481682534276*^9, 3.900481693886257*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"0410434a-35f7-48ac-99a5-da6683feebd3"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQjR98sEelCYkzOKCJO8AkGMEkB1welQ8DAmj6BdDk
RdDkYXwGNHU43QGn0ex3QLPPAWY+ujsJ+AOuHp2GmY/KF4GLozofZzjgMEcA
By2CRsMAoXBE9ze6OxHmAgAtPh4i
    "], 
    {Hue[0.6, 0.3, 0.95], EdgeForm[Hue[0.6, 0.3, 0.75]], 
     TagBox[
      PolygonBox[{{10, 12, 11, 9}, {17, 18, 12, 10}, {23, 24, 18, 17}, {29, 
       30, 24, 23}, {35, 36, 30, 29}, {8, 10, 9, 7}, {16, 17, 10, 8}, {22, 23,
        17, 16}, {28, 29, 23, 22}, {34, 35, 29, 28}, {6, 8, 7, 5}, {15, 16, 8,
        6}, {21, 22, 16, 15}, {27, 28, 22, 21}, {33, 34, 28, 27}, {4, 6, 5, 
       2}, {14, 15, 6, 4}, {20, 21, 15, 14}, {26, 27, 21, 20}, {32, 33, 27, 
       26}, {3, 4, 2, 1}, {13, 14, 4, 3}, {19, 20, 14, 13}, {25, 26, 20, 
       19}, {31, 32, 26, 25}}],
      Annotation[#, "Geometry"]& ]}], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQEP7CG0kAOE/oHGZ3FghPIhNI/DfzAQdEBVB6Mf
2MPUwcxD5bNAaZg53Gi0oAOqepj7WODmofLRaYQ9MHejysPM+4GDRtiD7g9U
f8L4D9BodHGEvdj9hQg3AOJeOeM=
    "], {
     {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
      ArrowBox[{{1, 2}, {1, 6}, {2, 3}, {2, 7}, {3, 4}, {3, 8}, {4, 5}, {4, 
       9}, {5, 10}, {6, 7}, {6, 11}, {7, 8}, {7, 12}, {8, 9}, {8, 13}, {9, 
       10}, {9, 14}, {10, 15}, {11, 12}, {11, 16}, {12, 13}, {12, 17}, {13, 
       14}, {13, 18}, {14, 15}, {14, 19}, {15, 20}, {16, 17}, {16, 21}, {17, 
       18}, {17, 22}, {18, 19}, {18, 23}, {19, 20}, {19, 24}, {20, 25}, {21, 
       22}, {22, 23}, {23, 24}, {24, 25}}, 0.03700564971751412]}, 
     {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
      DiskBox[1, 0.03700564971751412], DiskBox[2, 0.03700564971751412], 
      DiskBox[3, 0.03700564971751412], DiskBox[4, 0.03700564971751412], 
      DiskBox[5, 0.03700564971751412], DiskBox[6, 0.03700564971751412], 
      DiskBox[7, 0.03700564971751412], DiskBox[8, 0.03700564971751412], 
      DiskBox[9, 0.03700564971751412], DiskBox[10, 0.03700564971751412], 
      DiskBox[11, 0.03700564971751412], DiskBox[12, 0.03700564971751412], 
      DiskBox[13, 0.03700564971751412], DiskBox[14, 0.03700564971751412], 
      DiskBox[15, 0.03700564971751412], DiskBox[16, 0.03700564971751412], 
      DiskBox[17, 0.03700564971751412], DiskBox[18, 0.03700564971751412], 
      DiskBox[19, 0.03700564971751412], DiskBox[20, 0.03700564971751412], 
      DiskBox[21, 0.03700564971751412], DiskBox[22, 0.03700564971751412], 
      DiskBox[23, 0.03700564971751412], DiskBox[24, 0.03700564971751412], 
      DiskBox[25, 0.03700564971751412]}}]}]], "Output",
 CellChangeTimes->{3.900481694167663*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"4ddbd8d6-8f3e-4d8d-9d50-15f21f40d14f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MeshConnectivityGraph", "[", 
  RowBox[{
   RowBox[{"ArrayMesh", "[", 
    RowBox[{"ConstantArray", "[", 
     RowBox[{"1", ",", 
      RowBox[{"{", 
       RowBox[{"5", ",", "5"}], "}"}]}], "]"}], "]"}], ",", "2"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9004815705307655`*^9, 3.900481573283595*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"e3cff3b9-9459-4b9b-80c2-383163b63fd4"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{2, 1}, {2, 2}, {2, 3}, {2, 4}, {2, 5}, {2, 6}, {2, 7}, {2, 8}, {
      2, 9}, {2, 10}, {2, 11}, {2, 12}, {2, 13}, {2, 14}, {2, 15}, {2, 16}, {
      2, 17}, {2, 18}, {2, 19}, {2, 20}, {2, 21}, {2, 22}, {2, 23}, {2, 24}, {
      2, 25}}, {Null, 
       SparseArray[
       Automatic, {25, 25}, 0, {
        1, {{0, 2, 5, 8, 11, 13, 16, 20, 24, 28, 31, 34, 38, 42, 46, 49, 52, 
          56, 60, 64, 67, 69, 72, 75, 78, 80}, {{2}, {6}, {1}, {3}, {7}, {
          2}, {4}, {8}, {3}, {5}, {9}, {4}, {10}, {1}, {7}, {11}, {2}, {6}, {
          8}, {12}, {3}, {7}, {9}, {13}, {4}, {8}, {10}, {14}, {5}, {9}, {
          15}, {6}, {12}, {16}, {7}, {11}, {13}, {17}, {8}, {12}, {14}, {
          18}, {9}, {13}, {15}, {19}, {10}, {14}, {20}, {11}, {17}, {21}, {
          12}, {16}, {18}, {22}, {13}, {17}, {19}, {23}, {14}, {18}, {20}, {
          24}, {15}, {19}, {25}, {16}, {22}, {17}, {21}, {23}, {18}, {22}, {
          24}, {19}, {23}, {25}, {20}, {24}}}, Pattern}]}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3RsuEfZOQsBhg5ZQ8g7OXfZ9Xw1cXH5yODD0T6v+
f3GG/aXm/aliGQwODFCg1vNZLb73vT1D6UrHBOZe+w1f3xtvPrLT/sDSYxcb
J2+w/6AQ3uBqL+Cw6fjWfcKR7+05dkxe5CDF6fDrnmFU2su39iFaM4yKfRkc
3E480DWpfWv/zkhR8Lr4O/tXSya9mfDgrX2D22VLvdaZ9gLqG3WO73pnf2VW
3f0TXgIO3XLvvn72ZnDo6/t2fqUap8P2ox43OXUZHFbl3GOV92FwmCWpe3+R
HoPDoiW1e0sOv7XnvlrWeMMW4W7XzqL2pS4MDiu6Wlcd1xVwcJnpY9y+j8Nh
Yb90mSoXp0PDJyvLvoccDtbtpp8UQhkcXnCWzXr/i8PhX3doWEbVO3uPI1z7
5v8Dhgu7b/FtroX2Bd/zmW5f43Coc5h76Mtrfof08xumOl7gd9iiLPHKBmhO
lb3LtT5pAYfq+fEWX3IYHDYe5/4rYibgcM7trYDmlvf2bDt7np3QFHAweFUg
5LNwhz3XzgtXRZ/wOwAA4cCs3w==
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 6}, {2, 3}, {2, 7}, {3, 4}, {3, 8}, {4, 5}, {4,
           9}, {5, 10}, {6, 7}, {6, 11}, {7, 8}, {7, 12}, {8, 9}, {8, 13}, {9,
           10}, {9, 14}, {10, 15}, {11, 12}, {11, 16}, {12, 13}, {12, 17}, {
          13, 14}, {13, 18}, {14, 15}, {14, 19}, {15, 20}, {16, 17}, {16, 
          21}, {17, 18}, {17, 22}, {18, 19}, {18, 23}, {19, 20}, {19, 24}, {
          20, 25}, {21, 22}, {22, 23}, {23, 24}, {24, 25}}, 
          0.03746995943965842]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.03746995943965842], DiskBox[2, 0.03746995943965842], 
         DiskBox[3, 0.03746995943965842], DiskBox[4, 0.03746995943965842], 
         DiskBox[5, 0.03746995943965842], DiskBox[6, 0.03746995943965842], 
         DiskBox[7, 0.03746995943965842], DiskBox[8, 0.03746995943965842], 
         DiskBox[9, 0.03746995943965842], DiskBox[10, 0.03746995943965842], 
         DiskBox[11, 0.03746995943965842], DiskBox[12, 0.03746995943965842], 
         DiskBox[13, 0.03746995943965842], DiskBox[14, 0.03746995943965842], 
         DiskBox[15, 0.03746995943965842], DiskBox[16, 0.03746995943965842], 
         DiskBox[17, 0.03746995943965842], DiskBox[18, 0.03746995943965842], 
         DiskBox[19, 0.03746995943965842], DiskBox[20, 0.03746995943965842], 
         DiskBox[21, 0.03746995943965842], DiskBox[22, 0.03746995943965842], 
         DiskBox[23, 0.03746995943965842], DiskBox[24, 0.03746995943965842], 
         DiskBox[25, 0.03746995943965842]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.9004815736424885`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"3ed2dff6-41d7-43f6-abb3-544b533aebad"]
}, Closed]],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["MeshConnectivityGraph"]], "paclet:ref/MeshConnectivityGraph"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "d2eb5c05-d802-4d9b-b545-2dae462562ca"],
 " to test whether a mesh is connected:"
}], "Text",
 CellID->848746617,ExpressionUUID->"7f68016a-2d5c-4fb4-88e4-9e6e98308fea"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ConnectedMeshQ", "[", 
   RowBox[{"mesh_", "?", "MeshRegionQ"}], "]"}], ":=", 
  RowBox[{"ConnectedGraphQ", "[", 
   RowBox[{"MeshConnectivityGraph", "[", 
    RowBox[{"mesh", ",", "0", ",", 
     RowBox[{"RegionDimension", "[", "mesh", "]"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9004817620674105`*^9, 3.9004818030243273`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"17689c84-d2d3-46fe-b17e-ef7c3e25022d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"ConnectedMeshQ", "[", "i", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"{", 
      RowBox[{
       GraphicsBox[
        TagBox[
         DynamicModuleBox[{Typeset`mesh = HoldComplete[
           
           MeshRegion[{{0., 0.}, {1., 0.}, {0., 1.}, {1., 1.}, {2., 1.}, {2., 
            2.}, {1., 2.}}, {
             Polygon[{{1, 2, 3}}], 
             Polygon[{{4, 5, 6, 7}}]}, 
            Method -> {
             "EliminateUnusedCoordinates" -> True, 
              "DeleteDuplicateCoordinates" -> Automatic, 
              "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> Identity, 
              "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
              Automatic, "CheckIntersections" -> Automatic, "BoundaryNesting" -> 
              Automatic, "SeparateBoundaries" -> Automatic, "TJunction" -> 
              Automatic, "PropagateMarkers" -> True, "ZeroTest" -> Automatic, 
              "Hash" -> 9034033423450064546}]]}, 
          
          TagBox[GraphicsComplexBox[{{0., 0.}, {1., 0.}, {0., 1.}, {1., 1.}, {
            2., 1.}, {2., 2.}, {1., 2.}}, 
            {Hue[0.6, 0.3, 0.95], EdgeForm[Hue[0.6, 0.3, 0.75]], 
             TagBox[PolygonBox[{{1, 2, 3}}],
              Annotation[#, "Geometry"]& ], 
             TagBox[PolygonBox[{{4, 5, 6, 7}}],
              Annotation[#, "Geometry"]& ]}],
           MouseAppearanceTag["LinkHand"]],
          AllowKernelInitialization->False],
         "MeshGraphics",
         AutoDelete->True,
         Editable->False,
         Selectable->False],
        DefaultBaseStyle->{
         "MeshGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
        ImageSize->{35.66015625, Automatic}], ",", 
       Graphics3DBox[
        TagBox[
         DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
          
          TagBox[GraphicsComplex3DBox[{{0., 0., 0.}, {0., 0., 1.}, {0., -1., 
            0.}, {1., 0., 0.}, {0., 1., 0.}}, 
            {Hue[0.6, 0.3, 0.85], EdgeForm[Hue[0.6, 0.3, 0.75]], 
             TagBox[Polygon3DBox[{{1, 2, 3}, {1, 2, 4}, {1, 2, 5}}],
              Annotation[#, "Geometry"]& ]}],
           MouseAppearanceTag["LinkHand"]],
          AllowKernelInitialization->False],
         "MeshGraphics3D",
         AutoDelete->True,
         Editable->False,
         Selectable->False],
        Boxed->False,
        DefaultBaseStyle->{
         "MeshGraphics3D", FrontEnd`GraphicsHighlightColor -> 
          Hue[0.1, 1, 0.7]},
        ImageSize->{51.44140625, 53.},
        Lighting->{{"Ambient", 
           GrayLevel[0.45]}, {"Directional", 
           GrayLevel[0.3], 
           ImageScaled[{2, 0, 2}]}, {"Directional", 
           GrayLevel[0.33], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           GrayLevel[0.3], 
           ImageScaled[{0, 2, 2}]}},
        Method->{"ShrinkWrap" -> True},
        ViewPoint->{1.0012787946317885`, -2.577217888978468, 
         1.9507405589032278`},
        ViewVertical->{-0.058645868496110455`, -0.0219132710031233, 
         0.9980383112197049}], ",", 
       GraphicsBox[
        TagBox[
         DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
          
          TagBox[GraphicsComplexBox[{{0., 0.}, {0., 0.3333333333333333}, {
            0.3333333333333333, 0.}, {0.3333333333333333, 
            0.3333333333333333}, {0., 0.6666666666666666}, {
            0.3333333333333333, 0.6666666666666666}, {0., 1.}, {
            0.3333333333333333, 1.}, {0.6666666666666666, 0.}, {
            0.6666666666666666, 0.3333333333333333}, {0.6666666666666666, 
            0.6666666666666666}, {0.6666666666666666, 1.}, {1., 0.}, {1., 
            0.3333333333333333}, {1., 0.6666666666666666}, {1., 1.}}, 
            {Hue[0.6, 0.3, 0.95], EdgeForm[Hue[0.6, 0.3, 0.75]], 
             
             TagBox[PolygonBox[{{6, 8, 7, 5}, {11, 12, 8, 6}, {15, 16, 12, 
               11}, {4, 6, 5, 2}, {14, 15, 11, 10}, {3, 4, 2, 1}, {9, 10, 4, 
               3}, {13, 14, 10, 9}}],
              Annotation[#, "Geometry"]& ]}],
           MouseAppearanceTag["LinkHand"]],
          AllowKernelInitialization->False],
         "MeshGraphics",
         AutoDelete->True,
         Editable->False,
         Selectable->False],
        DefaultBaseStyle->{
         "MeshGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
        ImageSize->{34.30859375, Automatic}], ",", " ", 
       GraphicsBox[
        TagBox[
         DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
          
          TagBox[GraphicsComplexBox[{{0.9444148452658894, 
            0.15937797995782343`}, {0.9733434495176028, 
            0.05463115539185459}, {0.923999155690064, 0.6990313736574589}, {
            0.813759839342785, 0.8109267454299045}, {0.7080625559004095, 
            0.5843944160262751}, {0.1154500981635933, 0.1708742209021834}, {
            0.6627585045852245, 0.4664052990076806}, {0.5420121400634892, 
            0.35082505874985626`}, {0.4398248393058708, 
            0.007871089186607172}, {0.6906094931474542, 0.05583268699199495}}, 
            {Hue[0.6, 0.3, 0.95], EdgeForm[Hue[0.6, 0.3, 0.75]], 
             TagBox[PolygonBox[{{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}}],
              Annotation[#, "Geometry"]& ]}],
           MouseAppearanceTag["LinkHand"]],
          AllowKernelInitialization->False],
         "MeshGraphics",
         AutoDelete->True,
         Editable->False,
         Selectable->False],
        DefaultBaseStyle->{
         "MeshGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
        ImageSize->{60.03125, Automatic}]}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9004818040889626`*^9, 3.900481816709487*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"52e8967f-e306-42ac-b9c9-914e1b3411a6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"False", ",", "True", ",", "True", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{3.9004818171748357`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"8588a04e-d877-43bc-b092-b6f18eeb9d57"]
}, Open  ]],

Cell["How do you go from a mesh connectivity graph to a mesh?", "Text",
 CellChangeTimes->{{3.900481933362542*^9, 
  3.9004819442044773`*^9}},ExpressionUUID->"e3a5a403-a34a-4ce1-b213-\
2912328ff7db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayMesh", "[", 
  RowBox[{"ConstantArray", "[", 
   RowBox[{"1", ",", 
    RowBox[{"{", 
     RowBox[{"8", ",", "8"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9004820843517313`*^9, 3.9004820851470413`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"de6af698-0182-4c2c-ab0b-b109d471949b"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
    TagBox[GraphicsComplexBox[CompressedData["
1:eJyF07ENAjEMheGIKmWKFClchEm4FWAEJGpWZwSgiNB9kjlLp6c/z9I5tnO+
P2+PUynl+vm++j9el70enZeN821vV/yK3/Abfsfv+AN/4Ad+4E/8xd4jvSda
4QZ3eMABr3rsW9pX8tUGd3jAAa96nFM6x+S/LdEODzjgVY97ke4N+fbBOtQB
BzzJW5HuKfnOwT5Yhxrw5HxF+i7Idw+cg32wDnWiK47eoe/APXQPnIN9+NXx
BvqSP80=
      "], 
      {Hue[0.6, 0.3, 0.95], EdgeForm[Hue[0.6, 0.3, 0.75]], 
       TagBox[
        PolygonBox[{{16, 18, 17, 15}, {26, 27, 18, 16}, {35, 36, 27, 26}, {44,
          45, 36, 35}, {53, 54, 45, 44}, {62, 63, 54, 53}, {71, 72, 63, 62}, {
         80, 81, 72, 71}, {14, 16, 15, 13}, {25, 26, 16, 14}, {34, 35, 26, 
         25}, {43, 44, 35, 34}, {52, 53, 44, 43}, {61, 62, 53, 52}, {70, 71, 
         62, 61}, {79, 80, 71, 70}, {12, 14, 13, 11}, {24, 25, 14, 12}, {33, 
         34, 25, 24}, {42, 43, 34, 33}, {51, 52, 43, 42}, {60, 61, 52, 51}, {
         69, 70, 61, 60}, {78, 79, 70, 69}, {10, 12, 11, 9}, {23, 24, 12, 
         10}, {32, 33, 24, 23}, {41, 42, 33, 32}, {50, 51, 42, 41}, {59, 60, 
         51, 50}, {68, 69, 60, 59}, {77, 78, 69, 68}, {8, 10, 9, 7}, {22, 23, 
         10, 8}, {31, 32, 23, 22}, {40, 41, 32, 31}, {49, 50, 41, 40}, {58, 
         59, 50, 49}, {67, 68, 59, 58}, {76, 77, 68, 67}, {6, 8, 7, 5}, {21, 
         22, 8, 6}, {30, 31, 22, 21}, {39, 40, 31, 30}, {48, 49, 40, 39}, {57,
          58, 49, 48}, {66, 67, 58, 57}, {75, 76, 67, 66}, {4, 6, 5, 2}, {20, 
         21, 6, 4}, {29, 30, 21, 20}, {38, 39, 30, 29}, {47, 48, 39, 38}, {56,
          57, 48, 47}, {65, 66, 57, 56}, {74, 75, 66, 65}, {3, 4, 2, 1}, {19, 
         20, 4, 3}, {28, 29, 20, 19}, {37, 38, 29, 28}, {46, 47, 38, 37}, {55,
          56, 47, 46}, {64, 65, 56, 55}, {73, 74, 65, 64}}],
        Annotation[#, "Geometry"]& ]}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> 
    Hue[0.1, 1, 0.7]}]], "Output",
 CellChangeTimes->{{3.9004820799999065`*^9, 3.900482085549326*^9}},
 CellLabel->"Out[51]=",ExpressionUUID->"c3586b50-7c39-4a1f-bbcc-c11dfe8adf86"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionBoundary", "[", 
  RowBox[{"ArrayMesh", "[", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "8"}], "}"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9004820901295877`*^9, 3.900482124153029*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"cc6db3de-5968-4310-bcff-9b749671a587"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
    TagBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQAGIQjR98sEelMYADKpcDjS+AxhdB40ug8WXQ+AoOqPbD
+Oj2wvgweXR3cKDJo7tLAE0e3Z0iaPLo7pZAk0f3hwyavAKaPCF/ovsL3R/o
7kZ3J7q7EO4AAAbXFMo=
      "], 
      {Hue[0.6, 0.3, 0.75], 
       TagBox[
        LineBox[{{11, 10}, {10, 9}, {13, 11}, {15, 13}, {17, 15}, {19, 17}, {
         21, 19}, {23, 21}, {31, 32}, {32, 23}, {9, 8}, {30, 31}, {8, 7}, {29,
          30}, {7, 6}, {28, 29}, {6, 5}, {27, 28}, {5, 4}, {26, 27}, {4, 2}, {
         25, 26}, {2, 1}, {1, 3}, {3, 12}, {12, 14}, {14, 16}, {16, 18}, {18, 
         20}, {20, 22}, {24, 25}, {22, 24}}],
        Annotation[#, "Geometry"]& ], 
       PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32}]}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> 
    Hue[0.1, 1, 0.7]}]], "Output",
 CellChangeTimes->{3.900482124485601*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"97a19370-9026-4762-b9b9-a88aba07975a"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionBoundary", "[", 
  RowBox[{"ArrayMesh", "[", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9004820901295877`*^9, 3.900482124153029*^9}, {
  3.900482188378498*^9, 3.900482194422225*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"5c97ca38-d07e-44f7-a757-30b8abf2dd7b"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
    TagBox[
     GraphicsComplexBox[{{0., 0.}, {0., 1.}, {1., 0.}, {0., 2.}, {0., 3.}, {
      1., 3.}, {2., 0.}, {2., 3.}, {3., 0.}, {3., 1.}, {3., 2.}, {3., 3.}}, 
      {Hue[0.6, 0.3, 0.75], 
       TagBox[
        LineBox[{{6, 5}, {5, 4}, {8, 6}, {11, 12}, {12, 8}, {4, 2}, {10, 
         11}, {2, 1}, {1, 3}, {3, 7}, {9, 10}, {7, 9}}],
        Annotation[#, "Geometry"]& ], 
       PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}]}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> 
    Hue[0.1, 1, 0.7]}]], "Output",
 CellChangeTimes->{3.9004821947991743`*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"58500796-8574-4eea-9cf8-f5f232382d4c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InputForm", "[", 
  RowBox[{"RegionBoundary", "[", 
   RowBox[{"ArrayMesh", "[", 
    RowBox[{"ConstantArray", "[", 
     RowBox[{"1", ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.900482200668468*^9, 3.900482203018913*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"0878da7d-cd53-4df8-b7c3-fc3de105929d"],

Cell["\<\
MeshRegion[{{0., 0.}, {0., 1.}, {1., 0.}, {0., 2.}, 
 {0., 3.}, {1., 3.}, {2., 0.}, {2., 3.}, {3., 0.}, 
 {3., 1.}, {3., 2.}, {3., 3.}}, 
 {Line[{{6, 5}, {5, 4}, {8, 6}, {11, 12}, {12, 8}, 
   {4, 2}, {10, 11}, {2, 1}, {1, 3}, {3, 7}, {9, 
   10}, {7, 9}}]}]\
\>", "Output",
 CellChangeTimes->{3.900482203334982*^9},
 CellLabel->
  "Out[54]//InputForm=",ExpressionUUID->"b9aa7dfe-8f19-4128-a69e-\
1efb04568ee7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MeshRegion", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.", ",", "0."}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.", ",", "1."}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.", ",", "0."}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.", ",", "2."}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.", ",", "3."}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.", ",", "3."}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.", ",", "0."}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.", ",", "3."}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.", ",", "0."}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.", ",", "1."}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.", ",", "2."}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.", ",", "3."}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"6", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"8", ",", "6"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"11", ",", "12"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"12", ",", "8"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"10", ",", "11"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "7"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"9", ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"7", ",", "9"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Line", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "2"}], "}"}]}], "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900482205086998*^9, 3.9004822975276814`*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"d07a3ed3-da52-4526-ad62-27d3423a3de0"],

Cell[BoxData[
 RowBox[{"MeshRegion", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.`", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "3.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.`", ",", "3.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.`", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.`", ",", "3.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.`", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.`", ",", "1.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.`", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.`", ",", "3.`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"6", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"8", ",", "6"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"11", ",", "12"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"12", ",", "8"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"10", ",", "11"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "7"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"9", ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"7", ",", "9"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Line", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "2"}], "}"}]}], "]"}]}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.900482242290417*^9, 3.90048229790349*^9}},
 CellLabel->"Out[58]=",ExpressionUUID->"73f2781b-04b9-4f37-a9c1-209ab18b64a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MeshRegion", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.", ",", "0."}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.", ",", "1."}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.", ",", "0."}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.", ",", "2."}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.", ",", "3."}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.", ",", "3."}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.", ",", "0."}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.", ",", "3."}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.", ",", "0."}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.", ",", "1."}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.", ",", "2."}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.", ",", "3."}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"6", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"8", ",", "6"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"11", ",", "12"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"12", ",", "8"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"10", ",", "11"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "7"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"9", ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"7", ",", "9"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.900482205086998*^9, 3.9004822975276814`*^9}, {
  3.900482372029112*^9, 3.9004824025776405`*^9}, {3.900482435308863*^9, 
  3.9004825047220306`*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"12970ec9-1fb0-439e-9f3f-17f446aac402"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
    TagBox[
     GraphicsComplexBox[{{0., 0.}, {0., 1.}, {1., 0.}, {0., 2.}, {0., 3.}, {
      1., 3.}, {2., 0.}, {2., 3.}, {3., 0.}, {3., 1.}, {3., 2.}, {3., 3.}}, 
      {Hue[0.6, 0.3, 0.75], 
       TagBox[
        LineBox[{{6, 5}, {5, 4}, {8, 6}, {11, 12}, {12, 8}, {4, 2}, {10, 
         11}, {2, 1}, {1, 3}, {3, 7}, {9, 10}, {7, 9}}],
        Annotation[#, "Geometry"]& ], 
       PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}]}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> 
    Hue[0.1, 1, 0.7]}]], "Output",
 CellChangeTimes->{{3.900482380336407*^9, 3.900482402973133*^9}, {
  3.9004824430869207`*^9, 3.900482505141009*^9}},
 CellLabel->"Out[67]=",ExpressionUUID->"084d2851-f648-4949-b21b-e8ae28ff6c45"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MeshRegion", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9004825454352865`*^9, 3.900482574605991*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"4b176c8b-c0f5-4a60-bdea-03b2ae27ae50"],

Cell[BoxData[
 RowBox[{"MeshRegion", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.900482538982041*^9, 3.9004825749456224`*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"8c039445-c96a-4d87-a419-c2bd8aa07d4e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MeshRegion", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "0"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.9004825454352865`*^9, 3.900482590816291*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"2409c066-e248-4d4b-83f2-078bae1ce1e7"],

Cell[BoxData[
 RowBox[{"MeshRegion", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "0"}], "}"}]}], "}"}], "]"}]], "Output",
 CellChangeTimes->{{3.9004825877723064`*^9, 3.900482591214434*^9}},
 CellLabel->"Out[71]=",ExpressionUUID->"4e67561a-dc19-45c4-9938-e2e386133712"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HighlightMesh", "[", 
  RowBox[{
   RowBox[{"MeshRegion", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "0."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "1."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1.", ",", " ", "0."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "2."}], "}"}], ",", " ", "\n", " ", 
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "3."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1.", ",", " ", "3."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"2.", ",", " ", "0."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"2.", ",", " ", "3."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "0."}], "}"}], ",", " ", "\n", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "1."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "2."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "3."}], "}"}]}], "}"}], ",", " ", "\n", " ", 
     RowBox[{"{", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"6", ",", " ", "5"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"5", ",", " ", "4"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"8", ",", " ", "6"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"11", ",", " ", "12"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"12", ",", " ", "8"}], "}"}], ",", " ", "\n", "   ", 
         RowBox[{"{", 
          RowBox[{"4", ",", " ", "2"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"10", ",", " ", "11"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"2", ",", " ", "1"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"1", ",", " ", "3"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"3", ",", " ", "7"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"9", ",", " ", "\n", "   ", "10"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"7", ",", " ", "9"}], "}"}]}], "}"}], "]"}], "}"}]}], "]"}],
    ",", 
   RowBox[{"Labeled", "[", 
    RowBox[{"0", ",", "\"\<Index\>\""}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900482630831892*^9, 3.900482647314953*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"927edd24-1c3d-4aca-ac06-b4dec03a4f37"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = {
    MeshRegion, {
     Properties -> {{0, Default} -> (MeshCellLabel -> "Index")}}}}, 
    TagBox[
     GraphicsComplexBox[{{0., 0.}, {0., 1.}, {1., 0.}, {0., 2.}, {0., 3.}, {
      1., 3.}, {2., 0.}, {2., 3.}, {3., 0.}, {3., 1.}, {3., 2.}, {3., 3.}}, 
      {Hue[0.6, 0.3, 0.75], 
       TagBox[
        LineBox[{{6, 5}, {5, 4}, {8, 6}, {11, 12}, {12, 8}, {4, 2}, {10, 
         11}, {2, 1}, {1, 3}, {3, 7}, {9, 10}, {7, 9}}],
        Annotation[#, "Geometry"]& ], 
       PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
        12}], {{PointBox[{1}], 
         InsetBox["1", Offset[{2, 2}, {0., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{2}], 
         InsetBox["2", Offset[{2, 2}, {0., 1.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{3}], 
         InsetBox["3", Offset[{2, 2}, {1., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{4}], 
         InsetBox["4", Offset[{2, 2}, {0., 2.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{5}], 
         InsetBox["5", Offset[{2, 2}, {0., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{6}], 
         InsetBox["6", Offset[{2, 2}, {1., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{7}], 
         InsetBox["7", Offset[{2, 2}, {2., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{8}], 
         InsetBox["8", Offset[{2, 2}, {2., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{9}], 
         InsetBox["9", Offset[{2, 2}, {3., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{10}], 
         InsetBox["10", Offset[{2, 2}, {3., 1.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{11}], 
         InsetBox["11", Offset[{2, 2}, {3., 2.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{12}], 
         InsetBox["12", Offset[{2, 2}, {3., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> 
    Hue[0.1, 1, 0.7]}]], "Output",
 CellChangeTimes->{{3.900482637147355*^9, 3.900482647722764*^9}},
 CellLabel->"Out[73]=",ExpressionUUID->"40aa7d34-d696-4a57-b2f9-933c757cd75c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HighlightMesh", "[", 
  RowBox[{
   RowBox[{"MeshRegion", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "0."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "1."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1.", ",", " ", "0."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "2."}], "}"}], ",", " ", "\n", " ", 
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "3."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1.", ",", " ", "3."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"2.", ",", " ", "0."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"2.", ",", " ", "3."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "0."}], "}"}], ",", " ", "\n", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "1."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "2."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "3."}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "2"}], "}"}]}], "}"}], ",", " ", "\n", " ", 
     RowBox[{"{", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"6", ",", " ", "5"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"5", ",", " ", "4"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"8", ",", " ", "6"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"11", ",", " ", "12"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"12", ",", " ", "8"}], "}"}], ",", " ", "\n", "   ", 
         RowBox[{"{", 
          RowBox[{"4", ",", " ", "2"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"10", ",", " ", "11"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"2", ",", " ", "1"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"1", ",", " ", "3"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"3", ",", " ", "7"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"9", ",", " ", "\n", "   ", "10"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"7", ",", " ", "9"}], "}"}]}], "}"}], "]"}], "}"}]}], "]"}],
    ",", 
   RowBox[{"Labeled", "[", 
    RowBox[{"0", ",", "\"\<Index\>\""}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900482630831892*^9, 3.900482685281186*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"0497ec82-ca4f-4bf8-ac97-7c2174c432e2"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = {
    MeshRegion, {
     Properties -> {{0, Default} -> (MeshCellLabel -> "Index")}}}}, 
    TagBox[
     GraphicsComplexBox[{{0., 0.}, {0., 1.}, {1., 0.}, {0., 2.}, {0., 3.}, {
      1., 3.}, {2., 0.}, {2., 3.}, {3., 0.}, {3., 1.}, {3., 2.}, {3., 3.}}, 
      {Hue[0.6, 0.3, 0.75], 
       TagBox[
        LineBox[{{6, 5}, {5, 4}, {8, 6}, {11, 12}, {12, 8}, {4, 2}, {10, 
         11}, {2, 1}, {1, 3}, {3, 7}, {9, 10}, {7, 9}}],
        Annotation[#, "Geometry"]& ], 
       PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
        12}], {{PointBox[{1}], 
         InsetBox["1", Offset[{2, 2}, {0., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{2}], 
         InsetBox["2", Offset[{2, 2}, {0., 1.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{3}], 
         InsetBox["3", Offset[{2, 2}, {1., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{4}], 
         InsetBox["4", Offset[{2, 2}, {0., 2.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{5}], 
         InsetBox["5", Offset[{2, 2}, {0., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{6}], 
         InsetBox["6", Offset[{2, 2}, {1., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{7}], 
         InsetBox["7", Offset[{2, 2}, {2., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{8}], 
         InsetBox["8", Offset[{2, 2}, {2., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{9}], 
         InsetBox["9", Offset[{2, 2}, {3., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{10}], 
         InsetBox["10", Offset[{2, 2}, {3., 1.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{11}], 
         InsetBox["11", Offset[{2, 2}, {3., 2.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{12}], 
         InsetBox["12", Offset[{2, 2}, {3., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> 
    Hue[0.1, 1, 0.7]}]], "Output",
 CellChangeTimes->{3.9004826658080893`*^9, 3.9004827162544413`*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"493f778f-6a26-49a3-9cf8-8233653e93ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MeshRegion", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"1", "/", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}], "]"}], ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3"}], "}"}], "]"}], ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}], "]"}], ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{"4", ",", "2"}], "}"}], "]"}]}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[76]:=",ExpressionUUID->"d7ef0f1c-339c-4cea-99e9-7e8a142bb3c1"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
    TagBox[GraphicsComplexBox[{{0., 0.}, {1., 0.}, {2., 0.5}, {2., -0.5}}, 
      {Hue[0.6, 0.3, 0.75], 
       TagBox[LineBox[{{1, 2}, {2, 3}, {3, 4}, {4, 2}}],
        Annotation[#, "Geometry"]& ], PointBox[{1, 2, 3, 4}]}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> 
    Hue[0.1, 1, 0.7]}]], "Output",
 CellChangeTimes->{3.9004827273301916`*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"8dc1eeda-7bb4-4d17-aa7b-b5eb3f48258a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HighlightMesh", "[", 
  RowBox[{
   RowBox[{"MeshRegion", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", 
         RowBox[{"1", "/", "2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", 
         RowBox[{
          RowBox[{"-", "1"}], "/", "2"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"4", ",", "2"}], "}"}], "]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"Labeled", "[", 
    RowBox[{"0", ",", "\"\<Index\>\""}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{3.900482737310934*^9},
 CellLabel->"In[77]:=",ExpressionUUID->"5d811785-c680-49aa-96d7-e0a1dd02548e"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = {
    MeshRegion, {
     Properties -> {{0, Default} -> (MeshCellLabel -> "Index")}}}}, 
    TagBox[GraphicsComplexBox[{{0., 0.}, {1., 0.}, {2., 0.5}, {2., -0.5}}, 
      {Hue[0.6, 0.3, 0.75], 
       TagBox[LineBox[{{1, 2}, {2, 3}, {3, 4}, {4, 2}}],
        Annotation[#, "Geometry"]& ], 
       PointBox[{1, 2, 3, 
        4}], {{PointBox[{1}], 
         InsetBox["1", Offset[{2, 2}, {0., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{2}], 
         InsetBox["2", Offset[{2, 2}, {1., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{3}], 
         InsetBox["3", Offset[{2, 2}, {2., 0.5}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{4}], 
         InsetBox["4", Offset[{2, 2}, {2., -0.5}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> 
    Hue[0.1, 1, 0.7]}]], "Output",
 CellChangeTimes->{3.9004827377751613`*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"91679d2e-c848-415f-bb56-b7576988a1f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HighlightMesh", "[", 
  RowBox[{
   RowBox[{"MeshRegion", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", 
         RowBox[{"1", "/", "2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", 
         RowBox[{
          RowBox[{"-", "1"}], "/", "2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"4", ",", "2"}], "}"}], "]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"Labeled", "[", 
    RowBox[{"0", ",", "\"\<Index\>\""}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900482737310934*^9, 3.9004827454456267`*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"4762fc4e-16c5-4b13-8c97-554e25a6a59f"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = {
    MeshRegion, {
     Properties -> {{0, Default} -> (MeshCellLabel -> "Index")}}}}, 
    TagBox[GraphicsComplexBox[{{0., 0.}, {1., 0.}, {2., 0.5}, {2., -0.5}}, 
      {Hue[0.6, 0.3, 0.75], 
       TagBox[LineBox[{{1, 2}, {2, 3}, {3, 4}, {4, 2}}],
        Annotation[#, "Geometry"]& ], 
       PointBox[{1, 2, 3, 
        4}], {{PointBox[{1}], 
         InsetBox["1", Offset[{2, 2}, {0., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{2}], 
         InsetBox["2", Offset[{2, 2}, {1., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{3}], 
         InsetBox["3", Offset[{2, 2}, {2., 0.5}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{4}], 
         InsetBox["4", Offset[{2, 2}, {2., -0.5}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> 
    Hue[0.1, 1, 0.7]}]], "Output",
 CellChangeTimes->{3.9004827461854544`*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"e4f818a1-9276-4124-804e-0d2b6fec1ebf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HighlightMesh", "[", 
  RowBox[{
   RowBox[{"MeshRegion", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", 
         RowBox[{"1", "/", "2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", 
         RowBox[{
          RowBox[{"-", "1"}], "/", "2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"4", ",", "2"}], "}"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"5", ",", "2"}], "}"}], "]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"Labeled", "[", 
    RowBox[{"0", ",", "\"\<Index\>\""}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900482737310934*^9, 3.900482755628755*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"801c972b-2ff1-49c7-98c5-96177bc8b743"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = {
    MeshRegion, {
     Properties -> {{0, Default} -> (MeshCellLabel -> "Index")}}}}, 
    TagBox[
     GraphicsComplexBox[{{0., 0.}, {1., 0.}, {2., 0.5}, {2., -0.5}, {1., 1.}}, 
      {Hue[0.6, 0.3, 0.75], 
       TagBox[LineBox[{{1, 2}, {2, 3}, {3, 4}, {4, 2}, {5, 2}}],
        Annotation[#, "Geometry"]& ], 
       PointBox[{1, 2, 3, 4, 
        5}], {{PointBox[{1}], 
         InsetBox["1", Offset[{2, 2}, {0., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{2}], 
         InsetBox["2", Offset[{2, 2}, {1., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{3}], 
         InsetBox["3", Offset[{2, 2}, {2., 0.5}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{4}], 
         InsetBox["4", Offset[{2, 2}, {2., -0.5}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{5}], 
         InsetBox["5", Offset[{2, 2}, {1., 1.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> 
    Hue[0.1, 1, 0.7]}]], "Output",
 CellChangeTimes->{3.900482756027215*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"8e82813c-7d0b-468f-83ce-5b8f18602482"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HighlightMesh", "[", 
  RowBox[{
   RowBox[{"MeshRegion", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "0."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "1."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1.", ",", " ", "0."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "2."}], "}"}], ",", " ", "\n", " ", 
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "3."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1.", ",", " ", "3."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"2.", ",", " ", "0."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"2.", ",", " ", "3."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "0."}], "}"}], ",", " ", "\n", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "1."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "2."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "3."}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "2"}], "}"}]}], "}"}], ",", " ", "\n", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"6", ",", " ", "5"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"5", ",", " ", "4"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"8", ",", " ", "6"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"11", ",", " ", "12"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"12", ",", " ", "8"}], "}"}], ",", " ", "\n", "   ", 
          RowBox[{"{", 
           RowBox[{"4", ",", " ", "2"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"10", ",", " ", "11"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"2", ",", " ", "1"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"1", ",", " ", "3"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"3", ",", " ", "7"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"9", ",", " ", "\n", "   ", "10"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"7", ",", " ", "9"}], "}"}]}], "}"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"1", ",", "12"}], "}"}], "}"}], "]"}]}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"Labeled", "[", 
    RowBox[{"0", ",", "\"\<Index\>\""}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900482781427482*^9, 3.9004828055347166`*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"9f869208-f4af-4a5b-8b30-e93aeb08e77a"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = {
    MeshRegion, {
     Properties -> {{0, Default} -> (MeshCellLabel -> "Index")}}}}, 
    TagBox[
     GraphicsComplexBox[{{0., 0.}, {0., 1.}, {1., 0.}, {0., 2.}, {0., 3.}, {
      1., 3.}, {2., 0.}, {2., 3.}, {3., 0.}, {3., 1.}, {3., 2.}, {3., 3.}}, 
      {Hue[0.6, 0.3, 0.75], 
       TagBox[
        LineBox[{{6, 5}, {5, 4}, {8, 6}, {11, 12}, {12, 8}, {4, 2}, {10, 
         11}, {2, 1}, {1, 3}, {3, 7}, {9, 10}, {7, 9}, {1, 12}}],
        Annotation[#, "Geometry"]& ], 
       PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
        12}], {{PointBox[{1}], 
         InsetBox["1", Offset[{2, 2}, {0., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{2}], 
         InsetBox["2", Offset[{2, 2}, {0., 1.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{3}], 
         InsetBox["3", Offset[{2, 2}, {1., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{4}], 
         InsetBox["4", Offset[{2, 2}, {0., 2.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{5}], 
         InsetBox["5", Offset[{2, 2}, {0., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{6}], 
         InsetBox["6", Offset[{2, 2}, {1., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{7}], 
         InsetBox["7", Offset[{2, 2}, {2., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{8}], 
         InsetBox["8", Offset[{2, 2}, {2., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{9}], 
         InsetBox["9", Offset[{2, 2}, {3., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{10}], 
         InsetBox["10", Offset[{2, 2}, {3., 1.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{11}], 
         InsetBox["11", Offset[{2, 2}, {3., 2.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{12}], 
         InsetBox["12", Offset[{2, 2}, {3., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> 
    Hue[0.1, 1, 0.7]}]], "Output",
 CellChangeTimes->{{3.900482784651556*^9, 3.9004828060165615`*^9}},
 CellLabel->"Out[82]=",ExpressionUUID->"e3e1bb79-20c4-460c-abd0-9df11d52f278"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HighlightMesh", "[", 
  RowBox[{
   RowBox[{"MeshRegion", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "0."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "1."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1.", ",", " ", "0."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "2."}], "}"}], ",", " ", "\n", " ", 
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "3."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1.", ",", " ", "3."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"2.", ",", " ", "0."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"2.", ",", " ", "3."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "0."}], "}"}], ",", " ", "\n", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "1."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "2."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "3."}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "2"}], "}"}]}], "}"}], ",", " ", "\n", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"6", ",", " ", "5"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"5", ",", " ", "4"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"8", ",", " ", "6"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"11", ",", " ", "12"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"12", ",", " ", "8"}], "}"}], ",", " ", "\n", "   ", 
          RowBox[{"{", 
           RowBox[{"4", ",", " ", "2"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"10", ",", " ", "11"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"2", ",", " ", "1"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"1", ",", " ", "3"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"3", ",", " ", "7"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"9", ",", " ", "\n", "   ", "10"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"7", ",", " ", "9"}], "}"}]}], "}"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"3", ",", "6"}], "}"}], "}"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"2", ",", "10"}], "}"}], "]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"Labeled", "[", 
    RowBox[{"0", ",", "\"\<Index\>\""}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900482781427482*^9, 3.9004828371803417`*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"ce25cef3-eff3-4c24-843b-7689864bbad8"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = {
    MeshRegion, {
     Properties -> {{0, Default} -> (MeshCellLabel -> "Index")}}}}, 
    TagBox[
     GraphicsComplexBox[{{0., 0.}, {0., 1.}, {1., 0.}, {0., 2.}, {0., 3.}, {
      1., 3.}, {2., 0.}, {2., 3.}, {3., 0.}, {3., 1.}, {3., 2.}, {3., 3.}}, 
      {Hue[0.6, 0.3, 0.75], 
       TagBox[
        LineBox[{{6, 5}, {5, 4}, {8, 6}, {11, 12}, {12, 8}, {4, 2}, {10, 
         11}, {2, 1}, {1, 3}, {3, 7}, {9, 10}, {7, 9}, {3, 6}, {2, 10}}],
        Annotation[#, "Geometry"]& ], 
       PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
        12}], {{PointBox[{1}], 
         InsetBox["1", Offset[{2, 2}, {0., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{2}], 
         InsetBox["2", Offset[{2, 2}, {0., 1.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{3}], 
         InsetBox["3", Offset[{2, 2}, {1., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{4}], 
         InsetBox["4", Offset[{2, 2}, {0., 2.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{5}], 
         InsetBox["5", Offset[{2, 2}, {0., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{6}], 
         InsetBox["6", Offset[{2, 2}, {1., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{7}], 
         InsetBox["7", Offset[{2, 2}, {2., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{8}], 
         InsetBox["8", Offset[{2, 2}, {2., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{9}], 
         InsetBox["9", Offset[{2, 2}, {3., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{10}], 
         InsetBox["10", Offset[{2, 2}, {3., 1.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{11}], 
         InsetBox["11", Offset[{2, 2}, {3., 2.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{12}], 
         InsetBox["12", Offset[{2, 2}, {3., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> 
    Hue[0.1, 1, 0.7]}]], "Output",
 CellChangeTimes->{3.9004828376373453`*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"2774acc3-5e69-4780-b292-0d841d5c4f65"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HighlightMesh", "[", 
  RowBox[{
   RowBox[{"MeshRegion", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "0."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "1."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1.", ",", " ", "0."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "2."}], "}"}], ",", " ", "\n", " ", 
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "3."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1.", ",", " ", "3."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"2.", ",", " ", "0."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"2.", ",", " ", "3."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "0."}], "}"}], ",", " ", "\n", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "1."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "2."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "3."}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "2"}], "}"}]}], "}"}], ",", " ", "\n", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"6", ",", " ", "5"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"5", ",", " ", "4"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"8", ",", " ", "6"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"11", ",", " ", "12"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"12", ",", " ", "8"}], "}"}], ",", " ", "\n", "   ", 
          RowBox[{"{", 
           RowBox[{"4", ",", " ", "2"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"10", ",", " ", "11"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"2", ",", " ", "1"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"1", ",", " ", "3"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"3", ",", " ", "7"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"9", ",", " ", "\n", "   ", "10"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"7", ",", " ", "9"}], "}"}]}], "}"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"3", ",", "6"}], "}"}], "}"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"2", ",", "10"}], "}"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"7", ",", "8"}], "}"}], "]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"Labeled", "[", 
    RowBox[{"0", ",", "\"\<Index\>\""}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900482781427482*^9, 3.9004828572706833`*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"c051a935-4b94-403b-9e00-c2c59b42acfd"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = {
    MeshRegion, {
     Properties -> {{0, Default} -> (MeshCellLabel -> "Index")}}}}, 
    TagBox[
     GraphicsComplexBox[{{0., 0.}, {0., 1.}, {1., 0.}, {0., 2.}, {0., 3.}, {
      1., 3.}, {2., 0.}, {2., 3.}, {3., 0.}, {3., 1.}, {3., 2.}, {3., 3.}}, 
      {Hue[0.6, 0.3, 0.75], 
       TagBox[
        LineBox[{{6, 5}, {5, 4}, {8, 6}, {11, 12}, {12, 8}, {4, 2}, {10, 
         11}, {2, 1}, {1, 3}, {3, 7}, {9, 10}, {7, 9}, {3, 6}, {2, 10}, {7, 
         8}}],
        Annotation[#, "Geometry"]& ], 
       PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
        12}], {{PointBox[{1}], 
         InsetBox["1", Offset[{2, 2}, {0., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{2}], 
         InsetBox["2", Offset[{2, 2}, {0., 1.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{3}], 
         InsetBox["3", Offset[{2, 2}, {1., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{4}], 
         InsetBox["4", Offset[{2, 2}, {0., 2.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{5}], 
         InsetBox["5", Offset[{2, 2}, {0., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{6}], 
         InsetBox["6", Offset[{2, 2}, {1., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{7}], 
         InsetBox["7", Offset[{2, 2}, {2., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{8}], 
         InsetBox["8", Offset[{2, 2}, {2., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{9}], 
         InsetBox["9", Offset[{2, 2}, {3., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{10}], 
         InsetBox["10", Offset[{2, 2}, {3., 1.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{11}], 
         InsetBox["11", Offset[{2, 2}, {3., 2.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{12}], 
         InsetBox["12", Offset[{2, 2}, {3., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> 
    Hue[0.1, 1, 0.7]}]], "Output",
 CellChangeTimes->{3.9004828576943426`*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"8cbbba11-ba8f-4f83-a37f-bac20f8fadb4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HighlightMesh", "[", 
  RowBox[{
   RowBox[{"MeshRegion", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "0."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "1."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1.", ",", " ", "0."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "2."}], "}"}], ",", " ", "\n", " ", 
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "3."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1.", ",", " ", "3."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"2.", ",", " ", "0."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"2.", ",", " ", "3."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "0."}], "}"}], ",", " ", "\n", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "1."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "2."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "3."}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "2"}], "}"}]}], "}"}], ",", " ", "\n", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"6", ",", " ", "5"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"5", ",", " ", "4"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"8", ",", " ", "6"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"11", ",", " ", "12"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"12", ",", " ", "8"}], "}"}], ",", " ", "\n", "   ", 
          RowBox[{"{", 
           RowBox[{"4", ",", " ", "2"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"10", ",", " ", "11"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"2", ",", " ", "1"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"1", ",", " ", "3"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"3", ",", " ", "7"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"9", ",", " ", "\n", "   ", "10"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"7", ",", " ", "9"}], "}"}]}], "}"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"3", ",", "6"}], "}"}], "}"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"2", ",", "10"}], "}"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"7", ",", "8"}], "}"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"4", ",", "11"}], "}"}], "]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"Labeled", "[", 
    RowBox[{"0", ",", "\"\<Index\>\""}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900482781427482*^9, 3.9004828663437185`*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"7ac2f423-5ba1-42f7-af92-b7613f27093d"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = {
    MeshRegion, {
     Properties -> {{0, Default} -> (MeshCellLabel -> "Index")}}}}, 
    TagBox[
     GraphicsComplexBox[{{0., 0.}, {0., 1.}, {1., 0.}, {0., 2.}, {0., 3.}, {
      1., 3.}, {2., 0.}, {2., 3.}, {3., 0.}, {3., 1.}, {3., 2.}, {3., 3.}}, 
      {Hue[0.6, 0.3, 0.75], 
       TagBox[
        LineBox[{{6, 5}, {5, 4}, {8, 6}, {11, 12}, {12, 8}, {4, 2}, {10, 
         11}, {2, 1}, {1, 3}, {3, 7}, {9, 10}, {7, 9}, {3, 6}, {2, 10}, {7, 
         8}, {4, 11}}],
        Annotation[#, "Geometry"]& ], 
       PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
        12}], {{PointBox[{1}], 
         InsetBox["1", Offset[{2, 2}, {0., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{2}], 
         InsetBox["2", Offset[{2, 2}, {0., 1.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{3}], 
         InsetBox["3", Offset[{2, 2}, {1., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{4}], 
         InsetBox["4", Offset[{2, 2}, {0., 2.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{5}], 
         InsetBox["5", Offset[{2, 2}, {0., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{6}], 
         InsetBox["6", Offset[{2, 2}, {1., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{7}], 
         InsetBox["7", Offset[{2, 2}, {2., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{8}], 
         InsetBox["8", Offset[{2, 2}, {2., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{9}], 
         InsetBox["9", Offset[{2, 2}, {3., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{10}], 
         InsetBox["10", Offset[{2, 2}, {3., 1.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{11}], 
         InsetBox["11", Offset[{2, 2}, {3., 2.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{12}], 
         InsetBox["12", Offset[{2, 2}, {3., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> 
    Hue[0.1, 1, 0.7]}]], "Output",
 CellChangeTimes->{3.9004828670081005`*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"3d114744-0a67-4a7a-9201-9951717cefea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.", ",", " ", "0."}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"0.", ",", " ", "1."}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"1.", ",", " ", "0."}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"0.", ",", " ", "2."}], "}"}], ",", " ", "\n", " ", 
    RowBox[{"{", 
     RowBox[{"0.", ",", " ", "3."}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"1.", ",", " ", "3."}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"2.", ",", " ", "0."}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"2.", ",", " ", "3."}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"3.", ",", " ", "0."}], "}"}], ",", " ", "\n", " ", 
    RowBox[{"{", 
     RowBox[{"3.", ",", " ", "1."}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"3.", ",", " ", "2."}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"3.", ",", " ", "3."}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.9004828780327244`*^9, 3.9004828793800745`*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"6e6c0f92-369c-4350-b6dd-2255775c2572"],

Cell[BoxData["13"], "Output",
 CellChangeTimes->{3.9004828797732296`*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"7b3ef730-4945-43f3-93e3-a5b13b59cbf9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HighlightMesh", "[", 
  RowBox[{
   RowBox[{"MeshRegion", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "0."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "1."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1.", ",", " ", "0."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "2."}], "}"}], ",", " ", "\n", " ", 
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "3."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1.", ",", " ", "3."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"2.", ",", " ", "0."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"2.", ",", " ", "3."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "0."}], "}"}], ",", " ", "\n", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "1."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "2."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "3."}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}]}], "}"}], ",", " ", "\n", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"6", ",", " ", "5"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"5", ",", " ", "4"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"8", ",", " ", "6"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"11", ",", " ", "12"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"12", ",", " ", "8"}], "}"}], ",", " ", "\n", "   ", 
          RowBox[{"{", 
           RowBox[{"4", ",", " ", "2"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"10", ",", " ", "11"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"2", ",", " ", "1"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"1", ",", " ", "3"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"3", ",", " ", "7"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"9", ",", " ", "\n", "   ", "10"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"7", ",", " ", "9"}], "}"}]}], "}"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"13", ",", "6"}], "}"}], "}"}], "]"}]}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"Labeled", "[", 
    RowBox[{"0", ",", "\"\<Index\>\""}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900482781427482*^9, 3.9004829065100527`*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"8a85f58b-c93e-4df8-ab8f-6a7b424ec8f6"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = {
    MeshRegion, {
     Properties -> {{0, Default} -> (MeshCellLabel -> "Index")}}}}, 
    TagBox[
     GraphicsComplexBox[{{0., 0.}, {0., 1.}, {1., 0.}, {0., 2.}, {0., 3.}, {
      1., 3.}, {2., 0.}, {2., 3.}, {3., 0.}, {3., 1.}, {3., 2.}, {3., 3.}, {
      1., 2.}}, 
      {Hue[0.6, 0.3, 0.75], 
       TagBox[
        LineBox[{{6, 5}, {5, 4}, {8, 6}, {11, 12}, {12, 8}, {4, 2}, {10, 
         11}, {2, 1}, {1, 3}, {3, 7}, {9, 10}, {7, 9}, {13, 6}}],
        Annotation[#, "Geometry"]& ], 
       PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 
        13}], {{PointBox[{1}], 
         InsetBox["1", Offset[{2, 2}, {0., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{2}], 
         InsetBox["2", Offset[{2, 2}, {0., 1.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{3}], 
         InsetBox["3", Offset[{2, 2}, {1., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{4}], 
         InsetBox["4", Offset[{2, 2}, {0., 2.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{5}], 
         InsetBox["5", Offset[{2, 2}, {0., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{6}], 
         InsetBox["6", Offset[{2, 2}, {1., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{7}], 
         InsetBox["7", Offset[{2, 2}, {2., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{8}], 
         InsetBox["8", Offset[{2, 2}, {2., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{9}], 
         InsetBox["9", Offset[{2, 2}, {3., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{10}], 
         InsetBox["10", Offset[{2, 2}, {3., 1.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{11}], 
         InsetBox["11", Offset[{2, 2}, {3., 2.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{12}], 
         InsetBox["12", Offset[{2, 2}, {3., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{13}], 
         InsetBox["13", Offset[{2, 2}, {1., 2.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> 
    Hue[0.1, 1, 0.7]}]], "Output",
 CellChangeTimes->{{3.9004828916337767`*^9, 3.900482907138362*^9}},
 CellLabel->"Out[89]=",ExpressionUUID->"699f9073-97bb-4cf3-adab-c7bdb77a9ece"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HighlightMesh", "[", 
  RowBox[{
   RowBox[{"MeshRegion", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "0."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "1."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1.", ",", " ", "0."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "2."}], "}"}], ",", " ", "\n", " ", 
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "3."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1.", ",", " ", "3."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"2.", ",", " ", "0."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"2.", ",", " ", "3."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "0."}], "}"}], ",", " ", "\n", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "1."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "2."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "3."}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}]}], "}"}], ",", " ", "\n", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"6", ",", " ", "5"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"5", ",", " ", "4"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"8", ",", " ", "6"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"11", ",", " ", "12"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"12", ",", " ", "8"}], "}"}], ",", " ", "\n", "   ", 
          RowBox[{"{", 
           RowBox[{"4", ",", " ", "2"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"10", ",", " ", "11"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"2", ",", " ", "1"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"1", ",", " ", "3"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"3", ",", " ", "7"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"9", ",", " ", "\n", "   ", "10"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"7", ",", " ", "9"}], "}"}]}], "}"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"13", ",", "6"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"14", ",", "13"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"16", ",", "15"}], "}"}]}], "}"}], "]"}]}], "}"}]}], "]"}],
    ",", 
   RowBox[{"Labeled", "[", 
    RowBox[{"0", ",", "\"\<Index\>\""}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900482781427482*^9, 3.9004829718043804`*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"91712c65-a297-445f-857d-17ef9656e649"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = {
    MeshRegion, {
     Properties -> {{0, Default} -> (MeshCellLabel -> "Index")}}}}, 
    TagBox[
     GraphicsComplexBox[{{0., 0.}, {0., 1.}, {1., 0.}, {0., 2.}, {0., 3.}, {
      1., 3.}, {2., 0.}, {2., 3.}, {3., 0.}, {3., 1.}, {3., 2.}, {3., 3.}, {
      1., 2.}, {1., 1.}, {2., 1.}, {2., 2.}}, 
      {Hue[0.6, 0.3, 0.75], 
       TagBox[
        LineBox[{{6, 5}, {5, 4}, {8, 6}, {11, 12}, {12, 8}, {4, 2}, {10, 
         11}, {2, 1}, {1, 3}, {3, 7}, {9, 10}, {7, 9}, {13, 6}, {14, 13}, {16,
          15}}],
        Annotation[#, "Geometry"]& ], 
       PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
        16}], {{PointBox[{1}], 
         InsetBox["1", Offset[{2, 2}, {0., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{2}], 
         InsetBox["2", Offset[{2, 2}, {0., 1.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{3}], 
         InsetBox["3", Offset[{2, 2}, {1., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{4}], 
         InsetBox["4", Offset[{2, 2}, {0., 2.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{5}], 
         InsetBox["5", Offset[{2, 2}, {0., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{6}], 
         InsetBox["6", Offset[{2, 2}, {1., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{7}], 
         InsetBox["7", Offset[{2, 2}, {2., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{8}], 
         InsetBox["8", Offset[{2, 2}, {2., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{9}], 
         InsetBox["9", Offset[{2, 2}, {3., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{10}], 
         InsetBox["10", Offset[{2, 2}, {3., 1.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{11}], 
         InsetBox["11", Offset[{2, 2}, {3., 2.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{12}], 
         InsetBox["12", Offset[{2, 2}, {3., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{13}], 
         InsetBox["13", Offset[{2, 2}, {1., 2.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{14}], 
         InsetBox["14", Offset[{2, 2}, {1., 1.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{15}], 
         InsetBox["15", Offset[{2, 2}, {2., 1.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{16}], 
         InsetBox["16", Offset[{2, 2}, {2., 2.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> 
    Hue[0.1, 1, 0.7]}]], "Output",
 CellChangeTimes->{{3.9004829547877226`*^9, 3.900482972320302*^9}},
 CellLabel->"Out[91]=",ExpressionUUID->"375052bd-230a-4352-a288-2210700c77a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HighlightMesh", "[", 
  RowBox[{
   RowBox[{"MeshRegion", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "0."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "1."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1.", ",", " ", "0."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "2."}], "}"}], ",", " ", "\n", " ", 
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "3."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1.", ",", " ", "3."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"2.", ",", " ", "0."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"2.", ",", " ", "3."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "0."}], "}"}], ",", " ", "\n", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "1."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "2."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "3."}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}]}], "}"}], ",", " ", "\n", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"6", ",", " ", "5"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"5", ",", " ", "4"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"8", ",", " ", "6"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"11", ",", " ", "12"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"12", ",", " ", "8"}], "}"}], ",", " ", "\n", "   ", 
          RowBox[{"{", 
           RowBox[{"4", ",", " ", "2"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"10", ",", " ", "11"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"2", ",", " ", "1"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"1", ",", " ", "3"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"3", ",", " ", "7"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"9", ",", " ", "\n", "   ", "10"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"7", ",", " ", "9"}], "}"}]}], "}"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"13", ",", "6"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"14", ",", "13"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"16", ",", "15"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"15", ",", "14"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"15", ",", "7"}], "}"}]}], "}"}], "]"}]}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"Labeled", "[", 
    RowBox[{"0", ",", "\"\<Index\>\""}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900482781427482*^9, 3.9004829848967824`*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"faa1a713-da9a-41d5-ac7e-a26ebc5f6db6"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = {
    MeshRegion, {
     Properties -> {{0, Default} -> (MeshCellLabel -> "Index")}}}}, 
    TagBox[
     GraphicsComplexBox[{{0., 0.}, {0., 1.}, {1., 0.}, {0., 2.}, {0., 3.}, {
      1., 3.}, {2., 0.}, {2., 3.}, {3., 0.}, {3., 1.}, {3., 2.}, {3., 3.}, {
      1., 2.}, {1., 1.}, {2., 1.}, {2., 2.}}, 
      {Hue[0.6, 0.3, 0.75], 
       TagBox[
        LineBox[{{6, 5}, {5, 4}, {8, 6}, {11, 12}, {12, 8}, {4, 2}, {10, 
         11}, {2, 1}, {1, 3}, {3, 7}, {9, 10}, {7, 9}, {13, 6}, {14, 13}, {16,
          15}, {15, 14}, {15, 7}}],
        Annotation[#, "Geometry"]& ], 
       PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
        16}], {{PointBox[{1}], 
         InsetBox["1", Offset[{2, 2}, {0., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{2}], 
         InsetBox["2", Offset[{2, 2}, {0., 1.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{3}], 
         InsetBox["3", Offset[{2, 2}, {1., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{4}], 
         InsetBox["4", Offset[{2, 2}, {0., 2.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{5}], 
         InsetBox["5", Offset[{2, 2}, {0., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{6}], 
         InsetBox["6", Offset[{2, 2}, {1., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{7}], 
         InsetBox["7", Offset[{2, 2}, {2., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{8}], 
         InsetBox["8", Offset[{2, 2}, {2., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{9}], 
         InsetBox["9", Offset[{2, 2}, {3., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{10}], 
         InsetBox["10", Offset[{2, 2}, {3., 1.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{11}], 
         InsetBox["11", Offset[{2, 2}, {3., 2.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{12}], 
         InsetBox["12", Offset[{2, 2}, {3., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{13}], 
         InsetBox["13", Offset[{2, 2}, {1., 2.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{14}], 
         InsetBox["14", Offset[{2, 2}, {1., 1.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{15}], 
         InsetBox["15", Offset[{2, 2}, {2., 1.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{16}], 
         InsetBox["16", Offset[{2, 2}, {2., 2.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> 
    Hue[0.1, 1, 0.7]}]], "Output",
 CellChangeTimes->{3.900482986472162*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"e6ca6768-3961-4552-af9e-e257344bac7c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HighlightMesh", "[", 
  RowBox[{
   RowBox[{"MeshRegion", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "0."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "1."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1.", ",", " ", "0."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "2."}], "}"}], ",", " ", "\n", " ", 
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "3."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1.", ",", " ", "3."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"2.", ",", " ", "0."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"2.", ",", " ", "3."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "0."}], "}"}], ",", " ", "\n", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "1."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "2."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "3."}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}]}], "}"}], ",", " ", "\n", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"6", ",", " ", "5"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"5", ",", " ", "4"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"8", ",", " ", "6"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"11", ",", " ", "12"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"12", ",", " ", "8"}], "}"}], ",", " ", "\n", "   ", 
          RowBox[{"{", 
           RowBox[{"4", ",", " ", "2"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"10", ",", " ", "11"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"2", ",", " ", "1"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"1", ",", " ", "3"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"3", ",", " ", "7"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"9", ",", " ", "\n", "   ", "10"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"7", ",", " ", "9"}], "}"}]}], "}"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"13", ",", "6"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"14", ",", "13"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"16", ",", "15"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"15", ",", "14"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"15", ",", "7"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"14", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"14", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"13", ",", "16"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"15", ",", "10"}], "}"}]}], "}"}], "]"}]}], "}"}]}], "]"}],
    ",", 
   RowBox[{"Labeled", "[", 
    RowBox[{"0", ",", "\"\<Index\>\""}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900482781427482*^9, 3.9004830099764857`*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"33dcd42f-ec2c-4b1d-b24e-c06e8af1938b"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = {
    MeshRegion, {
     Properties -> {{0, Default} -> (MeshCellLabel -> "Index")}}}}, 
    TagBox[
     GraphicsComplexBox[{{0., 0.}, {0., 1.}, {1., 0.}, {0., 2.}, {0., 3.}, {
      1., 3.}, {2., 0.}, {2., 3.}, {3., 0.}, {3., 1.}, {3., 2.}, {3., 3.}, {
      1., 2.}, {1., 1.}, {2., 1.}, {2., 2.}}, 
      {Hue[0.6, 0.3, 0.75], 
       TagBox[
        LineBox[{{6, 5}, {5, 4}, {8, 6}, {11, 12}, {12, 8}, {4, 2}, {10, 
         11}, {2, 1}, {1, 3}, {3, 7}, {9, 10}, {7, 9}, {13, 6}, {14, 13}, {16,
          15}, {15, 14}, {15, 7}, {14, 3}, {14, 2}, {13, 16}, {15, 10}}],
        Annotation[#, "Geometry"]& ], 
       PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
        16}], {{PointBox[{1}], 
         InsetBox["1", Offset[{2, 2}, {0., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{2}], 
         InsetBox["2", Offset[{2, 2}, {0., 1.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{3}], 
         InsetBox["3", Offset[{2, 2}, {1., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{4}], 
         InsetBox["4", Offset[{2, 2}, {0., 2.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{5}], 
         InsetBox["5", Offset[{2, 2}, {0., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{6}], 
         InsetBox["6", Offset[{2, 2}, {1., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{7}], 
         InsetBox["7", Offset[{2, 2}, {2., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{8}], 
         InsetBox["8", Offset[{2, 2}, {2., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{9}], 
         InsetBox["9", Offset[{2, 2}, {3., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{10}], 
         InsetBox["10", Offset[{2, 2}, {3., 1.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{11}], 
         InsetBox["11", Offset[{2, 2}, {3., 2.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{12}], 
         InsetBox["12", Offset[{2, 2}, {3., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{13}], 
         InsetBox["13", Offset[{2, 2}, {1., 2.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{14}], 
         InsetBox["14", Offset[{2, 2}, {1., 1.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{15}], 
         InsetBox["15", Offset[{2, 2}, {2., 1.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{16}], 
         InsetBox["16", Offset[{2, 2}, {2., 2.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> 
    Hue[0.1, 1, 0.7]}]], "Output",
 CellChangeTimes->{3.9004830103830833`*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"aa5a930e-9f51-437c-a3f6-ee738465d9cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HighlightMesh", "[", 
  RowBox[{
   RowBox[{"MeshRegion", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "0."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "1."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1.", ",", " ", "0."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "2."}], "}"}], ",", " ", "\n", " ", 
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "3."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1.", ",", " ", "3."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"2.", ",", " ", "0."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"2.", ",", " ", "3."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "0."}], "}"}], ",", " ", "\n", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "1."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "2."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "3."}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}]}], "}"}], ",", " ", "\n", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"6", ",", " ", "5"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"5", ",", " ", "4"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"8", ",", " ", "6"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"11", ",", " ", "12"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"12", ",", " ", "8"}], "}"}], ",", " ", "\n", "   ", 
          RowBox[{"{", 
           RowBox[{"4", ",", " ", "2"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"10", ",", " ", "11"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"2", ",", " ", "1"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"1", ",", " ", "3"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"3", ",", " ", "7"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"9", ",", " ", "\n", "   ", "10"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"7", ",", " ", "9"}], "}"}]}], "}"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"13", ",", "6"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"14", ",", "13"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"16", ",", "15"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"15", ",", "14"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"15", ",", "7"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"14", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"14", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"13", ",", "16"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"15", ",", "10"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", "13"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"16", ",", "11"}], "}"}]}], "}"}], "]"}]}], "}"}]}], "]"}],
    ",", 
   RowBox[{"Labeled", "[", 
    RowBox[{"0", ",", "\"\<Index\>\""}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900482781427482*^9, 3.900483022715665*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"b0d067e1-8f29-48f0-a3f2-2f5ccc551df5"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = {
    MeshRegion, {
     Properties -> {{0, Default} -> (MeshCellLabel -> "Index")}}}}, 
    TagBox[
     GraphicsComplexBox[{{0., 0.}, {0., 1.}, {1., 0.}, {0., 2.}, {0., 3.}, {
      1., 3.}, {2., 0.}, {2., 3.}, {3., 0.}, {3., 1.}, {3., 2.}, {3., 3.}, {
      1., 2.}, {1., 1.}, {2., 1.}, {2., 2.}}, 
      {Hue[0.6, 0.3, 0.75], 
       TagBox[
        LineBox[{{6, 5}, {5, 4}, {8, 6}, {11, 12}, {12, 8}, {4, 2}, {10, 
         11}, {2, 1}, {1, 3}, {3, 7}, {9, 10}, {7, 9}, {13, 6}, {14, 13}, {16,
          15}, {15, 14}, {15, 7}, {14, 3}, {14, 2}, {13, 16}, {15, 10}, {4, 
         13}, {16, 11}}],
        Annotation[#, "Geometry"]& ], 
       PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
        16}], {{PointBox[{1}], 
         InsetBox["1", Offset[{2, 2}, {0., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{2}], 
         InsetBox["2", Offset[{2, 2}, {0., 1.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{3}], 
         InsetBox["3", Offset[{2, 2}, {1., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{4}], 
         InsetBox["4", Offset[{2, 2}, {0., 2.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{5}], 
         InsetBox["5", Offset[{2, 2}, {0., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{6}], 
         InsetBox["6", Offset[{2, 2}, {1., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{7}], 
         InsetBox["7", Offset[{2, 2}, {2., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{8}], 
         InsetBox["8", Offset[{2, 2}, {2., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{9}], 
         InsetBox["9", Offset[{2, 2}, {3., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{10}], 
         InsetBox["10", Offset[{2, 2}, {3., 1.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{11}], 
         InsetBox["11", Offset[{2, 2}, {3., 2.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{12}], 
         InsetBox["12", Offset[{2, 2}, {3., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{13}], 
         InsetBox["13", Offset[{2, 2}, {1., 2.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{14}], 
         InsetBox["14", Offset[{2, 2}, {1., 1.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{15}], 
         InsetBox["15", Offset[{2, 2}, {2., 1.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{16}], 
         InsetBox["16", Offset[{2, 2}, {2., 2.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> 
    Hue[0.1, 1, 0.7]}]], "Output",
 CellChangeTimes->{3.900483023852597*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"24ee379c-70bf-4a88-8ae2-760fc2ded5b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HighlightMesh", "[", 
  RowBox[{
   RowBox[{"MeshRegion", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "0."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "1."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1.", ",", " ", "0."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "2."}], "}"}], ",", " ", "\n", " ", 
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", "3."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1.", ",", " ", "3."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"2.", ",", " ", "0."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"2.", ",", " ", "3."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "0."}], "}"}], ",", " ", "\n", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "1."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "2."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3.", ",", " ", "3."}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}]}], "}"}], ",", " ", "\n", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"6", ",", " ", "5"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"5", ",", " ", "4"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"8", ",", " ", "6"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"11", ",", " ", "12"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"12", ",", " ", "8"}], "}"}], ",", " ", "\n", "   ", 
          RowBox[{"{", 
           RowBox[{"4", ",", " ", "2"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"10", ",", " ", "11"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"2", ",", " ", "1"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"1", ",", " ", "3"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"3", ",", " ", "7"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"9", ",", " ", "\n", "   ", "10"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"7", ",", " ", "9"}], "}"}]}], "}"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"13", ",", "6"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"14", ",", "13"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"16", ",", "15"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"15", ",", "14"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"15", ",", "7"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"14", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"14", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"13", ",", "16"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"15", ",", "10"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", "13"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"16", ",", "11"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"16", ",", "8"}], "}"}]}], "}"}], "]"}]}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"Labeled", "[", 
    RowBox[{"0", ",", "\"\<Index\>\""}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900482781427482*^9, 3.900483035473089*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"18ef57ab-e2a7-4cce-89e1-11ed09534396"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = {
    MeshRegion, {
     Properties -> {{0, Default} -> (MeshCellLabel -> "Index")}}}}, 
    TagBox[
     GraphicsComplexBox[{{0., 0.}, {0., 1.}, {1., 0.}, {0., 2.}, {0., 3.}, {
      1., 3.}, {2., 0.}, {2., 3.}, {3., 0.}, {3., 1.}, {3., 2.}, {3., 3.}, {
      1., 2.}, {1., 1.}, {2., 1.}, {2., 2.}}, 
      {Hue[0.6, 0.3, 0.75], 
       TagBox[
        LineBox[{{6, 5}, {5, 4}, {8, 6}, {11, 12}, {12, 8}, {4, 2}, {10, 
         11}, {2, 1}, {1, 3}, {3, 7}, {9, 10}, {7, 9}, {13, 6}, {14, 13}, {16,
          15}, {15, 14}, {15, 7}, {14, 3}, {14, 2}, {13, 16}, {15, 10}, {4, 
         13}, {16, 11}, {16, 8}}],
        Annotation[#, "Geometry"]& ], 
       PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
        16}], {{PointBox[{1}], 
         InsetBox["1", Offset[{2, 2}, {0., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{2}], 
         InsetBox["2", Offset[{2, 2}, {0., 1.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{3}], 
         InsetBox["3", Offset[{2, 2}, {1., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{4}], 
         InsetBox["4", Offset[{2, 2}, {0., 2.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{5}], 
         InsetBox["5", Offset[{2, 2}, {0., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{6}], 
         InsetBox["6", Offset[{2, 2}, {1., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{7}], 
         InsetBox["7", Offset[{2, 2}, {2., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{8}], 
         InsetBox["8", Offset[{2, 2}, {2., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{9}], 
         InsetBox["9", Offset[{2, 2}, {3., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{10}], 
         InsetBox["10", Offset[{2, 2}, {3., 1.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{11}], 
         InsetBox["11", Offset[{2, 2}, {3., 2.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{12}], 
         InsetBox["12", Offset[{2, 2}, {3., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{13}], 
         InsetBox["13", Offset[{2, 2}, {1., 2.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{14}], 
         InsetBox["14", Offset[{2, 2}, {1., 1.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{15}], 
         InsetBox["15", Offset[{2, 2}, {2., 1.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{16}], 
         InsetBox["16", Offset[{2, 2}, {2., 2.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> 
    Hue[0.1, 1, 0.7]}]], "Output",
 CellChangeTimes->{3.900483035978047*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"29f07c74-a66d-4559-a8ca-e6bcbfb34f9a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mesh", "=", 
  RowBox[{"HighlightMesh", "[", 
   RowBox[{
    RowBox[{"MeshRegion", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.", ",", " ", "0."}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"0.", ",", " ", "1."}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"1.", ",", " ", "0."}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"0.", ",", " ", "2."}], "}"}], ",", " ", "\n", " ", 
        RowBox[{"{", 
         RowBox[{"0.", ",", " ", "3."}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"1.", ",", " ", "3."}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"2.", ",", " ", "0."}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"2.", ",", " ", "3."}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"3.", ",", " ", "0."}], "}"}], ",", " ", "\n", " ", 
        RowBox[{"{", 
         RowBox[{"3.", ",", " ", "1."}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"3.", ",", " ", "2."}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"3.", ",", " ", "3."}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}]}], "}"}], ",", " ", "\n", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"6", ",", " ", "5"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"5", ",", " ", "4"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"8", ",", " ", "6"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"11", ",", " ", "12"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"12", ",", " ", "8"}], "}"}], ",", " ", "\n", "   ", 
           RowBox[{"{", 
            RowBox[{"4", ",", " ", "2"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"10", ",", " ", "11"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"2", ",", " ", "1"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"1", ",", " ", "3"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"3", ",", " ", "7"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"9", ",", " ", "\n", "   ", "10"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"7", ",", " ", "9"}], "}"}]}], "}"}], "]"}], ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"13", ",", "6"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"14", ",", "13"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"16", ",", "15"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"15", ",", "14"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"15", ",", "7"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"14", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"14", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"13", ",", "16"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"15", ",", "10"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"4", ",", "13"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"16", ",", "11"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"16", ",", "8"}], "}"}]}], "}"}], "]"}]}], "}"}]}], "]"}],
     ",", 
    RowBox[{"Labeled", "[", 
     RowBox[{"0", ",", "\"\<Index\>\""}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.900483046906942*^9, 3.900483050072117*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"5ff9bb05-1732-4bd6-8efd-bf5255945e46"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = {
    MeshRegion, {
     Properties -> {{0, Default} -> (MeshCellLabel -> "Index")}}}}, 
    TagBox[
     GraphicsComplexBox[{{0., 0.}, {0., 1.}, {1., 0.}, {0., 2.}, {0., 3.}, {
      1., 3.}, {2., 0.}, {2., 3.}, {3., 0.}, {3., 1.}, {3., 2.}, {3., 3.}, {
      1., 2.}, {1., 1.}, {2., 1.}, {2., 2.}}, 
      {Hue[0.6, 0.3, 0.75], 
       TagBox[
        LineBox[{{6, 5}, {5, 4}, {8, 6}, {11, 12}, {12, 8}, {4, 2}, {10, 
         11}, {2, 1}, {1, 3}, {3, 7}, {9, 10}, {7, 9}, {13, 6}, {14, 13}, {16,
          15}, {15, 14}, {15, 7}, {14, 3}, {14, 2}, {13, 16}, {15, 10}, {4, 
         13}, {16, 11}, {16, 8}}],
        Annotation[#, "Geometry"]& ], 
       PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
        16}], {{PointBox[{1}], 
         InsetBox["1", Offset[{2, 2}, {0., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{2}], 
         InsetBox["2", Offset[{2, 2}, {0., 1.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{3}], 
         InsetBox["3", Offset[{2, 2}, {1., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{4}], 
         InsetBox["4", Offset[{2, 2}, {0., 2.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{5}], 
         InsetBox["5", Offset[{2, 2}, {0., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{6}], 
         InsetBox["6", Offset[{2, 2}, {1., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{7}], 
         InsetBox["7", Offset[{2, 2}, {2., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{8}], 
         InsetBox["8", Offset[{2, 2}, {2., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{9}], 
         InsetBox["9", Offset[{2, 2}, {3., 0.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{10}], 
         InsetBox["10", Offset[{2, 2}, {3., 1.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{11}], 
         InsetBox["11", Offset[{2, 2}, {3., 2.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{12}], 
         InsetBox["12", Offset[{2, 2}, {3., 3.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{13}], 
         InsetBox["13", Offset[{2, 2}, {1., 2.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{14}], 
         InsetBox["14", Offset[{2, 2}, {1., 1.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{15}], 
         InsetBox["15", Offset[{2, 2}, {2., 1.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {PointBox[{16}], 
         InsetBox["16", Offset[{2, 2}, {2., 2.}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> 
    Hue[0.1, 1, 0.7]}]], "Output",
 CellChangeTimes->{3.900483050997648*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"ea846fd3-508e-49de-b0d2-53bb13b811d3"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MeshPrimitives", "[", 
  RowBox[{"mesh", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.900483085818859*^9, 3.9004830894048634`*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"748750e8-9f8a-47b4-8b52-6ff86e797ea1"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.9004830897594495`*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"e05a738f-ca15-4232-8eaf-abea2ce9861e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"j", ",", "k"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "0", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900483139263297*^9, 3.9004831510247426`*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"051e6932-bb00-440c-a7f7-1214fc41e40e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9004831514779873`*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"cc6b30ec-dd44-481f-a396-4a4a13a79d56"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"j", ",", "k"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "0", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "3"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9004831784669113`*^9, 3.900483179881791*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"7f113d43-f14f-48d1-840c-43760d40a780"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "1", ",", "0", ",", "2", ",", "0", ",", "3", ",", "0", 
   ",", "0", ",", "1", ",", "1", ",", "1", ",", "2", ",", "1", ",", "3", ",", 
   "1", ",", "0", ",", "2", ",", "1", ",", "2", ",", "2", ",", "2", ",", "3", 
   ",", "2", ",", "0", ",", "3", ",", "1", ",", "3", ",", "2", ",", "3", ",", 
   "3", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.9004831802175713`*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"28a22e43-0f4b-4b28-a836-d08266170f34"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"j", ",", "k"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "3"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", "2", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9004831784669113`*^9, 3.9004831848545475`*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"7a581ece-1d9d-4bea-a8c9-b6126c7509ef"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.90048318528021*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"b5a8205c-838f-4bed-90ac-76bd2ce52e19"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"j", ",", "k"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "3"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", "1", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9004831784669113`*^9, 3.9004831912243605`*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"fca04bd2-8b54-4daa-a043-4f93614ba491"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9004831916940274`*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"21c4b58e-079e-4da5-9839-7e3ade8e5408"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Catenate", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"j", ",", "k"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "0", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "3"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9004831784669113`*^9, 3.900483203544119*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"c7f73693-58bd-45f3-af6e-98951878c407"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.900483204087232*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"6ba53237-f146-4200-93e7-4409acc3b276"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HighlightMesh", "[", 
  RowBox[{
   RowBox[{"MeshRegion", "[", 
    RowBox[{
     RowBox[{"Catenate", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"j", ",", "k"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "0", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "3"}], "}"}]}], "]"}], "]"}], ",", " ", 
     "\n", " ", 
     RowBox[{"{", "}"}]}], "]"}], ",", 
   RowBox[{"Labeled", "[", 
    RowBox[{"0", ",", "\"\<Index\>\""}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9004831633864064`*^9, 3.900483175033761*^9}, {
  3.900483210966138*^9, 3.900483217438534*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"286d9309-e535-474c-9797-4c5c0ad9b85b"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = HoldComplete[
     MeshRegion[{{0., 0.}, {1., 0.}, {2., 0.}, {3., 0.}, {0., 1.}, {1., 1.}, {
      2., 1.}, {3., 1.}, {0., 2.}, {1., 2.}, {2., 2.}, {3., 2.}, {0., 3.}, {
      1., 3.}, {2., 3.}, {3., 3.}}, {}, 
      Properties -> {{0, Default} -> (MeshCellLabel -> "Index")}, 
      Method -> {
       "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
        Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
        Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
        Automatic, "CheckIntersections" -> Automatic, "BoundaryNesting" -> 
        Automatic, "SeparateBoundaries" -> Automatic, "TJunction" -> 
        Automatic, "PropagateMarkers" -> True, "ZeroTest" -> Automatic, 
        "Hash" -> 7158029786450095852}]]}, 
    TagBox[
     GraphicsComplexBox[{{0., 0.}, {1., 0.}, {2., 0.}, {3., 0.}, {0., 1.}, {
      1., 1.}, {2., 1.}, {3., 1.}, {0., 2.}, {1., 2.}, {2., 2.}, {3., 2.}, {
      0., 3.}, {1., 3.}, {2., 3.}, {3., 3.}}, 
      {Hue[
       0.6, 0.3, 0.75], {PointBox[{1}], 
        InsetBox["1", Offset[{2, 2}, {0., 0.}], ImageScaled[{0, 0}],
         BaseStyle->"Graphics"]}, {PointBox[{2}], 
        InsetBox["2", Offset[{2, 2}, {1., 0.}], ImageScaled[{0, 0}],
         BaseStyle->"Graphics"]}, {PointBox[{3}], 
        InsetBox["3", Offset[{2, 2}, {2., 0.}], ImageScaled[{0, 0}],
         BaseStyle->"Graphics"]}, {PointBox[{4}], 
        InsetBox["4", Offset[{2, 2}, {3., 0.}], ImageScaled[{0, 0}],
         BaseStyle->"Graphics"]}, {PointBox[{5}], 
        InsetBox["5", Offset[{2, 2}, {0., 1.}], ImageScaled[{0, 0}],
         BaseStyle->"Graphics"]}, {PointBox[{6}], 
        InsetBox["6", Offset[{2, 2}, {1., 1.}], ImageScaled[{0, 0}],
         BaseStyle->"Graphics"]}, {PointBox[{7}], 
        InsetBox["7", Offset[{2, 2}, {2., 1.}], ImageScaled[{0, 0}],
         BaseStyle->"Graphics"]}, {PointBox[{8}], 
        InsetBox["8", Offset[{2, 2}, {3., 1.}], ImageScaled[{0, 0}],
         BaseStyle->"Graphics"]}, {PointBox[{9}], 
        InsetBox["9", Offset[{2, 2}, {0., 2.}], ImageScaled[{0, 0}],
         BaseStyle->"Graphics"]}, {PointBox[{10}], 
        InsetBox["10", Offset[{2, 2}, {1., 2.}], ImageScaled[{0, 0}],
         BaseStyle->"Graphics"]}, {PointBox[{11}], 
        InsetBox["11", Offset[{2, 2}, {2., 2.}], ImageScaled[{0, 0}],
         BaseStyle->"Graphics"]}, {PointBox[{12}], 
        InsetBox["12", Offset[{2, 2}, {3., 2.}], ImageScaled[{0, 0}],
         BaseStyle->"Graphics"]}, {PointBox[{13}], 
        InsetBox["13", Offset[{2, 2}, {0., 3.}], ImageScaled[{0, 0}],
         BaseStyle->"Graphics"]}, {PointBox[{14}], 
        InsetBox["14", Offset[{2, 2}, {1., 3.}], ImageScaled[{0, 0}],
         BaseStyle->"Graphics"]}, {PointBox[{15}], 
        InsetBox["15", Offset[{2, 2}, {2., 3.}], ImageScaled[{0, 0}],
         BaseStyle->"Graphics"]}, {PointBox[{16}], 
        InsetBox["16", Offset[{2, 2}, {3., 3.}], ImageScaled[{0, 0}],
         BaseStyle->"Graphics"]}}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> 
    Hue[0.1, 1, 0.7]}]], "Output",
 CellChangeTimes->{
  3.9004831639609523`*^9, {3.900483211514885*^9, 3.90048321892594*^9}},
 CellLabel->
  "Out[105]=",ExpressionUUID->"0cb4a7fb-f809-46ad-85bd-b14aa0582ecd"]
}, Open  ]],

Cell["\<\
It seems the names are transposed. The mesh has the 2 in the lower right and \
the 5 in the upper left of the first square. The graph\[CloseCurlyQuote]s \
first square has 2 in the upper left and 5 in the lower right.\
\>", "Text",
 CellChangeTimes->{{3.9004833052626295`*^9, 
  3.900483353504796*^9}},ExpressionUUID->"0d7d8cf2-a347-41e9-9693-\
754427aa9931"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GridGraph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "4"}], "}"}], ",", 
   RowBox[{"VertexLabels", "->", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9004832739912395`*^9, 3.9004832874532223`*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"1aa4596b-a227-4bef-9c72-96c2c012cf09"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16}, {Null, 
       SparseArray[
       Automatic, {16, 16}, 0, {
        1, {{0, 2, 5, 8, 10, 13, 17, 21, 24, 27, 31, 35, 38, 40, 43, 46, 
          48}, {{2}, {5}, {1}, {3}, {6}, {2}, {4}, {7}, {3}, {8}, {1}, {6}, {
          9}, {2}, {5}, {7}, {10}, {3}, {6}, {8}, {11}, {4}, {7}, {12}, {5}, {
          10}, {13}, {6}, {9}, {11}, {14}, {7}, {10}, {12}, {15}, {8}, {11}, {
          16}, {9}, {14}, {10}, {13}, {15}, {11}, {14}, {16}, {12}, {15}}}, 
         Pattern}]}, {
      GraphLayout -> {"GridEmbedding", "Dimension" -> {4, 4}}, 
       VertexLabels -> {Automatic}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
        ArrowBox[CompressedData["
1:eJxTTMoPSmVmYGCQAGImKIaAD/bYaQYHysQ5HLDLo9O41AvgkIfpw6UeJo/O
J9cduNSju4dUcXT3ceCg0dVz4OCTGk6E1BNyByH16O4jVhwXTWw8EwonhLkA
kZgulQ==
         "], 0.030239520958083826`]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{1., 1.}, 0.030239520958083826], 
         InsetBox["1", Offset[{2, 2}, {1.030239520958084, 1.030239520958084}],
           ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 2.}, 0.030239520958083826], 
         InsetBox["2", 
          Offset[{2, 2}, {1.030239520958084, 2.0302395209580837}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 3.}, 0.030239520958083826], 
         InsetBox["3", 
          Offset[{2, 2}, {1.030239520958084, 3.0302395209580837}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 4.}, 0.030239520958083826], 
         InsetBox["4", Offset[{2, 2}, {1.030239520958084, 4.030239520958084}],
           ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 1.}, 0.030239520958083826], 
         InsetBox["5", 
          Offset[{2, 2}, {2.0302395209580837, 1.030239520958084}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 2.}, 0.030239520958083826], 
         InsetBox["6", 
          Offset[{2, 2}, {2.0302395209580837, 2.0302395209580837}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 3.}, 0.030239520958083826], 
         InsetBox["7", 
          Offset[{2, 2}, {2.0302395209580837, 3.0302395209580837}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 4.}, 0.030239520958083826], 
         InsetBox["8", 
          Offset[{2, 2}, {2.0302395209580837, 4.030239520958084}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3., 1.}, 0.030239520958083826], 
         InsetBox["9", 
          Offset[{2, 2}, {3.0302395209580837, 1.030239520958084}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3., 2.}, 0.030239520958083826], 
         InsetBox["10", 
          Offset[{2, 2}, {3.0302395209580837, 2.0302395209580837}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3., 3.}, 0.030239520958083826], 
         InsetBox["11", 
          Offset[{2, 2}, {3.0302395209580837, 3.0302395209580837}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3., 4.}, 0.030239520958083826], 
         InsetBox["12", 
          Offset[{2, 2}, {3.0302395209580837, 4.030239520958084}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{4., 1.}, 0.030239520958083826], 
         InsetBox["13", 
          Offset[{2, 2}, {4.030239520958084, 1.030239520958084}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{4., 2.}, 0.030239520958083826], 
         InsetBox["14", 
          Offset[{2, 2}, {4.030239520958084, 2.0302395209580837}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{4., 3.}, 0.030239520958083826], 
         InsetBox["15", 
          Offset[{2, 2}, {4.030239520958084, 3.0302395209580837}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{4., 4.}, 0.030239520958083826], 
         InsetBox["16", 
          Offset[{2, 2}, {4.030239520958084, 4.030239520958084}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.9004832787301908`*^9, 3.9004832878330564`*^9}},
 CellLabel->
  "Out[107]=",ExpressionUUID->"0d5bf20b-d766-4bc0-b1c5-7497d4dd48f0"]
}, Open  ]],

Cell["\<\
I found a way to fix it. Now the 2 is the upper left and the 5 is in the \
lower right of the graph.\
\>", "Text",
 CellChangeTimes->{{3.9004833770361376`*^9, 
  3.900483403361323*^9}},ExpressionUUID->"f71f7028-7eac-4d47-8004-\
c0970e311ff1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HighlightMesh", "[", 
  RowBox[{
   RowBox[{"MeshRegion", "[", 
    RowBox[{
     RowBox[{"Catenate", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"k", ",", "j"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "0", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "3"}], "}"}]}], "]"}], "]"}], ",", " ", 
     "\n", " ", 
     RowBox[{"{", "}"}]}], "]"}], ",", 
   RowBox[{"Labeled", "[", 
    RowBox[{"0", ",", "\"\<Index\>\""}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9004831633864064`*^9, 3.900483175033761*^9}, {
  3.900483210966138*^9, 3.900483217438534*^9}, {3.9004833554678497`*^9, 
  3.9004833585609603`*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"967e63fc-ae57-4db2-8afa-2a93f169c4e2"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = HoldComplete[
     MeshRegion[{{0., 0.}, {0., 1.}, {0., 2.}, {0., 3.}, {1., 0.}, {1., 1.}, {
      1., 2.}, {1., 3.}, {2., 0.}, {2., 1.}, {2., 2.}, {2., 3.}, {3., 0.}, {
      3., 1.}, {3., 2.}, {3., 3.}}, {}, 
      Properties -> {{0, Default} -> (MeshCellLabel -> "Index")}, 
      Method -> {
       "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
        Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
        Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
        Automatic, "CheckIntersections" -> Automatic, "BoundaryNesting" -> 
        Automatic, "SeparateBoundaries" -> Automatic, "TJunction" -> 
        Automatic, "PropagateMarkers" -> True, "ZeroTest" -> Automatic, 
        "Hash" -> 3869545607802098404}]]}, 
    TagBox[
     GraphicsComplexBox[{{0., 0.}, {0., 1.}, {0., 2.}, {0., 3.}, {1., 0.}, {
      1., 1.}, {1., 2.}, {1., 3.}, {2., 0.}, {2., 1.}, {2., 2.}, {2., 3.}, {
      3., 0.}, {3., 1.}, {3., 2.}, {3., 3.}}, 
      {Hue[
       0.6, 0.3, 0.75], {PointBox[{1}], 
        InsetBox["1", Offset[{2, 2}, {0., 0.}], ImageScaled[{0, 0}],
         BaseStyle->"Graphics"]}, {PointBox[{2}], 
        InsetBox["2", Offset[{2, 2}, {0., 1.}], ImageScaled[{0, 0}],
         BaseStyle->"Graphics"]}, {PointBox[{3}], 
        InsetBox["3", Offset[{2, 2}, {0., 2.}], ImageScaled[{0, 0}],
         BaseStyle->"Graphics"]}, {PointBox[{4}], 
        InsetBox["4", Offset[{2, 2}, {0., 3.}], ImageScaled[{0, 0}],
         BaseStyle->"Graphics"]}, {PointBox[{5}], 
        InsetBox["5", Offset[{2, 2}, {1., 0.}], ImageScaled[{0, 0}],
         BaseStyle->"Graphics"]}, {PointBox[{6}], 
        InsetBox["6", Offset[{2, 2}, {1., 1.}], ImageScaled[{0, 0}],
         BaseStyle->"Graphics"]}, {PointBox[{7}], 
        InsetBox["7", Offset[{2, 2}, {1., 2.}], ImageScaled[{0, 0}],
         BaseStyle->"Graphics"]}, {PointBox[{8}], 
        InsetBox["8", Offset[{2, 2}, {1., 3.}], ImageScaled[{0, 0}],
         BaseStyle->"Graphics"]}, {PointBox[{9}], 
        InsetBox["9", Offset[{2, 2}, {2., 0.}], ImageScaled[{0, 0}],
         BaseStyle->"Graphics"]}, {PointBox[{10}], 
        InsetBox["10", Offset[{2, 2}, {2., 1.}], ImageScaled[{0, 0}],
         BaseStyle->"Graphics"]}, {PointBox[{11}], 
        InsetBox["11", Offset[{2, 2}, {2., 2.}], ImageScaled[{0, 0}],
         BaseStyle->"Graphics"]}, {PointBox[{12}], 
        InsetBox["12", Offset[{2, 2}, {2., 3.}], ImageScaled[{0, 0}],
         BaseStyle->"Graphics"]}, {PointBox[{13}], 
        InsetBox["13", Offset[{2, 2}, {3., 0.}], ImageScaled[{0, 0}],
         BaseStyle->"Graphics"]}, {PointBox[{14}], 
        InsetBox["14", Offset[{2, 2}, {3., 1.}], ImageScaled[{0, 0}],
         BaseStyle->"Graphics"]}, {PointBox[{15}], 
        InsetBox["15", Offset[{2, 2}, {3., 2.}], ImageScaled[{0, 0}],
         BaseStyle->"Graphics"]}, {PointBox[{16}], 
        InsetBox["16", Offset[{2, 2}, {3., 3.}], ImageScaled[{0, 0}],
         BaseStyle->"Graphics"]}}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> 
    Hue[0.1, 1, 0.7]}]], "Output",
 CellChangeTimes->{3.900483358895864*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"5808b48d-19e0-4c68-8906-ef4974c3028e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayMesh", "[", 
  RowBox[{"ConstantArray", "[", 
   RowBox[{"1", ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "5"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.900483505780048*^9, 3.900483530248729*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"7afe353f-be6e-4e00-b95e-a1c04f2879b6"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
    TagBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQjR98sEelCYkzOKCJO8AkGMEkB1welQ8DAmj6BdDk
RdDkYXwGNHU43QGn0ex3QLPPAWY+ujsJ+AOuHp2GmY/KF4GLozofZzjgMEcA
By2CRsMAoXBE9ze6OxHmAgAtPh4i
      "], 
      {Hue[0.6, 0.3, 0.95], EdgeForm[Hue[0.6, 0.3, 0.75]], 
       TagBox[
        PolygonBox[{{10, 12, 11, 9}, {17, 18, 12, 10}, {23, 24, 18, 17}, {29, 
         30, 24, 23}, {35, 36, 30, 29}, {8, 10, 9, 7}, {16, 17, 10, 8}, {22, 
         23, 17, 16}, {28, 29, 23, 22}, {34, 35, 29, 28}, {6, 8, 7, 5}, {15, 
         16, 8, 6}, {21, 22, 16, 15}, {27, 28, 22, 21}, {33, 34, 28, 27}, {4, 
         6, 5, 2}, {14, 15, 6, 4}, {20, 21, 15, 14}, {26, 27, 21, 20}, {32, 
         33, 27, 26}, {3, 4, 2, 1}, {13, 14, 4, 3}, {19, 20, 14, 13}, {25, 26,
          20, 19}, {31, 32, 26, 25}}],
        Annotation[#, "Geometry"]& ]}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> 
    Hue[0.1, 1, 0.7]}]], "Output",
 CellChangeTimes->{{3.900483513252144*^9, 3.9004835305877714`*^9}},
 CellLabel->
  "Out[110]=",ExpressionUUID->"cb89a156-bfc9-443f-828d-9cd9512b9831"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MeshConnectivityGraph", "[", 
  RowBox[{"ArrayMesh", "[", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "5"}], "}"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9004835354005194`*^9, 3.9004835375913153`*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"83607188-50b9-4807-8f82-2c0a221ba407"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{0, 1}, {0, 2}, {0, 3}, {0, 4}, {0, 5}, {0, 6}, {0, 7}, {0, 8}, {
      0, 9}, {0, 10}, {0, 11}, {0, 12}, {0, 13}, {0, 14}, {0, 15}, {0, 16}, {
      0, 17}, {0, 18}, {0, 19}, {0, 20}, {0, 21}, {0, 22}, {0, 23}, {0, 24}, {
      0, 25}, {0, 26}, {0, 27}, {0, 28}, {0, 29}, {0, 30}, {0, 31}, {0, 32}, {
      0, 33}, {0, 34}, {0, 35}, {0, 36}}, {Null, 
       SparseArray[
       Automatic, {36, 36}, 0, {
        1, {{0, 2, 5, 8, 12, 15, 19, 22, 26, 29, 33, 35, 38, 41, 45, 49, 53, 
          57, 60, 63, 67, 71, 75, 79, 82, 85, 89, 93, 97, 101, 104, 106, 109, 
          112, 115, 118, 120}, {{2}, {3}, {1}, {4}, {5}, {1}, {4}, {13}, {
          2}, {3}, {6}, {14}, {2}, {6}, {7}, {4}, {5}, {8}, {15}, {5}, {8}, {
          9}, {6}, {7}, {10}, {16}, {7}, {10}, {11}, {8}, {9}, {12}, {17}, {
          9}, {12}, {10}, {11}, {18}, {3}, {14}, {19}, {4}, {13}, {15}, {
          20}, {6}, {14}, {16}, {21}, {8}, {15}, {17}, {22}, {10}, {16}, {
          18}, {23}, {12}, {17}, {24}, {13}, {20}, {25}, {14}, {19}, {21}, {
          26}, {15}, {20}, {22}, {27}, {16}, {21}, {23}, {28}, {17}, {22}, {
          24}, {29}, {18}, {23}, {30}, {19}, {26}, {31}, {20}, {25}, {27}, {
          32}, {21}, {26}, {28}, {33}, {22}, {27}, {29}, {34}, {23}, {28}, {
          30}, {35}, {24}, {29}, {36}, {25}, {32}, {26}, {31}, {33}, {27}, {
          32}, {34}, {28}, {33}, {35}, {29}, {34}, {36}, {30}, {35}}}, 
         Pattern}]}, {VertexCoordinates -> CompressedData["
1:eJxTTMoPSmViYGBQAWIQjR98sEelCYkzOKCJO8AkGMEkB1welQ8DAmj6BdDk
RdDkYXwGNHU43QGn0ex3QLPPAWY+ujsJ+AOuHp2GmY/KF4GLozofZzjgMEcA
By2CRsMAoXBE9ze6OxHmAgAtPh4i
        "]}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQjR98sEelCYkzOKCJO8AkGMEkB1welQ8DAmj6BdDk
RdDkYXwGNHU43QGn0ex3QLPPAWY+ujsJ+AOuHp2GmY/KF4GLozofZzjgMEcA
By2CRsMAoXBE9ze6OxHmAgAtPh4i
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 3}, {2, 4}, {2, 5}, {3, 4}, {3, 13}, {4, 6}, {
          4, 14}, {5, 6}, {5, 7}, {6, 8}, {6, 15}, {7, 8}, {7, 9}, {8, 10}, {
          8, 16}, {9, 10}, {9, 11}, {10, 12}, {10, 17}, {11, 12}, {12, 18}, {
          13, 14}, {13, 19}, {14, 15}, {14, 20}, {15, 16}, {15, 21}, {16, 
          17}, {16, 22}, {17, 18}, {17, 23}, {18, 24}, {19, 20}, {19, 25}, {
          20, 21}, {20, 26}, {21, 22}, {21, 27}, {22, 23}, {22, 28}, {23, 
          24}, {23, 29}, {24, 30}, {25, 26}, {25, 31}, {26, 27}, {26, 32}, {
          27, 28}, {27, 33}, {28, 29}, {28, 34}, {29, 30}, {29, 35}, {30, 
          36}, {31, 32}, {32, 33}, {33, 34}, {34, 35}, {35, 36}}, 
          0.043048128342245986`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.043048128342245986], DiskBox[2, 0.043048128342245986], 
         DiskBox[3, 0.043048128342245986], DiskBox[4, 0.043048128342245986], 
         DiskBox[5, 0.043048128342245986], DiskBox[6, 0.043048128342245986], 
         DiskBox[7, 0.043048128342245986], DiskBox[8, 0.043048128342245986], 
         DiskBox[9, 0.043048128342245986], DiskBox[10, 0.043048128342245986], 
         DiskBox[11, 0.043048128342245986], DiskBox[12, 0.043048128342245986],
          DiskBox[13, 0.043048128342245986], 
         DiskBox[14, 0.043048128342245986], DiskBox[15, 0.043048128342245986],
          DiskBox[16, 0.043048128342245986], 
         DiskBox[17, 0.043048128342245986], DiskBox[18, 0.043048128342245986],
          DiskBox[19, 0.043048128342245986], 
         DiskBox[20, 0.043048128342245986], DiskBox[21, 0.043048128342245986],
          DiskBox[22, 0.043048128342245986], 
         DiskBox[23, 0.043048128342245986], DiskBox[24, 0.043048128342245986],
          DiskBox[25, 0.043048128342245986], 
         DiskBox[26, 0.043048128342245986], DiskBox[27, 0.043048128342245986],
          DiskBox[28, 0.043048128342245986], 
         DiskBox[29, 0.043048128342245986], DiskBox[30, 0.043048128342245986],
          DiskBox[31, 0.043048128342245986], 
         DiskBox[32, 0.043048128342245986], DiskBox[33, 0.043048128342245986],
          DiskBox[34, 0.043048128342245986], 
         DiskBox[35, 0.043048128342245986], 
         DiskBox[36, 0.043048128342245986]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.9004835379865522`*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"1d73e5fc-40c1-4769-b7f2-b6c42215b547"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IsomorphicGraphQ", "[", 
  RowBox[{
   RowBox[{"MeshConnectivityGraph", "[", 
    RowBox[{"ArrayMesh", "[", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "5"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"GridGraph", "[", 
    RowBox[{"{", 
     RowBox[{"6", ",", "6"}], "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9004835412437077`*^9, 3.9004835467796803`*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"9c3bf8b1-7cc5-47f6-bae4-16b40f210d48"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9004835472414274`*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"54488696-87aa-4802-810c-51fef774ab42"]
}, Open  ]],

Cell["It seems we just need to make a slightly bigger graph.", "Text",
 CellChangeTimes->{{3.9004835502938633`*^9, 
  3.900483559448681*^9}},ExpressionUUID->"fefd0db3-daab-4588-a8f8-\
2d00c0657415"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mazeBase", "=", 
  RowBox[{"GridGraph", "[", 
   RowBox[{"{", 
    RowBox[{"8", ",", "8"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.90048356056222*^9, 3.9004835685235376`*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"808c2627-5c04-4409-b2ed-e19180902537"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
       38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55,
       56, 57, 58, 59, 60, 61, 62, 63, 64}, {Null, 
       SparseArray[
       Automatic, {64, 64}, 0, {
        1, {{0, 2, 5, 8, 11, 14, 17, 20, 22, 25, 29, 33, 37, 41, 45, 49, 52, 
          55, 59, 63, 67, 71, 75, 79, 82, 85, 89, 93, 97, 101, 105, 109, 112, 
          115, 119, 123, 127, 131, 135, 139, 142, 145, 149, 153, 157, 161, 
          165, 169, 172, 175, 179, 183, 187, 191, 195, 199, 202, 204, 207, 
          210, 213, 216, 219, 222, 224}, {{2}, {9}, {1}, {3}, {10}, {2}, {
          4}, {11}, {3}, {5}, {12}, {4}, {6}, {13}, {5}, {7}, {14}, {6}, {
          8}, {15}, {7}, {16}, {1}, {10}, {17}, {2}, {9}, {11}, {18}, {3}, {
          10}, {12}, {19}, {4}, {11}, {13}, {20}, {5}, {12}, {14}, {21}, {
          6}, {13}, {15}, {22}, {7}, {14}, {16}, {23}, {8}, {15}, {24}, {9}, {
          18}, {25}, {10}, {17}, {19}, {26}, {11}, {18}, {20}, {27}, {12}, {
          19}, {21}, {28}, {13}, {20}, {22}, {29}, {14}, {21}, {23}, {30}, {
          15}, {22}, {24}, {31}, {16}, {23}, {32}, {17}, {26}, {33}, {18}, {
          25}, {27}, {34}, {19}, {26}, {28}, {35}, {20}, {27}, {29}, {36}, {
          21}, {28}, {30}, {37}, {22}, {29}, {31}, {38}, {23}, {30}, {32}, {
          39}, {24}, {31}, {40}, {25}, {34}, {41}, {26}, {33}, {35}, {42}, {
          27}, {34}, {36}, {43}, {28}, {35}, {37}, {44}, {29}, {36}, {38}, {
          45}, {30}, {37}, {39}, {46}, {31}, {38}, {40}, {47}, {32}, {39}, {
          48}, {33}, {42}, {49}, {34}, {41}, {43}, {50}, {35}, {42}, {44}, {
          51}, {36}, {43}, {45}, {52}, {37}, {44}, {46}, {53}, {38}, {45}, {
          47}, {54}, {39}, {46}, {48}, {55}, {40}, {47}, {56}, {41}, {50}, {
          57}, {42}, {49}, {51}, {58}, {43}, {50}, {52}, {59}, {44}, {51}, {
          53}, {60}, {45}, {52}, {54}, {61}, {46}, {53}, {55}, {62}, {47}, {
          54}, {56}, {63}, {48}, {55}, {64}, {49}, {58}, {50}, {57}, {59}, {
          51}, {58}, {60}, {52}, {59}, {61}, {53}, {60}, {62}, {54}, {61}, {
          63}, {55}, {62}, {64}, {56}, {63}}}, Pattern}]}, {
      GraphLayout -> {"GridEmbedding", "Dimension" -> {8, 8}}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJx10zsKQyEUhGFJZWlhYXEKs5K4hiwhkDpbv0vIC0n4UOEy/BdhmDnH8+1x
vZ9SSuP1vfV7jstaP9f+OMMFrnCDA+5j7ZPGWjNc4Ao3OODpby598kYLXOEG
Bzz97dFc+pSNVrjBAU9/52aP5tKnbrTBAXfuuTfO0V7Nqa8acOe/e+reOEd7
Nae+akd378I9dW+co72a8+f7BDiQON4=
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 9}, {2, 3}, {2, 10}, {3, 4}, {3, 11}, {4, 5}, {
          4, 12}, {5, 6}, {5, 13}, {6, 7}, {6, 14}, {7, 8}, {7, 15}, {8, 
          16}, {9, 10}, {9, 17}, {10, 11}, {10, 18}, {11, 12}, {11, 19}, {12, 
          13}, {12, 20}, {13, 14}, {13, 21}, {14, 15}, {14, 22}, {15, 16}, {
          15, 23}, {16, 24}, {17, 18}, {17, 25}, {18, 19}, {18, 26}, {19, 
          20}, {19, 27}, {20, 21}, {20, 28}, {21, 22}, {21, 29}, {22, 23}, {
          22, 30}, {23, 24}, {23, 31}, {24, 32}, {25, 26}, {25, 33}, {26, 
          27}, {26, 34}, {27, 28}, {27, 35}, {28, 29}, {28, 36}, {29, 30}, {
          29, 37}, {30, 31}, {30, 38}, {31, 32}, {31, 39}, {32, 40}, {33, 
          34}, {33, 41}, {34, 35}, {34, 42}, {35, 36}, {35, 43}, {36, 37}, {
          36, 44}, {37, 38}, {37, 45}, {38, 39}, {38, 46}, {39, 40}, {39, 
          47}, {40, 48}, {41, 42}, {41, 49}, {42, 43}, {42, 50}, {43, 44}, {
          43, 51}, {44, 45}, {44, 52}, {45, 46}, {45, 53}, {46, 47}, {46, 
          54}, {47, 48}, {47, 55}, {48, 56}, {49, 50}, {49, 57}, {50, 51}, {
          50, 58}, {51, 52}, {51, 59}, {52, 53}, {52, 60}, {53, 54}, {53, 
          61}, {54, 55}, {54, 62}, {55, 56}, {55, 63}, {56, 64}, {57, 58}, {
          58, 59}, {59, 60}, {60, 61}, {61, 62}, {62, 63}, {63, 64}}, 
          0.05338164251207729]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.05338164251207729], DiskBox[2, 0.05338164251207729], 
         DiskBox[3, 0.05338164251207729], DiskBox[4, 0.05338164251207729], 
         DiskBox[5, 0.05338164251207729], DiskBox[6, 0.05338164251207729], 
         DiskBox[7, 0.05338164251207729], DiskBox[8, 0.05338164251207729], 
         DiskBox[9, 0.05338164251207729], DiskBox[10, 0.05338164251207729], 
         DiskBox[11, 0.05338164251207729], DiskBox[12, 0.05338164251207729], 
         DiskBox[13, 0.05338164251207729], DiskBox[14, 0.05338164251207729], 
         DiskBox[15, 0.05338164251207729], DiskBox[16, 0.05338164251207729], 
         DiskBox[17, 0.05338164251207729], DiskBox[18, 0.05338164251207729], 
         DiskBox[19, 0.05338164251207729], DiskBox[20, 0.05338164251207729], 
         DiskBox[21, 0.05338164251207729], DiskBox[22, 0.05338164251207729], 
         DiskBox[23, 0.05338164251207729], DiskBox[24, 0.05338164251207729], 
         DiskBox[25, 0.05338164251207729], DiskBox[26, 0.05338164251207729], 
         DiskBox[27, 0.05338164251207729], DiskBox[28, 0.05338164251207729], 
         DiskBox[29, 0.05338164251207729], DiskBox[30, 0.05338164251207729], 
         DiskBox[31, 0.05338164251207729], DiskBox[32, 0.05338164251207729], 
         DiskBox[33, 0.05338164251207729], DiskBox[34, 0.05338164251207729], 
         DiskBox[35, 0.05338164251207729], DiskBox[36, 0.05338164251207729], 
         DiskBox[37, 0.05338164251207729], DiskBox[38, 0.05338164251207729], 
         DiskBox[39, 0.05338164251207729], DiskBox[40, 0.05338164251207729], 
         DiskBox[41, 0.05338164251207729], DiskBox[42, 0.05338164251207729], 
         DiskBox[43, 0.05338164251207729], DiskBox[44, 0.05338164251207729], 
         DiskBox[45, 0.05338164251207729], DiskBox[46, 0.05338164251207729], 
         DiskBox[47, 0.05338164251207729], DiskBox[48, 0.05338164251207729], 
         DiskBox[49, 0.05338164251207729], DiskBox[50, 0.05338164251207729], 
         DiskBox[51, 0.05338164251207729], DiskBox[52, 0.05338164251207729], 
         DiskBox[53, 0.05338164251207729], DiskBox[54, 0.05338164251207729], 
         DiskBox[55, 0.05338164251207729], DiskBox[56, 0.05338164251207729], 
         DiskBox[57, 0.05338164251207729], DiskBox[58, 0.05338164251207729], 
         DiskBox[59, 0.05338164251207729], DiskBox[60, 0.05338164251207729], 
         DiskBox[61, 0.05338164251207729], DiskBox[62, 0.05338164251207729], 
         DiskBox[63, 0.05338164251207729], 
         DiskBox[64, 0.05338164251207729]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.90048356891721*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"7056b81b-041f-4bd8-995b-a3b25235fb3e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"maze", "=", 
  RowBox[{"MakeMaze", "[", "mazeBase", "]"}]}]], "Input",
 CellChangeTimes->{{3.900483598045867*^9, 3.900483610485463*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"74f54372-4dac-4c11-bd6b-29ec766ac406"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
       38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55,
       56, 57, 58, 59, 60, 61, 62, 63, 64}, {
      Null, {{62, 54}, {54, 46}, {46, 47}, {47, 39}, {39, 31}, {31, 23}, {23, 
       15}, {15, 16}, {16, 8}, {8, 7}, {7, 6}, {6, 14}, {14, 22}, {22, 21}, {
       21, 29}, {29, 30}, {30, 38}, {38, 37}, {37, 36}, {36, 28}, {28, 20}, {
       20, 19}, {19, 27}, {27, 26}, {26, 34}, {34, 35}, {35, 43}, {43, 51}, {
       51, 50}, {50, 42}, {42, 41}, {41, 49}, {49, 57}, {57, 58}, {58, 59}, {
       59, 60}, {60, 61}, {61, 53}, {53, 45}, {45, 44}, {44, 52}, {41, 33}, {
       33, 25}, {25, 17}, {17, 9}, {9, 1}, {1, 2}, {2, 3}, {3, 11}, {11, 
       12}, {12, 4}, {4, 5}, {5, 13}, {11, 10}, {10, 18}, {16, 24}, {24, 
       32}, {32, 40}, {40, 48}, {48, 56}, {56, 55}, {55, 63}, {63, 64}}}, {
      VertexCoordinates -> CompressedData["
1:eJx10zsKQyEUhGFJZWlhYXEKs5K4hiwhkDpbv0vIC0n4UOEy/BdhmDnH8+1x
vZ9SSuP1vfV7jstaP9f+OMMFrnCDA+5j7ZPGWjNc4Ao3OODpby598kYLXOEG
Bzz97dFc+pSNVrjBAU9/52aP5tKnbrTBAXfuuTfO0V7Nqa8acOe/e+reOEd7
Nae+akd378I9dW+co72a8+f7BDiQON4=
        "]}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJx10zsKQyEUhGFJZWlhYXEKs5K4hiwhkDpbv0vIC0n4UOEy/BdhmDnH8+1x
vZ9SSuP1vfV7jstaP9f+OMMFrnCDA+5j7ZPGWjNc4Ao3OODpby598kYLXOEG
Bzz97dFc+pSNVrjBAU9/52aP5tKnbrTBAXfuuTfO0V7Nqa8acOe/e+reOEd7
Nae+akd378I9dW+co72a8+f7BDiQON4=
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 9}, {2, 3}, {3, 11}, {4, 5}, {4, 12}, {5, 
          13}, {6, 7}, {6, 14}, {7, 8}, {8, 16}, {9, 17}, {10, 11}, {10, 
          18}, {11, 12}, {14, 22}, {15, 16}, {15, 23}, {16, 24}, {17, 25}, {
          19, 20}, {19, 27}, {20, 28}, {21, 22}, {21, 29}, {23, 31}, {24, 
          32}, {25, 33}, {26, 27}, {26, 34}, {28, 36}, {29, 30}, {30, 38}, {
          31, 39}, {32, 40}, {33, 41}, {34, 35}, {35, 43}, {36, 37}, {37, 
          38}, {39, 47}, {40, 48}, {41, 42}, {41, 49}, {42, 50}, {43, 51}, {
          44, 45}, {44, 52}, {45, 53}, {46, 47}, {46, 54}, {48, 56}, {49, 
          57}, {50, 51}, {53, 61}, {54, 62}, {55, 56}, {55, 63}, {57, 58}, {
          58, 59}, {59, 60}, {60, 61}, {63, 64}}, 0.05338164251207729]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.05338164251207729], DiskBox[2, 0.05338164251207729], 
         DiskBox[3, 0.05338164251207729], DiskBox[4, 0.05338164251207729], 
         DiskBox[5, 0.05338164251207729], DiskBox[6, 0.05338164251207729], 
         DiskBox[7, 0.05338164251207729], DiskBox[8, 0.05338164251207729], 
         DiskBox[9, 0.05338164251207729], DiskBox[10, 0.05338164251207729], 
         DiskBox[11, 0.05338164251207729], DiskBox[12, 0.05338164251207729], 
         DiskBox[13, 0.05338164251207729], DiskBox[14, 0.05338164251207729], 
         DiskBox[15, 0.05338164251207729], DiskBox[16, 0.05338164251207729], 
         DiskBox[17, 0.05338164251207729], DiskBox[18, 0.05338164251207729], 
         DiskBox[19, 0.05338164251207729], DiskBox[20, 0.05338164251207729], 
         DiskBox[21, 0.05338164251207729], DiskBox[22, 0.05338164251207729], 
         DiskBox[23, 0.05338164251207729], DiskBox[24, 0.05338164251207729], 
         DiskBox[25, 0.05338164251207729], DiskBox[26, 0.05338164251207729], 
         DiskBox[27, 0.05338164251207729], DiskBox[28, 0.05338164251207729], 
         DiskBox[29, 0.05338164251207729], DiskBox[30, 0.05338164251207729], 
         DiskBox[31, 0.05338164251207729], DiskBox[32, 0.05338164251207729], 
         DiskBox[33, 0.05338164251207729], DiskBox[34, 0.05338164251207729], 
         DiskBox[35, 0.05338164251207729], DiskBox[36, 0.05338164251207729], 
         DiskBox[37, 0.05338164251207729], DiskBox[38, 0.05338164251207729], 
         DiskBox[39, 0.05338164251207729], DiskBox[40, 0.05338164251207729], 
         DiskBox[41, 0.05338164251207729], DiskBox[42, 0.05338164251207729], 
         DiskBox[43, 0.05338164251207729], DiskBox[44, 0.05338164251207729], 
         DiskBox[45, 0.05338164251207729], DiskBox[46, 0.05338164251207729], 
         DiskBox[47, 0.05338164251207729], DiskBox[48, 0.05338164251207729], 
         DiskBox[49, 0.05338164251207729], DiskBox[50, 0.05338164251207729], 
         DiskBox[51, 0.05338164251207729], DiskBox[52, 0.05338164251207729], 
         DiskBox[53, 0.05338164251207729], DiskBox[54, 0.05338164251207729], 
         DiskBox[55, 0.05338164251207729], DiskBox[56, 0.05338164251207729], 
         DiskBox[57, 0.05338164251207729], DiskBox[58, 0.05338164251207729], 
         DiskBox[59, 0.05338164251207729], DiskBox[60, 0.05338164251207729], 
         DiskBox[61, 0.05338164251207729], DiskBox[62, 0.05338164251207729], 
         DiskBox[63, 0.05338164251207729], 
         DiskBox[64, 0.05338164251207729]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.9004836060181665`*^9, 3.9004836108893833`*^9}},
 CellLabel->
  "Out[116]=",ExpressionUUID->"bbdf9d12-725b-420a-83e2-b14a5e74ec75"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GridGraph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}], ",", 
   RowBox[{"EdgeLabels", "->", "\"\<Index\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9004836285536795`*^9, 3.9004836611939163`*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"92c49134-af2c-4912-8828-30748066b0d6"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
       SparseArray[
       Automatic, {9, 9}, 0, {
        1, {{0, 2, 5, 7, 10, 14, 17, 19, 22, 24}, {{2}, {4}, {1}, {3}, {5}, {
          2}, {6}, {1}, {5}, {7}, {2}, {4}, {6}, {8}, {3}, {5}, {9}, {4}, {
          8}, {5}, {7}, {9}, {6}, {8}}}, Pattern}]}, {
      EdgeLabels -> {"Index"}, 
       GraphLayout -> {"GridEmbedding", "Dimension" -> {3, 3}}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], {
         {Arrowheads[0.], 
          ArrowBox[{{1., 1.}, {1., 2.}}, 0.02261146496815286]}, 
         InsetBox["1", {1., 1.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1., 1.}, {2., 1.}}, 0.02261146496815286]}, 
         InsetBox["2", {1.5, 1.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1., 2.}, {1., 3.}}, 0.02261146496815286]}, 
         InsetBox["3", {1., 2.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1., 2.}, {2., 2.}}, 0.02261146496815286]}, 
         InsetBox["4", {1.5, 2.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1., 3.}, {2., 3.}}, 0.02261146496815286]}, 
         InsetBox["5", {1.5, 3.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2., 1.}, {2., 2.}}, 0.02261146496815286]}, 
         InsetBox["6", {2., 1.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2., 1.}, {3., 1.}}, 0.02261146496815286]}, 
         InsetBox["7", {2.5, 1.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2., 2.}, {2., 3.}}, 0.02261146496815286]}, 
         InsetBox["8", {2., 2.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2., 2.}, {3., 2.}}, 0.02261146496815286]}, 
         InsetBox["9", {2.5, 2.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2., 3.}, {3., 3.}}, 0.02261146496815286]}, 
         InsetBox["10", {2.5, 3.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{3., 1.}, {3., 2.}}, 0.02261146496815286]}, 
         InsetBox["11", {3., 1.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{3., 2.}, {3., 3.}}, 0.02261146496815286]}, 
         InsetBox["12", {3., 2.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        DiskBox[{1., 1.}, 0.02261146496815286], 
        DiskBox[{1., 2.}, 0.02261146496815286], 
        DiskBox[{1., 3.}, 0.02261146496815286], 
        DiskBox[{2., 1.}, 0.02261146496815286], 
        DiskBox[{2., 2.}, 0.02261146496815286], 
        DiskBox[{2., 3.}, 0.02261146496815286], 
        DiskBox[{3., 1.}, 0.02261146496815286], 
        DiskBox[{3., 2.}, 0.02261146496815286], 
        DiskBox[{3., 3.}, 0.02261146496815286]}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.9004836524121227`*^9, 3.900483662989462*^9}},
 CellLabel->
  "Out[118]=",ExpressionUUID->"a7127816-a648-4149-a72f-c55b035a2939"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GridGraph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}], ",", 
   RowBox[{"EdgeLabels", "->", "\"\<Name\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9004836285536795`*^9, 3.9004836686929283`*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"8bd8bf80-27ec-4f50-a51f-7d28bf1cad0d"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
       SparseArray[
       Automatic, {9, 9}, 0, {
        1, {{0, 2, 5, 7, 10, 14, 17, 19, 22, 24}, {{2}, {4}, {1}, {3}, {5}, {
          2}, {6}, {1}, {5}, {7}, {2}, {4}, {6}, {8}, {3}, {5}, {9}, {4}, {
          8}, {5}, {7}, {9}, {6}, {8}}}, Pattern}]}, {
      EdgeLabels -> {"Name"}, 
       GraphLayout -> {"GridEmbedding", "Dimension" -> {3, 3}}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], {
         {Arrowheads[0.], 
          ArrowBox[{{1., 1.}, {1., 2.}}, 0.02261146496815286]}, InsetBox[
          RowBox[{"1", "\[UndirectedEdge]", "2"}], {1., 1.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1., 1.}, {2., 1.}}, 0.02261146496815286]}, InsetBox[
          RowBox[{"1", "\[UndirectedEdge]", "4"}], {1.5, 1.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1., 2.}, {1., 3.}}, 0.02261146496815286]}, InsetBox[
          RowBox[{"2", "\[UndirectedEdge]", "3"}], {1., 2.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1., 2.}, {2., 2.}}, 0.02261146496815286]}, InsetBox[
          RowBox[{"2", "\[UndirectedEdge]", "5"}], {1.5, 2.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1., 3.}, {2., 3.}}, 0.02261146496815286]}, InsetBox[
          RowBox[{"3", "\[UndirectedEdge]", "6"}], {1.5, 3.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2., 1.}, {2., 2.}}, 0.02261146496815286]}, InsetBox[
          RowBox[{"4", "\[UndirectedEdge]", "5"}], {2., 1.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2., 1.}, {3., 1.}}, 0.02261146496815286]}, InsetBox[
          RowBox[{"4", "\[UndirectedEdge]", "7"}], {2.5, 1.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2., 2.}, {2., 3.}}, 0.02261146496815286]}, InsetBox[
          RowBox[{"5", "\[UndirectedEdge]", "6"}], {2., 2.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2., 2.}, {3., 2.}}, 0.02261146496815286]}, InsetBox[
          RowBox[{"5", "\[UndirectedEdge]", "8"}], {2.5, 2.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2., 3.}, {3., 3.}}, 0.02261146496815286]}, InsetBox[
          RowBox[{"6", "\[UndirectedEdge]", "9"}], {2.5, 3.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{3., 1.}, {3., 2.}}, 0.02261146496815286]}, InsetBox[
          RowBox[{"7", "\[UndirectedEdge]", "8"}], {3., 1.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{3., 2.}, {3., 3.}}, 0.02261146496815286]}, InsetBox[
          RowBox[{"8", "\[UndirectedEdge]", "9"}], {3., 2.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        DiskBox[{1., 1.}, 0.02261146496815286], 
        DiskBox[{1., 2.}, 0.02261146496815286], 
        DiskBox[{1., 3.}, 0.02261146496815286], 
        DiskBox[{2., 1.}, 0.02261146496815286], 
        DiskBox[{2., 2.}, 0.02261146496815286], 
        DiskBox[{2., 3.}, 0.02261146496815286], 
        DiskBox[{3., 1.}, 0.02261146496815286], 
        DiskBox[{3., 2.}, 0.02261146496815286], 
        DiskBox[{3., 3.}, 0.02261146496815286]}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.90048366896701*^9},
 CellLabel->
  "Out[119]=",ExpressionUUID->"7230909f-18a6-40b0-8b63-643a912f4b9c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EdgeDelete", "[", 
  RowBox[{
   RowBox[{"GridGraph", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}], ",", 
     RowBox[{"EdgeLabels", "->", "\"\<Name\>\""}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", "\[UndirectedEdge]", "5"}], "}"}], ",", 
   RowBox[{"VertexLabels", "->", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900483674543951*^9, 3.900483681953232*^9}, {
  3.9004838840571136`*^9, 3.900483889166136*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"42ac34a9-45ed-4c3d-a2f0-2379e7a7e8b8"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
       SparseArray[
       Automatic, {9, 9}, 0, {
        1, {{0, 2, 4, 6, 9, 12, 15, 17, 20, 22}, {{2}, {4}, {1}, {3}, {2}, {
          6}, {1}, {5}, {7}, {4}, {6}, {8}, {3}, {5}, {9}, {4}, {8}, {5}, {
          7}, {9}, {6}, {8}}}, Pattern}]}, {
      EdgeLabels -> {"Name"}, 
       GraphLayout -> {"GridEmbedding", "Dimension" -> {3, 3}}, 
       VertexLabels -> {Automatic}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], {
         {Arrowheads[0.], 
          ArrowBox[{{1., 1.}, {1., 2.}}, 0.02261146496815286]}, InsetBox[
          RowBox[{"1", "\[UndirectedEdge]", "2"}], {1., 1.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1., 1.}, {2., 1.}}, 0.02261146496815286]}, InsetBox[
          RowBox[{"1", "\[UndirectedEdge]", "4"}], {1.5, 1.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1., 2.}, {1., 3.}}, 0.02261146496815286]}, InsetBox[
          RowBox[{"2", "\[UndirectedEdge]", "3"}], {1., 2.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1., 3.}, {2., 3.}}, 0.02261146496815286]}, InsetBox[
          RowBox[{"3", "\[UndirectedEdge]", "6"}], {1.5, 3.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2., 1.}, {2., 2.}}, 0.02261146496815286]}, InsetBox[
          RowBox[{"4", "\[UndirectedEdge]", "5"}], {2., 1.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2., 1.}, {3., 1.}}, 0.02261146496815286]}, InsetBox[
          RowBox[{"4", "\[UndirectedEdge]", "7"}], {2.5, 1.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2., 2.}, {2., 3.}}, 0.02261146496815286]}, InsetBox[
          RowBox[{"5", "\[UndirectedEdge]", "6"}], {2., 2.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2., 2.}, {3., 2.}}, 0.02261146496815286]}, InsetBox[
          RowBox[{"5", "\[UndirectedEdge]", "8"}], {2.5, 2.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2., 3.}, {3., 3.}}, 0.02261146496815286]}, InsetBox[
          RowBox[{"6", "\[UndirectedEdge]", "9"}], {2.5, 3.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{3., 1.}, {3., 2.}}, 0.02261146496815286]}, InsetBox[
          RowBox[{"7", "\[UndirectedEdge]", "8"}], {3., 1.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{3., 2.}, {3., 3.}}, 0.02261146496815286]}, InsetBox[
          RowBox[{"8", "\[UndirectedEdge]", "9"}], {3., 2.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{1., 1.}, 0.02261146496815286], 
         InsetBox["1", 
          Offset[{2, 2}, {1.0226114649681528, 1.0226114649681528}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 2.}, 0.02261146496815286], 
         InsetBox["2", 
          Offset[{2, 2}, {1.0226114649681528, 2.022611464968153}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 3.}, 0.02261146496815286], 
         InsetBox["3", 
          Offset[{2, 2}, {1.0226114649681528, 3.022611464968153}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 1.}, 0.02261146496815286], 
         InsetBox["4", 
          Offset[{2, 2}, {2.022611464968153, 1.0226114649681528}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 2.}, 0.02261146496815286], 
         InsetBox["5", Offset[{2, 2}, {2.022611464968153, 2.022611464968153}],
           ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 3.}, 0.02261146496815286], 
         InsetBox["6", Offset[{2, 2}, {2.022611464968153, 3.022611464968153}],
           ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3., 1.}, 0.02261146496815286], 
         InsetBox["7", 
          Offset[{2, 2}, {3.022611464968153, 1.0226114649681528}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3., 2.}, 0.02261146496815286], 
         InsetBox["8", Offset[{2, 2}, {3.022611464968153, 2.022611464968153}],
           ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3., 3.}, 0.02261146496815286], 
         InsetBox["9", Offset[{2, 2}, {3.022611464968153, 3.022611464968153}],
           ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.9004836824395266`*^9, 3.9004838894893713`*^9},
 CellLabel->
  "Out[127]=",ExpressionUUID->"6179a04f-0ebf-4705-9217-dea5334476ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "1"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "5"}], ","}], "}"}], ",", 
   RowBox[{"GraphLayout", "->", "\"\<GridEmbedding\>\""}], ",", 
   RowBox[{"VertexLabels", "->", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9004838915169687`*^9, 
  3.900483941132178*^9}},ExpressionUUID->"9bd4a70b-8d1b-4e2e-987c-\
eef8d2b3775f"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 4, 2, 5}, {Null, {{1, 2}, {3, 1}, {2, 4}}}, {
      GraphLayout -> "GridEmbedding", VertexLabels -> {Automatic}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
        ArrowBox[{{{1., 1.}, {1., 2.}}, {{1., 1.}, {2., 1.}}, {{1., 2.}, {2., 
         2.}}}, 0.01273]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{1., 1.}, 0.01273], 
         InsetBox["1", Offset[{2, 2}, {1.01273, 1.01273}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 2.}, 0.01273], 
         InsetBox["4", Offset[{2, 2}, {1.01273, 2.01273}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 1.}, 0.01273], 
         InsetBox["2", Offset[{2, 2}, {2.01273, 1.01273}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 2.}, 0.01273], 
         InsetBox["5", Offset[{2, 2}, {2.01273, 2.01273}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.9004839232026978`*^9, 3.900483931849551*^9}},
 CellLabel->
  "Out[129]=",ExpressionUUID->"982329ef-d0c1-4638-9135-dacd6faabd51"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.900483879864952*^9, 
  3.9004838816607018`*^9}},ExpressionUUID->"738370e7-becb-4eb0-b6d5-\
205daeebc067"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LineGraph", "[", 
  RowBox[{"EdgeDelete", "[", 
   RowBox[{
    RowBox[{"GridGraph", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"3", ",", "3"}], "}"}], ",", 
      RowBox[{"EdgeLabels", "->", "\"\<Name\>\""}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", "\[UndirectedEdge]", "5"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9004837298025465`*^9, 3.9004837320534387`*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"6dadc962-7a3a-4f63-afce-5ab83a49c872"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}, {Null, 
       SparseArray[
       Automatic, {11, 11}, 0, {
        1, {{0, 2, 5, 7, 10, 14, 17, 21, 25, 28, 31, 34}, {{2}, {3}, {1}, {
          5}, {6}, {1}, {4}, {3}, {7}, {9}, {2}, {6}, {7}, {8}, {2}, {5}, {
          10}, {4}, {5}, {8}, {9}, {5}, {7}, {10}, {11}, {4}, {7}, {11}, {
          6}, {8}, {11}, {8}, {9}, {10}}}, Pattern}]}, {
      VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
        ArrowBox[CompressedData["
1:eJxTTMoPSmVmYGAQBGImKLasiNfmcuBwaDl3/2WQ5jN7tfS16cdlGBwmGM+a
ZrJ5vz26/LNzm+K3OHI4BFVfDOLR+IOh/l8XY/kvjS/2Hra213ymYZq3e/0H
KdW2t/YMUIBuXr1QvdgZRQYHBjuHF23LmBzQ+Vb1jrE2Wl/s7yRcytf4+xtD
PdO304bv5r+1P3n49vMrS5gd0N2Dbj+6PLr56PIcdVqhoTwP7J/npJ+MXfYZ
wzwY2M+5XDLlx1MM89D1o8ujux9dPbr5GPI/un+LsyXb572t9I0P/YNhHro8
unno8gB9sujR
         "], 0.030469151292280353`]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{3.0312693966398254`, 0.6925444190842005}, 
          0.030469151292280353], 
         InsetBox["1", 
          Offset[{2, 2}, {3.061738547932106, 0.7230135703764808}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.0140522098344205`, 0.12382820774855774`}, 
          0.030469151292280353], 
         InsetBox["2", 
          Offset[{2, 2}, {2.044521361126701, 0.15429735904083808}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.0320823170130664`, 1.7597773776139616`}, 
          0.030469151292280353], 
         InsetBox["3", Offset[{2, 2}, {3.062551468305347, 1.790246528906242}],
           ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.016502547982156, 2.331312002621189}, 
          0.030469151292280353], 
         InsetBox["4", 
          Offset[{2, 2}, {2.0469716992744367, 2.3617811539134697}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.2600044869110998`, 0.7058471855506605}, 
          0.030469151292280353], 
         InsetBox["5", 
          Offset[{2, 2}, {1.2904736382033801, 0.7363163368429408}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9226251150298518, 0.}, 0.030469151292280353], 
         InsetBox["6", 
          Offset[{2, 2}, {0.9530942663221321, 0.030469151292280353}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.2603114741140886`, 1.7493061416662874`}, 
          0.030469151292280353], 
         InsetBox["7", 
          Offset[{2, 2}, {1.290780625406369, 1.7797752929585677}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.5015055335424572, 1.2281167857498134`}, 
          0.030469151292280353], 
         InsetBox["8", 
          Offset[{2, 2}, {0.5319746848347375, 1.2585859370420938}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.925772759684776, 2.455484210390271}, 
          0.030469151292280353], 
         InsetBox["9", 
          Offset[{2, 2}, {0.9562419109770564, 2.4859533616825518}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 0.686571168997311}, 0.030469151292280353], 
         InsetBox["10", 
          Offset[{2, 2}, {0.030469151292280353, 0.7170403202895913}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.0023222416315311634`, 1.7708428408066896`}, 
          0.030469151292280353], 
         InsetBox["11", 
          Offset[{2, 2}, {0.032791392923811516, 1.80131199209897}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.900483732401857*^9},
 CellLabel->
  "Out[122]=",ExpressionUUID->"65b989a5-4318-408b-9ca9-a8f2aaaca290"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DualPlanarGraph", "[", 
  RowBox[{"EdgeDelete", "[", 
   RowBox[{
    RowBox[{"GridGraph", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"3", ",", "3"}], "}"}], ",", 
      RowBox[{"EdgeLabels", "->", "\"\<Name\>\""}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", "\[UndirectedEdge]", "5"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9004838110868683`*^9, 3.9004838188407784`*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"6befbcee-28a1-4c38-860b-3d6f9c34b938"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{1, 2, 3, 6, 9, 8, 7, 4}, {1, 4, 5, 6, 3, 2}, {4, 7, 8, 5}, {5, 8,
        9, 6}}, {
      Null, {{1, 2}, {1, 2}, {1, 2}, {1, 2}, {1, 3}, {1, 3}, {2, 3}, {3, 4}, {
       1, 4}, {1, 4}, {2, 4}}}, {GraphLayout -> "TutteEmbedding"}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
j/QPI2j//gP512A1
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[
          BezierCurveBox[{1, {0.6796738226668912, 0.392409864477876}, 2}], 
          0.020399597244776385`], 
         ArrowBox[
          BezierCurveBox[{1, {0.5154807063631988, 0.29761292458082744`}, 2}], 
          0.020399597244776385`], 
         ArrowBox[
          BezierCurveBox[{
           1, {0.35054469742127187`, 0.20238707541912726`}, 2}], 
          0.020399597244776385`], 
         ArrowBox[
          BezierCurveBox[{
           1, {0.18635158111754316`, 0.10759013552213023`}, 2}], 
          0.020399597244776385`], 
         ArrowBox[
          BezierCurveBox[{1, {0.16444074718311633`, 0.5000000000000003}, 3}], 
          0.020399597244776385`], 
         ArrowBox[
          BezierCurveBox[{1, {-0.16444074718311655`, 0.5000000000000007}, 3}],
           0.020399597244776385`], 
         ArrowBox[
          BezierCurveBox[{
           1, {-0.18635158111754618`, 0.10759013552212413`}, 4}], 
          0.020399597244776385`], 
         ArrowBox[
          BezierCurveBox[{1, {-0.6796738226668937, 0.39240986447787274`}, 4}],
           0.020399597244776385`], ArrowBox[{2, 3}, 0.020399597244776385`], 
         ArrowBox[{2, 4}, 0.020399597244776385`], 
         ArrowBox[{3, 4}, 0.020399597244776385`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.020399597244776385], DiskBox[2, 0.020399597244776385], 
         DiskBox[3, 0.020399597244776385], 
         DiskBox[4, 0.020399597244776385]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.900483819653792*^9},
 CellLabel->
  "Out[125]=",ExpressionUUID->"23c47ec8-f18a-4471-9832-79436c24260b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IsomorphicSubgraphQ", "[", 
  RowBox[{
   RowBox[{"DualPlanarGraph", "[", 
    RowBox[{"EdgeDelete", "[", 
     RowBox[{
      RowBox[{"GridGraph", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "3"}], "}"}], ",", 
        RowBox[{"EdgeLabels", "->", "\"\<Name\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "5"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"GridGraph", "[", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4"}], "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9004838455711465`*^9, 3.900483854497669*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"b690f84b-b599-4290-b223-cd0e278453cb"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.9004838550277905`*^9},
 CellLabel->
  "Out[126]=",ExpressionUUID->"298e81ee-2891-49eb-ade3-b891951d22ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"LineGraph", "[", 
    RowBox[{"EdgeDelete", "[", 
     RowBox[{
      RowBox[{"GridGraph", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "3"}], "}"}], ",", 
        RowBox[{"EdgeLabels", "->", "\"\<Name\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "5"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"GraphLayout", "->", "\"\<GridEmbedding\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900483737039717*^9, 3.900483747431836*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"54d23c43-9f24-4145-8934-a963ae443b0f"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}, {Null, 
       SparseArray[
       Automatic, {11, 11}, 0, {
        1, {{0, 2, 5, 7, 10, 14, 17, 21, 25, 28, 31, 34}, {{2}, {3}, {1}, {
          5}, {6}, {1}, {4}, {3}, {7}, {9}, {2}, {6}, {7}, {8}, {2}, {5}, {
          10}, {4}, {5}, {8}, {9}, {5}, {7}, {10}, {11}, {4}, {7}, {11}, {
          6}, {8}, {11}, {8}, {9}, {10}}}, Pattern}]}, {
      GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "GridEmbedding"}, 
       VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
        ArrowBox[CompressedData["
1:eJxTTMoPSmVmYGAQBGImKIaAD/bYaQYH/PIcDtjVo9O45NH1c6DJ43IHLnvR
5dHNw2U/IXeRqk+AgHvR9eOSx+UPXOajy6Obj+4+XOYh5AEAwiV3
         "], 0.030239520958083826`]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{1., 1.}, 0.030239520958083826], 
         InsetBox["1", Offset[{2, 2}, {1.030239520958084, 1.030239520958084}],
           ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 2.}, 0.030239520958083826], 
         InsetBox["2", 
          Offset[{2, 2}, {1.030239520958084, 2.0302395209580837}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 3.}, 0.030239520958083826], 
         InsetBox["3", 
          Offset[{2, 2}, {1.030239520958084, 3.0302395209580837}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 1.}, 0.030239520958083826], 
         InsetBox["4", 
          Offset[{2, 2}, {2.0302395209580837, 1.030239520958084}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 2.}, 0.030239520958083826], 
         InsetBox["5", 
          Offset[{2, 2}, {2.0302395209580837, 2.0302395209580837}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 3.}, 0.030239520958083826], 
         InsetBox["6", 
          Offset[{2, 2}, {2.0302395209580837, 3.0302395209580837}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3., 1.}, 0.030239520958083826], 
         InsetBox["7", 
          Offset[{2, 2}, {3.0302395209580837, 1.030239520958084}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3., 2.}, 0.030239520958083826], 
         InsetBox["8", 
          Offset[{2, 2}, {3.0302395209580837, 2.0302395209580837}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3., 3.}, 0.030239520958083826], 
         InsetBox["9", 
          Offset[{2, 2}, {3.0302395209580837, 3.0302395209580837}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{4., 1.}, 0.030239520958083826], 
         InsetBox["10", 
          Offset[{2, 2}, {4.030239520958084, 1.030239520958084}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{4., 2.}, 0.030239520958083826], 
         InsetBox["11", 
          Offset[{2, 2}, {4.030239520958084, 2.0302395209580837}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.9004837482510366`*^9},
 CellLabel->
  "Out[123]=",ExpressionUUID->"62ba5934-7d13-4377-9409-13c7408ed86e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IsomorphicSubgraphQ", "[", 
  RowBox[{
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"LineGraph", "[", 
      RowBox[{"EdgeDelete", "[", 
       RowBox[{
        RowBox[{"GridGraph", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"3", ",", "3"}], "}"}], ",", 
          RowBox[{"EdgeLabels", "->", "\"\<Name\>\""}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", "\[UndirectedEdge]", "5"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"GraphLayout", "->", "\"\<GridEmbedding\>\""}]}], "]"}], ",", 
   RowBox[{"GridGraph", "[", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4"}], "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9004837785966883`*^9, 3.9004837859519186`*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"c7db47ad-3730-45d7-805d-9cc06b40701a"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.900483786408366*^9},
 CellLabel->
  "Out[124]=",ExpressionUUID->"b005d4ee-a87d-4d85-8574-0c8f070114e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GridGraph", "[", 
  RowBox[{"{", 
   RowBox[{"4", ",", "4"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.900483700579878*^9, 3.9004837052839622`*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"80ec52af-ed9e-46b1-8bbd-c4fb88695dac"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16}, {Null, 
       SparseArray[
       Automatic, {16, 16}, 0, {
        1, {{0, 2, 5, 8, 10, 13, 17, 21, 24, 27, 31, 35, 38, 40, 43, 46, 
          48}, {{2}, {5}, {1}, {3}, {6}, {2}, {4}, {7}, {3}, {8}, {1}, {6}, {
          9}, {2}, {5}, {7}, {10}, {3}, {6}, {8}, {11}, {4}, {7}, {12}, {5}, {
          10}, {13}, {6}, {9}, {11}, {14}, {7}, {10}, {12}, {15}, {8}, {11}, {
          16}, {9}, {14}, {10}, {13}, {15}, {11}, {14}, {16}, {12}, {15}}}, 
         Pattern}]}, {
      GraphLayout -> {"GridEmbedding", "Dimension" -> {4, 4}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{1., 1.}, {1., 2.}, {1., 3.}, {1., 4.}, {2., 1.}, {
       2., 2.}, {2., 3.}, {2., 4.}, {3., 1.}, {3., 2.}, {3., 3.}, {3., 4.}, {
       4., 1.}, {4., 2.}, {4., 3.}, {4., 4.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 5}, {2, 3}, {2, 6}, {3, 4}, {3, 7}, {4, 8}, {5,
           6}, {5, 9}, {6, 7}, {6, 10}, {7, 8}, {7, 11}, {8, 12}, {9, 10}, {9,
           13}, {10, 11}, {10, 14}, {11, 12}, {11, 15}, {12, 16}, {13, 14}, {
          14, 15}, {15, 16}}, 0.030239520958083826`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.030239520958083826], DiskBox[2, 0.030239520958083826], 
         DiskBox[3, 0.030239520958083826], DiskBox[4, 0.030239520958083826], 
         DiskBox[5, 0.030239520958083826], DiskBox[6, 0.030239520958083826], 
         DiskBox[7, 0.030239520958083826], DiskBox[8, 0.030239520958083826], 
         DiskBox[9, 0.030239520958083826], DiskBox[10, 0.030239520958083826], 
         DiskBox[11, 0.030239520958083826], DiskBox[12, 0.030239520958083826],
          DiskBox[13, 0.030239520958083826], 
         DiskBox[14, 0.030239520958083826], DiskBox[15, 0.030239520958083826],
          DiskBox[16, 0.030239520958083826]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.900483705718989*^9},
 CellLabel->
  "Out[121]=",ExpressionUUID->"a2a9ae26-1852-4719-b833-e5e84ba14fd5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"connectivityGraph", "=", 
  RowBox[{"GridGraph", "[", 
   RowBox[{"{", 
    RowBox[{"9", ",", "9"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.900483575150239*^9, 3.9004835832794485`*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"e8f4790e-f71d-46ba-92c1-7fa8f39f4d34"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
       38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55,
       56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73,
       74, 75, 76, 77, 78, 79, 80, 81}, {Null, 
       SparseArray[Automatic, {81, 81}, 0, {1, {CompressedData["
1:eJwt0CFIQwEARdGvKCrKRHFsosgXDAaDYUEQDIaFBcMPCwNBxoJBnMFgGAgL
CwsLCwbDYGAwGAwLBoMwMCwsGBYWFgTBsGBYWDB4RB+c/OBu5ovR+UQQBFHw
t0mmmWWeGEuskGCVdUK22GaHXVLssc8Bh6TJcPT/kSXHMScUOOWMCy65osQ1
ZSpUqVHnhlsaNLnjngceafHEMy+0eaVDlzd69BnwzgefDPlixJjv3ygCTTHD
HAssskycJGtsEPID+mEkMg==
          "], {{2}, {10}, {1}, {3}, {11}, {2}, {4}, {12}, {3}, {5}, {13}, {
          4}, {6}, {14}, {5}, {7}, {15}, {6}, {8}, {16}, {7}, {9}, {17}, {
          8}, {18}, {1}, {11}, {19}, {2}, {10}, {12}, {20}, {3}, {11}, {13}, {
          21}, {4}, {12}, {14}, {22}, {5}, {13}, {15}, {23}, {6}, {14}, {
          16}, {24}, {7}, {15}, {17}, {25}, {8}, {16}, {18}, {26}, {9}, {
          17}, {27}, {10}, {20}, {28}, {11}, {19}, {21}, {29}, {12}, {20}, {
          22}, {30}, {13}, {21}, {23}, {31}, {14}, {22}, {24}, {32}, {15}, {
          23}, {25}, {33}, {16}, {24}, {26}, {34}, {17}, {25}, {27}, {35}, {
          18}, {26}, {36}, {19}, {29}, {37}, {20}, {28}, {30}, {38}, {21}, {
          29}, {31}, {39}, {22}, {30}, {32}, {40}, {23}, {31}, {33}, {41}, {
          24}, {32}, {34}, {42}, {25}, {33}, {35}, {43}, {26}, {34}, {36}, {
          44}, {27}, {35}, {45}, {28}, {38}, {46}, {29}, {37}, {39}, {47}, {
          30}, {38}, {40}, {48}, {31}, {39}, {41}, {49}, {32}, {40}, {42}, {
          50}, {33}, {41}, {43}, {51}, {34}, {42}, {44}, {52}, {35}, {43}, {
          45}, {53}, {36}, {44}, {54}, {37}, {47}, {55}, {38}, {46}, {48}, {
          56}, {39}, {47}, {49}, {57}, {40}, {48}, {50}, {58}, {41}, {49}, {
          51}, {59}, {42}, {50}, {52}, {60}, {43}, {51}, {53}, {61}, {44}, {
          52}, {54}, {62}, {45}, {53}, {63}, {46}, {56}, {64}, {47}, {55}, {
          57}, {65}, {48}, {56}, {58}, {66}, {49}, {57}, {59}, {67}, {50}, {
          58}, {60}, {68}, {51}, {59}, {61}, {69}, {52}, {60}, {62}, {70}, {
          53}, {61}, {63}, {71}, {54}, {62}, {72}, {55}, {65}, {73}, {56}, {
          64}, {66}, {74}, {57}, {65}, {67}, {75}, {58}, {66}, {68}, {76}, {
          59}, {67}, {69}, {77}, {60}, {68}, {70}, {78}, {61}, {69}, {71}, {
          79}, {62}, {70}, {72}, {80}, {63}, {71}, {81}, {64}, {74}, {65}, {
          73}, {75}, {66}, {74}, {76}, {67}, {75}, {77}, {68}, {76}, {78}, {
          69}, {77}, {79}, {70}, {78}, {80}, {71}, {79}, {81}, {72}, {80}}}, 
         Pattern}]}, {
      GraphLayout -> {"GridEmbedding", "Dimension" -> {9, 9}}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJx11DGqAjEQBuBgtWWKFClSjLmIe4XnEQRrr+4RVCTI+9gRlp9vWchkMvF8
e1zvp1LK3/v55Pf3vBxn2f97wxU33PHAged+vG7Zj3PDFTfc8cCBVz3u23W3
JCtuuOOBA6967Lv7dt2aZMMdDxx41eO523f37botyY4HDrzqce48d/vuvl23
Jzlw4Ml33gPn0DnwHOyDdZiBJ++9h94D59A58Bzsg3WYk8z+B5aze7CczcFy
1odfHS9M8Eax
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 10}, {2, 3}, {2, 11}, {3, 4}, {3, 12}, {4, 
          5}, {4, 13}, {5, 6}, {5, 14}, {6, 7}, {6, 15}, {7, 8}, {7, 16}, {8, 
          9}, {8, 17}, {9, 18}, {10, 11}, {10, 19}, {11, 12}, {11, 20}, {12, 
          13}, {12, 21}, {13, 14}, {13, 22}, {14, 15}, {14, 23}, {15, 16}, {
          15, 24}, {16, 17}, {16, 25}, {17, 18}, {17, 26}, {18, 27}, {19, 
          20}, {19, 28}, {20, 21}, {20, 29}, {21, 22}, {21, 30}, {22, 23}, {
          22, 31}, {23, 24}, {23, 32}, {24, 25}, {24, 33}, {25, 26}, {25, 
          34}, {26, 27}, {26, 35}, {27, 36}, {28, 29}, {28, 37}, {29, 30}, {
          29, 38}, {30, 31}, {30, 39}, {31, 32}, {31, 40}, {32, 33}, {32, 
          41}, {33, 34}, {33, 42}, {34, 35}, {34, 43}, {35, 36}, {35, 44}, {
          36, 45}, {37, 38}, {37, 46}, {38, 39}, {38, 47}, {39, 40}, {39, 
          48}, {40, 41}, {40, 49}, {41, 42}, {41, 50}, {42, 43}, {42, 51}, {
          43, 44}, {43, 52}, {44, 45}, {44, 53}, {45, 54}, {46, 47}, {46, 
          55}, {47, 48}, {47, 56}, {48, 49}, {48, 57}, {49, 50}, {49, 58}, {
          50, 51}, {50, 59}, {51, 52}, {51, 60}, {52, 53}, {52, 61}, {53, 
          54}, {53, 62}, {54, 63}, {55, 56}, {55, 64}, {56, 57}, {56, 65}, {
          57, 58}, {57, 66}, {58, 59}, {58, 67}, {59, 60}, {59, 68}, {60, 
          61}, {60, 69}, {61, 62}, {61, 70}, {62, 63}, {62, 71}, {63, 72}, {
          64, 65}, {64, 73}, {65, 66}, {65, 74}, {66, 67}, {66, 75}, {67, 
          68}, {67, 76}, {68, 69}, {68, 77}, {69, 70}, {69, 78}, {70, 71}, {
          70, 79}, {71, 72}, {71, 80}, {72, 81}, {73, 74}, {74, 75}, {75, 
          76}, {76, 77}, {77, 78}, {78, 79}, {79, 80}, {80, 81}}, 
          0.05783410138248847]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.05783410138248847], DiskBox[2, 0.05783410138248847], 
         DiskBox[3, 0.05783410138248847], DiskBox[4, 0.05783410138248847], 
         DiskBox[5, 0.05783410138248847], DiskBox[6, 0.05783410138248847], 
         DiskBox[7, 0.05783410138248847], DiskBox[8, 0.05783410138248847], 
         DiskBox[9, 0.05783410138248847], DiskBox[10, 0.05783410138248847], 
         DiskBox[11, 0.05783410138248847], DiskBox[12, 0.05783410138248847], 
         DiskBox[13, 0.05783410138248847], DiskBox[14, 0.05783410138248847], 
         DiskBox[15, 0.05783410138248847], DiskBox[16, 0.05783410138248847], 
         DiskBox[17, 0.05783410138248847], DiskBox[18, 0.05783410138248847], 
         DiskBox[19, 0.05783410138248847], DiskBox[20, 0.05783410138248847], 
         DiskBox[21, 0.05783410138248847], DiskBox[22, 0.05783410138248847], 
         DiskBox[23, 0.05783410138248847], DiskBox[24, 0.05783410138248847], 
         DiskBox[25, 0.05783410138248847], DiskBox[26, 0.05783410138248847], 
         DiskBox[27, 0.05783410138248847], DiskBox[28, 0.05783410138248847], 
         DiskBox[29, 0.05783410138248847], DiskBox[30, 0.05783410138248847], 
         DiskBox[31, 0.05783410138248847], DiskBox[32, 0.05783410138248847], 
         DiskBox[33, 0.05783410138248847], DiskBox[34, 0.05783410138248847], 
         DiskBox[35, 0.05783410138248847], DiskBox[36, 0.05783410138248847], 
         DiskBox[37, 0.05783410138248847], DiskBox[38, 0.05783410138248847], 
         DiskBox[39, 0.05783410138248847], DiskBox[40, 0.05783410138248847], 
         DiskBox[41, 0.05783410138248847], DiskBox[42, 0.05783410138248847], 
         DiskBox[43, 0.05783410138248847], DiskBox[44, 0.05783410138248847], 
         DiskBox[45, 0.05783410138248847], DiskBox[46, 0.05783410138248847], 
         DiskBox[47, 0.05783410138248847], DiskBox[48, 0.05783410138248847], 
         DiskBox[49, 0.05783410138248847], DiskBox[50, 0.05783410138248847], 
         DiskBox[51, 0.05783410138248847], DiskBox[52, 0.05783410138248847], 
         DiskBox[53, 0.05783410138248847], DiskBox[54, 0.05783410138248847], 
         DiskBox[55, 0.05783410138248847], DiskBox[56, 0.05783410138248847], 
         DiskBox[57, 0.05783410138248847], DiskBox[58, 0.05783410138248847], 
         DiskBox[59, 0.05783410138248847], DiskBox[60, 0.05783410138248847], 
         DiskBox[61, 0.05783410138248847], DiskBox[62, 0.05783410138248847], 
         DiskBox[63, 0.05783410138248847], DiskBox[64, 0.05783410138248847], 
         DiskBox[65, 0.05783410138248847], DiskBox[66, 0.05783410138248847], 
         DiskBox[67, 0.05783410138248847], DiskBox[68, 0.05783410138248847], 
         DiskBox[69, 0.05783410138248847], DiskBox[70, 0.05783410138248847], 
         DiskBox[71, 0.05783410138248847], DiskBox[72, 0.05783410138248847], 
         DiskBox[73, 0.05783410138248847], DiskBox[74, 0.05783410138248847], 
         DiskBox[75, 0.05783410138248847], DiskBox[76, 0.05783410138248847], 
         DiskBox[77, 0.05783410138248847], DiskBox[78, 0.05783410138248847], 
         DiskBox[79, 0.05783410138248847], DiskBox[80, 0.05783410138248847], 
         DiskBox[81, 0.05783410138248847]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.9004835836842947`*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"5d146f1e-75c4-413c-ba34-4cb9ab6c081d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["BoundaryMeshRegion documentation Applications examples", "Section",
 CellChangeTimes->{{3.9004794075048714`*^9, 3.9004794245589542`*^9}, 
   3.9004799269680815`*^9},ExpressionUUID->"6f1f9b61-995b-4936-97d2-\
515ec963b1a2"],

Cell[CellGroupData[{

Cell["rectangle with holes", "Subsubsection",
 CellChangeTimes->{{3.900479930022289*^9, 
  3.9004799367996845`*^9}},ExpressionUUID->"1501dd78-83d2-4b92-8796-\
ced241b13e50"],

Cell[TextData[{
 "Build a ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["BoundaryMeshRegion"]], "paclet:ref/BoundaryMeshRegion"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "0e46fd0e-15d2-4340-b27d-d4789e88c7e5"],
 " in 2D with multiple rectangular holes. The coordinates for the inner \
rectangles:"
}], "Text",
 CellID->88445747,ExpressionUUID->"52c71e80-0ba8-49c8-a045-8de8badfd304"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rectangleCoords", "[", 
    RowBox[{"{", 
     RowBox[{"i_", ",", "j_"}], "}"}], "]"}], ":=", 
   RowBox[{"rectangleCoords", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "j"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "0.5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rectangleCoords", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i_", ",", "j_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]_", ",", "\[Beta]_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"i", "-", 
        RowBox[{"\[Alpha]", "/", "2"}]}], ",", 
       RowBox[{"j", "-", 
        RowBox[{"\[Beta]", "/", "2"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"i", "+", 
        RowBox[{"\[Alpha]", "/", "2"}]}], ",", 
       RowBox[{"j", "-", 
        RowBox[{"\[Beta]", "/", "2"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"i", "+", 
        RowBox[{"\[Alpha]", "/", "2"}]}], ",", 
       RowBox[{"j", "+", 
        RowBox[{"\[Beta]", "/", "2"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"i", "-", 
        RowBox[{"\[Alpha]", "/", "2"}]}], ",", 
       RowBox[{"j", "+", 
        RowBox[{"\[Beta]", "/", "2"}]}]}], "}"}]}], "}"}]}], ";"}]}], "Input",
 CellLabel->"In[6]:=",
 CellID->50322935,ExpressionUUID->"9b4940b7-9473-4eeb-88a3-dafe0e1f9da7"],

Cell["The indexes for the inner rectangle closed curves:", "Text",
 CellID->26631010,ExpressionUUID->"71bce350-5694-428e-aba1-00866847a295"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rectangleIndexes", "[", "i_", "]"}], ":=", 
   RowBox[{"Line", "[", 
    RowBox[{"i", "-", "1", "+", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "1"}], "}"}]}], "]"}]}],
   ";"}]], "Input",
 CellLabel->"In[8]:=",
 CellID->64213100,ExpressionUUID->"3752fdf9-8c13-4476-bf60-6fb4eacce707"],

Cell[TextData[{
 "Generating an outer rectangle with ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]], "InlineMath",ExpressionUUID->
  "0d14269b-c828-44a0-a938-9ff99a1c12ae"],
 "\[Times]",
 Cell[BoxData[
  FormBox["n", TraditionalForm]], "InlineMath",ExpressionUUID->
  "9b2b7d86-3187-4732-804e-6ce96e683b7b"],
 " inner rectangle closed curves:"
}], "Text",
 CellID->98665820,ExpressionUUID->"4d55f454-ba24-4500-8719-d849b163a30a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RectangleHoleMesh", "[", 
   RowBox[{"{", 
    RowBox[{"m_", ",", "n_"}], "}"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"oc", ",", "hc"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"hc", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"rectangleCoords", "[", 
           RowBox[{"{", 
            RowBox[{"i", ",", "j"}], "}"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "n"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "m"}], "}"}]}], "]"}], ",", "2"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"oc", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"m", "+", "1"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"m", "+", "1"}], ",", 
          RowBox[{"n", "+", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"n", "+", "1"}]}], "}"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"BoundaryMeshRegion", "[", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{"hc", ",", "oc"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"rectangleIndexes", "[", 
        RowBox[{
         RowBox[{"4", " ", "m", " ", "n"}], "+", "1"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"rectangleIndexes", "[", "i", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"4", " ", "m", " ", "n"}], ",", "4"}], "}"}]}], "]"}]}]}],
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellLabel->"In[9]:=",
 CellID->603418709,ExpressionUUID->"e8ad13db-5d66-487f-9f34-d17745ede216"],

Cell["The resulting mesh can be used for computing:", "Text",
 CellID->66050555,ExpressionUUID->"6eb252e9-f655-4206-8da5-7f8a2a98adde"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RectangleHoleMesh", "[", 
  RowBox[{"{", 
   RowBox[{"20", ",", "10"}], "}"}], "]"}]], "Input",
 CellLabel->"In[10]:=",
 CellID->3997794,ExpressionUUID->"a395703a-3827-4124-ad61-0f9b4b8248a3"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = HoldComplete[
     BoundaryMeshRegion[CompressedData["
1:eJyF2s2KIlcYh/HGgIteCI00IiKmSy2/NX5kHa8hlxCY9dzCXJqXkwvI0kUI
qf+BeqYenE3xvPzo3bycOtbXX9///NZ7e3tb/PL29t/z/39//9F+/iNt8yfm
vXt306f78O/S9OkB/Ic0fXoI/ylNnx7Bj6Xp0xP4qTR9etb2P36Vpm/6xxd8
JU2fnsMvpOnTS/hamj69gl9L06c38Ftp+vQOfi9Nnz7AH6Xp06e2v/8mTd/0
g/4sTZ+mv0jTp+mv0vRp+ps0PfcZ9xK71/67pZ/wnKdt3sf8XZo+nX0W/yFN
n84+i/+Upk9nn8WPpenT2WfxU2n6dPbZE/uOTd902WfxlTR9eg6/kKZPL+Fr
afr0Cn4tTZ/ewG+l6dM7+L00ffoAf5SmT5/avuw7Nn3TD/qzNH2a/iJNn6a/
StOn6W/S9E2XfcZzFdvOZU/4/F227bU+npy/v5gPMP+Qpk8P4T+l6dMj+LE0
fXoCP5WmT8/avuw7Nn3TZZ/FV9L06Tn8Qpo+vYSvpenTK/i1NH16A7+Vpk/v
4PfS9OkD/FGaPn1q+7Lv2PRNP+jP0vRp+os0fZr+Kk2fpr9J03Of8b2Qbe+V
T/jevbvtXNaHtz1le22AJ+cfL+ZDzD+l6dMj+LE0fXoCP5WmT8/avuw7Nn3T
ZZ/FV9L06Tn8Qpo+vYSvpenTK/i1NH16A7+Vpk/v4PfS9OkD/FGaPn1q+7Lv
2PRNP+jP0vRp+os0fZr+Kk2fpr9J03Of8V6LbfdiT/jevbvtvbIPb+csO5cN
4G1P2V4b4sn554v5CPOxNH16Aj+Vpk/P2r7sOzZ902WfxVfS9Ok5/EKaPr2E
r6Xp0yv4tTR9egO/laZP7+D30vTpA/xRmj59avuy79j0TT/oz9L0afqLNH2a
/ipNn6a/SdNzn/Fenm33+k/43r277V6sD2/vifZeOYC3c5ady4bwtqdsr43w
5Hz8Yj7BfCpNn561fdl3bPqmyz6Lr6Tp03P4hTR9eglfS9OnV/Brafr0Bn4r
TZ/ewe+l6dMH+KM0ffrU9mXfsembftCfpenT9Bdp+jT9VZo+TX+Tpuc+4++K
7Ck87+l5L8+2e/0+vN1z2b3YAN7eE+29cghv5yw7l43gbU/ZXpvgyfn0xXzW
npd9x6Zvuuyz+EqaPj2HX0jTp5fwtTR9egW/lqZPb+C30vTpHfxemj59gD9K
06dPbV/2HZu+6Qf9WZo+TX+Rpk/TX6Xp0/Q3aXruM3wX8dN3EvZdxRO+d+9s
/V2yD2/39HavP4C3ey67FxvC23uivVeO4O2cZeeyCbztKdtrs/aT87TOvzCv
upu+9Bx+0d30pZfwdXfTl17Br7ubvvQGftvd9KV38Pvupi99gD92N33pU9uX
fYemTz/oz91NX5r+0t30pemv3U1fmv7W3fQ/7TN+18Wu4NNP+N69u+nTfXj7
nZE+PYC3e3r69BDe7rno0yN4e0+kT0/g7ZxFn561ve4p+gruS+bVi/kc84U0
fXoJX0vTp1fwa2n69AZ+K02f3sHvpenTB/ijNH361PZl37Hpm37Qn6Xp0/QX
afo0/VWaPk1/k6ZvuuwzfpfKtu9an/C9e3fbd2F9ePtOwr6rGMDb74z2u+QQ
3u7p7V5/BG/3XHYvNoG390R7r5y1vZ6z7Fz2BV9J216b48n54sV8iXktTZ9e
wa+l6dMb+K00fXoHv5emTx/gj9L06VPbl33Hpm/6QX+Wpk/TX6Tp0/RXafo0
/U2aPv8f+O/3e3fXmNf3fwEHCzoj
      "], {
       Line[{{801, 802}, {802, 803}, {803, 804}, {804, 801}}]}, {
       Line[{{1, 2}, {2, 3}, {3, 4}, {4, 1}}]}, {
       Line[{{5, 6}, {6, 7}, {7, 8}, {8, 5}}]}, {
       Line[{{9, 10}, {10, 11}, {11, 12}, {12, 9}}]}, {
       Line[{{13, 14}, {14, 15}, {15, 16}, {16, 13}}]}, {
       Line[{{17, 18}, {18, 19}, {19, 20}, {20, 17}}]}, {
       Line[{{21, 22}, {22, 23}, {23, 24}, {24, 21}}]}, {
       Line[{{25, 26}, {26, 27}, {27, 28}, {28, 25}}]}, {
       Line[{{29, 30}, {30, 31}, {31, 32}, {32, 29}}]}, {
       Line[{{33, 34}, {34, 35}, {35, 36}, {36, 33}}]}, {
       Line[{{37, 38}, {38, 39}, {39, 40}, {40, 37}}]}, {
       Line[{{41, 42}, {42, 43}, {43, 44}, {44, 41}}]}, {
       Line[{{45, 46}, {46, 47}, {47, 48}, {48, 45}}]}, {
       Line[{{49, 50}, {50, 51}, {51, 52}, {52, 49}}]}, {
       Line[{{53, 54}, {54, 55}, {55, 56}, {56, 53}}]}, {
       Line[{{57, 58}, {58, 59}, {59, 60}, {60, 57}}]}, {
       Line[{{61, 62}, {62, 63}, {63, 64}, {64, 61}}]}, {
       Line[{{65, 66}, {66, 67}, {67, 68}, {68, 65}}]}, {
       Line[{{69, 70}, {70, 71}, {71, 72}, {72, 69}}]}, {
       Line[{{73, 74}, {74, 75}, {75, 76}, {76, 73}}]}, {
       Line[{{77, 78}, {78, 79}, {79, 80}, {80, 77}}]}, {
       Line[{{81, 82}, {82, 83}, {83, 84}, {84, 81}}]}, {
       Line[{{85, 86}, {86, 87}, {87, 88}, {88, 85}}]}, {
       Line[{{89, 90}, {90, 91}, {91, 92}, {92, 89}}]}, {
       Line[{{93, 94}, {94, 95}, {95, 96}, {96, 93}}]}, {
       Line[{{97, 98}, {98, 99}, {99, 100}, {100, 97}}]}, {
       Line[{{101, 102}, {102, 103}, {103, 104}, {104, 101}}]}, {
       Line[{{105, 106}, {106, 107}, {107, 108}, {108, 105}}]}, {
       Line[{{109, 110}, {110, 111}, {111, 112}, {112, 109}}]}, {
       Line[{{113, 114}, {114, 115}, {115, 116}, {116, 113}}]}, {
       Line[{{117, 118}, {118, 119}, {119, 120}, {120, 117}}]}, {
       Line[{{121, 122}, {122, 123}, {123, 124}, {124, 121}}]}, {
       Line[{{125, 126}, {126, 127}, {127, 128}, {128, 125}}]}, {
       Line[{{129, 130}, {130, 131}, {131, 132}, {132, 129}}]}, {
       Line[{{133, 134}, {134, 135}, {135, 136}, {136, 133}}]}, {
       Line[{{137, 138}, {138, 139}, {139, 140}, {140, 137}}]}, {
       Line[{{141, 142}, {142, 143}, {143, 144}, {144, 141}}]}, {
       Line[{{145, 146}, {146, 147}, {147, 148}, {148, 145}}]}, {
       Line[{{149, 150}, {150, 151}, {151, 152}, {152, 149}}]}, {
       Line[{{153, 154}, {154, 155}, {155, 156}, {156, 153}}]}, {
       Line[{{157, 158}, {158, 159}, {159, 160}, {160, 157}}]}, {
       Line[{{161, 162}, {162, 163}, {163, 164}, {164, 161}}]}, {
       Line[{{165, 166}, {166, 167}, {167, 168}, {168, 165}}]}, {
       Line[{{169, 170}, {170, 171}, {171, 172}, {172, 169}}]}, {
       Line[{{173, 174}, {174, 175}, {175, 176}, {176, 173}}]}, {
       Line[{{177, 178}, {178, 179}, {179, 180}, {180, 177}}]}, {
       Line[{{181, 182}, {182, 183}, {183, 184}, {184, 181}}]}, {
       Line[{{185, 186}, {186, 187}, {187, 188}, {188, 185}}]}, {
       Line[{{189, 190}, {190, 191}, {191, 192}, {192, 189}}]}, {
       Line[{{193, 194}, {194, 195}, {195, 196}, {196, 193}}]}, {
       Line[{{197, 198}, {198, 199}, {199, 200}, {200, 197}}]}, {
       Line[{{201, 202}, {202, 203}, {203, 204}, {204, 201}}]}, {
       Line[{{205, 206}, {206, 207}, {207, 208}, {208, 205}}]}, {
       Line[{{209, 210}, {210, 211}, {211, 212}, {212, 209}}]}, {
       Line[{{213, 214}, {214, 215}, {215, 216}, {216, 213}}]}, {
       Line[{{217, 218}, {218, 219}, {219, 220}, {220, 217}}]}, {
       Line[{{221, 222}, {222, 223}, {223, 224}, {224, 221}}]}, {
       Line[{{225, 226}, {226, 227}, {227, 228}, {228, 225}}]}, {
       Line[{{229, 230}, {230, 231}, {231, 232}, {232, 229}}]}, {
       Line[{{233, 234}, {234, 235}, {235, 236}, {236, 233}}]}, {
       Line[{{237, 238}, {238, 239}, {239, 240}, {240, 237}}]}, {
       Line[{{241, 242}, {242, 243}, {243, 244}, {244, 241}}]}, {
       Line[{{245, 246}, {246, 247}, {247, 248}, {248, 245}}]}, {
       Line[{{249, 250}, {250, 251}, {251, 252}, {252, 249}}]}, {
       Line[{{253, 254}, {254, 255}, {255, 256}, {256, 253}}]}, {
       Line[{{257, 258}, {258, 259}, {259, 260}, {260, 257}}]}, {
       Line[{{261, 262}, {262, 263}, {263, 264}, {264, 261}}]}, {
       Line[{{265, 266}, {266, 267}, {267, 268}, {268, 265}}]}, {
       Line[{{269, 270}, {270, 271}, {271, 272}, {272, 269}}]}, {
       Line[{{273, 274}, {274, 275}, {275, 276}, {276, 273}}]}, {
       Line[{{277, 278}, {278, 279}, {279, 280}, {280, 277}}]}, {
       Line[{{281, 282}, {282, 283}, {283, 284}, {284, 281}}]}, {
       Line[{{285, 286}, {286, 287}, {287, 288}, {288, 285}}]}, {
       Line[{{289, 290}, {290, 291}, {291, 292}, {292, 289}}]}, {
       Line[{{293, 294}, {294, 295}, {295, 296}, {296, 293}}]}, {
       Line[{{297, 298}, {298, 299}, {299, 300}, {300, 297}}]}, {
       Line[{{301, 302}, {302, 303}, {303, 304}, {304, 301}}]}, {
       Line[{{305, 306}, {306, 307}, {307, 308}, {308, 305}}]}, {
       Line[{{309, 310}, {310, 311}, {311, 312}, {312, 309}}]}, {
       Line[{{313, 314}, {314, 315}, {315, 316}, {316, 313}}]}, {
       Line[{{317, 318}, {318, 319}, {319, 320}, {320, 317}}]}, {
       Line[{{321, 322}, {322, 323}, {323, 324}, {324, 321}}]}, {
       Line[{{325, 326}, {326, 327}, {327, 328}, {328, 325}}]}, {
       Line[{{329, 330}, {330, 331}, {331, 332}, {332, 329}}]}, {
       Line[{{333, 334}, {334, 335}, {335, 336}, {336, 333}}]}, {
       Line[{{337, 338}, {338, 339}, {339, 340}, {340, 337}}]}, {
       Line[{{341, 342}, {342, 343}, {343, 344}, {344, 341}}]}, {
       Line[{{345, 346}, {346, 347}, {347, 348}, {348, 345}}]}, {
       Line[{{349, 350}, {350, 351}, {351, 352}, {352, 349}}]}, {
       Line[{{353, 354}, {354, 355}, {355, 356}, {356, 353}}]}, {
       Line[{{357, 358}, {358, 359}, {359, 360}, {360, 357}}]}, {
       Line[{{361, 362}, {362, 363}, {363, 364}, {364, 361}}]}, {
       Line[{{365, 366}, {366, 367}, {367, 368}, {368, 365}}]}, {
       Line[{{369, 370}, {370, 371}, {371, 372}, {372, 369}}]}, {
       Line[{{373, 374}, {374, 375}, {375, 376}, {376, 373}}]}, {
       Line[{{377, 378}, {378, 379}, {379, 380}, {380, 377}}]}, {
       Line[{{381, 382}, {382, 383}, {383, 384}, {384, 381}}]}, {
       Line[{{385, 386}, {386, 387}, {387, 388}, {388, 385}}]}, {
       Line[{{389, 390}, {390, 391}, {391, 392}, {392, 389}}]}, {
       Line[{{393, 394}, {394, 395}, {395, 396}, {396, 393}}]}, {
       Line[{{397, 398}, {398, 399}, {399, 400}, {400, 397}}]}, {
       Line[{{401, 402}, {402, 403}, {403, 404}, {404, 401}}]}, {
       Line[{{405, 406}, {406, 407}, {407, 408}, {408, 405}}]}, {
       Line[{{409, 410}, {410, 411}, {411, 412}, {412, 409}}]}, {
       Line[{{413, 414}, {414, 415}, {415, 416}, {416, 413}}]}, {
       Line[{{417, 418}, {418, 419}, {419, 420}, {420, 417}}]}, {
       Line[{{421, 422}, {422, 423}, {423, 424}, {424, 421}}]}, {
       Line[{{425, 426}, {426, 427}, {427, 428}, {428, 425}}]}, {
       Line[{{429, 430}, {430, 431}, {431, 432}, {432, 429}}]}, {
       Line[{{433, 434}, {434, 435}, {435, 436}, {436, 433}}]}, {
       Line[{{437, 438}, {438, 439}, {439, 440}, {440, 437}}]}, {
       Line[{{441, 442}, {442, 443}, {443, 444}, {444, 441}}]}, {
       Line[{{445, 446}, {446, 447}, {447, 448}, {448, 445}}]}, {
       Line[{{449, 450}, {450, 451}, {451, 452}, {452, 449}}]}, {
       Line[{{453, 454}, {454, 455}, {455, 456}, {456, 453}}]}, {
       Line[{{457, 458}, {458, 459}, {459, 460}, {460, 457}}]}, {
       Line[{{461, 462}, {462, 463}, {463, 464}, {464, 461}}]}, {
       Line[{{465, 466}, {466, 467}, {467, 468}, {468, 465}}]}, {
       Line[{{469, 470}, {470, 471}, {471, 472}, {472, 469}}]}, {
       Line[{{473, 474}, {474, 475}, {475, 476}, {476, 473}}]}, {
       Line[{{477, 478}, {478, 479}, {479, 480}, {480, 477}}]}, {
       Line[{{481, 482}, {482, 483}, {483, 484}, {484, 481}}]}, {
       Line[{{485, 486}, {486, 487}, {487, 488}, {488, 485}}]}, {
       Line[{{489, 490}, {490, 491}, {491, 492}, {492, 489}}]}, {
       Line[{{493, 494}, {494, 495}, {495, 496}, {496, 493}}]}, {
       Line[{{497, 498}, {498, 499}, {499, 500}, {500, 497}}]}, {
       Line[{{501, 502}, {502, 503}, {503, 504}, {504, 501}}]}, {
       Line[{{505, 506}, {506, 507}, {507, 508}, {508, 505}}]}, {
       Line[{{509, 510}, {510, 511}, {511, 512}, {512, 509}}]}, {
       Line[{{513, 514}, {514, 515}, {515, 516}, {516, 513}}]}, {
       Line[{{517, 518}, {518, 519}, {519, 520}, {520, 517}}]}, {
       Line[{{521, 522}, {522, 523}, {523, 524}, {524, 521}}]}, {
       Line[{{525, 526}, {526, 527}, {527, 528}, {528, 525}}]}, {
       Line[{{529, 530}, {530, 531}, {531, 532}, {532, 529}}]}, {
       Line[{{533, 534}, {534, 535}, {535, 536}, {536, 533}}]}, {
       Line[{{537, 538}, {538, 539}, {539, 540}, {540, 537}}]}, {
       Line[{{541, 542}, {542, 543}, {543, 544}, {544, 541}}]}, {
       Line[{{545, 546}, {546, 547}, {547, 548}, {548, 545}}]}, {
       Line[{{549, 550}, {550, 551}, {551, 552}, {552, 549}}]}, {
       Line[{{553, 554}, {554, 555}, {555, 556}, {556, 553}}]}, {
       Line[{{557, 558}, {558, 559}, {559, 560}, {560, 557}}]}, {
       Line[{{561, 562}, {562, 563}, {563, 564}, {564, 561}}]}, {
       Line[{{565, 566}, {566, 567}, {567, 568}, {568, 565}}]}, {
       Line[{{569, 570}, {570, 571}, {571, 572}, {572, 569}}]}, {
       Line[{{573, 574}, {574, 575}, {575, 576}, {576, 573}}]}, {
       Line[{{577, 578}, {578, 579}, {579, 580}, {580, 577}}]}, {
       Line[{{581, 582}, {582, 583}, {583, 584}, {584, 581}}]}, {
       Line[{{585, 586}, {586, 587}, {587, 588}, {588, 585}}]}, {
       Line[{{589, 590}, {590, 591}, {591, 592}, {592, 589}}]}, {
       Line[{{593, 594}, {594, 595}, {595, 596}, {596, 593}}]}, {
       Line[{{597, 598}, {598, 599}, {599, 600}, {600, 597}}]}, {
       Line[{{601, 602}, {602, 603}, {603, 604}, {604, 601}}]}, {
       Line[{{605, 606}, {606, 607}, {607, 608}, {608, 605}}]}, {
       Line[{{609, 610}, {610, 611}, {611, 612}, {612, 609}}]}, {
       Line[{{613, 614}, {614, 615}, {615, 616}, {616, 613}}]}, {
       Line[{{617, 618}, {618, 619}, {619, 620}, {620, 617}}]}, {
       Line[{{621, 622}, {622, 623}, {623, 624}, {624, 621}}]}, {
       Line[{{625, 626}, {626, 627}, {627, 628}, {628, 625}}]}, {
       Line[{{629, 630}, {630, 631}, {631, 632}, {632, 629}}]}, {
       Line[{{633, 634}, {634, 635}, {635, 636}, {636, 633}}]}, {
       Line[{{637, 638}, {638, 639}, {639, 640}, {640, 637}}]}, {
       Line[{{641, 642}, {642, 643}, {643, 644}, {644, 641}}]}, {
       Line[{{645, 646}, {646, 647}, {647, 648}, {648, 645}}]}, {
       Line[{{649, 650}, {650, 651}, {651, 652}, {652, 649}}]}, {
       Line[{{653, 654}, {654, 655}, {655, 656}, {656, 653}}]}, {
       Line[{{657, 658}, {658, 659}, {659, 660}, {660, 657}}]}, {
       Line[{{661, 662}, {662, 663}, {663, 664}, {664, 661}}]}, {
       Line[{{665, 666}, {666, 667}, {667, 668}, {668, 665}}]}, {
       Line[{{669, 670}, {670, 671}, {671, 672}, {672, 669}}]}, {
       Line[{{673, 674}, {674, 675}, {675, 676}, {676, 673}}]}, {
       Line[{{677, 678}, {678, 679}, {679, 680}, {680, 677}}]}, {
       Line[{{681, 682}, {682, 683}, {683, 684}, {684, 681}}]}, {
       Line[{{685, 686}, {686, 687}, {687, 688}, {688, 685}}]}, {
       Line[{{689, 690}, {690, 691}, {691, 692}, {692, 689}}]}, {
       Line[{{693, 694}, {694, 695}, {695, 696}, {696, 693}}]}, {
       Line[{{697, 698}, {698, 699}, {699, 700}, {700, 697}}]}, {
       Line[{{701, 702}, {702, 703}, {703, 704}, {704, 701}}]}, {
       Line[{{705, 706}, {706, 707}, {707, 708}, {708, 705}}]}, {
       Line[{{709, 710}, {710, 711}, {711, 712}, {712, 709}}]}, {
       Line[{{713, 714}, {714, 715}, {715, 716}, {716, 713}}]}, {
       Line[{{717, 718}, {718, 719}, {719, 720}, {720, 717}}]}, {
       Line[{{721, 722}, {722, 723}, {723, 724}, {724, 721}}]}, {
       Line[{{725, 726}, {726, 727}, {727, 728}, {728, 725}}]}, {
       Line[{{729, 730}, {730, 731}, {731, 732}, {732, 729}}]}, {
       Line[{{733, 734}, {734, 735}, {735, 736}, {736, 733}}]}, {
       Line[{{737, 738}, {738, 739}, {739, 740}, {740, 737}}]}, {
       Line[{{741, 742}, {742, 743}, {743, 744}, {744, 741}}]}, {
       Line[{{745, 746}, {746, 747}, {747, 748}, {748, 745}}]}, {
       Line[{{749, 750}, {750, 751}, {751, 752}, {752, 749}}]}, {
       Line[{{753, 754}, {754, 755}, {755, 756}, {756, 753}}]}, {
       Line[{{757, 758}, {758, 759}, {759, 760}, {760, 757}}]}, {
       Line[{{761, 762}, {762, 763}, {763, 764}, {764, 761}}]}, {
       Line[{{765, 766}, {766, 767}, {767, 768}, {768, 765}}]}, {
       Line[{{769, 770}, {770, 771}, {771, 772}, {772, 769}}]}, {
       Line[{{773, 774}, {774, 775}, {775, 776}, {776, 773}}]}, {
       Line[{{777, 778}, {778, 779}, {779, 780}, {780, 777}}]}, {
       Line[{{781, 782}, {782, 783}, {783, 784}, {784, 781}}]}, {
       Line[{{785, 786}, {786, 787}, {787, 788}, {788, 785}}]}, {
       Line[{{789, 790}, {790, 791}, {791, 792}, {792, 789}}]}, {
       Line[{{793, 794}, {794, 795}, {795, 796}, {796, 793}}]}, {
       Line[{{797, 798}, {798, 799}, {799, 800}, {800, 797}}]}, 
      Method -> {
       "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
        Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
        Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
        Automatic, "CheckIntersections" -> Automatic, 
        "BoundaryNesting" -> CompressedData["
1:eJxTTMoPSmJiYGA4CcQgmoGBcRQMKgAAMnwEBA==
         "], "SeparateBoundaries" -> False, "TJunction" -> Automatic, 
        "PropagateMarkers" -> True, "ZeroTest" -> Automatic, "Hash" -> 
        5953986283859780787}]]}, 
    TagBox[GraphicsComplexBox[CompressedData["
1:eJyF2s2KIlcYh/HGgIteCI00IiKmSy2/NX5kHa8hlxCY9dzCXJqXkwvI0kUI
qf+BeqYenE3xvPzo3bycOtbXX9///NZ7e3tb/PL29t/z/39//9F+/iNt8yfm
vXt306f78O/S9OkB/Ic0fXoI/ylNnx7Bj6Xp0xP4qTR9etb2P36Vpm/6xxd8
JU2fnsMvpOnTS/hamj69gl9L06c38Ftp+vQOfi9Nnz7AH6Xp06e2v/8mTd/0
g/4sTZ+mv0jTp+mv0vRp+ps0PfcZ9xK71/67pZ/wnKdt3sf8XZo+nX0W/yFN
n84+i/+Upk9nn8WPpenT2WfxU2n6dPbZE/uOTd902WfxlTR9eg6/kKZPL+Fr
afr0Cn4tTZ/ewG+l6dM7+L00ffoAf5SmT5/avuw7Nn3TD/qzNH2a/iJNn6a/
StOn6W/S9E2XfcZzFdvOZU/4/F227bU+npy/v5gPMP+Qpk8P4T+l6dMj+LE0
fXoCP5WmT8/avuw7Nn3TZZ/FV9L06Tn8Qpo+vYSvpenTK/i1NH16A7+Vpk/v
4PfS9OkD/FGaPn1q+7Lv2PRNP+jP0vRp+os0fZr+Kk2fpr9J03Of8b2Qbe+V
T/jevbvtXNaHtz1le22AJ+cfL+ZDzD+l6dMj+LE0fXoCP5WmT8/avuw7Nn3T
ZZ/FV9L06Tn8Qpo+vYSvpenTK/i1NH16A7+Vpk/v4PfS9OkD/FGaPn1q+7Lv
2PRNP+jP0vRp+os0fZr+Kk2fpr9J03Of8V6LbfdiT/jevbvtvbIPb+csO5cN
4G1P2V4b4sn554v5CPOxNH16Aj+Vpk/P2r7sOzZ902WfxVfS9Ok5/EKaPr2E
r6Xp0yv4tTR9egO/laZP7+D30vTpA/xRmj59avuy79j0TT/oz9L0afqLNH2a
/ipNn6a/SdNzn/Fenm33+k/43r277V6sD2/vifZeOYC3c5ady4bwtqdsr43w
5Hz8Yj7BfCpNn561fdl3bPqmyz6Lr6Tp03P4hTR9eglfS9OnV/Brafr0Bn4r
TZ/ewe+l6dMH+KM0ffrU9mXfsembftCfpenT9Bdp+jT9VZo+TX+Tpuc+4++K
7Ck87+l5L8+2e/0+vN1z2b3YAN7eE+29cghv5yw7l43gbU/ZXpvgyfn0xXzW
npd9x6Zvuuyz+EqaPj2HX0jTp5fwtTR9egW/lqZPb+C30vTpHfxemj59gD9K
06dPbV/2HZu+6Qf9WZo+TX+Rpk/TX6Xp0/Q3aXruM3wX8dN3EvZdxRO+d+9s
/V2yD2/39HavP4C3ey67FxvC23uivVeO4O2cZeeyCbztKdtrs/aT87TOvzCv
upu+9Bx+0d30pZfwdXfTl17Br7ubvvQGftvd9KV38Pvupi99gD92N33pU9uX
fYemTz/oz91NX5r+0t30pemv3U1fmv7W3fQ/7TN+18Wu4NNP+N69u+nTfXj7
nZE+PYC3e3r69BDe7rno0yN4e0+kT0/g7ZxFn561ve4p+gruS+bVi/kc84U0
fXoJX0vTp1fwa2n69AZ+K02f3sHvpenTB/ijNH361PZl37Hpm37Qn6Xp0/QX
afo0/VWaPk1/k6ZvuuwzfpfKtu9an/C9e3fbd2F9ePtOwr6rGMDb74z2u+QQ
3u7p7V5/BG/3XHYvNoG390R7r5y1vZ6z7Fz2BV9J216b48n54sV8iXktTZ9e
wa+l6dMb+K00fXoHv5emTx/gj9L06VPbl33Hpm/6QX+Wpk/TX6Tp0/RXafo0
/U2aPv8f+O/3e3fXmNf3fwEHCzoj
      "], 
      {Hue[0.6, 0.3, 0.95], EdgeForm[Hue[0.6, 0.3, 0.75]], 
       TagBox[
        FilledCurveBox[{{Line[{801, 802, 803, 804}]}, {Line[{1, 2, 3, 4}]}, {
          Line[{5, 6, 7, 8}]}, {Line[{9, 10, 11, 12}]}, {
          Line[{13, 14, 15, 16}]}, {Line[{17, 18, 19, 20}]}, {
          Line[{21, 22, 23, 24}]}, {Line[{25, 26, 27, 28}]}, {
          Line[{29, 30, 31, 32}]}, {Line[{33, 34, 35, 36}]}, {
          Line[{37, 38, 39, 40}]}, {Line[{41, 42, 43, 44}]}, {
          Line[{45, 46, 47, 48}]}, {Line[{49, 50, 51, 52}]}, {
          Line[{53, 54, 55, 56}]}, {Line[{57, 58, 59, 60}]}, {
          Line[{61, 62, 63, 64}]}, {Line[{65, 66, 67, 68}]}, {
          Line[{69, 70, 71, 72}]}, {Line[{73, 74, 75, 76}]}, {
          Line[{77, 78, 79, 80}]}, {Line[{81, 82, 83, 84}]}, {
          Line[{85, 86, 87, 88}]}, {Line[{89, 90, 91, 92}]}, {
          Line[{93, 94, 95, 96}]}, {Line[{97, 98, 99, 100}]}, {
          Line[{101, 102, 103, 104}]}, {Line[{105, 106, 107, 108}]}, {
          Line[{109, 110, 111, 112}]}, {Line[{113, 114, 115, 116}]}, {
          Line[{117, 118, 119, 120}]}, {Line[{121, 122, 123, 124}]}, {
          Line[{125, 126, 127, 128}]}, {Line[{129, 130, 131, 132}]}, {
          Line[{133, 134, 135, 136}]}, {Line[{137, 138, 139, 140}]}, {
          Line[{141, 142, 143, 144}]}, {Line[{145, 146, 147, 148}]}, {
          Line[{149, 150, 151, 152}]}, {Line[{153, 154, 155, 156}]}, {
          Line[{157, 158, 159, 160}]}, {Line[{161, 162, 163, 164}]}, {
          Line[{165, 166, 167, 168}]}, {Line[{169, 170, 171, 172}]}, {
          Line[{173, 174, 175, 176}]}, {Line[{177, 178, 179, 180}]}, {
          Line[{181, 182, 183, 184}]}, {Line[{185, 186, 187, 188}]}, {
          Line[{189, 190, 191, 192}]}, {Line[{193, 194, 195, 196}]}, {
          Line[{197, 198, 199, 200}]}, {Line[{201, 202, 203, 204}]}, {
          Line[{205, 206, 207, 208}]}, {Line[{209, 210, 211, 212}]}, {
          Line[{213, 214, 215, 216}]}, {Line[{217, 218, 219, 220}]}, {
          Line[{221, 222, 223, 224}]}, {Line[{225, 226, 227, 228}]}, {
          Line[{229, 230, 231, 232}]}, {Line[{233, 234, 235, 236}]}, {
          Line[{237, 238, 239, 240}]}, {Line[{241, 242, 243, 244}]}, {
          Line[{245, 246, 247, 248}]}, {Line[{249, 250, 251, 252}]}, {
          Line[{253, 254, 255, 256}]}, {Line[{257, 258, 259, 260}]}, {
          Line[{261, 262, 263, 264}]}, {Line[{265, 266, 267, 268}]}, {
          Line[{269, 270, 271, 272}]}, {Line[{273, 274, 275, 276}]}, {
          Line[{277, 278, 279, 280}]}, {Line[{281, 282, 283, 284}]}, {
          Line[{285, 286, 287, 288}]}, {Line[{289, 290, 291, 292}]}, {
          Line[{293, 294, 295, 296}]}, {Line[{297, 298, 299, 300}]}, {
          Line[{301, 302, 303, 304}]}, {Line[{305, 306, 307, 308}]}, {
          Line[{309, 310, 311, 312}]}, {Line[{313, 314, 315, 316}]}, {
          Line[{317, 318, 319, 320}]}, {Line[{321, 322, 323, 324}]}, {
          Line[{325, 326, 327, 328}]}, {Line[{329, 330, 331, 332}]}, {
          Line[{333, 334, 335, 336}]}, {Line[{337, 338, 339, 340}]}, {
          Line[{341, 342, 343, 344}]}, {Line[{345, 346, 347, 348}]}, {
          Line[{349, 350, 351, 352}]}, {Line[{353, 354, 355, 356}]}, {
          Line[{357, 358, 359, 360}]}, {Line[{361, 362, 363, 364}]}, {
          Line[{365, 366, 367, 368}]}, {Line[{369, 370, 371, 372}]}, {
          Line[{373, 374, 375, 376}]}, {Line[{377, 378, 379, 380}]}, {
          Line[{381, 382, 383, 384}]}, {Line[{385, 386, 387, 388}]}, {
          Line[{389, 390, 391, 392}]}, {Line[{393, 394, 395, 396}]}, {
          Line[{397, 398, 399, 400}]}, {Line[{401, 402, 403, 404}]}, {
          Line[{405, 406, 407, 408}]}, {Line[{409, 410, 411, 412}]}, {
          Line[{413, 414, 415, 416}]}, {Line[{417, 418, 419, 420}]}, {
          Line[{421, 422, 423, 424}]}, {Line[{425, 426, 427, 428}]}, {
          Line[{429, 430, 431, 432}]}, {Line[{433, 434, 435, 436}]}, {
          Line[{437, 438, 439, 440}]}, {Line[{441, 442, 443, 444}]}, {
          Line[{445, 446, 447, 448}]}, {Line[{449, 450, 451, 452}]}, {
          Line[{453, 454, 455, 456}]}, {Line[{457, 458, 459, 460}]}, {
          Line[{461, 462, 463, 464}]}, {Line[{465, 466, 467, 468}]}, {
          Line[{469, 470, 471, 472}]}, {Line[{473, 474, 475, 476}]}, {
          Line[{477, 478, 479, 480}]}, {Line[{481, 482, 483, 484}]}, {
          Line[{485, 486, 487, 488}]}, {Line[{489, 490, 491, 492}]}, {
          Line[{493, 494, 495, 496}]}, {Line[{497, 498, 499, 500}]}, {
          Line[{501, 502, 503, 504}]}, {Line[{505, 506, 507, 508}]}, {
          Line[{509, 510, 511, 512}]}, {Line[{513, 514, 515, 516}]}, {
          Line[{517, 518, 519, 520}]}, {Line[{521, 522, 523, 524}]}, {
          Line[{525, 526, 527, 528}]}, {Line[{529, 530, 531, 532}]}, {
          Line[{533, 534, 535, 536}]}, {Line[{537, 538, 539, 540}]}, {
          Line[{541, 542, 543, 544}]}, {Line[{545, 546, 547, 548}]}, {
          Line[{549, 550, 551, 552}]}, {Line[{553, 554, 555, 556}]}, {
          Line[{557, 558, 559, 560}]}, {Line[{561, 562, 563, 564}]}, {
          Line[{565, 566, 567, 568}]}, {Line[{569, 570, 571, 572}]}, {
          Line[{573, 574, 575, 576}]}, {Line[{577, 578, 579, 580}]}, {
          Line[{581, 582, 583, 584}]}, {Line[{585, 586, 587, 588}]}, {
          Line[{589, 590, 591, 592}]}, {Line[{593, 594, 595, 596}]}, {
          Line[{597, 598, 599, 600}]}, {Line[{601, 602, 603, 604}]}, {
          Line[{605, 606, 607, 608}]}, {Line[{609, 610, 611, 612}]}, {
          Line[{613, 614, 615, 616}]}, {Line[{617, 618, 619, 620}]}, {
          Line[{621, 622, 623, 624}]}, {Line[{625, 626, 627, 628}]}, {
          Line[{629, 630, 631, 632}]}, {Line[{633, 634, 635, 636}]}, {
          Line[{637, 638, 639, 640}]}, {Line[{641, 642, 643, 644}]}, {
          Line[{645, 646, 647, 648}]}, {Line[{649, 650, 651, 652}]}, {
          Line[{653, 654, 655, 656}]}, {Line[{657, 658, 659, 660}]}, {
          Line[{661, 662, 663, 664}]}, {Line[{665, 666, 667, 668}]}, {
          Line[{669, 670, 671, 672}]}, {Line[{673, 674, 675, 676}]}, {
          Line[{677, 678, 679, 680}]}, {Line[{681, 682, 683, 684}]}, {
          Line[{685, 686, 687, 688}]}, {Line[{689, 690, 691, 692}]}, {
          Line[{693, 694, 695, 696}]}, {Line[{697, 698, 699, 700}]}, {
          Line[{701, 702, 703, 704}]}, {Line[{705, 706, 707, 708}]}, {
          Line[{709, 710, 711, 712}]}, {Line[{713, 714, 715, 716}]}, {
          Line[{717, 718, 719, 720}]}, {Line[{721, 722, 723, 724}]}, {
          Line[{725, 726, 727, 728}]}, {Line[{729, 730, 731, 732}]}, {
          Line[{733, 734, 735, 736}]}, {Line[{737, 738, 739, 740}]}, {
          Line[{741, 742, 743, 744}]}, {Line[{745, 746, 747, 748}]}, {
          Line[{749, 750, 751, 752}]}, {Line[{753, 754, 755, 756}]}, {
          Line[{757, 758, 759, 760}]}, {Line[{761, 762, 763, 764}]}, {
          Line[{765, 766, 767, 768}]}, {Line[{769, 770, 771, 772}]}, {
          Line[{773, 774, 775, 776}]}, {Line[{777, 778, 779, 780}]}, {
          Line[{781, 782, 783, 784}]}, {Line[{785, 786, 787, 788}]}, {
          Line[{789, 790, 791, 792}]}, {Line[{793, 794, 795, 796}]}, {
          Line[{797, 798, 799, 800}]}}],
        Annotation[#, "Geometry"]& ]}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
  ImageSize->Automatic,
  ImageSizeRaw->{400., 211.}]], "Output",
 CellChangeTimes->{3.900479275666484*^9},
 GraphicsBoxOptions->{ImageSize->400},
 CellLabel->"Out[10]=",ExpressionUUID->"f2dd4ff9-f484-4c90-9ce8-2c6604fedda3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionMeasure", "[", "%", "]"}]], "Input",
 CellLabel->"In[11]:=",
 CellID->563762390,ExpressionUUID->"ec03a4d4-cb1b-48d4-a7ee-1feeff44f16d"],

Cell[BoxData["181.`"], "Output",
 CellChangeTimes->{3.9004792784951186`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"f5292c9b-45ae-42e4-a9dc-d406f5a487ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumberForm", "[", 
  RowBox[{"181.`", ",", "16"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[12]:=",ExpressionUUID->"bc4c0902-c86f-4ca7-a0f6-18ab3910a729"],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   StyleBox["\<\"181.\"\>",
    ShowStringCharacters->False],
   181.,
   AutoDelete->True],
  NumberForm[#, 16]& ]], "Output",
 CellChangeTimes->{3.9004793567699156`*^9},
 CellLabel->
  "Out[12]//NumberForm=",ExpressionUUID->"760904e0-03c5-4b0c-9feb-\
c90348a89938"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["regular polygons", "Subsubsection",
 CellChangeTimes->{{3.900479960478776*^9, 
  3.9004799645669765`*^9}},ExpressionUUID->"06547598-2c21-4fc3-b7c7-\
8bec4ffe8b91"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RegularPolygonMesh", "[", 
   RowBox[{"n_Integer", "?", "IntegerQ"}], "]"}], ":=", 
  RowBox[{"BoundaryMeshRegion", "[", 
   RowBox[{
    RowBox[{"CirclePoints", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], ",", "n"}], "]"}], ",", 
    RowBox[{"Line", "[", 
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{"Range", "[", "n", "]"}], ",", "1"}], "]"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.900479968698507*^9, 3.9004799946853285`*^9}, {
  3.900480306777856*^9, 3.900480308522459*^9}, {3.9004803967046776`*^9, 
  3.9004804394212*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"aee21d94-be40-4723-b702-8db37077f61b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"RegularPolygonMesh", "[", "n", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "3", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900480441833905*^9, 3.900480447873705*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"7e7b6a8d-55a3-496e-855f-d3b28e975366"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 0.}, {-0.5, 
        0.8660254037844386}, {-0.5, -0.8660254037844386}}, {
         Line[{{1, 2}, {2, 3}, {3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4753652223030125889}]]}, 
      TagBox[
       GraphicsComplexBox[{{1., 0.}, {-0.5, 
        0.8660254037844386}, {-0.5, -0.8660254037844386}}, 
        {Hue[0.6, 0.3, 0.95], EdgeForm[Hue[0.6, 0.3, 0.75]], 
         TagBox[PolygonBox[{{1, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "MeshGraphics",
     AutoDelete->True,
     Editable->False,
     Selectable->False],
    DefaultBaseStyle->{
     "MeshGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]}], 
   ",", 
   GraphicsBox[
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 0.}, {0., 1.}, {-1., 0.}, {0., -1.}}, {
         Line[{{1, 2}, {2, 3}, {3, 4}, {4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6200331338147403804}]]}, 
      TagBox[GraphicsComplexBox[{{1., 0.}, {0., 1.}, {-1., 0.}, {0., -1.}}, 
        {Hue[0.6, 0.3, 0.95], EdgeForm[Hue[0.6, 0.3, 0.75]], 
         TagBox[PolygonBox[{{1, 2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "MeshGraphics",
     AutoDelete->True,
     Editable->False,
     Selectable->False],
    DefaultBaseStyle->{
     "MeshGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]}], 
   ",", 
   GraphicsBox[
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 0.}, {0.30901699437494745`, 
        0.9510565162951535}, {-0.8090169943749475, 
        0.5877852522924731}, {-0.8090169943749475, -0.5877852522924731}, {
        0.30901699437494745`, -0.9510565162951535}}, {
         Line[{{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2689443000375759341}]]}, 
      TagBox[
       GraphicsComplexBox[{{1., 0.}, {0.30901699437494745`, 
        0.9510565162951535}, {-0.8090169943749475, 
        0.5877852522924731}, {-0.8090169943749475, -0.5877852522924731}, {
        0.30901699437494745`, -0.9510565162951535}}, 
        {Hue[0.6, 0.3, 0.95], EdgeForm[Hue[0.6, 0.3, 0.75]], 
         TagBox[PolygonBox[{{1, 2, 3, 4, 5}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "MeshGraphics",
     AutoDelete->True,
     Editable->False,
     Selectable->False],
    DefaultBaseStyle->{
     "MeshGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]}], 
   ",", 
   GraphicsBox[
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 0.}, {0.5, 0.8660254037844386}, {-0.5, 
        0.8660254037844386}, {-1., 0.}, {-0.5, -0.8660254037844386}, {
        0.5, -0.8660254037844386}}, {
         Line[{{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 680035606952777843}]]}, 
      TagBox[
       GraphicsComplexBox[{{1., 0.}, {0.5, 0.8660254037844386}, {-0.5, 
        0.8660254037844386}, {-1., 0.}, {-0.5, -0.8660254037844386}, {
        0.5, -0.8660254037844386}}, 
        {Hue[0.6, 0.3, 0.95], EdgeForm[Hue[0.6, 0.3, 0.75]], 
         TagBox[PolygonBox[{{1, 2, 3, 4, 5, 6}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "MeshGraphics",
     AutoDelete->True,
     Editable->False,
     Selectable->False],
    DefaultBaseStyle->{
     "MeshGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]}], 
   ",", 
   GraphicsBox[
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 0.}, {0.6234898018587335, 
        0.7818314824680298}, {-0.2225209339563144, 
        0.9749279121818236}, {-0.9009688679024191, 
        0.4338837391175581}, {-0.9009688679024191, -0.4338837391175581}, \
{-0.2225209339563144, -0.9749279121818236}, {
        0.6234898018587335, -0.7818314824680298}}, {
         Line[{{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {7, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7057279422078814694}]]}, 
      TagBox[
       GraphicsComplexBox[{{1., 0.}, {0.6234898018587335, 
        0.7818314824680298}, {-0.2225209339563144, 
        0.9749279121818236}, {-0.9009688679024191, 
        0.4338837391175581}, {-0.9009688679024191, -0.4338837391175581}, \
{-0.2225209339563144, -0.9749279121818236}, {
        0.6234898018587335, -0.7818314824680298}}, 
        {Hue[0.6, 0.3, 0.95], EdgeForm[Hue[0.6, 0.3, 0.75]], 
         TagBox[PolygonBox[{{1, 2, 3, 4, 5, 6, 7}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "MeshGraphics",
     AutoDelete->True,
     Editable->False,
     Selectable->False],
    DefaultBaseStyle->{
     "MeshGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]}], 
   ",", 
   GraphicsBox[
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 0.}, {0.7071067811865475, 
        0.7071067811865475}, {0., 1.}, {-0.7071067811865475, 
        0.7071067811865475}, {-1., 
        0.}, {-0.7071067811865475, -0.7071067811865475}, {0., -1.}, {
        0.7071067811865475, -0.7071067811865475}}, {
         Line[{{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {7, 8}, {8, 
          1}}]}, Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1269467366687639303}]]}, 
      TagBox[
       GraphicsComplexBox[{{1., 0.}, {0.7071067811865475, 
        0.7071067811865475}, {0., 1.}, {-0.7071067811865475, 
        0.7071067811865475}, {-1., 
        0.}, {-0.7071067811865475, -0.7071067811865475}, {0., -1.}, {
        0.7071067811865475, -0.7071067811865475}}, 
        {Hue[0.6, 0.3, 0.95], EdgeForm[Hue[0.6, 0.3, 0.75]], 
         TagBox[PolygonBox[{{1, 2, 3, 4, 5, 6, 7, 8}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "MeshGraphics",
     AutoDelete->True,
     Editable->False,
     Selectable->False],
    DefaultBaseStyle->{
     "MeshGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]}], 
   ",", 
   GraphicsBox[
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 0.}, {0.766044443118978, 
        0.6427876096865393}, {0.17364817766693033`, 0.984807753012208}, {-0.5,
         0.8660254037844386}, {-0.9396926207859084, 
        0.3420201433256687}, {-0.9396926207859084, -0.3420201433256687}, \
{-0.5, -0.8660254037844386}, {0.17364817766693033`, -0.984807753012208}, {
        0.766044443118978, -0.6427876096865393}}, {
         Line[{{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {7, 8}, {8, 
          9}, {9, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6453861307432474767}]]}, 
      TagBox[
       GraphicsComplexBox[{{1., 0.}, {0.766044443118978, 
        0.6427876096865393}, {0.17364817766693033`, 0.984807753012208}, {-0.5,
         0.8660254037844386}, {-0.9396926207859084, 
        0.3420201433256687}, {-0.9396926207859084, -0.3420201433256687}, \
{-0.5, -0.8660254037844386}, {0.17364817766693033`, -0.984807753012208}, {
        0.766044443118978, -0.6427876096865393}}, 
        {Hue[0.6, 0.3, 0.95], EdgeForm[Hue[0.6, 0.3, 0.75]], 
         TagBox[PolygonBox[{{1, 2, 3, 4, 5, 6, 7, 8, 9}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "MeshGraphics",
     AutoDelete->True,
     Editable->False,
     Selectable->False],
    DefaultBaseStyle->{
     "MeshGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]}], 
   ",", 
   GraphicsBox[
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 0.}, {0.8090169943749475, 
        0.5877852522924731}, {0.30901699437494745`, 
        0.9510565162951535}, {-0.30901699437494745`, 
        0.9510565162951535}, {-0.8090169943749475, 0.5877852522924731}, {-1., 
        0.}, {-0.8090169943749475, -0.5877852522924731}, \
{-0.30901699437494745`, -0.9510565162951535}, {
        0.30901699437494745`, -0.9510565162951535}, {
        0.8090169943749475, -0.5877852522924731}}, {
         Line[{{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {7, 8}, {8, 
          9}, {9, 10}, {10, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7962149201719424215}]]}, 
      TagBox[
       GraphicsComplexBox[{{1., 0.}, {0.8090169943749475, 
        0.5877852522924731}, {0.30901699437494745`, 
        0.9510565162951535}, {-0.30901699437494745`, 
        0.9510565162951535}, {-0.8090169943749475, 0.5877852522924731}, {-1., 
        0.}, {-0.8090169943749475, -0.5877852522924731}, \
{-0.30901699437494745`, -0.9510565162951535}, {
        0.30901699437494745`, -0.9510565162951535}, {
        0.8090169943749475, -0.5877852522924731}}, 
        {Hue[0.6, 0.3, 0.95], EdgeForm[Hue[0.6, 0.3, 0.75]], 
         TagBox[PolygonBox[{{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "MeshGraphics",
     AutoDelete->True,
     Editable->False,
     Selectable->False],
    DefaultBaseStyle->{
     "MeshGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9004804482843513`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"bbc636c6-7592-4a54-94b0-2164e0f0a702"]
}, Open  ]],

Cell["The resulting regions can be used for computing:", "Text",
 CellID->82370466,ExpressionUUID->"eccd34b7-e89d-4f15-853c-40b26138a6d1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Area", "/@", 
  RowBox[{"(", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"List", 
       StyleBox[
       "\"regular polygons\"", "IconizedCustomName", StripOnInput -> False], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["List", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["8", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["14504", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    {
     BoundaryMeshRegion[{{1., 0.}, {-0.5, 
      0.8660254037844386}, {-0.5, -0.8660254037844386}}, {
       Line[{{1, 2}, {2, 3}, {3, 1}}]}, 
      Method -> {
       "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
        Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
        Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
        Automatic, "CheckIntersections" -> Automatic, 
        "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
        "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
        Automatic, "Hash" -> 4753652223030125889}], 
     BoundaryMeshRegion[{{1., 0.}, {0., 1.}, {-1., 0.}, {0., -1.}}, {
       Line[{{1, 2}, {2, 3}, {3, 4}, {4, 1}}]}, 
      Method -> {
       "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
        Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
        Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
        Automatic, "CheckIntersections" -> Automatic, 
        "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
        "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
        Automatic, "Hash" -> 6200331338147403804}], 
     BoundaryMeshRegion[{{1., 0.}, {0.30901699437494745`, 
      0.9510565162951535}, {-0.8090169943749475, 
      0.5877852522924731}, {-0.8090169943749475, -0.5877852522924731}, {
      0.30901699437494745`, -0.9510565162951535}}, {
       Line[{{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 1}}]}, 
      Method -> {
       "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
        Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
        Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
        Automatic, "CheckIntersections" -> Automatic, 
        "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
        "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
        Automatic, "Hash" -> 2689443000375759341}], 
     BoundaryMeshRegion[{{1., 0.}, {0.5, 0.8660254037844386}, {-0.5, 
      0.8660254037844386}, {-1., 0.}, {-0.5, -0.8660254037844386}, {
      0.5, -0.8660254037844386}}, {
       Line[{{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 1}}]}, 
      Method -> {
       "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
        Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
        Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
        Automatic, "CheckIntersections" -> Automatic, 
        "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
        "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
        Automatic, "Hash" -> 680035606952777843}], 
     BoundaryMeshRegion[{{1., 0.}, {0.6234898018587335, 
      0.7818314824680298}, {-0.2225209339563144, 
      0.9749279121818236}, {-0.9009688679024191, 
      0.4338837391175581}, {-0.9009688679024191, -0.4338837391175581}, \
{-0.2225209339563144, -0.9749279121818236}, {
      0.6234898018587335, -0.7818314824680298}}, {
       Line[{{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {7, 1}}]}, 
      Method -> {
       "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
        Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
        Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
        Automatic, "CheckIntersections" -> Automatic, 
        "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
        "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
        Automatic, "Hash" -> 7057279422078814694}], 
     BoundaryMeshRegion[{{1., 0.}, {0.7071067811865475, 0.7071067811865475}, {
      0., 1.}, {-0.7071067811865475, 0.7071067811865475}, {-1., 
      0.}, {-0.7071067811865475, -0.7071067811865475}, {0., -1.}, {
      0.7071067811865475, -0.7071067811865475}}, {
       Line[{{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {7, 8}, {8, 
        1}}]}, Method -> {
       "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
        Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
        Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
        Automatic, "CheckIntersections" -> Automatic, 
        "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
        "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
        Automatic, "Hash" -> 1269467366687639303}], 
     BoundaryMeshRegion[{{1., 0.}, {0.766044443118978, 0.6427876096865393}, {
      0.17364817766693033`, 0.984807753012208}, {-0.5, 
      0.8660254037844386}, {-0.9396926207859084, 
      0.3420201433256687}, {-0.9396926207859084, -0.3420201433256687}, {-0.5, \
-0.8660254037844386}, {0.17364817766693033`, -0.984807753012208}, {
      0.766044443118978, -0.6427876096865393}}, {
       Line[{{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {7, 8}, {8, 9}, {
        9, 1}}]}, 
      Method -> {
       "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
        Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
        Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
        Automatic, "CheckIntersections" -> Automatic, 
        "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
        "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
        Automatic, "Hash" -> 6453861307432474767}], 
     BoundaryMeshRegion[{{1., 0.}, {0.8090169943749475, 0.5877852522924731}, {
      0.30901699437494745`, 0.9510565162951535}, {-0.30901699437494745`, 
      0.9510565162951535}, {-0.8090169943749475, 0.5877852522924731}, {-1., 
      0.}, {-0.8090169943749475, -0.5877852522924731}, \
{-0.30901699437494745`, -0.9510565162951535}, {
      0.30901699437494745`, -0.9510565162951535}, {
      0.8090169943749475, -0.5877852522924731}}, {
       Line[{{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {7, 8}, {8, 9}, {
        9, 10}, {10, 1}}]}, 
      Method -> {
       "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
        Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
        Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
        Automatic, "CheckIntersections" -> Automatic, 
        "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
        "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
        Automatic, "Hash" -> 7962149201719424215}]},
    SelectWithContents->True,
    Selectable->False], ")"}]}]], "Input",
 CellChangeTimes->{{3.9004804646923285`*^9, 3.900480476801339*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"0dac0aa9-2125-444b-958b-5531ad786991"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.299038105676658`", ",", "2.`", ",", "2.377641290737884`", ",", 
   "2.5980762113533156`", ",", "2.736410188638104`", ",", "2.82842712474619`",
    ",", "2.892544243589427`", ",", "2.9389262614623664`"}], "}"}]], "Output",
 CellChangeTimes->{3.9004804772144775`*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"2eb7a667-0f7e-4202-ab5a-4b5c8fb38b7d"]
}, Open  ]],

Cell[TextData[{
 "The area approaches ",
 Cell[BoxData[
  FormBox["\[Pi]", TraditionalForm]], "InlineMath",ExpressionUUID->
  "e5f31cc5-046b-44f5-aeb3-39519596ffe0"],
 " as the number of sides goes to infinity:"
}], "Text",
 CellID->774295878,ExpressionUUID->"49dbd349-3018-4891-a954-05aab183c2c5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Area", "[", 
    RowBox[{"RegularPolygonMesh", "[", "n", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", 
       SuperscriptBox["10", "2"], ",", 
       SuperscriptBox["10", "3"]}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9004804963749294`*^9, 3.900480513321679*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"9eab75f5-a317-450b-a5f2-5eae6fb63d2b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.9389262614623664`", ",", "3.139525976465672`", ",", 
   "3.1415719827795137`"}], "}"}]], "Output",
 CellChangeTimes->{3.9004805138936396`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"58d9beda-a7ff-47ce-a5fb-2c05977f9567"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"n", "=", "3"}], "}"}], ",", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"k", " ", "2", 
         RowBox[{"\[Pi]", "/", "n"}]}], "]"}], ",", 
       RowBox[{"Sin", "[", 
        RowBox[{"k", " ", "2", 
         RowBox[{"\[Pi]", "/", "n"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "n"}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9004803153419547`*^9, 3.900480344162037*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"2cb4fb8b-8039-4508-9e8f-3b8ac2859129"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], ",", 
     FractionBox[
      SqrtBox["3"], "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], ",", 
     RowBox[{"-", 
      FractionBox[
       SqrtBox["3"], "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.900480327538224*^9, 3.9004803445367427`*^9}},
 CellLabel->"Out[45]=",ExpressionUUID->"d47f635c-e098-4b85-b7d8-614d2e76a960"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"n", "=", "3"}], "}"}], ",", 
   RowBox[{"Line", "[", 
    RowBox[{"Append", "[", 
     RowBox[{
      RowBox[{"Range", "[", "n", "]"}], ",", "1"}], "]"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9004803153419547`*^9, 3.90048039157589*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"f68618a4-7324-4b4a-85fe-b4c6ed1cb921"],

Cell[BoxData[
 RowBox[{"Line", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "1"}], "}"}], "]"}]], "Output",
 CellChangeTimes->{3.900480392030195*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"6ac8a596-c709-4e0e-b940-2e05d83b558c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CirclePoints", "[", "3", "]"}]], "Input",
 CellChangeTimes->{{3.90047999768645*^9, 3.900480011735148*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"bba5a261-f3de-47b0-a198-5cabbcbc8b2d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      SqrtBox["3"], "2"], ",", 
     RowBox[{"-", 
      FractionBox["1", "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       SqrtBox["3"], "2"]}], ",", 
     RowBox[{"-", 
      FractionBox["1", "2"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9004800037381163`*^9, 3.900480012404516*^9}},
 CellLabel->"Out[31]=",ExpressionUUID->"cb61981b-71d6-473c-8650-d7c56068a4ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Point", "[", 
  RowBox[{"CirclePoints", "[", "3", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9004800145916214`*^9, 3.900480018907832*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"336b4dbe-854a-4701-99fa-5a79cbc7d979"],

Cell[BoxData[
 RowBox[{"Point", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       SqrtBox["3"], "2"], ",", 
      RowBox[{"-", 
       FractionBox["1", "2"]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        SqrtBox["3"], "2"]}], ",", 
      RowBox[{"-", 
       FractionBox["1", "2"]}]}], "}"}]}], "}"}], "]"}]], "Output",
 CellChangeTimes->{3.9004800192235384`*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"bdc6c0b8-f63c-4af1-906a-ac47a35315fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Point", "[", 
   RowBox[{"CirclePoints", "[", "3", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.900480020252316*^9, 3.9004800217624655`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"78b7b411-2d23-4950-bd40-c8066f4b27c3"],

Cell[BoxData[
 GraphicsBox[
  PointBox[NCache[{{Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}, {0, 
     1}, {Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {{
     0.8660254037844386, -0.5}, {0, 
     1}, {-0.8660254037844386, -0.5}}]]]], "Output",
 CellChangeTimes->{3.900480022084366*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"e6f92dd0-6871-4aca-8065-44109d5ba74d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Point", "[", 
   RowBox[{"CirclePoints", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "\[Pi]"}], "}"}], ",", "3"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.900480020252316*^9, 3.900480054923502*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"e7470c51-eff9-44e6-997d-ed37de561cd6"],

Cell[BoxData[
 GraphicsBox[
  PointBox[NCache[{{-1, 0}, {
     Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{-1, 0}, {
     0.5, -0.8660254037844386}, {0.5, 0.8660254037844386}}]]]], "Output",
 CellChangeTimes->{3.900480055510911*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"4e30f8e1-0e68-4328-b978-621ad1a27858"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Point", "[", 
   RowBox[{"CirclePoints", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "\[Pi]"}]}], "}"}], ",", "3"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.900480020252316*^9, 3.9004800619331446`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"dfcbfe3f-74b3-410c-bf3c-aa85ac3cc433"],

Cell[BoxData[
 GraphicsBox[
  PointBox[NCache[{{-1, 0}, {
     Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{-1, 0}, {
     0.5, -0.8660254037844386}, {0.5, 0.8660254037844386}}]]]], "Output",
 CellChangeTimes->{3.9004800629763174`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"fa17cb44-00b5-467d-9817-92dafcb18b83"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Point", "[", 
   RowBox[{"CirclePoints", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox[
        RowBox[{"-", "\[Pi]"}], "2"]}], "}"}], ",", "3"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.900480020252316*^9, 3.9004800701662683`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"0cea91c9-11c6-47ae-8e80-9b3a10efa7a2"],

Cell[BoxData[
 GraphicsBox[
  PointBox[NCache[{{0, -1}, {
     Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}, {
     Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {{0, -1}, {
     0.8660254037844386, 0.5}, {-0.8660254037844386, 0.5}}]]]], "Output",
 CellChangeTimes->{3.9004800705957856`*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"95c5a6c4-083a-45f0-aac1-892af8cab916"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Point", "[", 
   RowBox[{"CirclePoints", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox[
        RowBox[{"3", "\[Pi]"}], "2"]}], "}"}], ",", "3"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.900480020252316*^9, 3.9004800778004723`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"f827e924-f326-41da-a291-677b444e1a58"],

Cell[BoxData[
 GraphicsBox[
  PointBox[NCache[{{0, -1}, {
     Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}, {
     Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {{0, -1}, {
     0.8660254037844386, 0.5}, {-0.8660254037844386, 0.5}}]]]], "Output",
 CellChangeTimes->{3.900480078162507*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"51d03a7f-4743-485c-84c0-80d906fba35d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Point", "[", 
   RowBox[{"CirclePoints", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "3"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.900480020252316*^9, 3.900480095337267*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"bd08a23e-31ff-4403-85ca-116cef6d9f2c"],

Cell[BoxData[
 GraphicsBox[
  PointBox[NCache[{{1, 0}, {
     Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
     Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}}, {{1, 0}, {-0.5, 
     0.8660254037844386}, {-0.5, -0.8660254037844386}}]]]], "Output",
 CellChangeTimes->{3.9004800960076494`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"9eb618bf-690f-48ad-9059-6c4d9a2d01ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Point", "[", 
   RowBox[{"CirclePoints", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", "3"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9004800993802414`*^9, 3.900480105387706*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"8c8af56b-251c-4711-b465-45c655227764"],

Cell[BoxData[
 GraphicsBox[
  PointBox[NCache[{{1, 0}, {
     Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
     Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}}, {{1, 0}, {-0.5, 
     0.8660254037844386}, {-0.5, -0.8660254037844386}}]]]], "Output",
 CellChangeTimes->{3.9004801057454424`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"ac9022ec-6cea-46ab-b18c-0c0826907273"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CirclePoints", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", "3"}], "]"}]], "Input",
 CellLabel->"In[41]:=",ExpressionUUID->"17ea8a5b-4f67-427f-9bb5-51f8ae2df8df"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], ",", 
     FractionBox[
      SqrtBox["3"], "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], ",", 
     RowBox[{"-", 
      FractionBox[
       SqrtBox["3"], "2"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9004801417607965`*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"6aee9f68-4182-4aa2-9744-cb8a97144c68"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CirclePoints", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", "3"}], "]"}]], "Input",
 CellLabel->"In[42]:=",ExpressionUUID->"c8413176-e478-4a49-ac00-c31dad2388f9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["5", "2"], ",", 
     RowBox[{"3", "+", 
      FractionBox[
       SqrtBox["3"], "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["5", "2"], ",", 
     RowBox[{"3", "-", 
      FractionBox[
       SqrtBox["3"], "2"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9004801520081263`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"c5e46355-c2d2-4ec5-bee7-1ec92876d91e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Point", "[", 
   RowBox[{"CirclePoints", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", "3"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9004800993802414`*^9, 3.900480129964814*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"07a02ad3-541e-48b2-9681-754aee05103e"],

Cell[BoxData[
 GraphicsBox[
  PointBox[NCache[{{4, 3}, {
     Rational[5, 2], 3 + Rational[1, 2] 3^Rational[1, 2]}, {
     Rational[5, 2], 3 + Rational[-1, 2] 3^Rational[1, 2]}}, {{4, 3}, {2.5, 
     3.8660254037844384`}, {2.5, 2.1339745962155616`}}]]]], "Output",
 CellChangeTimes->{3.9004801302587132`*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"f9ead070-ef2c-4d63-94db-85026fff4c37"]
}, Open  ]],

Cell["\<\
I didn\[CloseCurlyQuote]t realize you could specify the center of the circle, \
the radius, and the number of points.\
\>", "Text",
 CellChangeTimes->{{3.900480159713233*^9, 
  3.900480193395777*^9}},ExpressionUUID->"42c6a6d2-b848-404b-b629-\
de926b5cc0f4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CirclePoints", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", "3"}], "]"}]], "Input",
 CellLabel->"In[43]:=",ExpressionUUID->"7575a051-135b-42a5-8b2c-731b6c494704"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["5", "2"], ",", 
     RowBox[{"3", "+", 
      FractionBox[
       SqrtBox["3"], "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["5", "2"], ",", 
     RowBox[{"3", "-", 
      FractionBox[
       SqrtBox["3"], "2"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9004801666916094`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"605cde37-9a08-4dda-9597-c716f07e42ff"]
}, Open  ]],

Cell["\<\
It might be a good idea to add an option to modify the radius and the three \
sphere axis with SpherePoints and also rotate the ellipsoid and specify the \
angle to start from.\
\>", "Text",
 CellChangeTimes->{{3.9004802341781363`*^9, 
  3.9004802784571104`*^9}},ExpressionUUID->"33ade972-04fb-4aaf-bc55-\
a5d81d553cbf"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["MeshRegion  documentation Applications examples", "Section",
 CellChangeTimes->{{3.9004793809841523`*^9, 3.9004793892070074`*^9}, {
   3.9004794340586247`*^9, 3.9004794363885155`*^9}, 3.900479946203371*^9, {
   3.9004811387640247`*^9, 
   3.9004811414660025`*^9}},ExpressionUUID->"01e19e86-be8b-47e9-80b8-\
1c0daa724579"],

Cell[TextData[{
 "Convert a graph to a ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["MeshRegion"]], "paclet:ref/MeshRegion"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "08fe96c1-b51e-40b5-a0f2-2a476977f3f6"],
 ": "
}], "Text",
 CellID->125735166,ExpressionUUID->"a03e179b-55bc-4806-a80f-96f268952b23"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GraphMesh", "[", 
   RowBox[{"g_", "?", "GraphQ"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"MeshRegion", "[", 
   RowBox[{
    RowBox[{"GraphEmbedding", "[", "g", "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Line", "[", 
       RowBox[{"{", "##", "}"}], "]"}], "&"}], "@@@", 
     RowBox[{"EdgeList", "[", 
      RowBox[{"UndirectedGraph", "[", "g", "]"}], "]"}]}]}], "]"}]}]], "Input",
 CellLabel->"In[13]:=",
 CellID->72742369,ExpressionUUID->"d24569f9-5e03-4f65-a9e3-218f9d6732c5"],

Cell["Some 2D embedded graphs:", "Text",
 CellID->202301960,ExpressionUUID->"c3ded975-bcf1-4cd2-b6f1-fda93a58b38f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphMesh", "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"StarGraph", "[", "7", "]"}], ",", 
    RowBox[{"WheelGraph", "[", "7", "]"}], ",", 
    RowBox[{"CycleGraph", "[", "7", "]"}], ",", 
    RowBox[{"GridGraph", "[", 
     RowBox[{"{", 
      RowBox[{"5", ",", "5"}], "}"}], "]"}], ",", 
    RowBox[{"CompleteKaryTree", "[", "4", "]"}]}], "}"}]}]], "Input",
 CellLabel->"In[14]:=",
 CellID->712535170,ExpressionUUID->"a2081200-b503-456d-bb2e-d77621435095"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[
     DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
      TagBox[
       GraphicsComplexBox[{{0., 
        0.}, {-0.8660254037844384, -0.49999999999999933`}, {
        3.8285686989269494`*^-16, -1.}, {
        0.8660254037844389, -0.5000000000000012}, {0.8660254037844386, 
        0.4999999999999993}, {1.8369701987210297`*^-16, 
        1.}, {-0.8660254037844388, 0.5000000000000013}}, 
        {Hue[0.6, 0.3, 0.75], 
         TagBox[LineBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}}],
          Annotation[#, "Geometry"]& ], PointBox[{1, 2, 3, 4, 5, 6, 7}]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "MeshGraphics",
     AutoDelete->True,
     Editable->False,
     Selectable->False],
    DefaultBaseStyle->{
     "MeshGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]}], 
   ",", 
   GraphicsBox[
    TagBox[
     DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
      TagBox[
       GraphicsComplexBox[{{0., 
        0.}, {-0.8660254037844384, -0.49999999999999933`}, {
        3.8285686989269494`*^-16, -1.}, {
        0.8660254037844389, -0.5000000000000012}, {0.8660254037844386, 
        0.4999999999999993}, {1.8369701987210297`*^-16, 
        1.}, {-0.8660254037844388, 0.5000000000000013}}, 
        {Hue[0.6, 0.3, 0.75], 
         TagBox[
          LineBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {2, 3}, {2,
            7}, {3, 4}, {4, 5}, {5, 6}, {6, 7}}],
          Annotation[#, "Geometry"]& ], PointBox[{1, 2, 3, 4, 5, 6, 7}]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "MeshGraphics",
     AutoDelete->True,
     Editable->False,
     Selectable->False],
    DefaultBaseStyle->{
     "MeshGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]}], 
   ",", 
   GraphicsBox[
    TagBox[
     DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
      TagBox[
       GraphicsComplexBox[{{-0.7818314824680302, 
        0.6234898018587343}, {-7.044813998280222*^-16, 1.}, {
        0.7818314824680294, 0.6234898018587326}, {
        0.9749279121818237, -0.2225209339563155}, {
        0.43388373911755884`, -0.9009688679024196}, {-0.43388373911755757`, \
-0.9009688679024187}, {-0.9749279121818235, -0.22252093395631342`}}, 
        {Hue[0.6, 0.3, 0.75], 
         TagBox[
          LineBox[{{1, 2}, {1, 7}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}}],
          Annotation[#, "Geometry"]& ], PointBox[{1, 2, 3, 4, 5, 6, 7}]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "MeshGraphics",
     AutoDelete->True,
     Editable->False,
     Selectable->False],
    DefaultBaseStyle->{
     "MeshGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]}], 
   ",", 
   GraphicsBox[
    TagBox[
     DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
      TagBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQEf7LHTDA6ofA40vgAaX8QBuz4GB+w0BxpfAI0v
gqYO3R3o5qDTAmh8ETRxdH+guwPdHHRaBI3GFQ7o/kB3B8IcACReGVU=
        "], 
        {Hue[0.6, 0.3, 0.75], 
         TagBox[
          LineBox[{{1, 2}, {1, 6}, {2, 3}, {2, 7}, {3, 4}, {3, 8}, {4, 5}, {4,
            9}, {5, 10}, {6, 7}, {6, 11}, {7, 8}, {7, 12}, {8, 9}, {8, 13}, {
           9, 10}, {9, 14}, {10, 15}, {11, 12}, {11, 16}, {12, 13}, {12, 
           17}, {13, 14}, {13, 18}, {14, 15}, {14, 19}, {15, 20}, {16, 17}, {
           16, 21}, {17, 18}, {17, 22}, {18, 19}, {18, 23}, {19, 20}, {19, 
           24}, {20, 25}, {21, 22}, {22, 23}, {23, 24}, {24, 25}}],
          Annotation[#, "Geometry"]& ], 
         PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25}]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "MeshGraphics",
     AutoDelete->True,
     Editable->False,
     Selectable->False],
    DefaultBaseStyle->{
     "MeshGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]}], 
   ",", 
   GraphicsBox[
    TagBox[
     DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
      TagBox[
       GraphicsComplexBox[{{2.4748737341529163`, 2.1213203435596424`}, {
        1.0606601717798212`, 1.414213562373095}, {3.8890872965260113`, 
        1.414213562373095}, {0.35355339059327373`, 0.7071067811865475}, {
        1.7677669529663687`, 0.7071067811865475}, {3.181980515339464, 
        0.7071067811865475}, {4.596194077712559, 0.7071067811865475}, {0., 
        0.}, {0.7071067811865475, 0.}, {1.414213562373095, 0.}, {
        2.1213203435596424`, 0.}, {2.82842712474619, 0.}, {
        3.5355339059327373`, 0.}, {4.242640687119285, 0.}, {4.949747468305833,
         0.}}, 
        {Hue[0.6, 0.3, 0.75], 
         TagBox[
          LineBox[{{1, 2}, {1, 3}, {2, 4}, {2, 5}, {3, 6}, {3, 7}, {4, 8}, {4,
            9}, {5, 10}, {5, 11}, {6, 12}, {6, 13}, {7, 14}, {7, 15}}],
          Annotation[#, "Geometry"]& ], 
         PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "MeshGraphics",
     AutoDelete->True,
     Editable->False,
     Selectable->False],
    DefaultBaseStyle->{
     "MeshGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.900479463043896*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"404fd01e-ba6c-432e-addb-40b73ea5af50"]
}, Open  ]],

Cell["You can compute with these as geometric regions:", "Text",
 CellID->2947777,ExpressionUUID->"b523b065-b66a-463c-a6b2-b756dec8f71e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArcLength", "/@", "%"}]], "Input",
 CellLabel->"In[15]:=",
 CellID->941486348,ExpressionUUID->"361938ec-5386-489a-99f1-7722fced5e9a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "6.000000000000001`", ",", "12.000000000000002`", ",", "6.074372347645814`",
    ",", "40.`", ",", "13.486832980505136`"}], "}"}]], "Output",
 CellChangeTimes->{3.900479466680971*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"1ac786c7-47f8-4b26-83fa-ff0cb9ed0ddc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Round", "/@", 
  RowBox[{"ArcLength", "/@", 
   RowBox[{"GraphMesh", "/@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"StarGraph", "[", "7", "]"}], ",", 
      RowBox[{"WheelGraph", "[", "7", "]"}], ",", 
      RowBox[{"CycleGraph", "[", "7", "]"}], ",", 
      RowBox[{"GridGraph", "[", 
       RowBox[{"{", 
        RowBox[{"5", ",", "5"}], "}"}], "]"}], ",", 
      RowBox[{"CompleteKaryTree", "[", "4", "]"}]}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.900479469413928*^9, 3.9004794943580585`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"18ee06c6-72e0-409d-87cf-a75be0a45487"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6", ",", "12", ",", "6", ",", "40", ",", "13"}], "}"}]], "Output",
 CellChangeTimes->{{3.9004794772200265`*^9, 3.9004794953626795`*^9}},
 CellLabel->"Out[17]=",ExpressionUUID->"fb7831e2-1588-4c2c-ae2d-93032efb3525"]
}, Open  ]],

Cell["Some 3D embedded graphs:", "Text",
 CellID->66564705,ExpressionUUID->"b5c3c189-3133-414f-b141-a2714dd2e5c2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphMesh", "/@", 
  RowBox[{"Graph3D", "/@", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"StarGraph", "[", "11", "]"}], ",", 
     RowBox[{"CycleGraph", "[", "7", "]"}], ",", 
     RowBox[{"GridGraph", "[", 
      RowBox[{"{", 
       RowBox[{"5", ",", "5", ",", "5"}], "}"}], "]"}], ",", 
     RowBox[{"CompleteKaryTree", "[", "4", "]"}]}], "}"}]}]}]], "Input",
 CellLabel->"In[18]:=",
 CellID->735992689,ExpressionUUID->"82b0dd1f-7134-4d17-a1af-f24e09ddd25d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   Graphics3DBox[
    TagBox[
     DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 0., 0.}, {-0.22876426800705532`, 
        0.5274897364687682, -0.8181818181818181}, {-0.7336221183842188, \
-0.2384112198104379, -0.6363636363636364}, {
        0.019149427237689014`, -0.8905176748321926, -0.4545454545454546}, {
        0.8983618030058762, -0.34433400298369476`, -0.2727272727272727}, {
        0.7099741832073836, 
        0.6983353036823294, -0.09090909090909094}, {-0.3410018462556756, 
        0.9356566026274293, 0.09090909090909083}, {-0.9613957835001045, 
        0.036578438716875335`, 
        0.2727272727272727}, {-0.2892568361465141, -0.8424481660580518, 
        0.4545454545454546}, {0.7025323938216459, -0.3185742581334487, 
        0.6363636363636365}, {0.009502780819553374, 0.5748810394798126, 
        0.8181818181818181}}, 
        {Hue[0.6, 0.3, 0.75], 
         TagBox[
          Line3DBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {1, 8}, {
           1, 9}, {1, 10}, {1, 11}}],
          Annotation[#, "Geometry"]& ], 
         Point3DBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "MeshGraphics3D",
     AutoDelete->True,
     Editable->False,
     Selectable->False],
    Boxed->False,
    DefaultBaseStyle->{
     "MeshGraphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
    Lighting->{{"Ambient", 
       GrayLevel[0.45]}, {"Directional", 
       GrayLevel[0.3], 
       ImageScaled[{2, 0, 2}]}, {"Directional", 
       GrayLevel[0.33], 
       ImageScaled[{2, 2, 2}]}, {"Directional", 
       GrayLevel[0.3], 
       ImageScaled[{0, 2, 2}]}},
    Method->{"ShrinkWrap" -> True}], ",", 
   Graphics3DBox[
    TagBox[
     DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.7818314824680302, 0.6234898018587343, 
        0.}, {-7.044813998280222*^-16, 1., 0.}, {0.7818314824680294, 
        0.6234898018587326, 0.}, {0.9749279121818237, -0.2225209339563155, 
        0.}, {0.43388373911755884`, -0.9009688679024196, 
        0.}, {-0.43388373911755757`, -0.9009688679024187, 
        0.}, {-0.9749279121818235, -0.22252093395631342`, 0.}}, 
        {Hue[0.6, 0.3, 0.75], 
         TagBox[
          Line3DBox[{{1, 2}, {1, 7}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}}],
          Annotation[#, "Geometry"]& ], Point3DBox[{1, 2, 3, 4, 5, 6, 7}]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "MeshGraphics3D",
     AutoDelete->True,
     Editable->False,
     Selectable->False],
    Boxed->False,
    DefaultBaseStyle->{
     "MeshGraphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
    Lighting->{{"Ambient", 
       GrayLevel[0.45]}, {"Directional", 
       GrayLevel[0.3], 
       ImageScaled[{2, 0, 2}]}, {"Directional", 
       GrayLevel[0.33], 
       ImageScaled[{2, 2, 2}]}, {"Directional", 
       GrayLevel[0.3], 
       ImageScaled[{0, 2, 2}]}},
    Method->{"ShrinkWrap" -> True}], ",", 
   Graphics3DBox[
    TagBox[
     DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
      TagBox[GraphicsComplex3DBox[CompressedData["
1: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
        "], 
        {Hue[0.6, 0.3, 0.75], 
         TagBox[Line3DBox[CompressedData["
1:eJwVxVObKgEAANC02bVZkzHZtj3ZNbXZ3mr/+/3ueTkAfIBgFAKBAJEIxP+R
KCQWKUChUTiUEI1B49EizBeGgBF/Eb8kWByWhJXi8DgyToYn4Cl4gEAkUAly
Io2oIJFJdJKSTCEzyCoKlcKkqKk0KouqobFpWjqD/k3XMZgMDkPPZDG5TAOL
zeKxQDafbfzmfJs4XI6Zy+NaeHyelW8TCAVSgV0oEsqEDpFYBIicYolYLnZJ
FBK3VCZVSj0yQKaSeQE5oAZ8coVcI/crtIqAUqXUKYMqtUqvCqk1aoM6rNFq
QE1Ea9RGdXqdSRfTG/RmfdwAGiyGBGgErWDSaDOmTGZT2mwxZyxWS9Zqs+Zs
ebvD7rEXHE6H11F0upw+Z8nldvldZXfAXfF4PUFP1evzhryQz+8L+2r+gD/i
rweigUYwFIwFm6FwKB5qhSPhRLgdiUaSkU40Fe3G4rF0rBdPxDPxfiKZyCYG
yVQylxym8qlROpMeZ7KZSTaXhXP53DQ/KxQL1cJPsVSEivNSuVQrLcqVcr28
rDQqqypUbVbXUA1qQZtavdaubeuNeqe+a3Qb+2ar2WseWu1Wv3Vsd9qD9qnT
7Qw75+6oe+n1e+PetT/oT/q3wXAAD+7D0XA6fIxmo+d4Mv6dwJMXPIXf09n0
M/v7mf+s54v5ZrFcbJer5W61X2/Wh812c9zutqfdfnfeXw7Hw/V4Ot5O59P9
fDk/Ls/r7fp7u99e98f9/Xg+Ps+/39fr/f58/v4Byf6VgA==
           "]],
          Annotation[#, "Geometry"]& ], 
         Point3DBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
          17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
          34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
          51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 
          68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 
          85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 
          101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 
          114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125}]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "MeshGraphics3D",
     AutoDelete->True,
     Editable->False,
     Selectable->False],
    Boxed->False,
    DefaultBaseStyle->{
     "MeshGraphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
    Lighting->{{"Ambient", 
       GrayLevel[0.45]}, {"Directional", 
       GrayLevel[0.3], 
       ImageScaled[{2, 0, 2}]}, {"Directional", 
       GrayLevel[0.33], 
       ImageScaled[{2, 2, 2}]}, {"Directional", 
       GrayLevel[0.3], 
       ImageScaled[{0, 2, 2}]}},
    Method->{"ShrinkWrap" -> True}], ",", 
   Graphics3DBox[
    TagBox[
     DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
      TagBox[GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGDgB2JmIA4OWT+z6wyzw82c+2fKfjA4MEABhP/B/ox1fdq8
Bd/sYeKWn96duSnD74AuDuFfg6p/BhffzyXPcMzjD4a4m7K/8aYSTgd08WkJ
7psbkoQwxHEBXOrQ3YfqL4Q/UdWzYYhD3M+DIQ4xRwBDHBKewhjiAOL1VcY=

        "], 
        {Hue[0.6, 0.3, 0.75], 
         TagBox[
          Line3DBox[{{1, 2}, {1, 3}, {2, 4}, {2, 5}, {3, 6}, {3, 7}, {4, 8}, {
           4, 9}, {5, 10}, {5, 11}, {6, 12}, {6, 13}, {7, 14}, {7, 15}}],
          Annotation[#, "Geometry"]& ], 
         Point3DBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "MeshGraphics3D",
     AutoDelete->True,
     Editable->False,
     Selectable->False],
    Boxed->False,
    DefaultBaseStyle->{
     "MeshGraphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
    Lighting->{{"Ambient", 
       GrayLevel[0.45]}, {"Directional", 
       GrayLevel[0.3], 
       ImageScaled[{2, 0, 2}]}, {"Directional", 
       GrayLevel[0.33], 
       ImageScaled[{2, 2, 2}]}, {"Directional", 
       GrayLevel[0.3], 
       ImageScaled[{0, 2, 2}]}},
    Method->{"ShrinkWrap" -> True}]}], "}"}]], "Output",
 CellChangeTimes->{3.9004795048431425`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"4a7cf294-7729-4e99-92b0-ea69938b7821"]
}, Open  ]],

Cell["You can still compute with them:", "Text",
 CellID->433914096,ExpressionUUID->"44a49f90-c5d7-4354-bda5-fda49e569f7f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArcLength", "/@", "%"}]], "Input",
 CellLabel->"In[19]:=",
 CellID->29365702,ExpressionUUID->"c2f008e8-bac9-4144-a327-2c3d29fe7035"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10.`", ",", "6.074372347645814`", ",", "298.27611614231324`", ",", 
   "13.486832980505136`"}], "}"}]], "Output",
 CellChangeTimes->{3.9004795174238224`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"c333bbde-e03b-4a99-9352-af9c05eeedf5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Round", "/@", 
  RowBox[{"ArcLength", "/@", 
   RowBox[{"GraphMesh", "/@", 
    RowBox[{"Graph3D", "/@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"StarGraph", "[", "11", "]"}], ",", 
       RowBox[{"CycleGraph", "[", "7", "]"}], ",", 
       RowBox[{"GridGraph", "[", 
        RowBox[{"{", 
         RowBox[{"5", ",", "5", ",", "5"}], "}"}], "]"}], ",", 
       RowBox[{"CompleteKaryTree", "[", "4", "]"}]}], "}"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.9004795182835073`*^9, 3.9004795543570337`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"5b8ff66c-253f-4237-9098-c0f4c6c5a25e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", "6", ",", "298", ",", "13"}], "}"}]], "Output",
 CellChangeTimes->{{3.9004795480645094`*^9, 3.900479554580981*^9}},
 CellLabel->"Out[21]=",ExpressionUUID->"86a32c6a-7d08-44df-8672-0b7f64e161e6"]
}, Open  ]],

Cell["\<\
You can, for instance, compute the curve integral across these curves:\
\>", "Text",
 CellID->139887278,ExpressionUUID->"c485ac33-bcc4-49d6-99da-bead8bb07ecf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "2"], 
    SuperscriptBox["y", "2"], 
    SuperscriptBox["z", "2"]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}], "\[Element]", 
    Graphics3DBox[
     TagBox[
      DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
       TagBox[GraphicsComplex3DBox[CompressedData["
1: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
         "], 
         {Hue[0.6, 0.3, 0.75], 
          TagBox[Line3DBox[CompressedData["
1:eJwVxVObKgEAANC02bVZkzHZtj3ZNbXZ3mr/+/3ueTkAfIBgFAKBAJEIxP+R
KCQWKUChUTiUEI1B49EizBeGgBF/Eb8kWByWhJXi8DgyToYn4Cl4gEAkUAly
Io2oIJFJdJKSTCEzyCoKlcKkqKk0KouqobFpWjqD/k3XMZgMDkPPZDG5TAOL
zeKxQDafbfzmfJs4XI6Zy+NaeHyelW8TCAVSgV0oEsqEDpFYBIicYolYLnZJ
FBK3VCZVSj0yQKaSeQE5oAZ8coVcI/crtIqAUqXUKYMqtUqvCqk1aoM6rNFq
QE1Ea9RGdXqdSRfTG/RmfdwAGiyGBGgErWDSaDOmTGZT2mwxZyxWS9Zqs+Zs
ebvD7rEXHE6H11F0upw+Z8nldvldZXfAXfF4PUFP1evzhryQz+8L+2r+gD/i
rweigUYwFIwFm6FwKB5qhSPhRLgdiUaSkU40Fe3G4rF0rBdPxDPxfiKZyCYG
yVQylxym8qlROpMeZ7KZSTaXhXP53DQ/KxQL1cJPsVSEivNSuVQrLcqVcr28
rDQqqypUbVbXUA1qQZtavdaubeuNeqe+a3Qb+2ar2WseWu1Wv3Vsd9qD9qnT
7Qw75+6oe+n1e+PetT/oT/q3wXAAD+7D0XA6fIxmo+d4Mv6dwJMXPIXf09n0
M/v7mf+s54v5ZrFcbJer5W61X2/Wh812c9zutqfdfnfeXw7Hw/V4Ot5O59P9
fDk/Ls/r7fp7u99e98f9/Xg+Ps+/39fr/f58/v4Byf6VgA==
            "]],
           Annotation[#, "Geometry"]& ], 
          Point3DBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
           17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
            34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
           50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
            67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 
           83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,
            100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 
           113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125}]}],
        MouseAppearanceTag["LinkHand"]],
       AllowKernelInitialization->False],
      "MeshGraphics3D",
      AutoDelete->True,
      Editable->False,
      Selectable->False],
     Boxed->False,
     DefaultBaseStyle->{
      "MeshGraphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
     ImageSize->{63., Automatic},
     Lighting->{{"Ambient", 
        GrayLevel[0.45]}, {"Directional", 
        GrayLevel[0.3], 
        ImageScaled[{2, 0, 2}]}, {"Directional", 
        GrayLevel[0.33], 
        ImageScaled[{2, 2, 2}]}, {"Directional", 
        GrayLevel[0.3], 
        ImageScaled[{0, 2, 2}]}},
     Method->{"ShrinkWrap" -> True},
     ViewPoint->{1.3, -2.4, 2.},
     ViewVertical->{0., 0., 1.276989776323919}]}]}], "]"}]], "Input",
 CellLabel->"In[22]:=",
 CellID->10214033,ExpressionUUID->"c4d96bff-2935-48d5-83c1-b2ef8606ce46"],

Cell[BoxData["156061.41874553973`"], "Output",
 CellChangeTimes->{3.900479567313856*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"bd151786-983d-4e98-aa28-d3234c037e7f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Round", "[", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], 
     SuperscriptBox["y", "2"], 
     SuperscriptBox["z", "2"]}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}], "\[Element]", 
     Graphics3DBox[
      TagBox[
       DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
        TagBox[GraphicsComplex3DBox[CompressedData["
1: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
          "], 
          {Hue[0.6, 0.3, 0.75], 
           TagBox[Line3DBox[CompressedData["
1:eJwVxVObKgEAANC02bVZkzHZtj3ZNbXZ3mr/+/3ueTkAfIBgFAKBAJEIxP+R
KCQWKUChUTiUEI1B49EizBeGgBF/Eb8kWByWhJXi8DgyToYn4Cl4gEAkUAly
Io2oIJFJdJKSTCEzyCoKlcKkqKk0KouqobFpWjqD/k3XMZgMDkPPZDG5TAOL
zeKxQDafbfzmfJs4XI6Zy+NaeHyelW8TCAVSgV0oEsqEDpFYBIicYolYLnZJ
FBK3VCZVSj0yQKaSeQE5oAZ8coVcI/crtIqAUqXUKYMqtUqvCqk1aoM6rNFq
QE1Ea9RGdXqdSRfTG/RmfdwAGiyGBGgErWDSaDOmTGZT2mwxZyxWS9Zqs+Zs
ebvD7rEXHE6H11F0upw+Z8nldvldZXfAXfF4PUFP1evzhryQz+8L+2r+gD/i
rweigUYwFIwFm6FwKB5qhSPhRLgdiUaSkU40Fe3G4rF0rBdPxDPxfiKZyCYG
yVQylxym8qlROpMeZ7KZSTaXhXP53DQ/KxQL1cJPsVSEivNSuVQrLcqVcr28
rDQqqypUbVbXUA1qQZtavdaubeuNeqe+a3Qb+2ar2WseWu1Wv3Vsd9qD9qnT
7Qw75+6oe+n1e+PetT/oT/q3wXAAD+7D0XA6fIxmo+d4Mv6dwJMXPIXf09n0
M/v7mf+s54v5ZrFcbJer5W61X2/Wh812c9zutqfdfnfeXw7Hw/V4Ot5O59P9
fDk/Ls/r7fp7u99e98f9/Xg+Ps+/39fr/f58/v4Byf6VgA==
             "]],
            Annotation[#, "Geometry"]& ], 
           Point3DBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
            17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 
            33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 
            49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 
            65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 
            81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 
            97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110,
             111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 
            124, 125}]}],
         MouseAppearanceTag["LinkHand"]],
        AllowKernelInitialization->False],
       "MeshGraphics3D",
       AutoDelete->True,
       Editable->False,
       Selectable->False],
      Boxed->False,
      DefaultBaseStyle->{
       "MeshGraphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
      ImageSize->{63., Automatic},
      Lighting->{{"Ambient", 
         GrayLevel[0.45]}, {"Directional", 
         GrayLevel[0.3], 
         ImageScaled[{2, 0, 2}]}, {"Directional", 
         GrayLevel[0.33], 
         ImageScaled[{2, 2, 2}]}, {"Directional", 
         GrayLevel[0.3], 
         ImageScaled[{0, 2, 2}]}},
      Method->{"ShrinkWrap" -> True},
      ViewPoint->{1.3, -2.4, 2.},
      ViewVertical->{0., 0., 1.276989776323919}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9004795695069246`*^9, 3.9004795712008038`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"5d40bd3d-7582-4e5d-b54e-8fb63918997e"],

Cell[BoxData["156061"], "Output",
 CellChangeTimes->{3.9004795716415186`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"4426f81a-6d1f-4f1c-b5cc-eb32d6992d20"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "2"], 
    SuperscriptBox["y", "2"], 
    SuperscriptBox["z", "2"]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}], "\[Element]", 
    Graphics3DBox[
     TagBox[
      DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
       TagBox[GraphicsComplex3DBox[CompressedData["
1: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
         "], 
         {Hue[0.6, 0.3, 0.75], 
          TagBox[Line3DBox[CompressedData["
1:eJwVxVObKgEAANC02bVZkzHZtj3ZNbXZ3mr/+/3ueTkAfIBgFAKBAJEIxP+R
KCQWKUChUTiUEI1B49EizBeGgBF/Eb8kWByWhJXi8DgyToYn4Cl4gEAkUAly
Io2oIJFJdJKSTCEzyCoKlcKkqKk0KouqobFpWjqD/k3XMZgMDkPPZDG5TAOL
zeKxQDafbfzmfJs4XI6Zy+NaeHyelW8TCAVSgV0oEsqEDpFYBIicYolYLnZJ
FBK3VCZVSj0yQKaSeQE5oAZ8coVcI/crtIqAUqXUKYMqtUqvCqk1aoM6rNFq
QE1Ea9RGdXqdSRfTG/RmfdwAGiyGBGgErWDSaDOmTGZT2mwxZyxWS9Zqs+Zs
ebvD7rEXHE6H11F0upw+Z8nldvldZXfAXfF4PUFP1evzhryQz+8L+2r+gD/i
rweigUYwFIwFm6FwKB5qhSPhRLgdiUaSkU40Fe3G4rF0rBdPxDPxfiKZyCYG
yVQylxym8qlROpMeZ7KZSTaXhXP53DQ/KxQL1cJPsVSEivNSuVQrLcqVcr28
rDQqqypUbVbXUA1qQZtavdaubeuNeqe+a3Qb+2ar2WseWu1Wv3Vsd9qD9qnT
7Qw75+6oe+n1e+PetT/oT/q3wXAAD+7D0XA6fIxmo+d4Mv6dwJMXPIXf09n0
M/v7mf+s54v5ZrFcbJer5W61X2/Wh812c9zutqfdfnfeXw7Hw/V4Ot5O59P9
fDk/Ls/r7fp7u99e98f9/Xg+Ps+/39fr/f58/v4Byf6VgA==
            "]],
           Annotation[#, "Geometry"]& ], 
          Point3DBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
           17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
            34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
           50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
            67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 
           83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,
            100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 
           113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125}]}],
        MouseAppearanceTag["LinkHand"]],
       AllowKernelInitialization->False],
      "MeshGraphics3D",
      AutoDelete->True,
      Editable->False,
      Selectable->False],
     Boxed->False,
     DefaultBaseStyle->{
      "MeshGraphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
     ImageSize->{63., Automatic},
     Lighting->{{"Ambient", 
        GrayLevel[0.45]}, {"Directional", 
        GrayLevel[0.3], 
        ImageScaled[{2, 0, 2}]}, {"Directional", 
        GrayLevel[0.33], 
        ImageScaled[{2, 2, 2}]}, {"Directional", 
        GrayLevel[0.3], 
        ImageScaled[{0, 2, 2}]}},
     Method->{"ShrinkWrap" -> True},
     ViewPoint->{1.3, -2.4, 2.},
     ViewVertical->{0., 0., 1.276989776323919}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9004795695069246`*^9, 3.900479580531387*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"f3ed045a-bb90-42e0-9363-fd79e70e7783"],

Cell[BoxData["156061.41874553973`"], "Output",
 CellChangeTimes->{3.900479583157342*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"c052a5ea-4a82-464e-b9e4-81e5f71ad8f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Round", "[", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], 
     SuperscriptBox["y", "2"], 
     SuperscriptBox["z", "2"]}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}], "\[Element]", 
     Graphics3DBox[
      TagBox[
       DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
        TagBox[GraphicsComplex3DBox[CompressedData["
1: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
          "], 
          {Hue[0.6, 0.3, 0.75], 
           TagBox[Line3DBox[CompressedData["
1:eJwVxVObKgEAANC02bVZkzHZtj3ZNbXZ3mr/+/3ueTkAfIBgFAKBAJEIxP+R
KCQWKUChUTiUEI1B49EizBeGgBF/Eb8kWByWhJXi8DgyToYn4Cl4gEAkUAly
Io2oIJFJdJKSTCEzyCoKlcKkqKk0KouqobFpWjqD/k3XMZgMDkPPZDG5TAOL
zeKxQDafbfzmfJs4XI6Zy+NaeHyelW8TCAVSgV0oEsqEDpFYBIicYolYLnZJ
FBK3VCZVSj0yQKaSeQE5oAZ8coVcI/crtIqAUqXUKYMqtUqvCqk1aoM6rNFq
QE1Ea9RGdXqdSRfTG/RmfdwAGiyGBGgErWDSaDOmTGZT2mwxZyxWS9Zqs+Zs
ebvD7rEXHE6H11F0upw+Z8nldvldZXfAXfF4PUFP1evzhryQz+8L+2r+gD/i
rweigUYwFIwFm6FwKB5qhSPhRLgdiUaSkU40Fe3G4rF0rBdPxDPxfiKZyCYG
yVQylxym8qlROpMeZ7KZSTaXhXP53DQ/KxQL1cJPsVSEivNSuVQrLcqVcr28
rDQqqypUbVbXUA1qQZtavdaubeuNeqe+a3Qb+2ar2WseWu1Wv3Vsd9qD9qnT
7Qw75+6oe+n1e+PetT/oT/q3wXAAD+7D0XA6fIxmo+d4Mv6dwJMXPIXf09n0
M/v7mf+s54v5ZrFcbJer5W61X2/Wh812c9zutqfdfnfeXw7Hw/V4Ot5O59P9
fDk/Ls/r7fp7u99e98f9/Xg+Ps+/39fr/f58/v4Byf6VgA==
             "]],
            Annotation[#, "Geometry"]& ], 
           Point3DBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
            17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 
            33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 
            49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 
            65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 
            81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 
            97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110,
             111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 
            124, 125}]}],
         MouseAppearanceTag["LinkHand"]],
        AllowKernelInitialization->False],
       "MeshGraphics3D",
       AutoDelete->True,
       Editable->False,
       Selectable->False],
      Boxed->False,
      DefaultBaseStyle->{
       "MeshGraphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
      ImageSize->{63., Automatic},
      Lighting->{{"Ambient", 
         GrayLevel[0.45]}, {"Directional", 
         GrayLevel[0.3], 
         ImageScaled[{2, 0, 2}]}, {"Directional", 
         GrayLevel[0.33], 
         ImageScaled[{2, 2, 2}]}, {"Directional", 
         GrayLevel[0.3], 
         ImageScaled[{0, 2, 2}]}},
      Method->{"ShrinkWrap" -> True},
      ViewPoint->{1.3, -2.4, 2.},
      ViewVertical->{0., 0., 1.276989776323919}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9004795872133865`*^9, 3.9004795888786345`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"096ab365-f1cd-415c-b175-274898d71f22"],

Cell[BoxData["156061"], "Output",
 CellChangeTimes->{3.900479589251913*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"bb095b4f-23c8-4030-a301-fe5f0e4ac767"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LineIntegrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "2"], 
    SuperscriptBox["y", "2"], 
    SuperscriptBox["z", "2"]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}], "\[Element]", 
    RowBox[{"GraphMesh", "[", 
     RowBox[{"Graph3D", "[", 
      RowBox[{"WheelGraph", "[", "7", "]"}], "]"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900479592354738*^9, 3.9004796593306856`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"0d29c099-8272-4f1e-99ba-c26c430a9eb4"],

Cell[BoxData["Discrete`NLineIntegrateDump`$IntegrateFailed"], "Output",
 CellChangeTimes->{3.9004796597284203`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"d0da10bd-88fc-4dcc-b961-24a0feb8093b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LineIntegrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "2"], 
    SuperscriptBox["y", "2"], 
    SuperscriptBox["z", "2"]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}], "\[Element]", 
    RowBox[{"GraphMesh", "[", 
     RowBox[{"Graph3D", "[", 
      RowBox[{"WheelGraph", "[", "7", "]"}], "]"}], "]"}]}], ",", 
   RowBox[{"Direction", "->", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900479592354738*^9, 3.9004796593306856`*^9}, {
  3.9004797975699973`*^9, 3.9004798082470193`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"dcf64cb7-0a89-4497-a03c-b8462e04ffe1"],

Cell[BoxData["Discrete`NLineIntegrateDump`$IntegrateFailed"], "Output",
 CellChangeTimes->{3.900479808632336*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"e861aa09-7291-4a07-b7f8-2bf360261424"]
}, Open  ]],

Cell["Shouldn\[CloseCurlyQuote]t this work?", "Text",
 CellChangeTimes->{{3.9004796953622904`*^9, 
  3.9004796983007417`*^9}},ExpressionUUID->"564495c9-6eda-478a-9982-\
41caf040cf95"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionDimension", "[", 
  RowBox[{"GraphMesh", "[", 
   RowBox[{"Graph3D", "[", 
    RowBox[{"WheelGraph", "[", "7", "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.900479699120674*^9, 3.9004797095251255`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"6f73e84a-55a7-4a7d-9a15-903805a371ac"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.9004797102357874`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"c4177e8d-e334-4a35-affe-d7285b143388"]
}, Open  ]],

Cell["If its a line, why won\[CloseCurlyQuote]t LineIntegrate work?", "Text",
 CellChangeTimes->{{3.9004797129563646`*^9, 
  3.9004797278491087`*^9}},ExpressionUUID->"15dfd2bf-a4c1-4707-8e9f-\
281723f8481e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionQ", "[", 
  RowBox[{"GraphMesh", "[", 
   RowBox[{"Graph3D", "[", 
    RowBox[{"WheelGraph", "[", "7", "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.90047974751578*^9, 3.900479750490261*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"0661205d-0677-4fb2-8b66-d9afd7f32c29"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9004797513628664`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"a7736779-e805-462b-8db8-af03393ea346"]
}, Open  ]],

Cell[TextData[{
 "The scalar line integral is independent of the parametrization and \
orientation of the ",
 Cell[BoxData[
  StyleBox["curve", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "a90e866c-9d5d-4216-90fb-c43ce7280f06"],
 ". Any one dimensional ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["RegionQ"]], "paclet:ref/RegionQ"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "bee62335-fa4c-4eb4-b47b-fedfd03e6258"],
 " object can be used as ",
 Cell[BoxData[
  StyleBox["curve", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "e07636ad-b395-48d3-8da6-3e45298d04ef"],
 "."
}], "Notes",
 CellID->26546256,ExpressionUUID->"9a621fa1-aaf4-48e8-be83-b87a7426d244"],

Cell["\<\
It doesn\[CloseCurlyQuote]t work even though its a one-dimensional region \
with RegionQ true.\
\>", "Text",
 CellChangeTimes->{{3.9004797627056236`*^9, 
  3.900479776354257*^9}},ExpressionUUID->"571ddb48-4c74-41b2-8176-\
46747f7aae21"],

Cell["\<\
I think this is a bug. Either the documentation needs to explain why this \
doesn\[CloseCurlyQuote]t work, or it should have worked and there\
\[CloseCurlyQuote]s a bug in the kernel.\
\>", "Text",
 CellChangeTimes->{{3.9004798424750166`*^9, 
  3.9004798815381966`*^9}},ExpressionUUID->"b41946ff-a25e-4df8-b94c-\
93b48cb7965e"],

Cell[CellGroupData[{

Cell["surfaces", "Subsection",
 CellChangeTimes->{{3.9004805671080017`*^9, 
  3.9004805762836266`*^9}},ExpressionUUID->"ad13eaf8-1c03-4ddd-9e65-\
5cf426e16218"],

Cell["Create a surface mesh by extruding a 2D curve mesh:", "Text",
 CellID->81631350,ExpressionUUID->"e9f6064c-0550-49bc-8ab6-53e2a5f2f692"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GraphSurfaceMesh", "[", 
   RowBox[{"g_", "?", "GraphQ"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"RegionProduct", "[", 
   RowBox[{
    RowBox[{"MeshRegion", "[", 
     RowBox[{
      RowBox[{"GraphEmbedding", "[", "g", "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Line", "[", 
         RowBox[{"{", "##", "}"}], "]"}], "&"}], "@@@", 
       RowBox[{"EdgeList", "[", 
        RowBox[{"UndirectedGraph", "[", "g", "]"}], "]"}]}]}], "]"}], ",", 
    RowBox[{"MeshRegion", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "0", "}"}], ",", 
        RowBox[{"{", "1", "}"}]}], "}"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], "]"}]}], "]"}]}], "]"}]}]], "Input",
 CellLabel->"In[53]:=",
 CellID->73609484,ExpressionUUID->"817ab083-e012-46b6-afd2-9bf3c5cbe0c3"],

Cell["Some examples with planar layouts:", "Text",
 CellID->359901336,ExpressionUUID->"586e2c8f-9d05-466a-ab65-3fe8d44a02ed"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphSurfaceMesh", "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"StarGraph", "[", "7", "]"}], ",", 
    RowBox[{"WheelGraph", "[", "7", "]"}], ",", 
    RowBox[{"CycleGraph", "[", "7", "]"}], ",", 
    RowBox[{"GridGraph", "[", 
     RowBox[{"{", 
      RowBox[{"5", ",", "5"}], "}"}], "]"}], ",", 
    RowBox[{"CompleteKaryTree", "[", "4", "]"}]}], "}"}]}]], "Input",
 CellLabel->"In[54]:=",
 CellID->619027,ExpressionUUID->"d990c2f1-c068-41a5-a1df-bc8ba63a20e0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   Graphics3DBox[
    TagBox[
     DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
      TagBox[GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGDgA2JmBlLBB/sVPhEvqra93v/lPwjc3w+TwS7+wf7fC6vi
smm7baB8uHrs4h/s10LMsecG8x/A1WMX/2C/Cir+GWKvPUw9dvEP9lxd83ws
K1fB7IWrxy7+wX4N1F88EHvh6rGLf7AHABVpaHw=
        "], 
        {Hue[0.6, 0.3, 0.85], EdgeForm[Hue[0.6, 0.3, 0.75]], 
         TagBox[
          Polygon3DBox[{{1, 3, 4, 2}, {1, 5, 6, 2}, {1, 7, 8, 2}, {1, 9, 10, 
           2}, {1, 11, 12, 2}, {1, 13, 14, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "MeshGraphics3D",
     AutoDelete->True,
     Editable->False,
     Selectable->False],
    Boxed->False,
    DefaultBaseStyle->{
     "MeshGraphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
    Lighting->{{"Ambient", 
       GrayLevel[0.45]}, {"Directional", 
       GrayLevel[0.3], 
       ImageScaled[{2, 0, 2}]}, {"Directional", 
       GrayLevel[0.33], 
       ImageScaled[{2, 2, 2}]}, {"Directional", 
       GrayLevel[0.3], 
       ImageScaled[{0, 2, 2}]}},
    Method->{"ShrinkWrap" -> True}], ",", 
   Graphics3DBox[
    TagBox[
     DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
      TagBox[GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGDgA2JmBlLBB/sVPhEvqra93v/lPwjc3w+TwS7+wf7fC6vi
smm7baB8uHrs4h/s10LMsecG8x/A1WMX/2C/Cir+GWKvPUw9dvEP9lxd83ws
K1fB7IWrxy7+wX4N1F88EHvh6rGLf7AHABVpaHw=
        "], 
        {Hue[0.6, 0.3, 0.85], EdgeForm[Hue[0.6, 0.3, 0.75]], 
         TagBox[
          Polygon3DBox[{{1, 3, 4, 2}, {1, 5, 6, 2}, {1, 7, 8, 2}, {1, 9, 10, 
           2}, {1, 11, 12, 2}, {1, 13, 14, 2}, {3, 5, 6, 4}, {3, 13, 14, 4}, {
           5, 7, 8, 6}, {7, 9, 10, 8}, {9, 11, 12, 10}, {11, 13, 14, 12}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "MeshGraphics3D",
     AutoDelete->True,
     Editable->False,
     Selectable->False],
    Boxed->False,
    DefaultBaseStyle->{
     "MeshGraphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
    Lighting->{{"Ambient", 
       GrayLevel[0.45]}, {"Directional", 
       GrayLevel[0.3], 
       ImageScaled[{2, 0, 2}]}, {"Directional", 
       GrayLevel[0.33], 
       ImageScaled[{2, 2, 2}]}, {"Directional", 
       GrayLevel[0.3], 
       ImageScaled[{0, 2, 2}]}},
    Method->{"ShrinkWrap" -> True}], ",", 
   Graphics3DBox[
    TagBox[
     DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
      TagBox[GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGDgA2JmIPa/x1p6mOXl/htvux8t+PzYngEKsIt/sK+NvbFm
Y+LJPTA+TD128Q/27hBz7E+imY9d/IN91ssI1jlG7+1XuTI9nlB9Zj9MPXbx
D/bnVhf6Hjhy27405vTKPVfewNVjF/9gvx0ivj8XTT128Q/2GRB798ejuQe7
+Ad7AOcOh+g=
        "], 
        {Hue[0.6, 0.3, 0.85], EdgeForm[Hue[0.6, 0.3, 0.75]], 
         TagBox[
          Polygon3DBox[{{1, 3, 4, 2}, {1, 13, 14, 2}, {3, 5, 6, 4}, {5, 7, 8, 
           6}, {7, 9, 10, 8}, {9, 11, 12, 10}, {11, 13, 14, 12}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "MeshGraphics3D",
     AutoDelete->True,
     Editable->False,
     Selectable->False],
    Boxed->False,
    DefaultBaseStyle->{
     "MeshGraphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
    Lighting->{{"Ambient", 
       GrayLevel[0.45]}, {"Directional", 
       GrayLevel[0.3], 
       ImageScaled[{2, 0, 2}]}, {"Directional", 
       GrayLevel[0.33], 
       ImageScaled[{2, 2, 2}]}, {"Directional", 
       GrayLevel[0.3], 
       ImageScaled[{0, 2, 2}]}},
    Method->{"ShrinkWrap" -> True}], ",", 
   Graphics3DBox[
    TagBox[
     DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
      TagBox[GraphicsComplex3DBox[CompressedData["
1:eJx107EJwzAUBmGRNC5deIGskAWsGTJCIHVW9whO8wT5rP+BMRyH0Anp8f6+
PrfW2vP33VvNsf//E794fe4X11+CvwR/Df4a/C34G777GxPWHZ2sL9e3V65v
r1zfXnk635p07mPffe7bW9xeub69cn175el+1KR7M/bR5769xe2V69sr17dX
Hu93m/PLO+lz397i9sr17ZXr2ys/9hP4C06U
        "], 
        {Hue[0.6, 0.3, 0.85], EdgeForm[Hue[0.6, 0.3, 0.75]], 
         TagBox[
          Polygon3DBox[{{1, 3, 4, 2}, {1, 11, 12, 2}, {3, 5, 6, 4}, {3, 13, 
           14, 4}, {5, 7, 8, 6}, {5, 15, 16, 6}, {7, 9, 10, 8}, {7, 17, 18, 
           8}, {9, 19, 20, 10}, {11, 13, 14, 12}, {11, 21, 22, 12}, {13, 15, 
           16, 14}, {13, 23, 24, 14}, {15, 17, 18, 16}, {15, 25, 26, 16}, {17,
            19, 20, 18}, {17, 27, 28, 18}, {19, 29, 30, 20}, {21, 23, 24, 
           22}, {21, 31, 32, 22}, {23, 25, 26, 24}, {23, 33, 34, 24}, {25, 27,
            28, 26}, {25, 35, 36, 26}, {27, 29, 30, 28}, {27, 37, 38, 28}, {
           29, 39, 40, 30}, {31, 33, 34, 32}, {31, 41, 42, 32}, {33, 35, 36, 
           34}, {33, 43, 44, 34}, {35, 37, 38, 36}, {35, 45, 46, 36}, {37, 39,
            40, 38}, {37, 47, 48, 38}, {39, 49, 50, 40}, {41, 43, 44, 42}, {
           43, 45, 46, 44}, {45, 47, 48, 46}, {47, 49, 50, 48}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "MeshGraphics3D",
     AutoDelete->True,
     Editable->False,
     Selectable->False],
    Boxed->False,
    DefaultBaseStyle->{
     "MeshGraphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
    Lighting->{{"Ambient", 
       GrayLevel[0.45]}, {"Directional", 
       GrayLevel[0.3], 
       ImageScaled[{2, 0, 2}]}, {"Directional", 
       GrayLevel[0.33], 
       ImageScaled[{2, 2, 2}]}, {"Directional", 
       GrayLevel[0.3], 
       ImageScaled[{0, 2, 2}]}},
    Method->{"ShrinkWrap" -> True}], ",", 
   Graphics3DBox[
    TagBox[
     DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
      TagBox[GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGCQA2JmIA4OWT+z6wyzw82c+2fKfjA4MEABdvEP9hD+B/sz
1vVp8xZ8s4epxy7+wd7y07szN2X4HdDVYxeH6b8GpZ/B1WMX/2C/n0ue4ZjH
Hwz12MU/2Lsp+xtvKuF0QFePXfyD/bQE980NSUIY6rGLf4DLEwc+YLgb1b/o
4pjhjqoeXRwWX4h4hQHs4jDz2TDUYxeHhT8Phnrs4jD3COBwD7r4B3tIOhTG
UI9d/IM9ACOPu54=
        "], 
        {Hue[0.6, 0.3, 0.85], EdgeForm[Hue[0.6, 0.3, 0.75]], 
         TagBox[
          Polygon3DBox[{{1, 3, 4, 2}, {1, 5, 6, 2}, {3, 7, 8, 4}, {3, 9, 10, 
           4}, {5, 11, 12, 6}, {5, 13, 14, 6}, {7, 15, 16, 8}, {7, 17, 18, 
           8}, {9, 19, 20, 10}, {9, 21, 22, 10}, {11, 23, 24, 12}, {11, 25, 
           26, 12}, {13, 27, 28, 14}, {13, 29, 30, 14}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "MeshGraphics3D",
     AutoDelete->True,
     Editable->False,
     Selectable->False],
    Boxed->False,
    DefaultBaseStyle->{
     "MeshGraphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
    Lighting->{{"Ambient", 
       GrayLevel[0.45]}, {"Directional", 
       GrayLevel[0.3], 
       ImageScaled[{2, 0, 2}]}, {"Directional", 
       GrayLevel[0.33], 
       ImageScaled[{2, 2, 2}]}, {"Directional", 
       GrayLevel[0.3], 
       ImageScaled[{0, 2, 2}]}},
    Method->{"ShrinkWrap" -> True}]}], "}"}]], "Output",
 CellChangeTimes->{3.9004805906077414`*^9},
 Graphics3DBoxOptions->{ImageSize->150},
 CellLabel->"Out[54]=",ExpressionUUID->"acfd27c7-d0ee-4c4f-8ccd-31074d4c3d21"]
}, Open  ]],

Cell["\<\
You can compute with the resulting regions, in this case computing surface \
integrals:\
\>", "Text",
 CellID->18305579,ExpressionUUID->"b8ec6d76-a5ec-4984-ae5f-7f9ab6b8d295"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "2"], 
    SuperscriptBox["y", "2"], 
    SuperscriptBox["z", "2"]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}], "\[Element]", 
    Graphics3DBox[
     TagBox[
      DynamicModuleBox[{Typeset`mesh = HoldComplete[
        MeshRegion[CompressedData["
1:eJxTTMoPSmViYGDgA2JmBlLBB/sVPhEvqra93v/lPwjc3w+TwS7+wf7fC6vi
smm7baB8uHrs4h/s10LMsecG8x/A1WMX/2C/Cir+CWKvPUw9dvEP9lxd83ws
K1fB7IWrxy7+wX4N1F88EHvh6rGLf7AHABRxaHo=
         "], {
          
          Polygon[{{1, 3, 4, 2}, {1, 5, 6, 2}, {1, 7, 8, 2}, {1, 9, 10, 2}, {
           1, 11, 12, 2}, {1, 13, 14, 2}, {3, 5, 6, 4}, {3, 13, 14, 4}, {5, 7,
            8, 6}, {7, 9, 10, 8}, {9, 11, 12, 10}, {11, 13, 14, 12}}]}, 
         Method -> {
          "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
           Automatic, "VertexAlias" -> Identity, "CheckOrientation" -> True, 
           "CoplanarityTolerance" -> Automatic, "CheckIntersections" -> 
           Automatic, "BoundaryNesting" -> Automatic, "SeparateBoundaries" -> 
           False, "PropagateMarkers" -> True, "Hash" -> 
           5728723609251049060}]]}, 
       TagBox[GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGDgA2JmBlLBB/sVPhEvqra93v/lPwjc3w+TwS7+wf7fC6vi
smm7baB8uHrs4h/s10LMsecG8x/A1WMX/2C/Cir+CWKvPUw9dvEP9lxd83ws
K1fB7IWrxy7+wX4N1F88EHvh6rGLf7AHABRxaHo=
         "], 
         {Hue[0.6, 0.3, 0.85], EdgeForm[Hue[0.6, 0.3, 0.75]], 
          Polygon3DBox[{{1, 3, 4, 2}, {1, 5, 6, 2}, {1, 7, 8, 2}, {1, 9, 10, 
           2}, {1, 11, 12, 2}, {1, 13, 14, 2}, {3, 5, 6, 4}, {3, 13, 14, 4}, {
           5, 7, 8, 6}, {7, 9, 10, 8}, {9, 11, 12, 10}, {11, 13, 14, 12}}]}],
        MouseAppearanceTag["LinkHand"]],
       AllowKernelInitialization->False],
      "MeshGraphics",
      AutoDelete->True,
      Editable->False,
      Selectable->False],
     Boxed->False,
     DefaultBaseStyle->{
      "Graphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
     Lighting->{{"Ambient", 
        GrayLevel[0.45]}, {"Directional", 
        GrayLevel[0.3], 
        ImageScaled[{2, 0, 2}]}, {"Directional", 
        GrayLevel[0.33], 
        ImageScaled[{2, 2, 2}]}, {"Directional", 
        GrayLevel[0.3], 
        ImageScaled[{0, 2, 2}]}},
     Method->{"ShrinkWrap" -> True},
     ViewPoint->{1.2955377762022944`, -2.346700537496648, 2.0650855812158873`},
     ViewVertical->{-0.01165152650503628, 0.021908259007577535`, 
      1.9994181249902023`}]}]}], "]"}]], "Input",
 CellLabel->"In[56]:=",
 CellID->28392460,ExpressionUUID->"c064d006-2f3a-4473-b02b-175f42c787d6"],

Cell[BoxData["0.2250000000000001`"], "Output",
 CellChangeTimes->{{3.900480600136459*^9, 3.900480619046274*^9}},
 CellLabel->"Out[56]=",ExpressionUUID->"ca98c979-cedd-4c0e-901e-f6f068ff9cfc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionQ", "[", 
  Graphics3DBox[
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      MeshRegion[CompressedData["
1:eJxTTMoPSmViYGDgA2JmBlLBB/sVPhEvqra93v/lPwjc3w+TwS7+wf7fC6vi
smm7baB8uHrs4h/s10LMsecG8x/A1WMX/2C/Cir+CWKvPUw9dvEP9lxd83ws
K1fB7IWrxy7+wX4N1F88EHvh6rGLf7AHABRxaHo=
       "], {
        Polygon[{{1, 3, 4, 2}, {1, 5, 6, 2}, {1, 7, 8, 2}, {1, 9, 10, 2}, {1, 
         11, 12, 2}, {1, 13, 14, 2}, {3, 5, 6, 4}, {3, 13, 14, 4}, {5, 7, 8, 
         6}, {7, 9, 10, 8}, {9, 11, 12, 10}, {11, 13, 14, 12}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "VertexAlias" -> Identity, "CheckOrientation" -> True, 
         "CoplanarityTolerance" -> Automatic, "CheckIntersections" -> 
         Automatic, "BoundaryNesting" -> Automatic, "SeparateBoundaries" -> 
         False, "PropagateMarkers" -> True, "Hash" -> 5728723609251049060}]]}, 
     TagBox[GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGDgA2JmBlLBB/sVPhEvqra93v/lPwjc3w+TwS7+wf7fC6vi
smm7baB8uHrs4h/s10LMsecG8x/A1WMX/2C/Cir+CWKvPUw9dvEP9lxd83ws
K1fB7IWrxy7+wX4N1F88EHvh6rGLf7AHABRxaHo=
       "], 
       {Hue[0.6, 0.3, 0.85], EdgeForm[Hue[0.6, 0.3, 0.75]], 
        Polygon3DBox[{{1, 3, 4, 2}, {1, 5, 6, 2}, {1, 7, 8, 2}, {1, 9, 10, 
         2}, {1, 11, 12, 2}, {1, 13, 14, 2}, {3, 5, 6, 4}, {3, 13, 14, 4}, {5,
          7, 8, 6}, {7, 9, 10, 8}, {9, 11, 12, 10}, {11, 13, 14, 12}}]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "MeshGraphics",
    AutoDelete->True,
    Editable->False,
    Selectable->False],
   Boxed->False,
   DefaultBaseStyle->{
    "Graphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
   Lighting->{{"Ambient", 
      GrayLevel[0.45]}, {"Directional", 
      GrayLevel[0.3], 
      ImageScaled[{2, 0, 2}]}, {"Directional", 
      GrayLevel[0.33], 
      ImageScaled[{2, 2, 2}]}, {"Directional", 
      GrayLevel[0.3], 
      ImageScaled[{0, 2, 2}]}},
   Method->{"ShrinkWrap" -> True},
   ViewPoint->{1.2955377762022944`, -2.346700537496648, 2.0650855812158873`},
   ViewVertical->{-0.01165152650503628, 0.021908259007577535`, 
    1.9994181249902023`}], "]"}]], "Input",
 CellChangeTimes->{{3.9004807330861063`*^9, 3.900480741990051*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"e7d8a961-fe22-439b-95e6-7fefa4098f54"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9004807433532977`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"775e0bfc-13fa-4e81-80e8-6e459bb2d3a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionDimension", "[", 
  Graphics3DBox[
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      MeshRegion[CompressedData["
1:eJxTTMoPSmViYGDgA2JmBlLBB/sVPhEvqra93v/lPwjc3w+TwS7+wf7fC6vi
smm7baB8uHrs4h/s10LMsecG8x/A1WMX/2C/Cir+CWKvPUw9dvEP9lxd83ws
K1fB7IWrxy7+wX4N1F88EHvh6rGLf7AHABRxaHo=
       "], {
        Polygon[{{1, 3, 4, 2}, {1, 5, 6, 2}, {1, 7, 8, 2}, {1, 9, 10, 2}, {1, 
         11, 12, 2}, {1, 13, 14, 2}, {3, 5, 6, 4}, {3, 13, 14, 4}, {5, 7, 8, 
         6}, {7, 9, 10, 8}, {9, 11, 12, 10}, {11, 13, 14, 12}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "VertexAlias" -> Identity, "CheckOrientation" -> True, 
         "CoplanarityTolerance" -> Automatic, "CheckIntersections" -> 
         Automatic, "BoundaryNesting" -> Automatic, "SeparateBoundaries" -> 
         False, "PropagateMarkers" -> True, "Hash" -> 5728723609251049060}]]}, 
     TagBox[GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGDgA2JmBlLBB/sVPhEvqra93v/lPwjc3w+TwS7+wf7fC6vi
smm7baB8uHrs4h/s10LMsecG8x/A1WMX/2C/Cir+CWKvPUw9dvEP9lxd83ws
K1fB7IWrxy7+wX4N1F88EHvh6rGLf7AHABRxaHo=
       "], 
       {Hue[0.6, 0.3, 0.85], EdgeForm[Hue[0.6, 0.3, 0.75]], 
        Polygon3DBox[{{1, 3, 4, 2}, {1, 5, 6, 2}, {1, 7, 8, 2}, {1, 9, 10, 
         2}, {1, 11, 12, 2}, {1, 13, 14, 2}, {3, 5, 6, 4}, {3, 13, 14, 4}, {5,
          7, 8, 6}, {7, 9, 10, 8}, {9, 11, 12, 10}, {11, 13, 14, 12}}]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "MeshGraphics",
    AutoDelete->True,
    Editable->False,
    Selectable->False],
   Boxed->False,
   DefaultBaseStyle->{
    "Graphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
   Lighting->{{"Ambient", 
      GrayLevel[0.45]}, {"Directional", 
      GrayLevel[0.3], 
      ImageScaled[{2, 0, 2}]}, {"Directional", 
      GrayLevel[0.33], 
      ImageScaled[{2, 2, 2}]}, {"Directional", 
      GrayLevel[0.3], 
      ImageScaled[{0, 2, 2}]}},
   Method->{"ShrinkWrap" -> True},
   ViewPoint->{1.2955377762022944`, -2.346700537496648, 2.0650855812158873`},
   ViewVertical->{-0.01165152650503628, 0.021908259007577535`, 
    1.9994181249902023`}], "]"}]], "Input",
 CellChangeTimes->{{3.9004808724219966`*^9, 3.90048088903164*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"ecb7866b-a2bd-42c9-9da1-e83c7de00b4f"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.9004808894238005`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"aca134b9-ec4d-41a1-8a59-5473ded89fbc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionEmbeddingDimension", "[", 
  Graphics3DBox[
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      MeshRegion[CompressedData["
1:eJxTTMoPSmViYGDgA2JmBlLBB/sVPhEvqra93v/lPwjc3w+TwS7+wf7fC6vi
smm7baB8uHrs4h/s10LMsecG8x/A1WMX/2C/Cir+CWKvPUw9dvEP9lxd83ws
K1fB7IWrxy7+wX4N1F88EHvh6rGLf7AHABRxaHo=
       "], {
        Polygon[{{1, 3, 4, 2}, {1, 5, 6, 2}, {1, 7, 8, 2}, {1, 9, 10, 2}, {1, 
         11, 12, 2}, {1, 13, 14, 2}, {3, 5, 6, 4}, {3, 13, 14, 4}, {5, 7, 8, 
         6}, {7, 9, 10, 8}, {9, 11, 12, 10}, {11, 13, 14, 12}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "VertexAlias" -> Identity, "CheckOrientation" -> True, 
         "CoplanarityTolerance" -> Automatic, "CheckIntersections" -> 
         Automatic, "BoundaryNesting" -> Automatic, "SeparateBoundaries" -> 
         False, "PropagateMarkers" -> True, "Hash" -> 5728723609251049060}]]}, 
     TagBox[GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGDgA2JmBlLBB/sVPhEvqra93v/lPwjc3w+TwS7+wf7fC6vi
smm7baB8uHrs4h/s10LMsecG8x/A1WMX/2C/Cir+CWKvPUw9dvEP9lxd83ws
K1fB7IWrxy7+wX4N1F88EHvh6rGLf7AHABRxaHo=
       "], 
       {Hue[0.6, 0.3, 0.85], EdgeForm[Hue[0.6, 0.3, 0.75]], 
        Polygon3DBox[{{1, 3, 4, 2}, {1, 5, 6, 2}, {1, 7, 8, 2}, {1, 9, 10, 
         2}, {1, 11, 12, 2}, {1, 13, 14, 2}, {3, 5, 6, 4}, {3, 13, 14, 4}, {5,
          7, 8, 6}, {7, 9, 10, 8}, {9, 11, 12, 10}, {11, 13, 14, 12}}]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "MeshGraphics",
    AutoDelete->True,
    Editable->False,
    Selectable->False],
   Boxed->False,
   DefaultBaseStyle->{
    "Graphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
   Lighting->{{"Ambient", 
      GrayLevel[0.45]}, {"Directional", 
      GrayLevel[0.3], 
      ImageScaled[{2, 0, 2}]}, {"Directional", 
      GrayLevel[0.33], 
      ImageScaled[{2, 2, 2}]}, {"Directional", 
      GrayLevel[0.3], 
      ImageScaled[{0, 2, 2}]}},
   Method->{"ShrinkWrap" -> True},
   ViewPoint->{1.2955377762022944`, -2.346700537496648, 2.0650855812158873`},
   ViewVertical->{-0.01165152650503628, 0.021908259007577535`, 
    1.9994181249902023`}], "]"}]], "Input",
 CellChangeTimes->{{3.900480890954092*^9, 3.900480893262089*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"2f01e40f-cf17-4bf6-a86c-6962c157933a"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.9004808936457205`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"8056a679-fae0-4265-a8fc-b36646f437c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RegionEmbeddingDimension", "[", 
   Graphics3DBox[
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       MeshRegion[CompressedData["
1:eJxTTMoPSmViYGDgA2JmBlLBB/sVPhEvqra93v/lPwjc3w+TwS7+wf7fC6vi
smm7baB8uHrs4h/s10LMsecG8x/A1WMX/2C/Cir+CWKvPUw9dvEP9lxd83ws
K1fB7IWrxy7+wX4N1F88EHvh6rGLf7AHABRxaHo=
        "], {
         Polygon[{{1, 3, 4, 2}, {1, 5, 6, 2}, {1, 7, 8, 2}, {1, 9, 10, 2}, {1,
           11, 12, 2}, {1, 13, 14, 2}, {3, 5, 6, 4}, {3, 13, 14, 4}, {5, 7, 8,
           6}, {7, 9, 10, 8}, {9, 11, 12, 10}, {11, 13, 14, 12}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "VertexAlias" -> Identity, "CheckOrientation" -> True, 
          "CoplanarityTolerance" -> Automatic, "CheckIntersections" -> 
          Automatic, "BoundaryNesting" -> Automatic, "SeparateBoundaries" -> 
          False, "PropagateMarkers" -> True, "Hash" -> 
          5728723609251049060}]]}, 
      TagBox[GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGDgA2JmBlLBB/sVPhEvqra93v/lPwjc3w+TwS7+wf7fC6vi
smm7baB8uHrs4h/s10LMsecG8x/A1WMX/2C/Cir+CWKvPUw9dvEP9lxd83ws
K1fB7IWrxy7+wX4N1F88EHvh6rGLf7AHABRxaHo=
        "], 
        {Hue[0.6, 0.3, 0.85], EdgeForm[Hue[0.6, 0.3, 0.75]], 
         Polygon3DBox[{{1, 3, 4, 2}, {1, 5, 6, 2}, {1, 7, 8, 2}, {1, 9, 10, 
          2}, {1, 11, 12, 2}, {1, 13, 14, 2}, {3, 5, 6, 4}, {3, 13, 14, 4}, {
          5, 7, 8, 6}, {7, 9, 10, 8}, {9, 11, 12, 10}, {11, 13, 14, 12}}]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "MeshGraphics",
     AutoDelete->True,
     Editable->False,
     Selectable->False],
    Boxed->False,
    DefaultBaseStyle->{
     "Graphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
    Lighting->{{"Ambient", 
       GrayLevel[0.45]}, {"Directional", 
       GrayLevel[0.3], 
       ImageScaled[{2, 0, 2}]}, {"Directional", 
       GrayLevel[0.33], 
       ImageScaled[{2, 2, 2}]}, {"Directional", 
       GrayLevel[0.3], 
       ImageScaled[{0, 2, 2}]}},
    Method->{"ShrinkWrap" -> True},
    ViewPoint->{1.2955377762022944`, -2.346700537496648, 2.0650855812158873`},
    ViewVertical->{-0.01165152650503628, 0.021908259007577535`, 
     1.9994181249902023`}], "]"}], "-", 
  RowBox[{"RegionDimension", "[", 
   Graphics3DBox[
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       MeshRegion[CompressedData["
1:eJxTTMoPSmViYGDgA2JmBlLBB/sVPhEvqra93v/lPwjc3w+TwS7+wf7fC6vi
smm7baB8uHrs4h/s10LMsecG8x/A1WMX/2C/Cir+CWKvPUw9dvEP9lxd83ws
K1fB7IWrxy7+wX4N1F88EHvh6rGLf7AHABRxaHo=
        "], {
         Polygon[{{1, 3, 4, 2}, {1, 5, 6, 2}, {1, 7, 8, 2}, {1, 9, 10, 2}, {1,
           11, 12, 2}, {1, 13, 14, 2}, {3, 5, 6, 4}, {3, 13, 14, 4}, {5, 7, 8,
           6}, {7, 9, 10, 8}, {9, 11, 12, 10}, {11, 13, 14, 12}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "VertexAlias" -> Identity, "CheckOrientation" -> True, 
          "CoplanarityTolerance" -> Automatic, "CheckIntersections" -> 
          Automatic, "BoundaryNesting" -> Automatic, "SeparateBoundaries" -> 
          False, "PropagateMarkers" -> True, "Hash" -> 
          5728723609251049060}]]}, 
      TagBox[GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGDgA2JmBlLBB/sVPhEvqra93v/lPwjc3w+TwS7+wf7fC6vi
smm7baB8uHrs4h/s10LMsecG8x/A1WMX/2C/Cir+CWKvPUw9dvEP9lxd83ws
K1fB7IWrxy7+wX4N1F88EHvh6rGLf7AHABRxaHo=
        "], 
        {Hue[0.6, 0.3, 0.85], EdgeForm[Hue[0.6, 0.3, 0.75]], 
         Polygon3DBox[{{1, 3, 4, 2}, {1, 5, 6, 2}, {1, 7, 8, 2}, {1, 9, 10, 
          2}, {1, 11, 12, 2}, {1, 13, 14, 2}, {3, 5, 6, 4}, {3, 13, 14, 4}, {
          5, 7, 8, 6}, {7, 9, 10, 8}, {9, 11, 12, 10}, {11, 13, 14, 12}}]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "MeshGraphics",
     AutoDelete->True,
     Editable->False,
     Selectable->False],
    Boxed->False,
    DefaultBaseStyle->{
     "Graphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
    Lighting->{{"Ambient", 
       GrayLevel[0.45]}, {"Directional", 
       GrayLevel[0.3], 
       ImageScaled[{2, 0, 2}]}, {"Directional", 
       GrayLevel[0.33], 
       ImageScaled[{2, 2, 2}]}, {"Directional", 
       GrayLevel[0.3], 
       ImageScaled[{0, 2, 2}]}},
    Method->{"ShrinkWrap" -> True},
    ViewPoint->{1.2955377762022944`, -2.346700537496648, 2.0650855812158873`},
    ViewVertical->{-0.01165152650503628, 0.021908259007577535`, 
     1.9994181249902023`}], "]"}]}]], "Input",
 CellChangeTimes->{{3.900480890954092*^9, 3.900480901759231*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"42e0b9f4-d352-48ea-85c6-264b23972a66"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.9004809033677354`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"1dc98d3d-9e7f-4efc-bf20-49cbbb62027a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RegionEmbeddingDimension", "[", 
    Graphics3DBox[
     TagBox[
      DynamicModuleBox[{Typeset`mesh = HoldComplete[
        MeshRegion[CompressedData["
1:eJxTTMoPSmViYGDgA2JmBlLBB/sVPhEvqra93v/lPwjc3w+TwS7+wf7fC6vi
smm7baB8uHrs4h/s10LMsecG8x/A1WMX/2C/Cir+CWKvPUw9dvEP9lxd83ws
K1fB7IWrxy7+wX4N1F88EHvh6rGLf7AHABRxaHo=
         "], {
          
          Polygon[{{1, 3, 4, 2}, {1, 5, 6, 2}, {1, 7, 8, 2}, {1, 9, 10, 2}, {
           1, 11, 12, 2}, {1, 13, 14, 2}, {3, 5, 6, 4}, {3, 13, 14, 4}, {5, 7,
            8, 6}, {7, 9, 10, 8}, {9, 11, 12, 10}, {11, 13, 14, 12}}]}, 
         Method -> {
          "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
           Automatic, "VertexAlias" -> Identity, "CheckOrientation" -> True, 
           "CoplanarityTolerance" -> Automatic, "CheckIntersections" -> 
           Automatic, "BoundaryNesting" -> Automatic, "SeparateBoundaries" -> 
           False, "PropagateMarkers" -> True, "Hash" -> 
           5728723609251049060}]]}, 
       TagBox[GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGDgA2JmBlLBB/sVPhEvqra93v/lPwjc3w+TwS7+wf7fC6vi
smm7baB8uHrs4h/s10LMsecG8x/A1WMX/2C/Cir+CWKvPUw9dvEP9lxd83ws
K1fB7IWrxy7+wX4N1F88EHvh6rGLf7AHABRxaHo=
         "], 
         {Hue[0.6, 0.3, 0.85], EdgeForm[Hue[0.6, 0.3, 0.75]], 
          Polygon3DBox[{{1, 3, 4, 2}, {1, 5, 6, 2}, {1, 7, 8, 2}, {1, 9, 10, 
           2}, {1, 11, 12, 2}, {1, 13, 14, 2}, {3, 5, 6, 4}, {3, 13, 14, 4}, {
           5, 7, 8, 6}, {7, 9, 10, 8}, {9, 11, 12, 10}, {11, 13, 14, 12}}]}],
        MouseAppearanceTag["LinkHand"]],
       AllowKernelInitialization->False],
      "MeshGraphics",
      AutoDelete->True,
      Editable->False,
      Selectable->False],
     Boxed->False,
     DefaultBaseStyle->{
      "Graphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
     Lighting->{{"Ambient", 
        GrayLevel[0.45]}, {"Directional", 
        GrayLevel[0.3], 
        ImageScaled[{2, 0, 2}]}, {"Directional", 
        GrayLevel[0.33], 
        ImageScaled[{2, 2, 2}]}, {"Directional", 
        GrayLevel[0.3], 
        ImageScaled[{0, 2, 2}]}},
     Method->{"ShrinkWrap" -> True},
     ViewPoint->{1.2955377762022944`, -2.346700537496648, 2.0650855812158873`},
     ViewVertical->{-0.01165152650503628, 0.021908259007577535`, 
      1.9994181249902023`}], "]"}], "-", 
   RowBox[{"RegionDimension", "[", 
    Graphics3DBox[
     TagBox[
      DynamicModuleBox[{Typeset`mesh = HoldComplete[
        MeshRegion[CompressedData["
1:eJxTTMoPSmViYGDgA2JmBlLBB/sVPhEvqra93v/lPwjc3w+TwS7+wf7fC6vi
smm7baB8uHrs4h/s10LMsecG8x/A1WMX/2C/Cir+CWKvPUw9dvEP9lxd83ws
K1fB7IWrxy7+wX4N1F88EHvh6rGLf7AHABRxaHo=
         "], {
          
          Polygon[{{1, 3, 4, 2}, {1, 5, 6, 2}, {1, 7, 8, 2}, {1, 9, 10, 2}, {
           1, 11, 12, 2}, {1, 13, 14, 2}, {3, 5, 6, 4}, {3, 13, 14, 4}, {5, 7,
            8, 6}, {7, 9, 10, 8}, {9, 11, 12, 10}, {11, 13, 14, 12}}]}, 
         Method -> {
          "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
           Automatic, "VertexAlias" -> Identity, "CheckOrientation" -> True, 
           "CoplanarityTolerance" -> Automatic, "CheckIntersections" -> 
           Automatic, "BoundaryNesting" -> Automatic, "SeparateBoundaries" -> 
           False, "PropagateMarkers" -> True, "Hash" -> 
           5728723609251049060}]]}, 
       TagBox[GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGDgA2JmBlLBB/sVPhEvqra93v/lPwjc3w+TwS7+wf7fC6vi
smm7baB8uHrs4h/s10LMsecG8x/A1WMX/2C/Cir+CWKvPUw9dvEP9lxd83ws
K1fB7IWrxy7+wX4N1F88EHvh6rGLf7AHABRxaHo=
         "], 
         {Hue[0.6, 0.3, 0.85], EdgeForm[Hue[0.6, 0.3, 0.75]], 
          Polygon3DBox[{{1, 3, 4, 2}, {1, 5, 6, 2}, {1, 7, 8, 2}, {1, 9, 10, 
           2}, {1, 11, 12, 2}, {1, 13, 14, 2}, {3, 5, 6, 4}, {3, 13, 14, 4}, {
           5, 7, 8, 6}, {7, 9, 10, 8}, {9, 11, 12, 10}, {11, 13, 14, 12}}]}],
        MouseAppearanceTag["LinkHand"]],
       AllowKernelInitialization->False],
      "MeshGraphics",
      AutoDelete->True,
      Editable->False,
      Selectable->False],
     Boxed->False,
     DefaultBaseStyle->{
      "Graphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
     Lighting->{{"Ambient", 
        GrayLevel[0.45]}, {"Directional", 
        GrayLevel[0.3], 
        ImageScaled[{2, 0, 2}]}, {"Directional", 
        GrayLevel[0.33], 
        ImageScaled[{2, 2, 2}]}, {"Directional", 
        GrayLevel[0.3], 
        ImageScaled[{0, 2, 2}]}},
     Method->{"ShrinkWrap" -> True},
     ViewPoint->{1.2955377762022944`, -2.346700537496648, 2.0650855812158873`},
     ViewVertical->{-0.01165152650503628, 0.021908259007577535`, 
      1.9994181249902023`}], "]"}]}], "===", "1"}]], "Input",
 CellChangeTimes->{{3.900480890954092*^9, 3.900480907021578*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"c7850ad2-2613-41e9-857e-4f5c5e0d9d4e"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9004809073973*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"f04a2984-302c-49d4-9bd5-8d37425d75a9"]
}, Open  ]],

Cell["Why does this not evaluate?", "Text",
 CellChangeTimes->{{3.900480780124216*^9, 
  3.9004807855624356`*^9}},ExpressionUUID->"7bf996a9-d07d-477d-b35c-\
14b341edf0f7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SurfaceIntegrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "2"], 
    SuperscriptBox["y", "2"], 
    SuperscriptBox["z", "2"]}], ",", 
   Graphics3DBox[
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       MeshRegion[CompressedData["
1:eJxTTMoPSmViYGDgA2JmBlLBB/sVPhEvqra93v/lPwjc3w+TwS7+wf7fC6vi
smm7baB8uHrs4h/s10LMsecG8x/A1WMX/2C/Cir+CWKvPUw9dvEP9lxd83ws
K1fB7IWrxy7+wX4N1F88EHvh6rGLf7AHABRxaHo=
        "], {
         Polygon[{{1, 3, 4, 2}, {1, 5, 6, 2}, {1, 7, 8, 2}, {1, 9, 10, 2}, {1,
           11, 12, 2}, {1, 13, 14, 2}, {3, 5, 6, 4}, {3, 13, 14, 4}, {5, 7, 8,
           6}, {7, 9, 10, 8}, {9, 11, 12, 10}, {11, 13, 14, 12}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "VertexAlias" -> Identity, "CheckOrientation" -> True, 
          "CoplanarityTolerance" -> Automatic, "CheckIntersections" -> 
          Automatic, "BoundaryNesting" -> Automatic, "SeparateBoundaries" -> 
          False, "PropagateMarkers" -> True, "Hash" -> 
          5728723609251049060}]]}, 
      TagBox[GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGDgA2JmBlLBB/sVPhEvqra93v/lPwjc3w+TwS7+wf7fC6vi
smm7baB8uHrs4h/s10LMsecG8x/A1WMX/2C/Cir+CWKvPUw9dvEP9lxd83ws
K1fB7IWrxy7+wX4N1F88EHvh6rGLf7AHABRxaHo=
        "], 
        {Hue[0.6, 0.3, 0.85], EdgeForm[Hue[0.6, 0.3, 0.75]], 
         Polygon3DBox[{{1, 3, 4, 2}, {1, 5, 6, 2}, {1, 7, 8, 2}, {1, 9, 10, 
          2}, {1, 11, 12, 2}, {1, 13, 14, 2}, {3, 5, 6, 4}, {3, 13, 14, 4}, {
          5, 7, 8, 6}, {7, 9, 10, 8}, {9, 11, 12, 10}, {11, 13, 14, 12}}]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "MeshGraphics",
     AutoDelete->True,
     Editable->False,
     Selectable->False],
    Boxed->False,
    DefaultBaseStyle->{
     "Graphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
    Lighting->{{"Ambient", 
       GrayLevel[0.45]}, {"Directional", 
       GrayLevel[0.3], 
       ImageScaled[{2, 0, 2}]}, {"Directional", 
       GrayLevel[0.33], 
       ImageScaled[{2, 2, 2}]}, {"Directional", 
       GrayLevel[0.3], 
       ImageScaled[{0, 2, 2}]}},
    Method->{"ShrinkWrap" -> True},
    ViewPoint->{1.2955377762022944`, -2.346700537496648, 2.0650855812158873`},
    ViewVertical->{-0.01165152650503628, 0.021908259007577535`, 
     1.9994181249902023`}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900480762668949*^9, 3.900480771708704*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"d585d042-78be-4697-ae83-cc9ff56adb02"],

Cell[BoxData[
 RowBox[{"SurfaceIntegrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "2"], " ", 
    SuperscriptBox["y", "2"], " ", 
    SuperscriptBox["z", "2"]}], ",", 
   Graphics3DBox[
    TagBox[
     DynamicModuleBox[{Typeset`mesh = {
      MeshRegion, {
       Method -> {
         "CheckOrientation" -> True, "SeparateBoundaries" -> False}}}}, 
      TagBox[GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGDgA2JmBlLBB/sVPhEvqra93v/lPwjc3w+TwS7+wf7fC6vi
smm7baB8uHrs4h/s10LMsecG8x/A1WMX/2C/Cir+CWKvPUw9dvEP9lxd83ws
K1fB7IWrxy7+wX4N1F88EHvh6rGLf7AHABRxaHo=
        "], 
        {Hue[0.6, 0.3, 0.85], EdgeForm[Hue[0.6, 0.3, 0.75]], 
         TagBox[
          Polygon3DBox[{{1, 3, 4, 2}, {1, 5, 6, 2}, {1, 7, 8, 2}, {1, 9, 10, 
           2}, {1, 11, 12, 2}, {1, 13, 14, 2}, {3, 5, 6, 4}, {3, 13, 14, 4}, {
           5, 7, 8, 6}, {7, 9, 10, 8}, {9, 11, 12, 10}, {11, 13, 14, 12}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "MeshGraphics3D",
     AutoDelete->True,
     Editable->False,
     Selectable->False],
    Boxed->False,
    DefaultBaseStyle->{
     "MeshGraphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
    Lighting->{{"Ambient", 
       GrayLevel[0.45]}, {"Directional", 
       GrayLevel[0.3], 
       ImageScaled[{2, 0, 2}]}, {"Directional", 
       GrayLevel[0.33], 
       ImageScaled[{2, 2, 2}]}, {"Directional", 
       GrayLevel[0.3], 
       ImageScaled[{0, 2, 2}]}},
    Method->{"ShrinkWrap" -> True}]}], "]"}]], "Output",
 CellChangeTimes->{3.9004807722523394`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"3e1daf4c-fcf4-466b-9bf5-8736ec627b4a"]
}, Open  ]],

Cell["This is a bug.", "Text",
 CellChangeTimes->{{3.900481041830955*^9, 
  3.90048104435982*^9}},ExpressionUUID->"b8cd40df-4ad6-4a18-ad51-\
855879dff11c"],

Cell[TextData[{
 "The scalar surface integral is independent of the parametrization and \
orientation of the ",
 Cell[BoxData[
  StyleBox["surface", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "d735e626-9592-4fa2-b967-964ab6ec67c6"],
 ". Any ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "-", "1"}], TraditionalForm]], "InlineMath",ExpressionUUID->
  "122abe22-e74f-422c-8b7e-b4fdef4a38a6"],
 " dimensional ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["RegionQ"]], "paclet:ref/RegionQ"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "8d892fae-1027-4ddb-bfce-ba00bf882c93"],
 " object in ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalR]", "n"], TraditionalForm]], 
  "InlineMath",ExpressionUUID->"ea58eedf-bc98-435e-8df9-42a43e152eb7"],
 " can be use for the ",
 Cell[BoxData[
  StyleBox["surface", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "a4d486f6-e53e-4a8e-88d8-355bd8d59724"],
 ". "
}], "Notes",
 CellID->352021533,ExpressionUUID->"9d7c4fa9-6837-4cea-a0de-268d6e44fee3"],

Cell[TextData[{
 "Directly generate a rectangular grid mesh. Here ",
 Cell[BoxData["IndexFlatten"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "27942a25-a630-45b9-9451-d390de6404eb"],
 " flattens out the position index in the same way that ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Flatten"]], "paclet:ref/Flatten"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "7a2bd867-64a3-4f6a-ad7f-b9fdab8b17ec"],
 " would flatten it: "
}], "Text",
 CellChangeTimes->{{3.9004810659248734`*^9, 3.9004810677872906`*^9}},
 CellID->549932073,ExpressionUUID->"9b8ac048-9b87-4aab-9799-3ad98bdf3a7a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IndexFlatten", "[", 
   RowBox[{"i_List", ",", "d_List"}], "]"}], ":=", 
  RowBox[{"1", "+", 
   RowBox[{
    RowBox[{"FoldList", "[", 
     RowBox[{"Times", ",", "1", ",", 
      RowBox[{"Most", "[", 
       RowBox[{"Reverse", "[", "d", "]"}], "]"}]}], "]"}], ".", 
    RowBox[{"Reverse", "[", 
     RowBox[{"(", 
      RowBox[{"i", "-", "1"}], ")"}], "]"}]}]}]}]], "Input",
 CellLabel->"In[7]:=",
 CellID->38318440,ExpressionUUID->"f89275af-37b3-4d12-9c5c-ebe3c579c919"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GridMesh", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"l1_", ",", "l2_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"u1_", ",", "u2_"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k1_", ",", "k2_"}], "}"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pa", ",", "ia", ",", "re"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pa", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "l1", ",", "u1", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"u1", "-", "l1"}], ")"}], "/", "k1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "l2", ",", "u2", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"u2", "-", "l2"}], ")"}], "/", "k2"}]}], "}"}]}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"re", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ia", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"IndexFlatten", "[", 
           RowBox[{"#", ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"k1", ",", "k2"}], "}"}], "+", "1"}]}], "]"}], "&"}], "/@", 
         RowBox[{
          RowBox[{"TranslationTransform", "[", 
           RowBox[{"{", 
            RowBox[{"dx", ",", "dy"}], "}"}], "]"}], "[", "re", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"dx", ",", "0", ",", 
          RowBox[{"k1", "-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"dy", ",", "0", ",", 
          RowBox[{"k2", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"MeshRegion", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"pa", ",", "1"}], "]"}], ",", 
       RowBox[{"Polygon", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{"ia", ",", "1"}], "]"}], "]"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->"In[8]:=",
 CellID->226025404,ExpressionUUID->"47a87a0a-f5e8-48de-bee6-f925649bcec2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GridMesh", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[9]:=",
 CellID->140630530,ExpressionUUID->"1582c7c0-f065-453f-ab92-ce89a9109de7"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
    TagBox[
     GraphicsComplexBox[{{0., 0.}, {0., 0.3333333333333333}, {0., 
      0.6666666666666666}, {0., 1.}, {0.3333333333333333, 0.}, {
      0.3333333333333333, 0.3333333333333333}, {0.3333333333333333, 
      0.6666666666666666}, {0.3333333333333333, 1.}, {0.6666666666666666, 
      0.}, {0.6666666666666666, 0.3333333333333333}, {0.6666666666666666, 
      0.6666666666666666}, {0.6666666666666666, 1.}, {1., 0.}, {1., 
      0.3333333333333333}, {1., 0.6666666666666666}, {1., 1.}}, 
      {Hue[0.6, 0.3, 0.95], EdgeForm[Hue[0.6, 0.3, 0.75]], 
       TagBox[
        PolygonBox[{{1, 5, 6, 2}, {2, 6, 7, 3}, {3, 7, 8, 4}, {5, 9, 10, 6}, {
         6, 10, 11, 7}, {7, 11, 12, 8}, {9, 13, 14, 10}, {10, 14, 15, 11}, {
         11, 15, 16, 12}}],
        Annotation[#, "Geometry"]& ]}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> 
    Hue[0.1, 1, 0.7]}]], "Output",
 CellChangeTimes->{3.9004810800284824`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"de6d88c4-a140-44ae-bcbf-15ee2bfcd9a2"]
}, Open  ]],

Cell["\<\
Alternatively, generate the same mesh region as the product of 1D meshes:\
\>", "Text",
 CellID->82269687,ExpressionUUID->"a2dd5220-0c95-4432-9ab4-d096ebaeb78b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mr1d", "=", 
  RowBox[{"MeshRegion", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "/", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "/", "3"}], "}"}], ",", 
      RowBox[{"{", "1", "}"}]}], "}"}], ",", 
    RowBox[{"Line", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "]"}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[10]:=",
 CellID->19291400,ExpressionUUID->"c8e11bf0-dfb0-4b07-8d84-1cb57f04c6f4"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = HoldComplete[
     MeshRegion[{{0.}, {0.3333333333333333}, {0.6666666666666666}, {1.}}, {
       Line[{{1, 2}, {2, 3}, {3, 4}}]}, 
      Method -> {
       "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
        Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
        Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
        Automatic, "CheckIntersections" -> Automatic, "BoundaryNesting" -> 
        Automatic, "SeparateBoundaries" -> Automatic, "TJunction" -> 
        Automatic, "PropagateMarkers" -> True, "ZeroTest" -> Automatic, 
        "Hash" -> 8277933014117925027}]]}, 
    TagBox[
     GraphicsComplexBox[{{0., 0.}, {0.3333333333333333, 0.}, {
      0.6666666666666666, 0.}, {1., 0.}}, 
      {Hue[0.6, 0.3, 0.75], 
       TagBox[LineBox[{{1, 2}, {2, 3}, {3, 4}}],
        Annotation[#, "Geometry"]& ], PointBox[{1, 2, 3, 4}]}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  AspectRatio->0.0618034,
  AxesOrigin->{Automatic, 0},
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
  PlotRange->{{0., 1.}, {0, All}},
  PlotRangePadding->{{
     Scaled[0.1], 
     Scaled[0.1]}, {0, 1}}]], "Output",
 CellChangeTimes->{3.900481088942474*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"beafd388-4379-400d-bc63-710156d8b8e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionProduct", "[", 
  RowBox[{"mr1d", ",", "mr1d"}], "]"}]], "Input",
 CellLabel->"In[11]:=",
 CellID->84215886,ExpressionUUID->"d3ea3f38-b5a8-43c9-8b10-56a4518b3404"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
    TagBox[
     GraphicsComplexBox[{{0., 0.}, {0., 0.3333333333333333}, {0., 
      0.6666666666666666}, {0., 1.}, {0.3333333333333333, 0.}, {
      0.3333333333333333, 0.3333333333333333}, {0.3333333333333333, 
      0.6666666666666666}, {0.3333333333333333, 1.}, {0.6666666666666666, 
      0.}, {0.6666666666666666, 0.3333333333333333}, {0.6666666666666666, 
      0.6666666666666666}, {0.6666666666666666, 1.}, {1., 0.}, {1., 
      0.3333333333333333}, {1., 0.6666666666666666}, {1., 1.}}, 
      {Hue[0.6, 0.3, 0.95], EdgeForm[Hue[0.6, 0.3, 0.75]], 
       TagBox[
        PolygonBox[{{1, 5, 6, 2}, {2, 6, 7, 3}, {3, 7, 8, 4}, {5, 9, 10, 6}, {
         6, 10, 11, 7}, {7, 11, 12, 8}, {9, 13, 14, 10}, {10, 14, 15, 11}, {
         11, 15, 16, 12}}],
        Annotation[#, "Geometry"]& ]}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> 
    Hue[0.1, 1, 0.7]}]], "Output",
 CellChangeTimes->{3.9004810903511395`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"dbf6c60e-d6f4-4a90-8726-753536007d4e"]
}, Open  ]],

Cell["\<\
Generalize the direct method above to generate a mesh region corresponding to \
a pattern matrix:\
\>", "Text",
 CellID->553981066,ExpressionUUID->"300efd86-2f25-4002-aab9-3a47ba9cf760"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IndexFlatten", "[", 
   RowBox[{"i_List", ",", "d_List"}], "]"}], ":=", 
  RowBox[{"1", "+", 
   RowBox[{
    RowBox[{"FoldList", "[", 
     RowBox[{"Times", ",", "1", ",", 
      RowBox[{"Most", "[", 
       RowBox[{"Reverse", "[", "d", "]"}], "]"}]}], "]"}], ".", 
    RowBox[{"Reverse", "[", 
     RowBox[{"(", 
      RowBox[{"i", "-", "1"}], ")"}], "]"}]}]}]}]], "Input",
 CellLabel->"In[12]:=",
 CellID->178897298,ExpressionUUID->"aa324e1e-eb41-474e-a056-8b7576c94dc5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PatternGridMesh", "[", "a_List", "]"}], "/;", 
   RowBox[{"MatrixQ", "[", "a", "]"}]}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"m", ",", "n", ",", "pa", ",", "ia", ",", "re"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"m", ",", "n"}], "}"}], "=", 
      RowBox[{"Dimensions", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"pa", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "m"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "0", ",", "n"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"re", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ia", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"IndexFlatten", "[", 
           RowBox[{"#", ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"m", ",", "n"}], "}"}], "+", "1"}]}], "]"}], "&"}], "/@", 
         RowBox[{
          RowBox[{"TranslationTransform", "[", 
           RowBox[{"ind", "-", "1"}], "]"}], "[", "re", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"ind", ",", 
          RowBox[{"Position", "[", 
           RowBox[{"a", ",", "1"}], "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"MeshRegion", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"pa", ",", "1"}], "]"}], ",", 
       RowBox[{"Polygon", "[", "ia", "]"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->"In[13]:=",
 CellID->48962201,ExpressionUUID->"dee602bb-1b32-44bd-b0d6-07790b8ff182"],

Cell["Some simple patterns:", "Text",
 CellID->39404330,ExpressionUUID->"99f14d66-79ce-429e-8695-cf64196a6b5b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PatternGridMesh", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}]], "Input",
 CellLabel->"In[14]:=",
 CellID->387530703,ExpressionUUID->"24295ac9-336a-4781-ad83-a43ee5424b1d"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
    TagBox[
     GraphicsComplexBox[{{0., 0.}, {0., 1.}, {1., 0.}, {1., 1.}, {1., 2.}, {
      2., 1.}, {2., 2.}}, 
      {Hue[0.6, 0.3, 0.95], EdgeForm[Hue[0.6, 0.3, 0.75]], 
       TagBox[PolygonBox[{{1, 3, 4, 2}, {4, 6, 7, 5}}],
        Annotation[#, "Geometry"]& ]}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> 
    Hue[0.1, 1, 0.7]}]], "Output",
 CellChangeTimes->{3.9004811075123243`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"99db5c1d-1965-48dd-b3c5-eb3f36b6969f"]
}, Open  ]],

Cell["More involved patterns:", "Text",
 CellID->255082191,ExpressionUUID->"d3bf9b47-570d-4189-9ed2-99829042f268"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PatternGridMesh", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"i", ",", "4"}], "]"}], "\[Equal]", "2"}], "&&", 
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"j", ",", "4"}], "]"}], "\[Equal]", "2"}]}], ",", "0", ",", 
      "1"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "11"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "11"}], "}"}]}], "]"}], "]"}]], "Input",
 CellLabel->"In[15]:=",
 CellID->276008286,ExpressionUUID->"25d9b534-dfbc-4294-81ed-33ce96854164"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
    TagBox[GraphicsComplexBox[CompressedData["
1:eJx91TFqQzEQhGHh6pUqVKhQoYjlXSM+Q45gSJ2r5Kg5QmzwEvyBIngM/0PF
sMyO3m5fH5+XUsr3/Xvo/+fnnR/XVzzgCje4wwOe8IIDPp+sz2S1cP+AK9zg
Dg94wgsOOP07V30W711f/SdXuMEdHvCEFxxw+jcHzlWfx0Yr3OAOD3jCCw44
/Ztbc+Bc9Vk32uAOD3jCCw44/btn5tYcOFd9to12eMATXnDA6d9ecM/MrTlw
rvrsGx3whBcccPq3x+wF98zcmgPnqs+x0QkvOOD0b+/aY/aCe2ZuzYFz1efc
6IIDPrmXJ9kettfsCffOHJsL56xvNeCT/3l8J+xde8xecM/MrTlwrvqMjZ5o
Ht9l3znfDXvYXrMn3DtzbC6c85/vX4decMY=
      "], 
      {Hue[0.6, 0.3, 0.95], EdgeForm[Hue[0.6, 0.3, 0.75]], 
       TagBox[PolygonBox[CompressedData["
1:eJwNwwVSAgEAAEBEbKVD6QOlQ+lQOpQOpUOPBoWjlQ67n6w7swDYCIFwGAwG
/Uf8X9lDwuFI1OoqCo1AoDFraxjs+joWt7GBw29u4glbWwTi9jaRtLND2t/d
OyAjURQqGk2lYTA0OhbHYOLxTIBAAFhEEvtw/+CIQyZzuBQKl0el8vg0Gl9A
pwuEDIZQxGSKxAAglrBYEimbLT0+PDqRcTgyOZcrV/B4CiWfr1QJBCq1UKjW
iEQarVis1UkkOr1Uqj89PjkzyGQGo1xuNCkUJrNSabaoVBarWm21aTQ2u1Zr
d+h0Dqde7zw/PbtwGYxuj8nk8ZrNXp/F6g/YbIGg3R4MOZzhy/OLq4jLFYm6
3dGYxxOLe73xhM+XSPr9yVQgkEoHg+lMKJTJhsPZ68urGzASAXPRaC4fi+UL
8XihmEgUS8lkqZxKlSvpdKWayVRr2Wzt9vrmrg6C9UYu14DyeahZKDRbxWKr
XSq1O+Vyp1updHvVaq9fq/Xvb+8eBvXGcARBo3GzOZ602tNZpzObd7vzRa+/
fLx/eHoeDJ5fhsOX19Ho9W08fnufTN4/ptOPz9ns82s+//peLL5/lsuf38c/
haCA/Q==
         "]],
        Annotation[#, "Geometry"]& ]}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> 
    Hue[0.1, 1, 0.7]}]], "Output",
 CellChangeTimes->{3.9004811123628864`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"f65cbcf2-df97-4626-9666-d5ecbe66c39c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PatternGridMesh", "[", 
  RowBox[{"CellularAutomaton", "[", 
   RowBox[{"30", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "1", "}"}], ",", "0"}], "}"}], ",", "50"}], "]"}], 
  "]"}]], "Input",
 CellLabel->"In[16]:=",
 CellID->44850330,ExpressionUUID->"a90ce05b-d0f8-44b3-9426-ed5dc9c3a4e4"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
    TagBox[GraphicsComplexBox[CompressedData["
1:eJx13U+PFcd+BuBWVigrFixYsCCjEUIOsgZs3yQGZspg/g1jwFzn3zZS1vkK
9dHqI92PcBOl3/eqn+F403p4T2HmdFWd3/TprvqH//qfr//9d9u2/ePfb9v/
HY//fRgHzvgvV//v90dv5ni7zt+3H98fPfHf/v/j+Pcl5++b8Z3d747u/y85
7v8vOd78+/H2cT/e3Y/vjp64/57kuP+e5Lj/nuTYf8+M7+1+e3T/vclx/73J
cf+9yXH/vcnx5r8Pbzf78f5+fHv0xP15kuP+PMlxf57kuD9PctyfJzn255nx
g91vju7Pmxz3502O+/Mmx/1542tej/vzJcebPw/eftuPD/fjm6Mn7s+fHPfn
T4778yfH/fmT474fyXHfj+S470dy7Psx47Pdvx7d9ys57vuVHPf9So77fiXH
fb+S475fyXHfr+Q35P78ePu0H8/3469HT9z3Kznu+5Uc9/1Kjvt+Jcd9v5Lj
vl/Jcd+v5Lj9Kznu+5kc+37O+NHu10f3/U6O+34nx32/k+O+3/F7Xo/7/ibH
fX+T476/yXHf3+S4729yvPl+4u3zfny8H18fPXHf/+S4739y3Pc/Oe77nxz3
fCTHPR/Jcc9Hcv2R19+Q477/yXHf/+TY93/G3+1+dXTPT3Lc85Mc9/wkxz0/
yXHPT3Lc85Mc9/wkxz0/yXHHS3Lc85Uc93wlxz1fyfHm+cHbl/34ZD++Onri
ns/kuOczOe75TI57PpPjns/kuOczOe75TI57PpPjns/kuOczOe75TI57PpPj
ns/k2PM54u/31/9ydM93ctzznRz3fCfHPd/xW16Pe36T457f5LjnNznu+U2O
e36T457f5LjnNznu+U2Oe36T443zeev8xhf78ZejJ+75T457/pPjnv/kuOc/
OW5/SI7bH5Lj9ofkuP0hOW5/SI7bH5Lj9ofkuP0hOW5/SI7bH5LjjfM9sP1h
xU/3fBzd/pIct78kx+0vyXH7S3Lc/pIct78kx+0vyXH7S3Lc/pIct78kx+0v
8Q2vx+0fyXH7R3I8PJ/Y8739vh+f7cdx9MTtD8lx+0Ny3P6QHLc/JMftD8lx
+0Ny3P6QHLc/JNcfeP01Oe75T47bH5Lj9ofkuP0hOe58EX85euCJF7a/jPiH
/XiFx9ETtz8lx+1PyXH7U/wrr8ftP8lx+09y3P6THLf/JMedT5Lj9qfkuP0p
OW5/So7bn5Lj9qfkuP0pOW7/2j3wxAtv9Cf714x/3I+X+AqPoydu/0uO2/+S
4/a/5Lj9MTluf0yO2x+T4/bH5Lj9MTluf0yO2x+T4/bH5Lj9MTluf0yO2x+T
4/bH5Lj9cffAEy+80d8Gtj+u+Kf9+BJf4is8jp64/TU5bn9Njttfk+P21+S4
/TU5bn9Njttfk+P21+QfyK/Jcftjctz+mBy3PybH7Y/Jcftjctz+uHvgiRfe
6F8DT3yrP37dj3/ajy/wS3yJr/A4euL21+S4/TU5bn9Njttfk+P21+S4/TU5
bn9Njttfk+POr8lx+3Ny3P4c3/B63P6bHLf/Jsftv8lx++/ugSdeuP037fHE
C9t/R/xP+/E5foFf4kt8hcfRE7d/x694PW5/To7bn5Pj9ufkuP05OW5/To7b
n5Pj9ufkuP05OW5/To7bv5Pj9u/kuP07OW7/To7bv3cPPPHC7d9pjydeeKM/
279n/M/78Wf8HL/AL/ElvsLj6Inb/5PjjofkuOMhOe54SI47HpLjjofkuOMh
Oe54SI47HpLjjofkuOMhOe54SI47HpLjjofkuOMhOe542D3wxAt3PKQ9nnjh
jf4+sONhxf9y4vgzfo5f4Jf4El/hcfTEHS/JccdLctzxkhx3vCTHHS/JccdL
ctzxkhx3vCTHHS/JccdLctzxkhx3vCTHHS/JccdLctzxkhx3vOweeOKFO17S
Hk9z+vvEt8bDn/ejnxuOi59PHJ/jF/glvsRXeBw9ccdLctzxkhx3vCTHHS/J
ccdLctzxkhx3vCTHHS/JccdLcn3N6z+S446P5LjjIznu+EiO2/93Dzzxwu3/
aY8nXrifF2mPJ17Y8TFif6+wzvJzxHHy/MTxBX6JL/E4euKOl+S44yU57nhJ
jjtekuOOl+S44yU57nhJjjtekuOOl+S4ny/JccdPctzxkxx3/CTHHT/JcT9f
kuOOr90DT7x8/e+8Hi/c8ZT2eOKFN8aP42nGXofy93Z/j7FO83PIcfXixPEl
vsRXeBw9ccdfctzxlxx3/CXHHX/Jccdfctzxlxx3/CXHHX/Jccdfctzxlxx3
/CXHHX/Jccdfctzxlxx3/CXHHX+7B5544X6+pT2eeOGOx7THEy+8Md4Gdjyu
2O8xvE7sdTWvM/h7lHWin3uOy5cnjpf4Co+jJ+54TY47XpPjjtfkuOM1Oe54
TY47XpPjjtfkuOM1Oe54TY47XpPjjtfkuOM1Oe54jT/xetzxmRx3fO4eeOKF
Oz7THk+8cMdn2uOJF94YbwNPfGt8/rEf/V7c7x39Xsfr4F4X9LqHv9dZp/o5
6ji9PHG8wuPoiTt+k+OO3+S44zc57vhNjjt+k+OO3/gdr8cdr8lxx2ty3PGa
HHe8Jscdr8lxx2ty3PGbHHf8Jscdv7sHnnjhjt+0xxMv3PGb9njihTt+0x5P
vLDjd8TeV+V9Lt5H4Pe0fq/ldX6vY3qdxjrYz1nH7dWJ4zh64o7n5LjjOTnu
eE6OO56T447n5LjjOTnu+E6OO76T447v5LjjOznu+E6OO76T447v5LjjOznu
+E6OO753Dzzxwh3faY8nXrjjO+3xxAt3fKc9nnjhjfHs+J6x991636T3sXmf
kPdh+L213+P5PYXXYb3O5O+91tV+TjvOx7eP0z//hRx3PkiOOx8kx50PkuPO
B8lx54PkuPNBctz5IPkH8mty3PGeHHe8J8cdz8lxx3Ny3PG8e+CJF+54Tns8
8cIdz2mPJ1644znt8cQLb4zXgR3Pa7fPWXifvfdJe9+q9wV635X3qfi9vd9L
+r2L15W9zuXv0dblfq47rueJY8Z7/xxnvDfHGe/NccZ7c5zx3hxnvDfHGe/N
ccZ7c5zP/+Y480FznPmgOc580Bzn8785znzRHGe+aI4zPzTHC2d+aHs88cKZ
H9oeT7x8PeN14lvj+V/3o8/V+dyUz8343IP3oXufr/dReh+a9+F4n4Hfo/o9
kdetvS7m79nW6X5OO45/+fZx+uevyHE/35Pjfr7Hb3g97ud5ctzP8+S4n+fJ
cev75Lif98lxP++T437eJ8et75Pj1gPJceuB5Lj1wO6BJ1649UDa44kXbj2Q
9njihVsPxH8cPfDECzsfjN0+d+1zuD5n6XN2Piflcys+F+B9196n531I3mfh
98h+r+V1c6/D+Xu8dbyf884D88Sx9QDzQ/PX5Lj1QHLceoD5ovlbctx6gPmi
+Xty3HqA+aL5NTluPcB80fyGHLceYL5o/okctx5gvmj+5eiBJ17mv5Pjfv4z
H7Q9XjjzQdvjhTNf9PV44oU35gfni5n55NV+dJ0O13HwuX6f2/a5XZ+79Dk4
nzPyOQ7vg/c+YO9z9D4u71Pxe3O/l/M6v9cJT/zeYF3hPNKc4/TPX5Pj1h/J
ceuR5Lj1SHLceiQ5bj2SHLceSY5bjyTHrUeS49YjyXHrkeS49Uhy3HokOW49
snvgiRduPZL2eOKFW4+kPZ544dYjaY8nXrj1S9rjiRfemG8Gdj5ama/S3nWg
XEfIdWZcd8R1JVxXwOfCfU7X5yB9zszndHxOwfuwvc/U++i8r8f7Bvwe0u8x
xtFe5/D3IOse5ymPrYfy57j1UHL9hte/Jcetf+L3vB633kmOW88kx61nkuPW
M8lx65n4M6/HrV92Dzzxwr2+kfZ44oVb36Q9nnjh1jdpjydeuPVO2uOJF96Y
Lwae+Nb88m/70XX+XFfOdclct8p1jFynxnVKXHfC5/59rtrnVn3uz+eefK7D
+9a9L9f7BL0Pyfsa/F7U70W8bup1FX+Psu55/e3j9M9/Jcetj5Lj1kfJceuj
5Lj1UXLc+ig5bn2UHLc+So5bHyXHrY+S49ZHyXHro+S49dHugSdeuPVR2uOJ
F259lPZ44oVbH6U9nnjh1kdpjydeuPVR2uOJF3b+Grs7TlxH1nVNXUfTdRhd
p89121yXy3WZXNfEdSN8Lt/nmn2u0+fWfC7H5w68D9r7LL1vy/s+xtF+L+R1
Y68TtZ46UTc5r3lsPcX81vwNOW59xfzW/B05br3F/Nb8Aznu9SXmt+YfyXHr
Meav5p/Icesv5q/mX44eeOKFW38xf7U9Xrj1F/NX2+OFW38xf7U9Xrj1F/NX
2+PWW8xXfT1eeGN+cr6amc9cR9x1rl132XV+XSfWdURdV9J1A103znXAXIfJ
dW5cR8R1GHwO3edsfY7Q56R8bsP7wr3P1PvUvE/F77H93svr2l6H4vc86zLn
seYcp3/+hhy3fkuOW78lx63fkuPWb8lx67fkuPVbctz6LTlu/ZYct35Ljlu/
Jcet33YPPPHCrd/SHk+8cOu3tMcTL9z6Le3xxAu3fkt7PPHCrd/SHk+88MZ8
N7Dz4cp8mfZn+By7T4Dr1rtOuutsuw7zBXbdVdfddB1F17FznTDXYXIdG9fx
cJ0Cn8P2OVOfe/O5Gu/T9z7fcbT3AbUePPG9YOvBE9fJWg+eqPucJz22HmS+
bP6WHLceZL5s/p4ctx5kvmx+TY5bDzJfNr8hx70+x3zZ/BM5br3IfNn8y9ED
T7xw60Xmy7bHC7deZL5se7xw60Xmy7bHC7deZL5se7xw60fmy7Y3Z76b+NZ8
+O/70X2M3KfHfWjcJ8V9O9wnwn0GXJfedcldd9p1h11H1nU8XSfRdehcx8t1
jFynxXUofM7e5359rtDnlHzOwfucvU/K+yD83tLvCbxu5++51oXOe8nfkuPW
i8lx68XkuPVictx6MTluvZgct15MjlsvJsetF5Pj1ovJcevF3QNPvHDrxeS4
9WD+fjzxwq0H0x5PvHDrwbTHE7f+y+vxxAu3/kt7PPHCzndjd39Pcl+7h/gM
n2P3kXJfI/fRcR+WC+w6/K7D7rrarmvsurGuy+m6hq7r5rpVrsvjuiOug+Bz
1j636XNf42jvC/c+Uu8Ta73IfOj3GF738/dk68Dmb8g5tl5kvmz+jhy3XmS+
bP6BHLdeZL5s/pEct15kvmz+Gzluvch82fwzOW69yHzZ1+OFWy+mPZ544daL
zKdtb/5ncrxw60Hmy7bHC7ceZP5se7xwrycyf7Y9XnhjvnT+nJlf3efUfUDd
F9N9H93X0H333AfOfcfct8p9jtznxn1M3MfCfQlcF951t13X2HVhXRfTdf9c
18x1m1xHxnUqfA7e52Z9bs7narwP3/tsvS/O+1D8XtjvUbzu6O/V1pnOo2+/
fZz++Tty3Po0OW59mhy3Pk2OW58mx61Pk+PWj7sHnnjh1o9pjydeuPVl2uOJ
F259mfZ44oVbX6Y9nnjh1ptpjydeuPVm2uOJF96YDwd2vlyZT9PefbDdR9p9
lh/iM3yOH2H32XRfR/cFdB+5C/wUu0+Q+76474b7GrhuvOtuu+6w66q6bqTr
4rlOl+sAXWLXJRhH33pu0eecXpHj1qvMn35v43VJf0+3DnWenCeOrVeZP5u/
J8etV5k/m1+T49arzJ/Nb8hx69Xkn8m/HD3wxMvX/87r8cKtL5lP2x4v3OuR
zKdtjxdu/cl82vZ44dafzKdtjxdu/cl82vZ44Y35ceCJb82n/7EfUwfcxffw
few+9g/xGT7Hj7D7GLtvrvuuuk/nBX6K3YfNfbXc18h9Y9yXw30NXNfddatd
l9d1R10H0XWbXOdlHO1z4D436nNhrVe9T9r7FL2vx+/B/Z7H657+Xm/d6Tz6
7tvH6Z+/J8etV5Pj1qvJcevV5Lj1anLc66nJca+XJsetd3cPPPHCrXfTHk+8
cOvdtMcTL9x6N+3xxAu33k17PPHCrXfTHk+8cOvdtMcTL9x6N+3xxAs7P4/d
HQd38F18D9/HD/BDfIbPsfvMu6+5+2K7j/IFfoqfYfc9dN859/Vy3yT3nXHf
DfcVcN1014V2nVrXwXSdPdflGke7bofP+fscb+tl5u/mJ+7LbH7ie/rmH8hx
61Xmz+YfyXHrVebP5r+R415fTY57fZX5tfmXoweeeOFeX2V+bXu8fP1XXo8X
br3LfNr2eOHWu8ynbY8Xbr3LfNr2eOHWu8ynbY8Xbr3LfNr2eOGN+dP5dGa+
TR2x4Tv4Lr6H7+MH+CE+w+f4EX6Mv8NPsPvWX+Cn+Bl2n1n3+XQfRfepc58v
9zlyHxf3qXAdftcFd91h1zV1HcRxtOskua6K6ya0fvY5Qp/j8b537xP1Pijv
C0j+nvwDOW59mxy3vk2OW98mx61vk+PeL5Act/5Njlv/7h544oVb/6Y9nnjh
1r9pjydeuPVv/MfRA0+8cOvZtMcTL9x6Nu3xxAu3nk17PPHCG/PrwM6/K/Nz
2v/l6uiN/A6+i+/h+/gBfojP8Dl+hB/j7/AT/D2+wE/xM+y+3+67/BN231D3
XXTfOffVct8g90VxnwbXgXedadelHUe7bl3rY+bn5q/Icetj5ufmJ+5TbX7i
vgTn6Xni2Pqa+bv5NTlufc383fyGHLd+Zn5u/pkct35mfu7r8cKtn5mf2x4v
3OvHzM9tjxduPZ32eOHWz8zf/f/hhVs/M3+3PV649TPzd9vjhVs/M3/XzLcT
35qP/3M/pu7If/E+X/8t5/V38F18D9/HD/BDfIbP8SP8GH+Hn+Dv8QV+ip/h
H/CP+Cfsvs7ui+u+oO7j5j5V7pvjvhyu++864ePoW+uIvuL1J5779DkpnwPw
vljv+/K+BK9bWCc77zbnOP3za3Lcejo5bj2dHLeeTo5bTyfHraeT49bTuwee
eOHW02mPJ17mX8lx6+X8/XjihVtfpz2eeOHW12mPJ1649XXa44kXbn2d9nji
1tN5PZ54Yefvsbv9fv+vTv3NfF7fxffwGT7Hj/Bj/B1+gi/wU/wM/4B/xD/h
P2H3IXcfZvfNdF9A9ylzXxX3YRhH31qn+RWvP/Fcfc19s73/gfmz+Yk6tXbe
vObPP5LfkONe/2U+bP6JHLeeZH6Kl/lXctx6kfmp7fHCrR+Zn9oeL9z6kfmm
fx+eeOHWg8w3bY97/ZT5pq/HG/PJ/84vfwWw0i/x
      "], 
      {Hue[0.6, 0.3, 0.95], EdgeForm[Hue[0.6, 0.3, 0.75]], 
       TagBox[PolygonBox[CompressedData["
1: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
HupCvVg79wzq+rHRc28ADSGzsBvF2j1kUb+iO8mqbgzZIDs0hWaxdk851M11
Z7yrFtBSd8Z7aQ1tIJ+w28baPeVXt9Od8a7aQwfdGe+iE3TWPfDsu0I33UEJ
dXcoKeweupdS6p66F559H+irc+dZ94cBOnOe9UAYpDOvoh4MVaEaDIHXdA/V
1UN1JzXUw6CmsIfrnmqpR+jOaqtHQh14GcbAWN1jXfU43SPvbjxM0L3xXibD
FGgi7Km6p6bqabon3s0MmKk7aqmeBa2EPVv31lr9hu6NdzMX5umOOqjnw6vQ
ERbAQt1bJ/Ui3WFn9WLoIuwluteu6qW6V97bCngLekFvWAmrdI991G/rTvuq
V0M/Yb+je+6vXqM7512vhXW6Z97tBtioe+W9bIGtMApGww7YqXsao94V7552
wx54Xdh7dW/j1ft0hxPU+2EiTIID8K7udbL6oO6V93gY3oPpwj6ie52hPqp7
5b0dg+MwB96ED+GE7nGu+qTukXd3Gs7o3ngP5+ECLIPlcBEu6V5WqD/SHfFu
LsMV3QvP9mP4RGe8Tv0prBf2Zzr3DerruoON6huwCTbDTbile9mivq072qr+
ErbBdvgG7ujedqjv6t54V9/BPd0Tz/4H+DHeuT+Ah3BI2I90D4fVP+keeO6/
wK/wPnwAv8Hvuodj6se6E97FE3ga7x6ewR9wSth/6l5Oq//SHZ1R/w1n4Ry8
gH90b+fV/+oOeXf/Af8PF5d0V7Fox7E7I3YErqKvgY8OHLtHYoeO3SPvJRE6
MXyO/gKSoJM6dk/ETubYPfFeUqBTwlforyENOq1j90TsdE70ntKjM8C3sYad
0bF7I3Ymx+6Q2JnhPvp7yIrO5ti9Eju7Y3fMu82BzunYvfIec6PzwM+xhp3X
sXsldj7H7ph3mx9dwLF75V0WQhd27E55l0XQRR27R95TcXQJeB5r2CUduzdi
l3Ls3nhXZdBlHbuzBOpyECPs8o7dY6y6ghO9x4pQCVzwoDJUcexefXVVJ3qv
1aA6xEFCqAm1HLvnROraunPedR142Ynec12oB8mFXd+xe0+hbqANpFQ3hFSQ
GhpDE8d2kUbdVBvhFppDC22C99wa2kAWYbd17N6zqttpA7zrDvCq7jynuiPk
EnYnx3aQW91Zm+Bdd4PuuvMC6h5QUNg9HdtBIXUvbYJb6A19tImi6r5QDF6C
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
Hvr/AGbQ+H4=
         "]],
        Annotation[#, "Geometry"]& ]}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
  ImageSize->{200.75026383420118`, Automatic}]], "Output",
 CellChangeTimes->{3.900481115383737*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"78d1bd14-79aa-43eb-9fb3-4c581f31b94f"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["volumes", "Subsection",
 CellChangeTimes->{{3.900481170341754*^9, 
  3.900481171861969*^9}},ExpressionUUID->"de934dca-bede-403a-aaf0-\
4b29019e2e96"],

Cell[TextData[{
 "Directly generate a rectangular grid mesh. Here ",
 Cell[BoxData["IndexFlatten"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "e6f08cdc-9881-4904-8e5c-c959a8bbbb0d"],
 " flattens out the position index in the same way that ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Flatten"]], "paclet:ref/Flatten"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "646a45c4-4c30-4cf5-a822-d3de962a933f"],
 " would flatten it: "
}], "Text",
 CellID->16434028,ExpressionUUID->"654d8f3c-65f4-42e6-b8c6-6f9dd774f429"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IndexFlatten", "[", 
   RowBox[{"i_List", ",", "d_List"}], "]"}], ":=", 
  RowBox[{"1", "+", 
   RowBox[{
    RowBox[{"FoldList", "[", 
     RowBox[{"Times", ",", "1", ",", 
      RowBox[{"Most", "[", 
       RowBox[{"Reverse", "[", "d", "]"}], "]"}]}], "]"}], ".", 
    RowBox[{"Reverse", "[", 
     RowBox[{"(", 
      RowBox[{"i", "-", "1"}], ")"}], "]"}]}]}]}]], "Input",
 CellLabel->"In[17]:=",
 CellID->18196215,ExpressionUUID->"bc26fe98-9d59-4ce8-a8b0-ff70d64c527e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GridMesh", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"l1_", ",", "l2_", ",", "l3_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"u1_", ",", "u2_", ",", "u3_"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k1_", ",", "k2_", ",", "k3_"}], "}"}]}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pa", ",", "ia", ",", "re"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pa", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "l1", ",", "u1", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"u1", "-", "l1"}], ")"}], "/", "k1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "l2", ",", "u2", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"u2", "-", "l2"}], ")"}], "/", "k2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", "l3", ",", "u3", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"u3", "-", "l3"}], ")"}], "/", "k3"}]}], "}"}]}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"re", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "2", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "2"}], "}"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ia", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"IndexFlatten", "[", 
           RowBox[{"#", ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"k1", ",", "k2", ",", "k3"}], "}"}], "+", "1"}]}], 
           "]"}], "&"}], "/@", 
         RowBox[{
          RowBox[{"TranslationTransform", "[", 
           RowBox[{"{", 
            RowBox[{"dx", ",", "dy", ",", "dz"}], "}"}], "]"}], "[", "re", 
          "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"dx", ",", "0", ",", 
          RowBox[{"k1", "-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"dy", ",", "0", ",", 
          RowBox[{"k2", "-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"dz", ",", "0", ",", 
          RowBox[{"k3", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"MeshRegion", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"pa", ",", "2"}], "]"}], ",", 
       RowBox[{"Hexahedron", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{"ia", ",", "2"}], "]"}], "]"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->"In[18]:=",
 CellID->180812043,ExpressionUUID->"39a781f1-b5d5-4a3e-a63a-3e5e8c85a534"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GridMesh", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[19]:=",
 CellID->89889603,ExpressionUUID->"7aa6839a-2e4a-4f89-bde6-f399b8a239f7"],

Cell[BoxData[
 Graphics3DBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
    TagBox[GraphicsComplex3DBox[CompressedData["
1:eJyVk9EJwzAMRE06SSdxZih0gUC/O21G0L9HaEgJxbp7TioIxkr0Ip2k+/J+
vKZSyrw9t3Ldnrut1ftD/F9rtf+O4tea3/f+AE7max6H3/MD+CF8f//5fX1N
+D2H4lSvsU5aX+af8cZnACfztU8Un/X3nKwPzRPV2YTv9ee5oXq8/tpn/3/t
21gv1cnzOa8xT0+vD+0bzQHl1+DMxv2mPHz82X5enWuaR97z//pGepNOVB/l
pbwPbFpkjg==
      "], 
      {Hue[0.6, 0.3, 0.85], EdgeForm[Hue[0.6, 0.3, 0.75]], 
       TagBox[
        HexahedronBox[{{1, 17, 21, 5, 2, 18, 22, 6}, {2, 18, 22, 6, 3, 19, 23,
          7}, {3, 19, 23, 7, 4, 20, 24, 8}, {5, 21, 25, 9, 6, 22, 26, 10}, {6,
          22, 26, 10, 7, 23, 27, 11}, {7, 23, 27, 11, 8, 24, 28, 12}, {9, 25, 
         29, 13, 10, 26, 30, 14}, {10, 26, 30, 14, 11, 27, 31, 15}, {11, 27, 
         31, 15, 12, 28, 32, 16}, {17, 33, 37, 21, 18, 34, 38, 22}, {18, 34, 
         38, 22, 19, 35, 39, 23}, {19, 35, 39, 23, 20, 36, 40, 24}, {21, 37, 
         41, 25, 22, 38, 42, 26}, {22, 38, 42, 26, 23, 39, 43, 27}, {23, 39, 
         43, 27, 24, 40, 44, 28}, {25, 41, 45, 29, 26, 42, 46, 30}, {26, 42, 
         46, 30, 27, 43, 47, 31}, {27, 43, 47, 31, 28, 44, 48, 32}, {33, 49, 
         53, 37, 34, 50, 54, 38}, {34, 50, 54, 38, 35, 51, 55, 39}, {35, 51, 
         55, 39, 36, 52, 56, 40}, {37, 53, 57, 41, 38, 54, 58, 42}, {38, 54, 
         58, 42, 39, 55, 59, 43}, {39, 55, 59, 43, 40, 56, 60, 44}, {41, 57, 
         61, 45, 42, 58, 62, 46}, {42, 58, 62, 46, 43, 59, 63, 47}, {43, 59, 
         63, 47, 44, 60, 64, 48}}],
        Annotation[#, "Geometry"]& ]}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics3D",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  Boxed->False,
  DefaultBaseStyle->{
   "MeshGraphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
  Lighting->{{"Ambient", 
     GrayLevel[0.45]}, {"Directional", 
     GrayLevel[0.3], 
     ImageScaled[{2, 0, 2}]}, {"Directional", 
     GrayLevel[0.33], 
     ImageScaled[{2, 2, 2}]}, {"Directional", 
     GrayLevel[0.3], 
     ImageScaled[{0, 2, 2}]}},
  Method->{"ShrinkWrap" -> True}]], "Output",
 CellChangeTimes->{3.900481197608856*^9},
 Graphics3DBoxOptions->{ImageSize->150},
 CellLabel->"Out[19]=",ExpressionUUID->"45730c5f-a67d-492a-a0a6-32e3f1b1ef42"]
}, Open  ]],

Cell["\<\
Alternatively, generate the same mesh region as the product of 1D meshes:\
\>", "Text",
 CellID->415063178,ExpressionUUID->"e2a99115-6a87-4a5a-971c-7e67764ed535"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mr1d", "=", 
  RowBox[{"MeshRegion", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "/", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "/", "3"}], "}"}], ",", 
      RowBox[{"{", "1", "}"}]}], "}"}], ",", 
    RowBox[{"Line", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "]"}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[20]:=",
 CellID->79531542,ExpressionUUID->"a10c73c1-6a6d-464d-a59d-05fbc777f3c5"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = HoldComplete[
     MeshRegion[{{0.}, {0.3333333333333333}, {0.6666666666666666}, {1.}}, {
       Line[{{1, 2}, {2, 3}, {3, 4}}]}, 
      Method -> {
       "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
        Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
        Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
        Automatic, "CheckIntersections" -> Automatic, "BoundaryNesting" -> 
        Automatic, "SeparateBoundaries" -> Automatic, "TJunction" -> 
        Automatic, "PropagateMarkers" -> True, "ZeroTest" -> Automatic, 
        "Hash" -> 8277933014117925027}]]}, 
    TagBox[
     GraphicsComplexBox[{{0., 0.}, {0.3333333333333333, 0.}, {
      0.6666666666666666, 0.}, {1., 0.}}, 
      {Hue[0.6, 0.3, 0.75], 
       TagBox[LineBox[{{1, 2}, {2, 3}, {3, 4}}],
        Annotation[#, "Geometry"]& ], PointBox[{1, 2, 3, 4}]}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  AspectRatio->0.0618034,
  AxesOrigin->{Automatic, 0},
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
  PlotRange->{{0., 1.}, {0, All}},
  PlotRangePadding->{{
     Scaled[0.1], 
     Scaled[0.1]}, {0, 1}}]], "Output",
 CellChangeTimes->{3.900481202989025*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"3f90f5f1-6e41-4ed9-929f-16a0a167c685"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionProduct", "[", 
  RowBox[{"mr1d", ",", "mr1d", ",", "mr1d"}], "]"}]], "Input",
 CellLabel->"In[21]:=",
 CellID->679665092,ExpressionUUID->"648e1f75-7559-4ba3-90bc-c7c02f8b4600"],

Cell[BoxData[
 Graphics3DBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
    TagBox[GraphicsComplex3DBox[CompressedData["
1:eJyVk9EJwzAMRE06SSdxZih0gUC/O21G0L9HaEgJxbp7TioIxkr0Ip2k+/J+
vKZSyrw9t3Ldnrut1ftD/F9rtf+O4tea3/f+AE7max6H3/MD+CF8f//5fX1N
+D2H4lSvsU5aX+af8cZnACfztU8Un/X3nKwPzRPV2YTv9ee5oXq8/tpn/3/t
21gv1cnzOa8xT0+vD+0bzQHl1+DMxv2mPHz82X5enWuaR97z//pGepNOVB/l
pbwPbFpkjg==
      "], 
      {Hue[0.6, 0.3, 0.85], EdgeForm[Hue[0.6, 0.3, 0.75]], 
       TagBox[
        HexahedronBox[{{1, 17, 21, 5, 2, 18, 22, 6}, {2, 18, 22, 6, 3, 19, 23,
          7}, {3, 19, 23, 7, 4, 20, 24, 8}, {5, 21, 25, 9, 6, 22, 26, 10}, {6,
          22, 26, 10, 7, 23, 27, 11}, {7, 23, 27, 11, 8, 24, 28, 12}, {9, 25, 
         29, 13, 10, 26, 30, 14}, {10, 26, 30, 14, 11, 27, 31, 15}, {11, 27, 
         31, 15, 12, 28, 32, 16}, {17, 33, 37, 21, 18, 34, 38, 22}, {18, 34, 
         38, 22, 19, 35, 39, 23}, {19, 35, 39, 23, 20, 36, 40, 24}, {21, 37, 
         41, 25, 22, 38, 42, 26}, {22, 38, 42, 26, 23, 39, 43, 27}, {23, 39, 
         43, 27, 24, 40, 44, 28}, {25, 41, 45, 29, 26, 42, 46, 30}, {26, 42, 
         46, 30, 27, 43, 47, 31}, {27, 43, 47, 31, 28, 44, 48, 32}, {33, 49, 
         53, 37, 34, 50, 54, 38}, {34, 50, 54, 38, 35, 51, 55, 39}, {35, 51, 
         55, 39, 36, 52, 56, 40}, {37, 53, 57, 41, 38, 54, 58, 42}, {38, 54, 
         58, 42, 39, 55, 59, 43}, {39, 55, 59, 43, 40, 56, 60, 44}, {41, 57, 
         61, 45, 42, 58, 62, 46}, {42, 58, 62, 46, 43, 59, 63, 47}, {43, 59, 
         63, 47, 44, 60, 64, 48}}],
        Annotation[#, "Geometry"]& ]}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics3D",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  Boxed->False,
  DefaultBaseStyle->{
   "MeshGraphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
  Lighting->{{"Ambient", 
     GrayLevel[0.45]}, {"Directional", 
     GrayLevel[0.3], 
     ImageScaled[{2, 0, 2}]}, {"Directional", 
     GrayLevel[0.33], 
     ImageScaled[{2, 2, 2}]}, {"Directional", 
     GrayLevel[0.3], 
     ImageScaled[{0, 2, 2}]}},
  Method->{"ShrinkWrap" -> True}]], "Output",
 CellChangeTimes->{3.900481205527852*^9},
 Graphics3DBoxOptions->{ImageSize->150},
 CellLabel->"Out[21]=",ExpressionUUID->"6feb8c02-6cdb-4825-bdf9-d9e9d0244363"]
}, Open  ]],

Cell["\<\
Generalize the direct method above to generate a mesh region corresponding to \
a pattern matrix:\
\>", "Text",
 CellChangeTimes->{{3.9004812259025145`*^9, 3.9004812317560973`*^9}},
 CellID->90541839,ExpressionUUID->"fc7f0d58-c488-4bc1-92fd-eeb6f7c90246"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IndexFlatten", "[", 
   RowBox[{"i_List", ",", "d_List"}], "]"}], ":=", 
  RowBox[{"1", "+", 
   RowBox[{
    RowBox[{"FoldList", "[", 
     RowBox[{"Times", ",", "1", ",", 
      RowBox[{"Most", "[", 
       RowBox[{"Reverse", "[", "d", "]"}], "]"}]}], "]"}], ".", 
    RowBox[{"Reverse", "[", 
     RowBox[{"(", 
      RowBox[{"i", "-", "1"}], ")"}], "]"}]}]}]}]], "Input",
 CellLabel->"In[22]:=",
 CellID->468020283,ExpressionUUID->"3a83f160-b8b1-43ed-9ea2-c95187fbb10e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PatternGridMesh", "[", "a_List", "]"}], "/;", 
   RowBox[{
    RowBox[{"ArrayQ", "[", "a", "]"}], "&&", 
    RowBox[{
     RowBox[{"ArrayDepth", "[", "a", "]"}], "\[Equal]", "3"}]}]}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"m", ",", "n", ",", "p", ",", "pa", ",", "ia", ",", "re"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"m", ",", "n", ",", "p"}], "}"}], "=", 
      RowBox[{"Dimensions", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"pa", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "m"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "0", ",", "n"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", "0", ",", "p"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"re", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "2", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "2"}], "}"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ia", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"IndexFlatten", "[", 
           RowBox[{"#", ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"m", ",", "n", ",", "p"}], "}"}], "+", "1"}]}], "]"}], 
          "&"}], "/@", 
         RowBox[{
          RowBox[{"TranslationTransform", "[", 
           RowBox[{"ind", "-", "1"}], "]"}], "[", "re", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"ind", ",", 
          RowBox[{"Position", "[", 
           RowBox[{"a", ",", "1"}], "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"MeshRegion", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"pa", ",", "2"}], "]"}], ",", 
       RowBox[{"Hexahedron", "[", "ia", "]"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->"In[23]:=",
 CellID->96685869,ExpressionUUID->"4123879b-38ef-4cba-8ae2-5d2c989bbcbb"],

Cell["A simple pattern:", "Text",
 CellID->21348919,ExpressionUUID->"0f723370-e44a-4e5f-b86f-84a7286d2657"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PatternGridMesh", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellLabel->"In[24]:=",
 CellID->529558776,ExpressionUUID->"7d39e2ae-3dfe-40f5-971c-5f337eb40360"],

Cell[BoxData[
 Graphics3DBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
    TagBox[GraphicsComplex3DBox[CompressedData["
1:eJyVk8ENhDAMBC3uQxtUcqnhSjiJN61TAvdJHhNGy1lCUTZ4ba/t7Xt89qWq
2u971b92vuWh3cMrcPPvON/HXXjIb3l0fIrfcAIn/xQPOPnH/8Jjft1MD6vD
4id900l+6p/6ZP7Unzj5bZ6sTupP3PozTOLZvFif0/wlvU2nKf+Ql/HZSX7b
N5sDy4/6p73qlvbe9jXt59O5tnlMe/60b6a36WT1WV4z3wVVoVQ/
      "], 
      {Hue[0.6, 0.3, 0.85], EdgeForm[Hue[0.6, 0.3, 0.75]], 
       TagBox[
        HexahedronBox[{{1, 17, 21, 5, 2, 18, 22, 6}, {2, 18, 22, 6, 3, 19, 23,
          7}, {3, 19, 23, 7, 4, 20, 24, 8}, {5, 21, 25, 9, 6, 22, 26, 10}, {7,
          23, 27, 11, 8, 24, 28, 12}, {9, 25, 29, 13, 10, 26, 30, 14}, {10, 
         26, 30, 14, 11, 27, 31, 15}, {11, 27, 31, 15, 12, 28, 32, 16}, {17, 
         33, 37, 21, 18, 34, 38, 22}, {18, 34, 38, 22, 19, 35, 39, 23}, {19, 
         35, 39, 23, 20, 36, 40, 24}, {21, 37, 41, 25, 22, 38, 42, 26}, {23, 
         39, 43, 27, 24, 40, 44, 28}, {25, 41, 45, 29, 26, 42, 46, 30}, {26, 
         42, 46, 30, 27, 43, 47, 31}, {27, 43, 47, 31, 28, 44, 48, 32}, {33, 
         49, 53, 37, 34, 50, 54, 38}, {34, 50, 54, 38, 35, 51, 55, 39}, {35, 
         51, 55, 39, 36, 52, 56, 40}, {37, 53, 57, 41, 38, 54, 58, 42}, {39, 
         55, 59, 43, 40, 56, 60, 44}, {41, 57, 61, 45, 42, 58, 62, 46}, {42, 
         58, 62, 46, 43, 59, 63, 47}, {43, 59, 63, 47, 44, 60, 64, 48}}],
        Annotation[#, "Geometry"]& ]}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics3D",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  Boxed->False,
  DefaultBaseStyle->{
   "MeshGraphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
  Lighting->{{"Ambient", 
     GrayLevel[0.45]}, {"Directional", 
     GrayLevel[0.3], 
     ImageScaled[{2, 0, 2}]}, {"Directional", 
     GrayLevel[0.33], 
     ImageScaled[{2, 2, 2}]}, {"Directional", 
     GrayLevel[0.3], 
     ImageScaled[{0, 2, 2}]}},
  Method->{"ShrinkWrap" -> True}]], "Output",
 CellChangeTimes->{3.900481257687826*^9},
 Graphics3DBoxOptions->{ImageSize->150},
 CellLabel->"Out[24]=",ExpressionUUID->"9ce198ab-e780-4662-804f-e6659f479f69"]
}, Open  ]],

Cell["More involved patterns:", "Text",
 CellID->478612723,ExpressionUUID->"d4a388b6-a46d-4471-9377-a64aab397971"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PatternGridMesh", "[", 
  RowBox[{"CellularAutomaton", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"14", ",", " ", 
      RowBox[{"{", 
       RowBox[{"2", ",", " ", "1"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", " ", "1"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", "1", "}"}], "}"}], ",", "0"}], "}"}], ",", "10"}], "]"}], 
  "]"}]], "Input",
 CellLabel->"In[25]:=",
 CellID->635546014,ExpressionUUID->"f85e4c52-734f-41ba-a14e-51f9c5ddf6a0"],

Cell[BoxData[
 Graphics3DBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
    TagBox[GraphicsComplex3DBox[CompressedData["
1:eJyN3T1uJMkVReGE5LQ5xhhjtEEFiEaj0RjMr61eg5YgQLa2qqVoCWOobgHz
VR2U0gnkIVmMuO8xMjLezeTf/vnvf/zrL9d1/efDdf318nj/9udW/gm+c79/
fO1///6/9nz7cyt/D16f8xm+n/fzHZfczx/38/d9fr46yP38nfv5O/fzx/38
cT9/fO11a99o5Sf4e/BPwev3foEfvi63Pzu3P+P2Z9z+jNuffa79Ma/k9ufh
7wVuf8btz37e/piHcvtjHsrtz7j92ffZH/NWbn/MW7n92bn92bn9Gbc/4/Zn
3P6M258vtB9u7Uda+VvwE/w9+Kfgn4NXP7/C3/i63P47b8jtv/OG3P47b8jt
//ph/8ft/6GV2/9x+z9u/8ft/7j93++z/85LcvvvvCS3/85Lcvs/bv/3ufbf
eUxu/53H5PbfeUxu/8ft/37e/jvvye2/857c/jvvye3/uP3f99l/50m5/Xee
lNt/50m5/d+5/d+5/R+3/+P2f9z+j9v/cfs/bv+/0n53a3+glX8M/hb8BH8P
/in45+Bfgte4foR/5Otyx+t1UH6CO16vg3LH63VQ7njHHe/67Xi9bsodr9dN
ueP1uil3vF435Y533PGuf4533PGOO95DK3e844533PGOO95xxzvueNcPx+t1
We54vS7LHa/XZbnj9bosd7zjjne/z/F6HZc7Xq/jcsfrdVzueL2Oyx3vuOPd
5zper/tyx+t1X+54ve7LHa/XfbnjHXe8+3nH6zpB7nhdJ8gdr+sEueN1nSB3
vOOOd9/neF1XyB2v6wq543VdIXe8rivkjnfnjnfnjnfc8Y473vET3PGOO95x
xzvueMcd74+03/+f7Q/BPwZ/C36Cvwf/FPxz8C/BvwYvHX7ivMbvulSuPq5L
5Se4+rgulauP61K5+rgulatP5YHrWLk/5zpWfoKrj+tYufq4jpWrj+tYufrU
34PrXrn6uO6Vn+Dq47pXrj6ue+Xq47pXrj72W64+4+ozrj7j9n/c/o/b/3H7
X/OX6165/XfdK7f/rkvl9n/c/tc86zpWbv9dx8rtv+tMuf0ft/91PXBdKrf/
rkvl9t91o9z+j9v/um65zpTbf9eZ8hPc/HWdKVdv15ly9XGdKVefun67LpWr
j+tS+QmuPq5L5erjulTu+FyXytWn1jGuY+Xq4zpWfoKrj+tYufq4jpWrT61j
d64+nsvVZ1x9xtVn/ARXn3H1GVefcfUZV59x9fmJ1vsb9yV37vrv1b5s7V/W
Pt8JXvtGtb9S+xB1v173tXX/V7r9DP+er7+6f/C81su1Tqz1Ua076npe18m6
/tS8W/NN/Z3J1fNV3pV+1aqn92XyE1w9vS+Tq6f3ZXL19L5Mrp5r1bPqJXW/
Wnp5HydXT+/j5OrpfZxcPb2Pk6un93Fy9RxXz6oz1X1+5Zn3fXJ/zvs+uXp6
3ydXT+/75OrpfZ9cPcfV89xa9RxXz8O5XD3H1fPQytVzXD3H1XNcPcfVc1w9
x9VzXD2rrln7SjWved8qV0/rNXL18T5Xrj7e58rVZ1x9qr5b+2s1v3tfLFcf
6zty9fE+Wq4+3kfL1WdcfarOXfuMdZ3zvluuPtaD5Oap9SC5/fK+Xq6e3tfL
1XNcPcsfUPuztT5wH0Cunu4DyNXTfQC5eroPIFdP9wHk6jmunuWrqH3tWle5
byBXT/cN5OrpvoFcPd03kDsO9w3k6jmuntbD5OpZ61H3GeTq6T6DXD3dZ5Cr
p/sMcvV0n0GunuPque9Tz6oz1TrefQm5erovIVdP9yXk6um+hFw93ZeQO+6d
q+fO1XNcPet+clw9x9Vz/ARXz3H1HFfPcfUcV89x9RxXz59p9QN+CO6+zrj7
E+M/BC8fd/mjT/Dy85ZPtvyn5essv6Tz2bh/l+Ol8y/w7/i6XP3dl3t1P+/P
l5+ufGflzyofU/l9yhdT/pHyWcjV3305ufpPR/V3H+9Vnbv2Tfy+qutWPbPq
hFV/q7pW1YuqTlL1gdoXl6v/uPpPL/Ufr33l2h9Vf89rf6X2Cep+t+7z6v6m
1um13qx1U13/6zomV/9X83TNH5XXpbc6ux8oV2f3A+Xq7H6gXD3d95Or51r1
rOeRyp9dfpfaPy0d3SeUn+Dq7D6hXJ3dJ5Sbz+4TytXffUK5+p9bq/7j6j+u
/uPqfziXq/+hlav/uPqPq/+4+o+r/7j6j6v/uPqPq389X1fPG5R/q+oBNS+4
Dyk/wf08feNy9XffUq7+7lvK1d99S7n613OM9VxH+eSq7lLzr/uc8hNc/fWx
y9XffVG5+rsvKld/90Xl6u/zTnL1Lz9i1bfqOuc+qvwEV3/3UeX+fvdR5erv
Pqpc/d1Hlat/PZdbzymV77PqiLWecN9VfoKrv/uucvV331Wu/u67ytXffVe5
+vv8oVz9y19b9Vr3Y+UnuDq7HytXZ/dj5erpvqtcPcfVc5+rnvXcYPmSq85d
62D3aeUnuDq7TytXZ/dp5eaz+7Ry9XefVq7++3n1d19Xrv7lJ6j7Dfd15Se4
+ruvK1d/93Xl6u++rtzxua8rV/99n/q7DyxX//LB1H2d+8DyE1z93QeWq7/7
wHL1dx9Yrv61D7xz9d+5+o+r/7j6j6t/7UeMq//4Ca7+4+o/rv7j6j+u/uPq
P67+4+r/C63vX7mCu48+7v7uuPuO4+6HjX8M7n7D+Ale7wGq9/G4nh2v99O4
Lhj3Ojbu/Dru3/14xeVX+Ae+Ljde1lnkxss6y6v9Jn+f/ASv96PUe0eMl3UW
eb1/wnhZZ5EbL+sscuM13Y2XdRm58bIu88oXWPuAfq78BK/n5uv5cuNlXUZe
z/XW86/Gy7qM3HiNG6/pa7ys48jV1TqO3HjV/qw/Lz/B63mveo6qnk+q537q
eZd6zsN4WceRG69x4zUdjZd1H7nxsu4jN161b+73yU/w8jmWv698beXPKp9R
+WXK91H+BeM1bryml/Ear7p91ZOrzln1N+PlufwEr/3g2qes/bPa16l9iLpv
rvu5us+o9a/xerUuq+t/XWdqPqu/m4pPtSe48VprvNYar7XGa63xWmu81hqv
tcZrrfFaa7zOrTVe48Zr3HiNG69x4zVuvA7ncr++c+M1brzGjde48Ro3XuPG
a9x4jRuvceM1brzqPa31HsZ6z1Q9h1/PaVRdtv5OrHPJ/TnrXHLjZZ1Lbrys
c8mNl3UuufEaN16+b1RuvOr9X/V+hHp+purlNX9ZF5MbL+ticuNlXUxuvKyL
yY2XdTG58Ro3Xuu38bKOJjde1tHkxqt8DHVdsY4mN17W0eT+HutocuNlHU1u
vKyjyY3XuPFa/4yXdTe58ar3idTzZuUvqeu9dTe58bLuJjde1t3kxsu6m9x4
WXeTG69x47V+GC/rdHLjVe95qecAy/dT6zDrd3LjZf1Obrys38ntl3U9ufGy
ric3XuPGa7/PeFkHlBuvev9OPZ9ZfqxaH1sHlBsv64By42UdUG68rAPKjZd1
QLnxGjde+1zjZd1QbrysG8qNV/nk6r7FuqHceFk3lBsv64Zy42XdUO44rBvK
jde48drPGy/rjHLjZZ1RbrzKv1j3k9YZ5cbLOqPceFlnlBsv64xy42WdUW68
xo3Xvs94WZeUGy/rknLjVb7eus+3Lik3XtYl5cbLuqTceFmXlBsv65Jyx71z
47Vz4zVuvMaN17jxGjde48ar9svGT3DjNW68xo3XuPEaN17jxmvceI0br3Hj
9SvtubX7/zb+H6CdX/H91g/HrVONWw8Zd9993P3d8bfgJ7j7Iq/+75D3eePe
T4y7bh13fTTudXjc+X7ceWW84vgb/OLrcuO7c+M7bnzHje+48R03vs4X8hPc
+I4b33HjO258x43vuPEdN77jxnfc+I4b33HjuzgZX30IcuOrD0FufPUhyI1v
7WvbD7nx1YcgN776EOTGVx+C3PjqQ5AbX30IcuO7eBhffQtyddW3IDe++hbk
xrfqE/4+eb3Xv95/b3z1LcjrvePGV9+C3PjqW5Ab33HjO92Nrz4HufHV5yC3
/9bx5fZ/3P4vP+y/dX+5/bfuLzcP67msqnv583Lzynq9vN7/Ue+xqPcHqL91
ebn6b/zqbx1frv7W8eX1XKz6V33R75PXcyr1/ET5/cufXr7d8pOq/7j6b5zq
P67+4+W/K59X+VPKB6H+nsurvlH76LVfW/uCtZ9R9811f6b+a+s+oNaPte6o
61XNH5XXpXe16r9W/deq/1r1X6v+a9V/rfqvVf9dv+v/zqq/dXO5+lsXltt/
68Jy+791Rv1/XPtvHVlu/62Tyu2/dVK5/V/e1P/xtf/WVeX23/qp3Pwvn0fl
t/VQuflvPVRu/lv3lKu/dU+5+q9/6m+dVK7+1knl6l/Pe5efpuYR65tyf876
plz9rWPK1d86plz91w/1t+4pV3/rnnL1r+fqy7dU87X1Srn6W6+Uq791Sbn6
W5eUq/9+n/pbx5Srv3VMufrX+wvKH1bXReuPcvW3/ij391hnlKu/dUa5+u9+
Vf2tS8rV37qk3P5bd5Pb/3H7v8+1/9bp5PbfOp3c/Y1673C956J8hLWusk4n
d3/DOp3cPLROJzcPrdPJHYd1OrnxHTe++3nja11Pbnyt68mNr3U9ufEtP2it
j63ryY2vdT258bWuJze+1vXkxte6ntz4jhvffZ/xtQ4oN77WAeXG1zqg3PiW
D7vuc6wDyo2vdUC58bUOKDe+1gHlxtc6oNxx79z47tz4jhvfceM7bnzHje+4
8R03vuPGt/YLxo3vuPEdN77jxnfc+I4b33HjO258x43vuPH9jfZ+f84ht456
P+JzrNvscL9/h8/D7fC5qx0+37PjLfgJri9+h/7rHfp8d+gn3aFvcYf+uB36
sHa4jtjh9WeH89aOivvv8Hvd/3rOzQd9AnLzQZ+A3HzQJyA3H/QJvNqfcjxy
80GfgNx80CcgNx/0CcjNB30CcvNBn4DcfLj7BK7n/GF+oJU/zA+39mF+uLUP
88OtfZgfbu3D/HBrH+aHW3uCP8wPt/Zhfri1D/PDrX2YH27tw/xwax/mh1v7
MD/c2of54dY+zA+39mF+uLUP88OtNR/uvoLrOTcf9CHIzQd9CHLzQR+C3Hyo
57VqP9r+yc0HfQhy80Efgtx80IcgNx/0IcjNB30IcvPh7kO4nnPzQd+CXL31
LcjNB30LcvOhntOrOoT9kJsP+hbk5oO+Bbn5oG9Bbj7oW5CbD/oW5ObD3bdw
Pefmgz4Hufmgz0FuPvg+B7n5UM9nen8iNx98n4PcfPB9DnLzwfc5yM0HfSBy
80EfiNx8GDcf7j6Q6zk3H/SNyM0HfSNy46OfRG4+1HO53pfKzQffFyE3H/Sf
yOv/zNT/SzEf9KXIzQd9KXLzYdx8uPtSrufcfNDHIjcf9LHIzQf9LXLzoZ7H
dj9Cbj74Pgq5+aAfRl7vuaz3MpoPr95jV+9XMx/0ycjNh7tP5nrOzQd9NXLz
QV+NvN7HU+99qfeLmA/uQ8nNh/F6/tt80J8jr+cm6/m8eg6snjeq51rq+Qnz
Ydx8OLd2h7x8/eUHLx9x+U/Nh3HzYdx8GDfOh1ZuPoybD+Pmw7j5MG4+jJsP
4+bDeNW1qh5S++i1/2o+rN0hr/2buo+v+7la19f6rq7zNd/X3/0JXq35sNZ8
WGs+rDUf1poPa82HtebDWvNhrfmw1nxYaz7cfVnXc24+6OOSmw/6uOTmg+8D
kZsP9b4V6w2v4u37QOTmg+8DkZsPvg9Ebj7oc5ObD/rc5ObDuPlw97ldz7n5
oC9Obj7oi5ObD/rl5OaDfjn5CV5//+aD/jq5+aC/Tm4+jJsP+u7k5oO+O7n5
MG4+3H1313NuPujTk5sP+vTk5oP+Pbn5UO9Xsr74an73fSZy80G/n9x80O8n
Nx/0AcrNB32AcvNh3Hy4+wCv59x80DcoNx/0DcrNB/2EcvOh3qtlXfnVdd33
pcjNB/2Hcn+P/kO5+aAvUW4+6EuUmw/j5sPdl3g95+aDPka5+aCPUW4+6G+U
mw/1PjX9BK/Wc76PRW4+6IeUmw/6IeXmgz5JufmgT1JuPoybD3ef5PWcmw/6
KuXmg75Kufkwbj6Mmw++F0B+gpsP4+bDuPkwbj6Mmw/j5sNPtHLzQd+p3HzQ
dyo3H+6+0+s5Nx/0qcrNB32qcvNBn6rcfKj3J9bzM3X/pk9Vbj7oU5WbD/pU
5eaDPlW5+aBPVW4+jJsPd5/q9ZybD/pa5eaDvla5+aCvVW4+1Hsz67mpum/X
1yo3H/S1ys0Hfa1y80Ffq9xx6GuVmw/j5sPd13o95+aDPli5+aAPVm4+6IOV
mw/1ftt6Xq72a/TBys0HfbBy80EfrNx80AcrNx/0wcrNh3Hz4e6DvZ5z80Hf
rNx80DcrNx/0zcrNB32z8hPcfNA3Kzcf9M3KzQd9s3LzQd+s3HzQNyt33Ds3
H3a+Q24+3L8/Psd8GDcfxs2HcfNh3HwYNx/GT3DzYdx8GDcfxs2HcfNh3HwY
Nx/GzYdx82HcfBg3H36ndZ96h1yf6f2Iz9F3tkP/0Q59KDv0I+ywLr3D+uSO
E/w9uPvWO9y/3OE+1g73M3Z4X7vD+5sdrnN3uN7Z4XVvh/PfDvNBf7XcfNBf
LTcf9FfLzQf91XLzQX/1q+fnqx7jOOXmg/5qufmgv1puPuivlpsP+qvl5oP+
autSO+QP88O355+vX9f6lp+vX1fu5+v/tE7m5+v/lJuH+jbl5qG+zVfvX6h6
nn8ncvNQ36bcPNS3KTcP9VvK1V+/pVz99U/KjYv+Sblx0T8pP8GNi/2QGxf9
k3Ljon9Sblz0T8qNl35I68Q75MZLf6NcnfQ3yo1X/R8L/Y2v6tz+Prnx0t8o
N176G+XGS3+j3HjpVxzXryg3XvoP5cZL/6H8BFd/4ypXf/2BcvXUHyhXT/1+
4/r95Oqpf0+unvr35Ce4evr3IFdP/XVy9dRfJ1dP/XLj59bukNf7btVzXD3H
1XPcvBtXv0MrV3+/T67+484n484n48Zr3HiN1/sbjNd43QfvkNdzh/V8ST1n
UH7z8h2X//QEN16ey8ufUj6FqldX3bLqV1XHqP0q47V2h7zuY2pdWeuaun7W
vF7z0wle8anWeK01XmuN11rjtdZ4rTVea43XWuOlH0xuvPR3yY2X/i658dLf
JT/BjVfFQ3+X3Hjp75IbL/1dcuOlX0tuvPRryY2X/iu58dJ/JT/B1b/yXj+V
XD31R8nVU7+TXD31O8nVU/+SXD31L8lPcPWs+UI/klw99RfJ1VO/kFw99QvJ
1VP/j1w99f/InU/q//Pp/5Grf83L+n/k/h3o/5H7e/T/yI2Xfh658dLPIzde
+nPkxkt/jtx46c+Rn+DGq66X+nPkxkt/jtx46c+RGy/9NnLjpd9Gbrz0yciN
iz4ZuXGp97SWr73WK/pk5MZFn4zcuOiTkau//pZx/S1y9dcvIffz9UvI/Xzr
73I/3/q73M+3/i63nmL9XW4eWn+Xm4fW3+UnuHlY62Pr73Lz0Pq73Dy0/i73
78P6u9x6ivV3uflg/V1uPlh/l5sP1t/l5oP1d7n5YP1dfoKbD3Ufa/1dbj5Y
f5ebD9bf5eaD9Xe5+WD9Xf77tz8AUI9pQQ==
      "], 
      {Hue[0.6, 0.3, 0.85], EdgeForm[Hue[0.6, 0.3, 0.75]], EdgeForm[None], 
       Specularity[
        GrayLevel[0.2], 30], 
       TagBox[HexahedronBox[CompressedData["
1:eJxtnGXUHlUShN/xgQQSILgkwSHB3QlJSHB3d3d3d3d3d3d3d3d3d4etZ2t+
9bk/6tC1e/q73VV33rnTd5fBG2634rZ5r9fbsej1Wv0zE8YUxhb0H/X47/oI
/YRSqITJhCmFMYRamFyYqsuLvBGmEKbu/k7krDlQmEbo2/1N/vb0wljd3+Bv
zdDVFHmf7m/N2NUYed/ubw8R+nd/k789szBO9zf4W7MI4yZ4v+5vzSqMl+D9
u789mzBAGF9YTFhSmFSYQBguLNXpFvmEwghh6U63yCcSRgrLdLpFPrGwuLBs
p2PkkwijhOWEQV1N1LaiMLirgVpW6nQf2OWu2uk2qMtdTZi2yyF3TWG6Lofc
tTpdp+ly1+10mbbLXU8Y2uWQu6EwU5dD7kadJ0O63E07TYd2uZsJs3c55G4p
zNHlkLuVMGeC4+PGwtbCXAmOj5sI2whzJ/hsXS3bCvMk+OxdbdsJ8wrzCQcL
xwrDhPmFQ4Tjet4XkS8gHCoc3/O+iHxB4TDhhJ73ReQLCYcLJ/a8LyJfWDhC
OKnnfRH5IsKRwsk975PIFxWOEk4RRnc90dvpwhJdD/RyRs/7KvLhXS9n9rzP
RnS1n9XzHh/Z1Xp2z3t68a62c3reh6O6Ws7teR9GPrqr7Txh+a4martQWKGr
gVou6nnfLt2tfYmwcrcma18qrNL9Tf725T3v2+W7v32FsHr3N/nbVwtrdH+T
v31Nz/s6cp6Ni4Vre97nka/c1XKdsHZXA7VcL6zT87N0mXBDz89F5Kt1td7Y
83MS+epd7TcJ63c1U/utwgZdjdR6W8/P1dpdLXf0/Jys09VyZ8/PxXrd3767
532/fve37xE27/4mf/t+YYvub/K3H+j5mY2cZ/V24cGen9mNu7Uf6vkZ3aRb
++Gen0mevbuER3p+Bjfranm052cw8s272h4Ttu9qorYnhR26GqjlKWHHBN+q
q+1pYacE37qr9Rlh5wTfpqv9WWGXBN+26+U5YdcE367r5XlhtwTfvuvtBWF3
YQ/hS+FX4SBhT+Er4beef5ci30v4Wvi959+lyPcWvhH+6Pl3KfJ9hG+FP3v+
XYp8X+E74a+ef5ci30/4Xvi759+lyPcXfhD+6fl3KfIDhB+Ff3v+nYr8QOEn
4T/h6E4TtMl10Dmm0wAtisy/a0d1uWNm/l05usvtI35qzznkji2c1nMOuf0y
/+6c0uWOm/l349Qudzzh/J5zyJ1AuKDnHHInzPy7Qg65k2R+bskhd1Lhyp5z
yJ1CuKrnHHIHZn6uySF3yszPJTnkTiXc3HMOudMKt/ScQ+50mZ9bcsidMfNz
Qw65Q4R7e84hd2bhvp5zyJ0l83NFDrlzZ96X5JA7j/B4zznkzi880XMOuQtk
fibJIXexzHuaHHKHCy/2nEPu4sJLPeeQO0p4OcF5jhdUPFp4JcF5jhdSvITw
aoLzHC+seEnhtQTnOV5E8VLC6wnOc7yo4qWFNxKc53iY4mWENxMcDdBiWeGt
BEcTtFlOeFvxO8LWivcUvlD8rrCN4r0y/y5E/p6wreK9M/8uRP6+sJ3ifTL/
LkT+gbC94n0z/y5E/qGwg+L9Mv8uRP6RsKPi/TP/LkT+sbCT4gMy/y5E/omw
s+IDM/8uRP6psIvigzL/LkT+mbCr4oMz/05E/rmwm+JDhJ971hRtDxd+6VlD
tDwi8+9K5GiIlkdm/p1BM7Q7KvNvLBqh1dGZf1MjRyO0Oibzb2rkaIRWx2b+
TY0cjdDquMy/qZGjEVodn/k3FU3Q5oTMv4NogBYnZv4djBxN0OYkoddpgjan
ClmnAVqclvl3k57p/Qyh7Hqk1zOFKsHpkV7PEuoEp0d6PVtoEpwe6fUcoU1w
eqb3c4Uxup7o7fzMv9u9rrcLhL5dT/R2sTBW1xO9XZL5dz1y3g2nC5dm/p2P
vOy0uEzo39VALVcL42R+l5wnXJP5vRB5n67WazO/JyLv29V+nTCgq5nabxTG
72qk1psyv1ci79fVenPm90zk/bvabxEm6mqm9tuFibsaqfWOzO+lyMfrar0z
83sq8gFd7XcJk3U1U/u9wuRdjdR6X+b3WuQTdrXen/k9F/lEXe0PCIO6mqn9
YWFwVyO1PpL5vRj5pF2tj2Z+T0Y+WVf7Y8LUXc3U/qQwTVcjtT6V+b0a+cCu
1qczv2cjH9TV/owwfVcztb8ozNDVSK0vZX4vRz5VV+vLmd/TkU/d1f6KMLSr
mdpfF2bqaqTWNzK/1yOfrqv1zczv+cin72p/S5i1q5na3xfm6mqk1g8ynwsi
H9LV+mHmc0LkQ7vaPxLm7Wqm9k+F+boaqfWzzOeKWbtavsh8TphNeFv4MvO5
IPLZhXeErzKfCyKfQ3hX+DrzuSDyOYX3hG8ynwsin6vT4tvM54J5ut6+z/ze
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
PZeNfKCwu+KjS89lIx8k7KH4mNJz2cgHC3sqPrb0XDbyKYW9FB9Xei4b+VTC
3oqPLz2XjXxqYR/FJ5Sey0Y+jbCv4hNLz2Ujn1bYT/FJpeeykU8n7K/45NJz
2cinFw5QfErpuWzkMwgHKj619Jw28hmFgxSfxjNbeE+wN87kGS28B9gLZ5We
65JD7pVlN/MtnHuVsGzhHHKvFZYrnEPudaXnjuSQe2PpuRk55N4krF84h9xb
hQ0K55B7W+m5GjnkPlh6bkUOuQ+V/v+IkUPuo8JOhXPIfaz0XIsccl8sPZch
h9yXhIML55D7qnBI4RxyXys9t9ldeFLxm6XnLMyynlL8Vum5CrOkZxW/W3qO
sZ/wnOL3Ss8xWJO1Pyw9d2BN1v4ITwqvydqf4knhNVn7s9JzCXLI/bH0dzU5
5P4kXF44h9xfhSsK55D7W+nvbnLI/bP0dyE55P4l3Fk4h9x/hbsK55D7X+nv
RnLIzSt/95BDbiH+dOEccmvxZwrnkNtU/i4ih9xxK5/LySF3POHdwjnkTiC8
VziH3Akrn9vJIXfKyudOcsidSvi+cA650wo/FM4hd7rK51K+myZRPKPwa+Gz
+qSKh1Q+s3NWnkLxzJXPzHyXDFQ8i/BP4TVZe/bK50bWZO05hLz0mqw9t1CU
XpO156l8riSH3MUqn4vIIXe4MKB0DrmLC+OXziF3VOVzEznkLln5vU0OuUvR
c+kccpel59I55C5X+b1ODrnrVn4vkEPuesK8pXPI3VCYr3QOuRtVPhOQQ+6O
ld8p5JC7EzWVziF3V2oqnUPubsLSCc45YmPFuwvLJDjniE0U70FPCc45YlPF
e9JjgnOO2EzxXsLyCc45YnPFewsrJDjniC0U7yOsmOCcI7ZUvK+wUoJzjthK
8X7CygnOOWJrxfsLqyQ454htFB8grJrgnCO2VXygsFqCc47YTvFBwuoJzjli
e8UHC2skOOeIHRQfIqyZ4OwB9sKhwloJzp5gbxwmrK14HeFmxU8KO7CXhFsU
P1X5XBL5esKtip+ufC6JfH3hNsXPVD6XRL6BcLviZyufSyLfULhD8XOVzyWR
byTcqfj5yueSyDcW7lL8QuVzSeSbCHcrfrHyuSTyTYV7FL9U+VwS+WbCvYpf
rnwuiXxz4T7Fr1Q+l0S+hXC/4lcrn0si31J4QPFrlc8lkW8lPKj49crnksi3
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
rSFa/tD43oCe6f3HxnN/eqTXn4RRCU7P9P5z43sBeqb3XxrP9emZ3n8Vlq7d
M73/JixTu2d6/73x3J+e6f2PxnN7eqTXP4UVE5ye6f2vxnN9eqb3vxvP5emZ
3v8RVqvdM73/K6xeu2d6/6/x3J6e6Z1/cT1zd3qk10x8nQSnZ3rPW8/l6Zne
i9ZzdXqm91J8w9o903slvlHtnum9bj13p2d6b1rPzemRXlvxzROcnul9jNZ3
GvRM731b30nQM72PJb5N7Z7pfWzxbWv3TO/9Wt9Z0DO9j9v6zoEe6XU8YacE
p2d6H9B6rk/P9D5+67k8PdP7BMLutXum9wmFPWr3TO8TtZ7b0zO9T9x67k6P
9DqJsG+C0zO9Tyrsl+Dc44ypeDJh/wTnHqeP4smFAxIcDdFyCuHABEdTtB0o
HFRbU7QdJBxcW1O0HSwckuDcA/VXPKVwaIJzDzSO4qmEwxIcj/BqauHwBMcj
vJpGOCLB8Qzvpm19r4FneDdd63sJPMO76YVja3uGdzMIx9X2DO9mbH1vgWd4
N6T1vQMe4dVQ4eTaa7L2PMJ5tddk7Xlb30uwJmvP1/pegTVZe37h4tprsvYC
wiW112TtBVvfO7Amay/U+t6ANVl7YeHKBD9FmEnxIq3vFSI/VZhZ8aKt7xUi
P02YRfGw1vcKkZ8uzKp4sdb3DJGfIcymeLhwneIzhdkVjxCuV3yWMIfika3v
JSI/W5hT8eKt7yUiP0eYS/Go1vcSkZ8rzK14dOt7isjxCK+WEG5JcDzDuyVb
32vgGd4t1fpeAs/wbmnhztqe4d0ywl21PcO7ZVvfW+AZ3i3X+t4Bj/BqeeH+
BMcjvFqh9b0EmqLtiq3vFdAUbVcSHqmtKdquLDxaW0O0XKX1vQM90/uqre8N
6JFeVxOeSnB6pvfVW98r0DO9r9H6XoCe6X1N4fnaPdP7WsILtXum97Vb3xvQ
M72v03ruT4/0uq7waoLTM72v1/pegJ7pff3Wc316pvcNhLdq90zvGwpv1+6Z
3jdqPfenZ3rfuPXcnh7pdRPhgwSnZ3rftPVcn57pfbPWc3l6pvfNhU9r90zv
Wwif1e6Z3rdsPbenZ3rfqvXcnR7pdWvh6wSnZ3rfpvWdCD3T+/at7zTomd53
EH6o3TO97yj8WLtnet+p9Z0HPdP7rq3vLOiRXncTfktweqb33VvfC9Azve/R
eq5Pz/S+p/B37Z7pfS/hn9o90/veref+9Ezv+7Se29Mjve4r5AlOz/S+n1Ak
OPdA2yreXygTnHug7RQfIFQJjoZoeaBQJziaou1BQtNYU7Q9WGgba4q2hwhj
JDj3SDsrPlQYM8G5R9pF8WFCnwTHI7w6XOib4HiEV0cIYyU4nuHdka3vRfAM
745qfa+BZ3h3tDBuY8/w7hhhvMae4d2xre898ARvjmt9j4EHeHF863uLyPEA
L05ofW8ROR7gxYmt7y0ixwO8OKn1vUXkeII3J7e+t4gcj/DqlNb3FpHjEV6d
2vreInI8wqvTWt9bRI5HeHV663uLyPEIr85ofW8ROR7h1Zmt7y3wBG/Oan0v
gSd4c7YwfWNP8OYcYYbGnuDNua3vLcgh97zWc2tyyD1fWLhxDrkXCIs0ziH3
wtZzbXLIvaj1XJIcci8WVm6cQ+4lwiqNc8i9tPVMnBxy72g90ySH3DuFLRvn
kHuXsFXjHHLvFrZOcObolym+R9gmwZmjX674XmHbBGeOfoXi+4TtEpw5+pWK
7xe2T3Dm6FcpfkDYIcGZo1+t+EFhxwRnjn6N4oeEnRKcOfq1ih8Wdk5w5ujX
KX5E2CXBmaNfr/hRYdcEZ45+g+LHhN0SnDn6jYofF3ZPcOboNyl+QtgjwZmj
36z4SWHPBGeOfovip4S9Epw5+q2Knxb2TnDm6LcpfkbYJ8GZo9+u+Flh3wRn
D7IXnxP2S3D2JHvzeWF/xf8DHaT6jg==
         "]],
        Annotation[#, "Geometry"]& ]}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics3D",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  Boxed->False,
  DefaultBaseStyle->{
   "MeshGraphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
  Lighting->{{"Ambient", 
     GrayLevel[0.45]}, {"Directional", 
     GrayLevel[0.3], 
     ImageScaled[{2, 0, 2}]}, {"Directional", 
     GrayLevel[0.33], 
     ImageScaled[{2, 2, 2}]}, {"Directional", 
     GrayLevel[0.3], 
     ImageScaled[{0, 2, 2}]}},
  Method->{"ShrinkWrap" -> True}]], "Output",
 CellChangeTimes->{3.900481265386588*^9},
 CellLabel->"Out[25]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztfXe8JVWV9bNf6pxzExoakaQgoIigo47jmIdxBMSAMChJkoggOOSgoKQG
kdxkm9BgAFRAQCUJKCAGaCQMKCJK0nac+T6d991dddaptatWnap733O++UN+
v/uafl23ztr7nLPz2ec9Ox+w+8f33vmAPXbZefE/7r/zfrvvscunFr9t3/07
v+p/WV/fuI/39fXvtLhvoPP/I319+sdufX3/637xtux/+0/e56jzR7bf9dCd
fjd3u/wf1qCH/j773+FtTr7qp7fsuN/nR96306ezzwd2O/SFpVc8sMl7T3o+
f3B1+tKb8zfvd8ip33hh210Oti/09Wc/B2ykkRMv/cF9533r3xef8fTHs+dX
o+++Mf/um5bd8sKy3T97RvatIf9d+yy77qeDle9uXYz7+Ac6z9q3xmc/B/m7
9tlm3Kafzb+0iF6wZf6CxfeNvC1ji311UoBQesHjZ37t4UjAQnrHFvk7djrm
3O+CY31TAgvoHX3jsp/9Rkgf/steMJ/+/zWCk9PEy/rznxlV7mXz6P83Fayd
Wf+yOL/yZZsIXs8WLxvIX3bLJd/9nbGreMFcetnG+cse3X63Q7HC+uaIlw3m
L9tv5cu29mTOqb4MqJpeZmRGvvX8sqH8ZVgVxQtm9/Cy4bqlMav8svni2+Pr
1sLMLr5dnfxW355QzPb0V5734eIbM9p8e2Ld9E7v4tuGfJ1jH3xri293hFj8
9qT823ddcNPTfgKntfn25LoZm9oG+ZS6GZvSxberS6/Vt6fWIZ/chu5p+bcz
3eG+PYn+/1XZ//ZPH3nv1XHZz61/WXXp9fKy6fnLoGeKF0zs4WUz8pedfOuT
sz2ZE3p42cy62R5ffdmMkXde0uZl1ckXLzO1lnzZrLq1MNzDy2bXkTnU+8uq
S6OXl82pU0mD1Zdtcu3DU5Mvm1snswZ6f1lVJfXysnl1S6O/h5fNz192/O1P
L/RkjuvhZUHWjpx+9U/Kv6sul5dVBzALptUA53/7yZFzrn+Uf/fomV9f6dnR
foDD5ABX/uCPRgl0gC0rT0FP4Aeyd6+4508jy29/YeTUK++fLBbaf4/B6+1z
0c2/nix2WO+vH3Svt8+ZX38YHHIy+S/VMczZaDHGUGWMy+/8PXHKibE/9zxM
Pw/TsdrtZ79xLLl0/+8Yjdcffp77zcfKho7b2GM9XljU/Jzj5/8Zo/EGwnhh
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\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"5e91ec4e-cc1f-4ad6-abf9-c9232cfd5bf7"]
}, Open  ]],

Cell["\<\
Use the idea above to construct a Seidel mesh, i.e. a mesh region with \
tunnels going in every direction without crossing:\
\>", "Text",
 CellID->131326172,ExpressionUUID->"c62d2214-aa3a-4859-894b-7889e81f6502"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SeidelMesh", "[", 
   RowBox[{"{", 
    RowBox[{"r_", ",", "s_", ",", "t_"}], "}"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"PatternGridMesh", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Mod", "[", 
           RowBox[{"i", ",", "4"}], "]"}], "\[Equal]", "2"}], "&&", 
         RowBox[{
          RowBox[{"Mod", "[", 
           RowBox[{"j", ",", "4"}], "]"}], "\[Equal]", "2"}]}], "||", 
        RowBox[{
         RowBox[{
          RowBox[{"Mod", "[", 
           RowBox[{"i", ",", "4"}], "]"}], "\[Equal]", "0"}], "&&", 
         RowBox[{
          RowBox[{"Mod", "[", 
           RowBox[{"k", ",", "4"}], "]"}], "\[Equal]", "0"}]}], "||", 
        RowBox[{
         RowBox[{
          RowBox[{"Mod", "[", 
           RowBox[{"j", ",", "4"}], "]"}], "\[Equal]", "0"}], "&&", 
         RowBox[{
          RowBox[{"Mod", "[", 
           RowBox[{"k", ",", "4"}], "]"}], "\[Equal]", "2"}]}]}], ",", "0", 
       ",", "1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"3", "+", 
        RowBox[{"r", " ", "4"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", 
       RowBox[{"3", "+", 
        RowBox[{"s", " ", "4"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", 
       RowBox[{"3", "+", 
        RowBox[{"t", " ", "4"}]}]}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellLabel->"In[26]:=",
 CellID->194467080,ExpressionUUID->"0b34d564-b3bb-433c-b284-ec92cf0c1a0d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SeidelMesh", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "1", ",", "1"}], "}"}], "]"}]], "Input",
 CellLabel->"In[6]:=",
 CellID->821694021,ExpressionUUID->"f2961b07-5272-4c21-a269-b46d9d3b77b3"],

Cell[BoxData[
 Graphics3DBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = HoldComplete[
     MeshRegion[CompressedData["
1:eJyV2jGS1FAMhOEpSAgJCAhIOAl7Bo5AFTFX5whsMHLwv/lK5gW43DvjaZ6t
Vkvy919/fv7+8Hhf7/98fPzv+vsDf3h7DX8C/hn4F+BfgX8LLn6D9+/XOa5T
/oOX/+DlP3j5D17+2sfBj//fW47Bj/1/nh/7/zw/9v95fuz/87z8db8HL//r
87hOrzfn5T94+Q9e/oOXv57Lwcv/+jyuU/6D93fmvPwHL//By1/xM3j5X5/H
dcp/8PIfvL8/5+U/ePkrzgcv/+vzuE75D17+g5f/4OU15+V/xHPw8r8+j+uU
/+DlP3j5D17+g4vXLOmldEjxrbjR86j7rP3b9H07ln/1v3j5V/+Ll3/1f8tD
4lf9L37s/9tr/tX/4sf+v73mr3ypfaz+F+/3qv/Fy7/6X7z8ldd1v6v/xcu/
+l+8/Kv/xctf/kPPZfW/ePlX/4v3d6r/xctfPknxU/0vXv7V/+LlX/0vXv7y
o9Kp6n/x8q/+Fy//6n9x5Z9rBZdOyYfK38k3yY8oz2v/ymvTe+mo9Elxr3jS
c3rs/xwfr3Hx1fHY/+fx2P/n8dj/5/HY/+ex/FVvKA+J3+H/c17+h/8PXv6H
/+91H69x5VHtb/kf/j/n5X/4/+Dlr/pNeV33+/D/wcv/8P85L//D//dzj9e4
fIme1/I//H/w8j/8f87LX/W8fJ7i//D/wcv/8P/By7/6v9Xts+TzFP+q41Uf
q+5UPac82d/ffL10Sj5U/k6+SX5E97n8t7wkPZWOSp8U94qn8t/uv/ZVfHUs
/+p/8fKv/m99JdUbykPiV/0vXv7V/+Llr/6X6iLlS+1j9b94v1f9L17+6tOp
flNe1/2u/hcv/+p/8fJXP1R1svyT4qr6X7z8q//F1U+atdXD18J1FFfqg6q/
qL6d6qH+zta/kc9T/KuOV32sulP5vPy3+kN+VDolHyp/J9+k53HW1gfZ8pL0
VDoqfVLcl//2nOr+a1/FV8fyr/4XL3/ND9RXUr2hPCR+1f/i5V/93+Yc6n+p
LlK+1D5W/4v3e9V/zWPUp1P9pryu+128/Kv/xTU3mLX1E6+F68iX6HnVHEnz
GfW9er2tT686Wf5JcaU+qPqLqtvKf+szqZ6Xz1P8q45XfSzfMWvrI2/1h/yo
dEo+VP5OcVP+W55X/lRekp5KR6VP5b/Fk55T3X/tq/jqWP7V/6NP9HiNa66g
fpPqEOUn8e7fq/9HP+vxGtf8Q30x1UvKo9rf8q/+b3P3WZrTqH+nuk75Xs+B
5vCab/R72zxWfUbVn/Ilel41R1J/rvy3eYL6oaqT5Z8UV+qDqr6ctc3htj6T
6nn5PMW/6nj5o/Lf6jnVSao/5EelU/Khiu/y3/yI8rzyp/KS9FQ6Wv5b3Cue
9Jzq/mtfxVfH8tf7TJpza/6hvpjqJeVR7W/1f3tvaZbm3Jp/qC+mekl5VPu7
vce0zd01j7n7nsiW1+++L7C9B1b93+ZGd+ecm/+4O+/SHGl7j+HuPGGrh+/2
ldWvVR90e9/ibj9sq9vv9kXUb1Adr/p4mxferZM233nXL8uHyt9tc827eX7z
x3f1XjoqfVLcK570nOr+a19Pvv8API9NDw==
      "], {
       Hexahedron[CompressedData["
1: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
Uw==
        "]]}, 
      Method -> {
       "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
        Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
        Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
        Automatic, "CheckIntersections" -> Automatic, "BoundaryNesting" -> 
        Automatic, "SeparateBoundaries" -> Automatic, "TJunction" -> 
        Automatic, "PropagateMarkers" -> True, "ZeroTest" -> Automatic, 
        "Hash" -> 1235118394479816410}]]}, 
    TagBox[GraphicsComplex3DBox[CompressedData["
1:eJyV2jGS1FAMhOEpSAgJCAhIOAl7Bo5AFTFX5whsMHLwv/lK5gW43DvjaZ6t
Vkvy919/fv7+8Hhf7/98fPzv+vsDf3h7DX8C/hn4F+BfgX8LLn6D9+/XOa5T
/oOX/+DlP3j5D17+2sfBj//fW47Bj/1/nh/7/zw/9v95fuz/87z8db8HL//r
87hOrzfn5T94+Q9e/oOXv57Lwcv/+jyuU/6D93fmvPwHL//By1/xM3j5X5/H
dcp/8PIfvL8/5+U/ePkrzgcv/+vzuE75D17+g5f/4OU15+V/xHPw8r8+j+uU
/+DlP3j5D17+g4vXLOmldEjxrbjR86j7rP3b9H07ln/1v3j5V/+Ll3/1f8tD
4lf9L37s/9tr/tX/4sf+v73mr3ypfaz+F+/3qv/Fy7/6X7z8ldd1v6v/xcu/
+l+8/Kv/xctf/kPPZfW/ePlX/4v3d6r/xctfPknxU/0vXv7V/+LlX/0vXv7y
o9Kp6n/x8q/+Fy//6n9x5Z9rBZdOyYfK38k3yY8oz2v/ymvTe+mo9Elxr3jS
c3rs/xwfr3Hx1fHY/+fx2P/n8dj/5/HY/+ex/FVvKA+J3+H/c17+h/8PXv6H
/+91H69x5VHtb/kf/j/n5X/4/+Dlr/pNeV33+/D/wcv/8P85L//D//dzj9e4
fIme1/I//H/w8j/8f87LX/W8fJ7i//D/wcv/8P/By7/6v9Xts+TzFP+q41Uf
q+5UPac82d/ffL10Sj5U/k6+SX5E97n8t7wkPZWOSp8U94qn8t/uv/ZVfHUs
/+p/8fKv/m99JdUbykPiV/0vXv7V/+Llr/6X6iLlS+1j9b94v1f9L17+6tOp
flNe1/2u/hcv/+p/8fJXP1R1svyT4qr6X7z8q//F1U+atdXD18J1FFfqg6q/
qL6d6qH+zta/kc9T/KuOV32sulP5vPy3+kN+VDolHyp/J9+k53HW1gfZ8pL0
VDoqfVLcl//2nOr+a1/FV8fyr/4XL3/ND9RXUr2hPCR+1f/i5V/93+Yc6n+p
LlK+1D5W/4v3e9V/zWPUp1P9pryu+128/Kv/xTU3mLX1E6+F68iX6HnVHEnz
GfW9er2tT686Wf5JcaU+qPqLqtvKf+szqZ6Xz1P8q45XfSzfMWvrI2/1h/yo
dEo+VP5OcVP+W55X/lRekp5KR6VP5b/Fk55T3X/tq/jqWP7V/6NP9HiNa66g
fpPqEOUn8e7fq/9HP+vxGtf8Q30x1UvKo9rf8q/+b3P3WZrTqH+nuk75Xs+B
5vCab/R72zxWfUbVn/Ilel41R1J/rvy3eYL6oaqT5Z8UV+qDqr6ctc3htj6T
6nn5PMW/6nj5o/Lf6jnVSao/5EelU/Khiu/y3/yI8rzyp/KS9FQ6Wv5b3Cue
9Jzq/mtfxVfH8tf7TJpza/6hvpjqJeVR7W/1f3tvaZbm3Jp/qC+mekl5VPu7
vce0zd01j7n7nsiW1+++L7C9B1b93+ZGd+ecm/+4O+/SHGl7j+HuPGGrh+/2
ldWvVR90e9/ibj9sq9vv9kXUb1Adr/p4mxferZM233nXL8uHyt9tc827eX7z
x3f1XjoqfVLcK570nOr+a19Pvv8API9NDw==
      "], 
      {Hue[0.6, 0.3, 0.85], EdgeForm[Hue[0.6, 0.3, 0.75]], EdgeForm[None], 
       Specularity[
        GrayLevel[0.2], 30], HexahedronBox[CompressedData["
1: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
Uw==
        "]]}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  Boxed->False,
  DefaultBaseStyle->{
   "Graphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
  Lighting->{{"Ambient", 
     GrayLevel[0.45]}, {"Directional", 
     GrayLevel[0.3], 
     ImageScaled[{2, 0, 2}]}, {"Directional", 
     GrayLevel[0.33], 
     ImageScaled[{2, 2, 2}]}, {"Directional", 
     GrayLevel[0.3], 
     ImageScaled[{0, 2, 2}]}},
  Method->{"ShrinkWrap" -> True},
  ViewPoint->{1.3, -2.4, 2.},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellLabel->"Out[6]=",
 CellID->79605682,ExpressionUUID->"6e265a5b-c6e7-4fe6-8d1e-c2a8a8a27105"]
}, Open  ]],

Cell["\<\
By converting to a boundary mesh and styling it, it becomes easier to \
comprehend:\
\>", "Text",
 CellID->25257197,ExpressionUUID->"e96f5304-ea05-4704-b93f-aa604a7c6bf9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HighlightMesh", "[", 
  RowBox[{
   RowBox[{"BoundaryMesh", "@", 
    RowBox[{"SeidelMesh", "[", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Style", "[", 
      RowBox[{"1", ",", "None"}], "]"}], ",", 
     RowBox[{"Style", "[", 
      RowBox[{"2", ",", 
       RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}], "}"}]}], 
  "]"}]], "Input",
 CellLabel->"In[27]:=",
 CellID->92659271,ExpressionUUID->"06ef41f6-ca5f-43fa-97db-cdefb67dd022"],

Cell[BoxData[
 Graphics3DBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = HoldComplete[
     BoundaryMeshRegion[CompressedData["
1:eJyV3DGuNDERReEWCImQgICA4MdCbIO3BpaARMxWWQpLIOma4Ks5snBi9Xnz
eqpvu93Xdnn+8s9//+Nfv3me5z+/e57fPv9v+e/f4w8/3/Hvg/8h+B+D/yn4
n4P/Cn6C/zX43+B1/cP9++c4zqM+w9VnuPoMV5/h6jNcfYaf4OozXH2qHQxf
+v1Qw1f7eY9X+3mPV/t5j1f7eY9X+3mPV/t5j0/w1X7eY/Wp52G4+nw+H+fx
fHOsPsPVZ7j6DFef4eoz/ARXn+HqU/3CcPX5fD7Ooz7D/Z45Vp/h6jNcfYar
z/ATXH2Gq0/1j8PV5/P5OI/6DFef4X7/HKvPcPUZrj7DT3D1Ga4+9Z4Yrj6f
z8d51Ge4+gxXn+HGNcfqM1x9hp/g6jNcfep9OVx9Pp+P86jPcPUZrj7D1We4
8c6x+gw/wdVnuPqUbxiuPp/Px3nUZ7j6DFef4eozXH2Gex1zfIKrz3D18f/l
6vP5fJxHfYarz3D1Ga4+w9VnuPoMP8HVZ7j6lI8crj6fz8d51Ge4+gxXn+Hq
M1x9hqvP8BPc655j9Vl+Ea4+n8/HedRnuPoMV5/h6jNcfYarz/ATXH2G13VP
qfFE+ejyj+Wbyi/Ue7LeD9UvVn9Qz0Hd/9v46larj+Mvufo4/pKrj+Mvufo4
/pKrj+Ov2zizrt/xl3y1n/d4tZ/3eLWf93i1n/d4tZ/3eLWf9/gEX+3nPVaf
Gm9XO3D8Jfd6HU/Jjd/xkdz4a16g2qvjI7nxO96RG7/jF7nx1/xFPVeOX+Te
N8cvcr/H8Yvc9un4RX6Cq4/jl9s8TvUvjl/k6uP4Ra4+jl/k6uP4RX6Cq4/j
l9t8VvWzjl/kXq/jEbnxO76QG3/Nu9X7wPGF3PgdL8iNX/8vN/75f+P3vOvz
cR7b53Db53Cvd7jXO9x2MVy9h3sdc6w+w9Wn5knr/a3/l6uP/l+uPvp/ufro
/+UnuNen/9evTCkfsz4f51Ef/b9cffT/cvXR/8tPcPXR/9/mzaeUz6t59Jo/
rnnTmi+sebKaH6p5kRO8xsF1/z8FXn63fG75u/JN5UfqPVzvn+rXT/DqJ1b7
mfr5zkuPqlf7eevVft56tZ+3Xu3nrVf7eevVft76BF/t563Vp9aTapxT17/W
U+Be71ofgRv/Wh9561r3qvFY3ae13gE3/rV+ATf+tX7h9z3feY0nq515f9b6
BdzzrfULuO1zrV/AT3D1WesXxvF85zWurudNfdb6BVx91voFx+qz1i/gJ7j6
rPULv+/5zmt+ofodr3etR8BPcONf6wtvrf+X1zxI9Y/GP9z4h5/gxj/c+D//
/3znNV9T/bjtc7jtc7jXO9zrHe79H66uh1quPsPVp/IAan6q3ltr/h+uPmv+
H64+a/4frj5r/h/udaz5f4+f77zm7+q9rj5r/h+uPmv+H64+a/4ffoKrj/7/
lhcypeYxy99UnkjlR1ReQK2H1zrwr+AneK131Thvitzr1c/LjV9/XuPLW16O
90O+9P/5Ho/9cbX3Wz7QTaeKt2rj1w/LbT/mF8m9Xv2z3Pajf77lRemf1+fj
PKWLf9dvy9XH/CK5+ujP5eqjP7/lh9V91W/LjV//LDeeykur9qS/lRuPflVu
PJUPp/9cn4/z1PNg/PpVuXqYPyP3evW3ctuP/tbndopcfXyP3p7/4eqjH5ar
z3D1+UUtP8HVR/+8xv/Pd179ndc73PiHG/9w46m8zOpP9Z9y49FPyo2n8mVr
Hbfmd+q9qD+U2370h3KvV38oP8HVW394y4udUuvE+o4p9V6sPNnKD628yMoH
9DmecoJX3lPN90+5vdfVS278+sNaZ7jlJZef8D7Jl54/3+Op8ZD+sHxx+dOb
77n5oPIL9d6u92G9B07w6rfU5/YcVHup+1Z6VK0++kO5+ugP5Se4+ugP13zx
852X363rNH79odx4Ki+//HTpqD+UG4/+0PthPPrD9fk4T40Hqh2ot/5Q7vn0
h/IT3PajP7RdTpGrj/7wNv6pdq8/lKuP/lDu9+gP5eqjP/T5nHIb1/l9cuMf
bvzDjaf2pdR4svoR/aHcePSH9kfGU3lytX5W8wL1PtAfym0/+kO516s/lKur
/vC2L2jKWseeEuepeYF6H9Q+odofU/tC1vrGW07wyn+vvI8pt7zDWo/UT1Ye
ZeUbVp5d5aNVnlflQ1UeUOW/3PaJDa88iNV+3nq1n7de7YfjWoes9bpaB6v1
olonqfWB2345/fNtfVpd5F6v/lZu/DWu1d/e8mX1t3Lj1x/Jjd/+vvrX6ldu
eb239lX3oa6vaq9Xfyu3fZo/IFcf/fDKY3i+c/WpvAf9s1x96vrNH5Crj35b
foKrj/7c+zFFrj6V/1H3Vb8tN379s9z49c9y49c/39qfflhu/PpbufHP/xv/
cOP/fD7OY/scbvs0brnXO9z7PFz9DrVcfYarT+1zrv0DlVekP5erT/Uv5g/I
1Uc/Lz/B/X79v/3dFLn6VP5ZrXvVfEe9h/T/cvXR/8tPcPXR/9/2vU9Z+apT
4jy1DlfzL/Ueqn3wtf/bfmjKCV77XCu/27j0/7d8O/1/7Ze6vXf9vtp3Uvs5
at9D5ftXnnvld9/2F+n/K++18klv/sPzVl5e5btVXljlQ1UeUOW/3PZZ6f9v
vkq95Mav/691qlqfkRu//v/m/7yvcuPX/9c8Ss0f1Lj5ls96G2/VOKb8bvnc
8oPls07weg+rz63frf6mnrNqj3WfS4+q1Uf/Lz/B1Uf/7/dNkatP5TfXuKWu
R/8vN379v7oYv/5/fT7OU+Ouuh/Gr/+XG//8v/EPN/7P5+M8ts/hts/hNZ6s
dub9HK5Oh1quPsPVp37Hp/bHVt68/l+uPjV+rudK/y9XH/2/3O/R//s8T5Gr
T+2vqDyzWl+seZbqf/X/cvXR/8vVR/+/9kU83/nalzYlzlN5b7XeWfMs1f+6
DjnF9bcpJ3j9nk3t4/T7K2+v1mvVUW78ta9Uv33LF6x1Yu+ffOn58z0e/W3l
R1ee8i2vsdazb3mjtp9bnqPXe8ubq/y1WsebUvlBladzy++85Xeozy1/odb5
a337BK/125rnmHLLW9Vvy41f/1zzKzWvcMuX1d/KjUe/U/199XPVf9RzXO39
ls9x07Wur2qvV38rt/3obz3vFLn66G/llfdc+S7q43v6dv3mh8hPcPXRP6vv
FHnlc1ceT90/4x9uPPpVeeWRV/5QtRvj0R/anoxHf7g+H+epfPfKc6r1mxrX
1fPg9eoP5eqnP/S5miJfv08wJc5Tef+V71XrWDW+rX7B52zKCb72Nb5FffSH
8trPUHls1X8Zf/2+iP5QXvsoKn+u+s2l58/3ePSH8to/5/fUvo7K59Mfym0/
1e/f9nmc4LWPofK5psgrf1x99IfyyndUn1sea70X1eeWP1h5fLXeNUXu9eoP
b+9pr19e42/j0R/KK3+0fIPx1HyA/rDGkTWeq3FP+f3y0eVnb77n5oNO8HrP
q8/tPVD9a/Vz1R/Uc1Dtq+5z6VH1Ca4++kP/f4rc6x1eeczlXytu49Efyo2n
8qTLH5cu+kP1Mh794fp8nMf4K9+98nhqfr/GRfU86A/l6qQ/nP+zyNfvVE2J
8/henVL57pUnVOsHNS6q5+EEX79v8Rb10R/K1ad+D0U/KVefyouq9RL9p1x9
jFtev/+32s/Uz3dev3O22s9br/bz1qv9vHXljdV60mo/b73aD8fy+n2U2vc5
Ra4++md55cPVOtkJbvy1b1V/Kzd+/a288vZqPe8EN/7aV6H/lFcevfHrV+WV
71z5iLVOafu85WOe4JV/V+tOU+SVZ6Q++md55YNUHkSt16rPbb36BK/1yZp3
mSJXH/25vPJNax36BDf+mjfSP8uNX/8sr7zYWi8/wY2/fM3UU+T1Hqv+u/rF
6m/qOav2Vfet9KhafaZWH/22XH3qd83053L1qfzmynvQz8vVp67f/AG5+uj/
5eqj/5erT+3nrDz4yo+pef8a79Vzov+X+3eLXD/4KXEe/cWU2l9aefCVH1Pr
EDX+PMFtR1PUR/8vV5/6vT/9v1x9Ku+/8oH0/3L1qX7B65Gv9jP1852v9kMt
X+3nrVf7eevaF1H5Uqv9vPVqP299gq/289bqo/+Xq4/+/7avo/K9qh9XX3nt
PzZ+/f/6fJyn9qVUvprx2w7ktX/C+PX/6/Nxntp/Wfsaa79N5eHZPm/7rk5w
9an9Jfp/ee0nUB/9v7zyvivfufIR1eeWl3qCq0/l3+n/5eqj/5fXfqrKszR+
r7/WgWv9U278+n957fuqfFDj9z7VPGXNz9W8VM3H1DxHzR/UuLnGizUOq/HN
zdd6XD6u/Eu9t+t9Ve+B6l+rX6nnqdpp3f+6bnnV6qP/l6uP/l+uPvp/ee1v
rLznynepdY4TvHSxtsj1fZ8S59FHTKnfc6l9npX/XXk/td5zglf7UB/9v1x9
9P9y9anfr6l9rZXvXnlOtb5V4956HrxOn5Mp8tV+qOWr/bx1/b5P7fut/QCV
B1brfyd49Rfqo/+Xq4/+X64+9XtGtc+59j9U3lutd9Y8SPWPxm2/OUWuPo4v
5H5P/a5T7feufSCV/1frvjUfVO8J4/P9MUV++10f+e13YuS1H772yVR+ZK2L
n+D1HlUfxy/y275n+W0frfy2L1NeeaKVH3CCl59QH8cv8ts+Ffltn4T8lqcv
v+WJy0/w8lXq4/hIfsvTlN/yBOW3PDX5LU9KfoKXv1Sf+f8p8ltegPy2ziy/
rVvKb+tg8hO8fLb6OP6S3+ZN5bd5OPltXkd+myeQn+C38dbyic93fvOV5afK
R9T7s94b1V9WP1HPR7WLrcf/AJlLoJ4=
      "], {
       Polygon[CompressedData["
1:eJxNnGXUltXWhb1LsQkVFRUVBQVEBFQQFcVARUFpAQNREbsVFcXu7u7u7u7u
7u7uOPrt61nX893Pjznetedc491zbcZgrnvIOYttsdOIHfOZZprpl2qmmcr0
c86EcxNOTMgE9UkJuZjLvswz2skJhZjbntwz2ikzxe8Hbe0pPKOdmlCJdvaU
ntFOS5hZtLen8ox2esIsooM9M3tGOyOhjZjHnlk8o52ZMKuY1542ntHOSphN
zGfPrJ7Rzk6YXXS0ZzbPaOckzCHmt2d2z2hXyC+QcKV/Bs0/C85XJZznuy5o
35xyaFcnnO+7drJnLjm0axIu8F0XsmduObRrEy70XRe2p60c2nUJF/mui9jT
Tg7t+oSLfdfO9rSXQ7sh4RLfdVF7Osih3Zhwqe+6mD3zyKHdlHCZ77q4PfPK
od2ccLnv2sWe+eTQbml54yXs6ej5CnX4JRNu9c0X8B27ynPulnB7wm3yneS6
2su7LSXXyXdaWm4h36W7HFqPhDsT7pDvLNfdXt6hp1xn515GblHn7CWHtmzC
3Ql3yXeR62UvM/aW6+KZ2e+RXy7hXt9gSefqI988M/t98n0T7vdNujlnP/lu
zrm83FLOtYLc0p6Z/QH5FRMe9E16OGd/+R7OOUCup3OtJLeMZ2Z/SH5gwsO+
ybLOuLJ888zsj8ivkvCob7CcM64q3zzf58x9xSB7+jjnanJ9nXN1uX7OOFhu
ec8POPOKYg17VnDONeVWdM615Po749pyAzw/5MwDxRB7VnLGdeQGemb2F+TX
TXjRN2i+BeeXEh5zzvXsW0UO7eWEx517qD2ryqG9kvCE77C+PYPk0F5NeNJ3
2cCe1eTQXkt4yncZZs/qcmivJzztOw23Z7Ac2hsJz/huG9qzhhzamwnP+o4b
2bOmHNpbCc/5jiPsWUsO7e2E533XkfasLYf2Tssbj7JniOcX1OFHJ7zrm6/r
O46R5zw24f2E9+SHyo2xl3cbJzfUd9pYbn3fZbwc2oSEDxM+kB8uN95e3mGi
3HDn3kRuQ+fcVA5ts4SPEz6SHym3qb3MuLncSM/M/on8pIRPfYPRzrWFfPPM
7J/JT0743DcZ65xbyo91zq3kxjnX1nIbe2b2L+SnJHzpm0xwzm3kJzjnVLmJ
zrWt3Caemf0r+e0SvvZNNnPG7eWbZ2b/Rn6HhG99g0nOuKN88/yZM08WO9mz
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
e8n13+TQyPHf5dDI7T/kjnZWzn8687HWf9hLTv8lh0Yu/y2HRi7/I3e8M/4g
h0ZuzZqnPSWLnAbU/2aR0ydZ/5dFTp9szX8cJZtPsZ4tr3N69lRneeQ0oM7z
yGlAXeSR04C6zCObAfUceZ3Tc6a6yiOnAfXMeeQ0oJ4lj5wG1G3yyGlAPVce
OUZuzZ3HzMyOZ7y3zescbpfHDMyCB7y0z+tc7ZCHJ7zxO/nd8+SRW+TUvHnc
wV3kUsdUz5dHbnEHd82f1zm5QB53cje51CnVC+aRW9zJ3QvldW4unIcHvJBL
nVO9SB65hQe8LJpHTpFLi+XhCW94wMvieZ1TXfLwiFc84W2JvM7RJfPwiFc8
4a1rXudYtzw84x2PeF0qr3N16Tw84x2PeO2e1znXI48ZmAXPeO+ZR+6Rc8vk
MQOz4BnveMY7HvHaK69zdtk8POMdj3jFI17xhLfeeZ27y+XhEa94whue8IYH
vPTJI5fIob55eMIbd3J3v7zO1eXz8IAX7uCuFfI6J1fM407u5nfyu/vnkUPk
zoA87uAucmZgqlfKI4e4g7tWzuvcWyWPO7mbnBmU6lXzyCHu5O7V8joHV8/D
A17ImTVSPTiPHMIDXtbMI3fImbXy8IQ3POBl7bzOnSF5eMQrnvC2Tl7n4rp5
eMQrnvC2Xl7n0tA8POMdj3hdP69zcoM8POMdj3gdlte5NTyPGZgFz3jfMI8c
I7c2ymMGZsEz3vGMdzzidURe5+bIPDzjHY94xSNe8YS3UXmdo6Pz8IhXPOEN
T3jDA17G5JEz5MrYPDzhjTu5e1xe5+TGeXjAC3dw1/i8zr0JedzJ3fxOfvfE
PP5eJ6c2yeMO7iKnNs2DQyOnNsuDQyOXNs+DQ8MDXuCaOTYpD094I6e2yIND
I6cm58GhkUtb5sGh4RnvcM0c2yqPGZiFnNo6Dw6NnJqSB4dGTm2TB4fGjMwK
h8bf43skTM0jtwD1tnnkFqDeLo/cAtTb5zP9/z8Iot4hj5wC/N0/m1qmxj8y
ygX1TnnkVmG9cx65VVrvkkdOAbJiDrVKbdc8cmtm693yyK1ZrHfPI7faWM/I
I2fIlQOduTk754MS9hTUByfsJagPSdhbUB+aMM1ZyZ62zjxN7bCEfQT14Qn7
CuojEvYT1EcmTHdWsqm9M09XOyphf0F9dMIBgvqYlhlneCbHyK1jnZHZyanj
E47LI8fwTjbN7wzk0IkJJ+SRU3ghexbSEzlzcsJJeeTQPN51Sh65Q86c6p3z
egd3nZbXuXO6Hjp6N1mzhB4W9O4z8jp3ztRTJ72QNUvpaRG9nJXXuXO2Hjvr
CW/n5JFD5M65elxMT6fpqYteyJ5eeuqqlzP1wt1kT289dPfus727p3ddkUcu
kUNXemfzbs5XJZwnqK9OOF9QX5NwgaC+NuFCvZFV/fR4odp1CRcJ6usTLhbU
NyRcIqhvTLjUWciyFZzpUrWbEi4T1DcnXC6ob2mZ8QrP5B45d6szMju5dnvC
bXnkHt7JspWdgdy6M+GOPHINL2TVanoil+5OuCuP3OrvXffkkVPk0r3eOcA7
uOu+vM6p+/Uw0LvJpnX0sKp3P5DXOfWgngbphWxaX0+D9fJQXufUw3pcQ094
eySP3CKnHtXjWnq6T09D9EJWjdDTenp5UC/cTVaN0sMw737Yuzf0rhfyyDFy
60XvbN7N+aWExwT1ywmPC+pXEp4Q1K8mPKk3smucHp9Uey3hKUH9esLTgvqN
hGcE9ZsJzzoL2TXemZ5VeyvhOUH9dsLzgvqdlhlf8EyOkcvvOiOzk8vvyaGR
y+/LoZHLH8ihkcMfym3urJOsmZlc/sgeeHL5Yzk0cvkTOTRy+FO5LZ11K2tm
Jpc/sweeXP5cDo1c/kJuijO+I4dGXv2a8GUeOT3V+qs8cpr8+s2ePeTQvs4j
t8mz3+3ZUw7tmzxynHz7w5695NC+zSPHybc/7dlbDu27PHKdvPvLnmlyaN/n
kfPk39/27COH9kMeuU8e/mPPvnJoP+aR++Th/+zZTw7tpzz2APLxX3umy6H9
nMdeQF7+Z8/+cmi/5PWewD9M/s/e3dXg0Mi1OVOdFZGpgDovYm8A1EURewM5
N3eq5yoiB+HQyiL2CEBdFbE3AOqZi9gbAPUsRewN5GC7VLctIifh0NoUsUcA
6lmL2BsA9WxF7A2AevYi9gZyskOq2xeRo3BocxSR64B6niJylNyct4g34C2Y
idnmK+oc7VjEzMyOR7zOX9Q5ukARMzALd3L3gkWdo52K8IQ37uTuhYrIVfJz
4SI84IX8XKQIDg0PeMEDXsjTzkX00EueLloEh0Z+LlYEh0Z+Ll4Eh4ZnvOMZ
7+RplyJ66CVPlyiCQyM/lyyCQyM/uxbBoTEjszIjs5Kn3YrooZcsXaoIDo2Z
mR0OjZxbPtVLF5GxgLp7EXsEoO5RxB5B7q2Y6hWKyEU4tJ5F7BWAepki9ghA
3auIPQJQL1vEHkEuDkh1/yJyEw6tdxF7BaBerog9AlD3KWKPANR9i9gjyM2B
qV6piFyFQ+tXRM4D6pWLyFVydJUi3oC3YCZmW7Woc3VQETMzOx7xulpR5+rq
RczALNzJ3YOLOlfXKMIT3riTu9csImfJ07WK8IAX8nTtIjg0POAFD3ghX4cU
0UMv+bpOERwaebpuERwaebpeERwanvGOZ7yTr0OL6KGXfF2/CA6NPN2gCA6N
PB1WBIfGjMzKjMxKvg4voodesnXDIjg0ZmZ2OLRGrqZ6oyIyF1CPKGKvaORs
ET30wqGNLGLPaORuET30wqGNKmLvaORwET30wqGNLmLvaORwET30wqGNKWIP
aeRyET30wqGNLWIvaeR0ET30wqGNK2JPaeR2ET30wqFtXMSe0sjtInrohUMb
X8Te0sjxInrohUObUMQe08j1InrohUObWLTkfBE99Db2nCI4tEaup3pqEbnf
2ANSvW0ROd/YA1K9XRG53sj9VG9fRI43cj7VOxSR29R7JuzVwvFzxyJyu5Hr
qd6piJxu5Hiqdy4ilxu5nepdishh6r0TprVw/Ny1iBxu5HSqdysidxu5nOrd
i8jZRg6nep8iMpds3beImZmdvSWX58yeQp7CobGXkKdwaMy2X8J0Z2QvIV/p
oZc9hHyt1Ng7yFM4NPYM8hQOjdn2TzjAGdkzyFd66GWvIF9nVWOPIE/h0JiJ
PIX7zzOzzpAnVw90ZmYkRw9OOKiInGWWQxIOdSZy9PCEw4rIWbwdkXCkHsnR
oxOOKiJn5/CuY4rIVXL0WO+c0zu467iiztHj9TC3d5+QcKIe2nr3SUWdkyfr
qZ1eTkk4VU/t9XJaUefg6XrsoCe8nVFE7pHrZ+pxXj0dp6eOejkr4Ww9za+X
k/XC3ecknKuHBb37dO9eyLvOKyJjydLzvZO72Ru6y3Nmb+ghh8be0FOus14u
SLhQT+wRy9hDL3tDLzk09oZl5dDYG3rLddH7RQkXOwN7xHL20Mve0EcOjb2h
r1xXZ+on180zs14iT45e6szMSG5ennBZEbnKLFckXOlM5ObVCVcVkat4uybh
Wj2Sm9cnXFdErvbzrhuKyFFy80bvXN47uOumos7Nm/WwonffknCrHvp7921F
nYu362mAXu5IuFNPK+nlrqLOvbv1OFBPeLuniJwjx+/V4yp6uklPg/RyX8L9
elpNL7frhbsfSHhQD4O9+27vXtO7HioiU8nOh72Tu9kTRshzZk8YKYfGnjBK
boheHkl4VE/sDaPtoZc9YYwcGnvCWDk09oRxckP1/ljC487A3rCxPfSyJ4yX
Q2NPmCA3zJkmyg33zKxPyLMXPOnMzMge8JQcGrn/tBwaOf+M3GbOyvlZZ55k
/Yy95Ppzcmjk+PNyaOT2C3KTnZXzi868lfUL9pLTL8mhkcsvy6GRy6/ITXHG
J+TQyK0PE14tIqenWr9WRE5va/16ETm9nfUbRWTz9tYfFXVOf5zwZhE5vYP1
W0Xk9I7WbxeR0ztZv1NENu9s/UlR5/SnCe8WkdO7WL9XRE7vav1+ETm9m/UH
ReT07tafFZFj5NbnzryHnvH+RVHn8JfOsJce8PJVUefq13qa5u/kd39TRG6R
U996B3eRS98nfFdEbu3nXT8UdU7+6J3cTS79nPBTEbm1v3f/UtS5+ase8EIu
/Z7wWxG5NUMvfxSRU+TSn3o6UA94+auoc+pvPR6sJ7z9U9Q5+j89HqonvP1b
1Dn2n54P1yNe+R9HN3M1K8PzkXrEa17WOVeUMcPResZ7WUbukXNVGTMcq+e/
9Hy8HvE6c1nn7CxleD5Rj//qEa+n6K1NWefurGV4xOtpesMT3s7Qy2xl5BI5
NHsZnvB2lnfPUda5OmcZHvDCHdw1V1nn5Nxl3Mnd/E5+d9sycojcaVfGHdxF
znRIdfsycog7uGuess69ecu4k7vJmY6pnq+MHOJO7p6/rHNwgTI84IWc6ZTq
BcvIITzgZaEycoecWbgMT3jDA14WKevc6VyGR7ziCW+LlnUuLlaGR7ziCW+L
l3UudSnDM97xiNclyjonlyzDM97xiNeuZZ1b3cqYgVnwjPelysgxcmvpMmZg
FjzjHc94xyNeu5d1bvYowzPe8YhXPOIVT3jrWdY5ukwZHvGKJ7zhCW94wEuv
MnKGXFm2DE94407u7l3WOblcGR7wwh3c1aesc69vGXdyN7+T392vjL/Xyanl
y7iDu8ipFcrg0MipFcvg0Mil/mVwaHjAC1wzxwaU4Qlv5NRKZXBo5NTAMjg0
cmnlMjg0POMdrpljq5QxA7OQU6uWwaGRU4PK4NDIqdXK4NCYkVnh0Ph7fINU
r15GbgHqwWXkFqBeo4zcAtRrlpFbgHqtMnIK8Hf/R2qc0dYuI7cA9ZAycgtQ
r1NGbgHqdcvIKUBWfKLGGW29MnILUA8tI7cA9fpl5BagHldGzpArG5cxc3N2
zuMThgnqCQnDBfXEhA0F9SYJG5UxK9nzhTNvpLZpwghBvVnCSEG9ecIoQT0p
YXQZs5JNXznzaLUtEsYI6skJYwX1li0zjvNMjpFbWzkjs5NTU1K9dRk5hney
6QdnIIemJm2bMnIKL2TPL3oiZ7ZL2rZl5BB3cNf2ZeQOObNDGXdyN3dw145l
nTs7leHhe+8ma/7RA3dy985lnTu7lOHpZ72QNWQQnvCAl13LOnd2K8MjXvGE
t93LyCFyZ48yPOIVT3jD0996IXvIJDzhAS94+M+7yZ42esi9ezfvLr1rRhm5
RA4d6J3NuzkflLCnoD44YS9BfUjC3oL60IRpZXgjq+bQ4zS1wxL2EdSHJ+wr
qI9I2E9QH5kw3VnIsrmcabraUQn7C+qjEw4Q1Me0zDjDM7lHzh3rjMxOrh2f
cFwZuYd3smweZyC3Tkw4oYxcwwtZNb+eyKWTE04qI7faetcpZeQUuXSqd7bz
Du46raxz6nQ9dPBusmlRPczn3WeUdU6dqaeOeiGbltDTgno5q6xz6mw9dtIT
3s4pI7fIqXP1uLCeTtNTZ72QVd31tLheztQLd5NVPfXQ1bvP9u6lvOuKMnKM
3LrSO5t3c74q4TxBfXXC+YL6moQLBPW1CRfqjezqrccL1a5LuEhQX59wsaC+
IeESQX1jwqXOQnb1caZL1W5KuExQ35xwuaC+pWXGKzyTY+Tyrc7I7OTybXJo
5PLtcmjk8h1yaOTwnXL9nXWANTOTy3fZA08u3y2HRi7fI4dGDt8rt7KzrmLN
zOTyffbAk8v3y6GRyw/IDXLGW+TQyKtnEx4sI6dXt36ojJwmv56zZwM5tIfL
yG3y7Hl7hsmhPVJGjpNvL9gzXA7t0TJynHx70Z4N5dAeKyPXybuX7NlIDu3x
MnKe/HvZnhFyaE+Ukfvk4Sv2jJRDe7KM3CcPX7VnlBzaU2XsAeTja/aMlkN7
uoy9gLx83Z4xcmjPlPWe8IY9Y+WekUMj1z5NeLOMTN3Y+q0y9obx1m+XsTeQ
c58nfFZGDk5Qe6eMPWKi9btl7A2bWL9Xxt6wqfX7ZewN5OCXCV+UkZObqX1Q
xh6xufWHZewNk6w/KmNv2ML64zL2BnLy64SvysjRyWqflJHrW1p/U0aOkpvf
+gZbOROzfVfWOfq9M0/RI15/KOsc/dEZpnond/9U1jn6s562807u/qWMXCU/
f9UDXsjP3+T20MN3esALefq7PfSSp3/IoZGff8qhkZ9/yU3T8w96xjt5+rc9
9JKn/8ihkZ//k0MjP/+Vm+6MPzkjs5Kn/9lDL1nK//HZf2q7OzscGjk3Z6qz
KjIWUOdV7BGAuqhijyD35k71XFXkIhxaWcVeAairKvYIQD1zFXsEoJ6lij2C
XGyX6rZV5CYcWpsq9gpAPWsVewSgnq2KPQJQz17FHkFudkh1+ypyFQ5tjipy
HlDPU0WukqPzVvEGvAUzMdt8VZ2rHauYmdnxiNf5qzpXF6hiBmbhTu5esKpz
tVMVnvDGndy9UBU5S54uXIUHvJCni1TBoeEBL3jAC/nauYoeesnXRavg0MjT
xarg0MjTxavg0PCMdzzjnXztUkUPveTrElVwaOTpklVwaORp1yo4NGZkVmZk
VvK1WxU99JKtS1XBoTEzs8OhNXI11UtXkbmAunsVe0UjZ6vooRcOrUcVe0Yj
d6vooRcOrWcVe0cjh6vooRcObZkq9o5GDlfRQy8cWq8q9pBGLlfRQy8c2rJV
7CWNnK6ih144tN5V7CmN3K6ih144tOWq2FMauV1FD71waH2q2FsaOV5FD71w
aH2r2GMauV5FD71waP2qlpyvoofexp5TBYfWyPVUr15F7jf2gFQPriLnqdGH
tXD8XKOKnB+sNryF4+eaVeT8GmobtnD8XKuKnF9TbaMWjp9rV5Hza6mNaOH4
OaSKnF9bbWQLx891qsj5IWqjWjh+rltFzq+jNrqF4+d6VeT8umpjWjh+Dq0i
59dTG9vC8XP9KnJ+qNq4Fm59z+wAjdz3jZt/FpzH+67sVW/Zhz5MbYLvyl71
tj30Dleb6LuyV71jD70bqm3iu7JXvWsPvRupbeq7sle9Zw+9I9Q2813Zq963
h96Rapv7ruxVH9hD7yi1Sb4re9WH9tA7Wm0L35W96iN76B2jNtl3Za/62B56
x6pt2fLGn9hDb2PvUodv7B2+efPPgvPWvvN46ym+a2MPkWNPmaC2je860Xqq
77iJ9ba+26bW2/lO7C3bybHXbKa2ve+0ufUOvssk6x19hy2sd3Ju9pyd5NiD
Jqvt3DLzlp7Zg9h7dnHm5ltw3rVlxq09N/eg3Zy5+Racd3fubaz3cO6p1nu2
zLit5+YetJczN9+C897Ovb31NOfewXqflhl39Nzcg/Z15uZbcN6vZeadPbMH
sedNd+bmW3Dev2XmXZ3xe2u0A+R2s57h3LtbH+jce1gf1DLzns74ozXawXJ7
WR/i3HtbH+rc06wPa5l5H2f82RrtcLl9rY9omXk/z+yA7HpHOnPzLTgf5Zzs
ubl96PurHe3c7L3sf7m9B6gd4zuwB7MPFvbOUDvWd2EvZj8s7T1Q7Tjfhb2Y
fbGy9yC1430n9mT2xZntPVjtBN+NvZn9cRZ7D1E70Xdkj2afbGPvoWon+Y7s
0eyXs9p7mNrJvit7NfvlbPYernZKyxuzb85u70zyp8izd57qmzf/LDif5jsf
ZX267zq3NdxccpzP8F2PsT7TdzzW+izf7Tjrs32ndtZwbeU4n+M7nWB9ru9y
ovV5vsNJ1uc7dwdruPZynC9omfkUz+zB7L0XOnPzLThf1DLjaZ6be/DFztx8
C86XOPcZ1pc695nWl7XMeJbn5h58uTM334LzFc59jvWVzn2u9VUtM57nubkH
X+3MzbfgfE3LzBd4Zg9mz7/WmZtvwfm6lpkvcsaO1mjXy11sfYNzX2J9o3Nf
an1Ty8yXOeMC1mg3y11ufYtzX2F9q3NfaX1by8xXOWMna7Tb5a62vqNl5ms8
8w3Arn+nMzffgvNdzsl3Tnf7FpZDu9u5+e7pYc8icmj3+A58B/W0p7Mc2r2+
C99Fy9izqBzafb4L30W97FlMDu1+34nvpGXtWVwO7QHfje+m3vZ0kUN70Hfk
O2o5e5aQQ3vId+Q7qo89S8qhPey78l3V156ucmiPtLxxP3u6eb5DHZ7vqkd9
8+afBefHfOcVrB+19y7Pj/vOK1o/Zu/dnp/wnftbP27vPZ6f9J0HWD9h772e
n/KdV7J+0t77PD/tOw+0fsre+z0/4zuvbP20vQ94ftZ3XsX6GXsf9Pyc77yq
9bP2PuT5ed95kPVz9j7s+QXfeDXr5+3tJ/+C2v8BIk3Kcg==
        "]]}, 
      Properties -> {{1, Default} -> (MeshCellHighlight -> None), {
         2, Default} -> (MeshCellHighlight -> Opacity[0.5])}, 
      Method -> {
       "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
        Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
        Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
        Automatic, "CheckIntersections" -> Automatic, 
        "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
        "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
        Automatic, "Hash" -> 6080102438404513671}]]}, 
    TagBox[GraphicsComplex3DBox[CompressedData["
1:eJyV3DGuNDERReEWCImQgICA4MdCbIO3BpaARMxWWQpLIOma4Ks5snBi9Xnz
eqpvu93Xdnn+8s9//+Nfv3me5z+/e57fPv9v+e/f4w8/3/Hvg/8h+B+D/yn4
n4P/Cn6C/zX43+B1/cP9++c4zqM+w9VnuPoMV5/h6jNcfYaf4OozXH2qHQxf
+v1Qw1f7eY9X+3mPV/t5j1f7eY9X+3mPV/t5j0/w1X7eY/Wp52G4+nw+H+fx
fHOsPsPVZ7j6DFef4eoz/ARXn+HqU/3CcPX5fD7Ooz7D/Z45Vp/h6jNcfYar
z/ATXH2Gq0/1j8PV5/P5OI/6DFef4X7/HKvPcPUZrj7DT3D1Ga4+9Z4Yrj6f
z8d51Ge4+gxXn+HGNcfqM1x9hp/g6jNcfep9OVx9Pp+P86jPcPUZrj7D1We4
8c6x+gw/wdVnuPqUbxiuPp/Px3nUZ7j6DFef4eozXH2Gex1zfIKrz3D18f/l
6vP5fJxHfYarz3D1Ga4+w9VnuPoMP8HVZ7j6lI8crj6fz8d51Ge4+gxXn+Hq
M1x9hqvP8BPc655j9Vl+Ea4+n8/HedRnuPoMV5/h6jNcfYarz/ATXH2G13VP
qfFE+ejyj+Wbyi/Ue7LeD9UvVn9Qz0Hd/9v46larj+Mvufo4/pKrj+Mvufo4
/pKrj+Ov2zizrt/xl3y1n/d4tZ/3eLWf93i1n/d4tZ/3eLWf9/gEX+3nPVaf
Gm9XO3D8Jfd6HU/Jjd/xkdz4a16g2qvjI7nxO96RG7/jF7nx1/xFPVeOX+Te
N8cvcr/H8Yvc9un4RX6Cq4/jl9s8TvUvjl/k6uP4Ra4+jl/k6uP4RX6Cq4/j
l9t8VvWzjl/kXq/jEbnxO76QG3/Nu9X7wPGF3PgdL8iNX/8vN/75f+P3vOvz
cR7b53Db53Cvd7jXO9x2MVy9h3sdc6w+w9Wn5knr/a3/l6uP/l+uPvp/ufro
/+UnuNen/9evTCkfsz4f51Ef/b9cffT/cvXR/8tPcPXR/9/mzaeUz6t59Jo/
rnnTmi+sebKaH6p5kRO8xsF1/z8FXn63fG75u/JN5UfqPVzvn+rXT/DqJ1b7
mfr5zkuPqlf7eevVft56tZ+3Xu3nrVf7eevVft76BF/t563Vp9aTapxT17/W
U+Be71ofgRv/Wh9561r3qvFY3ae13gE3/rV+ATf+tX7h9z3feY0nq515f9b6
BdzzrfULuO1zrV/AT3D1WesXxvF85zWurudNfdb6BVx91voFx+qz1i/gJ7j6
rPULv+/5zmt+ofodr3etR8BPcONf6wtvrf+X1zxI9Y/GP9z4h5/gxj/c+D//
/3znNV9T/bjtc7jtc7jXO9zrHe79H66uh1quPsPVp/IAan6q3ltr/h+uPmv+
H64+a/4frj5r/h/udaz5f4+f77zm7+q9rj5r/h+uPmv+H64+a/4ffoKrj/7/
lhcypeYxy99UnkjlR1ReQK2H1zrwr+AneK131Thvitzr1c/LjV9/XuPLW16O
90O+9P/5Ho/9cbX3Wz7QTaeKt2rj1w/LbT/mF8m9Xv2z3Pajf77lRemf1+fj
PKWLf9dvy9XH/CK5+ujP5eqjP7/lh9V91W/LjV//LDeeykur9qS/lRuPflVu
PJUPp/9cn4/z1PNg/PpVuXqYPyP3evW3ctuP/tbndopcfXyP3p7/4eqjH5ar
z3D1+UUtP8HVR/+8xv/Pd179ndc73PiHG/9w46m8zOpP9Z9y49FPyo2n8mVr
Hbfmd+q9qD+U2370h3KvV38oP8HVW394y4udUuvE+o4p9V6sPNnKD628yMoH
9DmecoJX3lPN90+5vdfVS278+sNaZ7jlJZef8D7Jl54/3+Op8ZD+sHxx+dOb
77n5oPIL9d6u92G9B07w6rfU5/YcVHup+1Z6VK0++kO5+ugP5Se4+ugP13zx
852X363rNH79odx4Ki+//HTpqD+UG4/+0PthPPrD9fk4T40Hqh2ot/5Q7vn0
h/IT3PajP7RdTpGrj/7wNv6pdq8/lKuP/lDu9+gP5eqjP/T5nHIb1/l9cuMf
bvzDjaf2pdR4svoR/aHcePSH9kfGU3lytX5W8wL1PtAfym0/+kO516s/lKur
/vC2L2jKWseeEuepeYF6H9Q+odofU/tC1vrGW07wyn+vvI8pt7zDWo/UT1Ye
ZeUbVp5d5aNVnlflQ1UeUOW/3PaJDa88iNV+3nq1n7de7YfjWoes9bpaB6v1
olonqfWB2345/fNtfVpd5F6v/lZu/DWu1d/e8mX1t3Lj1x/Jjd/+vvrX6ldu
eb239lX3oa6vaq9Xfyu3fZo/IFcf/fDKY3i+c/WpvAf9s1x96vrNH5Crj35b
foKrj/7c+zFFrj6V/1H3Vb8tN379s9z49c9y49c/39qfflhu/PpbufHP/xv/
cOP/fD7OY/scbvs0brnXO9z7PFz9DrVcfYarT+1zrv0DlVekP5erT/Uv5g/I
1Uc/Lz/B/X79v/3dFLn6VP5ZrXvVfEe9h/T/cvXR/8tPcPXR/9/2vU9Z+apT
4jy1DlfzL/Ueqn3wtf/bfmjKCV77XCu/27j0/7d8O/1/7Ze6vXf9vtp3Uvs5
at9D5ftXnnvld9/2F+n/K++18klv/sPzVl5e5btVXljlQ1UeUOW/3PZZ6f9v
vkq95Mav/691qlqfkRu//v/m/7yvcuPX/9c8Ss0f1Lj5ls96G2/VOKb8bvnc
8oPls07weg+rz63frf6mnrNqj3WfS4+q1Uf/Lz/B1Uf/7/dNkatP5TfXuKWu
R/8vN379v7oYv/5/fT7OU+Ouuh/Gr/+XG//8v/EPN/7P5+M8ts/hts/hNZ6s
dub9HK5Oh1quPsPVp37Hp/bHVt68/l+uPjV+rudK/y9XH/2/3O/R//s8T5Gr
T+2vqDyzWl+seZbqf/X/cvXR/8vVR/+/9kU83/nalzYlzlN5b7XeWfMs1f+6
DjnF9bcpJ3j9nk3t4/T7K2+v1mvVUW78ta9Uv33LF6x1Yu+ffOn58z0e/W3l
R1ee8i2vsdazb3mjtp9bnqPXe8ubq/y1WsebUvlBladzy++85Xeozy1/odb5
a337BK/125rnmHLLW9Vvy41f/1zzKzWvcMuX1d/KjUe/U/199XPVf9RzXO39
ls9x07Wur2qvV38rt/3obz3vFLn66G/llfdc+S7q43v6dv3mh8hPcPXRP6vv
FHnlc1ceT90/4x9uPPpVeeWRV/5QtRvj0R/anoxHf7g+H+epfPfKc6r1mxrX
1fPg9eoP5eqnP/S5miJfv08wJc5Tef+V71XrWDW+rX7B52zKCb72Nb5FffSH
8trPUHls1X8Zf/2+iP5QXvsoKn+u+s2l58/3ePSH8to/5/fUvo7K59Mfym0/
1e/f9nmc4LWPofK5psgrf1x99IfyyndUn1sea70X1eeWP1h5fLXeNUXu9eoP
b+9pr19e42/j0R/KK3+0fIPx1HyA/rDGkTWeq3FP+f3y0eVnb77n5oNO8HrP
q8/tPVD9a/Vz1R/Uc1Dtq+5z6VH1Ca4++kP/f4rc6x1eeczlXytu49Efyo2n
8qTLH5cu+kP1Mh794fp8nMf4K9+98nhqfr/GRfU86A/l6qQ/nP+zyNfvVE2J
8/henVL57pUnVOsHNS6q5+EEX79v8Rb10R/K1ad+D0U/KVefyouq9RL9p1x9
jFtev/+32s/Uz3dev3O22s9br/bz1qv9vHXljdV60mo/b73aD8fy+n2U2vc5
Ra4++md55cPVOtkJbvy1b1V/Kzd+/a288vZqPe8EN/7aV6H/lFcevfHrV+WV
71z5iLVOafu85WOe4JV/V+tOU+SVZ6Q++md55YNUHkSt16rPbb36BK/1yZp3
mSJXH/25vPJNax36BDf+mjfSP8uNX/8sr7zYWi8/wY2/fM3UU+T1Hqv+u/rF
6m/qOav2Vfet9KhafaZWH/22XH3qd83053L1qfzmynvQz8vVp67f/AG5+uj/
5eqj/5erT+3nrDz4yo+pef8a79Vzov+X+3eLXD/4KXEe/cWU2l9aefCVH1Pr
EDX+PMFtR1PUR/8vV5/6vT/9v1x9Ku+/8oH0/3L1qX7B65Gv9jP1852v9kMt
X+3nrVf7eevaF1H5Uqv9vPVqP299gq/289bqo/+Xq4/+/7avo/K9qh9XX3nt
PzZ+/f/6fJyn9qVUvprx2w7ktX/C+PX/6/Nxntp/Wfsaa79N5eHZPm/7rk5w
9an9Jfp/ee0nUB/9v7zyvivfufIR1eeWl3qCq0/l3+n/5eqj/5fXfqrKszR+
r7/WgWv9U278+n957fuqfFDj9z7VPGXNz9W8VM3H1DxHzR/UuLnGizUOq/HN
zdd6XD6u/Eu9t+t9Ve+B6l+rX6nnqdpp3f+6bnnV6qP/l6uP/l+uPvp/ee1v
rLznynepdY4TvHSxtsj1fZ8S59FHTKnfc6l9npX/XXk/td5zglf7UB/9v1x9
9P9y9anfr6l9rZXvXnlOtb5V4956HrxOn5Mp8tV+qOWr/bx1/b5P7fut/QCV
B1brfyd49Rfqo/+Xq4/+X64+9XtGtc+59j9U3lutd9Y8SPWPxm2/OUWuPo4v
5H5P/a5T7feufSCV/1frvjUfVO8J4/P9MUV++10f+e13YuS1H772yVR+ZK2L
n+D1HlUfxy/y275n+W0frfy2L1NeeaKVH3CCl59QH8cv8ts+Ffltn4T8lqcv
v+WJy0/w8lXq4/hIfsvTlN/yBOW3PDX5LU9KfoKXv1Sf+f8p8ltegPy2ziy/
rVvKb+tg8hO8fLb6OP6S3+ZN5bd5OPltXkd+myeQn+C38dbyic93fvOV5afK
R9T7s94b1V9WP1HPR7WLrcf/AJlLoJ4=
      "], 
      {Hue[0.6, 0.3, 0.85], EdgeForm[{Hue[0.6, 0.3, 0.75], Opacity[0.]}], 
       FaceForm[Opacity[0.5]], 
       TagBox[Polygon3DBox[CompressedData["
1:eJxNnGXUltXWhb1LsQkVFRUVBQVEBFQQFcVARUFpAQNREbsVFcXu7u7u7u7u
7u7uOPrt61nX893Pjznetedc491zbcZgrnvIOYttsdOIHfOZZprpl2qmmcr0
c86EcxNOTMgE9UkJuZjLvswz2skJhZjbntwz2ikzxe8Hbe0pPKOdmlCJdvaU
ntFOS5hZtLen8ox2esIsooM9M3tGOyOhjZjHnlk8o52ZMKuY1542ntHOSphN
zGfPrJ7Rzk6YXXS0ZzbPaOckzCHmt2d2z2hXyC+QcKV/Bs0/C85XJZznuy5o
35xyaFcnnO+7drJnLjm0axIu8F0XsmduObRrEy70XRe2p60c2nUJF/mui9jT
Tg7t+oSLfdfO9rSXQ7sh4RLfdVF7Osih3Zhwqe+6mD3zyKHdlHCZ77q4PfPK
od2ccLnv2sWe+eTQbml54yXs6ej5CnX4JRNu9c0X8B27ynPulnB7wm3yneS6
2su7LSXXyXdaWm4h36W7HFqPhDsT7pDvLNfdXt6hp1xn515GblHn7CWHtmzC
3Ql3yXeR62UvM/aW6+KZ2e+RXy7hXt9gSefqI988M/t98n0T7vdNujlnP/lu
zrm83FLOtYLc0p6Z/QH5FRMe9E16OGd/+R7OOUCup3OtJLeMZ2Z/SH5gwsO+
ybLOuLJ888zsj8ivkvCob7CcM64q3zzf58x9xSB7+jjnanJ9nXN1uX7OOFhu
ec8POPOKYg17VnDONeVWdM615Po749pyAzw/5MwDxRB7VnLGdeQGemb2F+TX
TXjRN2i+BeeXEh5zzvXsW0UO7eWEx517qD2ryqG9kvCE77C+PYPk0F5NeNJ3
2cCe1eTQXkt4yncZZs/qcmivJzztOw23Z7Ac2hsJz/huG9qzhhzamwnP+o4b
2bOmHNpbCc/5jiPsWUsO7e2E533XkfasLYf2Tssbj7JniOcX1OFHJ7zrm6/r
O46R5zw24f2E9+SHyo2xl3cbJzfUd9pYbn3fZbwc2oSEDxM+kB8uN95e3mGi
3HDn3kRuQ+fcVA5ts4SPEz6SHym3qb3MuLncSM/M/on8pIRPfYPRzrWFfPPM
7J/JT0743DcZ65xbyo91zq3kxjnX1nIbe2b2L+SnJHzpm0xwzm3kJzjnVLmJ
zrWt3Caemf0r+e0SvvZNNnPG7eWbZ2b/Rn6HhG99g0nOuKN88/yZM08WO9mz
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
e8n13+TQyPHf5dDI7T/kjnZWzn8687HWf9hLTv8lh0Yu/y2HRi7/I3e8M/4g
h0ZuzZqnPSWLnAbU/2aR0ydZ/5dFTp9szX8cJZtPsZ4tr3N69lRneeQ0oM7z
yGlAXeSR04C6zCObAfUceZ3Tc6a6yiOnAfXMeeQ0oJ4lj5wG1G3yyGlAPVce
OUZuzZ3HzMyOZ7y3zescbpfHDMyCB7y0z+tc7ZCHJ7zxO/nd8+SRW+TUvHnc
wV3kUsdUz5dHbnEHd82f1zm5QB53cje51CnVC+aRW9zJ3QvldW4unIcHvJBL
nVO9SB65hQe8LJpHTpFLi+XhCW94wMvieZ1TXfLwiFc84W2JvM7RJfPwiFc8
4a1rXudYtzw84x2PeF0qr3N16Tw84x2PeO2e1znXI48ZmAXPeO+ZR+6Rc8vk
MQOz4BnveMY7HvHaK69zdtk8POMdj3jFI17xhLfeeZ27y+XhEa94whue8IYH
vPTJI5fIob55eMIbd3J3v7zO1eXz8IAX7uCuFfI6J1fM407u5nfyu/vnkUPk
zoA87uAucmZgqlfKI4e4g7tWzuvcWyWPO7mbnBmU6lXzyCHu5O7V8joHV8/D
A17ImTVSPTiPHMIDXtbMI3fImbXy8IQ3POBl7bzOnSF5eMQrnvC2Tl7n4rp5
eMQrnvC2Xl7n0tA8POMdj3hdP69zcoM8POMdj3gdlte5NTyPGZgFz3jfMI8c
I7c2ymMGZsEz3vGMdzzidURe5+bIPDzjHY94xSNe8YS3UXmdo6Pz8IhXPOEN
T3jDA17G5JEz5MrYPDzhjTu5e1xe5+TGeXjAC3dw1/i8zr0JedzJ3fxOfvfE
PP5eJ6c2yeMO7iKnNs2DQyOnNsuDQyOXNs+DQ8MDXuCaOTYpD094I6e2yIND
I6cm58GhkUtb5sGh4RnvcM0c2yqPGZiFnNo6Dw6NnJqSB4dGTm2TB4fGjMwK
h8bf43skTM0jtwD1tnnkFqDeLo/cAtTb5zP9/z8Iot4hj5wC/N0/m1qmxj8y
ygX1TnnkVmG9cx65VVrvkkdOAbJiDrVKbdc8cmtm693yyK1ZrHfPI7faWM/I
I2fIlQOduTk754MS9hTUByfsJagPSdhbUB+aMM1ZyZ62zjxN7bCEfQT14Qn7
CuojEvYT1EcmTHdWsqm9M09XOyphf0F9dMIBgvqYlhlneCbHyK1jnZHZyanj
E47LI8fwTjbN7wzk0IkJJ+SRU3ghexbSEzlzcsJJeeTQPN51Sh65Q86c6p3z
egd3nZbXuXO6Hjp6N1mzhB4W9O4z8jp3ztRTJ72QNUvpaRG9nJXXuXO2Hjvr
CW/n5JFD5M65elxMT6fpqYteyJ5eeuqqlzP1wt1kT289dPfus727p3ddkUcu
kUNXemfzbs5XJZwnqK9OOF9QX5NwgaC+NuFCvZFV/fR4odp1CRcJ6usTLhbU
NyRcIqhvTLjUWciyFZzpUrWbEi4T1DcnXC6ob2mZ8QrP5B45d6szMju5dnvC
bXnkHt7JspWdgdy6M+GOPHINL2TVanoil+5OuCuP3OrvXffkkVPk0r3eOcA7
uOu+vM6p+/Uw0LvJpnX0sKp3P5DXOfWgngbphWxaX0+D9fJQXufUw3pcQ094
eySP3CKnHtXjWnq6T09D9EJWjdDTenp5UC/cTVaN0sMw737Yuzf0rhfyyDFy
60XvbN7N+aWExwT1ywmPC+pXEp4Q1K8mPKk3smucHp9Uey3hKUH9esLTgvqN
hGcE9ZsJzzoL2TXemZ5VeyvhOUH9dsLzgvqdlhlf8EyOkcvvOiOzk8vvyaGR
y+/LoZHLH8ihkcMfym3urJOsmZlc/sgeeHL5Yzk0cvkTOTRy+FO5LZ11K2tm
Jpc/sweeXP5cDo1c/kJuijO+I4dGXv2a8GUeOT3V+qs8cpr8+s2ePeTQvs4j
t8mz3+3ZUw7tmzxynHz7w5695NC+zSPHybc/7dlbDu27PHKdvPvLnmlyaN/n
kfPk39/27COH9kMeuU8e/mPPvnJoP+aR++Th/+zZTw7tpzz2APLxX3umy6H9
nMdeQF7+Z8/+cmi/5PWewD9M/s/e3dXg0Mi1OVOdFZGpgDovYm8A1EURewM5
N3eq5yoiB+HQyiL2CEBdFbE3AOqZi9gbAPUsRewN5GC7VLctIifh0NoUsUcA
6lmL2BsA9WxF7A2AevYi9gZyskOq2xeRo3BocxSR64B6niJylNyct4g34C2Y
idnmK+oc7VjEzMyOR7zOX9Q5ukARMzALd3L3gkWdo52K8IQ37uTuhYrIVfJz
4SI84IX8XKQIDg0PeMEDXsjTzkX00EueLloEh0Z+LlYEh0Z+Ll4Eh4ZnvOMZ
7+RplyJ66CVPlyiCQyM/lyyCQyM/uxbBoTEjszIjs5Kn3YrooZcsXaoIDo2Z
mR0OjZxbPtVLF5GxgLp7EXsEoO5RxB5B7q2Y6hWKyEU4tJ5F7BWAepki9ghA
3auIPQJQL1vEHkEuDkh1/yJyEw6tdxF7BaBerog9AlD3KWKPANR9i9gjyM2B
qV6piFyFQ+tXRM4D6pWLyFVydJUi3oC3YCZmW7Woc3VQETMzOx7xulpR5+rq
RczALNzJ3YOLOlfXKMIT3riTu9csImfJ07WK8IAX8nTtIjg0POAFD3ghX4cU
0UMv+bpOERwaebpuERwaebpeERwanvGOZ7yTr0OL6KGXfF2/CA6NPN2gCA6N
PB1WBIfGjMzKjMxKvg4voodesnXDIjg0ZmZ2OLRGrqZ6oyIyF1CPKGKvaORs
ET30wqGNLGLPaORuET30wqGNKmLvaORwET30wqGNLmLvaORwET30wqGNKWIP
aeRyET30wqGNLWIvaeR0ET30wqGNK2JPaeR2ET30wqFtXMSe0sjtInrohUMb
X8Te0sjxInrohUObUMQe08j1InrohUObWLTkfBE99Db2nCI4tEaup3pqEbnf
2ANSvW0ROd/YA1K9XRG53sj9VG9fRI43cj7VOxSR29R7JuzVwvFzxyJyu5Hr
qd6piJxu5Hiqdy4ilxu5nepdishh6r0TprVw/Ny1iBxu5HSqdysidxu5nOrd
i8jZRg6nep8iMpds3beImZmdvSWX58yeQp7CobGXkKdwaMy2X8J0Z2QvIV/p
oZc9hHyt1Ng7yFM4NPYM8hQOjdn2TzjAGdkzyFd66GWvIF9nVWOPIE/h0JiJ
PIX7zzOzzpAnVw90ZmYkRw9OOKiInGWWQxIOdSZy9PCEw4rIWbwdkXCkHsnR
oxOOKiJn5/CuY4rIVXL0WO+c0zu467iiztHj9TC3d5+QcKIe2nr3SUWdkyfr
qZ1eTkk4VU/t9XJaUefg6XrsoCe8nVFE7pHrZ+pxXj0dp6eOejkr4Ww9za+X
k/XC3ecknKuHBb37dO9eyLvOKyJjydLzvZO72Ru6y3Nmb+ghh8be0FOus14u
SLhQT+wRy9hDL3tDLzk09oZl5dDYG3rLddH7RQkXOwN7xHL20Mve0EcOjb2h
r1xXZ+on180zs14iT45e6szMSG5ennBZEbnKLFckXOlM5ObVCVcVkat4uybh
Wj2Sm9cnXFdErvbzrhuKyFFy80bvXN47uOumos7Nm/WwonffknCrHvp7921F
nYu362mAXu5IuFNPK+nlrqLOvbv1OFBPeLuniJwjx+/V4yp6uklPg/RyX8L9
elpNL7frhbsfSHhQD4O9+27vXtO7HioiU8nOh72Tu9kTRshzZk8YKYfGnjBK
boheHkl4VE/sDaPtoZc9YYwcGnvCWDk09oRxckP1/ljC487A3rCxPfSyJ4yX
Q2NPmCA3zJkmyg33zKxPyLMXPOnMzMge8JQcGrn/tBwaOf+M3GbOyvlZZ55k
/Yy95Ppzcmjk+PNyaOT2C3KTnZXzi868lfUL9pLTL8mhkcsvy6GRy6/ITXHG
J+TQyK0PE14tIqenWr9WRE5va/16ETm9nfUbRWTz9tYfFXVOf5zwZhE5vYP1
W0Xk9I7WbxeR0ztZv1NENu9s/UlR5/SnCe8WkdO7WL9XRE7vav1+ETm9m/UH
ReT07tafFZFj5NbnzryHnvH+RVHn8JfOsJce8PJVUefq13qa5u/kd39TRG6R
U996B3eRS98nfFdEbu3nXT8UdU7+6J3cTS79nPBTEbm1v3f/UtS5+ase8EIu
/Z7wWxG5NUMvfxSRU+TSn3o6UA94+auoc+pvPR6sJ7z9U9Q5+j89HqonvP1b
1Dn2n54P1yNe+R9HN3M1K8PzkXrEa17WOVeUMcPResZ7WUbukXNVGTMcq+e/
9Hy8HvE6c1nn7CxleD5Rj//qEa+n6K1NWefurGV4xOtpesMT3s7Qy2xl5BI5
NHsZnvB2lnfPUda5OmcZHvDCHdw1V1nn5Nxl3Mnd/E5+d9sycojcaVfGHdxF
znRIdfsycog7uGuess69ecu4k7vJmY6pnq+MHOJO7p6/rHNwgTI84IWc6ZTq
BcvIITzgZaEycoecWbgMT3jDA14WKevc6VyGR7ziCW+LlnUuLlaGR7ziCW+L
l3UudSnDM97xiNclyjonlyzDM97xiNeuZZ1b3cqYgVnwjPelysgxcmvpMmZg
FjzjHc94xyNeu5d1bvYowzPe8YhXPOIVT3jrWdY5ukwZHvGKJ7zhCW94wEuv
MnKGXFm2DE94407u7l3WOblcGR7wwh3c1aesc69vGXdyN7+T392vjL/Xyanl
y7iDu8ipFcrg0MipFcvg0Mil/mVwaHjAC1wzxwaU4Qlv5NRKZXBo5NTAMjg0
cmnlMjg0POMdrpljq5QxA7OQU6uWwaGRU4PK4NDIqdXK4NCYkVnh0Ph7fINU
r15GbgHqwWXkFqBeo4zcAtRrlpFbgHqtMnIK8Hf/R2qc0dYuI7cA9ZAycgtQ
r1NGbgHqdcvIKUBWfKLGGW29MnILUA8tI7cA9fpl5BagHldGzpArG5cxc3N2
zuMThgnqCQnDBfXEhA0F9SYJG5UxK9nzhTNvpLZpwghBvVnCSEG9ecIoQT0p
YXQZs5JNXznzaLUtEsYI6skJYwX1li0zjvNMjpFbWzkjs5NTU1K9dRk5hney
6QdnIIemJm2bMnIKL2TPL3oiZ7ZL2rZl5BB3cNf2ZeQOObNDGXdyN3dw145l
nTs7leHhe+8ma/7RA3dy985lnTu7lOHpZ72QNWQQnvCAl13LOnd2K8MjXvGE
t93LyCFyZ48yPOIVT3jD0996IXvIJDzhAS94+M+7yZ42esi9ezfvLr1rRhm5
RA4d6J3NuzkflLCnoD44YS9BfUjC3oL60IRpZXgjq+bQ4zS1wxL2EdSHJ+wr
qI9I2E9QH5kw3VnIsrmcabraUQn7C+qjEw4Q1Me0zDjDM7lHzh3rjMxOrh2f
cFwZuYd3smweZyC3Tkw4oYxcwwtZNb+eyKWTE04qI7faetcpZeQUuXSqd7bz
Du46raxz6nQ9dPBusmlRPczn3WeUdU6dqaeOeiGbltDTgno5q6xz6mw9dtIT
3s4pI7fIqXP1uLCeTtNTZ72QVd31tLheztQLd5NVPfXQ1bvP9u6lvOuKMnKM
3LrSO5t3c74q4TxBfXXC+YL6moQLBPW1CRfqjezqrccL1a5LuEhQX59wsaC+
IeESQX1jwqXOQnb1caZL1W5KuExQ35xwuaC+pWXGKzyTY+Tyrc7I7OTybXJo
5PLtcmjk8h1yaOTwnXL9nXWANTOTy3fZA08u3y2HRi7fI4dGDt8rt7KzrmLN
zOTyffbAk8v3y6GRyw/IDXLGW+TQyKtnEx4sI6dXt36ojJwmv56zZwM5tIfL
yG3y7Hl7hsmhPVJGjpNvL9gzXA7t0TJynHx70Z4N5dAeKyPXybuX7NlIDu3x
MnKe/HvZnhFyaE+Ukfvk4Sv2jJRDe7KM3CcPX7VnlBzaU2XsAeTja/aMlkN7
uoy9gLx83Z4xcmjPlPWe8IY9Y+WekUMj1z5NeLOMTN3Y+q0y9obx1m+XsTeQ
c58nfFZGDk5Qe6eMPWKi9btl7A2bWL9Xxt6wqfX7ZewN5OCXCV+UkZObqX1Q
xh6xufWHZewNk6w/KmNv2ML64zL2BnLy64SvysjRyWqflJHrW1p/U0aOkpvf
+gZbOROzfVfWOfq9M0/RI15/KOsc/dEZpnond/9U1jn6s562807u/qWMXCU/
f9UDXsjP3+T20MN3esALefq7PfSSp3/IoZGff8qhkZ9/yU3T8w96xjt5+rc9
9JKn/8ihkZ//k0MjP/+Vm+6MPzkjs5Kn/9lDL1nK//HZf2q7OzscGjk3Z6qz
KjIWUOdV7BGAuqhijyD35k71XFXkIhxaWcVeAairKvYIQD1zFXsEoJ6lij2C
XGyX6rZV5CYcWpsq9gpAPWsVewSgnq2KPQJQz17FHkFudkh1+ypyFQ5tjipy
HlDPU0WukqPzVvEGvAUzMdt8VZ2rHauYmdnxiNf5qzpXF6hiBmbhTu5esKpz
tVMVnvDGndy9UBU5S54uXIUHvJCni1TBoeEBL3jAC/nauYoeesnXRavg0MjT
xarg0MjTxavg0PCMdzzjnXztUkUPveTrElVwaOTpklVwaORp1yo4NGZkVmZk
VvK1WxU99JKtS1XBoTEzs8OhNXI11UtXkbmAunsVe0UjZ6vooRcOrUcVe0Yj
d6vooRcOrWcVe0cjh6vooRcObZkq9o5GDlfRQy8cWq8q9pBGLlfRQy8c2rJV
7CWNnK6ih144tN5V7CmN3K6ih144tOWq2FMauV1FD71waH2q2FsaOV5FD71w
aH2r2GMauV5FD71waP2qlpyvoofexp5TBYfWyPVUr15F7jf2gFQPriLnqdGH
tXD8XKOKnB+sNryF4+eaVeT8GmobtnD8XKuKnF9TbaMWjp9rV5Hza6mNaOH4
OaSKnF9bbWQLx891qsj5IWqjWjh+rltFzq+jNrqF4+d6VeT8umpjWjh+Dq0i
59dTG9vC8XP9KnJ+qNq4Fm59z+wAjdz3jZt/FpzH+67sVW/Zhz5MbYLvyl71
tj30Dleb6LuyV71jD70bqm3iu7JXvWsPvRupbeq7sle9Zw+9I9Q2813Zq963
h96Rapv7ruxVH9hD7yi1Sb4re9WH9tA7Wm0L35W96iN76B2jNtl3Za/62B56
x6pt2fLGn9hDb2PvUodv7B2+efPPgvPWvvN46ym+a2MPkWNPmaC2je860Xqq
77iJ9ba+26bW2/lO7C3bybHXbKa2ve+0ufUOvssk6x19hy2sd3Ju9pyd5NiD
Jqvt3DLzlp7Zg9h7dnHm5ltw3rVlxq09N/eg3Zy5+Racd3fubaz3cO6p1nu2
zLit5+YetJczN9+C897Ovb31NOfewXqflhl39Nzcg/Z15uZbcN6vZeadPbMH
sedNd+bmW3Dev2XmXZ3xe2u0A+R2s57h3LtbH+jce1gf1DLzns74ozXawXJ7
WR/i3HtbH+rc06wPa5l5H2f82RrtcLl9rY9omXk/z+yA7HpHOnPzLTgf5Zzs
ubl96PurHe3c7L3sf7m9B6gd4zuwB7MPFvbOUDvWd2EvZj8s7T1Q7Tjfhb2Y
fbGy9yC1430n9mT2xZntPVjtBN+NvZn9cRZ7D1E70Xdkj2afbGPvoWon+Y7s
0eyXs9p7mNrJvit7NfvlbPYernZKyxuzb85u70zyp8izd57qmzf/LDif5jsf
ZX267zq3NdxccpzP8F2PsT7TdzzW+izf7Tjrs32ndtZwbeU4n+M7nWB9ru9y
ovV5vsNJ1uc7dwdruPZynC9omfkUz+zB7L0XOnPzLThf1DLjaZ6be/DFztx8
C86XOPcZ1pc695nWl7XMeJbn5h58uTM334LzFc59jvWVzn2u9VUtM57nubkH
X+3MzbfgfE3LzBd4Zg9mz7/WmZtvwfm6lpkvcsaO1mjXy11sfYNzX2J9o3Nf
an1Ty8yXOeMC1mg3y11ufYtzX2F9q3NfaX1by8xXOWMna7Tb5a62vqNl5ms8
8w3Arn+nMzffgvNdzsl3Tnf7FpZDu9u5+e7pYc8icmj3+A58B/W0p7Mc2r2+
C99Fy9izqBzafb4L30W97FlMDu1+34nvpGXtWVwO7QHfje+m3vZ0kUN70Hfk
O2o5e5aQQ3vId+Q7qo89S8qhPey78l3V156ucmiPtLxxP3u6eb5DHZ7vqkd9
8+afBefHfOcVrB+19y7Pj/vOK1o/Zu/dnp/wnftbP27vPZ6f9J0HWD9h772e
n/KdV7J+0t77PD/tOw+0fsre+z0/4zuvbP20vQ94ftZ3XsX6GXsf9Pyc77yq
9bP2PuT5ed95kPVz9j7s+QXfeDXr5+3tJ/+C2v8BIk3Kcg==
         "]],
        Annotation[#, "Geometry"]& ]}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics3D",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  Boxed->False,
  DefaultBaseStyle->{
   "MeshGraphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
  Lighting->{{"Ambient", 
     GrayLevel[0.45]}, {"Directional", 
     GrayLevel[0.3], 
     ImageScaled[{2, 0, 2}]}, {"Directional", 
     GrayLevel[0.33], 
     ImageScaled[{2, 2, 2}]}, {"Directional", 
     GrayLevel[0.3], 
     ImageScaled[{0, 2, 2}]}},
  Method->{"ShrinkWrap" -> True}]], "Output",
 CellChangeTimes->{3.90048128627927*^9},
 CellLabel->"Out[27]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
lEWQWXhMcaPHX/l742YqDERn5Q+yT9sYsdpf0KuWc5OfP2YO3Bp4KzPseidD
TQWkB8/P2e8Z+eMFhhWyVcHsGkha+qUP/GDKB76JMdgW88DiSwUZpsHRahXc
zzFmeh/KukX7tIvGU1M+8w0MJG0gfTckln3K0zt607vV5nJjat36P7wGu+Zc
Yd5jSuP3SNHrj2dQ6qRvWaeZGFly67kKjW1T5ujgNhokrEVatF2bN+5iWBwn
HdXlU9/6R3RU8OraF6jOxOkLVAOQswTGF3Cdgsc0ANddcovXD1yTBuhgVD4h
1ufIV0/H+Unasdqcc1EJ7irgulVuWfz+a/LGrUzfdF3CG9cxf5q6fdsbcaE5
t3FiAvPGLYxZ33dN3rjKQH4j88Z+SshPUNZtHXOD8YBpAFyh7WDeePI1eeMy
Q/U7mDcOXF3k4/RNbR0vYJ5Qbaqw1ujG0VekhnttXrHAYPwu1ytyGCtLJYd1
jKtazDxhjnFVuFm3k3nFe1XcJl7CfkXh8e6avWF0k0g5pg9+D/PGYUpX9Zj8
QQ4dGYyXgiwxb9xF3hjW9m2lOif2+GXShm/sMxh/AGTBxa3UZuZhhtvl5J0s
W8R3asN38uneDbjub/RazOSCtQ8Gt1h5jAP6ZfMeMTg5j6Ne6zDjcVaBLDOv
hXshWphNIF7TLxYNFjL4KuYlPgyymJK3R+WPg4xu1oCsME4EJ1EqzC6fcHQv
oXa8XZm1+sjV6SsO4kt8lL5EnZtQVkJOsRk3sR5klbGSdpAlZqdUfnRPLY3j
8twNj8KDS2P6GDx1KWWPJW2cnqgz/GwEWWNeAuff8kzTl0ZrGP3iu7DVxeOL
sEC/RNnNj2Xbx+SPHoafzSBxSqqDzBpaTV9p+qnLKP2+6SsPDExbvm9w2vK9
cIXmwWN+lzNmREiBv4Ox3m3mwWPW20qm+63Wb2n6PQqy9eE9QAPwDhk/8U3S
WrR0s5ltjEZ2gOQ2r7REq0Jmc1g7yOuVf9lw5OVLe8+/hf+6tZn3zEWUaX1l
wsT3LLm6EXmelh7HNEa/i4kNWhjzqURbhnCTDjxbJ8hJcriL73ji6/+gH+bq
ou1nm3tfP9Kred9C4/dN0d2o1yenSA2w3KY/bseUOtWmd0vhJaL9Lnjm8TFN
k9i7d/H2J64s2oZ7fOSp8bStkY20ry01UzKtIf540fYnTNj0YaZxEtyQBf0R
+WM9Az23TbGNaZwwxobZLBh7pw6Q3aq1CC8ZDPGy0FjiWxZtPWOe4FPJTebr
r9dGUsN28vofXLYHIzTZVM01GDyY5e+UW1jD+LsD7hayvIQfbXEzrxC4WqiD
4Qmdsce00CddLdQmv77v9hmr+++eswEbpjVl83wk6ox9VBI8irpjC2NgMpDL
rGIY4nZ8yscNaAtpdoR3d7RKG+HGcgCqVcDhNG6VFslNv7jV4Jemr9RXWzMN
k1egQMNoz46BGJfW4JD8QQ5sG9d7lGmaDgXPXXM2mmcuupqkRkDRplQF6TNN
8glXk6iNn9AkA6o5RH/abKOExHoULRkMsTG5gHIy5Li5MSFuj2wH85jOVqgw
YLSADBhz+ThthXvnbY1/PZqLgiOTa6YVbpEupXfHqe/27r3wp5dhPSRLSNGN
UtCPS/bHcCtAclyRWczY1KNjbbIiA047yJBpsl8BiV9fZEgpNNNGOEgUYx3R
Pr3HX/4bfV09/rW/BfVxBzS5cEYm69CpBCyH/PhYmybHON8u0jSWTUVNk4vw
MU1TbqZpPqDwgaY5/OzPoVlEDADSx3/vE78X15WND7+S0EyWV1bNNI8hCBur
u5l2CYiVaWTGgcwx7fIx0y4+Y1a1ZtrlvcSs7Hbx8N8HL/4U2kW0EkjvMuzM
1I9RZBqqlTG1/fLHHMZHn2m6obIMQBOkH7h8/JW/g9bCFlM86egQP/VR025Z
xtRaXe2GY8/32P7HaqiHX/xrDZEYVmBDXd158lJiQ6HfVk6IJLAwlvaEaZkK
0xTtZEpMIZO5TrbClT1P/NC0Qo5xOB8hPrpv8oIdBpwO0gADDy7bazfAu5wW
5FELEprDBgBLMrcsuBogZlJy2iQzgzGp84nt0aqmquC91x95+crpb/27zA1M
e+RBfowMNvsnz9s2eO+8LXBluqAB2s0o4B0pbaMKEg9vdzLedK/88SDjTZ9K
fCc5DRLA+yBh6kp+t5in+LBseDjWbvx1KXrzAdFF45t7IGOvf0MD4vXrZ6XC
e3c/8UbvrtPib8+/lSkzVoAQ4AqicghTGDV/pa5J6ExwmagZbiceQ8AJ0oNm
MfEJZwoFxiHcwnRneWIZCo5MyDTPdaSzVXTgpZyBR1ql58z3oWVES4H0evec
+6ExlxLjWPOmpWKeVM7I6fQqlid91m44NYfWe+iZn2lwUrdUkXEaH2JaKmRM
KG9aCpnabAbXLabhJjgdSUjNCi8RxUELhqTh9p5/E5sMEUPP2s1Y3W75g2SM
MVb3vN1SVdVS8zed6N124jvYRkHKliqB/DDTNF4EkbGxUuOm6XaaXEhNjjZN
AZomCy0DTXr+rbgftkwwR5rLcryque5mLPJFvrmW7X4Km6vn7A+aa66Yh/pl
lNZ2Dm16IpJp2GKdfMibZIVFBVPP2e8jUHvOvSkGafVWqFcw6EiCc/Byhlmn
7LEc/FcZNDpjTembplTNmdZMy0xrfjC6ofbvIq5p2IptTZqkaMoqtqJPWhFN
ExsylsU22jqi/NeXGcy+lqKpAqup4BLuTfZGKdqrwri198u7wloJLDX0379w
R6a9cXuJe67e/5wJossJZuvwaK3YfIHVfLIJ+c6T28TLZZ+TyQx1ziWrh/h6
ihb2aAuLdwDp004EWpkLPqpM4747alxYiMKGy8rmg4Y2fUYKQGOjlkLKYDzL
mH+bo+VdboDLesH1ODvlD5J4yriBL6mvaLRfMVkbHshsStirjHN4p7qlXs00
oX1T+hC92lQyNuAGlbkG7kTbAlxKNV11TvmHmahXezOxV0vQkGUbSkN/wHif
Lyoj47Iacpt69ZwHneIqJSoO3+0HiQF8jdHZjYwN5Vw6E+q6Y+YaPekqHJlT
hQ3nBXzn2Mfp0sYzKvTcgYk1QOS2c4xjAmC5KKpToN0yfdmBOiPjckjC76bL
ZIys4XFTWE51+pE6tRlmrmfU2cK4xOsiEzTNX0hQ552z141SnSFVJ17KWXoN
/CQM4UCRE7Q6z3yvTp3CVyYOYFCdXCLQ7Zb+pgj9mbN+f0ycpJWxkzvFxm1n
bUqJgVTilcde+btEP9rKKHE840fLb4sSfaNE5UrTdnLXgwxT+k+qLcthMtpS
pzMzf8hYW851Zo/bezsqbcFUF6xGu7TVBnIc4zJr11g9Kozpnb3maO/Wx/4k
jXt8B6gkl9If4iznJMaAtlGV+EYlSi2/y9hQkR7so1rh9gePWivgtGFJxqmV
WL/WzjjC1jEryTdKAsXM33wy27vmwPNR1wt6Mfai9IL28k6qnHrv5lPvBhfm
b6WdEZdt9jcZGym7jlneb4bZo23+x1/5e7b525mJr5o97sGG70jZ/GSaONc/
Z90xaGJzrdz7dO/SXRdg0lI8IDZ0307Zo2BD3wwy73RMPnVMpqFjbmkraXeu
KX+VWIE+wVVltpBzOrvPpQZuQaLs1Ip/hWxzAM1MYhTTwfQtJcZ5dTejGLlF
Izc4Y9XBwVmrDw/OXnu0X2gelQOKWbztrLCABZtPiudeLp5bt7+aKRmsU1bB
6bJ86rJgmoTLaryFKIs7fHkbMRLtsloYZXGKnnxtlBVYyoLrzGtXMxMZjXWC
LDHd//hmVFSWHcrg9BX7UU1CRZksSm9w5urD/Q+tfwQVFIAMIr0M7OT0Uuet
9AoZjaW53l1p5l/Fenfa2PQ4yacZq2pPecL23muiKFWzR0cA0Ropp6VYfxMw
Dm9SM0orqg2CSmHmmrXmCCgtC/9BfBf4Q6E11J9v9JcF9cU84U0qvoYuSMfX
uRQRG5Sr4lJub3arkzul/QnG7jpTHj2+55qoM2TU2c2os0uu51J1wqVd5I3N
aDGnTI94R2p6+HtQpA8yNPpD87uZGd9iT0ZnjZTRaQ1ZrnCTW0Pcwf+PMgY3
LjagdR2pvvuaagj2OCZpqDvqyLRXzLyjGbX4yR5RXIdQLTlGLRlvgJrVjS4t
8cNWLiu/5SVtpR3UwTZteKq0WxizwuNr3HHau5rWUh7UkmPU0qG2QJz4+j9c
3fr4tzHslWrx+xZtP9O/cNvpwQVbTvRNX3nw5mY0I34HIbZSjPiXVIryevi7
oq0Un/F1NzBKcccV3uUjz/7cKIWzpI1EKVzDfpBowTopyx0GvtNogVuFj5pd
VfrC0xPWRjjZ7FcOXvyJGm1IuWrfM/EhkFYDXAJwkN6A8GNmCHRTU0OgcPCO
WWu1H6O9UdVWSQAquYnRQRFkQXUwB566rBteptCnPQrXcB9QfSrdq4yHU7mk
1nekbOUC0ytUlM8RLWzgDplWrkatPLBg60ls35Bp5bRdRovapnj7jNWDd81e
P3j3QxvxgpZWbkn8jdXU4k49Z74P7Y1mkGU81PUuRcQ8lBfp5cqhp3+K7fIu
xkNtkD9+R3qoW2i3wtnG+5TW1GFDzJuPmclrzB9/mZkj6GysxCKjxAJjKkWl
RByY2LsPqNcSLgaVCN7LKPEGqcS+Bxb3JCqxotwYKBHMRShQqAWkN3jXnA34
t+DG2uKK7O954gdGkaqr6d95+pJR5HWMIksoferVQHnvZ5zYektvVjjAWRvW
SbRTN4DudAIAmpWHs78vjU2TtK/JReaox/2ZCqPJHOP0Ki5NtjOqKxEvR+1P
qm29B/+h3ahN3H27iF60+WQZLXJ9E2qxIu0PohrjA7mU2wk64xr9PXLswdaq
4BIXoAnePjpNlRhNeYzjbGEcpx/ZnHGcLYzjtDQFmtCayhMjU5oyRiY0hVoV
yhIKAOkNTl22x8TaLVSDsNkthQYH6jQoPWhwdfe5Ny/vPvfDS8KTXhF/dHn/
kz8W4UD9cGmdW5OcI3w3oxQuHweXc0p/Hx1CfXF0Si6rg84qBtHOtBN1GlCd
av+Z6WT0eD3IDtBjLoV3BJXllOLuW7h9dIoLGAc6KZp1RcWB+WnFXd1x8pLa
gODR+Rmde95ypWuJMtsZ7b1Ltra1DZJLJtKdkGiCau8LY9Ged2XbY39ydctj
r6kgHc2xf9mu88b0uqXK+metPWpUdp1RWUC8ovaIxCuWXJoS9j1vw2NmdsJL
qbiQ8ZkTQfr1irsMa6KobbfiLH9KFcflt8AtC5hLYTyjmlZGNX/cSDV1+0lp
2Hl577m3rq479FLv8t0XRWuAlFt9dD/XJi2tb9X+ZwdW7L04uGLPU3gtEpY2
nunbJhm1ZZWlkc7McpHwe9Bc2a0/a3apSf0N1OlPbq/wsc8THlPrLi9Vd3XX
6e8Z1X2Qsbk1RHWdjOpuNqrjEihwaTD+KFF1tfj4F8wINIRa8pWuVu552uiq
Jk0LdNW/au8zoCfhhkB6oC8Tk6C5XU+7tsnzt9V5Q9qN1a6xjnKMjuR2iuDK
pkdepR0a+sUSNAMWiFDdmK7WRrsxzp7eATLPKAWn/roYpfxhSqX4xLdpA8oz
SikrfycUog1IvL5UyrKe87ZSYt3WRJCtakf2fWLwNmXJbryI+2u/xqrJM+6v
U6oGQipQz6WVe5+5smLPxaubj39TjEG1amKubrWlKSvg4MwHK7hztWMwZUE3
M+f3Byk1JZNygKcDZYnIXSpJKMQoKc9YTsmtJKujmgCyqgwJlPTAol2gJGFI
IL3B+8W/tbPrGLu2+oRhGG0VQHbUq+fyir1Pg4rEh5btFm/Ru+7wV81cZxkk
V1tilVtlXYzKbmAUwNkarpqMY77g9xPXgFGDOanB/rWHXjS+r8b0U0FkZrqP
ylRdvi/WZ+FiVom4QluDPmrw/kU7Ubvi6hqDEnGSo8S4v5rcX4zub+3hl7QC
gwb6s0zO1p81d9vNNP/1jP44C2wj+oNkG83oT24e8/s2PfL1gZV7nx5cuvMc
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
W7odqOvv5C39BlCMjsbt71ta73qRJT/ePwKyT57EmjIJPnocTNXLL3hzq83N
/U7eze+A4t7by8ImMl8fg+VfE9zDCqCzf5Z3sxuQ/e78uwntuzH3gqozoNj4
zS5l/Wf5x38C4nlXB/Hsss+0NpIbMYpB8e0bzY38D/nN/wzwPcn1zVGXEbYW
UBGK4i4Eb/qwLZg0vu9M7qtg3xddHeNifWA5jmKy1wBs/lXe038BWjrBktXu
Gza/ZO4BpXv3dxlSvdpoaUx+838DwPKeukxwi8zZN3UCi3Iq4fLeWZAhcwdX
AM3so3v4A3lD/wLUw/uGfDZJljTJJHoK/3XV4+mFdObmpriCgJmbuwSoiG8u
kjf33wHTx0rTl0r04aRdFLpBoW91mj21sX6B67XmuynIv/8PoDt9N23psOhu
hsC7zcG4883X8/epjMM9gFL9fZS/lUpzQt+HYrEcuDrbJXdVwup/gic9hscw
ldiivxcVDeBY0xm5clU9GYYBglm5mijXHBxIOi0twRnyk/9XDj8kwVSI6qC0
tFhEX3C9PXPkF4w4BQVO5B+cGC4D3mdcmjhEfsG/AgaO5tcTLCU5jDPXldP7
ybSIjpRfMAqe4EgaAxAn4mjNzGw+abt0jpWf/W9AsZxhEoKwBJv6IddnJ4I5
QX72/wGqPZzGGAiGQx79YLH/6Vw+T5R/HwciOpTGAojmyLMauV/Fn/0++dl7
gX5lOhEQEc/QFZd+/8olsQ9Yj/QH4FkOorEMxFZIa8Mppw9af/eBzufoV+6x
t8zdlkAYwgffxx/6Z9YXBEBis8EXlK0v0Imln3QB+xfWF0RARDPBF3zBJe9P
WB8Wg7udAT7slPQDf9r6iAIgfTr4COfDfdb6sBJQzxD4sI+7Hu6L1oeVwcNN
BR/2sVx6vmz9vQpkPwg+8aNpcZ1hfUQN3NQA+Ig/cT3h2daH1YHs+8GH/VHu
E55r/b0JFNACn3hy+gkvtj6iBZ6wCT7iJBcQl1sf1g8kXgcfdrxLXN+0PmwA
3FkNfNgx6Yebb33EIJB4FXzE4a6HW2B92FQg7DKNh7me5gbrt4fA05RoPChX
2zdaf58OpFugcVZaAsut35kBvjamcch107davz0TyC+icSD3pldbf58Nbjqg
sZm+6U3W78wBN82JtBWXnu60fvsgKCbH095r/eLBGQXTr/jpu/y29c8PSe6S
b8T8Hw9b/4iHn/3/9wPvD/4vEs6W6A==\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"64e5bca9-17b1-47b5-b6de-d31e61d1b387"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HighlightMesh", "[", 
  RowBox[{
   RowBox[{"BoundaryMesh", "@", 
    RowBox[{"SeidelMesh", "[", 
     RowBox[{"{", 
      RowBox[{"4", ",", "4", ",", "4"}], "}"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Style", "[", 
      RowBox[{"1", ",", "None"}], "]"}], ",", 
     RowBox[{"Style", "[", 
      RowBox[{"2", ",", 
       RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}], "}"}]}], 
  "]"}]], "Input",
 CellLabel->"In[28]:=",
 CellID->311984978,ExpressionUUID->"94d06dfa-e730-4b5d-8eef-055f033af2dc"],

Cell[BoxData[
 Graphics3DBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = HoldComplete[
     BoundaryMeshRegion[CompressedData["
1:eJyV3THONMmeVvFX4LTZxjUu0hhN6Aq1EEI9wwKYNbAEJGy2xBJZAk48Zfzi
O6ohnFCdrq7vzf/JyMrMJyryP/7P//0//te/+/n5+T//4efn3//8/7b/+9/j
P/zrr/FvwX8P/rfgfw/+T8H/CH6C/yP4fwr+Z/D/HPy/BP+vwf8K/s/B/yX4
f4OXv3H/++d1fI5+x/U7rt9x/Y7rd1y/4ye4fsf1O67fcf2O63dcv+P6Hdfv
uH7H9VvjcPzx/6/08Gf83tfP+L2vn/F7Xz/j975+xu99/Yzf+/oEf8bvff2M
3/v6Gb/39TN+7+tn/N7Xz/i9r5/xe18/4/e+fsbvfa3fOp6O6/fz/vgcP2+v
9Tuu33H9jut3XL/jJ7h+x/U7rt9x/Y7rd1y/4/od1++4fsf1W9+L4/r9vD8+
R7/j/jt7rd9x/Y7rd1y/4ye4fsf1O67fcf2O63dcv+P6HdfvuH7H9VvnN+P6
/bw/Pke/4/od99/fa/2O63dcv+MnuH7H9Tuu33H9jut3XL/j+h3X77h+x/Vb
56nj+v28Pz5Hv+P6HdfvuH/XXut3XL/jJ7h+x/U7rt9x/Y7rd1y/4/od1++4
fsf1W9cb4/r9vD8+R7/j+h3X77h+x/1791q/4ye4fsf1O67fcf2O63dcv+P6
HdfvuH7H9VvXjeP6/bw/Pke/4/od1++4fsf1O+527PUJrt9x/Y7rd1y/4/od
1++4fsf1O67fcf0eXsv1+3l/fI5+x/U7rt9x/Y7rd1y/4ye4fsf1O67fcf2O
63dcv+P6HdfvuH7H9Vv3ccb1+3l/fI5+x/U7rt9x/Y7rd1y/4ye4273X+h3X
77h+x/U7rt9x/Y7rd1y/4/qt+3Hj+v28Pz5Hv+P6HdfvuH7H9Tuu3/ETXL/j
1mOv9Tuu33H9jut3XL/j+h3X77h+677quH4/74/P0e+4fsf1O67fcf2O63f8
BNfvuH7HrdNe63dcv+P6HdfvuH7H9Tuu37o/Pq7fz/vjc/Q7rt9x/Y7rd1y/
4/odP8H1O67fcf2OW7+91u+4fsf1O67fcf2O67dyjnH9ft4fn6Pfcf2O63dc
v+P6Hdfv+Amu33H9jut3XL/j1nWv9Tuu33H9jut3XL+VV43r9/P++Bz9jut3
XL/j+h3X77h+x09w/Y7rd1y/4/od1++49d5r/Y7rd1y/4/qt3HFcv5/3x+fo
d1y/4/od1++4fsf1O36C63dcv+P6HdfvuH7H9Tuuh73W77h+x/Vb+fG4fj/v
j8/R77h+x/U7rt9x/Y7rd/wE1++4fsf1O67fcf2O63dcv+P62Wv9juu35gGM
6/fz/vgc/Y7rd1y/4/od1++4fsdPcP2O63dcv+P6HdfvuH7H9Tuu33G97bV+
n7wfrt/P++Nz9Duu33H9jut3XL/j+h0/wfU7rt9x/Y7rd1y/4/od1++4fsf1
O17e1mo+Ts3jqPy/cuPKGyunqnyj7ovX/dS6D1f3b+q6v64X6zqjzk/rvKa+
D+s4WuPv2/yqb71+nX8l16/zr+T6df6VXL/Ov5Lr1/lXcv06/0quX+dfyfXr
/Cu5fp1/9W2eXPlz/pX8Gb/39TN+7+tn/N7Xz/i9r5/xe18/4/e+PsGf8Xtf
P+P3vn7G7339jN/7+hm/9/Uzfu/rZ/ze18/4va+f8Xtf67fmO9Y4dP6VXF/O
p5Kf4Nbf+U5y6+n8Jbn1cf6Sx521b8cj5y/JrY/zkeQnuPVxvpDc+jj/R259
nP/j8Xft23HZ+T9y9zvn/8j9d5z/I/f44Pwf+Qlu/Z3/I/f44Pwfub6c/yP3
+OD8H7l+nf/j9+jat+9X5//I9ev8H7l+nf8j16/zf+QnuH6d/yPXr/N/5Pp1
/o9cv87/kevX+T+eD619O09y/o9cX87nkZ/g1t/5NnLr6fwZufVx/oznhWvf
zhedPyO3Ps6HkZ/g1sf5KnLr4/wTufVx/sn4/r41ufX5vD8+x+PDuMeHces5
bj3H3a/H9Tnuduy19R/3+DDu8WFcX+P6Gvf4MO7xYVy/4/od12/9zqSuf5x/
Itev80/k+nX+iVy/zj+Rn+Bun/NP5Pp1/olcv84/kevX+Sdy/Tr/ZLx+L1TX
sc4/kevL+STyE9z6O99Dbj2dvyG3Ps7fGK/fTdX1vPM35NbH+RjyE9z6OF9C
bn2c/yC3Ps5/GK/fj9V9Dec/yD0+OP9Bbj2d/yD3+OD8B/kJbv2d/yB3f3H+
g1xfzn+Qe3xw/oNcv85/GK/fAdb9Kec/yPXr/Ae5fp3/INev8x/kJ7h+nf8g
16/zH+TWz/kPcv06/0GuX+c/jNfvOes+o/Mf5PpyPoP8BLf+zjeQW0/nD8it
j/MHxut3rXW/1fkDcuvjfAD5CW59zOvl1sf8XW59zN/H6/e9dd/Z/F3u8cH8
XW49zd/lHh/M3+UnuPU3f5d7fDB/l+vL/F3u/mj+Ltev+ft4/U678gPzd7l+
zd/l+jV/l+vX/F1+guvX/F2uX/N3uX7N3+X6NX+X68f8fbzWU6icz/xdrl/z
d7l+zd/l+jV/l5/g+jV/l+vX/F2uX/N3uX7N3+X6NX83t/s0+P7/5/3xOfX7
+/rddv3et34nWr8vrN+lneD1O5j6/UTNu6/52jXPt+aH1rzCmo9W85hq/H0a
XL+Pb3jle5VrVZ5TOUDdP677pid43Weq+xN1XV7Xo3UdU+e/dd5X5zv1PfmM
3/U/v+bls/pn/N7+Gb+3f8bv7Z/xe/tn/N7+Gb+3P8Gf8Xv7Z/ze/hm/t3/G
7+2f8Xv7Z/ze/hm/t3/G7+2f8Xt7/T7rn8D1W/6e9Uzg+nrWJ4Fb/2e9Ebj1
fNYPgVufZ/2Q2z/rh8CtT+3Hz3ogcOvzrO8Btz7Peh1w6/OsvwG3Ps/6G7ev
9Ylq3kyN52f9Dbh1fdbf4LX1fNbfgHt8eNbfgFv/Z/0NuMeHZ/0NuL6e9Tfg
Hh+e9Tfg+n3W37h9rTNV85/quPysvwHX77P+Btx/51l/A67fZ/0NuH6f9Tfg
+n3W34Dr91l/A67fZ/0NuH6f9TduX+uF1Ty2+n591tOA6+tZHwNu/Z/1LuDW
81m/Am59nvUrbv/Zb35+za1PnWeMW59x6zN+glufceszbn3Grc+49Rm3Pp+/
7+fX3Pp83h+f4/Fh3OPDuPUct57j7r/jejv0cus/7vFh3OPDuL7G9TXu8WHc
48O4fsf1O67fWgew5qfWefOz/gNcv8/6D3D9Pus/wPX7rP8Adzue9R/g+n3W
f4Dr91n/Aa7fZ/0HuH6f9R9uX+s51jzjuv551nOA6+tZnwFu/Z/1FuDW81k/
AW59nvUTbv+snwC3PnUd+KyHALc+z/oGcOvzrFcAtz7P+gNw6/OsP+C/9/Nr
bn3qevhZfwDu8eFZfwBuPZ/1B+AeH571B+DW/1l/AO5+8aw/wGt9PesPwD0+
POsPwPX7rD/g3/Hza67fuq/xrD8A1++z/gBcv8/6A3D9PusPwPX7rD8A1++z
/gDcOj3rD8D1+6w/ANfvs/6A/97Pr7l+6/7Us54AXF/P+gBw6//83h9uPZ/f
78Otz/P7/ds/v9+HW5+6T/f8Hh9ufZ7f18Otz/N7ebj1eX7/Drc+z+/f/f9/
fs2tT92vfH7/Dvf48Pz+HW49n9+/wz0+PL9/h1v/5/fvcI8Pz+/f4fp6fv8O
d797fv/Oa/0+v3/3fT+/5vqt+87P79/h+n1+/w7X7/P7d7h+n9+/w/X7/P4d
rt/n9+9w/T6/f4fr9/n9O1wPz+/fff3za67fyoee37/D9fv8/h2u3+f373D9
Pr9/h+v3+f07XL/P79/h+n1+/w7X7/P7d7h+zd+fXOfn1/zJXdfic34L/nvw
Wle71mOudXz/CH6C13qTtU7hn8FrXbRaT6vWYar1e2rdl1ovpOa5rMn1ZZ4u
t/7m43Lrad4ttz7m1zV/p+Z9yJ/98/bP/nn7Z3+7/bO/3f7Zf27/7D+3f/aH
2z/7w+3d3m/jrzxXPaq3Pua5csfveuu53nqa/8odv+ut/3rrb14sd/yu19d6
fZkvyx2/5svWfU2uX79Hv/n7Pf67ebRcv+P6Hdev+bVcv+P6Hdevebdcv+P6
Hdev+bhcv+bjjp+1b+PKvFtu/c2v5dbTPFpufcyX5W5vPbemjhfmv3K31zxX
7vaaz8rdXvNWudtbz+MxP33eH59Tx1PrY94qt94+v0BuPc1n5Y5fn18gt/7m
uXLHr88vkOvL/Ffu+DX/9XtrTa5fr0O+ff+N63dcv+P6HdfvH/TyE1y/4/od
1++4fsf1O67fcf2O63dcv+P6Pbdf+3ZeMq6vces/bv3Hree49Ry3PuPWZ9zt
red+1fmW+azc7TVvlbu95qdyt9c8VO721vPMzDef98fnWB/Xt5c7fs1D5dbT
9e3lJ7g+Xd9ebv3NW+WOX9e3l+vLfFbu+DWfHd/fvSbX7+f98Tn6HdfvuH7H
9Tuu33H9jp/g+h3X75/0cv2O63dcv+P6HdfvuH7H9VvPF6zrOvNiufU3/5Vb
T/NcufUxn5W7vfXcxLpeNT+Vu73moXK313xT7vaaV8rd3noepPnj8/74HOvj
+udyx695pdx6uv65/AR3/Lr+udz6m4fK3V9c/1yuL/NTuePX/HTc/FSuX++D
y/U7rl/zVrl+x/U7rl/zWbl+x/U7rl/zXLl+x/X7F71cv+a/cv3W81nrvph5
rtz6m8/Krad5q9z6mJ/K3d567mzd7zPflLu95pVyt9f8Ue72mifK3V7zQbnj
t35fVPe1zQfljl/zQbn1NB+Un+COX/NBufU3H5Q7fs0H5foyH5S7P5oPPr9r
+vk1f35/uRaf81tw70OvPb/vue35Xcht9TxP76OsneD13Ll6Xtmfwev5SPVc
nXoei99ja/X8h3puQP3efe1brqBvufU3H5RbT/NBufUxH5TX/IK1b3mJ+7H8
2d9u/+xvt3/2n9s/+8/tn/3h9s/+cPs6Xq5Vrlv557fcyNeVS9T9+7pvXfc7
675a3X+q+y51vV7XhXX9VNcNdb5Z5zX1/V/fe3W8rHFZ+295k1ev3/X6Xa/f
9fpdf4Lrd71+1+t3vX7X63e9ftfrd71+1+t3vX7NB+X6Kh/mg3Lrbz4ot57m
g3LrYz7ofrMmd3trPzMflLu95oNyt9d8UO72mg86Htbkjl/zQbn1qfFmPii3
ruaDcutpPih3/JoPyq2/+aDc8Ws+KNeX+aDc8Ws+6HFtTa5f80G5fuu4aT4o
16/5oNx/x3xQrl/zQbl+zQfl+jUflOvXfFCuX/NBv5/W5Po6vJZb/3HrP249
x63nuPUZtz7jbq/5oNztre9p80G522s+KHd7zQflbq/5oOcTa3LHr/mg3PrU
+Yr5oNzxaz4ot57mg3K9mQ/Krb/5oNzxaz4o15f5oNzxaz44vr97Ta7fz/vj
c/Rb553j+h3X77h+x/U7foLrd1y/f9LL9Tuu33H9jut3XL/j+h3Xr/mgXF91
PWA+KLf+5oNy62k+KLc+5oPj5oNyt7euc8wH5W6v+aDc7TUflLu95oPj5oNy
x6/5oNz61PWe+aDc8Ws+KLee5oNyx6/5oNz6mw/K3S/MB+X6Mh+UO37NB8f3
uWty/X7eH5+jX/9uuX7H9Tuu33H9jp/g+h3X77h+x/U7rt9x/f5FL9fvuH7H
9Ws+KNdX3U8xH5Rbf/NBufU0H5RbH/PBcfNBudtb94nMB+Vur/mg3O01H5S7
veaDv/N6Te74rfX16ncRdT/UfFDu+DUflFtP80G549d8UG79zQfljl/zQbm+
zAfl7nfmg8+6fj+/5s86rGvxOeYGa78Hf9b5u+1ZH+62Zx2y27xfsnaCP+sP
3fasc3Ob5/trzzoltz3rW9z2rKNwm99Xa8/v4G97fj99m37NB+X6rfUczRPl
+vVz6zl79Ty3eo5ZPY+rnuNUzwuq5+TU817qOSH1PIp6DkM9T6DWoa/1y2vd
61ov+du6nOantY5prcdZ6zjWeoG1Tl6t91brhNV6VLUOU60nVOvQ1Hontc5H
rVdR6xzU7+Prd9Vy/Zr/yvVlnis/wa2/eavcepqfyq1PzRvafrkmtz6f98fn
WJ9x6zN+glufcevj9bHc+ni+VudH9b1ax+Max7W/VJ3k1VtP8025x4f1J7j1
Nw+Ve3xYr6/1+lrv8WG9x4f1+l2v3/X6NW+V67fWTTafleu3/Ll+r1y/5rny
E1y/5r9y/bp+r1y/5sVy/bp+r1y/5suOhzW5fmv96xpX5sXyE9z6m+fKraf5
rNz6mM96XFiTWx/z2W/HF/NW+QlufcxD5dbHfFNufcw3PT6uya3P5/3xOR4f
xj0+HF7Lree4++m4fg693PqPe3wY9/gwrq9xfY17fBj3+DCu33H9juvXPFeu
31rX3vxXrt/6fnX9Xrl+zYvlJ7j/vvmyXL+u3yvXr3m0XL+u3yvXr/m15ytr
cv3W8wnqvMc8Wn6CW3/zYrn1NP+VWx/zX8/b1uTWx/z32/mfea78BLc+5q1y
62N+Krc+5qeev67JrU89r8K8Ve7xoc6bXb9X7vHBfFZ+glt/81y5/l2/V64v
81+5xwfX75Xr17x43LxYrt967oj5sly/df3j+r1y/ZpHy09w/Zpfy/Xr+r1y
t8+8W65f1++V69d8fNx8XK7fen5MXZead8tPcOtvHi23nubLcutjvjxuviy3
PubLcutjXiw/wa2Pea7c+pjPyq2P+ey4+azc+tTzhMxz5R4f6r6G6/fKPT6Y
/8pPcOtvXiz3+OD6vXJ9mS/L3b9cv1euX/Pov/G+Nbl+67lQ5tdy/db9Kdfv
levXvFt+guvXfFyuX9fvlevXPF2uX9fvlVs/8/e/8XpNrl/zd7l+6/cqdR/Z
/F2uX/N3+QmuX/N3uX7N3+X6NX+X69f8Xa5f8/fnuWs/v+bP807X4nPMc9bM
Mdb+Fvx5Dtttz/O+bvM+2doJ/jzn57bneTK3eR229jwP5LbnORK3Pc8ruM3v
+bVnvfnbnnXKb9Ov+btcv/W8PfN3uX7rvr//nly/5u/yE1y/5u9y/Zq/y/Vr
/i7Xr/m7XL/m7+Yoa/Jn/NLLn/F7+2f83v4Zv7yW1/P6nvF7+xO8ntNVz4N6
xu/t63k+9RyYet7IM35vX8+LqOcM1PoTa3L9mr9/y9X0LT/Brb/5u9x6mr/L
rY/5u7ngmtz6mL9/yxfd7+UnuPUxf5dbH/N3ufWp+YnbnjV5zYeqeTQ1X6Pm
KVhPX1fuV3lX5TZ1v7/uK9f91LovWPeT6r5FXa/XdWddr9R5bp0f1fdqHY9r
3Nf+Xt7k1et3vX7Xn+D6Xa/f9fpdr9/1+l2v3/X6Xa/f9fpdr1/zd7l+zd/l
+iof5u9y62/+Lree5u9y62P+7n6zJrc+5u9y61P7pfm73PqYv8utj/m73PqY
vzt+1uTW5/P++ByPD+MeH8at5+G13P1xXA+HXm79xz0+jHt8GNfXuL7GPT6M
e3wY1++4fsf1a/4u1289d9z8Xa7fmv9Ux2Xzd7l+zd/l/jvm73L9mr/L9Wv+
Ltev+btcv+bvfp+tyfVr/i7XV31fmr/Lrb/5u9x6mr/LrY/5u9/ra3LrY/4u
tz513mD+Lrc+5u9y62P+Lrc+5u+e36zJrY/5u9zjg/m73HrW+Zb5u9zjg/m7
3Pqbv8v1bP4u15f5u9zjg/m7XL/m756nrsn1a/4u16/5u1y/dd5s/i7Xr/m7
XL/m73L9mr/L3Q7zd7l+zd/l+jV/Hzd/l+vX/F2ur7qeMX+XW3/zd7n1NH+X
Wx/z93Hzd7n1MX+XW5+6rjN/l1sf83e59TF/l1sf8/dx83e59TF/l3t8MH+X
W8+6HjZ/l3t8MH+XW3/zd7nHB/N3ub7M3+XuR+bvcv2av/+d963J9Wv+Ltev
+btcv3Vfw/xdrl/zd7l+zd/l+jV/l+vX/F2uX/N3uXUyf/87r9fk+jV/l+u3
1k+s3/nU/Ufzd7l+zd/l+jV/l+vX/F2uX/N3uX7N3+X6NX/3vt6a3Fz00+Jz
fgv+e3Dvu6/9PbjrOK79EfwE937AmuuQrbl+1ZrXDWueb665js7aX8H9Xlrz
eLamX/N3ub5qvU73A7n1N++WW0/za7n1MY/2vvOa/Nk/b//sn7yWP/vb7Z/9
5/bP/nP7Z3+4/bM/3N7tNZ+V13OP3b7f6L+tx2qeK3f8+rly62n+K6/ns9Vz
xqy/ebG8ni9Uz8nRl/myvJ6PUeu4rMlr3Xr9juvBdWfk+vV7Wq7fcf2aX8tr
fc1aJ1K/5t3yWh+u1jnTr/m4vNY3qnmCa3J9mXfLrb/5tdx6mkfLrY/5cs1/
rHlzcrd33O11/5O7veNu77jb63W/3O2t89Bv5y/1vVrfP3UcrfFX+0XVr3rr
uf4Ed/yut/7rrf96x+96x+96fa3X13rH73rH73r9mv/K9Wv+K9fvuH7Ni+X6
LX9/xH83X5brd1y/4/o1j5brd1y/4/o1v5br1/za/XtNrq9xfR1ey63/uPUc
t57j1mfc+oy7vea5cre31sGv8W/eKnd7zU/lbq95qNztNd+UO37NN+XWp54H
YB4qd/zWcdP1seUnuH5cH1tu/c1b5Y5f18eW68t8Vu74NZ/1e2VNrl/zWbl+
x/VrnivXb33/jevX/Feu33H9/kkv1695sVy/4/o1X5br13zZ84M1ub7qeRt1
nmH+K7ee5rly62M+K3d7zVvlbm89R6TOn8xD5W6v+abc7TWvlLu95o9yx6/5
o9z61PNUzCvljt8673R9bPkJ7vh1fWy59TcPlevf9bHl+jI/lTt+zU/HzU/l
+jU/let3XL/mrXL91vXDuH7NZ+X6HdfvuH7Nc+X6HdfvX/Ry/Zr/yvVr/ivX
Vz2vqK7TzGfl1tO8VW59zE/lbq95qNztrecw1fWneaXc7TV/lLu95olyt9d8
UO74NR+UWx/zQbnjt+av130Z80H5Ce74NR+UW3/zQbnj13xQri/zQbn7l/mg
9zXW5OY/nxaf4/3+Ne8Tr3n/cs37fGv/FNz7HGsnuNepa15vrXmevub545rn
WWueL6z5PbPm8W/N48Safs0H5fqq573VfS73D7n1NB+UWx/zQfmzP6//+TV/
9s/bP/vn7Z/9jdfyZ/+5/bP/3P7ZH27/7A+3d3vNB+X6MR+UWx/zQbnj13zw
231P/z35Ce74NR+UW3/zQbnj13xQri/zQbnj13zQ+8Jr8np+tX7NB+X6NR+U
67fuX/u58hO8nrNXz4vTr/mgvJ4TVc870q/5oLyec1LrhazJ9WU+KLf++pNb
T/NBufUxH5TX/Kw1udtrPih3e90v5W6v+aDc7TUflNf55pq85tc4fsdrPkXl
8JUPV45qPX0tP8ErB6j72XUftO7P1X2suh9T1/F1fVnXYfr1/KvOg+p8ob73
6nhZ47j29/Imr/4E1+96/a7X73r9rtfvev2u1+96/a7X73r9ntuvyfU1rq9x
6394Lbee49Zz3PqMW59xt9d8UO721nOUKz+u/cZ8UO72mg/K3V7zQffXNbnj
13xQbn3MB+WOX/NBufWs8WY+KNeD+aDc+psPyh2/5oNyfZkPyh2/5oMed9bk
+jUflOvXfFCuX/NBuX7ruGk+KNev+aDcf8d8UK5f80G5fs0H5fo1H/T7Y02u
r3pee81Tqe8n80G59TQflFsf80G/F9fkbm89h77m39T3rvmg3O01H5S7veaD
ft+vyR2/5oNy62M+KHf8mg/KrWedr5gPyh2/5oNy628+KNez+aBcX+aDcsev
+aDnbWty/ZoPyvVrPijXr/mgXL913mk+KNev+aBcv+aDcv2aD8rdDvNBuX7N
B8fNB+X6Mh+UW/86vzcflFtP80G59TEfHDcflLu95oNyt7euW8wH5W6v+aDc
7TUf/IPXa3LHr/mg3PqYD8odv7V+U83rret580G549d8UG79zQfljl/zQbm+
zAfl7kfmg+f2NrnrpH5afI739de8H7zmOnxrfw/ufam1P4Kf4K4PtOZ11Zrn
42uuI7Lm+hNrnhes+X2y5u/U1/x985p+zQfl+nX9Xrl+zRPl+q31wswf5fr1
75br17xSrl/X75Xr13xTrl/X75Xr1zx0fJ7W5M/4pZc/4/f2z/i9/TN+b/+M
39s/4/f2z/jltfwZv7d/xu/tn/F7+2f83v4Zv7d/xu/tn/F7+2f83v4Zv7fX
r/mvXL/mv3J9mefKT3Drb94qt57mp3LrY346bn4qtz7mp3LrYx4qP8Gtj3ml
3PqYP8qtj/njuPmj3Pq4fq/c/cK8Um49az1H8025xwc/V17P36vnwnl8cP1e
eT3fqZ475PHB9Xvl9fyQWvdiTV7r3OvXfFau3/FaR1m/5rly/fr/y2t9x1p3
UL/jtQ5crR9W61rp99s6Q7U+Tc1bXJPr13xZri/zYvkJbv3Nc+XW03xWbn1q
Xuf2mzW59fm8Pz7H+oxbH/dXufUZtz7j1sf7EHLrU9e169fkdR5d5191XlDf
h3WcrvFd+13Vu3rrv97jw3qPD+v1tV5f6z0+rPf4sF6/6/W7Xr/muXL9un6v
XL/mv3L91rrJ5sVy/ZY/1++V69d8Wa5f1++V69c8Wq5f1++V69f8Wq5f82u5
vmo96xon5sty62leLLc+5r9y62P+K7c+5r9y62OeKz/BrY95q9z6mJ/KrY/5
6bj5qdz6uH6v3OODeavcetZ66Oazco8PdVx2/V65+7V5rtx/x/V75R4fzH/l
+nX9Xrl+zYvl+nX9Xrl+zZfl+q117c2j5fqt71fX75Xr1/xarl/X75Xr17xb
rl/X75Xr13xcrl/zcbm+6nkDdR5jfi23nubRcutjviy3PubLcutjviy3PubF
8hPc+pjnyq2P+azc+pjPjpvPyq2P6/fKPT6Y58qtZz2vwvxX7vGhzptdv1fu
8cG8WK4v1++VO27Ml+Vuh+v3yvVrHi3Xr+v3yvVrfi3Xbz13xLxbrt+6/nH9
Xrl+zcfl+nX9Xrl+zdPl+nX9Xrl+zd/l+jV/l+vX/F2uX/N3uX5rvnXdpzB/
l+vX/F2uX/N3uX7N3+X6NX+Xu302uXnmp8XnmM+smUuseb98zfusa97/W/O+
19oJ7nX8mteXa15XrXm+v+Z54prnL2t+b6/5fbLmcWhNv+bvcv2av8v1a/4u
1289z8n8Xa7fuq/k9sj1a/4u16/5u1y/5u9y/Zq/y5/xu/7n1/wZv/TyZ/ze
/hm/t3/G7+2f8Xv7Z/ze/hm/tz/Bn/F7+2f83v4Zv7d/xu/tn/F7+2f83v4Z
v7d/xu/tn/F7e/2av8v1a/4u15f5+7f7sO4fcutp/i63Pubvcutj/i63Pubv
cutj/v7tfrTjRG59zN/l1sf8XW59zN/l1sf8Xa5/83e59azn7Zm/yz0+1H1/
/z25xwfzd7m+zN/lHh/M3+X6NX+X69f8Xa5f83e5fs3f5dbb/F2uX/N3+Qmu
X/N3uX7N3+X1nK56fpR+zd/l9RyYWh9oTa5f83e5vszf5Se49Td/l1tP83e5
9an1k8zf5dbH/F1ufczf5Se49TF/l1sf83e59an54/v71uQ1X7XmOdb8u5p3
VvOhah5Nze+oeQ0nuPUfr/ywcrPKcyoHqPvTdV+27hfWfSb9fs4ff37N63qo
zqPr/K7Oa+r7to7TdfyocXOCV6/f9fpdr9/1+l2v3/X6Xa/f9fpdr1/zd7l+
zd/l+jJ/l5/gVXfraf4utz7m73LrY/4utz7m73LrY/4uP8Fr/7M+5u9y62P+
Lrc+5u9y62P+Lvf4YP4ut57m73KPD+bv8hO8xrn7r/m73M8zf5d7fDB/l+vX
/F2uX/N3uX7N3+X6NX+X69f8Xa5f83f5CV7Ha/2av8v1a/4u16/5u1y/5u9y
/Zq/y/Vr/i7Xl/m7/ASv70Xraf4utz7m73LrY/4utz7m73LrY/4uP8Hr/MD6
mL/LrY/5u9z6mL/LrY/5u9zjg/m73Hqav8s9Ppi/y0/wOg/z+GD+LteX+bvc
8WH+LvfvNX+X69f8Xa5f83e5fs3f5fo1f5fr1/xdfoLr1/xdrl/zd7l+zd/l
+jV/l7sd5u//4PWaXL/m73L9mr/L9Wv+Ltdvrf9V88jr+tb8Xa5f83e5fs3f
5fo1f5fr1/zd67o1ubnlp8Xn/Bb89+DeF1/zfuqa6yyu/RH8BP9HcNcJW3N9
qTXP69c8H1xznZs110dZ83tjzePNmn7N3+X6Mk+XW/9aP879Rm49za/l1sc8
2vsOa/Jn/7z9s3/e/tnfbv/sb7yWP/vP7Z/94fbP/nB7t9d8Vq4H81m59dlr
62OeK3f8jltP10ORn+COX/9uufU3L5Y7fsf1Na4v82W549d8edx8Wa5f82W5
dfqdXq5f82i5fl3XRn6C69e/T65f8265fsf1O65f83G5fs3HvR+6JteXebfc
+tf6m3qVW0/zZbn1MS/2Pu+a3O01/5W7vbWuqPur3O01b5W7vean4+an8nrO
vOPX9bHl1se8VV7PE7aetR6r+azc8evnyq2/ea68nudWzxnTl/mvvJ5HVOtg
rcnrOSH6HdfvuH7Ni+W1HnytU65f82W5fv3/5fo1j5bXepy1TqR+za/ltZ5c
zbNek+trXF/j1n/c+h1ey63nuPUZtz7jdV27Jnd7x93ecbd33O11f5K7vd6X
lbu9dR2/fk1e1zF1vl/noXX+Ut/D9X1Vx9Eafyd41bt667/e8bve8bteX+v1
td7xu97xu16/5rNy/ZrPyvU7rl/zXLl+x/U7rl/zX7l+y9+f8d/Ni+X6Hdfv
uH7Nl+X6NV92/1uT68u8WG79a/332u/Nc+XWx3xW7vaat8rdXvNTudtb69rX
eDbflLu95pVyt9f8Ue74NX+UWx/Xx5Y7fs0r5dazngdgvil3/NZx0/Wx5e6n
5qFy/x3Xx5Y7fs1P5fo1P5Xr1/xUrt9x/Zq3yvU7rt9x/ZrPyvVb33/j+jXP
let3XL9/0cv1a/4r16/5r1xf5rly61/Pz6jzBvNWufUxP5W7veahcrfXfFPu
9tZzQep8yPxR7vaaJ8rdXvNBuePXfFBufcwH5Y5f80G59TQflJ/gjt+6rjAf
lDt+zQfl+jIflDsOzAfl/r02uXnOp8XneD9+zfu4a96PXPO+3Zr3k9a8D7F2
gnvduVbXFZ5Hr3k+uOZ505rf52t+D6x5PFtz3K/p13xQri/zQbn1r+cP1XWX
+5Pc+pgPyp/9ef3Pr/mzf97+2T9v/+xvt3/2t9vXdeaz/9z+2R9u/+wPt3d7
zQfl1tt8UG59zAfljl/zQbn1HLee4ye447eu290eueN33PE7rq9xfY07fscd
v+P6NR+U69d8UG49zAfl+jUflOvXfFB+guu37r/4d8v1az4o16/5oFy/5oNy
/ZoPyvVlPii3/vX8trpvpW+59TEflLu95oNyt9d8UO721nPp6n6c+7Hc7TUf
lLu95oNyx6/5oNz6mA/K9Wk+KLee9Tw/80G547fue/rvyR2/5oNyfZkPyh2/
5oNy/ZoPyvVrPijXr/mgvJ53Xc+Ftt7mg/ITXL91/9rPldfzBuu5fPW8OP2a
D8rruVK13tKaXF/j+hq3/uPWabzyAOs5bn3Grc94zW9dk7u95oNyt9d8UF45
h9trPih3e2s+7/69NXnNZ6x5f9ZnvOYx1XycmrdS8ykqhz/BK3e1/r6WVx5S
uUHdz677oHU/r+576Xf9mryuR+u6Tb+e39V5U51f1PdeHS9r3Nf4KG/y6vW7
Xr/r9btev+v1u16/6/VrPijXl/mg3PrX84MrN616mQ/KrY/5oHVfk7u95oNy
t7eei1x5cO0H5oNyt9d80P1pTe74NR+UWx/zQbnj13xQbj3NB+UnuOO3cvca
b+aDcr2ZD8r1ZT4od/yaD3pcWJPr13xQrl/zQbl+zQfl+jUflJ/g+q35E3Xc
NB+U69d8UO6/Yz4o16/5oMf3Nbm+zAfl1r+ev17zTur7xnxQbn3MB/3eWpO7
veaDcre3nitf82nqe9R8UO72mg/6fbwmd/yaD8qtj/mg3PFrPii3nuaD8hPc
8Vvz0up81HxQ7vg1H5Try3xQ7n5hPuh51ZrcdUw/LT7nt+Der11znbw111db
877Rmvcb1k7wfwT3umetzkdd52PN9SHW/N5e83i/5u/I1/z98Zp+zQfl+nX9
Xrl+zRPl+nX9Xrl+zR/lJ7h+zSvl+rUucv2ab8r16/q9cv2ah7rOzpr8Gb/0
8mf83v4Zv7d/xu/tn/F7+2f83v4Zv7c/wZ/xe/tn/N7+Gb+8lj/j9/bP+L39
M35v/4zf2z/j9/b6nY81uX4/74/P0de4vsZPcOvvfiO3nuPWZ9z6jFsf81O5
9TE/lVsf81D5CW59HD9y62P+KLc+5o/j5o9y6+P6vXI9m1fKrafr98o9Pphv
yk9w628eKvf44N8t15f5qdzjg+v3yvVr3jpu3irXr+v3yvVrPiu3Tq7fK9ev
ea78BNev+a9cv/59cv2aF8v16/q9cv2aL4+bL8v1a74s15d5sfwEt/56lVtP
81m59TGfHTeflVsf81m59TFvlZ/g1sf9W259zDfl1sd8c3x/35rc+nzeH5/j
8WHc48O49Ry3nuPuR+PW79DLrf+4x4dxjw9+rryev1fPkfP4MF7P6arnO9W6
RGvyeg6Jfs1/5fodr3Xua330Wudbv+MnuH7Nl+X69f+X1/qOtU6hfr+tA1fr
h9W88jW5fs2v5foyj5af4NbPusutp/mv3PrUvPt5XZNbn8/743Osz7j1GT/B
rY/7n9z6eB9abn3qvuP6NXnd56jr47rOq+ubOo+u8686j6jvzxO8xnftp+Wn
en2t9/iw3uPDev2u1+96/ZoXy/Xr+r1y/Zovy/Xr+r1y/ZpHy09w/Zpfy/Vb
/ly/V65f8265fl2/V65f83G5fs3H5foy75af4Na/9nvzaLn1MV+WWx/zZbn1
MV+WWx/zYvkJbn1q/Jvnyq2P+azc+pjPyq2P6/fKPT6Y58qtp+v3yj0+mP/K
T3Drb14s9/hQx2XX75U7DsyX5f47rt8r1695tFy/rt8r16/5tVy/rt8r1695
t/wE16/5uFy/9f3q+r1y/Zqny/Xr+r1y/Zq/y/Vr/i7Xr/m7XL/m73L9mr/L
T3D91rohNV+wzoPN3+X6NX+X69f8Xe6/b5ObN35afI55y5o5w5r3s9e8D7rm
/bw172OtneBeZ695vbjmddJanQd7Hrfm+cia38NrHu/XPE6s6df8Xa5f83e5
fs3f5fo1f5fr1/xdfoLr1/xdrt+6brFecv2av8v1a/4uf8bv+p9f82f80suf
8Xv7Z/ze/hm/t3/G7+2f8Xv7Z/ze/gR/xu/tn/F7+2f83r6uS5/xe/tn/N7+
Gb+3f8bv7Z/xe3v9mr/L9Wv+LteX+bv8BLf+dd3u/iS3Pubvcutj/i63Pubv
cutj/i4/wa1P3b9wXMmtj/m73PqYv8utj/m7XJ/m73Lraf4u9/hg/i4/wa2/
+bvc40PdV3J75B4fzN/l+jV/l+vX/F2uX/N3uX7N3+XWw/xdrl/zd/kJrl/z
d7l+6/6gf7dcv+bvcv2av8v1a/4u16/5u1xf5u/yE9z6131Vfcutj/m73PqY
v8utj/m73PqYv8tPcOtT95fd7+XWx/xdbn32963Jrc/n/fE5Hh/GPT6MW89x
6znu/jJunQ693PqPe3wY9/gwXnmAvsY9Pox7fBjX77h+x/Vr/i7Xr/m7XL/m
73L9mr/L9Wv+Lj/B9Wv+Ltdv5Td+rryeB6hf83d5Paer1m9bk+vX/F2uL/N3
+QlunSr30ofc+pi/y+v3K2ty62P+Lrc+5u/yE9z6VP7nfim3Pubv8rq/uCav
3xPUPPSaT13ziGu+as1zrPl6NU/tBK95NDUfpOZBVF6rr295Y+VsledUDqDf
9Wvyul9V9znqer2uU+t6qM6j63ywzoNO8DpO1/Gmxln5rF6/6/W7Xr/r9bte
v+bvcv2av8v1Zf4uP8Gtf81LqHqZv8utj/m7dV+TWx/zd7n1MX+Xn+DWp+Zn
1H5j/i63Pubv7n9rcutj/i73+GD+Lree5u9yjw/m7/IT3Pqbv8s9PtS8mRrP
5u9yPZu/y/Vr/u5xZE2uX/N3uX7N3+X6NX+X69f8XX6C69f8Xa7fmv9Ux2Xz
d7l+zd/l/jvm734frMn1a/4u16/5u1y/5u9y/Zq/y09w/Zq/y/Vb8xTr/Mn8
Xa5f83e5fs3f/V5fk5srflp8zm/Bfw/ufes173euuQ7i2h/BT3Cvp9dcx2vt
z+DPvMPb6vzJdWjWXL9kzeP6mseDNf2av8v1ZZ4ut/7m43LrWesZuZ/JrY95
tOeda/Jn/7z9s3/e/tnfbv/sb7d/9p/bP/sPr+XP/nB7t9d8Vm5dzWfl1mev
rY95rtzxO249x62n+a/c8Ttu/cetv3mx3PFrXeT6Ml+WO37Nl8fNl+X6NV+W
ux2/08v1ax4t1++4fs2v5fod16/r5sj163mGXL/j+jUfl+vXfNzr4TW5vsy7
5dbf/FpuPWs9OPcDufUxL/Y6f03u9pr/yt1e81y521vr3Ll/y91e89Nx81O5
49f8VG59XB9brjfzVrn1dH1s+Qnu+K3nitV6gua5csevf7dcX+a/csev+e+4
+a9cv+a/cv2O69e8WK7fcev0B738BNfvuH7H9WseLdevf59cv+bXcv2aX4+f
26/J9TWur3HrP+72jVvPcet5eC23PuNur3mu3O01n5W7veatcre31gl1/5O7
veab4+abcsev+abc+rg+tryeS1/Pb7eero8tP8Hr+cPWv9ZjNW+VO379XLm+
zGfl9fy3WkdwTV7PZdLvuH7H9WueK6/nb9RzHvRr/iuv9eNrnXL9mhfL9ev/
L9ev+bK81u+s36msyfVlXiy3/ua/cutpniu3Puaz8rovuCZ3e8fdXvNQudtr
vil3e90/5G5v3Qddvyav+0Z1f6Wu4+v6r6576vqgzkPr/OUEr++3Oo7W+Kv9
rvxUr6/1jt/1jt/1+jU/levX/FSu33H9mrfK9Tuu33H9ms/K9Tuu33H9mufK
9Vv+/or/bv4r16/5r/vHmlxf5rly628+K7eetZ577cfmp3K31zxU7vaab8rd
XvNKudtb69TX+DRPlLu95oNyx6/5oNz6mA/KHb/mg3LraT4oP8Edv+aDcutf
61zU/Jv6XjQflLtfmw/K/Tyb3Hzm0+JzvF++5n3WNe8vrnkfbs37PWveJ1g7
wb2OXPN6Zc3z3DXP79Zq/lB9L3qcXvP4tOY4XtOv+aBcX+aDcutvPii3nvU8
jDoPcP+TP/vz+p9f82f/vP2zf97+2d9u/+xvt3/2n9s/+8/t67zn2R9u7/aa
D8qtn/mg3PqYD8odv+aDcutpPig/wR2/5oNy628+KHf81nmn9ZI7fs0H5fpd
3dfk+v28Pz7Hv/d3erl+x/U7rt9x/Y6f4Pod1++4fsf1O67fun6wLnL9jut3
XL/mg3J9mQ/Krb/5oNx61vOE6jrK/UPu9poPyt1e80G522s+KHd76zlJdX3o
fi93e80H5Y5f80G59TEflOvHfFBuPc0H5Se449d8UG79zQfljt+6bnd75I5f
80G5fs0H5fo1H5Tr13xQrl/zQbn1MB+Un+D6NR+U69d8UK7fuv/i3y3Xr/mg
XL/n9mtyfY3ra9z6j7sd49Zz3HqO1/0p6zPu9poPyt1e80G522s+KHd76zlz
dX/N/VLu9poPyh2/5oNy62M+KHf8mg/Kraf5oPwEt07mg3Lrbz4od/zWfU//
Pbnj13xQrl/zQbl+zQfl+jUflOvXfFCuX/NB+Qlez5G23uaDcv2aD8rrvrZ+
zQfl9Ry/Wq9uTa4v80G59TcflFtP80F53d+3PrU+n/mg3O01H5S7veaDcrfX
fFBeuYXbW7+HMB+U1/zxmmdd83mtj/mgvOYJ1ny0msd0gtc8l5pPUTl85c+V
01aepK9v+UnlDPpdvyav+391n6zux+h3fV2/1nVeXU/UeegJXucp9X1Yx9E6
ftQ4K5/V63e9ftfr13xQri/zQbn1Nx+UW896HnDloLX95oPWZU3u9poPyt1e
80G521vPOa58t7yaD+p7Te74NR+UWx/zQbnj13xQbj3NB+UnuOPXfFBu/c0H
5fW768rjaxy6/5oPyv3/bHLXGf20+Bzvi6/9Htx17NZc/2zN+zpr3g9YO8Fd
X2fN65I1z2fXXIdjrX4/X/Mq6njq77zX/H3wmn7NB+X6df1euX7NE+X6df1e
uX7NH+UnuH7NK+X6recK1HoH5pty/Vp3uX7NQ11nYU3+jF96+TN+b/+M39s/
4/f2z/i9/TN+b/+M39uf4M/4vf0zfm//jN/bP+P39rWexTN+b/+MX17Ln/F7
e/2a/8r1a/4r15d5rvwEt/7mrfJaB8T6mJ/Krc/2yzW59fm8Pz7H+oxbn/ET
3PqMW5/xWg/F+oxbn3HrY/4otz6u3yvXm3ml3Hq6fq/c44P5pvwEt/7moXKP
D/Xcl1qPxvxU7vHBusj1a946bt4q16/r98r1az4rdztcv1euX/Nc+QmuX/Nf
uX7r+T21rpB5sVy/br9cv+bL4+bLcv2aL8v1ZV4sP8Gtfz33qNZjcj+QWx/z
2XHzWbn1MZ+VWx/zVvkJbn3MQ+W1XpX1Md+UW5/9fWty6/N5f3yOx4dxjw/j
1nPceo67X4xbj0Mvt/7jHh/GPT6M62u81hHz+DDu8cG/W67fcf2a58r16/q9
cv2a/8r16/q9cv2aF8tPcP2aL8v1W89Xq3XfzKPl+vXvk+vX/Hrc/FquX/Nr
ub7Mo+UnuNtXz6Wr9fL0JLc+5r/j5r9y62P+K7c+5rnyE9z6mLfKaz1B62N+
Krc+5qdy6+P6vXKPD+atcuvp+r1yjw/ms/ITvJ5f7X5nnivXV63naP4r9/jg
58rr+Xu1btyavJ4TpV/zZbl+x+s5JPX8inpug37HT/BaH73WBdfveK2jXOt1
6tf7+HL9flvfsX73sybXr/m4XF/m3fIT3PqbR8trnVPrY74sr9xjTW59zJfl
1se8WH6CWx/zXHmt92p9zOvk1mf9mrzuQ9f9y7pvV/er6j5HXR/XdWFdD53g
df5V5x31fVvH6RrftV+Xz+r1u16/5tFy/bp+r1y/5tdy/bp+r1y/5t3yE1y/
5uNy/bp+r7zWU9avOes3f67fK9ev+btcv+bvcv2av8v1a/4u16/5u/wE16/5
u1y/5u/yWhe7fh9e80JqfOrX/N1xuyY3D/y0+BzzkzVzgzXvN695n3LN+3Nr
3pdaO8G9Dl7z+m/N6541z5fXan3z+p1/ze+p46zjeE2/5u9y/Zq/y/Vr/i7X
r/m7XL/m7/ITXL/m73L9mr/La516/Zq/f/te1If8Gb/rf37Nn/FLL3/G7+2f
8Xv7Z/ze/hm/t3/G7+2f8Xv7E/wZv7d/xu/tn/F7+2f83r6eN/CM39s/4/f2
dd7zjN/b69f8Xa5f83e5vszf5Se49Td/l9dzGur8z/qYv3teuCa3Pubvcutj
/i4/wa2P+bu8nldR58HWx/zd8+M1ufUxf5frx/xdbj3N3+UeH8zf5Se49Td/
l3t8MH+X13NEPD6Yv3+7brFecv2av8v1a/4u16/5u9y/1/xdrl/zd/kJrl/z
d7l+zd/l9TwY/Zq/y+u6VL/m7+Pm73L9mr/L9WX+Lj/Brb/5u7yeo1PX59bH
/H3c/F1ufczf5dbH/F1+glsf83d5PU+o7lNYH/P38f19a3Lr83l/fI7Hh3GP
D+PWc9x6jut/3O0+9HLrP+7xYdzjw7i+xus5Tx4fxj0+jNf9Jv2O69f8Xa5f
83e5fs3f5fo1f5fr1/xdfoLr1/xdrl/zd3k9r0u/5u/yum+oX/P3cfN3uX7N
3+X6Mn+Xn+Buh/m7vJ5zVvdPrY/5+7j5u9z6mL/LrY/5u/wEtz7m7/J63lvd
R7Y+5u/j5u9y62P+Lvf4YP4ut57m73KPD+bv8hPc+pu/y62r+bu8nsPn8cH8
XV55gH7N38fN3+X6NX+X69f8Xa5f83e5fs3f5Sd4PYdcv+bv8npesX7N3+X6
rfzGz5XX+pprcv2av8v1Zf4uP8Gtv/m73O2uHMv6yuv3hWty62P+Lrc+5u/y
E9z6mL/LrU/lee5n8sp/1uT1e6/6nVD9PqZ+F1K/J6h56DX/uuYdn+A1z7Hm
99W8tpoPVfNoav5IzZuovFa/le+tX5NXnlD3oev+a913rPtVdZ+jru/ruvYE
r/PoOn+s86b6vq3jdB2falyWz+r1a/4u16/5u1y/5u9y/Zq/y/Vr/i4/wfVr
/i7Xr/m7XL/m7/Jap6DmT5RXe5vc3O/T4nPMSdbMB9a8r7zm/cg178Otef9p
7QT3enfN67w1r2/WPC9e83xqrdadr/Umah5MjU/9mr/L9Wv+Ltev+btcv+bv
cv2av8tPcP2av8v1a/4u1289J6DWB6l5S3U81ZPH2TX5M37p5c/4vf0zfm//
jN/bP+P39s/4vf0zfm9/gj/j9/bP+L39M35v/4zf2z/j9/b1HIha/6XmpdX3
pX7N3+X6NX+X63ev9WteL9fvuH7H9Wu+L9fvuH7H9et8ALl+x+t5HrWOT80v
rPMe/Tp/QK5f5w/I/Xd+p5fr1/kGcv2O69f5CXL9jut3XL/OZ5Drd7yey6Lf
mg9a56nW1/PXNbl+nf8g16/zH+T6df6DXL/Of5Cf4Pp1/oNcv85/kOu3nqNT
62fVvN663rCO653/INev8x/k+nX+g9y/y/kPcv06/0F+guvX+Q9y/Tr/Qa7f
eh5SrYNW87PrutF6rXf+g1y/zn+Q69f17eX6db6EXL+uby8/wfXr+vZy/Tof
Q67feq5VrWdX8+zr+t+6rHf+hly/zt+Q63dcv873kOt33O34g15+gut3XL/j
+nU+iVy/4/XcMv3W7yXqPo7bv/7cfk2u38/743P0O67fcf2O63dcv+Nu36GX
63dcv+P6HdfvuH7H6/lz+h2v38PUfTr9Ov9Erl/nn8j16/wTuX6dfyLXr/NP
5Ce4fp1/Itev80/k+q3nBdY6ofX7pbqv6vasd/6JXL/OP5Hr1+cXyPXrfBW5
fn1+gfwEtx4+v0CuX+fDyPVbz32s9V7rd2h1f9y/e73zZ+T6df6MXL/j+nW+
jVy/4/od16/zc+T6HbdOf9LL9et8Hnk911O/9XvCyjn8+9Y7/0euX+f/yPXr
/B+5fp3/I9ev83/kJ7h+nf8jt37O/5Hr1/k/cv3W70Irr/LvWO/8H7l+nf8j
16/zf+T6df6PXL/O/5Gf4Pp1/o9cv87/kevX+T9y/dbveyt39N9b7/wfuX6d
/yPXr8+nkOvX+UJy/fp8CvkJrl+fTyHXr/OR5Na7notc66HX77QrP/63PidZ
/u05tHL9juvX+U7yb88blOvX+VHyb8/LkuvX+VTyb897keu3fm9f8wD8/9c7
/0r+bV1tuX6dfyX/tm6r/Ns6l/IT/Nt6cnL9Ov9K/m29Irl+/q3rmsj16/wr
+bffbcu//c5V/u13gfJvv6OSn+Dffq8g/zY/Xf5tPqz82/xH+bf5VvZr8m/z
AuTfckj5t9xD/u0+q/wE/3Y/QP7t+kP+7Xynvifr+Frj8vX5/wBTUK5a
      "], {
       Polygon[CompressedData["
1:eJxMnXX0HIWyrTPd0z093dO4uzsEDxAgQIAAAQIEd3d310ACAYK7a/Dg7u7u
7u560Fff2zu3s9ar9auuqpdVe1f/cc7Xc++dccvd1to16dOnzxRT9enTjr+T
Rlze6tPn5Ij4f/8/yE+JYI6YzHMtP9M7NSLto5jcM4mf6Z3W0r9PTOGZ1M/0
To/I+iim9Ezbz/TOiMj7KKbyTOZnemdGdPoopvZM7md6Z0UUfRTTeKbjZ3pn
R3T7KKb1TOFneudElH0U03mm62d650ZUfRTTe6b0M73zInp9FDN4pvIzvfMj
6j6KGT3T8zO9CyLG66OYyTO1n+ldGDF+H8XMnhnPz/Quipigj2IWz4zvZ3oX
R0zYRzGrZybwM71LIibqo5jNMxP6md6lERP3UczumYn8TO+yiEn6KObwzMR+
pndHS/U5I+5s6R0c+y7yfFfEFS29V3N5jv4V7t0dcWVL79XcnmH2SvfuiRjd
0ns1j2eYHe3evRFXtfRezesZZq9y776Iq1t6r+bzDLNXu3d/xDUtvVd9PcPs
Ne49EHFtS+/V/J5h9lr3Hoy4rqX3agHPMHudew9FXN/Se7WgZ5i93r2HI25o
6b1ayDPM3uDeIxFjWnqvFvYMs2PcezTixpbeq0U8w+yN7j0WcVNL79WinmH2
Jvcej7i5pfeqn2eYvdm9JyJuaem9WswzzN7i3pMRt7b0Xi3uGWZvde+piNta
eq+W8Ayzt7n3dMTtLb1X/T3D7O3uPTPOO7akZ2b3u3iH+9SXinjW79ycfo+W
dp3nARHPR++5lupzu7a0Z3lvlnFtbr8ny7o2j9+L5VyjNzDixfi3Xmip3te1
5TzLe7C8a3199xVcm993XtE1eoMiXo5/66WW6gu5tqJnuetKri3kO67s2sK+
2yqu0Rsc8Wr8W6+0VO/n2iqe5U6rutbPd1nNtcV8h9Vdozck4vX4t15rqd7f
tdU9yw3WcK2/n7nNGy3V14x4s6UbLWXf13J97DO3eaul+tCIt1u62QDfYW3X
B/gO67i2jH1f17Vl/cxt3mmpvl7Euy3dbKDvsL7rA32HDVxb3r5v6NoKfuY2
77VU3yji/ZZuNsh32Nj1Qb7DJq6tZN83dW1lP3ObD1qqbxbxYUs3G+w7bO76
YN9hC9dWte9buraan7nNRy3Vt4r4uKWbDfFttnZ97DO3+aSl+jYRn7Z0ozV9
m21dH/vMbbjJUN9hO8+s5Tts79pQ32EH19b2bXZ0bR0/cxtusp7vsJNn1vUd
dnZtPd9hF9fW9212dW0DP3MbbrKR77CbZzb0HXZ3bSPfYQ/XNvZt9nRtEz9z
G26yme+wl2c29R32dm0z32Ef1zb3bfZ1bQs/cxtuspXvsJ9ntvRt9ndtKz9z
mz9aqh8Q8b+WbjT2Vjz/GfFZS3c40HP0P3Pvr4jPW7rLQZ5h9nP3/o74oqU7
HewZZr9w75+IL1u62yGeYfZL9/6N+Kqlux3qGWa/cu+/iK9buuNhnmH2a/f4
D5vftHTXwz3D7DfutSK+benOR3iGWWr0kojvWrrzkZ5hlhq9NOL7lu5+lGeY
pUavHfFDS+/BMM8wS41eFvFjS+/F0Z5hlhq9POKnlt6LYzzDLDV6nYifW3pP
hnuGWWr0iohfWnpvRniGWWr0uhG/tvQeHesZZqnRKyN+a+k9Os4zzFKjV0X8
3tJ7NdIzzFKj10uad+x4z+znd5E6feonRNSJ3rkD/B6d6DrPoyLGj/54ieoH
uXaiZ3lvTnLtIL8nJ7t2sN+LU1yjd2rEhPFvTZCofphrp3iW9+A01w7z3U93
7XDf+QzX6J0ZMXH8WxMlqh/l2hme5a5nuXaU73i2a8N8t3Nco3duxKTxb02S
qD7ctXM8y53Oc22473K+ayN8hwtco3dhxOTxb02WqD7StQs8yw0ucm2kn7nN
FInqF0dMmehGJ9j3S1wf+8xtpkpUvzRi6kQ3G+U7XOb6KN/hctdOsu9XuHay
n7nNNInqV0ZMm+hmp/oOo10/1Xe4yrXT7PvVrp3uZ24zXaL6NRHTJ7rZmb7D
ta6f6Ttc59pZ9v161872M7eZIVH9hogZE93sXN9hjOvn+g43unaefb/JtfP9
zG1mSlS/OWLmRDe70Le5xfWxz9xmlkT1WyNmTXSji32b21wf+8xtuMmlvsPt
nrnEd7jDtUt9hztdu8y3ucu1y/3MbbjJlb7D3Z65wne4x7UrfYd7XRvt29zn
2lV+5jbc5Brf4X7PXO07PODaNb7Dg65d69s85Np1fuY23OQG3+Fhz1zvOzzi
2g2+w6OujfFtHnPtRj9zG25ys+/wuGdu8m2ecO1mP3ObxRLVn4xYPNGNxt6K
5yUiZkt0h6c8R3829/pHzJ7oLk97htnZ3VsyYo5Ed3rGM8zO4d5SEXMmutuz
nmF2TveWjpgr0d2e8wyzc7k3IGLuRHd83jPMzu3eMhHzJLrrC55hdh73lo2Y
N9GdX/QMs/O6t1zEfInu/JJnmJ3PvYERfRPd/WXPMNvXveUj5k/0HrziGWbn
d2+FiAUSvReveobZBdxbMWLBRO/Fa55hdkH3BkUslOg9ed0zzC7k3koRCyd6
b97wDLMLu7dyxCKJ3qM3PcPsIu6tErFoovfoLc8wu6h7gyP6JXqv3vYMs/3c
W3Wcd+wdzzzud3Ex96m/G7Ga37kn/R695zrP70cMid7qiepPu/aeZ3lvPnDt
ab8nH7r2jN+Lj1yj93HEmvFvrZGo/rxrH3mW9+AT15733T917QXf+TPX6H0e
MTT+rbUS1V927TPPctcvXHvZd/zStVd8t69co/d1xDrxb62dqP66a195ljt9
49rrvsu3rr3hO3znGr3vI9aLf2vdRPW3XfvOs9zgB9fe9jO3WT9R/ceIDRLd
6F37/pPrY5+5zYaJ6j9HbJToZu/7Dr+4/r7v8KtrH9j331z70M/cZuNE9d8j
Nkl0s499hz9c/9h3+J9rn9j3P1371M/cZtNE9b8iNkt0s899h79d/9x3+Me1
L+z7v6596Wdus3mi+n8RWyS62de+A6D5P9+IO7Raqn1j35OWat/6mdtsmaie
8t+TEt3se9+m7frYZ26zdaJ6xn8vSnSjH32b3PWxz9yGm/zsO3RamvnJdyha
qv3sO3Rbqv3i25Qt1X71M7fhJr/7DlVLM7/5Dr2War/7DnVLtT98m/Faqv3P
z9yGm/zlO4zf0syfvsMELdX+8h0mbKn2t28zUUu1f/zMbbjJf77PxC3N/Ovb
TNJS7T/fZlLX6HGDyVxr+ZnbcJPUd5jcM/S4wRSupX7mNvsnqk/Jf29IdKOx
t+L5wIhtE91hKs/R39a9gyK2S3SXqT3D7HbuHRyxfaI7TeMZZrd375CIHRLd
bVrPMLuDe4dG7JjobtN5htkd3TssYqdEd5zeM8zu5N7hETsnuusMnmF2Z/eO
iNgl0Z1n9Ayzu7h3ZAQfcrjzTJ5hdlf3jorYLdHdZ/YMs7u5Nyxi90TvwSye
YXZ3946O2CPRezGrZ5jdw71jIvZM9F7M5hlm93RveMReid6T2T3D7F7ujYjY
O9F7M4dnmN3bvWMj9kn0Hs3pGWb3ce+4iH0TvUdzeYbZfd0bGbFfovdqbs8w
u597x4/zjs3jmcn9Lu7vPvV5I07wOzel36P5XOe5b8So6J2YqD61a/N5lvdm
ftem9nuygGvT+L1Y0DV6C0WcHP/WSYnq07u2oGd5DxZ2bXrffRHXZvCdF3WN
Xr+IU+PfOiVRfWbXFvUsd13MtZl9x8Vdm8V3W8I1ev0jTo9/67RE9dldW8Kz
3GlJ12b3XZZybQ7fYWnX6A2IODP+rTMS1ed2bWnPcoNlXJvbz9zmrET1ZSPO
TnSjee37cq6PfeY25ySqD4w4N9HN+voOy7ve13dYwbX57fuKri3gZ25zXqL6
oIjzE91sId9hJdcX8h1Wdm1h+76Ka4v4mdtckKg+OOLCRDfr5zus6no/32E1
1xaz76u7trifuc1FiepDIi5OdLP+vsMarvf3HdZ0bUn7vpZrS/mZ21ySqD40
4tJENxvg26zt+thnbnNZovo6EZcnutGyvs26ro995jbcZKDvsJ5nlvMd1ndt
oO+wgWvL+zYburaCn7kNNxnkO2zkmRV9h41dG+Q7bOLaSr7Npq6t7Gduw00G
+w6beWYV32Fz1wb7Dlu4tqpvs6Vrq/mZ23CTIb7DVp5Z3XfY2rUhvsM2rq3h
22zr2pp+5jbcZKjvsJ1n1vJttndtqJ+5zR2J6jtE3JnoRmNvxfNdEVckusOO
nqN/hXt3R1yZ6C47eYbZK927J2J0ojvt7BlmR7t3b8RVie62i2eYvcq9+yKu
TnS3XT3D7NXu3R9xTaI77uYZZq9x74GIaxPddXfPMHutew9GXJfoznt4htnr
3Hso4vpEd97TM8xe797DETckuvtenmH2BvceiRiT6D3Y2zPMjnHv0YgbE70X
+3iG2RvdeyzipkTvxb6eYfYm9x6PuDnRe7KfZ5i92b0nIm5J9N7s7xlmb3Hv
yYhbE71HB3iG2VvdeyritkTv0YGeYfY2956OuD3Re3WQZ5i93b1nxnnHDvbM
dn4X73Cf+iERz/qd4x07NOK5RLVD/F4d6jn6h0U8n2jmUL9Xh3mG2cMjXkg0
c5jfq8M9w+wRES8mmjnc79URnmH2yIiXEs0c4ffqSM8we1TEy4lmjvR7dZRn
mB0W8UqimaP8Xg3zDLNHR7yaaGaY36ujPcPsMRGvJZo52u/VMZ5hdnjE64lm
jvF7NdwzzI6IeCPRzHC/VyM8w+yxEW8mmhnh9+pYzzB7XMRbiWaO9Xt1nGeY
HRnxdqKZ4/xejfQMs8dHvJNoZqTfq+M9w+wJEe8mmjne79UJnmH2xIj3Es2c
4PfqRM8wOyri/UQzJ/q9GuUZZk+K+CDRzCi/eyd55iA/8+4xQ53fm/wa+YeJ
fvdEkH+U6HdO/N7kt0QzzFKj93Gi3znxe5PfE80wS43eJ4l+58TvTf5INMMs
NXqfJvqdE783+V+iGWap0fss0e+c+L3Jn4lmmKVG7/NEv3Pi9yZ/JZphlhq9
LxL9zonfm/ydaIZZavS+TPQ7J35v8k+iGWap0fsq0e+c+L3Jv4lmmKVG7+tE
v3Pi9yb/JZphlhq9bxL9zonfm/DDL2aYpUbv20S/c+L3Ji3/kIxZavS+S/Q7
J35vkqSaYZYave8T/c6J35ukqWaYpUbvh0S/c+L3Ju1UM8xSo/djot858XuT
LNUMs9To/ZTod0783iRPNcMsNXo/J/qdE7836aSaYZYavV+S5ndORaoZZqnR
o0aP3zVMG3k31W9QCPIy1e+cCPIq1e+a+F3D9JFPl+p3D9To9VL9rokgr1P9
jokgHy/V75YI8vFT/U6J3zXMGPkMqX73QI3eBKl+p0SQT5jqd0kE+USpfodE
kE+c6ndH/K5h5shnSvW7B2r0Jkn1uyOCfNJUvzMiyCdL9bsignzyVL8j4ncN
s0Y+S6rfPVCjN0Wq3xER5FOm+t0QQT5Vqt8JEeRTp/pdEL9rmD3y2VL97oEa
vWlS/e6EIJ8j1e8c+F3DnKluxK3wHO/nSpvfNcyd6ibcBg/xcp60+Z3CvKk8
xms8wZv50uZ3B31TeYZ3aETr/GnzO4IFUnmAF+zM7gumze8CFkqlCW3szO4L
p/odAN/7F0mlAS183180VY0eGtCCBrTwfb9fqhlm+Z6/WKoaPb7fL56qRo/v
9UukqtFDM9rRjHa+1/dPNcMs3+eXTFWjx/f4pVLV6PH9felUNXp4hFd4hFd8
fx+QaoZZvrcvk6pGj+/ry6aq0eN7+nKpavTwFG/xFG/5nj4w1QyzfD9fPlWN
Ht/LV0hVo8f38RVT1ehxA27BDbgF38cHpZphlm/hK6Wq0eMm3IYaPb67bhL5
yqm+kRPkq6T6HQZBPjjV7y747rpZ5Jum+i5Ljd6qqX53QZCvlup3FgT56ql+
V0GQD0n1Owq+u24R+eapvstSo7dG2uf/fgBMvmaq300Q5Gul+p0EQT401e8i
+O66VeRbpvouS43e2ql+F0GQr5PqdxAE+bqpfvdAkK+X6ncOfHfdJvKtU32X
pUZv/VS/cyDIN0j1uwaCfMNUv2MgyDdK9bsFvrtuF/m2qb7LUqO3carv4gT5
9qm+w/LddYdUN+JWeI73O6bNd9edUt2E2+AhXu6cNt9Rd0nlMV7jCd7smjbf
RXdL5RneoRGtu6fNd849UnmAF+zM7numzXfLvVJpQhs7s/veqb5T8j1yn1Qa
0ML3x31T1eihAS1oQAvfH/dLNcMs3xv3T1Wjx/fFA1LV6PE98cBUNXpoRjua
0c73xINSzTDL98ODU9Xo8b3wkFQ1enwfPDRVjR4e4RUe4RXfBw9LNcMs3wMP
T1Wjx/e/I1LV6PG978hUNXp4ird4ird87zsq1QyzfN8blqpGj+95R6eq0eP7
3TGpavS4AbfgBtyC73fDU80wy7e6Ealq9LgJt6FGj+9C50d+bKpveAT5cam+
ExPkI1N9F+a70IWRX5DquxE1esen+i5MkJ+Q6jswQX5iqu++BPmoVN95+S50
ceQXpfpuRI3eSam+8xLkJ6f6rkuQn5LqOy5Bfmqq77Z8F7o08ktSfTeiRu+0
VN9tCfLTU32nJcjPSPVdliA/M9V3WL4LXR75Zam+G1Gjd1aq77AE+dmpvrsS
5Oek+s5KkJ+b6rsq34WujPyKVN+NqNE7L9V3O4J8dKrvRHwXuirVjbgVnuP9
1WnzXeiaVDfhNniIl9emzXee61J5jNd4gjfXp813mxtSeYZ3aETrmLT5DnNj
Kg/wgp3Z/aa0+a5ycypNaGNndr8l1XcUvpfcmkoDWvg+cluqGj00oAUNaOH7
yO2pZpjle8gdqWr0+P5xZ6oaPb533JWqRg/NaEcz2vnecXeqGWb5vnFPqho9
vmfcm6pGj+8X96Wq0cMjvMIjvOL7xf2pZpjle8UDqWr0+D7xYKoaPb5HPJSq
Rg9P8RZP8ZbvEQ+nmmGW7w+PpKrR43vDo6lq9Pi+8FiqGj1uwC24Abfg+8Lj
qWaY5VvCE6lq9LgJt6FGD279buRPpvrGQJA/leo7FkH+dKrvVnDr9yN/LxXX
pkbvmVTfrQjyZ1N9pyLIn0v1XYogfz7Vdyi49YeRf5CKa1Oj90Kq71AE+Yup
vjsR5C+l+s5EkL+c6rsS3PrjyD9KxbWp0Xsl1XclgvzVVN+RCPLXUn03Ishf
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
B/m9EVd15B1sa3d7eJV790Vc7SC/P+IaB/kDEdc6yB+MuK4jr2Fbe9rz69x7
KOJ6B/nDETc4yB8Z5wZj/Azngis+6htwG7jiYx3V6MEVH++oRg+u+ERHNXpw
xCc7qu3vWxzgOW4CV3yqoxnqcMWnO6rRgys+01GNHhzx2Y5qB/sWh3iOm8AV
n+tohjpc8fmOavTgii90VKMHR3yxo9rhvsURnuMmcMWXOpqhDld8uaMaPbji
Kx3V6MERX+2oNsy3ONpz3ASu+FpHM9Thiq93VKMHV3yjoxo9bsAtqNGDZ30b
+ZsdcUaC/K2OOCN867uOZpilRu/tjrgjvOv7jmaYpUbvnY44JPzrh45mmKVG
792OOCT868eOZpilRu+9jrgkPOynjmaYpUbv/Y44JXzs545mmKVG74OOuCW8
7JeOZpilRu/DjrglvOzXjmaYpUbvo444Jvzst45mmKVG7+OOuCY87feOZpil
Ru+TjjgnfO2PjmaYpUbv0444J3ztfx3NMEuN3mcdcU94258dzTBLjd7nHXFQ
+NtfHc0wS43eFx1xUXjc3x3NMEuN3pcdcVF43D8dzTBLjd5XHXFS+Ny/Hc0w
S43e1x1xU3jdfx3NMEuN3jedhqPyf/iWGWap0aNGDy42aeStQkyPIE8KcVWC
PC3EVeFkk0c+WSGORo1euxBnJcizQlyVIM8LcVWCvFOIq8LRpox8ikKcjRq9
ohBnJci7hbgqQV4W4qoEeVWIq8LZpo58qkIcjhq9XiHOSpDXhbgqQT5eIa5K
kI9fiKvC4aaNfJpCnI4avQkKcVaCfMJCXJUgn6gQVyXIJy7EVeF000c+XSGO
R43eJIW4JUE+QyGOB7ebsdCNuBWe4/1MRcPxZi50E26Dh3g5S9FwvFkLeYzX
eII3sxUNx5u9kGd4h0a0zlE0HG/OQh7gBTuz+1xFw/HmLqQJbezM7vMU4nrw
u3kLaUAL/G6+QjV6aEALGtACz+tbaIZZeN78hWr04HcLFKrRg98tWKhGD81o
RzPa4XkLFZphFp63cKEaPfjdIoVq9OB3ixaq0cMjvMIjvILn9Ss0wyw8b7FC
NXrwu8UL1ejB75YoVKOHp3iLp3gLz+tfaIZZeN6ShWr04HdLFarRg98tXahG
jxtwC27ALeB5AwrNMAvLW6ZQjR434TbU6MHJ1ol82UKMjyBfrhBnJcgHFuKs
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
FqU4I0G+ZSnOSJBvVYozEuRbl2KLBPnuZcMZ94h8m1KckSDfthRnJMi3K8UZ
CfLtS3FGgnzPUpwLrrVXqZtwGzzF273LhiPuU8pjvMYjvNq3bLjgfqU8wzs0
o33/suF8B5TyAC/QgJYDy4bbHVRKE9rYid0OLsW14FiHlNqRXeFWh0V+aCmu
xY7senjZcLgjSu3M7nCroyI/shTXYmd2H1Y2XO7oUhrQArcaHvkxpbgWGtAy
omw43bGlNKENbjUy8uNKcS00oe34suF2J5TSiFa41ajITyzFtdCI1pNKcSy4
1cmlNKMdjWg9pWw41qmlPMALNKP9tLLheKeX8gAv0Iz2M8qGc51ZyhO8wQO8
OKtsuN7ZpTzBGzzAi3PKhoOdW8ojvMITvDmvbDjf+aU8wis8wZsLyoaTXVjK
M7zDI7y6qGy438WlPMM7PMKrS8qGo11aykO8xDO8u6wUV4OjXV7KQ7zEM7zD
M7zDI7y6omw44JWlPMM7PMIrPMIrPMGb0WXDBa8q5RFe4Qne4Ane4AFeXF02
nPCaUp7gDR7gBR7gBZrRfm3ZcMPrSnmAF2hGO5rRjka0Xl+KW8GpbiilGe1o
QtuYsuGCN5bSiFY0oOWmsuF8N5fShDZ2Zvdbyobb3VpKA1rYkV1vKxsOd3up
ndmdndjtjlKcCi51Z6kd2RUOdXfkd5XiVOzIrveUDVe7t9TO7A6Huj/y+0px
KnZm9wfKhrM9WEoDWuBQD0f+UClOhQa0PFI23O3RUprQBod6PPLHSnEqNKHt
ibLhcE+W0ohWONTTkT9VilOhEa3PlOJScKhnS2lGOxrR+lzZcKnnS3mAF2hG
+wtlw+VeLOUBXqAZ7S+VDbd6uZQneIMHePFK2XC6V0t5gjd4gBevlQ3Xer2U
R3iFJ3jzRtlwuzdLeYRXeII3b5UN93q7lGd4h0d49U7ZcLx3S3mGd3iEV++V
DRd7v5SHeIlnePdBKU4GF/uwlId4iWd4h2d4h0d49VHZcL2PS3mGd3iEV3iE
V3iCN5+UDef7tJRHeIUneIMneIMHePFZ2XC/z0t5gjd4gBd4gBdoRvsXZcMB
vyzlAV6gGe1oRjsa0fpVKQ4Fd/q6lGa0owlt35QN5/u2lEa0ogEt35UNt/u+
lCa0sTO7/1A2HO7HUhrQwo7s+lPZcLWfS+3M7uzEbr+U4k5wpl9L7ciucKXf
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
Ochvjbi4J+9gW9vbw4vduy3iEgf57RGXOsjviLjMQX5nxOU9eQ3b2tGeX+7e
XRFXOMjvjrjSQX7PODcY7Wc4F1zxXt+A28AV7+upRg+ueH9PNXpwxQd6qtGD
Iz7YU21332IPz3ETuOJDPc1Qhys+3FONHlzxkZ5q9OCIj/ZU29u32Mdz3ASu
+FhPM9Thio/3VKMHV3yipxo9OOKTPdX29y0O8Bw3gSs+1dMMdbji0z3V6MEV
n+mpRg+O+GxPtYN9i0M8x03gis/1NEMdrvh8TzV6cMUXeqrR4wbcgho9eNan
kb/YE2ckyF/qiTPCtz7raYZZavRe7ok7wrs+72mGWWr0XumJQ8K/vuhphllq
9F7tiUPCv77saYZZavRe64lLwsO+6mmGWWr0Xu+JU8LHvu5phllq9N7oiVvC
y77paYZZavTe7Ilbwsu+7WmGWWr03uqJY8LPvutphllq9N7uiWvC077vaYZZ
avTe6Ylzwtd+6GmGWWr03u2Jc8LXfuxphllq9N7riXvC237qaYZZavTe74mD
wt9+7mmGWWr0PuiJi8Ljfulphllq9D7siYvC437taYZZavQ+6omTwud+62mG
WWr0Pu6Jm8Lrfu9phllq9D7pNRz1j55mmKVGjxo9uFhdx38u7onpEeR/9sRV
CfK/euKqcLLxY368WhyNGr2/e+KsBPk/PXFVgvzfnrgqQf5fT1wVjjZh/FsT
1OJs1Oj1qcVZCfJWLa5KkCe1uCpBntbiqnC2iSOfqBaHo0avXYuzEuRZLa5K
kOe1uCpB3qnFVeFwk0Y+SS1OR41eUYuzEuTdWlyVIC9rcVWCvKrFVeF0k0c+
WS2OR41erxa3JMinqMXx4HZT1roRt8JzvJ+qbjje1LVuwm3wEC+nqRuON20t
j/EaT/BmurrheNPX8gzv0IjWGeqG481YywO8YGd2n6luON7MtTShjZ3ZfZZa
XA9+N2stDWiB381Wq0YPDWhBA1rgebPXmmEWnjdHrRo9+N2ctWr04Hdz1arR
QzPa0Yx2eN7ctWaYhefNU6tGD343b60aPfjdfLVq9PAIr/AIr+B5fWvNMAvP
m79WjR78boFaNXrwuwVr1ejhKd7iKd7C8xaqNcMsPG/hWjV68LtFatXowe8W
rVWjxw24BTfgFvC8frVmmIXlLVarRo+bcBtq9OBkq0W+eC3GR5AvUYuzEuT9
a3FWuNmQyFevxdWo0VuyFnclyJeqxVkJ8qVrcVaCfEAtzgpXWzPyNWpxN2r0
lqnFXQnyZWtxVoJ8uVqclSAfWIuzwt2GRr5WLS5Hjd7ytbgrQb5CLc5KkK9Y
i7MS5INqcVa43DqRr12L21Gjt1It7kqQr1yLsxLkq9TirAT54FqcFW63XuTr
1uJ61OitWotjEuTr1+J6cLwNat2IW+E53m9YN1xvo1o34TZ4iJcb1w3X26SW
x3iNJ3izad1wvc1qeYZ3aETr5nXD9bao5QFesDO7b1k3XG+rWprQxs7svnUt
zgfP26aWBrTA87atVaOHBrSgAS3wve1qzTAL39u+Vo0ePG+HWjV68Lwda9Xo
oRntaEY7fG+nWjPMwvd2rlWjB8/bpVaNHjxv11o1eniEV3iEV/C93WrNMAvf
271WjR48b49aNXrwvD1r1ejhKd7iKd7C9/aqNcMsfG/vWjV68Lx9atXowfP2
rVWjxw24BTfgFvC9/WrNMAvb279WjR434TbU6MHNToj8gFrMjyA/sBZ3JcgP
qsVd4WijIj+xFmejRu/gWhyWID+kFnclyA+txV0J8sNqcVc428mRn1SLw1Gj
d3gtDkuQH1GLuxLkR9birgT5UbW4Kxzu1MhPqcXpqNEbVovDEuRH1+KuBPkx
tbgrQT68FneF050e+Wm1OB41eiNqcViC/Nha3JUgP64WdyXIR9birnC8MyM/
oxbno0bv+FpckyA/qxbng+udXetG3ArP8f6cuuF859a6CbfBQ7w8r2443/m1
PMZrPMGbC+qG811YyzO8QyNaL6obzndxLQ/wgp3Z/ZK64XyX1tKENnZm98tq
cT/43uW1NKAFvndFrRo9NKAFDWiB911Za4ZZeN/oWjV68L2ratXowfeurlWj
h2a0oxnt8L5ras0wC++7tlaNHnzvulo1evC962vV6OERXuERXsH7bqg1wyy8
b0ytGj343o21avTgezfVqtHDU7zFU7yF991ca4ZZeN8ttWr04Hu31qrRg+/d
VqtGjxtwC27ALeB9t9eaYRbWd0etGj1uwm2o0YOjPRv5nbUYIEF+Vy0OS5Df
XYvDwtWej/y5WtyNGr17anFZgvzeWhyWIL+vFoclyO+vxWHhbi9G/kItLkeN
3gO1uCxB/mAtDkuQP1SLwxLkD9fisHC5lyN/qRa3o0bvkVpcliB/tBaHJcgf
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
Z5jt6l4/v1dw9UmeYXZF99b1ewVX/9MzzK7k3np+r+Dqf3mG2ZXdW9/vFVx9
smeYXcW9DfxewdX/9gyzq7q3od8ruPo/nmF2Nfc28nsFV5/iGWZXd29jv1dw
9ameYbabe5u0vWPTPMMsz93dpw7X3dTvXOtd5Hkzv2drOt/c7xWcd3PX4MA9
3NvC71VP51v6PVrL+VZ+b9Z2vrXfE7jw1q7BjXu5t43fk97Ot/V70cf5dn4P
1nG+ve8OR97eNThzX/d28N37Od/Rd17X+U6+63rOd/Yd4c47uwaXXt+9XXzH
DZzv6rtt6Hw332kj57v7LnDq3V2DY2/sXv+2m2ziZzg23HoP36R1K573bLvB
Zn5ucey9fJPWrXje23fZwvk+vsuWzvdtu8FWfm5x7P18k9ateB7gu2zjfH/f
ZVvnB7TdYDs/tzj2gb5J61Y8D/RddnB+kO+yo/OD226wk59bHPsQ36R1K54H
+S67OD/Ud9nV+WFtN9jNzy2Ofbhv0roVz4PbbtLfz3BsviMc4Zu0bsXzkW03
2dM3mMs5vSGu7eV8qO+yt/OjfJd9nB/ddpN9fYMuzukNc20/58N9lwHOj/Fd
9nd+bNtNDvANEuf0Rrh2oPPjfJeBzo/3XQ5yfkLbTQ72DTLn9Ea6dojzUb7L
IOcn+i6HOj+p7SaH+QZN5/ROdu1w56e03WSwn/nGwLeEU32T1q14Ps134DvP
Mp6jf6R7o30Xvvss6xlmh7h3uu/Ed6DlPMPsUPfO8N34LrS8Z5g9yr0zfTe+
C63gGWaPdu8s35HvRF09w+ww9872XflutKJnmB3u3hjfme9IK3mG2WPcO8d3
5jvSyp5h9lj3zvXd+a60imeYHeHeeX4P+M60qmeYPc69sX4v+O60mmeYPd69
8/1e8N1pdc8we4J7F/g94TtUN88wO9K9cX5v+C7V3TPMjnLvQr9HfKdawzPM
nujeRX6P+E61pmeYPcm9i/1e8d2qh2eYPdm9S9resZ6eYZbnU9ynzneTS/3O
td5Fni/ze3aa88v9XvEd5XLX+M4y2r3xfq9Od36F36MznF/p9+ZM51f5PeG7
y1Wu8V3mLPeu9ntytvNr/F6McX6t34NznF/nu/Od5jrX+I5zrnvX++7nOb/B
dx7r/Ebf9XznN/mOfNe5yTW++1zg3s2+4zjnt/huFzq/1Xe6yPltvgvfgW5z
je9EF7t3e9tNLvEz34n4LnSHb9K6Fc93tt3gMj+3vhPd5Zu0bsXz3b7LeOf3
+C5XOL+37QZX+rn1neg+36R1K57v912udv6A73KN8wfbbnCtn1vfiR7yTVq3
4vlh3+V654/4Ljc4f7TtBjf6ufWd6DHfpHUrnh/3XW52/oTvcovzJ9tucKuf
W9+JnvJNWrfi+em2m9zuZ74T8Z3uGd+kdSuen227yZ2+wcbO6T3n2l3On/dd
7nb+gu9yj/MX225yr2+wqXN6L7l2n/OXfZf7nb/iuzzg/NW2mzzoG2zunN5r
rj3k/HXf5WHnb/gujzh/s+0mj/oGWzqn95Zrjzl/23d53Pk7vssTzt9tu8mT
vsHWzum959pTzt9vu8nTfuYbHt/qPvBNWrfi+UPfge+oB3iO/rPufeS78F31
QM8w+5x7H/tOfGcd6Blmn3fvE9+N764HeYbZF9z71Hfju+vBnmH2Rfc+8x35
DnuIZ5h9yb3PfVe+yw7yDLMvu/eF78x32kM9w+wr7n3pO/Od9jDPMPuqe1/5
7ny3PdwzzL7m3td+D/iOO9gzzL7u3jd+L/iue4RnmH3DvW/9XvBd90jPMPum
e9/5PeE77xDPMPuWe9/7veG771DPMPu2ez/4PeI78FGeYfYd9370e8R34KM9
w+y77v3k94rvwsM8w+x77v3c9o4N9wyzPL/vPnW+S/7id671LvL8q9+zD51P
8HvFd8oJrvEd8yP3fvN79bHz3/0efeL8D783nzqf6PeE75oTXeO752fuTfJ7
8rnzP/1efOH8L78HXzqf7LvzHXSya3wn/cq9v333r53/4zt/43yK7/qt86m+
I99Np7rGd9Xv3JvmO37v/F/f7Qfn//lOPzqf7rvwnXW6a3yH/cm9GTrjTX72
M99h+e76v07dpHUrnmfsjDfgL8+t77AzdeomrVvxPHOn7kKQz9KpuxDks3bG
G/CX59Z32Nk6dZPWrXievVN3Icjn6NRdCPI5O+MN+Mtz6zvsXJ26SetWPM/d
qbsQ5F06dReCvNEZb8BfnlvfYZNO3aR1K57TTt2FIM86dReCPO+MN+Avz63v
sM1O3aR1K56LzniTGfzMd1i+g5eduknrVjxXnfEm/OUGo53Tq12byXmHbzSz
807faBbn83TGm/CXG5zhnN68rs3mfD7faHbn8/tGczhfoDPehL/c4Czn9BZ0
bS7nC/lGcztf2Dfq4nyRzngT/nKDMc7pLepa4nwx3yh1vrhvlDlfojPehL/c
4Fzn9JZ0rel8qbabFH7mGznfwpf2TVq34nkZ34HfKdzoOfqVe8v6Lvxu4SbP
MFu7t5zvxO8YbvYMsx3uLe+78buGWzzDbKd7K/hu/K7hVs8wO497XX1Hfudw
m2eYnde9FX1Xfvdwu2eYnc+9lXxnfgdxh2eYnd+9lX1nfgdxp2eYXcC9VXx3
fhdxl2eYXdC9Vf0e8DuJuz3D7ELureb3gt9N3OMZZhd2b3W/F/xu4l7PMLuI
e938nvA7ivs8w+yi7nX3e8PvKu73DLOLubeG3yN+Z/GAZ5hd3L01/R7xO4sH
PcPsEu718HvF7y4e8gyzS7rXs+0de9gzzPK8lPvU+e6/lt+51rvI89p+z5Zx
3svvFb8D6OUavxNY1r3efq+Wc97H79Hyztfxe7OC875+T/jdQF/X+F1BV/f6
+T1Z0fm6fi9Wcr6e34OVna/vu/M7g/Vd43cIq7i3ge++qvMNfefVnG/ku67u
fGPfkd8lbOwav1vo5t4mvmN355v6bms438x3WtP55r4Lv2PY3DV+59DDvS3a
btLTz/zOgd81bOmbtG7F81ZtN1jbz63fOWztm7RuxfM2vktv59v6Ln2cb9d2
g3X83Pqdw/a+SetWPO/gu/RzvqPvsq7zndpusJ6fW79z2Nk3ad2K5118lw2c
7+q7bOh8t7YbbOTn1u8cdvdNWrfiub/vsonzPXyXTZ3v2XaDzfzc+p3DXr5J
61Y87912ky38zO8c+J3JPr5J61Y879t2k618g5ec09vPta2dD/BdtnG+v++y
rfMD2m6ynW/winN6B7q2vfOBvssOzg/yXXZ0fnDbTXbyDV5zTu8Q13Z2Psh3
2cX5ob7Lrs4Pa7vJbr7BG87pHe7a7s4H+y79nR/hu+zh/Mi2m+zpG7zlnN4Q
1/ZyPrTtJnv7md+g8FuTo3yT1q14Ptp34HdAP3qO/r7uDfNd+F3QT55hdj/3
hvtO/E7oZ88wO8C9Y3w3fjf0i2eY3d+9Y303fjf0q2eYPcC9Eb4jvyOa4Blm
D3TvON+V3xX95hlmB7p3vO/M74x+9wyzB7l3gu/M74z+8AyzB7s30nfnd0cT
PcPsIe6N8nvA75AmeYbZQe6d6PeC3yX96RlmD3XvJL8X/C7pL88we5h7J/s9
4XdKkz3D7OHuneL3ht8t/e0ZZge7d6rfI37H9I9nmD3CvdP8HvE7pimeYfZI
90b7veJ3TVM9w+wQ905ve8emeYZZnoe6T53fNZ3hd671LvJ8pt8zftd0pmvM
Hu3eWX7P+F3TWa4xO8y9s/2e8bums11jdrh7Y/ye8bumMa4xe4x75/g943dN
57jG7LHunev3jN81nesasyPcO8/vGb9rOs81Zo9zb6zfM37XNNY1Zo9373y/
Z/yu6XzXmD3BvQv8nvG7pgtcY3ake+P8nvG7pnGuMTvKvQv9nvG7pgtdY/ZE
9y7ye8bvmi5yjdmT3LvY7xm/a7rYNWZPdu8Sv2f8rukS15g9xb1L/Z7xu6ZL
XWP2VPcu83vG75ouc43Z09y73O8Zv2u63DVmR7s33u8Yv3Ma7xqzvHOnu0/v
/+Dsf3E=
        "]]}, 
      Properties -> {{1, Default} -> (MeshCellHighlight -> None), {
         2, Default} -> (MeshCellHighlight -> Opacity[0.5])}, 
      Method -> {
       "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
        Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
        Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
        Automatic, "CheckIntersections" -> Automatic, 
        "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
        "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
        Automatic, "Hash" -> 2985403040061774267}]]}, 
    TagBox[GraphicsComplex3DBox[CompressedData["
1:eJyV3THONMmeVvFX4LTZxjUu0hhN6Aq1EEI9wwKYNbAEJGy2xBJZAk48Zfzi
O6ohnFCdrq7vzf/JyMrMJyryP/7P//0//te/+/n5+T//4efn3//8/7b/+9/j
P/zrr/FvwX8P/rfgfw/+T8H/CH6C/yP4fwr+Z/D/HPy/BP+vwf8K/s/B/yX4
f4OXv3H/++d1fI5+x/U7rt9x/Y7rd1y/4ye4fsf1O67fcf2O63dcv+P6Hdfv
uH7H9VvjcPzx/6/08Gf83tfP+L2vn/F7Xz/j975+xu99/Yzf+/oEf8bvff2M
3/v6Gb/39TN+7+tn/N7Xz/i9r5/xe18/4/e+fsbvfa3fOp6O6/fz/vgcP2+v
9Tuu33H9jut3XL/jJ7h+x/U7rt9x/Y7rd1y/4/od1++4fsf1W9+L4/r9vD8+
R7/j/jt7rd9x/Y7rd1y/4ye4fsf1O67fcf2O63dcv+P6HdfvuH7H9VvnN+P6
/bw/Pke/4/od99/fa/2O63dcv+MnuH7H9Tuu33H9jut3XL/j+h3X77h+x/Vb
56nj+v28Pz5Hv+P6HdfvuH/XXut3XL/jJ7h+x/U7rt9x/Y7rd1y/4/od1++4
fsf1W9cb4/r9vD8+R7/j+h3X77h+x/1791q/4ye4fsf1O67fcf2O63dcv+P6
HdfvuH7H9VvXjeP6/bw/Pke/4/od1++4fsf1O+527PUJrt9x/Y7rd1y/4/od
1++4fsf1O67fcf0eXsv1+3l/fI5+x/U7rt9x/Y7rd1y/4ye4fsf1O67fcf2O
63dcv+P6HdfvuH7H9Vv3ccb1+3l/fI5+x/U7rt9x/Y7rd1y/4ye4273X+h3X
77h+x/U7rt9x/Y7rd1y/4/qt+3Hj+v28Pz5Hv+P6HdfvuH7H9Tuu3/ETXL/j
1mOv9Tuu33H9jut3XL/j+h3X77h+677quH4/74/P0e+4fsf1O67fcf2O63f8
BNfvuH7HrdNe63dcv+P6HdfvuH7H9Tuu37o/Pq7fz/vjc/Q7rt9x/Y7rd1y/
4/odP8H1O67fcf2OW7+91u+4fsf1O67fcf2O67dyjnH9ft4fn6Pfcf2O63dc
v+P6Hdfv+Amu33H9jut3XL/j1nWv9Tuu33H9jut3XL+VV43r9/P++Bz9jut3
XL/j+h3X77h+x09w/Y7rd1y/4/od1++49d5r/Y7rd1y/4/qt3HFcv5/3x+fo
d1y/4/od1++4fsf1O36C63dcv+P6HdfvuH7H9Tuuh73W77h+x/Vb+fG4fj/v
j8/R77h+x/U7rt9x/Y7rd/wE1++4fsf1O67fcf2O63dcv+P62Wv9juu35gGM
6/fz/vgc/Y7rd1y/4/od1++4fsdPcP2O63dcv+P6HdfvuH7H9Tuu33G97bV+
n7wfrt/P++Nz9Duu33H9jut3XL/j+h0/wfU7rt9x/Y7rd1y/4/od1++4fsf1
O17e1mo+Ts3jqPy/cuPKGyunqnyj7ovX/dS6D1f3b+q6v64X6zqjzk/rvKa+
D+s4WuPv2/yqb71+nX8l16/zr+T6df6VXL/Ov5Lr1/lXcv06/0quX+dfyfXr
/Cu5fp1/9W2eXPlz/pX8Gb/39TN+7+tn/N7Xz/i9r5/xe18/4/e+PsGf8Xtf
P+P3vn7G7339jN/7+hm/9/Uzfu/rZ/ze18/4va+f8Xtf67fmO9Y4dP6VXF/O
p5Kf4Nbf+U5y6+n8Jbn1cf6Sx521b8cj5y/JrY/zkeQnuPVxvpDc+jj/R259
nP/j8Xft23HZ+T9y9zvn/8j9d5z/I/f44Pwf+Qlu/Z3/I/f44Pwfub6c/yP3
+OD8H7l+nf/j9+jat+9X5//I9ev8H7l+nf8j16/zf+QnuH6d/yPXr/N/5Pp1
/o9cv87/kevX+T+eD619O09y/o9cX87nkZ/g1t/5NnLr6fwZufVx/oznhWvf
zhedPyO3Ps6HkZ/g1sf5KnLr4/wTufVx/sn4/r41ufX5vD8+x+PDuMeHces5
bj3H3a/H9Tnuduy19R/3+DDu8WFcX+P6Gvf4MO7xYVy/4/od12/9zqSuf5x/
Itev80/k+nX+iVy/zj+Rn+Bun/NP5Pp1/olcv84/kevX+Sdy/Tr/ZLx+L1TX
sc4/kevL+STyE9z6O99Dbj2dvyG3Ps7fGK/fTdX1vPM35NbH+RjyE9z6OF9C
bn2c/yC3Ps5/GK/fj9V9Dec/yD0+OP9Bbj2d/yD3+OD8B/kJbv2d/yB3f3H+
g1xfzn+Qe3xw/oNcv85/GK/fAdb9Kec/yPXr/Ae5fp3/INev8x/kJ7h+nf8g
16/zH+TWz/kPcv06/0GuX+c/jNfvOes+o/Mf5PpyPoP8BLf+zjeQW0/nD8it
j/MHxut3rXW/1fkDcuvjfAD5CW59zOvl1sf8XW59zN/H6/e9dd/Z/F3u8cH8
XW49zd/lHh/M3+UnuPU3f5d7fDB/l+vL/F3u/mj+Ltev+ft4/U678gPzd7l+
zd/l+jV/l+vX/F1+guvX/F2uX/N3uX7N3+X6NX+X68f8fbzWU6icz/xdrl/z
d7l+zd/l+jV/l5/g+jV/l+vX/F2uX/N3uX7N3+X6NX83t/s0+P7/5/3xOfX7
+/rddv3et34nWr8vrN+lneD1O5j6/UTNu6/52jXPt+aH1rzCmo9W85hq/H0a
XL+Pb3jle5VrVZ5TOUDdP677pid43Weq+xN1XV7Xo3UdU+e/dd5X5zv1PfmM
3/U/v+bls/pn/N7+Gb+3f8bv7Z/xe/tn/N7+Gb+3P8Gf8Xv7Z/ze/hm/t3/G
7+2f8Xv7Z/ze/hm/t3/G7+2f8Xt7/T7rn8D1W/6e9Uzg+nrWJ4Fb/2e9Ebj1
fNYPgVufZ/2Q2z/rh8CtT+3Hz3ogcOvzrO8Btz7Peh1w6/OsvwG3Ps/6G7ev
9Ylq3kyN52f9Dbh1fdbf4LX1fNbfgHt8eNbfgFv/Z/0NuMeHZ/0NuL6e9Tfg
Hh+e9Tfg+n3W37h9rTNV85/quPysvwHX77P+Btx/51l/A67fZ/0NuH6f9Tfg
+n3W34Dr91l/A67fZ/0NuH6f9TduX+uF1Ty2+n591tOA6+tZHwNu/Z/1LuDW
81m/Am59nvUrbv/Zb35+za1PnWeMW59x6zN+glufceszbn3Grc+49Rm3Pp+/
7+fX3Pp83h+f4/Fh3OPDuPUct57j7r/jejv0cus/7vFh3OPDuL7G9TXu8WHc
48O4fsf1O67fWgew5qfWefOz/gNcv8/6D3D9Pus/wPX7rP8Adzue9R/g+n3W
f4Dr91n/Aa7fZ/0HuH6f9R9uX+s51jzjuv551nOA6+tZnwFu/Z/1FuDW81k/
AW59nvUTbv+snwC3PnUd+KyHALc+z/oGcOvzrFcAtz7P+gNw6/OsP+C/9/Nr
bn3qevhZfwDu8eFZfwBuPZ/1B+AeH571B+DW/1l/AO5+8aw/wGt9PesPwD0+
POsPwPX7rD/g3/Hza67fuq/xrD8A1++z/gBcv8/6A3D9PusPwPX7rD8A1++z
/gDcOj3rD8D1+6w/ANfvs/6A/97Pr7l+6/7Us54AXF/P+gBw6//83h9uPZ/f
78Otz/P7/ds/v9+HW5+6T/f8Hh9ufZ7f18Otz/N7ebj1eX7/Drc+z+/f/f9/
fs2tT92vfH7/Dvf48Pz+HW49n9+/wz0+PL9/h1v/5/fvcI8Pz+/f4fp6fv8O
d797fv/Oa/0+v3/3fT+/5vqt+87P79/h+n1+/w7X7/P7d7h+n9+/w/X7/P4d
rt/n9+9w/T6/f4fr9/n9O1wPz+/fff3za67fyoee37/D9fv8/h2u3+f373D9
Pr9/h+v3+f07XL/P79/h+n1+/w7X7/P7d7h+zd+fXOfn1/zJXdfic34L/nvw
Wle71mOudXz/CH6C13qTtU7hn8FrXbRaT6vWYar1e2rdl1ovpOa5rMn1ZZ4u
t/7m43Lrad4ttz7m1zV/p+Z9yJ/98/bP/nn7Z3+7/bO/3f7Zf27/7D+3f/aH
2z/7w+3d3m/jrzxXPaq3Pua5csfveuu53nqa/8odv+ut/3rrb14sd/yu19d6
fZkvyx2/5svWfU2uX79Hv/n7Pf67ebRcv+P6Hdev+bVcv+P6Hdevebdcv+P6
Hdev+bhcv+bjjp+1b+PKvFtu/c2v5dbTPFpufcyX5W5vPbemjhfmv3K31zxX
7vaaz8rdXvNWudtbz+MxP33eH59Tx1PrY94qt94+v0BuPc1n5Y5fn18gt/7m
uXLHr88vkOvL/Ffu+DX/9XtrTa5fr0O+ff+N63dcv+P6HdfvH/TyE1y/4/od
1++4fsf1O67fcf2O63dcv+P6Pbdf+3ZeMq6vces/bv3Hree49Ry3PuPWZ9zt
red+1fmW+azc7TVvlbu95qdyt9c8VO721vPMzDef98fnWB/Xt5c7fs1D5dbT
9e3lJ7g+Xd9ebv3NW+WOX9e3l+vLfFbu+DWfHd/fvSbX7+f98Tn6HdfvuH7H
9Tuu33H9jp/g+h3X75/0cv2O63dcv+P6HdfvuH7H9VvPF6zrOvNiufU3/5Vb
T/NcufUxn5W7vfXcxLpeNT+Vu73moXK313xT7vaaV8rd3noepPnj8/74HOvj
+udyx695pdx6uv65/AR3/Lr+udz6m4fK3V9c/1yuL/NTuePX/HTc/FSuX++D
y/U7rl/zVrl+x/U7rl/zWbl+x/U7rl/zXLl+x/X7F71cv+a/cv3W81nrvph5
rtz6m8/Krad5q9z6mJ/K3d567mzd7zPflLu95pVyt9f8Ue72mifK3V7zQbnj
t35fVPe1zQfljl/zQbn1NB+Un+COX/NBufU3H5Q7fs0H5foyH5S7P5oPPr9r
+vk1f35/uRaf81tw70OvPb/vue35Xcht9TxP76OsneD13Ll6Xtmfwev5SPVc
nXoei99ja/X8h3puQP3efe1brqBvufU3H5RbT/NBufUxH5TX/IK1b3mJ+7H8
2d9u/+xvt3/2n9s/+8/tn/3h9s/+cPs6Xq5Vrlv557fcyNeVS9T9+7pvXfc7
675a3X+q+y51vV7XhXX9VNcNdb5Z5zX1/V/fe3W8rHFZ+295k1ev3/X6Xa/f
9fpdf4Lrd71+1+t3vX7X63e9ftfrd71+1+t3vX7NB+X6Kh/mg3Lrbz4ot57m
g3LrYz7ofrMmd3trPzMflLu95oNyt9d8UO72mg86Htbkjl/zQbn1qfFmPii3
ruaDcutpPih3/JoPyq2/+aDc8Ws+KNeX+aDc8Ws+6HFtTa5f80G5fuu4aT4o
16/5oNx/x3xQrl/zQbl+zQfl+jUflOvXfFCuX/NBv5/W5Po6vJZb/3HrP249
x63nuPUZtz7jbq/5oNztre9p80G522s+KHd7zQflbq/5oOcTa3LHr/mg3PrU
+Yr5oNzxaz4ot57mg3K9mQ/Krb/5oNzxaz4o15f5oNzxaz44vr97Ta7fz/vj
c/Rb553j+h3X77h+x/U7foLrd1y/f9LL9Tuu33H9jut3XL/j+h3Xr/mgXF91
PWA+KLf+5oNy62k+KLc+5oPj5oNyt7euc8wH5W6v+aDc7TUflLu95oPj5oNy
x6/5oNz61PWe+aDc8Ws+KLee5oNyx6/5oNz6mw/K3S/MB+X6Mh+UO37NB8f3
uWty/X7eH5+jX/9uuX7H9Tuu33H9jp/g+h3X77h+x/U7rt9x/f5FL9fvuH7H
9Ws+KNdX3U8xH5Rbf/NBufU0H5RbH/PBcfNBudtb94nMB+Vur/mg3O01H5S7
veaDv/N6Te74rfX16ncRdT/UfFDu+DUflFtP80G549d8UG79zQfljl/zQbm+
zAfl7nfmg8+6fj+/5s86rGvxOeYGa78Hf9b5u+1ZH+62Zx2y27xfsnaCP+sP
3fasc3Ob5/trzzoltz3rW9z2rKNwm99Xa8/v4G97fj99m37NB+X6rfUczRPl
+vVz6zl79Ty3eo5ZPY+rnuNUzwuq5+TU817qOSH1PIp6DkM9T6DWoa/1y2vd
61ov+du6nOantY5prcdZ6zjWeoG1Tl6t91brhNV6VLUOU60nVOvQ1Hontc5H
rVdR6xzU7+Prd9Vy/Zr/yvVlnis/wa2/eavcepqfyq1PzRvafrkmtz6f98fn
WJ9x6zN+glufcevj9bHc+ni+VudH9b1ax+Max7W/VJ3k1VtP8025x4f1J7j1
Nw+Ve3xYr6/1+lrv8WG9x4f1+l2v3/X6NW+V67fWTTafleu3/Ll+r1y/5rny
E1y/5r9y/bp+r1y/5sVy/bp+r1y/5suOhzW5fmv96xpX5sXyE9z6m+fKraf5
rNz6mM96XFiTWx/z2W/HF/NW+QlufcxD5dbHfFNufcw3PT6uya3P5/3xOR4f
xj0+HF7Lree4++m4fg693PqPe3wY9/gwrq9xfY17fBj3+DCu33H9juvXPFeu
31rX3vxXrt/6fnX9Xrl+zYvlJ7j/vvmyXL+u3yvXr3m0XL+u3yvXr/m15ytr
cv3W8wnqvMc8Wn6CW3/zYrn1NP+VWx/zX8/b1uTWx/z32/mfea78BLc+5q1y
62N+Krc+5qeev67JrU89r8K8Ve7xoc6bXb9X7vHBfFZ+glt/81y5/l2/V64v
81+5xwfX75Xr17x43LxYrt967oj5sly/df3j+r1y/ZpHy09w/Zpfy/Xr+r1y
t8+8W65f1++V69d8fNx8XK7fen5MXZead8tPcOtvHi23nubLcutjvjxuviy3
PubLcutjXiw/wa2Pea7c+pjPyq2P+ey4+azc+tTzhMxz5R4f6r6G6/fKPT6Y
/8pPcOtvXiz3+OD6vXJ9mS/L3b9cv1euX/Pov/G+Nbl+67lQ5tdy/db9Kdfv
levXvFt+guvXfFyuX9fvlevXPF2uX9fvlVs/8/e/8XpNrl/zd7l+6/cqdR/Z
/F2uX/N3+QmuX/N3uX7N3+X6NX+X69f8Xa5f8/fnuWs/v+bP807X4nPMc9bM
Mdb+Fvx5Dtttz/O+bvM+2doJ/jzn57bneTK3eR229jwP5LbnORK3Pc8ruM3v
+bVnvfnbnnXKb9Ov+btcv/W8PfN3uX7rvr//nly/5u/yE1y/5u9y/Zq/y/Vr
/i7Xr/m7XL/m7+Yoa/Jn/NLLn/F7+2f83v4Zv7yW1/P6nvF7+xO8ntNVz4N6
xu/t63k+9RyYet7IM35vX8+LqOcM1PoTa3L9mr9/y9X0LT/Brb/5u9x6mr/L
rY/5u7ngmtz6mL9/yxfd7+UnuPUxf5dbH/N3ufWp+YnbnjV5zYeqeTQ1X6Pm
KVhPX1fuV3lX5TZ1v7/uK9f91LovWPeT6r5FXa/XdWddr9R5bp0f1fdqHY9r
3Nf+Xt7k1et3vX7Xn+D6Xa/f9fpdr9/1+l2v3/X6Xa/f9fpdr1/zd7l+zd/l
+iof5u9y62/+Lree5u9y62P+7n6zJrc+5u9y61P7pfm73PqYv8utj/m73PqY
vzt+1uTW5/P++ByPD+MeH8at5+G13P1xXA+HXm79xz0+jHt8GNfXuL7GPT6M
e3wY1++4fsf1a/4u1289d9z8Xa7fmv9Ux2Xzd7l+zd/l/jvm73L9mr/L9Wv+
Ltev+btcv+bvfp+tyfVr/i7XV31fmr/Lrb/5u9x6mr/LrY/5u9/ra3LrY/4u
tz513mD+Lrc+5u9y62P+Lrc+5u+e36zJrY/5u9zjg/m73HrW+Zb5u9zjg/m7
3Pqbv8v1bP4u15f5u9zjg/m7XL/m756nrsn1a/4u16/5u1y/dd5s/i7Xr/m7
XL/m73L9mr/L3Q7zd7l+zd/l+jV/Hzd/l+vX/F2ur7qeMX+XW3/zd7n1NH+X
Wx/z93Hzd7n1MX+XW5+6rjN/l1sf83e59TF/l1sf8/dx83e59TF/l3t8MH+X
W8+6HjZ/l3t8MH+XW3/zd7nHB/N3ub7M3+XuR+bvcv2av/+d963J9Wv+Ltev
+btcv3Vfw/xdrl/zd7l+zd/l+jV/l+vX/F2uX/N3uXUyf/87r9fk+jV/l+u3
1k+s3/nU/Ufzd7l+zd/l+jV/l+vX/F2uX/N3uX7N3+X6NX/3vt6a3Fz00+Jz
fgv+e3Dvu6/9PbjrOK79EfwE937AmuuQrbl+1ZrXDWueb665js7aX8H9Xlrz
eLamX/N3ub5qvU73A7n1N++WW0/za7n1MY/2vvOa/Nk/b//sn7yWP/vb7Z/9
5/bP/nP7Z3+4/bM/3N7tNZ+V13OP3b7f6L+tx2qeK3f8+rly62n+K6/ns9Vz
xqy/ebG8ni9Uz8nRl/myvJ6PUeu4rMlr3Xr9juvBdWfk+vV7Wq7fcf2aX8tr
fc1aJ1K/5t3yWh+u1jnTr/m4vNY3qnmCa3J9mXfLrb/5tdx6mkfLrY/5cs1/
rHlzcrd33O11/5O7veNu77jb63W/3O2t89Bv5y/1vVrfP3UcrfFX+0XVr3rr
uf4Ed/yut/7rrf96x+96x+96fa3X13rH73rH73r9mv/K9Wv+K9fvuH7Ni+X6
LX9/xH83X5brd1y/4/o1j5brd1y/4/o1v5br1/za/XtNrq9xfR1ey63/uPUc
t57j1mfc+oy7vea5cre31sGv8W/eKnd7zU/lbq95qNztNd+UO37NN+XWp54H
YB4qd/zWcdP1seUnuH5cH1tu/c1b5Y5f18eW68t8Vu74NZ/1e2VNrl/zWbl+
x/VrnivXb33/jevX/Feu33H9/kkv1695sVy/4/o1X5br13zZ84M1ub7qeRt1
nmH+K7ee5rly62M+K3d7zVvlbm89R6TOn8xD5W6v+abc7TWvlLu95o9yx6/5
o9z61PNUzCvljt8673R9bPkJ7vh1fWy59TcPlevf9bHl+jI/lTt+zU/HzU/l
+jU/let3XL/mrXL91vXDuH7NZ+X6HdfvuH7Nc+X6HdfvX/Ry/Zr/yvVr/ivX
Vz2vqK7TzGfl1tO8VW59zE/lbq95qNztrecw1fWneaXc7TV/lLu95olyt9d8
UO74NR+UWx/zQbnjt+av130Z80H5Ce74NR+UW3/zQbnj13xQri/zQbn7l/mg
9zXW5OY/nxaf4/3+Ne8Tr3n/cs37fGv/FNz7HGsnuNepa15vrXmevub545rn
WWueL6z5PbPm8W/N48Safs0H5fqq573VfS73D7n1NB+UWx/zQfmzP6//+TV/
9s/bP/vn7Z/9jdfyZ/+5/bP/3P7ZH27/7A+3d3vNB+X6MR+UWx/zQbnj13zw
231P/z35Ce74NR+UW3/zQbnj13xQri/zQbnj13zQ+8Jr8np+tX7NB+X6NR+U
67fuX/u58hO8nrNXz4vTr/mgvJ4TVc870q/5oLyec1LrhazJ9WU+KLf++pNb
T/NBufUxH5TX/Kw1udtrPih3e90v5W6v+aDc7TUflNf55pq85tc4fsdrPkXl
8JUPV45qPX0tP8ErB6j72XUftO7P1X2suh9T1/F1fVnXYfr1/KvOg+p8ob73
6nhZ47j29/Imr/4E1+96/a7X73r9rtfvev2u1+96/a7X73r9ntuvyfU1rq9x
6394Lbee49Zz3PqMW59xt9d8UO721nOUKz+u/cZ8UO72mg/K3V7zQffXNbnj
13xQbn3MB+WOX/NBufWs8WY+KNeD+aDc+psPyh2/5oNyfZkPyh2/5oMed9bk
+jUflOvXfFCuX/NBuX7ruGk+KNev+aDcf8d8UK5f80G5fs0H5fo1H/T7Y02u
r3pee81Tqe8n80G59TQflFsf80G/F9fkbm89h77m39T3rvmg3O01H5S7veaD
ft+vyR2/5oNy62M+KHf8mg/KrWedr5gPyh2/5oNy628+KNez+aBcX+aDcsev
+aDnbWty/ZoPyvVrPijXr/mgXL913mk+KNev+aBcv+aDcv2aD8rdDvNBuX7N
B8fNB+X6Mh+UW/86vzcflFtP80G59TEfHDcflLu95oNyt7euW8wH5W6v+aDc
7TUf/IPXa3LHr/mg3PqYD8odv7V+U83rret580G549d8UG79zQfljl/zQbm+
zAfl7kfmg+f2NrnrpH5afI739de8H7zmOnxrfw/ufam1P4Kf4K4PtOZ11Zrn
42uuI7Lm+hNrnhes+X2y5u/U1/x985p+zQfl+nX9Xrl+zRPl+q31wswf5fr1
75br17xSrl/X75Xr13xTrl/X75Xr1zx0fJ7W5M/4pZc/4/f2z/i9/TN+b/+M
39s/4/f2z/jltfwZv7d/xu/tn/F7+2f83v4Zv7d/xu/tn/F7+2f83v4Zv7fX
r/mvXL/mv3J9mefKT3Drb94qt57mp3LrY346bn4qtz7mp3LrYx4qP8Gtj3ml
3PqYP8qtj/njuPmj3Pq4fq/c/cK8Um49az1H8025xwc/V17P36vnwnl8cP1e
eT3fqZ475PHB9Xvl9fyQWvdiTV7r3OvXfFau3/FaR1m/5rly/fr/y2t9x1p3
UL/jtQ5crR9W61rp99s6Q7U+Tc1bXJPr13xZri/zYvkJbv3Nc+XW03xWbn1q
Xuf2mzW59fm8Pz7H+oxbH/dXufUZtz7j1sf7EHLrU9e169fkdR5d5191XlDf
h3WcrvFd+13Vu3rrv97jw3qPD+v1tV5f6z0+rPf4sF6/6/W7Xr/muXL9un6v
XL/mv3L91rrJ5sVy/ZY/1++V69d8Wa5f1++V69c8Wq5f1++V69f8Wq5f82u5
vmo96xon5sty62leLLc+5r9y62P+K7c+5r9y62OeKz/BrY95q9z6mJ/KrY/5
6bj5qdz6uH6v3OODeavcetZ66Oazco8PdVx2/V65+7V5rtx/x/V75R4fzH/l
+nX9Xrl+zYvl+nX9Xrl+zZfl+q117c2j5fqt71fX75Xr1/xarl/X75Xr17xb
rl/X75Xr13xcrl/zcbm+6nkDdR5jfi23nubRcutjviy3PubLcutjviy3PubF
8hPc+pjnyq2P+azc+pjPjpvPyq2P6/fKPT6Y58qtZz2vwvxX7vGhzptdv1fu
8cG8WK4v1++VO27Ml+Vuh+v3yvVrHi3Xr+v3yvVrfi3Xbz13xLxbrt+6/nH9
Xrl+zcfl+nX9Xrl+zdPl+nX9Xrl+zd/l+jV/l+vX/F2uX/N3uX5rvnXdpzB/
l+vX/F2uX/N3uX7N3+X6NX+Xu302uXnmp8XnmM+smUuseb98zfusa97/W/O+
19oJ7nX8mteXa15XrXm+v+Z54prnL2t+b6/5fbLmcWhNv+bvcv2av8v1a/4u
1289z8n8Xa7fuq/k9sj1a/4u16/5u1y/5u9y/Zq/y5/xu/7n1/wZv/TyZ/ze
/hm/t3/G7+2f8Xv7Z/ze/hm/tz/Bn/F7+2f83v4Zv7d/xu/tn/F7+2f83v4Z
v7d/xu/tn/F7e/2av8v1a/4u15f5+7f7sO4fcutp/i63Pubvcutj/i63Pubv
cutj/v7tfrTjRG59zN/l1sf8XW59zN/l1sf8Xa5/83e59azn7Zm/yz0+1H1/
/z25xwfzd7m+zN/lHh/M3+X6NX+X69f8Xa5f83e5fs3f5dbb/F2uX/N3+Qmu
X/N3uX7N3+X1nK56fpR+zd/l9RyYWh9oTa5f83e5vszf5Se49Td/l1tP83e5
9an1k8zf5dbH/F1ufczf5Se49TF/l1sf83e59an54/v71uQ1X7XmOdb8u5p3
VvOhah5Nze+oeQ0nuPUfr/ywcrPKcyoHqPvTdV+27hfWfSb9fs4ff37N63qo
zqPr/K7Oa+r7to7TdfyocXOCV6/f9fpdr9/1+l2v3/X6Xa/f9fpdr1/zd7l+
zd/l+jJ/l5/gVXfraf4utz7m73LrY/4utz7m73LrY/4uP8Fr/7M+5u9y62P+
Lrc+5u9y62P+Lvf4YP4ut57m73KPD+bv8hO8xrn7r/m73M8zf5d7fDB/l+vX
/F2uX/N3uX7N3+X6NX+X69f8Xa5f83f5CV7Ha/2av8v1a/4u16/5u1y/5u9y
/Zq/y/Vr/i7Xl/m7/ASv70Xraf4utz7m73LrY/4utz7m73LrY/4uP8Hr/MD6
mL/LrY/5u9z6mL/LrY/5u9zjg/m73Hqav8s9Ppi/y0/wOg/z+GD+LteX+bvc
8WH+LvfvNX+X69f8Xa5f83e5fs3f5fo1f5fr1/xdfoLr1/xdrl/zd7l+zd/l
+jV/l7sd5u//4PWaXL/m73L9mr/L9Wv+Ltdvrf9V88jr+tb8Xa5f83e5fs3f
5fo1f5fr1/zd67o1ubnlp8Xn/Bb89+DeF1/zfuqa6yyu/RH8BP9HcNcJW3N9
qTXP69c8H1xznZs110dZ83tjzePNmn7N3+X6Mk+XW/9aP879Rm49za/l1sc8
2vsOa/Jn/7z9s3/e/tnfbv/sb7yWP/vP7Z/94fbP/nB7t9d8Vq4H81m59dlr
62OeK3f8jltP10ORn+COX/9uufU3L5Y7fsf1Na4v82W549d8edx8Wa5f82W5
dfqdXq5f82i5fl3XRn6C69e/T65f8265fsf1O65f83G5fs3HvR+6JteXebfc
+tf6m3qVW0/zZbn1MS/2Pu+a3O01/5W7vbWuqPur3O01b5W7vean4+an8nrO
vOPX9bHl1se8VV7PE7aetR6r+azc8evnyq2/ea68nudWzxnTl/mvvJ5HVOtg
rcnrOSH6HdfvuH7Ni+W1HnytU65f82W5fv3/5fo1j5bXepy1TqR+za/ltZ5c
zbNek+trXF/j1n/c+h1ey63nuPUZtz7jdV27Jnd7x93ecbd33O11f5K7vd6X
lbu9dR2/fk1e1zF1vl/noXX+Ut/D9X1Vx9Eafyd41bt667/e8bve8bteX+v1
td7xu97xu16/5rNy/ZrPyvU7rl/zXLl+x/U7rl/zX7l+y9+f8d/Ni+X6Hdfv
uH7Nl+X6NV92/1uT68u8WG79a/332u/Nc+XWx3xW7vaat8rdXvNTudtb69rX
eDbflLu95pVyt9f8Ue74NX+UWx/Xx5Y7fs0r5dazngdgvil3/NZx0/Wx5e6n
5qFy/x3Xx5Y7fs1P5fo1P5Xr1/xUrt9x/Zq3yvU7rt9x/ZrPyvVb33/j+jXP
let3XL9/0cv1a/4r16/5r1xf5rly61/Pz6jzBvNWufUxP5W7veahcrfXfFPu
9tZzQep8yPxR7vaaJ8rdXvNBuePXfFBufcwH5Y5f80G59TQflJ/gjt+6rjAf
lDt+zQfl+jIflDsOzAfl/r02uXnOp8XneD9+zfu4a96PXPO+3Zr3k9a8D7F2
gnvduVbXFZ5Hr3k+uOZ505rf52t+D6x5PFtz3K/p13xQri/zQbn1r+cP1XWX
+5Pc+pgPyp/9ef3Pr/mzf97+2T9v/+xvt3/2t9vXdeaz/9z+2R9u/+wPt3d7
zQfl1tt8UG59zAfljl/zQbn1HLee4ye447eu290eueN33PE7rq9xfY07fscd
v+P6NR+U69d8UG49zAfl+jUflOvXfFB+guu37r/4d8v1az4o16/5oFy/5oNy
/ZoPyvVlPii3/vX8trpvpW+59TEflLu95oNyt9d8UO721nPp6n6c+7Hc7TUf
lLu95oNyx6/5oNz6mA/K9Wk+KLee9Tw/80G547fue/rvyR2/5oNyfZkPyh2/
5oNy/ZoPyvVrPijXr/mgvJ53Xc+Ftt7mg/ITXL91/9rPldfzBuu5fPW8OP2a
D8rruVK13tKaXF/j+hq3/uPWabzyAOs5bn3Grc94zW9dk7u95oNyt9d8UF45
h9trPih3e2s+7/69NXnNZ6x5f9ZnvOYx1XycmrdS8ykqhz/BK3e1/r6WVx5S
uUHdz677oHU/r+576Xf9mryuR+u6Tb+e39V5U51f1PdeHS9r3Nf4KG/y6vW7
Xr/r9btev+v1u16/6/VrPijXl/mg3PrX84MrN616mQ/KrY/5oHVfk7u95oNy
t7eei1x5cO0H5oNyt9d80P1pTe74NR+UWx/zQbnj13xQbj3NB+UnuOO3cvca
b+aDcr2ZD8r1ZT4od/yaD3pcWJPr13xQrl/zQbl+zQfl+jUflJ/g+q35E3Xc
NB+U69d8UO6/Yz4o16/5oMf3Nbm+zAfl1r+ev17zTur7xnxQbn3MB/3eWpO7
veaDcre3nitf82nqe9R8UO72mg/6fbwmd/yaD8qtj/mg3PFrPii3nuaD8hPc
8Vvz0up81HxQ7vg1H5Try3xQ7n5hPuh51ZrcdUw/LT7nt+Der11znbw111db
877Rmvcb1k7wfwT3umetzkdd52PN9SHW/N5e83i/5u/I1/z98Zp+zQfl+nX9
Xrl+zRPl+nX9Xrl+zR/lJ7h+zSvl+rUucv2ab8r16/q9cv2ah7rOzpr8Gb/0
8mf83v4Zv7d/xu/tn/F7+2f83v4Zv7c/wZ/xe/tn/N7+Gb+8lj/j9/bP+L39
M35v/4zf2z/j9/b6nY81uX4/74/P0de4vsZPcOvvfiO3nuPWZ9z6jFsf81O5
9TE/lVsf81D5CW59HD9y62P+KLc+5o/j5o9y6+P6vXI9m1fKrafr98o9Pphv
yk9w628eKvf44N8t15f5qdzjg+v3yvVr3jpu3irXr+v3yvVrPiu3Tq7fK9ev
ea78BNev+a9cv/59cv2aF8v16/q9cv2aL4+bL8v1a74s15d5sfwEt/56lVtP
81m59TGfHTeflVsf81m59TFvlZ/g1sf9W259zDfl1sd8c3x/35rc+nzeH5/j
8WHc48O49Ry3nuPuR+PW79DLrf+4x4dxjw9+rryev1fPkfP4MF7P6arnO9W6
RGvyeg6Jfs1/5fodr3Xua330Wudbv+MnuH7Nl+X69f+X1/qOtU6hfr+tA1fr
h9W88jW5fs2v5foyj5af4NbPusutp/mv3PrUvPt5XZNbn8/743Osz7j1GT/B
rY/7n9z6eB9abn3qvuP6NXnd56jr47rOq+ubOo+u8686j6jvzxO8xnftp+Wn
en2t9/iw3uPDev2u1+96/ZoXy/Xr+r1y/Zovy/Xr+r1y/ZpHy09w/Zpfy/Vb
/ly/V65f8265fl2/V65f83G5fs3H5foy75af4Na/9nvzaLn1MV+WWx/zZbn1
MV+WWx/zYvkJbn1q/Jvnyq2P+azc+pjPyq2P6/fKPT6Y58qtp+v3yj0+mP/K
T3Drb14s9/hQx2XX75U7DsyX5f47rt8r1695tFy/rt8r16/5tVy/rt8r1695
t/wE16/5uFy/9f3q+r1y/Zqny/Xr+r1y/Zq/y/Vr/i7Xr/m7XL/m73L9mr/L
T3D91rohNV+wzoPN3+X6NX+X69f8Xe6/b5ObN35afI55y5o5w5r3s9e8D7rm
/bw172OtneBeZ695vbjmddJanQd7Hrfm+cia38NrHu/XPE6s6df8Xa5f83e5
fs3f5fo1f5fr1/xdfoLr1/xdrt+6brFecv2av8v1a/4uf8bv+p9f82f80suf
8Xv7Z/ze/hm/t3/G7+2f8Xv7Z/ze/gR/xu/tn/F7+2f83r6uS5/xe/tn/N7+
Gb+3f8bv7Z/xe3v9mr/L9Wv+LteX+bv8BLf+dd3u/iS3Pubvcutj/i63Pubv
cutj/i4/wa1P3b9wXMmtj/m73PqYv8utj/m7XJ/m73Lraf4u9/hg/i4/wa2/
+bvc40PdV3J75B4fzN/l+jV/l+vX/F2uX/N3uX7N3+XWw/xdrl/zd/kJrl/z
d7l+6/6gf7dcv+bvcv2av8v1a/4u16/5u1xf5u/yE9z6131Vfcutj/m73PqY
v8utj/m73PqYv8tPcOtT95fd7+XWx/xdbn32963Jrc/n/fE5Hh/GPT6MW89x
6znu/jJunQ693PqPe3wY9/gwXnmAvsY9Pox7fBjX77h+x/Vr/i7Xr/m7XL/m
73L9mr/L9Wv+Lj/B9Wv+Ltdv5Td+rryeB6hf83d5Paer1m9bk+vX/F2uL/N3
+QlunSr30ofc+pi/y+v3K2ty62P+Lrc+5u/yE9z6VP7nfim3Pubv8rq/uCav
3xPUPPSaT13ziGu+as1zrPl6NU/tBK95NDUfpOZBVF6rr295Y+VsledUDqDf
9Wvyul9V9znqer2uU+t6qM6j63ywzoNO8DpO1/Gmxln5rF6/6/W7Xr/r9bte
v+bvcv2av8v1Zf4uP8Gtf81LqHqZv8utj/m7dV+TWx/zd7n1MX+Xn+DWp+Zn
1H5j/i63Pubv7n9rcutj/i73+GD+Lree5u9yjw/m7/IT3Pqbv8s9PtS8mRrP
5u9yPZu/y/Vr/u5xZE2uX/N3uX7N3+X6NX+X69f8XX6C69f8Xa7fmv9Ux2Xz
d7l+zd/l/jvm734frMn1a/4u16/5u1y/5u9y/Zq/y09w/Zq/y/Vb8xTr/Mn8
Xa5f83e5fs3f/V5fk5srflp8zm/Bfw/ufes173euuQ7i2h/BT3Cvp9dcx2vt
z+DPvMPb6vzJdWjWXL9kzeP6mseDNf2av8v1ZZ4ut/7m43LrWesZuZ/JrY95
tOeda/Jn/7z9s3/e/tnfbv/sb7d/9p/bP/sPr+XP/nB7t9d8Vm5dzWfl1mev
rY95rtzxO249x62n+a/c8Ttu/cetv3mx3PFrXeT6Ml+WO37Nl8fNl+X6NV+W
ux2/08v1ax4t1++4fs2v5fod16/r5sj163mGXL/j+jUfl+vXfNzr4TW5vsy7
5dbf/FpuPWs9OPcDufUxL/Y6f03u9pr/yt1e81y521vr3Ll/y91e89Nx81O5
49f8VG59XB9brjfzVrn1dH1s+Qnu+K3nitV6gua5csevf7dcX+a/csev+e+4
+a9cv+a/cv2O69e8WK7fcev0B738BNfvuH7H9WseLdevf59cv+bXcv2aX4+f
26/J9TWur3HrP+72jVvPcet5eC23PuNur3mu3O01n5W7veatcre31gl1/5O7
veab4+abcsev+abc+rg+tryeS1/Pb7eero8tP8Hr+cPWv9ZjNW+VO379XLm+
zGfl9fy3WkdwTV7PZdLvuH7H9WueK6/nb9RzHvRr/iuv9eNrnXL9mhfL9ev/
L9ev+bK81u+s36msyfVlXiy3/ua/cutpniu3Puaz8rovuCZ3e8fdXvNQudtr
vil3e90/5G5v3Qddvyav+0Z1f6Wu4+v6r6576vqgzkPr/OUEr++3Oo7W+Kv9
rvxUr6/1jt/1jt/1+jU/levX/FSu33H9mrfK9Tuu33H9ms/K9Tuu33H9mufK
9Vv+/or/bv4r16/5r/vHmlxf5rly628+K7eetZ577cfmp3K31zxU7vaab8rd
XvNKudtb69TX+DRPlLu95oNyx6/5oNz6mA/KHb/mg3LraT4oP8Edv+aDcutf
61zU/Jv6XjQflLtfmw/K/Tyb3Hzm0+JzvF++5n3WNe8vrnkfbs37PWveJ1g7
wb2OXPN6Zc3z3DXP79Zq/lB9L3qcXvP4tOY4XtOv+aBcX+aDcutvPii3nvU8
jDoPcP+TP/vz+p9f82f/vP2zf97+2d9u/+xvt3/2n9s/+8/t67zn2R9u7/aa
D8qtn/mg3PqYD8odv+aDcutpPig/wR2/5oNy628+KHf81nmn9ZI7fs0H5fpd
3dfk+v28Pz7Hv/d3erl+x/U7rt9x/Y6f4Pod1++4fsf1O67fun6wLnL9jut3
XL/mg3J9mQ/Krb/5oNx61vOE6jrK/UPu9poPyt1e80G522s+KHd76zlJdX3o
fi93e80H5Y5f80G59TEflOvHfFBuPc0H5Se449d8UG79zQfljt+6bnd75I5f
80G5fs0H5fo1H5Tr13xQrl/zQbn1MB+Un+D6NR+U69d8UK7fuv/i3y3Xr/mg
XL/n9mtyfY3ra9z6j7sd49Zz3HqO1/0p6zPu9poPyt1e80G522s+KHd76zlz
dX/N/VLu9poPyh2/5oNy62M+KHf8mg/Kraf5oPwEt07mg3Lrbz4od/zWfU//
Pbnj13xQrl/zQbl+zQfl+jUflOvXfFCuX/NB+Qlez5G23uaDcv2aD8rrvrZ+
zQfl9Ry/Wq9uTa4v80G59TcflFtP80F53d+3PrU+n/mg3O01H5S7veaDcrfX
fFBeuYXbW7+HMB+U1/zxmmdd83mtj/mgvOYJ1ny0msd0gtc8l5pPUTl85c+V
01aepK9v+UnlDPpdvyav+391n6zux+h3fV2/1nVeXU/UeegJXucp9X1Yx9E6
ftQ4K5/V63e9ftfr13xQri/zQbn1Nx+UW896HnDloLX95oPWZU3u9poPyt1e
80G521vPOa58t7yaD+p7Te74NR+UWx/zQbnj13xQbj3NB+UnuOPXfFBu/c0H
5fW768rjaxy6/5oPyv3/bHLXGf20+Bzvi6/9Htx17NZc/2zN+zpr3g9YO8Fd
X2fN65I1z2fXXIdjrX4/X/Mq6njq77zX/H3wmn7NB+X6df1euX7NE+X6df1e
uX7NH+UnuH7NK+X6recK1HoH5pty/Vp3uX7NQ11nYU3+jF96+TN+b/+M39s/
4/f2z/i9/TN+b/+M39uf4M/4vf0zfm//jN/bP+P39rWexTN+b/+MX17Ln/F7
e/2a/8r1a/4r15d5rvwEt/7mrfJaB8T6mJ/Krc/2yzW59fm8Pz7H+oxbn/ET
3PqMW5/xWg/F+oxbn3HrY/4otz6u3yvXm3ml3Hq6fq/c44P5pvwEt/7moXKP
D/Xcl1qPxvxU7vHBusj1a946bt4q16/r98r1az4rdztcv1euX/Nc+QmuX/Nf
uX7r+T21rpB5sVy/br9cv+bL4+bLcv2aL8v1ZV4sP8Gtfz33qNZjcj+QWx/z
2XHzWbn1MZ+VWx/zVvkJbn3MQ+W1XpX1Md+UW5/9fWty6/N5f3yOx4dxjw/j
1nPceo67X4xbj0Mvt/7jHh/GPT6M62u81hHz+DDu8cG/W67fcf2a58r16/q9
cv2a/8r16/q9cv2aF8tPcP2aL8v1W89Xq3XfzKPl+vXvk+vX/Hrc/FquX/Nr
ub7Mo+UnuNtXz6Wr9fL0JLc+5r/j5r9y62P+K7c+5rnyE9z6mLfKaz1B62N+
Krc+5qdy6+P6vXKPD+atcuvp+r1yjw/ms/ITvJ5f7X5nnivXV63naP4r9/jg
58rr+Xu1btyavJ4TpV/zZbl+x+s5JPX8inpug37HT/BaH73WBdfveK2jXOt1
6tf7+HL9flvfsX73sybXr/m4XF/m3fIT3PqbR8trnVPrY74sr9xjTW59zJfl
1se8WH6CWx/zXHmt92p9zOvk1mf9mrzuQ9f9y7pvV/er6j5HXR/XdWFdD53g
df5V5x31fVvH6RrftV+Xz+r1u16/5tFy/bp+r1y/5tdy/bp+r1y/5t3yE1y/
5uNy/bp+r7zWU9avOes3f67fK9ev+btcv+bvcv2av8v1a/4u16/5u/wE16/5
u1y/5u/yWhe7fh9e80JqfOrX/N1xuyY3D/y0+BzzkzVzgzXvN695n3LN+3Nr
3pdaO8G9Dl7z+m/N6541z5fXan3z+p1/ze+p46zjeE2/5u9y/Zq/y/Vr/i7X
r/m7XL/m7/ITXL/m73L9mr/La516/Zq/f/te1If8Gb/rf37Nn/FLL3/G7+2f
8Xv7Z/ze/hm/t3/G7+2f8Xv7E/wZv7d/xu/tn/F7+2f83r6eN/CM39s/4/f2
dd7zjN/b69f8Xa5f83e5vszf5Se49Td/l9dzGur8z/qYv3teuCa3Pubvcutj
/i4/wa2P+bu8nldR58HWx/zd8+M1ufUxf5frx/xdbj3N3+UeH8zf5Se49Td/
l3t8MH+X13NEPD6Yv3+7brFecv2av8v1a/4u16/5u9y/1/xdrl/zd/kJrl/z
d7l+zd/l9TwY/Zq/y+u6VL/m7+Pm73L9mr/L9WX+Lj/Brb/5u7yeo1PX59bH
/H3c/F1ufczf5dbH/F1+glsf83d5PU+o7lNYH/P38f19a3Lr83l/fI7Hh3GP
D+PWc9x6jut/3O0+9HLrP+7xYdzjw7i+xus5Tx4fxj0+jNf9Jv2O69f8Xa5f
83e5fs3f5fo1f5fr1/xdfoLr1/xdrl/zd3k9r0u/5u/yum+oX/P3cfN3uX7N
3+X6Mn+Xn+Buh/m7vJ5zVvdPrY/5+7j5u9z6mL/LrY/5u/wEtz7m7/J63lvd
R7Y+5u/j5u9y62P+Lvf4YP4ut57m73KPD+bv8hPc+pu/y62r+bu8nsPn8cH8
XV55gH7N38fN3+X6NX+X69f8Xa5f83e5fs3f5Sd4PYdcv+bv8npesX7N3+X6
rfzGz5XX+pprcv2av8v1Zf4uP8Gtv/m73O2uHMv6yuv3hWty62P+Lrc+5u/y
E9z6mL/LrU/lee5n8sp/1uT1e6/6nVD9PqZ+F1K/J6h56DX/uuYdn+A1z7Hm
99W8tpoPVfNoav5IzZuovFa/le+tX5NXnlD3oev+a913rPtVdZ+jru/ruvYE
r/PoOn+s86b6vq3jdB2falyWz+r1a/4u16/5u1y/5u9y/Zq/y/Vr/i4/wfVr
/i7Xr/m7XL/m7/Jap6DmT5RXe5vc3O/T4nPMSdbMB9a8r7zm/cg178Otef9p
7QT3enfN67w1r2/WPC9e83xqrdadr/Umah5MjU/9mr/L9Wv+Ltev+btcv+bv
cv2av8tPcP2av8v1a/4u1289J6DWB6l5S3U81ZPH2TX5M37p5c/4vf0zfm//
jN/bP+P39s/4vf0zfm9/gj/j9/bP+L39M35v/4zf2z/j9/b1HIha/6XmpdX3
pX7N3+X6NX+X63ev9WteL9fvuH7H9Wu+L9fvuH7H9et8ALl+x+t5HrWOT80v
rPMe/Tp/QK5f5w/I/Xd+p5fr1/kGcv2O69f5CXL9jut3XL/OZ5Drd7yey6Lf
mg9a56nW1/PXNbl+nf8g16/zH+T6df6DXL/Of5Cf4Pp1/oNcv85/kOu3nqNT
62fVvN663rCO653/INev8x/k+nX+g9y/y/kPcv06/0F+guvX+Q9y/Tr/Qa7f
eh5SrYNW87PrutF6rXf+g1y/zn+Q69f17eX6db6EXL+uby8/wfXr+vZy/Tof
Q67feq5VrWdX8+zr+t+6rHf+hly/zt+Q63dcv873kOt33O34g15+gut3XL/j
+nU+iVy/4/XcMv3W7yXqPo7bv/7cfk2u38/743P0O67fcf2O63dcv+Nu36GX
63dcv+P6HdfvuH7H6/lz+h2v38PUfTr9Ov9Erl/nn8j16/wTuX6dfyLXr/NP
5Ce4fp1/Itev80/k+q3nBdY6ofX7pbqv6vasd/6JXL/OP5Hr1+cXyPXrfBW5
fn1+gfwEtx4+v0CuX+fDyPVbz32s9V7rd2h1f9y/e73zZ+T6df6MXL/j+nW+
jVy/4/od16/zc+T6HbdOf9LL9et8Hnk911O/9XvCyjn8+9Y7/0euX+f/yPXr
/B+5fp3/I9ev83/kJ7h+nf8jt37O/5Hr1/k/cv3W70Irr/LvWO/8H7l+nf8j
16/zf+T6df6PXL/O/5Gf4Pp1/o9cv87/kevX+T9y/dbveyt39N9b7/wfuX6d
/yPXr8+nkOvX+UJy/fp8CvkJrl+fTyHXr/OR5Na7notc66HX77QrP/63PidZ
/u05tHL9juvX+U7yb88blOvX+VHyb8/LkuvX+VTyb897keu3fm9f8wD8/9c7
/0r+bV1tuX6dfyX/tm6r/Ns6l/IT/Nt6cnL9Ov9K/m29Irl+/q3rmsj16/wr
+bffbcu//c5V/u13gfJvv6OSn+Dffq8g/zY/Xf5tPqz82/xH+bf5VvZr8m/z
AuTfckj5t9xD/u0+q/wE/3Y/QP7t+kP+7Xynvifr+Frj8vX5/wBTUK5a
      "], 
      {Hue[0.6, 0.3, 0.85], EdgeForm[{Hue[0.6, 0.3, 0.75], Opacity[0.]}], 
       FaceForm[Opacity[0.5]], 
       TagBox[Polygon3DBox[CompressedData["
1:eJxMnXX0HIWyrTPd0z093dO4uzsEDxAgQIAAAQIEd3d310ACAYK7a/Dg7u7u
7u560Fff2zu3s9ar9auuqpdVe1f/cc7Xc++dccvd1to16dOnzxRT9enTjr+T
Rlze6tPn5Ij4f/8/yE+JYI6YzHMtP9M7NSLto5jcM4mf6Z3W0r9PTOGZ1M/0
To/I+iim9Ezbz/TOiMj7KKbyTOZnemdGdPoopvZM7md6Z0UUfRTTeKbjZ3pn
R3T7KKb1TOFneudElH0U03mm62d650ZUfRTTe6b0M73zInp9FDN4pvIzvfMj
6j6KGT3T8zO9CyLG66OYyTO1n+ldGDF+H8XMnhnPz/Quipigj2IWz4zvZ3oX
R0zYRzGrZybwM71LIibqo5jNMxP6md6lERP3UczumYn8TO+yiEn6KObwzMR+
pndHS/U5I+5s6R0c+y7yfFfEFS29V3N5jv4V7t0dcWVL79XcnmH2SvfuiRjd
0ns1j2eYHe3evRFXtfRezesZZq9y776Iq1t6r+bzDLNXu3d/xDUtvVd9PcPs
Ne49EHFtS+/V/J5h9lr3Hoy4rqX3agHPMHudew9FXN/Se7WgZ5i93r2HI25o
6b1ayDPM3uDeIxFjWnqvFvYMs2PcezTixpbeq0U8w+yN7j0WcVNL79WinmH2
Jvcej7i5pfeqn2eYvdm9JyJuaem9WswzzN7i3pMRt7b0Xi3uGWZvde+piNta
eq+W8Ayzt7n3dMTtLb1X/T3D7O3uPTPOO7akZ2b3u3iH+9SXinjW79ycfo+W
dp3nARHPR++5lupzu7a0Z3lvlnFtbr8ny7o2j9+L5VyjNzDixfi3Xmip3te1
5TzLe7C8a3199xVcm993XtE1eoMiXo5/66WW6gu5tqJnuetKri3kO67s2sK+
2yqu0Rsc8Wr8W6+0VO/n2iqe5U6rutbPd1nNtcV8h9Vdozck4vX4t15rqd7f
tdU9yw3WcK2/n7nNGy3V14x4s6UbLWXf13J97DO3eaul+tCIt1u62QDfYW3X
B/gO67i2jH1f17Vl/cxt3mmpvl7Euy3dbKDvsL7rA32HDVxb3r5v6NoKfuY2
77VU3yji/ZZuNsh32Nj1Qb7DJq6tZN83dW1lP3ObD1qqbxbxYUs3G+w7bO76
YN9hC9dWte9buraan7nNRy3Vt4r4uKWbDfFttnZ97DO3+aSl+jYRn7Z0ozV9
m21dH/vMbbjJUN9hO8+s5Tts79pQ32EH19b2bXZ0bR0/cxtusp7vsJNn1vUd
dnZtPd9hF9fW9212dW0DP3MbbrKR77CbZzb0HXZ3bSPfYQ/XNvZt9nRtEz9z
G26yme+wl2c29R32dm0z32Ef1zb3bfZ1bQs/cxtuspXvsJ9ntvRt9ndtKz9z
mz9aqh8Q8b+WbjT2Vjz/GfFZS3c40HP0P3Pvr4jPW7rLQZ5h9nP3/o74oqU7
HewZZr9w75+IL1u62yGeYfZL9/6N+Kqlux3qGWa/cu+/iK9buuNhnmH2a/f4
D5vftHTXwz3D7DfutSK+benOR3iGWWr0kojvWrrzkZ5hlhq9NOL7lu5+lGeY
pUavHfFDS+/BMM8wS41eFvFjS+/F0Z5hlhq9POKnlt6LYzzDLDV6nYifW3pP
hnuGWWr0iohfWnpvRniGWWr0uhG/tvQeHesZZqnRKyN+a+k9Os4zzFKjV0X8
3tJ7NdIzzFKj10uad+x4z+znd5E6feonRNSJ3rkD/B6d6DrPoyLGj/54ieoH
uXaiZ3lvTnLtIL8nJ7t2sN+LU1yjd2rEhPFvTZCofphrp3iW9+A01w7z3U93
7XDf+QzX6J0ZMXH8WxMlqh/l2hme5a5nuXaU73i2a8N8t3Nco3duxKTxb02S
qD7ctXM8y53Oc22473K+ayN8hwtco3dhxOTxb02WqD7StQs8yw0ucm2kn7nN
FInqF0dMmehGJ9j3S1wf+8xtpkpUvzRi6kQ3G+U7XOb6KN/hctdOsu9XuHay
n7nNNInqV0ZMm+hmp/oOo10/1Xe4yrXT7PvVrp3uZ24zXaL6NRHTJ7rZmb7D
ta6f6Ttc59pZ9v161872M7eZIVH9hogZE93sXN9hjOvn+g43unaefb/JtfP9
zG1mSlS/OWLmRDe70Le5xfWxz9xmlkT1WyNmTXSji32b21wf+8xtuMmlvsPt
nrnEd7jDtUt9hztdu8y3ucu1y/3MbbjJlb7D3Z65wne4x7UrfYd7XRvt29zn
2lV+5jbc5Brf4X7PXO07PODaNb7Dg65d69s85Np1fuY23OQG3+Fhz1zvOzzi
2g2+w6OujfFtHnPtRj9zG25ys+/wuGdu8m2ecO1mP3ObxRLVn4xYPNGNxt6K
5yUiZkt0h6c8R3829/pHzJ7oLk97htnZ3VsyYo5Ed3rGM8zO4d5SEXMmutuz
nmF2TveWjpgr0d2e8wyzc7k3IGLuRHd83jPMzu3eMhHzJLrrC55hdh73lo2Y
N9GdX/QMs/O6t1zEfInu/JJnmJ3PvYERfRPd/WXPMNvXveUj5k/0HrziGWbn
d2+FiAUSvReveobZBdxbMWLBRO/Fa55hdkH3BkUslOg9ed0zzC7k3koRCyd6
b97wDLMLu7dyxCKJ3qM3PcPsIu6tErFoovfoLc8wu6h7gyP6JXqv3vYMs/3c
W3Wcd+wdzzzud3Ex96m/G7Ga37kn/R695zrP70cMid7qiepPu/aeZ3lvPnDt
ab8nH7r2jN+Lj1yj93HEmvFvrZGo/rxrH3mW9+AT15733T917QXf+TPX6H0e
MTT+rbUS1V927TPPctcvXHvZd/zStVd8t69co/d1xDrxb62dqP66a195ljt9
49rrvsu3rr3hO3znGr3vI9aLf2vdRPW3XfvOs9zgB9fe9jO3WT9R/ceIDRLd
6F37/pPrY5+5zYaJ6j9HbJToZu/7Dr+4/r7v8KtrH9j331z70M/cZuNE9d8j
Nkl0s499hz9c/9h3+J9rn9j3P1371M/cZtNE9b8iNkt0s899h79d/9x3+Me1
L+z7v6596Wdus3mi+n8RWyS62de+A6D5P9+IO7Raqn1j35OWat/6mdtsmaie
8t+TEt3se9+m7frYZ26zdaJ6xn8vSnSjH32b3PWxz9yGm/zsO3RamvnJdyha
qv3sO3Rbqv3i25Qt1X71M7fhJr/7DlVLM7/5Dr2War/7DnVLtT98m/Faqv3P
z9yGm/zlO4zf0syfvsMELdX+8h0mbKn2t28zUUu1f/zMbbjJf77PxC3N/Ovb
TNJS7T/fZlLX6HGDyVxr+ZnbcJPUd5jcM/S4wRSupX7mNvsnqk/Jf29IdKOx
t+L5wIhtE91hKs/R39a9gyK2S3SXqT3D7HbuHRyxfaI7TeMZZrd375CIHRLd
bVrPMLuDe4dG7JjobtN5htkd3TssYqdEd5zeM8zu5N7hETsnuusMnmF2Z/eO
iNgl0Z1n9Ayzu7h3ZAQfcrjzTJ5hdlf3jorYLdHdZ/YMs7u5Nyxi90TvwSye
YXZ3946O2CPRezGrZ5jdw71jIvZM9F7M5hlm93RveMReid6T2T3D7F7ujYjY
O9F7M4dnmN3bvWMj9kn0Hs3pGWb3ce+4iH0TvUdzeYbZfd0bGbFfovdqbs8w
u597x4/zjs3jmcn9Lu7vPvV5I07wOzel36P5XOe5b8So6J2YqD61a/N5lvdm
ftem9nuygGvT+L1Y0DV6C0WcHP/WSYnq07u2oGd5DxZ2bXrffRHXZvCdF3WN
Xr+IU+PfOiVRfWbXFvUsd13MtZl9x8Vdm8V3W8I1ev0jTo9/67RE9dldW8Kz
3GlJ12b3XZZybQ7fYWnX6A2IODP+rTMS1ed2bWnPcoNlXJvbz9zmrET1ZSPO
TnSjee37cq6PfeY25ySqD4w4N9HN+voOy7ve13dYwbX57fuKri3gZ25zXqL6
oIjzE91sId9hJdcX8h1Wdm1h+76Ka4v4mdtckKg+OOLCRDfr5zus6no/32E1
1xaz76u7trifuc1FiepDIi5OdLP+vsMarvf3HdZ0bUn7vpZrS/mZ21ySqD40
4tJENxvg26zt+thnbnNZovo6EZcnutGyvs26ro995jbcZKDvsJ5nlvMd1ndt
oO+wgWvL+zYburaCn7kNNxnkO2zkmRV9h41dG+Q7bOLaSr7Npq6t7Gduw00G
+w6beWYV32Fz1wb7Dlu4tqpvs6Vrq/mZ23CTIb7DVp5Z3XfY2rUhvsM2rq3h
22zr2pp+5jbcZKjvsJ1n1vJttndtqJ+5zR2J6jtE3JnoRmNvxfNdEVckusOO
nqN/hXt3R1yZ6C47eYbZK927J2J0ojvt7BlmR7t3b8RVie62i2eYvcq9+yKu
TnS3XT3D7NXu3R9xTaI77uYZZq9x74GIaxPddXfPMHutew9GXJfoznt4htnr
3Hso4vpEd97TM8xe797DETckuvtenmH2BvceiRiT6D3Y2zPMjnHv0YgbE70X
+3iG2RvdeyzipkTvxb6eYfYm9x6PuDnRe7KfZ5i92b0nIm5J9N7s7xlmb3Hv
yYhbE71HB3iG2VvdeyritkTv0YGeYfY2956OuD3Re3WQZ5i93b1nxnnHDvbM
dn4X73Cf+iERz/qd4x07NOK5RLVD/F4d6jn6h0U8n2jmUL9Xh3mG2cMjXkg0
c5jfq8M9w+wRES8mmjnc79URnmH2yIiXEs0c4ffqSM8we1TEy4lmjvR7dZRn
mB0W8UqimaP8Xg3zDLNHR7yaaGaY36ujPcPsMRGvJZo52u/VMZ5hdnjE64lm
jvF7NdwzzI6IeCPRzHC/VyM8w+yxEW8mmhnh9+pYzzB7XMRbiWaO9Xt1nGeY
HRnxdqKZ4/xejfQMs8dHvJNoZqTfq+M9w+wJEe8mmjne79UJnmH2xIj3Es2c
4PfqRM8wOyri/UQzJ/q9GuUZZk+K+CDRzCi/eyd55iA/8+4xQ53fm/wa+YeJ
fvdEkH+U6HdO/N7kt0QzzFKj93Gi3znxe5PfE80wS43eJ4l+58TvTf5INMMs
NXqfJvqdE783+V+iGWap0fss0e+c+L3Jn4lmmKVG7/NEv3Pi9yZ/JZphlhq9
LxL9zonfm/ydaIZZavS+TPQ7J35v8k+iGWap0fsq0e+c+L3Jv4lmmKVG7+tE
v3Pi9yb/JZphlhq9bxL9zonfm/DDL2aYpUbv20S/c+L3Ji3/kIxZavS+S/Q7
J35vkqSaYZYave8T/c6J35ukqWaYpUbvh0S/c+L3Ju1UM8xSo/djot858XuT
LNUMs9To/ZTod0783iRPNcMsNXo/J/qdE7836aSaYZYavV+S5ndORaoZZqnR
o0aP3zVMG3k31W9QCPIy1e+cCPIq1e+a+F3D9JFPl+p3D9To9VL9rokgr1P9
jokgHy/V75YI8vFT/U6J3zXMGPkMqX73QI3eBKl+p0SQT5jqd0kE+USpfodE
kE+c6ndH/K5h5shnSvW7B2r0Jkn1uyOCfNJUvzMiyCdL9bsignzyVL8j4ncN
s0Y+S6rfPVCjN0Wq3xER5FOm+t0QQT5Vqt8JEeRTp/pdEL9rmD3y2VL97oEa
vWlS/e6EIJ8j1e8c+F3DnKluxK3wHO/nSpvfNcyd6ibcBg/xcp60+Z3CvKk8
xms8wZv50uZ3B31TeYZ3aETr/GnzO4IFUnmAF+zM7gumze8CFkqlCW3szO4L
p/odAN/7F0mlAS183180VY0eGtCCBrTwfb9fqhlm+Z6/WKoaPb7fL56qRo/v
9UukqtFDM9rRjHa+1/dPNcMs3+eXTFWjx/f4pVLV6PH9felUNXp4hFd4hFd8
fx+QaoZZvrcvk6pGj+/ry6aq0eN7+nKpavTwFG/xFG/5nj4w1QyzfD9fPlWN
Ht/LV0hVo8f38RVT1ehxA27BDbgF38cHpZphlm/hK6Wq0eMm3IYaPb67bhL5
yqm+kRPkq6T6HQZBPjjV7y747rpZ5Jum+i5Ljd6qqX53QZCvlup3FgT56ql+
V0GQD0n1Owq+u24R+eapvstSo7dG2uf/fgBMvmaq300Q5Gul+p0EQT401e8i
+O66VeRbpvouS43e2ql+F0GQr5PqdxAE+bqpfvdAkK+X6ncOfHfdJvKtU32X
pUZv/VS/cyDIN0j1uwaCfMNUv2MgyDdK9bsFvrtuF/m2qb7LUqO3carv4gT5
9qm+w/LddYdUN+JWeI73O6bNd9edUt2E2+AhXu6cNt9Rd0nlMV7jCd7smjbf
RXdL5RneoRGtu6fNd849UnmAF+zM7numzXfLvVJpQhs7s/veqb5T8j1yn1Qa
0ML3x31T1eihAS1oQAvfH/dLNcMs3xv3T1Wjx/fFA1LV6PE98cBUNXpoRjua
0c73xINSzTDL98ODU9Xo8b3wkFQ1enwfPDRVjR4e4RUe4RXfBw9LNcMs3wMP
T1Wjx/e/I1LV6PG978hUNXp4ird4ird87zsq1QyzfN8blqpGj+95R6eq0eP7
3TGpavS4AbfgBtyC73fDU80wy7e6Ealq9LgJt6FGj+9C50d+bKpveAT5cam+
ExPkI1N9F+a70IWRX5DquxE1esen+i5MkJ+Q6jswQX5iqu++BPmoVN95+S50
ceQXpfpuRI3eSam+8xLkJ6f6rkuQn5LqOy5Bfmqq77Z8F7o08ktSfTeiRu+0
VN9tCfLTU32nJcjPSPVdliA/M9V3WL4LXR75Zam+G1Gjd1aq77AE+dmpvrsS
5Oek+s5KkJ+b6rsq34WujPyKVN+NqNE7L9V3O4J8dKrvRHwXuirVjbgVnuP9
1WnzXeiaVDfhNniIl9emzXee61J5jNd4gjfXp813mxtSeYZ3aETrmLT5DnNj
Kg/wgp3Z/aa0+a5ycypNaGNndr8l1XcUvpfcmkoDWvg+cluqGj00oAUNaOH7
yO2pZpjle8gdqWr0+P5xZ6oaPb533JWqRg/NaEcz2vnecXeqGWb5vnFPqho9
vmfcm6pGj+8X96Wq0cMjvMIjvOL7xf2pZpjle8UDqWr0+D7xYKoaPb5HPJSq
Rg9P8RZP8ZbvEQ+nmmGW7w+PpKrR43vDo6lq9Pi+8FiqGj1uwC24Abfg+8Lj
qWaY5VvCE6lq9LgJt6FGD279buRPpvrGQJA/leo7FkH+dKrvVnDr9yN/LxXX
pkbvmVTfrQjyZ1N9pyLIn0v1XYogfz7Vdyi49YeRf5CKa1Oj90Kq71AE+Yup
vjsR5C+l+s5EkL+c6rsS3PrjyD9KxbWp0Xsl1XclgvzVVN+RCPLXUn03Ishf
T/WdCG79aeSfpOLa1Oi9keo7EUH+ZqrvQgT5W6m+AxHkb6f67gO3/jzyz1Jx
bWr03kn1XYEg/yIVx4Zbf5nqRtwKz/H+q7Th1l+nugm3wUO8/CZtOPS3qTzG
azzBm+/Shit/n8ozvEMjWn9IG078YyoP8IKd2f2ntOG+P6fShDZ2ZvdfUnFe
eO6vqTSgBX77W6oaPTSgBQ1ogd/+nmqGWXjtH6lq9OCz/0tVoweP/TNVjR6a
0Y5mtMNj/0o1wyz89e9UNXrw1n9S1ejBV/9NVaOHR3iFR3gFX/0v1Qyz8FT+
B8eo0YOftvw/eEYPXpq0VaOHp3iLp3gLL03bmmEWPtpuq0YPHpq1VaMH/8zb
qtHjBtyCG3AL+GenrRlmYZ1FWzV63ITbUKMH55w28m5bDJQgL9vi7HDO6dqa
YZYavaotzg7nnL6tGWap0eu1xdnhnDO0NcMsNXp1W5wdzjljWzPMUqM3Xluc
Hc45U1szzFKjN35bnB3OOXNbM8xSozdBW5wdzjlLWzPMUqM3YVucHc45a1sz
zFKjN1FbnB3OOVtbM8xSozdxW5wdzjl7WzPMUqM3SVucHc45R1szzFKjN2lb
nB3OOWdbM8xSozdZW5wdzjlXWzPMUqM3eVucHc45d1szzFKjN0VbnB3OOU9b
M8xSozdlW5wdzjlvWzPMUqM3VVucHc45X1szzFKjN3VbnB3O2betGWap0Zum
3XDO+duaYZYaPWr04JorRL5AW9yTIF+wLc5JkC/UFtckyBdui2MS5Iu0xS3J
V4wYNE6Nv4u2xS0J8n5tcUqCfLG2uCRBvnhbHJJ8pYiVx6nxd4m2OCRB3r8t
7kiQL9kWZyTIl2qLK5KvEjF4nBp/l26LKxLkA9riiAT5Mm1xQ4J82bY4Ifmq
EauNU+Pvcm1xQoJ8YFtckCBfvi0OSJCv3hYThP0Naesm3AauXLrOMxwZ3keN
HtwY3keNHt6vEbGmbwA3hv8xwyycGP5HjR5cGN5HjR4cGN5HjR7erxUx1DeA
A8P/mGEW7gv/o0YPzgvvo0YPrgvvo0YP79eOWMc3gOtO6hlm4biTuUYPbju5
a/TgtFO4Rg/v141YzzeA007pGWbhslO5Rg8OO7Vr9PB8Gtc6fuYW67dVh/tt
0NZNuAGcb6PIN2yLA+L1xhGb2HM432bxd9O2OCDebR6xhT2E820Vf7dsiwPi
xdYR29gTON928Xfbtjgg2raP2MEa4Xw7xd8d2+KA7MiuO7fF/eB8u7S1M7uz
I7vu2m44325taUALu+8esYc1sDO779luON5ebWlCG1r2jtjHmtCAln3bDafb
ry2NaEXb/hEHWCOa0HZgu+FwB7WlGe1oPTjiEGtGI1oPbTec7bC2PMALNKP9
8La4GlzziLY8wAs0ox3NaEfrkRFHWTMa0YpGtKJtWMTR1ogmtKEJbWg5JmK4
NaEBLWhAC7uPiDjWGtiZ3dmZ3dmRXY9riwHC+ka2tTO7w11XcZ1nuOtg1+jB
XVd1jR5ajo84wZrgsKt5hlm46+qu0YO7DnGNHtx1Ddfoof3EiFH2AA67pmeY
hbuu5Ro9uOtQ1+jBXdd2jR5enRRxsj2Dw67jGWbhruu6Rg/uup5r9OCu67tG
D29PiTjVHsNhN/AMs3DXDV2jB3fdyDV6eL6xa4P8zC1Oa6sO5zu9rZtwA7je
mZGf0Rb3w+uzIs6253C9c+PvOW1xP7w7L+J8ewjXuzD+XtAW98OLiyIutidw
vUvj7yVtcT+0XRZxuTXC9a6Mv1e0xf3YkV1Ht8X54HpXtbUzu7Mju17dbrje
NW1pQAu7XxtxnTWwM7tf32643Q1taUIbWsZE3GhNaEDLTe2Gy93clka0ou2W
iFutEU1ou63dcLfb29KMdrTeEXGnNaMRrXe1G652d1se4AWa0X5PWxwNjnlv
Wx7gBZrRjma0o/W+iPutGY1oRSNa0fZAxIPWiCa0oQltaHko4mFrQgNa0IAW
dn8k4lFrYGd2Z2d2Z0d2fawt5gfbe7ytndkdznqc6zzDWUe6Rg/Oerxr9NDy
RMST1gR3PcEzzMJZT3SNHpx1lGv04KwnuUYP7U9FPG0P4K4ne4ZZOOsprtGD
s57qGj0462mu0cOrZyKetWdw19M9wyyc9QzX6MFZz3SNHpz1LNfo4e1zEc/b
Y7jr2Z5hFs56jmv04KznukYPz89zbbifucULbdXhei+2dRNuAMd7OfKX2uJ8
eP1KxKv2HI73evx9rS3Oh3dvRLxpD+F4b8fft9rifHjxTsS79gSO9378fa8t
zoe2DyI+tEY43sfx96O2OB87susnbXE9ON6nbe3M7uzIrp+1G473eVsa0MLu
X0R8aQ3szO5ftRtO93VbmtCGlm8ivrUmNKDlu3bD4b5vSyNa0fZDxI/WiCa0
/dRuONvPbWlGO1p/ifjVmtGI1t/aDUf7vS0P8ALNaP+jLW4Gt/xfWx7gBZrR
jma0o/XPiL+sGY1oRSNa0fZ3xD/WiCa0oQltaPk34j9rQgNa0IAWdud/EU0r
kwZ2Znd2Znd2ZNckE+OD5aWZdmZ3uOpTrvMMV33aNXpw1Wdco4eWdvz/zzJp
grM+6xlm4arPuUYPrvq8a/Tgqi+4Rg/tefxbnUwewFlf9AyzcNWXXKMHV33Z
NXpw1Vdco4dXRfxb3UyewVlf9QyzcNXXXKMHV33dNXpw1Tdco4e3ZURlj+Gs
b3qGWbjqW67Rg6u+7Ro9PH/Htcf9zC16mepwvDrTTbgB3G78yMfLxPXweoKI
Ce053G7i+DtRJq6Hd5NETGoP4XaTx9/JMnE9vJgiYkp7ArebOv5OlYnroW2a
iGmtEW43ffydLhPXY0d2nSETx4PbzZhpZ3ZnR3adKWu43cyZNKCF3WeJmNUa
2JndZ8saLjd7Jk1oQ8scEXNaExrQMlfWcLe5M2lEK9rmiZjXGtGEtvmyhqv1
zaQZ7WidP2IBa0YjWhfMGm62UCYP8ALNaF84EyeDUy6SyQO8QDPa0Yx2tC4a
0c+a0YhWNKIVbYtFLG6NaEIbmtCGliUi+lsTGtCCBrSw+5IRS1kDO7M7O7M7
O7Lr0pmYHuxuQKad2R2OWrrOMxwVPkeNHhwVHkeNHlqWiVjWmuCq8DhmmIWj
wt+o0YOjwtuo0YOjwteo0UP7chED7QFcFb7GDLNwVHgaNXpwVPgZNXpwVHgZ
NXp4tXzECvYMrjqpZ5iFo07mGj046uSu0YOjTuEaPbxdMWKQPYarTukZZuGo
U7lGD446tWv08Hwa1zp+5hYrZarDTVfOdBNuACddJVONHlx0cKYaPTjoqplq
9LgFz6v5JnDQ1VxjFu65uvv04JxDMtXowTXXyFSjxy14XtM3gWuu6RqzcMy1
3KcHtxyaqUYPTrl2pho9bsHzOr4JnHId15iFS67rPj045HqZavTgjutnqtHj
Fjxv4JvAHTdwjVk444bu04MrbpSpRg+uuHGmWl/fhltQowfX2iPyTTJxRoJ8
00yckSDfLBNnJMg3z8QWCfI9s4Yz7hX5Fpk4I0G+ZSbOSJBvlYkzEuRbZ2KL
BPneWcMZ94l8m0yckSDfNhNnJMi3y8QZCfLtM7FFgnzfrOGM+0W+QybOSJDv
mIkzEuQ7ZeKMBPnOmdgiQb5/1nDGAyLfJRNnJMh3zcQZCfLdMnFGgnz3TJyR
ID8wE+eCax2U6SbcBk/x9uCs4YiHZPIYr/EIrw7NGi54WCbP8A7NaD88azjf
EZk8wAs0oOXIrOF2R2XShDZ2YrdhmbgWHOvoTDuyK9xqeOTHZOJa7MiuI7KG
wx2baWd2h1uNjPy4TFyLndn9+Kzhcidk0oAWuNWoyE/MxLXQgJaTsobTnZxJ
E9rgVqdGfkomroUmtJ2WNdzu9Ewa0Qq3OjPyMzJxLTSi9axMHAtudXYmzWhH
I1rPyRqOdW4mD/ACzWg/L2s43vmZPMALNKP9gqzhXBdm8gRv8AAvLsoarndx
Jk/wBg/w4pKs4WCXZvIIr/AEby7LGs53eSaP8ApP8OaKrOFkV2byDO/wCK9G
Zw33uyqTZ3iHR3h1ddZwtGsyeYiXeIZ312bianC06zJ5iJd4hnd4hnd4hFfX
Zw0HvCGTZ3iHR3iFR3iFJ3gzJmu44I2ZPMIrPMEbPMEbPMCLm7KGE96cyRO8
wQO8wAO8QDPab8kabnhrJg/wAs1oRzPa0YjW2zJxKzjV7Zk0ox1NaLsja7jg
nZk0ohUNaLkrazjf3Zk0oY2d2f2erOF292bSgBZ2ZNf7sobD3Z9pZ3ZnJ3Z7
IBOngks9mGlHdoVDPRz5Q5k4FTuy6yNZw9UezbQzu8OhHo/8sUycip3Z/Yms
4WxPZtKAFjjU05E/lYlToQEtz2QNd3s2kya0waGej/y5TJwKTWh7IWs43IuZ
NKIVDvVy5C9l4lRoROsrmbgUHOrVTJrRjka0vpY1XOr1TB7gBZrR/kbWcLk3
M3mAF2hG+1tZw63ezuQJ3uABXryTNZzu3Uye4A0e4MV7WcO13s/kEV7hCd58
kDXc7sNMHuEVnuDNR1nDvT7O5Bne4RFefZI1HO/TTJ7hHR7h1WdZw8U+z+Qh
XuIZ3n2RiZPBxb7M5CFe4hne4Rne4RFefZU1XO/rTJ7hHR7hFR7hFZ7gzTdZ
w/m+zeQRXuEJ3uAJ3uABXnyXNdzv+0ye4A0e4AUe4AWa0f5D1nDAHzN5gBdo
Rjua0Y5GtP6UiUPBnX7OpBntaELbL1nD+X7NpBGtaEDLb1nD7X7PpAlt7Mzu
f2QNh/tfJg1oYUd2/TNruNpfmXZmd3Zit78zcSc40z+ZdmRXuNJ/kf+biTux
I7vyv3x3LCdr5dqZ3eFKaTwnubgTO7N7O2+4WZZLA1rgSp14znNxJzSgpcgb
jtbNpQltcKUqnstc3AlNaOvlDVerc2lEK1xp/HgeLxd3QiNaJ8jFmeBKE+bS
jHY0onWivOFME+fyAC/QjPZJ8oazTZrLA7xAM9onyxsONXkuT/AGD/Biirzh
blPm8gRv8AAvpsobTjV1Lo/wCk/wZpq84XDT5vIIr/AEb6bLG441fS7P8A6P
8GqGvOFyM+byDO/wCK9myhvONXMuD/ESz/BullzcC841ay4P8RLP8A7P8A6P
8Gq2vOF0s+fyDO/wCK/wCK/wBG/myBtuN2cuj/AKT/AGT/AGD/BirrzheHPn
8gRv8AAv8AAv0Iz2efKG682bywO8QDPa0Yx2NKJ1vlxcCY7UN5dmtKMJbfPn
DbdbIJdGtKIBLQvmDYdbKJcmtLEzuy+cN1xtkVwa0MKO7Lpo3nCyfrl2Znd2
YrfFcnEkuNHiuXZkVzhR/8iXyMWR2JFdl8wb7rVUrp3ZHU40IPKlc3Ekdmb3
ZfKGgy2bSwNa4EQDI18uF0dCA1qWzxsutkIuTWiDEw2KfMVcHAlNaFspbzjZ
yrk0ohVONDjyVXJxJDSiddVc3AhOtFouzWhHI1pXzxtuNCSXB3iBZrSvkTfc
bM1cHuAFmtG+Vt5wpaG5PMEbPMCLtfOGo62TyxO8wQO8WDdvuNN6uTzCKzzB
m/XzhqttkMsjvMITvNkwb7jURrk8wzs8wquN84azbZLLM7zDI7zaNG+41Wa5
PMRLPMO7zXNxLLjVFrk8xEs8wzs8wzs8wqst84a7bZXLM7zDI7zCI7zCE7zZ
Om843Da5PMIrPMEbPMEbPMCLbfOGy22XyxO8wQO8wAO8QDPat88bTrdDLg/w
As1oRzPa0YjWHXNxIrjQTrk0ox1NaNs5bzjcLrk0ohUNaNk1b7jabrk0oY2d
2X33vOFke+TSgBZ2ZNc984Z77ZVrZ3ZnJ3bbOxc3gVPtk2tHdoVT7ZurRg9O
tV+uGj241P65avTQgBZqYznWAbk0oQ1OdWCuGj041UG5avTgUgfnqtFDM9qp
jeVYh+TyAC/gVIfmqtGDUx2Wq0YPLnV4rho9PMIramM51hG5PMM7ONWRuWr0
4FRH5arRg0sNy1Wjh6d4S20sxzo6l8d4Dac6JleNHpxqeK4aPTjViFw1etyA
W1CjByc5P/Jjc3Ergvy4XNyKIB+Zi1sR5Mfn4lYE+Qm5OBUBW9nTPZ7pnZiL
WxHko3JxK4L8pFzciiA/ORenImAxe7vHM71TcnErgvzUXNyKID8tF7ciyE/P
xakI2M2+7vFM74xc3IogPzMXtyLIz8rFrQjys3NxKgLWs797PNM7Jxe3IsjP
zcWtCPLzcnErgnxMLk4EF7ox103G3obnmyIucJDfHHGhg/yWiIsc5LdGXJzr
FrCjg32Ti927LeISB/ntEZc6yO+IuMxBfmfE5bluAVs61De53L27Iq5wkN8d
caWD/J6I0Q7yeyOuynUL2NPhvslV7t0XcbWD/P6IaxzkD0Rc6yB/MOK6XLeA
TR3pm1zn3kMR1zvIH464wUH+yDg3GONnOBbc6lHfgNvAqR6P/LFcHAtvYVMj
7DEc6snoPZGLU+EV7Ol4ewZnejp6T+XiUGiHLZ1kD+BIz0bvmVycCS2wo9Os
CU70fPSey8WR2JFdX8jFjeBEL+bamd3ZkV1fyhtu9HIuDcO9O6zoPGtgZ3Z/
JW+40au5NI20FljRRdaEBrS8ljfc6PVcGkdZG6zoMmtEE9reyBtu9GYuzada
K6xotDWjEa1v5Q03ejuXB3iBZrS/k4sjwY3ezeUBXqAZ7Wg+11phR9dbMxrR
isYLrQ12NMYa0YQ2NF1qLbCjm6wJDWhBw5XeHXZ0izWwM7uzM7uzI7v+kIsr
wZF+zLXz2N15/iniPQf5zxHvO8h/ifjAQf5rxIe5tMGa7rDGD937LeIjB/nv
ER87yP+I+MRB/r+IT3N5AYu6y5586t6fEZ85yP+K+NxB/nfEFw7yfyK+zOUd
rOoee/ile/9GfOUg/y/iawc5/8duvskV5K2Ib3N5Dcu6z55To5dEfJcryNOI
73MFebvT3IC/PMO94FxZRzfgNnCtTjznHXEvvIVlPWKP4Vbd6BUdcS28glU9
Yc/gUlX0yo64FdphUc/YA7hTHb1eR1wKLbCmF6wJrjR+9MbriDuxI7tO0BFn
gitN2NHO7M6O7DpRp+FME3ek4WHvDlt6wxrYmd0n6TScadKOND1uLbCld6wJ
DWiZrNNwpsk70vi0tcGWPrBGNKFtik7DmabsSPPz1gpb+sSa0YjWqToNZ5q6
Iw/wAs1on6Yj7gRnmrYjD/ACzWhH8+vWCmv6yprRiFY0vm1tsKZvrBFNaEPT
+9YCa/rOmtCAFjR87N1hTT9YAzuzOzuzOzuy6/wdcSi40wId7Tx2d54XjJjO
Qb5QxPQO8oUjZnCQLxIxY0faYFO/WOOM7i0aMZODvF/EzA7yxSJmcZAvHjFr
R17Arn6zJ7O6t0TEbA7y/hGzO8iXjJjDQb5UxJwdeQfb+sMezune0hFzOcgH
RMztIF8mYh4H+bIR83bkNezrT3s+r3vLRcznIB8Y0ddBvvw4N5jfz3AyuNgK
vgG3gYMNinzFjjgZ3sK+YGJ4DOdaOXordcTB8Aq2BfPCMzjW4Oit0hHnQjvs
CqaFB3Cq1aK3akccCy2wKZgVmuBQQ6K3ekecih3ZdY2OuBQcas2OdmZ3dmTX
tToNlxrakYb/vDssahJrYGd2X7vTcKl1OtKENrTAoqawJjSgZd1Ow6XW60gj
WtEGi5rGGtGEtvU7DZfaoCPNaEcrLGoGa0YjWjfsNFxqo448wAs0o33jjjgV
XGqTjjzACzSjHc0TWytsajZrRiNa0Ti5tcGm5rBGNKENTVNbC2xqLmtCA1rQ
ML13h03NYw3szO7szO7syK67d8St4FR7dLTz2N153jNiUwf5XhGbOcj3jtjc
Qb5PxBYdaYNlzW+NW7i3b8SWDvL9IrZykO8fsbWD/ICIbTryAta1oD3Zxr0D
I7Z1kB8UsZ2D/OCI7R3kh0Ts0JF3sLCF7eEO7h0asaOD/LCInRzkh0fs7CA/
ImKXjryGlS1qz3dx78iIXR3kR0Xs5iAfNs4NdvczXA2OdrRvwG3gZsMjP6Yj
roa3sLIl7TFc7NjojeiIm+EVLGwZewb3Ghm94zriYmiHdS1vD+BaJ0Tv+I64
F1pgWStZE9xqVPRO7IhrsSO7ntQRx4JbndzRzuzOjux6SqfhWKd2pKG/d4dd
rWEN7Mzup3UajnV6R5oGWAvsam1rQgNazug0HOvMjjQOtDbY1frWiCa0ndVp
ONbZHWkeZK2wq42tGY1oPafTcKxzO/IAL9CM9vM64lpwrPM78gAv0Ix2NA+x
VljWltaMRrSicai1wbK2tkY0oQ1N61kLLGtba0IDWtCwkXeHZW1vDezM7uzM
7uzIrmM64lxwrRs72nns7jzfFHGBg/zmiAsd5LdEXOQgvzXi4o60wbZ2tsaL
3bst4hIH+e0RlzrI74i4zEF+Z8TlHXkB29rVnlzu3l0RVzjI74640kF+T8Ro
B/m9EVd15B1sa3d7eJV790Vc7SC/P+IaB/kDEdc6yB+MuK4jr2Fbe9rz69x7
KOJ6B/nDETc4yB8Z5wZj/Azngis+6htwG7jiYx3V6MEVH++oRg+u+ERHNXpw
xCc7qu3vWxzgOW4CV3yqoxnqcMWnO6rRgys+01GNHhzx2Y5qB/sWh3iOm8AV
n+tohjpc8fmOavTgii90VKMHR3yxo9rhvsURnuMmcMWXOpqhDld8uaMaPbji
Kx3V6MERX+2oNsy3ONpz3ASu+FpHM9Thiq93VKMHV3yjoxo9bsAtqNGDZ30b
+ZsdcUaC/K2OOCN867uOZpilRu/tjrgjvOv7jmaYpUbvnY44JPzrh45mmKVG
792OOCT868eOZpilRu+9jrgkPOynjmaYpUbv/Y44JXzs545mmKVG74OOuCW8
7JeOZpilRu/DjrglvOzXjmaYpUbvo444Jvzst45mmKVG7+OOuCY87feOZpil
Ru+TjjgnfO2PjmaYpUbv0444J3ztfx3NMEuN3mcdcU94258dzTBLjd7nHXFQ
+NtfHc0wS43eFx1xUXjc3x3NMEuN3pcdcVF43D8dzTBLjd5XHXFS+Ny/Hc0w
S43e1x1xU3jdfx3NMEuN3jedhqPyf/iWGWap0aNGDy42aeStQkyPIE8KcVWC
PC3EVeFkk0c+WSGORo1euxBnJcizQlyVIM8LcVWCvFOIq8LRpox8ikKcjRq9
ohBnJci7hbgqQV4W4qoEeVWIq8LZpo58qkIcjhq9XiHOSpDXhbgqQT5eIa5K
kI9fiKvC4aaNfJpCnI4avQkKcVaCfMJCXJUgn6gQVyXIJy7EVeF000c+XSGO
R43eJIW4JUE+QyGOB7ebsdCNuBWe4/1MRcPxZi50E26Dh3g5S9FwvFkLeYzX
eII3sxUNx5u9kGd4h0a0zlE0HG/OQh7gBTuz+1xFw/HmLqQJbezM7vMU4nrw
u3kLaUAL/G6+QjV6aEALGtACz+tbaIZZeN78hWr04HcLFKrRg98tWKhGD81o
RzPa4XkLFZphFp63cKEaPfjdIoVq9OB3ixaq0cMjvMIjvILn9Ss0wyw8b7FC
NXrwu8UL1ejB75YoVKOHp3iLp3gLz+tfaIZZeN6ShWr04HdLFarRg98tXahG
jxtwC27ALeB5AwrNMAvLW6ZQjR434TbU6MHJ1ol82UKMjyBfrhBnJcgHFuKs
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
FqU4I0G+ZSnOSJBvVYozEuRbl2KLBPnuZcMZ94h8m1KckSDfthRnJMi3K8UZ
CfLtS3FGgnzPUpwLrrVXqZtwGzzF273LhiPuU8pjvMYjvNq3bLjgfqU8wzs0
o33/suF8B5TyAC/QgJYDy4bbHVRKE9rYid0OLsW14FiHlNqRXeFWh0V+aCmu
xY7senjZcLgjSu3M7nCroyI/shTXYmd2H1Y2XO7oUhrQArcaHvkxpbgWGtAy
omw43bGlNKENbjUy8uNKcS00oe34suF2J5TSiFa41ajITyzFtdCI1pNKcSy4
1cmlNKMdjWg9pWw41qmlPMALNKP9tLLheKeX8gAv0Iz2M8qGc51ZyhO8wQO8
OKtsuN7ZpTzBGzzAi3PKhoOdW8ojvMITvDmvbDjf+aU8wis8wZsLyoaTXVjK
M7zDI7y6qGy438WlPMM7PMKrS8qGo11aykO8xDO8u6wUV4OjXV7KQ7zEM7zD
M7zDI7y6omw44JWlPMM7PMIrPMIrPMGb0WXDBa8q5RFe4Qne4Ane4AFeXF02
nPCaUp7gDR7gBR7gBZrRfm3ZcMPrSnmAF2hGO5rRjka0Xl+KW8GpbiilGe1o
QtuYsuGCN5bSiFY0oOWmsuF8N5fShDZ2Zvdbyobb3VpKA1rYkV1vKxsOd3up
ndmdndjtjlKcCi51Z6kd2RUOdXfkd5XiVOzIrveUDVe7t9TO7A6Huj/y+0px
KnZm9wfKhrM9WEoDWuBQD0f+UClOhQa0PFI23O3RUprQBod6PPLHSnEqNKHt
ibLhcE+W0ohWONTTkT9VilOhEa3PlOJScKhnS2lGOxrR+lzZcKnnS3mAF2hG
+wtlw+VeLOUBXqAZ7S+VDbd6uZQneIMHePFK2XC6V0t5gjd4gBevlQ3Xer2U
R3iFJ3jzRtlwuzdLeYRXeII3b5UN93q7lGd4h0d49U7ZcLx3S3mGd3iEV++V
DRd7v5SHeIlnePdBKU4GF/uwlId4iWd4h2d4h0d49VHZcL2PS3mGd3iEV3iE
V3iCN5+UDef7tJRHeIUneIMneIMHePFZ2XC/z0t5gjd4gBd4gBdoRvsXZcMB
vyzlAV6gGe1oRjsa0fpVKQ4Fd/q6lGa0owlt35QN5/u2lEa0ogEt35UNt/u+
lCa0sTO7/1A2HO7HUhrQwo7s+lPZcLWfS+3M7uzEbr+U4k5wpl9L7ciucKXf
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
Ochvjbi4J+9gW9vbw4vduy3iEgf57RGXOsjviLjMQX5nxOU9eQ3b2tGeX+7e
XRFXOMjvjrjSQX7PODcY7Wc4F1zxXt+A28AV7+upRg+ueH9PNXpwxQd6qtGD
Iz7YU21332IPz3ETuOJDPc1Qhys+3FONHlzxkZ5q9OCIj/ZU29u32Mdz3ASu
+FhPM9Thio/3VKMHV3yipxo9OOKTPdX29y0O8Bw3gSs+1dMMdbji0z3V6MEV
n+mpRg+O+GxPtYN9i0M8x03gis/1NEMdrvh8TzV6cMUXeqrR4wbcgho9eNan
kb/YE2ckyF/qiTPCtz7raYZZavRe7ok7wrs+72mGWWr0XumJQ8K/vuhphllq
9F7tiUPCv77saYZZavRe64lLwsO+6mmGWWr0Xu+JU8LHvu5phllq9N7oiVvC
y77paYZZavTe7Ilbwsu+7WmGWWr03uqJY8LPvutphllq9N7uiWvC077vaYZZ
avTe6Ylzwtd+6GmGWWr03u2Jc8LXfuxphllq9N7riXvC237qaYZZavTe74mD
wt9+7mmGWWr0PuiJi8Ljfulphllq9D7siYvC437taYZZavQ+6omTwud+62mG
WWr0Pu6Jm8Lrfu9phllq9D7pNRz1j55mmKVGjxo9uFhdx38u7onpEeR/9sRV
CfK/euKqcLLxY368WhyNGr2/e+KsBPk/PXFVgvzfnrgqQf5fT1wVjjZh/FsT
1OJs1Oj1qcVZCfJWLa5KkCe1uCpBntbiqnC2iSOfqBaHo0avXYuzEuRZLa5K
kOe1uCpB3qnFVeFwk0Y+SS1OR41eUYuzEuTdWlyVIC9rcVWCvKrFVeF0k0c+
WS2OR41erxa3JMinqMXx4HZT1roRt8JzvJ+qbjje1LVuwm3wEC+nqRuON20t
j/EaT/BmurrheNPX8gzv0IjWGeqG481YywO8YGd2n6luON7MtTShjZ3ZfZZa
XA9+N2stDWiB381Wq0YPDWhBA1rgebPXmmEWnjdHrRo9+N2ctWr04Hdz1arR
QzPa0Yx2eN7ctWaYhefNU6tGD343b60aPfjdfLVq9PAIr/AIr+B5fWvNMAvP
m79WjR78boFaNXrwuwVr1ejhKd7iKd7C8xaqNcMsPG/hWjV68LtFatXowe8W
rVWjxw24BTfgFvC8frVmmIXlLVarRo+bcBtq9OBkq0W+eC3GR5AvUYuzEuT9
a3FWuNmQyFevxdWo0VuyFnclyJeqxVkJ8qVrcVaCfEAtzgpXWzPyNWpxN2r0
lqnFXQnyZWtxVoJ8uVqclSAfWIuzwt2GRr5WLS5Hjd7ytbgrQb5CLc5KkK9Y
i7MS5INqcVa43DqRr12L21Gjt1It7kqQr1yLsxLkq9TirAT54FqcFW63XuTr
1uJ61OitWotjEuTr1+J6cLwNat2IW+E53m9YN1xvo1o34TZ4iJcb1w3X26SW
x3iNJ3izad1wvc1qeYZ3aETr5nXD9bao5QFesDO7b1k3XG+rWprQxs7svnUt
zgfP26aWBrTA87atVaOHBrSgAS3wve1qzTAL39u+Vo0ePG+HWjV68Lwda9Xo
oRntaEY7fG+nWjPMwvd2rlWjB8/bpVaNHjxv11o1eniEV3iEV/C93WrNMAvf
271WjR48b49aNXrwvD1r1ejhKd7iKd7C9/aqNcMsfG/vWjV68Lx9atXowfP2
rVWjxw24BTfgFvC9/WrNMAvb279WjR434TbU6MHNToj8gFrMjyA/sBZ3JcgP
qsVd4WijIj+xFmejRu/gWhyWID+kFnclyA+txV0J8sNqcVc428mRn1SLw1Gj
d3gtDkuQH1GLuxLkR9birgT5UbW4Kxzu1MhPqcXpqNEbVovDEuRH1+KuBPkx
tbgrQT68FneF050e+Wm1OB41eiNqcViC/Nha3JUgP64WdyXIR9birnC8MyM/
oxbno0bv+FpckyA/qxbng+udXetG3ArP8f6cuuF859a6CbfBQ7w8r2443/m1
PMZrPMGbC+qG811YyzO8QyNaL6obzndxLQ/wgp3Z/ZK64XyX1tKENnZm98tq
cT/43uW1NKAFvndFrRo9NKAFDWiB911Za4ZZeN/oWjV68L2ratXowfeurlWj
h2a0oxnt8L5ras0wC++7tlaNHnzvulo1evC962vV6OERXuERXsH7bqg1wyy8
b0ytGj343o21avTgezfVqtHDU7zFU7yF991ca4ZZeN8ttWr04Hu31qrRg+/d
VqtGjxtwC27ALeB9t9eaYRbWd0etGj1uwm2o0YOjPRv5nbUYIEF+Vy0OS5Df
XYvDwtWej/y5WtyNGr17anFZgvzeWhyWIL+vFoclyO+vxWHhbi9G/kItLkeN
3gO1uCxB/mAtDkuQP1SLwxLkD9fisHC5lyN/qRa3o0bvkVpcliB/tBaHJcgf
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
Z5jt6l4/v1dw9UmeYXZF99b1ewVX/9MzzK7k3np+r+Dqf3mG2ZXdW9/vFVx9
smeYXcW9DfxewdX/9gyzq7q3od8ruPo/nmF2Nfc28nsFV5/iGWZXd29jv1dw
9ameYbabe5u0vWPTPMMsz93dpw7X3dTvXOtd5Hkzv2drOt/c7xWcd3PX4MA9
3NvC71VP51v6PVrL+VZ+b9Z2vrXfE7jw1q7BjXu5t43fk97Ot/V70cf5dn4P
1nG+ve8OR97eNThzX/d28N37Od/Rd17X+U6+63rOd/Yd4c47uwaXXt+9XXzH
DZzv6rtt6Hw332kj57v7LnDq3V2DY2/sXv+2m2ziZzg23HoP36R1K573bLvB
Zn5ucey9fJPWrXje23fZwvk+vsuWzvdtu8FWfm5x7P18k9ateB7gu2zjfH/f
ZVvnB7TdYDs/tzj2gb5J61Y8D/RddnB+kO+yo/OD226wk59bHPsQ36R1K54H
+S67OD/Ud9nV+WFtN9jNzy2Ofbhv0roVz4PbbtLfz3BsviMc4Zu0bsXzkW03
2dM3mMs5vSGu7eV8qO+yt/OjfJd9nB/ddpN9fYMuzukNc20/58N9lwHOj/Fd
9nd+bNtNDvANEuf0Rrh2oPPjfJeBzo/3XQ5yfkLbTQ72DTLn9Ea6dojzUb7L
IOcn+i6HOj+p7SaH+QZN5/ROdu1w56e03WSwn/nGwLeEU32T1q14Ps134DvP
Mp6jf6R7o30Xvvss6xlmh7h3uu/Ed6DlPMPsUPfO8N34LrS8Z5g9yr0zfTe+
C63gGWaPdu8s35HvRF09w+ww9872XflutKJnmB3u3hjfme9IK3mG2WPcO8d3
5jvSyp5h9lj3zvXd+a60imeYHeHeeX4P+M60qmeYPc69sX4v+O60mmeYPd69
8/1e8N1pdc8we4J7F/g94TtUN88wO9K9cX5v+C7V3TPMjnLvQr9HfKdawzPM
nujeRX6P+E61pmeYPcm9i/1e8d2qh2eYPdm9S9resZ6eYZbnU9ynzneTS/3O
td5Fni/ze3aa88v9XvEd5XLX+M4y2r3xfq9Od36F36MznF/p9+ZM51f5PeG7
y1Wu8V3mLPeu9ntytvNr/F6McX6t34NznF/nu/Od5jrX+I5zrnvX++7nOb/B
dx7r/Ebf9XznN/mOfNe5yTW++1zg3s2+4zjnt/huFzq/1Xe6yPltvgvfgW5z
je9EF7t3e9tNLvEz34n4LnSHb9K6Fc93tt3gMj+3vhPd5Zu0bsXz3b7LeOf3
+C5XOL+37QZX+rn1neg+36R1K57v912udv6A73KN8wfbbnCtn1vfiR7yTVq3
4vlh3+V654/4Ljc4f7TtBjf6ufWd6DHfpHUrnh/3XW52/oTvcovzJ9tucKuf
W9+JnvJNWrfi+em2m9zuZ74T8Z3uGd+kdSuen227yZ2+wcbO6T3n2l3On/dd
7nb+gu9yj/MX225yr2+wqXN6L7l2n/OXfZf7nb/iuzzg/NW2mzzoG2zunN5r
rj3k/HXf5WHnb/gujzh/s+0mj/oGWzqn95Zrjzl/23d53Pk7vssTzt9tu8mT
vsHWzum959pTzt9vu8nTfuYbHt/qPvBNWrfi+UPfge+oB3iO/rPufeS78F31
QM8w+5x7H/tOfGcd6Blmn3fvE9+N764HeYbZF9z71Hfju+vBnmH2Rfc+8x35
DnuIZ5h9yb3PfVe+yw7yDLMvu/eF78x32kM9w+wr7n3pO/Od9jDPMPuqe1/5
7ny3PdwzzL7m3td+D/iOO9gzzL7u3jd+L/iue4RnmH3DvW/9XvBd90jPMPum
e9/5PeE77xDPMPuWe9/7veG771DPMPu2ez/4PeI78FGeYfYd9370e8R34KM9
w+y77v3k94rvwsM8w+x77v3c9o4N9wyzPL/vPnW+S/7id671LvL8q9+zD51P
8HvFd8oJrvEd8yP3fvN79bHz3/0efeL8D783nzqf6PeE75oTXeO752fuTfJ7
8rnzP/1efOH8L78HXzqf7LvzHXSya3wn/cq9v333r53/4zt/43yK7/qt86m+
I99Np7rGd9Xv3JvmO37v/F/f7Qfn//lOPzqf7rvwnXW6a3yH/cm9GTrjTX72
M99h+e76v07dpHUrnmfsjDfgL8+t77AzdeomrVvxPHOn7kKQz9KpuxDks3bG
G/CX59Z32Nk6dZPWrXievVN3Icjn6NRdCPI5O+MN+Mtz6zvsXJ26SetWPM/d
qbsQ5F06dReCvNEZb8BfnlvfYZNO3aR1K57TTt2FIM86dReCPO+MN+Avz63v
sM1O3aR1K56LzniTGfzMd1i+g5eduknrVjxXnfEm/OUGo53Tq12byXmHbzSz
807faBbn83TGm/CXG5zhnN68rs3mfD7faHbn8/tGczhfoDPehL/c4Czn9BZ0
bS7nC/lGcztf2Dfq4nyRzngT/nKDMc7pLepa4nwx3yh1vrhvlDlfojPehL/c
4Fzn9JZ0rel8qbabFH7mGznfwpf2TVq34nkZ34HfKdzoOfqVe8v6Lvxu4SbP
MFu7t5zvxO8YbvYMsx3uLe+78buGWzzDbKd7K/hu/K7hVs8wO497XX1Hfudw
m2eYnde9FX1Xfvdwu2eYnc+9lXxnfgdxh2eYnd+9lX1nfgdxp2eYXcC9VXx3
fhdxl2eYXdC9Vf0e8DuJuz3D7ELureb3gt9N3OMZZhd2b3W/F/xu4l7PMLuI
e938nvA7ivs8w+yi7nX3e8PvKu73DLOLubeG3yN+Z/GAZ5hd3L01/R7xO4sH
PcPsEu718HvF7y4e8gyzS7rXs+0de9gzzPK8lPvU+e6/lt+51rvI89p+z5Zx
3svvFb8D6OUavxNY1r3efq+Wc97H79Hyztfxe7OC875+T/jdQF/X+F1BV/f6
+T1Z0fm6fi9Wcr6e34OVna/vu/M7g/Vd43cIq7i3ge++qvMNfefVnG/ku67u
fGPfkd8lbOwav1vo5t4mvmN355v6bms438x3WtP55r4Lv2PY3DV+59DDvS3a
btLTz/zOgd81bOmbtG7F81ZtN1jbz63fOWztm7RuxfM2vktv59v6Ln2cb9d2
g3X83Pqdw/a+SetWPO/gu/RzvqPvsq7zndpusJ6fW79z2Nk3ad2K5118lw2c
7+q7bOh8t7YbbOTn1u8cdvdNWrfiub/vsonzPXyXTZ3v2XaDzfzc+p3DXr5J
61Y87912ky38zO8c+J3JPr5J61Y879t2k618g5ec09vPta2dD/BdtnG+v++y
rfMD2m6ynW/winN6B7q2vfOBvssOzg/yXXZ0fnDbTXbyDV5zTu8Q13Z2Psh3
2cX5ob7Lrs4Pa7vJbr7BG87pHe7a7s4H+y79nR/hu+zh/Mi2m+zpG7zlnN4Q
1/ZyPrTtJnv7md+g8FuTo3yT1q14Ptp34HdAP3qO/r7uDfNd+F3QT55hdj/3
hvtO/E7oZ88wO8C9Y3w3fjf0i2eY3d+9Y303fjf0q2eYPcC9Eb4jvyOa4Blm
D3TvON+V3xX95hlmB7p3vO/M74x+9wyzB7l3gu/M74z+8AyzB7s30nfnd0cT
PcPsIe6N8nvA75AmeYbZQe6d6PeC3yX96RlmD3XvJL8X/C7pL88we5h7J/s9
4XdKkz3D7OHuneL3ht8t/e0ZZge7d6rfI37H9I9nmD3CvdP8HvE7pimeYfZI
90b7veJ3TVM9w+wQ905ve8emeYZZnoe6T53fNZ3hd671LvJ8pt8zftd0pmvM
Hu3eWX7P+F3TWa4xO8y9s/2e8bums11jdrh7Y/ye8bumMa4xe4x75/g943dN
57jG7LHunev3jN81nesasyPcO8/vGb9rOs81Zo9zb6zfM37XNNY1Zo9373y/
Z/yu6XzXmD3BvQv8nvG7pgtcY3ake+P8nvG7pnGuMTvKvQv9nvG7pgtdY/ZE
9y7ye8bvmi5yjdmT3LvY7xm/a7rYNWZPdu8Sv2f8rukS15g9xb1L/Z7xu6ZL
XWP2VPcu83vG75ouc43Z09y73O8Zv2u63DVmR7s33u8Yv3Ma7xqzvHOnu0/v
/+Dsf3E=
         "]],
        Annotation[#, "Geometry"]& ]}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics3D",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  Boxed->False,
  DefaultBaseStyle->{
   "MeshGraphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
  ImageSize->{454., Automatic},
  Lighting->{{"Ambient", 
     GrayLevel[0.45]}, {"Directional", 
     GrayLevel[0.3], 
     ImageScaled[{2, 0, 2}]}, {"Directional", 
     GrayLevel[0.33], 
     ImageScaled[{2, 2, 2}]}, {"Directional", 
     GrayLevel[0.3], 
     ImageScaled[{0, 2, 2}]}},
  Method->{"ShrinkWrap" -> True}]], "Output",
 CellChangeTimes->{3.900481303515421*^9},
 Graphics3DBoxOptions->{ImageSize->400},
 CellLabel->"Out[28]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
q8ssgFJ7tDtSa6OHoizcMMFVOLiIi1754dVrvYgfCkxyM3QMQgoKMUKoFaGo
5sk1+9geGUzbphdqX1d6ZErKzPaTb6enAGSQE9ljunvTY9hNnfusN85sSj3o
AaeWAwfZz6qnlmdpBpzetsV94EQecIJ0qzxye1SZPDKt8Ny/Yb877CdjTkWO
ZDrm6H3y2AUHOQFvPeHaPS+bPaaSjnHCf9h27M1ZDMAbnsBwvuIWimKODF/v
dCfCfZ4DTaZCh6Ep28URQ0ML8bXjOgijaBzJmWoHNG66l6EJ4AyfrqFfXW9O
ett5D6Gxhr0JUnWacvEY4QvyvRtv+qVGb3D0Skeity9rDK4iY8qOMWj7rYMb
3KOMMUdv/UHj5W/+lWwmdUJz4/v/WUNTZWgiN+likKFAkpUxiZaZh5eMgJUw
FaXlE+XZDeMmF4Yk36ishWTriBaXvSmjcK95lAnN4X0ntInljnXSE6SKmVOD
+TqkStievIpu3GOXPoQvXCjTPcjhGKeksEaCMjMUU6KDt9k2mqt5d6EzPfy/
vC37gMeZfr4r64wEN1XPimnJr4iaWCIch5pcTY5dO/3jjj93vwFmmp7xLDD8
kcysoApvsmJYWXOg8fiKnd4yZcuK3oiKmvSJ0UQqf+Po1RZdXFrhNDrhdRJy
n1UPJUEawpgSwpKR5XlHFk7emkJBt1w5tnvX+D2r9qXQcK8l5Le5rRz3XTLj
sDnKMfldjMJGjlcU6rCICwVDWATtKOJBH0UAFDgMoVREA0T3oEm3qoOPOWvd
J/g4g2674dN6fMUuHz4VwWfJ5mMWnyC3vprA7A3wQ88fAQR+cAEgBXnouZGk
b3r6ocYGKWOQ9me3DnJw4uEsLF+9t/nwki2c0xV4SsocQ0jR0cl3Hzt9PbLD
O4RVDzsKd3YmaC/ciJ4ET+CPIWAWcmJm9Z6XlTAzTpL0xkwpak0S12QNmur+
7ej5D/TmLt43vZbhdbOmpxK+eR5r5mtrPp+48rG1hq6qZx01tzWZeQTdymwq
nsjGbJLTnzS9ZNORz+gq/Rb+3NCc6lqz361fBTZ65ZQiw/OLyi4yK3c1Hlux
oxiZUN8NMHyqOtR3YJNr3qrcWi4+dpOag0pfGFN6UHyhaMsYU+xLJHcKtOjr
oxlaYqGFW74KLbFMN8LmA6plYIzZ0MZpPSONL+rpx12l0rSe3/5CmzfltS0t
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
nqSfPlbU2FldM3Qp9iDXzJFLy8ihaTVgi5wimOQb8+aL2Bi5Wgk58PabmP/N
LKp9vYqxyMMYHwqHUCwFXv1z1Kru0aqP55qrFR8Qo6oaMdFatv0M0TSysMqn
OnxqeHxqSFEqjrtgExqkzbD2PMdT9DVP0ueepK9pihvm8W045gU96qCTaxRZ
xjqljlGmmTEblbBRsWuUc5mO60KXGkCg9NR0t1BZLpRZbwY1zLEINX3xg/xe
SCJCoeFJaUuuJnWftNbTc9tP24JiCMzoZV0rBmEjLlIloJIqoELTXWbnma47
2qv3v1jsq4XDhL0XrGGcq1fzbLxxfYo+XY0irMtXowRY7AEswpzmirUofFe/
qhSLjWJGstCBrPXQc7sYMlSPnBNkx179U2DmgawroQ5fe46Y2XwrLEYjnRUx
Nqw+R8lqZvft8Gvm8xrLpP3oHBybGceeh0ZqjmNyTsQXuC9xzotiNo81izrD
Vz4GZgxaJrEbGMPl5pmRyx9jTO88+XYQlQr79jQt8Zj221/KtFj21lzTMPgK
aR2iDcxRtJpHtH6eU1w/or+9yFDgE2GP+OkNz3Mi1oIqzhrgrO7hrMmzdGpB
+1H69lt8RYhrvU/RlzY5OHYDFSmmoJIkYV3gK74aKBnV2LQ+lW1NntkiW2q+
7sScxpx6QjBjm6e5jSmrN120rSa2TYxd/aS4j5Z4bIvFNpuC7ST5ubbZGnZI
vTElquoWNxSwMhVbkGpi77cN5PV3uLcXLzG5EXwOXOLxLfX4lqpvy3ed4Sxi
61vd4xv3C+kv7baRbOKbVG2wtKWYNbu08+iKfZa2/Nx1by/aMBzaYpc2DF6O
ZtAtLnF25NafVHBmrkL4OJO9tcRyhv+XEtR41t0LYShEdceGYAsw1/Rcdfz6
zwAWuKIv8Qjo6uw6/bZlypS2RgCMs1botECNOnj5Q2tULOcBbZopxudBL4MR
9HGfpMjDLevGh2gL7GFA6EHpd8oo/X5PhRKJrFqEhF0MNjDPm6M+mdaicq7g
6gZXKknxBy7zpiOtLHHUM/Pc9pNI4z9Bn5Mg4jUgkkINRqgW9GDp4BOlvc3B
J4dataotLinMJhds85bJcKpN/z9Nj4TBadretuXCK5GHJz0sxWUnQ5Tw5Gtr
zBfPsiJPlT0Bs+4yxyBqknt7uELRs7IoVOoRKnKEwk/buZVbqLIZ8SwN/5xH
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
taIFqV04LnDCL2FNSFONZbRoXbHtsklNq2nVGrsu/8jINj3VYlFt4Ojbn9NX
+Cnu9vy+p4aMq9off7m8ra7JVcP4zZ8+tYZVY8akweDDprMN1okb7ZmjdENt
Ve1fTaIaR1j9R4ASxVj0Z5uQQt6D3XsvqFbBXLVdUU8YxYIYhuHwhuKF3LoQ
r8XNhbArnpy0IOI8WRGN8xL2BJFRLYvCavjWVGHJ6PYmdXWrTkE3bPPHHt1y
93KW4Ufn6pZ6dJtSLQYEXk9yLnoZbcrSBs6eWDLKvTzwARKKmYGQzCwnn12z
h3NPSR4K03T4tesFe3svqOotrx26bN6Fj5msjDjprHPyXUZN06aYtp0v/tgM
XyjGoZ6SVHh8AXN6DwI4WM67Gat3vpT/IqKWaA0JGgJcEEmMhsoNAI6r7Mns
YEe/HWiXuNrxWD56HtqlHuQqEsw5yNF3vxznNK281XTWhe6RuGTorC240CXG
rWrZpSGR919vrNl1he9EL99yqQbjcCxEHDpfI0VvA4jeIPM4X1sk6tzojZib
WEkPr3NvLXaqseXMDxg7WYXGnmNKm8pKb2vHX5jnj+H7bzD/J8c73wnmtFLF
Ev0A7y4bPmff9nuWxJgNTF0Dx+j/Tzg5YxQdc2fokltnPhV5bXXarrTMbj/f
uJO39UiapKkEZzI+UTNwOQp14I8Zb5rxdpkM5eGx7vK4aPDUBHKNASPzWIOH
kcdD1dZDdILfGeLgLiQktmLzjV755mZB5MiINaqVsY7vJ/LIGHlkrJTKqFwZ
dRjZimPsXhoCjnICEMzAXJGqfQ6OZTQqXeKGlEN/3K2pR8WsF9wwvx0YJjyr
Iom1goY6Mb5VrU69uUZAJhL1SWFa0EgPi1kX/BMWodQZ7jpx7odm+x9AXv5R
CCWTtjxyAHaFvyCYWBUZB/XZqsuzkTFkGVNugD106v3mxiNv8eCdt4M3OACs
NHkfnf4pS1oCkVE0gSAWgAj8IGHVeHjitvWwitmsZvnKBSpy0zM/0m2SH8Me
LykYiYJuHS1RcKKfgspceiaYPoA8Afpa9r+G7UEO01bv5AYYiOICzSLfIYCE
GIHmMB1fPERRHy2Wl42exzBRHzhExQg/hTR8FGaHofpaow3z/vVUnJtCpkaO
uojnmKnbdOjWu6e++w+f7nnxJ19g5/33C+QlRfIacg2wE9rFU9QuEe3csgA1
XUecsJspr9rFA/JiHkaYgznJwYbgT0TrtpiFuqGX0UyHelY05REtaitaKBEe
HNMBEMczLbaFOdtOZLZ14HsIXdtKmqnCtnTqtiVlSXjmxhHyvXInm1Vv4AfY
Ehc2HqQa9tPiTDblyob+b5GUBhLYJNLTuM3GTyrDjTddeQ2ZtCUt8pAWC2mo
oYxLP2j1mjBpsUuajvhe+DGKH/lBU7IBB9CWkvtPrdrJA2vtehlsAR+D5lpj
oynt4PF3UAH6LaxjbtTBGcd4ShRDUgeK3+y/9nMeo2fep09BjtULu3L6JHo5
18QnPJxdOUOY8hDWKYXe+/a/YQgzdNHXm2NLVyFktpIJmhvLt17iYspEmI7g
hk5H8CpsrNh+uSNzKm7Qj9h1iteppQmzEqjdo7Xr2MCRt+7g1s0fOFj9z2Wn
AtO2K3btMmYFCmoF6vPNx2/foRcP7Pr0ubV7f7fAF69ax+5/Zu29B+b0Nh6c
S0/KB+du7NI9JqZmV+qxq6qvrZBdXY5dZvEXyrINcRzu3ugQbRn/uTJduhCR
zbCIRR7EQotY7EEszBBLXMRk7MZLuCZ4OWyZ7beAUyk6eUWp+1mIVC09AaFU
MsW1aVjmVJRzCp9Jp3dop3Rx99Q65RQ4NS4hLSyDCQt5qbqI4YNJR12RC5Ot
CIHoZsO+15iMSlufAt2WuowmGsjhpzniC2fIIdOxl0RgaM5E74cEsQ4wFej9
frMHp3PNEveT84BWc/sPJ+Aq4M1B3ogri8gqjqLACt0oIulCi3pMfVicEhVI
7b6e4UX/deDYd9kuMou+DMz40t+3LRArmDscw7CxsJwr6S/nnGdzsiB/d1zB
zEmCIxinrqIEPJtV8cilIFcItEKoFY7rejort79o4yxii2Osbk+FRDlAcCmj
1xHmeHzHhU9M/oa5oBTwDlwka05i7O7GQzeZsgjzH3iS0P7DpLx5ytq0SUKT
FaeEYbQKxRwb1swAbcE3PLehOvQSlytejj00d+O9R+YPjuNZHvIcgTyu7U6D
fmLEXjRF9ioe9lJdgoVcq3nYSyRuMexhicqJDqu3vyivOnPHusfKp1g+5cpn
3UvYPeW61xq67cYKSidHdrB3KuedyXstSNUh8rnxmU++eIryRWXyhS3y4bMt
GtHy1Z3V5zefWN781pMrUSGn5q4vn1i2Jd9XPPRwl5poTLgzq0piLujwENch
iz28piHc9osfcwrrx6Eh7sJHhjns8dMcu8QZ2rCwlJrMn5m9Nx2ReamL2F3h
DYlz7BvObY1vFfFNDh1Ytpjn1I0SeaDozkauEX2LbwDfiC1w3P+HHoZe+s19
V3+OQQ+ggdv94o/ywHUKcCiigoVlBpw+Os1ttMUe3SpSTx6HAU6t0lCuSqJp
LZLgwJ0vXFN6lTm+ctuL8G58zc6rKIKKe+eNNbuvNVbt1FfcZ5aLN7Hp6FtW
PD5ApS/HyVhD6u1Mvd/G3dPEuiB1nMudkE7mXElumuyssVvrd1+7g6IlVTYt
ck0LQp4juGYfd1b5BQJLG7c1xBzBN25b0QPVwimqVhXVsJQslOFciqqQrapV
bFLXKa6egB9SLKThQAlvy5MWZ8FcY37/EQ7mqnIRfIHur+1medyvq9OvD/Rl
BzSalhzJNXs7CwtPXVawnLPn1x2wnKUeztQUOVPuZpp7PhPKltryfDIIZLOn
Gm7P1U7MHU5PDBEuKCUuympp2y20VII5RBpI6SRs6I9Zq2oVoxqqKPGuPAc9
B65zpx5W7WOWDXLVJHCDJMjk38HF3bRmO7PTBGSztWhWk6vjOIXAF9BPX8CS
kXOdpaApFzR7vsGfHOJ+xPtd7+jyTxSZZZpV5EABBw87adW7/9ovNGsRTPOR
lrqkoXffWlr/asxozhaaiWehyfVNka1xIgZgkQZsYn0RsDBzi/M+Vu14qbl2
9zWNVtxYs+faBP3T1rNes/tK4CtoLXjR/JrFS2GOYFY3t6ZFHzXpdH2HXm/w
iiO0RMdpn6/b/YpN9fjXk0CWHYpybkePB6sIs0+sSM+fz9twyIo10yNWVcR6
dMHgPQpcWKw4L9YMKQ+Po/77n12b5VV2ik7PFe8jV0z7QXqj4GRftwYmXc9P
z4AJ9wjAFBoMvBiyW5HRisXqsmKlWixolT8gZbFCFBPSu2Y2ezay83quC2Y7
cOCVqwXLLq10OYph89ZltUyxx0SxikexaMpHpVax2FVMH6DwK2KFvXBgMk5M
fNal03ozuVC5EAxVy+RSIpcbl/F5KG5Ev2gCpWFNCAPii8xij2Fmm1zTxQMg
nf8okRhs64UPdcR2EX3HPq55GEs9jKW6VeLAsbfDZh+XrOfPqjGjn0B5ePb8
un12VcwhYyyKoRw0qkYjuMgUU6IYyiVCMiimMGeUVYSy7fStGMqSImXbzn2Y
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
YXtCa0/ksSea3J6Q/zSgsOHbYIeHgUewoW+JoOkANChEfTxEFa8QDSlrfH2J
LxzySjC6N3w8S+yq5KGh73DISftKMnfu9e5/I5fx5ekw3nqoOFWVHpzT54mf
zEVAijNGdfyE3aP1B+09sO4sdEro5X/KErB06Mz4suGz4wv6j8am+jGFRvhP
CJcSzBwzhdKGjOBqzFl3gPfScweH92m0MrgKUrFRVY9UVY9UcZtVniMVfa8a
IBRwwRrVthaIyshSBbIEK4esEdNIzSUr9pDFdQe5yHzikPXwgoEsCsKScQH2
2QeajyweQo3BFrJCh6zFRJaOJ2ieqlthwS1dJR5FQLee/wj1ts7r/Sm94CPH
grA9ZJ6H7/RQVpdsL64xj94RZ76v68wwZSFyUjsYsMQFjAcu7NB3WBW39l1t
71Zs3UrKoKrJQaMDlV41mr2oXzWP3fp7rIDpa8QcgSyOmfg9eFbjx9/8+/HT
7/zz+Nl3/6Vx9t3/O/TAlQpcp52gKYNLeeAK28IlP0H8ZG15B/5LE0Ts2Oqd
V2EX/W6MW4iNBk9y9UFdbZjwSvXdS/33AmXLJFIKxLIxV6tWy9wUVk6UCMd6
+VLL0pFzfGo57RRWD2i5NkA9upgWN1OwOWVmPPD8BvrCcbNZgTQbbD27ag8H
WmYLC1xAM14TSSBjRFuy+ZSuLqo5q1nJIi0Z97vBCxGSlaZ2JR7EOjRinz6z
IkOs5kFMTQexkIsWREYxlqxDX9kskSx2JOMNqyXcfptnUcwMdqwm6RAPz+3n
zXeA5ovEah7MGKkQlilgBsIWD5nddYnEspwIMEajgtd4PIlisuRDYSuxi91i
tWKZucOsLnaqC5y+4F//maUlPWm5rJMtCtBRtgjETtjZHzSHT72HJAspkxU1
Bo+93RjkVE+uNm8gi8xKlpHucPV6bSp6pdAr8ehV94RZKh9hMVoJz7FL1zj+
P7M2fuptcmn89O1/bpx9718mzrzzz/QlklW8yousUIEpt+1WhVDu3lXGVeJy
pQc3JPmUmzLqfsJuxEt/Bz6mvwM/5PKwIUpis1q8icXV7FGP/3wCsOiDUb0L
1zY38ae+yYvtDfuvR9xfI+JfCqkFyaakWOKme90bOPwWCLu7dtc1iPUiuYUa
Dl/KskLG1x/q//kDvfXVent5lkubuQPg0qY0bffodWZYm1jYf0xKM00sdTbr
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
dHivadsTK0RGhCIuQvjYEGcRFZRRwFZpufaPqSBBwWQSxHu5ZRIUCxI006x7
sA6yEhSaeGbelfdDeuzHK0GhIEE1kiCENBtc7qDZQ6l/C9mJR1GXZGRHl+rT
FYVPanJp7TiQoXOYQFCbQ5janCTENa/tMd9CUJudc1dvcXMd6Qu4Yas2PMap
QWumFWIciATlRU/rRVyqblPVEkpJkoLCxCNI8ERiurG4hcroPteSzNT0dc2S
G+lG96Ztzsk9xjNgzZxsSNMnCI1J3di19p4XbbNr3dolFdQmdW1lIwG2exLZ
UKerRGN5dO6ae4u9r8fQs/yTx59NopNCdGqC6IRCD6/AeG9mZS34pdVT8ohP
2MFOwYCzc+eVdKlMpl/2ztV3vAB58nqz1QXwNl0xVyD0iRgQYiTcJGyrMoEi
Dd/wkK5eIYEibzYqkUUfj0yl8IFCKWROqkxavbgw7ePVpYjrEjRJS5KSGhXt
QJK4DLVJhqKiDCWkQBFXIKhPJj4vFMSnI1d+jLp5mnIxxbKRS9Y/+OKc1fdU
DhdOfffSf5wsnPpKzXL9WhTb6dx5zpJbdpwyd932405faHNMd5y56MaCJqnN
OBndaOf7Op59QtzT7kaLhq/a+kunRVF+g4Vgp9Iv/CpFVQq5KlVM082JjlaT
kkIlvA/2TduM0bx61kyvCURDl3/vJ0ycIidOMK5XQX0DRJb2VqF+2sgn1wZh
d1QpyJbaEdhS4aw0zgRp5LyVm4eBWvIOi0xDSqNKVpkSCFPd9KGzwmSEKNE1
7bB4gfpIXvaxT31CXzMaUX1iqz5WcbYj7z7tWXFCf2eanOJQUoq9craKY1Qn
a4pdheiQ504l4qIDwSnXG1sCxvsGHeAVm9CKDQU/9iTn/JV3qK+4bwj+DtPN
XospjIoelbzQtXLdXSLx5p+KE8OUvKk7ye44/7I73cHvoX79+Jpw8Pvq3mpH
VIx0H3SDFCPRurH9hLOXF3dOnbrREGKYaZPrRuSClhk9y0No2nTBJqrQkrJT
HgIuDzdqeUjxrBt5uEJRYNVmLQ9N14Oyku9H1TJdqZarf6dUgpRCn/7GVi9y
PaslmPk1gpry8FUu0JvBnNkN7OmgD0kmDTGXBhe4xG63FKBFZYW8Yq2Br/a7
yrqNRr52VZJCSO2qIkEhavmGti9iPBs9K0Ml/qnisa0ftTsmMRxB1vI2nYae
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
dX/Op4jr2St9UJiO7KzL7KafQABYdlvbEqZG2rAe65uajeyVjhJQSoeMgUtV
oYuBmvAibWGSpG3p3+Un6Xr24/9WGBF7OcF7JYW+d+jrcuP58fw73Mze4WgB
nfYdOm5rpXcY6HIvebRvQjaxt/mIANtXmFNJdl2D23XJ5muaSeljc+L2PEeV
CuZ32T9/dJJpsale1WxrEPEpwI97f37E72Hf/uMC6F5hv/2m58TdG0bX5VxK
d6T0ne9jP+UTwi+xv53XO35mA0b9U2bnI0acRNpbiM6f8s/sp3xSQM9+Zr7w
U8zkI95P2ElJLjR9R36oHmHf/u+EodqHnnHu2+OzEDXn+Bl9bivxDp8sPcZ+
xqeFgdqbDZTFb2i2CIXy/obvp2UD9iT7accIv9Fs4adFwkYpmXzwnmE/6liB
S7OEH6X7faVu78NavPl+zL+wH/NZAQIzhR/zXt/wvMC+2T8IwzNd+GZHlpJ5
B/vnzwnTO034jm/P/4a/Yt/iH4WX6he+xZt9v+G/sW/2BWFW+oRv9nrfN/st
+2bHCWPfFr7Zq/O/3B/Ytzhe+OWMkzju19y3eKWPS0Psm31JGGxqLHK477f5
D/bVJwivQlkHh+Rff5R9zVeE4SQP7QPyXzPOvuarwqileO7je0t6BOxbnCS8
KmWNzCoFJj0i9i9OFgYswnNa/vXp0WBfeIrwAnQV2ir9HfrYt9DeVxEfOnxq
pd9gOvsGpwkvHwvvvRf7Gr1FjvDeHErZX96vOFz0WPF//+2f499W/tv/AYe7
0jA=\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"2ccf6b75-4dc9-4270-adde-aefab0e76c3e"]
}, Open  ]],

Cell["", "Text",ExpressionUUID->"a0708428-4dd5-4695-a2dd-aebb19dd725e"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Figuring out what to do", "Section",
 CellChangeTimes->{{3.900511214994604*^9, 
  3.9005112184967628`*^9}},ExpressionUUID->"097f4790-5ad0-4d5e-a2b2-\
333c45147111"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GridGraph", "[", 
  RowBox[{"{", 
   RowBox[{"2", ",", "2"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.9005112207154484`*^9, 3.9005112236425776`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"d2346ac0-6104-4e64-b5f2-ed1c1c842988"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4}, {Null, 
       SparseArray[
       Automatic, {4, 4}, 0, {
        1, {{0, 2, 4, 6, 8}, {{2}, {3}, {1}, {4}, {1}, {4}, {2}, {3}}}, 
         Pattern}]}, {
      GraphLayout -> {"GridEmbedding", "Dimension" -> {2, 2}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{1., 1.}, {1., 2.}, {2., 1.}, {2., 2.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 3}, {2, 4}, {3, 4}}, 0.01273]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.01273], DiskBox[2, 0.01273], DiskBox[3, 0.01273], 
         DiskBox[4, 0.01273]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.9005112247963924`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"eb0ff6b8-23b7-4f23-849d-8d0deb2e4980"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GridGraph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"VertexLabels", "->", "Automatic"}], ",", 
   RowBox[{"EdgeLabels", "->", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9005112207154484`*^9, 3.9005112518474874`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"92307bde-0c27-4b20-99e1-c2a02f05e9f6"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6}, {Null, 
       SparseArray[
       Automatic, {6, 6}, 0, {
        1, {{0, 2, 4, 7, 10, 12, 14}, {{2}, {3}, {1}, {4}, {1}, {4}, {5}, {
          2}, {3}, {6}, {3}, {6}, {4}, {5}}}, Pattern}]}, {
      EdgeLabels -> {Automatic}, 
       GraphLayout -> {"GridEmbedding", "Dimension" -> {2, 3}}, 
       VertexLabels -> {Automatic}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], {
         {Arrowheads[0.], 
          ArrowBox[{{1., 1.}, {1., 2.}}, 0.02261146496815286]}, InsetBox[
          RowBox[{"1", "\[UndirectedEdge]", "2"}], {1., 1.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1., 1.}, {2., 1.}}, 0.02261146496815286]}, InsetBox[
          RowBox[{"1", "\[UndirectedEdge]", "3"}], {1.5, 1.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1., 2.}, {2., 2.}}, 0.02261146496815286]}, InsetBox[
          RowBox[{"2", "\[UndirectedEdge]", "4"}], {1.5, 2.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2., 1.}, {2., 2.}}, 0.02261146496815286]}, InsetBox[
          RowBox[{"3", "\[UndirectedEdge]", "4"}], {2., 1.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2., 1.}, {3., 1.}}, 0.02261146496815286]}, InsetBox[
          RowBox[{"3", "\[UndirectedEdge]", "5"}], {2.5, 1.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2., 2.}, {3., 2.}}, 0.02261146496815286]}, InsetBox[
          RowBox[{"4", "\[UndirectedEdge]", "6"}], {2.5, 2.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{3., 1.}, {3., 2.}}, 0.02261146496815286]}, InsetBox[
          RowBox[{"5", "\[UndirectedEdge]", "6"}], {3., 1.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{1., 1.}, 0.02261146496815286], 
         InsetBox["1", 
          Offset[{2, 2}, {1.0226114649681528, 1.0226114649681528}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 2.}, 0.02261146496815286], 
         InsetBox["2", 
          Offset[{2, 2}, {1.0226114649681528, 2.022611464968153}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 1.}, 0.02261146496815286], 
         InsetBox["3", 
          Offset[{2, 2}, {2.022611464968153, 1.0226114649681528}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 2.}, 0.02261146496815286], 
         InsetBox["4", Offset[{2, 2}, {2.022611464968153, 2.022611464968153}],
           ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3., 1.}, 0.02261146496815286], 
         InsetBox["5", 
          Offset[{2, 2}, {3.022611464968153, 1.0226114649681528}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3., 2.}, 0.02261146496815286], 
         InsetBox["6", Offset[{2, 2}, {3.022611464968153, 2.022611464968153}],
           ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.9005112306911993`*^9, 3.9005112521457043`*^9}},
 CellLabel->"Out[23]=",ExpressionUUID->"725bbfb5-4c90-4642-a6b4-8175d7378a80"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DualPlanarGraph", "[", 
  GraphicsBox[
   NamespaceBox["NetworkGraphics",
    DynamicModuleBox[{Typeset`graph = HoldComplete[
      Graph[{1, 2, 3, 4}, {Null, 
        SparseArray[
        Automatic, {4, 4}, 0, {
         1, {{0, 3, 6, 9, 12}, {{2}, {3}, {4}, {1}, {3}, {4}, {1}, {2}, {4}, {
           1}, {2}, {3}}}, Pattern}]}, {
       GraphLayout -> "StarEmbedding", ImageSize -> 100, PlotTheme -> 
        "Minimal"}]], Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
        Hue[0.6225, 0.6175, 0.9], 
        LineBox[{{0., 0.}, {0.8660254037844389, -0.5000000000000012}}], 
        LineBox[{{0., 0.}, {1.8369701987210297`*^-16, 1.}}], 
        LineBox[{{0., 0.}, {-0.8660254037844386, -0.49999999999999917`}}], 
        LineBox[{{0.8660254037844389, -0.5000000000000012}, {
         1.8369701987210297`*^-16, 1.}}], 
        LineBox[{{
         0.8660254037844389, -0.5000000000000012}, {-0.8660254037844386, \
-0.49999999999999917`}}], 
        LineBox[{{1.8369701987210297`*^-16, 
         1.}, {-0.8660254037844386, -0.49999999999999917`}}]}, {
        Directive[
         Hue[0.6225, 0.6175, 0.9], 
         EdgeForm[
          Hue[0.6225, 0.6175, 0.9]]], 
        TagBox[
         DiskBox[{0., 0.}, {0.040799194489552826`, 0.040799194489552826`}], 
         "DynamicName", BoxID -> "VertexID$1"], 
        TagBox[
         DiskBox[{0.8660254037844389, -0.5000000000000012}, {
          0.040799194489552826`, 0.040799194489552826`}], "DynamicName", 
         BoxID -> "VertexID$2"], 
        TagBox[
         DiskBox[{1.8369701987210297`*^-16, 1.}, {0.040799194489552826`, 
          0.040799194489552826`}], "DynamicName", BoxID -> "VertexID$3"], 
        TagBox[
         DiskBox[{-0.8660254037844386, -0.49999999999999917`}, {
          0.040799194489552826`, 0.040799194489552826`}], "DynamicName", 
         BoxID -> "VertexID$4"]}}], $CellContext`flag}, 
     TagBox[
      DynamicBox[GraphComputation`NetworkGraphicsBox[
       3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
       CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
        SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
       ImageSizeCache->{{0.9999999999999885, 99.}, {-45.63709679633033, 
        40.080000000000005`}}],
      MouseAppearanceTag["NetworkGraphics"]],
     AllowKernelInitialization->False,
     UnsavedVariables:>{$CellContext`flag}]],
   DefaultBaseStyle->{
    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
   FormatType->TraditionalForm,
   FrameTicks->None,
   ImageSize->100], "]"}]], "Input",
 CellChangeTimes->{{3.9005112903122897`*^9, 3.9005112968238726`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"9b8abc7a-c5f9-416c-8b75-4dca07c99019"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{1, 2, 3}, {1, 3, 4}, {1, 4, 2}, {2, 4, 3}}, {
      Null, {{1, 2}, {2, 3}, {1, 3}, {3, 4}, {2, 4}, {1, 4}}}, {
      GraphLayout -> "TutteEmbedding"}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{-1.8369701987210297`*^-16, 1.}, {
       0.8660254037844387, -0.4999999999999997}, {
       0., -5.551115123125783*^-17}, {-0.8660254037844385, \
-0.5000000000000004}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}, 
          0.020399597244776385`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.020399597244776385], DiskBox[2, 0.020399597244776385], 
         DiskBox[3, 0.020399597244776385], 
         DiskBox[4, 0.020399597244776385]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.900511299289113*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"a788faa9-b124-4dad-9a2a-1281180f4fe4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlanarFaceList", "[", 
  GraphicsBox[
   NamespaceBox["NetworkGraphics",
    DynamicModuleBox[{Typeset`graph = HoldComplete[
      Graph[{1, 2, 3, 4}, {Null, 
        SparseArray[
        Automatic, {4, 4}, 0, {
         1, {{0, 3, 6, 9, 12}, {{2}, {3}, {4}, {1}, {3}, {4}, {1}, {2}, {4}, {
           1}, {2}, {3}}}, Pattern}]}, {
       GraphLayout -> "StarEmbedding", ImageSize -> 100, PlotTheme -> 
        "Minimal"}]], Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
        Hue[0.6225, 0.6175, 0.9], 
        LineBox[{{0., 0.}, {0.8660254037844389, -0.5000000000000012}}], 
        LineBox[{{0., 0.}, {1.8369701987210297`*^-16, 1.}}], 
        LineBox[{{0., 0.}, {-0.8660254037844386, -0.49999999999999917`}}], 
        LineBox[{{0.8660254037844389, -0.5000000000000012}, {
         1.8369701987210297`*^-16, 1.}}], 
        LineBox[{{
         0.8660254037844389, -0.5000000000000012}, {-0.8660254037844386, \
-0.49999999999999917`}}], 
        LineBox[{{1.8369701987210297`*^-16, 
         1.}, {-0.8660254037844386, -0.49999999999999917`}}]}, {
        Directive[
         Hue[0.6225, 0.6175, 0.9], 
         EdgeForm[
          Hue[0.6225, 0.6175, 0.9]]], 
        TagBox[
         DiskBox[{0., 0.}, {0.040799194489552826`, 0.040799194489552826`}], 
         "DynamicName", BoxID -> "VertexID$1"], 
        TagBox[
         DiskBox[{0.8660254037844389, -0.5000000000000012}, {
          0.040799194489552826`, 0.040799194489552826`}], "DynamicName", 
         BoxID -> "VertexID$2"], 
        TagBox[
         DiskBox[{1.8369701987210297`*^-16, 1.}, {0.040799194489552826`, 
          0.040799194489552826`}], "DynamicName", BoxID -> "VertexID$3"], 
        TagBox[
         DiskBox[{-0.8660254037844386, -0.49999999999999917`}, {
          0.040799194489552826`, 0.040799194489552826`}], "DynamicName", 
         BoxID -> "VertexID$4"]}}], $CellContext`flag}, 
     TagBox[
      DynamicBox[GraphComputation`NetworkGraphicsBox[
       3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
       CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
        SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
       ImageSizeCache->{{0.9999999999999885, 99.}, {-45.63709679633033, 
        40.080000000000005`}}],
      MouseAppearanceTag["NetworkGraphics"]],
     AllowKernelInitialization->False,
     UnsavedVariables:>{$CellContext`flag}]],
   DefaultBaseStyle->{
    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
   FormatType->TraditionalForm,
   FrameTicks->None,
   ImageSize->100], "]"}]], "Input",
 CellChangeTimes->{{3.9005113300493526`*^9, 3.9005113336118994`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"3ea7db2f-786d-4019-92dc-41098f50878d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9005113340892286`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"154eacda-aa5d-4473-ab58-5c1f818743b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "=", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4}, {Null, 
          SparseArray[
          Automatic, {4, 4}, 0, {
           1, {{0, 3, 6, 9, 12}, {{2}, {3}, {4}, {1}, {3}, {4}, {1}, {2}, {
             4}, {1}, {2}, {3}}}, Pattern}]}, {
         GraphLayout -> "StarEmbedding", ImageSize -> 100, PlotTheme -> 
          "Minimal"}]], Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
          Hue[0.6225, 0.6175, 0.9], 
          LineBox[{{0., 0.}, {0.8660254037844389, -0.5000000000000012}}], 
          LineBox[{{0., 0.}, {1.8369701987210297`*^-16, 1.}}], 
          LineBox[{{0., 0.}, {-0.8660254037844386, -0.49999999999999917`}}], 
          
          LineBox[{{0.8660254037844389, -0.5000000000000012}, {
           1.8369701987210297`*^-16, 1.}}], 
          
          LineBox[{{
           0.8660254037844389, -0.5000000000000012}, {-0.8660254037844386, \
-0.49999999999999917`}}], 
          
          LineBox[{{1.8369701987210297`*^-16, 
           1.}, {-0.8660254037844386, -0.49999999999999917`}}]}, {
          Directive[
           Hue[0.6225, 0.6175, 0.9], 
           EdgeForm[
            Hue[0.6225, 0.6175, 0.9]]], 
          TagBox[
           DiskBox[{0., 0.}, {0.040799194489552826`, 0.040799194489552826`}], 
           "DynamicName", BoxID -> "VertexID$1"], 
          TagBox[
           
           DiskBox[{0.8660254037844389, -0.5000000000000012}, {
            0.040799194489552826`, 0.040799194489552826`}], "DynamicName", 
           BoxID -> "VertexID$2"], 
          TagBox[
           
           DiskBox[{1.8369701987210297`*^-16, 1.}, {0.040799194489552826`, 
            0.040799194489552826`}], "DynamicName", BoxID -> "VertexID$3"], 
          TagBox[
           
           DiskBox[{-0.8660254037844386, -0.49999999999999917`}, {
            0.040799194489552826`, 0.040799194489552826`}], "DynamicName", 
           BoxID -> "VertexID$4"]}}], $CellContext`flag}, 
       TagBox[
        DynamicBox[GraphComputation`NetworkGraphicsBox[
         3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
         CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
          SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
         ImageSizeCache->{{0.9999999999999885, 99.}, {-45.63709679633033, 
          40.080000000000005`}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False,
       UnsavedVariables:>{$CellContext`flag}]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None,
     ImageSize->100]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coloring", "=", 
   RowBox[{"FindPlanarColoring", "[", 
    RowBox[{"g", ",", 
     RowBox[{"ColorData", "[", 
      RowBox[{"106", ",", "\"\<ColorList\>\""}], "]"}]}], "]"}]}], ";", 
  RowBox[{"Graphics", "[", 
   RowBox[{"GraphicsComplex", "[", 
    RowBox[{
     RowBox[{"GraphEmbedding", "[", "g", "]"}], ",", 
     RowBox[{"Reverse", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Polygon", "[", 
           RowBox[{
            RowBox[{"PlanarFaceList", "[", "g", "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
          RowBox[{"coloring", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "coloring", "]"}]}], "}"}]}], "]"}]}]}], 
    "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.900511350724658*^9, 3.9005113836403704`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"0e314f81-923a-478b-9853-5fb5eb6729e0"],

Cell[BoxData[
 GraphicsBox[
  GraphicsComplexBox[{{0., 0.}, {0.8660254037844389, -0.5000000000000012}, {
   1.8369701987210297`*^-16, 
   1.}, {-0.8660254037844386, -0.49999999999999917`}}, {
    {RGBColor[0.448, 0.69232, 0.1538], PolygonBox[{2, 4, 3}]}, 
    {RGBColor[0.91, 0.318, 0.243], PolygonBox[{1, 4, 2}]}, 
    {RGBColor[0.97, 0.606, 0.081], PolygonBox[{1, 3, 4}]}, 
    {RGBColor[0.34398, 0.49112, 0.89936], PolygonBox[{1, 2, 3}]}}]]], "Output",
 CellChangeTimes->{3.9005113844623346`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"e26aec9f-ef57-45ff-af00-35fdfaa9d039"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["coloring"], "Input",
 CellChangeTimes->{{3.9005114037390566`*^9, 3.9005114048420734`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"7521cde1-5379-4e03-99d3-39d452ec0768"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|"color" -> RGBColor[0.34398, 0.49112, 0.89936]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[0.97, 0.606, 0.081]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[0.91, 0.318, 0.243]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[0.448, 0.69232, 0.1538]|>,
    "RGBColorSwatchTemplate"]}], "}"}]], "Output",
 CellChangeTimes->{3.9005114051415243`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"4b88dd0d-3f65-452a-ac31-f43adf738621"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "[", 
  RowBox[{"PlanarFaceList", "[", "g", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9005114106060452`*^9, 3.9005114252690306`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"c1287410-3c58-4589-bab7-52e1c86c2bfd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "4", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.900511425626046*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"ced0a033-e685-47f0-9339-9b33cceb321d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlanarFaceList", "[", "g", "]"}]], "Input",
 CellLabel->"In[33]:=",ExpressionUUID->"d0969d20-dc33-4ed6-9128-2eecf0c2b298"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9005114738843937`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"d26ad118-693b-482f-97cd-4e7282cf8091"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"CanonicalGraph", "[", "g", "]"}], ",", 
   RowBox[{"GraphLayout", "->", "\"\<PlanarEmbedding\>\""}], ",", 
   RowBox[{"VertexLabels", "->", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9005114327745657`*^9, 3.900511462217266*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"1f7a5426-b1fb-4b5c-ac6d-f81756a2e7d2"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4}, {Null, 
       SparseArray[
       Automatic, {4, 4}, 0, {
        1, {{0, 3, 6, 9, 12}, {{2}, {3}, {4}, {1}, {3}, {4}, {1}, {2}, {4}, {
          1}, {2}, {3}}}, Pattern}]}, {
      GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
       VertexLabels -> {Automatic}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
        ArrowBox[{{{0., 0.}, {3., 0.}}, {{0., 0.}, {1., 1.}}, {{0., 0.}, {0., 
         3.}}, {{3., 0.}, {1., 1.}}, {{3., 0.}, {0., 3.}}, {{1., 1.}, {0., 
         3.}}}, 0.030239520958083826`]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 0.}, 0.030239520958083826], 
         InsetBox["1", {-0.029935598461011324, -0.029935598461011313}, 
          ImageScaled[{1.0303300858899107, 1.0303300858899105}],
          BaseStyle->"Graphics"]}, {DiskBox[{3., 0.}, 0.030239520958083826], 
         InsetBox["2", {3.0391127442805677, -0.016201029142641845}, 
          ImageScaled[{-0.19290964938346478, 0.7870125742738179}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.030239520958083826], 
         InsetBox["3", {1.0299355984610115, 1.0299355984610115}, ImageScaled[{-0.030330085889910374, -0.03033008588991093}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 3.}, 0.030239520958083826], 
         InsetBox["4", {-0.016201029142641824, 3.0391127442805677}, 
          ImageScaled[{0.7870125742738173, -0.192909649383465}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->100]], "Output",
 CellChangeTimes->{{3.900511437120142*^9, 3.900511462532606*^9}},
 CellLabel->"Out[32]=",ExpressionUUID->"0ed40ed2-e20f-4441-ae88-769c88d5b432"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"GraphEmbedding", "[", "]"}]], "Input",
 CellChangeTimes->{{3.900511500047056*^9, 
  3.900511502258116*^9}},ExpressionUUID->"d8a9e3d2-990d-4071-8fcd-\
e6848738a885"]
}, Open  ]]
},
WindowSize->{478, 525.5},
WindowMargins->{{Automatic, -4.5}, {Automatic, 0}},
TaggingRules-><|
 "Openers" -> <|"ExampleSubsection" -> <|"58" -> Closed, "59" -> Closed|>|>|>,
FrontEndVersion->"14.0 for Microsoft Windows (64-bit) (August 1, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"6476ccba-2433-4436-ba0c-21876bd435e3"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 288, 6, 28, "Input",ExpressionUUID->"e0b361c3-99da-42a9-b096-74aeae10cb67"],
Cell[871, 30, 1590, 30, 376, "Output",ExpressionUUID->"7b864851-8a78-4f03-895d-f07b46628931"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2498, 65, 248, 4, 28, "Input",ExpressionUUID->"9412dfc8-d486-4858-bb6b-5cebe7d98b1d"],
Cell[2749, 71, 604, 12, 376, "Output",ExpressionUUID->"df15bf6d-731b-41ec-a561-e47d4ac823ab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3390, 88, 254, 4, 28, "Input",ExpressionUUID->"ddd78bed-6061-4da6-b362-847810210841"],
Cell[3647, 94, 1050, 40, 51, "Output",ExpressionUUID->"58e7ed75-ee24-457e-a620-de27a5e362db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4734, 139, 290, 5, 28, "Input",ExpressionUUID->"5c9e5ded-3671-4eaf-8c55-ae9884887aa9"],
Cell[5027, 146, 643, 11, 376, "Output",ExpressionUUID->"b3c4b835-01e7-4a57-89bf-9eaee2ccbe86"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5707, 162, 255, 6, 28, "Input",ExpressionUUID->"5a05c0f3-2033-43a2-9416-4bfea3372cd8"],
Cell[5965, 170, 1322, 29, 376, "Output",ExpressionUUID->"845e0c49-6b91-4494-bffd-b91036ea6670"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7324, 204, 254, 5, 28, "Input",ExpressionUUID->"1f71b6a6-8590-4d25-848c-f8aa0ff53b8d"],
Cell[7581, 211, 7011, 101, 376, "Output",ExpressionUUID->"e63a8d21-e7ce-4f7e-a35a-b6c4b47a3ebd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14629, 317, 326, 7, 28, "Input",ExpressionUUID->"5e60e24c-bfba-4c7a-9698-4271c5710f57"],
Cell[14958, 326, 1323, 29, 376, "Output",ExpressionUUID->"611ffd20-0020-4545-8225-2cec9cd231ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16318, 360, 376, 8, 28, "Input",ExpressionUUID->"5c57c8b2-ea44-49d7-a190-14600f8a61b5"],
Cell[16697, 370, 4622, 75, 376, "Output",ExpressionUUID->"f5b94977-30ab-41cc-a0ed-dad563461865"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21356, 450, 324, 7, 28, "Input",ExpressionUUID->"07a64187-b89e-47e0-8bdb-b876652ca013"],
Cell[21683, 459, 1000, 24, 376, "Output",ExpressionUUID->"f975562d-6787-4129-9196-6d868ab75d4d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22720, 488, 376, 8, 48, "Input",ExpressionUUID->"e73c9130-6c3a-4de3-bb32-007fce1ba72a"],
Cell[23099, 498, 2573, 44, 346, "Output",ExpressionUUID->"e1d1599b-6259-4db6-950d-7ac1d49ef89a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25709, 547, 541, 13, 86, "Input",ExpressionUUID->"88f6405e-31bb-4986-a838-d015de933d96"],
Cell[26253, 562, 152, 2, 32, "Output",ExpressionUUID->"cc2b2f35-2f77-4aa6-b3b1-fb40b6b991e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26442, 569, 356, 8, 28, "Input",ExpressionUUID->"4392bf04-65ba-43f5-9dbb-4ec2f196193c"],
Cell[26801, 579, 1323, 29, 346, "Output",ExpressionUUID->"afd108f2-722e-441f-9052-fa654057ce4b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28161, 613, 172, 3, 28, "Input",ExpressionUUID->"3c3fc5d8-56df-49ae-867c-9b818af77818"],
Cell[28336, 618, 172184, 3627, 1352, "Output",ExpressionUUID->"f3091cc3-814e-44ad-9aa7-0c2b851879df"]
}, Closed]],
Cell[CellGroupData[{
Cell[200557, 4250, 359, 7, 24, "Input",ExpressionUUID->"214f8675-b20a-4376-b2ad-b6710aa9086b"],
Cell[200919, 4259, 1999, 54, 147, "Output",ExpressionUUID->"2537385a-77f8-48e5-9d15-bb37d8c47388"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202955, 4318, 396, 9, 67, "Input",ExpressionUUID->"0410434a-35f7-48ac-99a5-da6683feebd3"],
Cell[203354, 4329, 2673, 42, 346, "Output",ExpressionUUID->"4ddbd8d6-8f3e-4d8d-9d50-15f21f40d14f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[206064, 4376, 407, 10, 48, "Input",ExpressionUUID->"e3cff3b9-9459-4b9b-80c2-383163b63fd4"],
Cell[206474, 4388, 3649, 59, 345, "Output",ExpressionUUID->"3ed2dff6-41d7-43f6-abb3-544b533aebad"]
}, Closed]],
Cell[210138, 4450, 429, 12, 59, "Text",ExpressionUUID->"7f68016a-2d5c-4fb4-88e4-9e6e98308fea",
 CellID->848746617],
Cell[210570, 4464, 455, 9, 67, "Input",ExpressionUUID->"17689c84-d2d3-46fe-b17e-ef7c3e25022d"],
Cell[CellGroupData[{
Cell[211050, 4477, 5823, 127, 103, "Input",ExpressionUUID->"52e8967f-e306-42ac-b9c9-914e1b3411a6"],
Cell[216876, 4606, 229, 4, 32, "Output",ExpressionUUID->"8588a04e-d877-43bc-b092-b6f18eeb9d57"]
}, Open  ]],
Cell[217120, 4613, 199, 3, 35, "Text",ExpressionUUID->"e3a5a403-a34a-4ce1-b213-2912328ff7db"],
Cell[CellGroupData[{
Cell[217344, 4620, 326, 7, 28, "Input",ExpressionUUID->"de6af698-0182-4c2c-ab0b-b109d471949b"],
Cell[217673, 4629, 2251, 41, 376, "Output",ExpressionUUID->"c3586b50-7c39-4a1f-bbcc-c11dfe8adf86"]
}, Open  ]],
Cell[CellGroupData[{
Cell[219961, 4675, 369, 8, 28, "Input",ExpressionUUID->"cc6db3de-5968-4310-bcff-9b749671a587"],
Cell[220333, 4685, 1282, 29, 346, "Output",ExpressionUUID->"97a19370-9026-4762-b9b9-a88aba07975a"]
}, Closed]],
Cell[CellGroupData[{
Cell[221652, 4719, 418, 9, 24, "Input",ExpressionUUID->"5c97ca38-d07e-44f7-a757-30b8abf2dd7b"],
Cell[222073, 4730, 928, 23, 376, "Output",ExpressionUUID->"58500796-8574-4eea-9cf8-f5f232382d4c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[223038, 4758, 408, 9, 28, "Input",ExpressionUUID->"0878da7d-cd53-4df8-b7c3-fc3de105929d"],
Cell[223449, 4769, 421, 11, 132, "Output",ExpressionUUID->"b9aa7dfe-8f19-4128-a69e-1efb04568ee7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[223907, 4785, 2169, 65, 124, "Input",ExpressionUUID->"d07a3ed3-da52-4526-ad62-27d3423a3de0"],
Cell[226079, 4852, 2191, 65, 128, "Output",ExpressionUUID->"73f2781b-04b9-4f37-a9c1-209ab18b64a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228307, 4922, 2558, 77, 143, "Input",ExpressionUUID->"12970ec9-1fb0-439e-9f3f-17f446aac402"],
Cell[230868, 5001, 1001, 24, 346, "Output",ExpressionUUID->"084d2851-f648-4949-b21b-e8ae28ff6c45"]
}, Open  ]],
Cell[CellGroupData[{
Cell[231906, 5030, 980, 31, 48, "Input",ExpressionUUID->"4b176c8b-c0f5-4a60-bdea-03b2ae27ae50"],
Cell[232889, 5063, 979, 31, 52, "Output",ExpressionUUID->"8c039445-c96a-4d87-a419-c2bd8aa07d4e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[233905, 5099, 481, 13, 28, "Input",ExpressionUUID->"2409c066-e248-4d4b-83f2-078bae1ce1e7"],
Cell[234389, 5114, 482, 13, 32, "Output",ExpressionUUID->"4e67561a-dc19-45c4-9938-e2e386133712"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234908, 5132, 2484, 63, 219, "Input",ExpressionUUID->"927edd24-1c3d-4aca-ac06-b4dec03a4f37"],
Cell[237395, 5197, 2500, 50, 347, "Output",ExpressionUUID->"40aa7d34-d696-4a57-b2f9-933c757cd75c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239932, 5252, 2551, 65, 219, "Input",ExpressionUUID->"0497ec82-ca4f-4bf8-ac97-7c2174c432e2"],
Cell[242486, 5319, 2502, 50, 347, "Output",ExpressionUUID->"493f778f-6a26-49a3-9cf8-8233653e93ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[245025, 5374, 951, 30, 67, "Input",ExpressionUUID->"d7ef0f1c-339c-4cea-99e9-7e8a142bb3c1"],
Cell[245979, 5406, 714, 18, 203, "Output",ExpressionUUID->"8dc1eeda-7bb4-4d17-aa7b-b5eb3f48258a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[246730, 5429, 1185, 35, 48, "Input",ExpressionUUID->"5d811785-c680-49aa-96d7-e0a1dd02548e"],
Cell[247918, 5466, 1293, 30, 209, "Output",ExpressionUUID->"91679d2e-c848-415f-bb56-b7576988a1f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[249248, 5501, 1278, 37, 48, "Input",ExpressionUUID->"4762fc4e-16c5-4b13-8c97-554e25a6a59f"],
Cell[250529, 5540, 1293, 30, 209, "Output",ExpressionUUID->"e4f818a1-9276-4124-804e-0d2b6fec1ebf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[251859, 5575, 1381, 40, 105, "Input",ExpressionUUID->"801c972b-2ff1-49c7-98c5-96177bc8b743"],
Cell[253243, 5617, 1440, 33, 273, "Output",ExpressionUUID->"8e82813c-7d0b-468f-83ce-5b8f18602482"]
}, Open  ]],
Cell[CellGroupData[{
Cell[254720, 5655, 2734, 70, 238, "Input",ExpressionUUID->"9f869208-f4af-4a5b-8b30-e93aeb08e77a"],
Cell[257457, 5727, 2511, 50, 347, "Output",ExpressionUUID->"e3e1bb79-20c4-460c-abd0-9df11d52f278"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260005, 5782, 2835, 72, 238, "Input",ExpressionUUID->"ce25cef3-eff3-4c24-843b-7689864bbad8"],
Cell[262843, 5856, 2495, 50, 376, "Output",ExpressionUUID->"2774acc3-5e69-4780-b292-0d841d5c4f65"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265375, 5911, 2940, 75, 238, "Input",ExpressionUUID->"c051a935-4b94-403b-9e00-c2c59b42acfd"],
Cell[268318, 5988, 2513, 51, 376, "Output",ExpressionUUID->"8cbbba11-ba8f-4f83-a37f-bac20f8fadb4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[270868, 6044, 3046, 78, 257, "Input",ExpressionUUID->"7ac2f423-5ba1-42f7-af92-b7613f27093d"],
Cell[273917, 6124, 2522, 51, 376, "Output",ExpressionUUID->"3d114744-0a67-4a7a-9201-9951717cefea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[276476, 6180, 1189, 31, 67, "Input",ExpressionUUID->"6e6c0f92-369c-4350-b6dd-2255775c2572"],
Cell[277668, 6213, 152, 2, 32, "Output",ExpressionUUID->"7b3ef730-4945-43f3-93e3-a5b13b59cbf9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[277857, 6220, 2734, 70, 124, "Input",ExpressionUUID->"8a85f58b-c93e-4df8-ab8f-6a7b424ec8f6"],
Cell[280594, 6292, 2656, 53, 376, "Output",ExpressionUUID->"699f9073-97bb-4cf3-adab-c7bdb77a9ece"]
}, Open  ]],
Cell[CellGroupData[{
Cell[283287, 6350, 3107, 81, 276, "Input",ExpressionUUID->"91712c65-a297-445f-857d-17ef9656e649"],
Cell[286397, 6433, 3100, 60, 376, "Output",ExpressionUUID->"375052bd-230a-4352-a288-2210700c77a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[289534, 6498, 3256, 85, 276, "Input",ExpressionUUID->"faa1a713-da9a-41d5-ac7e-a26ebc5f6db6"],
Cell[292793, 6585, 3093, 60, 376, "Output",ExpressionUUID->"e6ca6768-3961-4552-af9e-e257344bac7c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[295923, 6650, 3554, 93, 295, "Input",ExpressionUUID->"33dcd42f-ec2c-4b1d-b24e-c06e8af1938b"],
Cell[299480, 6745, 3133, 60, 376, "Output",ExpressionUUID->"aa5a930e-9f51-437c-a3f6-ee738465d9cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[302650, 6810, 3701, 97, 314, "Input",ExpressionUUID->"b0d067e1-8f29-48f0-a3f2-2f5ccc551df5"],
Cell[306354, 6909, 3160, 61, 376, "Output",ExpressionUUID->"24ee379c-70bf-4a88-8ae2-760fc2ded5b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[309551, 6975, 3775, 99, 314, "Input",ExpressionUUID->"18ef57ab-e2a7-4cce-89e1-11ed09534396"],
Cell[313329, 7076, 3169, 61, 376, "Output",ExpressionUUID->"29f07c74-a66d-4559-a8ca-e6bcbfb34f9a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[316535, 7142, 3897, 100, 295, "Input",ExpressionUUID->"5ff9bb05-1732-4bd6-8efd-bf5255945e46"],
Cell[320435, 7244, 3169, 61, 376, "Output",ExpressionUUID->"ea846fd3-508e-49de-b0d2-53bb13b811d3"]
}, Closed]],
Cell[CellGroupData[{
Cell[323641, 7310, 240, 4, 24, "Input",ExpressionUUID->"748750e8-9f8a-47b4-8b52-6ff86e797ea1"],
Cell[323884, 7316, 168, 3, 32, "Output",ExpressionUUID->"e05a738f-ca15-4232-8eaf-abea2ce9861e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[324089, 7324, 405, 10, 28, "Input",ExpressionUUID->"051e6932-bb00-440c-a7f7-1214fc41e40e"],
Cell[324497, 7336, 1340, 44, 90, "Output",ExpressionUUID->"cc6b30ec-dd44-481f-a396-4a4a13a79d56"]
}, Open  ]],
Cell[CellGroupData[{
Cell[325874, 7385, 450, 12, 28, "Input",ExpressionUUID->"7f113d43-f14f-48d1-840c-43760d40a780"],
Cell[326327, 7399, 519, 10, 52, "Output",ExpressionUUID->"28a22e43-0f4b-4b28-a836-d08266170f34"]
}, Open  ]],
Cell[CellGroupData[{
Cell[326883, 7414, 507, 14, 28, "Input",ExpressionUUID->"7a581ece-1d9d-4bea-a8c9-b6126c7509ef"],
Cell[327393, 7430, 1341, 45, 90, "Output",ExpressionUUID->"b5a8205c-838f-4bed-90ac-76bd2ce52e19"]
}, Open  ]],
Cell[CellGroupData[{
Cell[328771, 7480, 507, 14, 28, "Input",ExpressionUUID->"fca04bd2-8b54-4daa-a043-4f93614ba491"],
Cell[329281, 7496, 1344, 45, 90, "Output",ExpressionUUID->"21c4b58e-079e-4da5-9839-7e3ade8e5408"]
}, Open  ]],
Cell[CellGroupData[{
Cell[330662, 7546, 451, 12, 28, "Input",ExpressionUUID->"c7f73693-58bd-45f3-af6e-98951878c407"],
Cell[331116, 7560, 1122, 37, 52, "Output",ExpressionUUID->"6ba53237-f146-4200-93e7-4409acc3b276"]
}, Open  ]],
Cell[CellGroupData[{
Cell[332275, 7602, 776, 21, 48, "Input",ExpressionUUID->"286d9309-e535-474c-9797-4c5c0ad9b85b"],
Cell[333054, 7625, 3494, 66, 376, "Output",ExpressionUUID->"0cb4a7fb-f809-46ad-85bd-b14aa0582ecd"]
}, Open  ]],
Cell[336563, 7694, 369, 7, 58, "Text",ExpressionUUID->"0d7d8cf2-a347-41e9-9693-754427aa9931"],
Cell[CellGroupData[{
Cell[336957, 7705, 331, 8, 28, "Input",ExpressionUUID->"1aa4596b-a227-4bef-9c72-96c2c012cf09"],
Cell[337291, 7715, 4672, 93, 347, "Output",ExpressionUUID->"0d5bf20b-d766-4bc0-b1c5-7497d4dd48f0"]
}, Open  ]],
Cell[341978, 7811, 252, 6, 58, "Text",ExpressionUUID->"f71f7028-7eac-4d47-8004-c0970e311ff1"],
Cell[CellGroupData[{
Cell[342255, 7821, 829, 22, 86, "Input",ExpressionUUID->"967e63fc-ae57-4db2-8afa-2a93f169c4e2"],
Cell[343087, 7845, 3444, 65, 347, "Output",ExpressionUUID->"5808b48d-19e0-4c68-8906-ef4974c3028e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[346568, 7915, 326, 8, 28, "Input",ExpressionUUID->"7afe353f-be6e-4e00-b95e-a1c04f2879b6"],
Cell[346897, 7925, 1351, 30, 346, "Output",ExpressionUUID->"cb89a156-bfc9-443f-828d-9cd9512b9831"]
}, Open  ]],
Cell[CellGroupData[{
Cell[348285, 7960, 382, 9, 48, "Input",ExpressionUUID->"83607188-50b9-4807-8f82-2c0a221ba407"],
Cell[348670, 7971, 4626, 76, 346, "Output",ExpressionUUID->"1d73e5fc-40c1-4769-b7f2-b6c42215b547"]
}, Open  ]],
Cell[CellGroupData[{
Cell[353333, 8052, 547, 14, 86, "Input",ExpressionUUID->"9c3bf8b1-7cc5-47f6-bae4-16b40f210d48"],
Cell[353883, 8068, 158, 3, 32, "Output",ExpressionUUID->"54488696-87aa-4802-810c-51fef774ab42"]
}, Open  ]],
Cell[354056, 8074, 198, 3, 35, "Text",ExpressionUUID->"fefd0db3-daab-4588-a8f8-2d00c0657415"],
Cell[CellGroupData[{
Cell[354279, 8081, 291, 7, 28, "Input",ExpressionUUID->"808c2627-5c04-4409-b2ed-e19180902537"],
Cell[354573, 8090, 6990, 102, 376, "Output",ExpressionUUID->"7056b81b-041f-4bd8-995b-a3b25235fb3e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[361600, 8197, 243, 5, 28, "Input",ExpressionUUID->"74f54372-4dac-4c11-bd6b-29ec766ac406"],
Cell[361846, 8204, 5387, 81, 376, "Output",ExpressionUUID->"bbdf9d12-725b-420a-83e2-b14a5e74ec75"]
}, Open  ]],
Cell[CellGroupData[{
Cell[367270, 8290, 333, 8, 28, "Input",ExpressionUUID->"92c49134-af2c-4912-8828-30748066b0d6"],
Cell[367606, 8300, 3704, 79, 376, "Output",ExpressionUUID->"a7127816-a648-4149-a72f-c55b035a2939"]
}, Open  ]],
Cell[CellGroupData[{
Cell[371347, 8384, 332, 8, 28, "Input",ExpressionUUID->"8bd8bf80-27ec-4f50-a51f-7d28bf1cad0d"],
Cell[371682, 8394, 4117, 79, 372, "Output",ExpressionUUID->"7230909f-18a6-40b0-8b63-643a912f4b9c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[375836, 8478, 567, 14, 28, "Input",ExpressionUUID->"42ac34a9-45ed-4c3d-a2f0-2379e7a7e8b8"],
Cell[376406, 8494, 5266, 100, 378, "Output",ExpressionUUID->"6179a04f-0ebf-4705-9217-dea5334476ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[381709, 8599, 508, 12, 28, "Input",ExpressionUUID->"9bd4a70b-8d1b-4e2e-987c-eef8d2b3775f"],
Cell[382220, 8613, 1439, 27, 382, "Output",ExpressionUUID->"982329ef-d0c1-4638-9135-dacd6faabd51"]
}, Open  ]],
Cell[383674, 8643, 154, 3, 28, "Input",ExpressionUUID->"738370e7-becb-4eb0-b6d5-205daeebc067"],
Cell[CellGroupData[{
Cell[383853, 8650, 510, 13, 28, "Input",ExpressionUUID->"6dadc962-7a3a-4f63-afce-5ab83a49c872"],
Cell[384366, 8665, 4168, 94, 317, "Output",ExpressionUUID->"65b989a5-4318-408b-9ca9-a8f2aaaca290"]
}, Open  ]],
Cell[CellGroupData[{
Cell[388571, 8764, 516, 13, 28, "Input",ExpressionUUID->"6befbcee-28a1-4c38-860b-3d6f9c34b938"],
Cell[389090, 8779, 4451, 87, 331, "Output",ExpressionUUID->"23c47ec8-f18a-4471-9832-79436c24260b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[393578, 8871, 690, 18, 28, "Input",ExpressionUUID->"b690f84b-b599-4290-b223-cd0e278453cb"],
Cell[394271, 8891, 159, 3, 32, "Output",ExpressionUUID->"298e81ee-2891-49eb-ade3-b891951d22ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[394467, 8899, 635, 16, 28, "Input",ExpressionUUID->"54d23c43-9f24-4145-8934-a963ae443b0f"],
Cell[395105, 8917, 3496, 71, 265, "Output",ExpressionUUID->"62ba5934-7d13-4377-9409-13c7408ed86e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[398638, 8993, 821, 21, 48, "Input",ExpressionUUID->"c7db47ad-3730-45d7-805d-9cc06b40701a"],
Cell[399462, 9016, 157, 3, 32, "Output",ExpressionUUID->"b005d4ee-a87d-4d85-8574-0c8f070114e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[399656, 9024, 260, 6, 28, "Input",ExpressionUUID->"80ec52af-ed9e-46b1-8bbd-c4fb88695dac"],
Cell[399919, 9032, 2337, 41, 376, "Output",ExpressionUUID->"a2a9ae26-1852-4719-b833-e5e84ba14fd5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[402293, 9078, 301, 7, 28, "Input",ExpressionUUID->"e8f4790e-f71d-46ba-92c1-7fa8f39f4d34"],
Cell[402597, 9087, 8538, 123, 376, "Output",ExpressionUUID->"5d146f1e-75c4-413c-ba34-4cb9ab6c081d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[411172, 9215, 228, 3, 67, "Section",ExpressionUUID->"6f1f9b61-995b-4936-97d2-515ec963b1a2"],
Cell[CellGroupData[{
Cell[411425, 9222, 173, 3, 45, "Subsubsection",ExpressionUUID->"1501dd78-83d2-4b92-8796-ced241b13e50"],
Cell[411601, 9227, 472, 13, 86, "Text",ExpressionUUID->"52c71e80-0ba8-49c8-a045-8de8badfd304",
 CellID->88445747],
Cell[412076, 9242, 1493, 48, 105, "Input",ExpressionUUID->"9b4940b7-9473-4eeb-88a3-dafe0e1f9da7",
 CellID->50322935],
Cell[413572, 9292, 140, 1, 35, "Text",ExpressionUUID->"71bce350-5694-428e-aba1-00866847a295",
 CellID->26631010],
Cell[413715, 9295, 363, 10, 28, "Input",ExpressionUUID->"3752fdf9-8c13-4476-bf60-6fb4eacce707",
 CellID->64213100],
Cell[414081, 9307, 433, 11, 58, "Text",ExpressionUUID->"4d55f454-ba24-4500-8719-d849b163a30a",
 CellID->98665820],
Cell[414517, 9320, 2027, 57, 219, "Input",ExpressionUUID->"e8ad13db-5d66-487f-9f34-d17745ede216",
 CellID->603418709],
Cell[416547, 9379, 135, 1, 35, "Text",ExpressionUUID->"6eb252e9-f655-4206-8da5-7f8a2a98adde",
 CellID->66050555],
Cell[CellGroupData[{
Cell[416707, 9384, 216, 5, 28, "Input",ExpressionUUID->"a395703a-3827-4124-ad61-0f9b4b8248a3",
 CellID->3997794],
Cell[416926, 9391, 25060, 395, 192, "Output",ExpressionUUID->"f2dd4ff9-f484-4c90-9ce8-2c6604fedda3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[442023, 9791, 165, 3, 28, "Input",ExpressionUUID->"ec03a4d4-cb1b-48d4-a7ee-1feeff44f16d",
 CellID->563762390],
Cell[442191, 9796, 155, 2, 32, "Output",ExpressionUUID->"f5292c9b-45ae-42e4-a9dc-d406f5a487ca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[442383, 9803, 191, 4, 28, "Input",ExpressionUUID->"bc4c0902-c86f-4ca7-a0f6-18ab3910a729"],
Cell[442577, 9809, 311, 11, 46, "Output",ExpressionUUID->"760904e0-03c5-4b0c-9feb-c90348a89938"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[442937, 9826, 169, 3, 37, "Subsubsection",ExpressionUUID->"06547598-2c21-4fc3-b7c7-8bec4ffe8b91"],
Cell[443109, 9831, 772, 20, 86, "Input",ExpressionUUID->"aee21d94-be40-4723-b702-8db37077f61b"],
Cell[CellGroupData[{
Cell[443906, 9855, 332, 7, 28, "Input",ExpressionUUID->"7e7b6a8d-55a3-496e-855f-d3b28e975366"],
Cell[444241, 9864, 13321, 275, 1680, "Output",ExpressionUUID->"bbc636c6-7592-4a54-94b0-2164e0f0a702"]
}, Open  ]],
Cell[457577, 10142, 138, 1, 35, "Text",ExpressionUUID->"eccd34b7-e89d-4f15-853c-40b26138a6d1",
 CellID->82370466],
Cell[CellGroupData[{
Cell[457740, 10147, 7757, 135, 37, "Input",ExpressionUUID->"0dac0aa9-2125-444b-958b-5531ad786991"],
Cell[465500, 10284, 389, 7, 52, "Output",ExpressionUUID->"2eb7a667-0f7e-4202-ab5a-4b5c8fb38b7d"]
}, Open  ]],
Cell[465904, 10294, 298, 7, 58, "Text",ExpressionUUID->"49dbd349-3018-4891-a954-05aab183c2c5",
 CellID->774295878],
Cell[CellGroupData[{
Cell[466227, 10305, 480, 12, 53, "Input",ExpressionUUID->"9eab75f5-a317-450b-a5f2-5eae6fb63d2b"],
Cell[466710, 10319, 266, 6, 32, "Output",ExpressionUUID->"58d9beda-a7ff-47ce-a5fb-2c05977f9567"]
}, Open  ]],
Cell[CellGroupData[{
Cell[467013, 10330, 646, 18, 48, "Input",ExpressionUUID->"2cb4fb8b-8039-4508-9e8f-3b8ac2859129"],
Cell[467662, 10350, 572, 19, 51, "Output",ExpressionUUID->"d47f635c-e098-4b85-b7d8-614d2e76a960"]
}, Open  ]],
Cell[CellGroupData[{
Cell[468271, 10374, 407, 11, 28, "Input",ExpressionUUID->"f68618a4-7324-4b4a-85fe-b4c6ed1cb921"],
Cell[468681, 10387, 246, 5, 32, "Output",ExpressionUUID->"6ac8a596-c709-4e0e-b940-2e05d83b558c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[468964, 10397, 209, 3, 28, "Input",ExpressionUUID->"bba5a261-f3de-47b0-a198-5cabbcbc8b2d"],
Cell[469176, 10402, 572, 19, 51, "Output",ExpressionUUID->"cb61981b-71d6-473c-8650-d7c56068a4ca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[469785, 10426, 244, 4, 28, "Input",ExpressionUUID->"336b4dbe-854a-4701-99fa-5a79cbc7d979"],
Cell[470032, 10432, 596, 20, 51, "Output",ExpressionUUID->"bdc6c0b8-f63c-4af1-906a-ac47a35315fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[470665, 10457, 280, 5, 28, "Input",ExpressionUUID->"78b7b411-2d23-4950-bd40-c8066f4b27c3"],
Cell[470948, 10464, 380, 7, 293, "Output",ExpressionUUID->"e6f92dd0-6871-4aca-8065-44109d5ba74d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[471365, 10476, 363, 9, 28, "Input",ExpressionUUID->"e7470c51-eff9-44e6-997d-ed37de561cd6"],
Cell[471731, 10487, 378, 7, 381, "Output",ExpressionUUID->"4e30f8e1-0e68-4328-b978-621ad1a27858"]
}, Open  ]],
Cell[CellGroupData[{
Cell[472146, 10499, 388, 10, 28, "Input",ExpressionUUID->"dfcbfe3f-74b3-410c-bf3c-aa85ac3cc433"],
Cell[472537, 10511, 380, 7, 381, "Output",ExpressionUUID->"fa17cb44-00b5-467d-9817-92dafcb18b83"]
}, Open  ]],
Cell[CellGroupData[{
Cell[472954, 10523, 415, 11, 42, "Input",ExpressionUUID->"0cea91c9-11c6-47ae-8e80-9b3a10efa7a2"],
Cell[473372, 10536, 380, 7, 293, "Output",ExpressionUUID->"95c5a6c4-083a-45f0-aac1-892af8cab916"]
}, Open  ]],
Cell[CellGroupData[{
Cell[473789, 10548, 415, 11, 45, "Input",ExpressionUUID->"f827e924-f326-41da-a291-677b444e1a58"],
Cell[474207, 10561, 378, 7, 293, "Output",ExpressionUUID->"51d03a7f-4743-485c-84c0-80d906fba35d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[474622, 10573, 386, 10, 28, "Input",ExpressionUUID->"bd08a23e-31ff-4403-85ca-116cef6d9f2c"],
Cell[475011, 10585, 382, 7, 381, "Output",ExpressionUUID->"9eb618bf-690f-48ad-9059-6c4d9a2d01ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[475430, 10597, 361, 9, 28, "Input",ExpressionUUID->"8c8af56b-251c-4711-b465-45c655227764"],
Cell[475794, 10608, 382, 7, 381, "Output",ExpressionUUID->"ac9022ec-6cea-46ab-b18c-0c0826907273"]
}, Closed]],
Cell[CellGroupData[{
Cell[476213, 10620, 216, 5, 24, "Input",ExpressionUUID->"17ea8a5b-4f67-427f-9bb5-51f8ae2df8df"],
Cell[476432, 10627, 548, 19, 51, "Output",ExpressionUUID->"6aee9f68-4182-4aa2-9744-cb8a97144c68"]
}, Open  ]],
Cell[CellGroupData[{
Cell[477017, 10651, 275, 7, 28, "Input",ExpressionUUID->"c8413176-e478-4a49-ac00-c31dad2388f9"],
Cell[477295, 10660, 537, 18, 51, "Output",ExpressionUUID->"c5e46355-c2d2-4ec5-bee7-1ec92876d91e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[477869, 10683, 424, 11, 28, "Input",ExpressionUUID->"07a02ad3-541e-48b2-9681-754aee05103e"],
Cell[478296, 10696, 387, 7, 381, "Output",ExpressionUUID->"f9ead070-ef2c-4d63-94db-85026fff4c37"]
}, Open  ]],
Cell[478698, 10706, 267, 6, 58, "Text",ExpressionUUID->"42c6a6d2-b848-404b-b629-de926b5cc0f4"],
Cell[CellGroupData[{
Cell[478990, 10716, 275, 7, 28, "Input",ExpressionUUID->"7575a051-135b-42a5-8b2c-731b6c494704"],
Cell[479268, 10725, 537, 18, 51, "Output",ExpressionUUID->"605cde37-9a08-4dda-9597-c716f07e42ff"]
}, Open  ]],
Cell[479820, 10746, 330, 7, 104, "Text",ExpressionUUID->"33ade972-04fb-4aaf-bc55-a5d81d553cbf"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[480199, 10759, 327, 5, 53, "Section",ExpressionUUID->"01e19e86-be8b-47e9-80b8-1c0daa724579"],
Cell[480529, 10766, 389, 12, 40, "Text",ExpressionUUID->"a03e179b-55bc-4806-a80f-96f268952b23",
 CellID->125735166],
Cell[480921, 10780, 537, 14, 48, "Input",ExpressionUUID->"d24569f9-5e03-4f65-a9e3-218f9d6732c5",
 CellID->72742369],
Cell[481461, 10796, 115, 1, 35, "Text",ExpressionUUID->"c3ded975-bcf1-4cd2-b6f1-fda93a58b38f",
 CellID->202301960],
Cell[CellGroupData[{
Cell[481601, 10801, 486, 12, 28, "Input",ExpressionUUID->"a2081200-b503-456d-bb2e-d77621435095",
 CellID->712535170],
Cell[482090, 10815, 5461, 128, 435, "Output",ExpressionUUID->"404fd01e-ba6c-432e-addb-40b73ea5af50"]
}, Open  ]],
Cell[487566, 10946, 137, 1, 35, "Text",ExpressionUUID->"b523b065-b66a-463c-a6b2-b756dec8f71e",
 CellID->2947777],
Cell[CellGroupData[{
Cell[487728, 10951, 157, 3, 28, "Input",ExpressionUUID->"361938ec-5386-489a-99f1-7722fced5e9a",
 CellID->941486348],
Cell[487888, 10956, 304, 6, 32, "Output",ExpressionUUID->"1ac786c7-47f8-4b26-83fa-ff0cb9ed0ddc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[488229, 10967, 613, 14, 28, "Input",ExpressionUUID->"18ee06c6-72e0-409d-87cf-a75be0a45487"],
Cell[488845, 10983, 255, 4, 32, "Output",ExpressionUUID->"fb7831e2-1588-4c2c-ae2d-93032efb3525"]
}, Open  ]],
Cell[489115, 10990, 114, 1, 35, "Text",ExpressionUUID->"b5c3c189-3133-414f-b141-a2714dd2e5c2",
 CellID->66564705],
Cell[CellGroupData[{
Cell[489254, 10995, 486, 12, 28, "Input",ExpressionUUID->"82b0dd1f-7134-4d17-a1af-f24e09ddd25d",
 CellID->735992689],
Cell[489743, 11009, 10781, 223, 212, "Output",ExpressionUUID->"4a7cf294-7729-4e99-92b0-ea69938b7821"]
}, Open  ]],
Cell[500539, 11235, 123, 1, 35, "Text",ExpressionUUID->"44a49f90-c5d7-4354-bda5-fda49e569f7f",
 CellID->433914096],
Cell[CellGroupData[{
Cell[500687, 11240, 156, 3, 28, "Input",ExpressionUUID->"c2f008e8-bac9-4144-a327-2c3d29fe7035",
 CellID->29365702],
Cell[500846, 11245, 279, 6, 32, "Output",ExpressionUUID->"c333bbde-e03b-4a99-9352-af9c05eeedf5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[501162, 11256, 615, 14, 28, "Input",ExpressionUUID->"5b8ff66c-253f-4237-9098-c0f4c6c5a25e"],
Cell[501780, 11272, 244, 4, 32, "Output",ExpressionUUID->"86a32c6a-7d08-44df-8672-0b7f64e161e6"]
}, Open  ]],
Cell[502039, 11279, 169, 3, 35, "Text",ExpressionUUID->"c485ac33-bcc4-49d6-99da-bead8bb07ecf",
 CellID->139887278],
Cell[CellGroupData[{
Cell[502233, 11286, 6774, 127, 81, "Input",ExpressionUUID->"c4d96bff-2935-48d5-83c1-b2ef8606ce46",
 CellID->10214033],
Cell[509010, 11415, 167, 2, 32, "Output",ExpressionUUID->"bd151786-983d-4e98-aa28-d3234c037e7f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[509214, 11422, 6916, 129, 81, "Input",ExpressionUUID->"5d40bd3d-7582-4e5d-b54e-8fb63918997e"],
Cell[516133, 11553, 156, 2, 32, "Output",ExpressionUUID->"4426f81a-6d1f-4f1c-b5cc-eb32d6992d20"]
}, Open  ]],
Cell[CellGroupData[{
Cell[516326, 11560, 6822, 127, 81, "Input",ExpressionUUID->"f3ed045a-bb90-42e0-9363-fd79e70e7783"],
Cell[523151, 11689, 167, 2, 32, "Output",ExpressionUUID->"c052a5ea-4a82-464e-b9e4-81e5f71ad8f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[523355, 11696, 6915, 129, 81, "Input",ExpressionUUID->"096ab365-f1cd-415c-b175-274898d71f22"],
Cell[530273, 11827, 154, 2, 32, "Output",ExpressionUUID->"bb095b4f-23c8-4030-a301-fe5f0e4ac767"]
}, Open  ]],
Cell[CellGroupData[{
Cell[530464, 11834, 548, 14, 31, "Input",ExpressionUUID->"0d29c099-8272-4f1e-99ba-c26c430a9eb4"],
Cell[531015, 11850, 194, 2, 32, "Output",ExpressionUUID->"d0da10bd-88fc-4dcc-b961-24a0feb8093b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[531246, 11857, 652, 16, 31, "Input",ExpressionUUID->"dcf64cb7-0a89-4497-a03c-b8462e04ffe1"],
Cell[531901, 11875, 192, 2, 32, "Output",ExpressionUUID->"e861aa09-7291-4a07-b7f8-2bf360261424"]
}, Open  ]],
Cell[532108, 11880, 183, 3, 35, "Text",ExpressionUUID->"564495c9-6eda-478a-9982-41caf040cf95"],
Cell[CellGroupData[{
Cell[532316, 11887, 325, 6, 28, "Input",ExpressionUUID->"6f73e84a-55a7-4a7d-9a15-903805a371ac"],
Cell[532644, 11895, 151, 2, 32, "Output",ExpressionUUID->"c4177e8d-e334-4a35-affe-d7285b143388"]
}, Open  ]],
Cell[532810, 11900, 207, 3, 35, "Text",ExpressionUUID->"15dfd2bf-a4c1-4707-8e9f-281723f8481e"],
Cell[CellGroupData[{
Cell[533042, 11907, 314, 6, 28, "Input",ExpressionUUID->"0661205d-0677-4fb2-8b66-d9afd7f32c29"],
Cell[533359, 11915, 154, 2, 32, "Output",ExpressionUUID->"a7736779-e805-462b-8db8-af03393ea346"]
}, Open  ]],
Cell[533528, 11920, 808, 23, 35, "Notes",ExpressionUUID->"9a621fa1-aaf4-48e8-be83-b87a7426d244",
 CellID->26546256],
Cell[534339, 11945, 246, 6, 35, "Text",ExpressionUUID->"571ddb48-4c74-41b2-8176-46747f7aae21"],
Cell[534588, 11953, 337, 7, 58, "Text",ExpressionUUID->"b41946ff-a25e-4df8-b94c-93b48cb7965e"],
Cell[CellGroupData[{
Cell[534950, 11964, 160, 3, 54, "Subsection",ExpressionUUID->"ad13eaf8-1c03-4ddd-9e65-5cf426e16218"],
Cell[535113, 11969, 141, 1, 35, "Text",ExpressionUUID->"e9f6064c-0550-49bc-8ab6-53e2a5f2f692",
 CellID->81631350],
Cell[535257, 11972, 896, 25, 86, "Input",ExpressionUUID->"817ab083-e012-46b6-afd2-9bf3c5cbe0c3",
 CellID->73609484],
Cell[536156, 11999, 125, 1, 35, "Text",ExpressionUUID->"586e2c8f-9d05-466a-ab65-3fe8d44a02ed",
 CellID->359901336],
Cell[CellGroupData[{
Cell[536306, 12004, 490, 12, 67, "Input",ExpressionUUID->"d990c2f1-c068-41a5-a1df-bc8ba63a20e0",
 CellID->619027],
Cell[536799, 12018, 7282, 176, 470, "Output",ExpressionUUID->"acfd27c7-d0ee-4c4f-8ccd-31074d4c3d21"]
}, Open  ]],
Cell[544096, 12197, 185, 4, 58, "Text",ExpressionUUID->"b8ec6d76-a5ec-4984-ae5f-7f9ab6b8d295",
 CellID->18305579],
Cell[CellGroupData[{
Cell[544306, 12205, 2663, 60, 95, "Input",ExpressionUUID->"c064d006-2f3a-4473-b02b-175f42c787d6",
 CellID->28392460],
Cell[546972, 12267, 191, 2, 32, "Output",ExpressionUUID->"ca98c979-cedd-4c0e-901e-f6f068ff9cfc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[547200, 12274, 2384, 50, 95, "Input",ExpressionUUID->"e7d8a961-fe22-439b-95e6-7fefa4098f54"],
Cell[549587, 12326, 153, 2, 32, "Output",ExpressionUUID->"775e0bfc-13fa-4e81-80e8-6e459bb2d3a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[549777, 12333, 2391, 50, 95, "Input",ExpressionUUID->"ecb7866b-a2bd-42c9-9da1-e83c7de00b4f"],
Cell[552171, 12385, 150, 2, 32, "Output",ExpressionUUID->"aca134b9-ec4d-41a1-8a59-5473ded89fbc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[552358, 12392, 2399, 50, 95, "Input",ExpressionUUID->"2f01e40f-cf17-4bf6-a86c-6962c157933a"],
Cell[554760, 12444, 150, 2, 32, "Output",ExpressionUUID->"8056a679-fae0-4265-a8fc-b36646f437c1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[554947, 12451, 4746, 101, 95, "Input",ExpressionUUID->"42e0b9f4-d352-48ea-85c6-264b23972a66"],
Cell[559696, 12554, 150, 2, 32, "Output",ExpressionUUID->"1dc98d3d-9e7f-4efc-bf20-49cbbb62027a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[559883, 12561, 4879, 104, 95, "Input",ExpressionUUID->"c7850ad2-2613-41e9-857e-4f5c5e0d9d4e"],
Cell[564765, 12667, 149, 2, 32, "Output",ExpressionUUID->"f04a2984-302c-49d4-9bd5-8d37425d75a9"]
}, Open  ]],
Cell[564929, 12672, 171, 3, 35, "Text",ExpressionUUID->"7bf996a9-d07d-477d-b35c-14b341edf0f7"],
Cell[CellGroupData[{
Cell[565125, 12679, 2568, 56, 95, "Input",ExpressionUUID->"d585d042-78be-4697-ae83-cc9ff56adb02"],
Cell[567696, 12737, 1692, 43, 98, "Output",ExpressionUUID->"3e1daf4c-fcf4-466b-9bf5-8736ec627b4a"]
}, Open  ]],
Cell[569403, 12783, 155, 3, 35, "Text",ExpressionUUID->"b8cd40df-4ad6-4a18-ad51-855879dff11c"],
Cell[569561, 12788, 1147, 33, 51, "Notes",ExpressionUUID->"9d7c4fa9-6837-4cea-a0de-268d6e44fee3",
 CellID->352021533],
Cell[570711, 12823, 696, 17, 63, "Text",ExpressionUUID->"9b8ac048-9b87-4aab-9799-3ad98bdf3a7a",
 CellID->549932073],
Cell[571410, 12842, 507, 14, 28, "Input",ExpressionUUID->"f89275af-37b3-4d12-9c5c-ebe3c579c919",
 CellID->38318440],
Cell[571920, 12858, 2562, 75, 143, "Input",ExpressionUUID->"47a87a0a-f5e8-48de-bee6-f925649bcec2",
 CellID->226025404],
Cell[CellGroupData[{
Cell[574507, 12937, 386, 12, 28, "Input",ExpressionUUID->"1582c7c0-f065-453f-ab92-ce89a9109de7",
 CellID->140630530],
Cell[574896, 12951, 1283, 28, 376, "Output",ExpressionUUID->"de6d88c4-a140-44ae-bcbf-15ee2bfcd9a2"]
}, Open  ]],
Cell[576194, 12982, 171, 3, 35, "Text",ExpressionUUID->"a2dd5220-0c95-4432-9ab4-d096ebaeb78b",
 CellID->82269687],
Cell[CellGroupData[{
Cell[576390, 12989, 556, 17, 28, "Input",ExpressionUUID->"c8e11bf0-dfb0-4b07-8d84-1cb57f04c6f4",
 CellID->19291400],
Cell[576949, 13008, 1524, 35, 39, "Output",ExpressionUUID->"beafd388-4379-400d-bc63-710156d8b8e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[578510, 13048, 193, 4, 28, "Input",ExpressionUUID->"d3ea3f38-b5a8-43c9-8b10-56a4518b3404",
 CellID->84215886],
Cell[578706, 13054, 1284, 28, 376, "Output",ExpressionUUID->"dbf6c60e-d6f4-4a90-8726-753536007d4e"]
}, Open  ]],
Cell[580005, 13085, 196, 4, 35, "Text",ExpressionUUID->"300efd86-2f25-4002-aab9-3a47ba9cf760",
 CellID->553981066],
Cell[580204, 13091, 509, 14, 28, "Input",ExpressionUUID->"aa324e1e-eb41-474e-a056-8b7576c94dc5",
 CellID->178897298],
Cell[580716, 13107, 2161, 62, 162, "Input",ExpressionUUID->"dee602bb-1b32-44bd-b0d6-07790b8ff182",
 CellID->48962201],
Cell[582880, 13171, 111, 1, 35, "Text",ExpressionUUID->"99f14d66-79ce-429e-8695-cf64196a6b5b",
 CellID->39404330],
Cell[CellGroupData[{
Cell[583016, 13176, 316, 9, 28, "Input",ExpressionUUID->"24295ac9-336a-4781-ad83-a43ee5424b1d",
 CellID->387530703],
Cell[583335, 13187, 760, 20, 376, "Output",ExpressionUUID->"99db5c1d-1965-48dd-b3c5-eb3f36b6969f"]
}, Open  ]],
Cell[584110, 13210, 114, 1, 35, "Text",ExpressionUUID->"d3bf9b47-570d-4189-9ed2-99829042f268",
 CellID->255082191],
Cell[CellGroupData[{
Cell[584249, 13215, 641, 19, 28, "Input",ExpressionUUID->"25d9b534-dfbc-4294-81ed-33ce96854164",
 CellID->276008286],
Cell[584893, 13236, 1728, 38, 376, "Output",ExpressionUUID->"f65cbcf2-df97-4626-9666-d5ecbe66c39c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[586658, 13279, 327, 9, 48, "Input",ExpressionUUID->"a90ce05b-d0f8-44b3-9426-ed5dc9c3a4e4",
 CellID->44850330],
Cell[586988, 13290, 19344, 326, 406, "Output",ExpressionUUID->"78d1bd14-79aa-43eb-9fb3-4c581f31b94f"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[606381, 13622, 155, 3, 38, "Subsection",ExpressionUUID->"de934dca-bede-403a-aaf0-4b29019e2e96"],
Cell[606539, 13627, 625, 16, 87, "Text",ExpressionUUID->"654d8f3c-65f4-42e6-b8c6-6f9dd774f429",
 CellID->16434028],
Cell[607167, 13645, 508, 14, 67, "Input",ExpressionUUID->"bc26fe98-9d59-4ce8-a8b0-ff70d64c527e",
 CellID->18196215],
Cell[607678, 13661, 3318, 94, 276, "Input",ExpressionUUID->"39a781f1-b5d5-4a3e-a63a-3e5e8c85a534",
 CellID->180812043],
Cell[CellGroupData[{
Cell[611021, 13759, 416, 12, 28, "Input",ExpressionUUID->"7aa6839a-2e4a-4f89-bde6-f399b8a239f7",
 CellID->89889603],
Cell[611440, 13773, 2323, 48, 179, "Output",ExpressionUUID->"45730c5f-a67d-492a-a0a6-32e3f1b1ef42"]
}, Open  ]],
Cell[613778, 13824, 172, 3, 58, "Text",ExpressionUUID->"e2a99115-6a87-4a5a-971c-7e67764ed535",
 CellID->415063178],
Cell[CellGroupData[{
Cell[613975, 13831, 556, 17, 48, "Input",ExpressionUUID->"a10c73c1-6a6d-464d-a59d-05fbc777f3c5",
 CellID->79531542],
Cell[614534, 13850, 1524, 35, 36, "Output",ExpressionUUID->"3f90f5f1-6e41-4ed9-929f-16a0a167c685"]
}, Open  ]],
Cell[CellGroupData[{
Cell[616095, 13890, 207, 4, 28, "Input",ExpressionUUID->"648e1f75-7559-4ba3-90bc-c7c02f8b4600",
 CellID->679665092],
Cell[616305, 13896, 2323, 48, 179, "Output",ExpressionUUID->"6feb8c02-6cdb-4825-bdf9-d9e9d0244363"]
}, Open  ]],
Cell[618643, 13947, 265, 5, 58, "Text",ExpressionUUID->"fc7f0d58-c488-4bc1-92fd-eeb6f7c90246",
 CellID->90541839],
Cell[618911, 13954, 509, 14, 67, "Input",ExpressionUUID->"3a83f160-b8b1-43ed-9ea2-c95187fbb10e",
 CellID->468020283],
Cell[619423, 13970, 2751, 77, 257, "Input",ExpressionUUID->"4123879b-38ef-4cba-8ae2-5d2c989bbcbb",
 CellID->96685869],
Cell[622177, 14049, 107, 1, 35, "Text",ExpressionUUID->"0f723370-e44a-4e5f-b86f-84a7286d2657",
 CellID->21348919],
Cell[CellGroupData[{
Cell[622309, 14054, 1023, 31, 86, "Input",ExpressionUUID->"7d39e2ae-3dfe-40f5-971c-5f337eb40360",
 CellID->529558776],
Cell[623335, 14087, 2182, 45, 179, "Output",ExpressionUUID->"9ce198ab-e780-4662-804f-e6659f479f69"]
}, Open  ]],
Cell[625532, 14135, 114, 1, 35, "Text",ExpressionUUID->"d4a388b6-a46d-4471-9377-a64aab397971",
 CellID->478612723],
Cell[CellGroupData[{
Cell[625671, 14140, 547, 16, 67, "Input",ExpressionUUID->"f85e4c52-734f-41ba-a14e-51f9c5ddf6a0",
 CellID->635546014],
Cell[626221, 14158, 53862, 898, 529, 21651, 369, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"5e91ec4e-cc1f-4ad6-abf9-c9232cfd5bf7"]
}, Open  ]],
Cell[680098, 15059, 222, 4, 81, "Text",ExpressionUUID->"c62d2214-aa3a-4859-894b-7889e81f6502",
 CellID->131326172],
Cell[680323, 15065, 1573, 47, 143, "Input",ExpressionUUID->"0b34d564-b3bb-433c-b284-ec92cf0c1a0d",
 CellID->194467080],
Cell[CellGroupData[{
Cell[681921, 15116, 218, 5, 28, "Input",ExpressionUUID->"f2961b07-5272-4c21-a269-b46d9d3b77b3",
 CellID->821694021],
Cell[682142, 15123, 12118, 217, 363, "Output",ExpressionUUID->"6e265a5b-c6e7-4fe6-8d1e-c2a8a8a27105",
 CellID->79605682]
}, Open  ]],
Cell[694275, 15343, 181, 4, 58, "Text",ExpressionUUID->"e96f5304-ea05-4704-b93f-aa604a7c6bf9",
 CellID->25257197],
Cell[CellGroupData[{
Cell[694481, 15351, 544, 16, 48, "Input",ExpressionUUID->"06ef41f6-ca5f-43fa-97db-cdefb67dd022",
 CellID->92659271],
Cell[695028, 15369, 139574, 2305, 363, 35636, 600, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"64e5bca9-17b1-47b5-b6de-d31e61d1b387"]
}, Open  ]],
Cell[CellGroupData[{
Cell[834639, 17679, 545, 16, 48, "Input",ExpressionUUID->"94d06dfa-e730-4b5d-8eef-055f033af2dc",
 CellID->311984978],
Cell[835187, 17697, 460997, 7576, 511, 158612, 2617, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"2ccf6b75-4dc9-4270-adde-aefab0e76c3e"]
}, Open  ]],
Cell[1296199, 25276, 71, 0, 35, "Text",ExpressionUUID->"a0708428-4dd5-4695-a2dd-aebb19dd725e"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1296319, 25282, 170, 3, 67, "Section",ExpressionUUID->"097f4790-5ad0-4d5e-a2b2-333c45147111"],
Cell[CellGroupData[{
Cell[1296514, 25289, 258, 5, 28, "Input",ExpressionUUID->"d2346ac0-6104-4e64-b5f2-ed1c1c842988"],
Cell[1296775, 25296, 1075, 24, 340, "Output",ExpressionUUID->"eb0ff6b8-23b7-4f23-849d-8d0deb2e4980"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1297887, 25325, 379, 8, 48, "Input",ExpressionUUID->"92307bde-0c27-4b20-99e1-c2a02f05e9f6"],
Cell[1298269, 25335, 3720, 72, 192, "Output",ExpressionUUID->"725bbfb5-4c90-4642-a6b4-8175d7378a80"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1302026, 25412, 2751, 57, 102, "Input",ExpressionUUID->"9b8abc7a-c5f9-416c-8b75-4dca07c99019"],
Cell[1304780, 25471, 1225, 26, 299, "Output",ExpressionUUID->"a788faa9-b124-4dad-9a2a-1281180f4fe4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1306042, 25502, 2750, 57, 102, "Input",ExpressionUUID->"3ea7db2f-786d-4019-92dc-41098f50878d"],
Cell[1308795, 25561, 452, 12, 32, "Output",ExpressionUUID->"154eacda-aa5d-4473-ab58-5c1f818743b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1309284, 25578, 3858, 90, 244, "Input",ExpressionUUID->"0e314f81-923a-478b-9853-5fb5eb6729e0"],
Cell[1313145, 25670, 578, 10, 298, "Output",ExpressionUUID->"e26aec9f-ef57-45ff-af00-35fdfaa9d039"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1313760, 25685, 183, 2, 28, "Input",ExpressionUUID->"7521cde1-5379-4e03-99d3-39d452ec0768"],
Cell[1313946, 25689, 575, 12, 32, "Output",ExpressionUUID->"4b88dd0d-3f65-452a-ac31-f43adf738621"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1314558, 25706, 247, 4, 28, "Input",ExpressionUUID->"c1287410-3c58-4589-bab7-52e1c86c2bfd"],
Cell[1314808, 25712, 204, 4, 32, "Output",ExpressionUUID->"ced0a033-e685-47f0-9339-9b33cceb321d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1315049, 25721, 146, 2, 28, "Input",ExpressionUUID->"d0969d20-dc33-4ed6-9128-2eecf0c2b298"],
Cell[1315198, 25725, 452, 12, 32, "Output",ExpressionUUID->"d26ad118-693b-482f-97cd-4e7282cf8091"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1315687, 25742, 381, 7, 67, "Input",ExpressionUUID->"1f7a5426-b1fb-4b5c-ac6d-f81756a2e7d2"],
Cell[1316071, 25751, 1994, 36, 129, "Output",ExpressionUUID->"0ed40ed2-e20f-4441-ae88-769c88d5b432"]
}, Open  ]],
Cell[1318080, 25790, 188, 4, 28, "Input",ExpressionUUID->"d8a9e3d2-990d-4071-8fcd-e6848738a885"]
}, Open  ]]
}
]
*)

