(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1073014,      23803]
NotebookOptionsPosition[    995602,      22035]
NotebookOutlinePosition[    996193,      22054]
CellTagsIndexPosition[    996150,      22051]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["DebuggingTechNote", "Title",
 CellID->215299574,ExpressionUUID->"a8961241-0d39-4547-9266-014e8abbc7b0"],

Cell["\<\
This paclet is for the study of combinatorics. I am a combinatorialist. That \
means I study combinatorics.\
\>", "Text",
 CellChangeTimes->{{3.8996485172153187`*^9, 3.899648553535448*^9}},
 CellID->106321115,ExpressionUUID->"c6919fc7-eef0-43d0-858b-6be6759319ea"],

Cell[CellGroupData[{

Cell[TextData[{
 "The functions defined in the ",
 Cell[BoxData[
 "PeterBurbery`Combinatorics`"], "InlineFormula",ExpressionUUID->
  "0c02f27a-4bb2-42c3-86db-1927c7f53024"],
 " context provide support for finding solutions to combinatorics-related \
problems."
}], "Text",
 CellChangeTimes->{{3.899745229360871*^9, 3.8997452455618725`*^9}},
 CellID->345096676,ExpressionUUID->"205e7eae-9dce-42be-b5c6-f25d6cc426f8"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<PeterBurbery`Combinatorics`\>\"", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8997452577387857`*^9, 3.8997452674639006`*^9}},
 CellLabel->"In[1]:=",
 CellID->13366579,ExpressionUUID->"7b9224a1-619e-4df5-9c4d-42b47484a2e7"]
}, Closed]],

Cell[CellGroupData[{

Cell["Indexes", "Section",
 CellChangeTimes->{{3.8997452154486513`*^9, 3.89974521642293*^9}},
 CellID->12394907,ExpressionUUID->"a5ac6cb3-dee1-415a-afca-41b4a47a1093"],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["PermutationIndex",
      BaseStyle->"Link",
      ButtonData->"paclet:PeterBurbery/Combinatorics/ref/PermutationIndex"], 
     "[", 
     StyleBox["perm", "TI"], "]"}], Cell[TextData[{
     "gives the lexicographic index of permutation ",
     Cell[BoxData[
      StyleBox["perm", "TI"]], "InlineFormula",ExpressionUUID->
      "5ee14c3e-2ffa-4663-9c41-0efe8c4b1206"],
     "."
    }], "TableText",ExpressionUUID->"ee711559-6c8a-4a43-9c10-2ee90c884208"]},
   {
    RowBox[{
     ButtonBox["PermutationFromIndex",
      BaseStyle->"Link",
      ButtonData->
       "paclet:PeterBurbery/Combinatorics/ref/PermutationFromIndex"], "[", 
     RowBox[{
      StyleBox["index", "TI"], ",", 
      StyleBox["lengthInput", "TI"]}], "]"}], Cell[TextData[{
     "returns the permutation of length ",
     Cell[BoxData[
      StyleBox["lengthInput", "TI"]], "InlineFormula",ExpressionUUID->
      "6f0978b6-5087-4544-a9fb-f4fc1e1a14b4"],
     " corresponding to the ",
     Cell[BoxData[
      StyleBox["index", "TI"]], "InlineFormula",ExpressionUUID->
      "ad4fed4a-d104-4c40-af39-aaaea58124bb"],
     "th permutation in lexicographic order."
    }], "TableText",ExpressionUUID->"8de720af-c55f-4b6b-91fa-697f507a0742"]},
   {
    RowBox[{
     ButtonBox["SubsetIndex",
      BaseStyle->"Link",
      ButtonData->"paclet:PeterBurbery/Combinatorics/ref/SubsetIndex"], "[", 
     StyleBox["list", "TI"], "]"}], Cell[TextData[{
     "gives the index of subset ",
     Cell[BoxData[
      StyleBox["list", "TI"]], "InlineFormula",ExpressionUUID->
      "f61b7900-cfe9-451a-b1f6-96c7cf146277"],
     "."
    }], "TableText",ExpressionUUID->"8348921c-3241-4d91-bd12-5cc8547a6da9"]},
   {
    RowBox[{
     ButtonBox["SubsetFromIndex",
      BaseStyle->"Link",
      ButtonData->"paclet:PeterBurbery/Combinatorics/ref/SubsetFromIndex"], 
     "[", 
     RowBox[{
      StyleBox["index", "TI"], ",", 
      StyleBox["len", "TI"]}], "]"}], Cell[TextData[{
     "returns a subset of length ",
     Cell[BoxData[
      StyleBox["len", "TI"]], "InlineFormula",ExpressionUUID->
      "654bccd2-720c-46ea-b714-bfacc2222153"],
     " with given ",
     Cell[BoxData[
      StyleBox["index", "TI"]], "InlineFormula",ExpressionUUID->
      "f515d1f7-833b-4016-a91b-f51f910f0ae7"],
     "."
    }], "TableText",ExpressionUUID->"134525cf-3aa7-4229-8bb1-063a11af86d6"]}
  }]], "DefinitionBox",
 CellChangeTimes->{{3.8996489194866652`*^9, 3.8996489239158792`*^9}, {
  3.8996489732810745`*^9, 3.899649018075349*^9}},
 CellID->124942403,ExpressionUUID->"367ecf0c-1016-47bc-aa73-7387ff60232b"],

Cell["Computing the index or using the index to get the thing.", "Caption",
 CellChangeTimes->{{3.899648939170776*^9, 3.899648948044263*^9}},
 CellID->520428306,ExpressionUUID->"bde9c496-e7f7-4604-936c-c92dc391db51"],

Cell[CellGroupData[{

Cell["Find the index of a random permutation", "MathCaption",
 CellChangeTimes->{{3.8996490265856886`*^9, 3.899649027609098*^9}, {
  3.899649101671936*^9, 3.89964910509002*^9}},
 CellID->31903801,ExpressionUUID->"f4087dd3-fb34-4fde-b17e-915cbb3a680f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PermutationIndex", "[", 
  RowBox[{"Echo", "[", 
   RowBox[{"PermutationList", "@", 
    RowBox[{"RandomPermutation", "[", "9", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.899649113130213*^9, 3.899649141332165*^9}, {
  3.899745290140775*^9, 3.89974529169009*^9}},
 CellLabel->"In[2]:=",
 CellID->2966739,ExpressionUUID->"3f5997e0-423d-4f31-90c1-ed4683bc9fa3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4", ",", "7", ",", "6", ",", "8", ",", "1", ",", "9", ",", "5", ",", "2", 
   ",", "3"}], "}"}]], "Echo",
 CellChangeTimes->{3.899797849536323*^9},
 CellID->595052515,ExpressionUUID->"82d65a7c-4364-447c-9954-e9ffaf23b87a"],

Cell[BoxData["149543"], "Output",
 CellChangeTimes->{{3.8996491225399823`*^9, 3.89964914209574*^9}, 
   3.8996520286243095`*^9, {3.899745273636671*^9, 3.899745292381153*^9}, 
   3.899797808738125*^9, 3.899797849636322*^9},
 CellLabel->"Out[2]=",
 CellID->121226746,ExpressionUUID->"bcf4d647-f02f-467b-a1d7-f08f35e65ed6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get the permutation:", "MathCaption",
 CellChangeTimes->{{3.8996520511050043`*^9, 3.8996520553866453`*^9}},
 CellID->591549556,ExpressionUUID->"682fe2b7-c8a6-4d0e-ad99-989c3d75da95"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PermutationFromIndex", "[", 
  RowBox[{"%", ",", "9"}], "]"}]], "Input",
 CellChangeTimes->{{3.899652056939474*^9, 3.8996520688523808`*^9}, 
   3.899745282259115*^9},
 CellLabel->"In[3]:=",
 CellID->281752241,ExpressionUUID->"df0852ab-3a78-4d61-b06f-920cddafc4cf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4", ",", "7", ",", "6", ",", "8", ",", "1", ",", "9", ",", "5", ",", "2", 
   ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8996520692746305`*^9, {3.8997452827484465`*^9, 3.8997452937134447`*^9}, 
   3.8997978513361225`*^9},
 CellLabel->"Out[3]=",
 CellID->255390473,ExpressionUUID->"12ff6b0d-ff18-4c9b-b050-f8eced3e4343"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Here's a neat application of this function. We can use this to solve Project \
Euler Problem 24 Lexicographic Permutations. What is the millionth \
lexicographic permutation of the digits 0, 1, 2, 3, 4, 5, 6, 7, 8, and 9?\
\>", "MathCaption",
 CellChangeTimes->{{3.8996520754404263`*^9, 3.8996520969633904`*^9}, {
  3.8996521422657013`*^9, 3.8996521703500643`*^9}, {3.8996522111981525`*^9, 
  3.899652213145729*^9}},
 CellID->114128779,ExpressionUUID->"29d643e4-853d-4ee4-8ad0-db96a7ed6d8a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PermutationFromIndex", "[", 
  RowBox[{"1000000", 
   RowBox[{"(*", 
    RowBox[{"a", " ", "million", " ", "is", " ", 
     SuperscriptBox["10", "6"]}], "*)"}], ",", " ", "10"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"because", " ", 
     RowBox[{"Length", "[", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", 
        "7", ",", "8", ",", ",", "9"}], "}"}], "]"}], " ", "is", " ", "10"}], 
    ",", " ", 
    RowBox[{"not", " ", "9"}]}], "*)"}], "]"}]], "Input",
 CellChangeTimes->{{3.899652171087674*^9, 3.89965222121475*^9}},
 CellLabel->"In[6]:=",
 CellID->123225409,ExpressionUUID->"2428f0be-86d5-4528-a068-83f675168931"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "8", ",", "9", ",", "4", ",", "10", ",", "2", ",", "6", ",", "5", 
   ",", "7", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.8996522223619137`*^9},
 CellLabel->"Out[6]=",
 CellID->565924694,ExpressionUUID->"102082ee-9525-446a-a7da-a718398a9d6a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Now we need to subtract 1. 10 will become 9 and 1 will become 0.\
\>", "MathCaption",
 CellChangeTimes->{{3.8996522243268967`*^9, 3.8996522450338764`*^9}},
 CellID->198474650,ExpressionUUID->"1afcc58f-7cb8-4a69-9589-4aab3ff9003f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PermutationFromIndex", "[", 
   RowBox[{"1000000", 
    RowBox[{"(*", 
     RowBox[{"a", " ", "million", " ", "is", " ", 
      SuperscriptBox["10", "6"]}], "*)"}], ",", " ", "10"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"because", " ", 
      RowBox[{"Length", "[", 
       RowBox[{"{", 
        RowBox[{
        "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", 
         "7", ",", "8", ",", ",", "9"}], "}"}], "]"}], " ", "is", " ", "10"}],
      ",", " ", 
     RowBox[{"not", " ", "9"}]}], "*)"}], "]"}], "-", "1"}]], "Input",
 CellChangeTimes->{{3.899652171087674*^9, 3.899652246534876*^9}},
 CellLabel->"In[7]:=",
 CellID->96415675,ExpressionUUID->"12141eee-d52b-4560-9cf3-3dd2f0445e37"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "7", ",", "8", ",", "3", ",", "9", ",", "1", ",", "5", ",", "4", 
   ",", "6", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.899652247281952*^9},
 CellLabel->"Out[7]=",
 CellID->187311040,ExpressionUUID->"79e612ed-70d7-44e4-8708-f363c6a32873"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Now we can use FromDigits.", "MathCaption",
 CellChangeTimes->{{3.8996522487264442`*^9, 3.899652252784938*^9}},
 CellID->460961065,ExpressionUUID->"c53527e9-2094-46af-b1af-40ce848e6dd3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FromDigits", "[", 
  RowBox[{
   RowBox[{"PermutationFromIndex", "[", 
    RowBox[{"1000000", 
     RowBox[{"(*", 
      RowBox[{"a", " ", "million", " ", "is", " ", 
       SuperscriptBox["10", "6"]}], "*)"}], ",", " ", "10"}], 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"because", " ", 
       RowBox[{"Length", "[", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",",
           "7", ",", "8", ",", ",", "9"}], "}"}], "]"}], " ", "is", " ", 
       "10"}], ",", " ", 
      RowBox[{"not", " ", "9"}]}], "*)"}], "]"}], "-", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.8996522533532248`*^9, 3.8996522551887875`*^9}},
 CellLabel->"In[8]:=",
 CellID->348169710,ExpressionUUID->"56fbd744-59f8-4d79-a343-720b29c60b6d"],

Cell[BoxData["2783915460"], "Output",
 CellChangeTimes->{3.899652255470524*^9},
 CellLabel->"Out[8]=",
 CellID->12882949,ExpressionUUID->"108b4388-ef26-4958-9abd-faa588f4435b"]
}, Open  ]]
}, Open  ]],

Cell["And that's the answer!", "MathCaption",
 CellChangeTimes->{{3.89965225662661*^9, 3.8996522596513786`*^9}},
 CellID->215938530,ExpressionUUID->"4f7ae5c4-d3ca-42fd-b5ad-627258b608de"],

Cell[CellGroupData[{

Cell["Find a subset's index.", "MathCaption",
 CellChangeTimes->{{3.8996522652356243`*^9, 3.8996522782278132`*^9}},
 CellID->142381604,ExpressionUUID->"263a9d9c-30d3-4add-9636-ee95d42a4bb0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SubsetIndex", "[", 
  RowBox[{"{", 
   RowBox[{"2", ",", "4", ",", "6"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.899649113130213*^9, 3.899649141332165*^9}, {
  3.8996492440052633`*^9, 3.8996492489526763`*^9}, {3.899652340536313*^9, 
  3.8996523429820943`*^9}},
 CellLabel->"In[10]:=",
 CellID->347150823,ExpressionUUID->"ad06cb61-985c-41ac-bf6c-162ccc658cf8"],

Cell[BoxData["29"], "Output",
 CellChangeTimes->{3.899649249426399*^9, 3.8996523432964063`*^9},
 CellLabel->"Out[10]=",
 CellID->160256386,ExpressionUUID->"c7b0f5d7-fe46-465c-941a-fdc201ee9134"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find the subset.", "MathCaption",
 CellChangeTimes->{{3.8996523033906155`*^9, 3.8996523056939783`*^9}},
 CellID->9730894,ExpressionUUID->"33bfb781-d7eb-4ceb-bbc1-ed090cfa6a24"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SubsetFromIndex", "[", 
  RowBox[{"29", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8996523072109237`*^9, 3.8996523135576286`*^9}, {
   3.899652352094467*^9, 3.899652356909275*^9}, 3.8996524416453767`*^9},
 CellLabel->"In[15]:=",
 CellID->172885937,ExpressionUUID->"8abcf8e3-3b40-42a8-ab35-dbdd2b4d6b21"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "4", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8996523138515444`*^9, {3.899652353031444*^9, 3.8996523572976427`*^9}, 
   3.899652442068437*^9},
 CellLabel->"Out[15]=",
 CellID->13566930,ExpressionUUID->"9db9b21e-ebca-4d24-9206-0883929341f5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compute the central binomial coefficient.", "MathCaption",
 CellChangeTimes->{{3.8997476435567694`*^9, 3.8997476507177753`*^9}},
 CellID->237155657,ExpressionUUID->"881af622-60de-4230-abe2-d7afe6bc5264"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CentralBinomialCoefficient", "[", "54", "]"}]], "Input",
 CellChangeTimes->{{3.8997476651664467`*^9, 3.8997476699335685`*^9}},
 CellLabel->"In[18]:=",
 CellID->114626256,ExpressionUUID->"2d5fe6fb-f286-4ace-9de7-f8237ef71a18"],

Cell[BoxData["24857784491537440929618523018320"], "Output",
 CellChangeTimes->{3.899747670314257*^9},
 CellLabel->"Out[18]=",
 CellID->21111411,ExpressionUUID->"dc8f6cc4-54c6-45db-a4bd-5281b33afb1b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CentralBinomialCoefficient", "[", "n", "]"}]], "Input",
 CellChangeTimes->{{3.8997476651664467`*^9, 3.8997476753389606`*^9}},
 CellLabel->"In[19]:=",
 CellID->72962348,ExpressionUUID->"75445815-767d-4771-8ff3-597ed0e50237"],

Cell[BoxData[
 RowBox[{"Binomial", "[", 
  RowBox[{
   RowBox[{"2", " ", "n"}], ",", "n"}], "]"}]], "Output",
 CellChangeTimes->{3.8997476756374416`*^9},
 CellLabel->"Out[19]=",
 CellID->144120138,ExpressionUUID->"085242b3-1787-425f-834a-9ee7e1d00bb6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find the generating function.", "MathCaption",
 CellChangeTimes->{{3.8997476899312167`*^9, 3.8997476938746185`*^9}},
 CellID->172959633,ExpressionUUID->"8f60b452-3e88-4eb5-8a36-9f29942d66ec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeneratingFunction", "[", 
  RowBox[{
   RowBox[{"CentralBinomialCoefficient", "[", "n", "]"}], ",", "n", ",", 
   "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997476816627703`*^9, 3.8997476852531166`*^9}},
 CellLabel->"In[20]:=",
 CellID->103210421,ExpressionUUID->"28079067-6d00-42f3-a13f-9a7e1bd1f147"],

Cell[BoxData[
 FractionBox["1", 
  SqrtBox[
   RowBox[{"1", "-", 
    RowBox[{"4", " ", "x"}]}]]]], "Output",
 CellChangeTimes->{3.8997476858034697`*^9},
 CellLabel->"Out[20]=",
 CellID->78156444,ExpressionUUID->"6f41a2a7-17b8-4a2b-9ae2-9871c8b4ca5e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Make a table of values.", "MathCaption",
 CellChangeTimes->{{3.899747695855169*^9, 3.8997477013055053`*^9}},
 CellID->452686366,ExpressionUUID->"b8c637c9-0d48-4802-a501-a247d7345ef3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{"\"\<n\>\"", "->", 
       RowBox[{"CentralBinomialCoefficient", "[", "#", "]"}]}], "|>"}], "&"}],
     "]"}], "[", 
   RowBox[{"Range", "[", "21", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997477026804385`*^9, 3.899747753265658*^9}},
 CellLabel->"In[22]:=",
 CellID->422387114,ExpressionUUID->"cd94678c-4a81-409c-8801-d5ed9fc61965"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      1 -> <|"n" -> 2|>, 2 -> <|"n" -> 6|>, 3 -> <|"n" -> 20|>, 
       4 -> <|"n" -> 70|>, 5 -> <|"n" -> 252|>, 6 -> <|"n" -> 924|>, 
       7 -> <|"n" -> 3432|>, 8 -> <|"n" -> 12870|>, 9 -> <|"n" -> 48620|>, 
       10 -> <|"n" -> 184756|>, 11 -> <|"n" -> 705432|>, 
       12 -> <|"n" -> 2704156|>, 13 -> <|"n" -> 10400600|>, 
       14 -> <|"n" -> 40116600|>, 15 -> <|"n" -> 155117520|>, 
       16 -> <|"n" -> 601080390|>, 17 -> <|"n" -> 2333606220|>, 
       18 -> <|"n" -> 9075135300|>, 19 -> <|"n" -> 35345263800|>, 
       20 -> <|"n" -> 137846528820|>, 21 -> <|"n" -> 538257874440|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, "n"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 1, {All}]]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n"}, {
         TypeSystem`Atom[Integer]}], 21], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, "n"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 1, {All}]]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n"}, {
         TypeSystem`Atom[Integer]}], 21], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 1, "DataRowCount" -> 21, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["n", 
                  Style[
                  "n", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "n"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "n"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["70"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["252"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["924"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12870"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48620"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["184756"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["11"], 
                  Style[
                   RawBoxes["11"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[11]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["705432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["12"], 
                  Style[
                   RawBoxes["12"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[12]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2704156"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["13"], 
                  Style[
                   RawBoxes["13"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[13]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10400600"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["14"], 
                  Style[
                   RawBoxes["14"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[14]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["40116600"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["15"], 
                  Style[
                   RawBoxes["15"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[15]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["155117520"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["16"], 
                  Style[
                   RawBoxes["16"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[16]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["601080390"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["17"], 
                  Style[
                   RawBoxes["17"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[17]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2333606220"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["18"], 
                  Style[
                   RawBoxes["18"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[18]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9075135300"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["19"], 
                  Style[
                   RawBoxes["19"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[19]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35345263800"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["20"], 
                  Style[
                   RawBoxes["20"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[20]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["137846528820"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 21, 1], {1, 21 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 21, 1], {1, 21 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[21, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[21, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 21, 1], {1, 21 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 21, 1], {1, 21 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{167., {299.8544921875, 305.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{167., {299.8544921875, 305.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.899747734907628*^9, 3.899747753800619*^9}},
 CellLabel->"Out[22]=",
 CellID->209532304,ExpressionUUID->"2c7c8f29-ced9-420c-837b-dcd33497ff89"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The digits of ",
 Cell[BoxData[
  RowBox[{"(", GridBox[{
     {
      RowBox[{"2", " ", 
       SuperscriptBox["10", "n"]}]},
     {
      SuperscriptBox["10", "n"]}
    }], ")"}]], "Input",ExpressionUUID->
  "573d4533-ffdd-42f5-bcd4-ad814cbff926"],
 " for ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"n", "=", "0"}], ",", " ", "1", ",", " ", "\[Ellipsis]"}]], 
  "InlineFormula",ExpressionUUID->"d20ee679-76b0-49af-93c8-45ec43970852"],
 " are"
}], "MathCaption",
 CellChangeTimes->{{3.8997477689988422`*^9, 3.899747816005345*^9}},
 CellID->56151557,ExpressionUUID->"ebf982ea-4cf0-4a7c-9ade-e2d639c50e86"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{"\"\<n\>\"", "->", 
       RowBox[{"IntegerLength", "[", 
        RowBox[{"CentralBinomialCoefficient", "[", 
         SuperscriptBox["10", "#"], "]"}], "]"}]}], "|>"}], "&"}], "]"}], "[", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "8"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997477026804385`*^9, 3.899747753265658*^9}, {
  3.8997478167689037`*^9, 3.899747942424721*^9}},
 CellLabel->"In[32]:=",
 CellID->392545453,ExpressionUUID->"11552cfb-3099-4de2-90e2-a98d74249d80"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      0 -> <|"n" -> 1|>, 1 -> <|"n" -> 6|>, 2 -> <|"n" -> 59|>, 
       3 -> <|"n" -> 601|>, 4 -> <|"n" -> 6019|>, 5 -> <|"n" -> 60204|>, 
       6 -> <|"n" -> 602057|>, 7 -> <|"n" -> 6020597|>, 
       8 -> <|"n" -> 60205995|>|>, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[9]} -> 1, {All, "n"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 1, {All}]]], 9, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n"}, {
         TypeSystem`Atom[Integer]}], 9], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[9]} -> 1, {All, "n"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 1, {All}]]], 9, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n"}, {
         TypeSystem`Atom[Integer]}], 9], "Path" -> {}, "DisplayedRowCount" -> 
     9, "DisplayedColumnCount" -> 1, "DataRowCount" -> 9, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["n", 
                  Style[
                  "n", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "n"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "n"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["59"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["601"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6019"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["60204"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["602057"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6020597"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["60205995"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{111., {140.8544921875, 146.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{111., {140.8544921875, 146.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8997479192062416`*^9, 3.899747952478814*^9}},
 CellLabel->"Out[32]=",
 CellID->242033643,ExpressionUUID->"106359a4-0711-4f11-ab6a-71a75e195bbb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "These digits are converging to the digits of ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["log", "10"], "4"}]], "InlineFormula",ExpressionUUID->
  "5c750401-0325-41b9-8896-afd473639bc0"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.8997479573414755`*^9, 3.8997479693046136`*^9}},
 CellID->100832978,ExpressionUUID->"c6f1e992-94fd-4d45-a14b-275c04497c74"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"Log", "[", 
    RowBox[{"10", ",", "4"}], "]"}], ",", "40"}], "]"}]], "Input",
 CellChangeTimes->{{3.899747972700562*^9, 3.8997479800159883`*^9}},
 CellLabel->"In[34]:=",
 CellID->438135564,ExpressionUUID->"695abd8c-b232-4953-a711-0411e449964d"],

Cell[BoxData["0.6020599913279623904274777894489860535363797629242170826208`40.\
"], "Output",
 CellChangeTimes->{{3.8997479755106287`*^9, 3.8997479802943263`*^9}},
 CellLabel->"Out[34]=",
 CellID->287705978,ExpressionUUID->"b4f1b1d3-b0a4-4090-83ac-07bc6f9696fa"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Let's look at the modified central binomial coefficient.", "MathCaption",
 CellChangeTimes->{{3.899748350767112*^9, 3.899748361595912*^9}, 
   3.8997484313509865`*^9},
 CellID->139662984,ExpressionUUID->"d96347d8-82cf-4b6c-96b7-fcad0f75c70e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{"\"\<n\>\"", "->", 
       RowBox[{"ModifiedCentralBinomialCoefficient", "[", "#", "]"}]}], 
      "|>"}], "&"}], "]"}], "[", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "21"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997484150227227`*^9, 3.8997484239360027`*^9}},
 CellLabel->"In[958]:=",
 CellID->398286937,ExpressionUUID->"669c0c95-4640-4e4e-8df0-f7b3e415ac0a"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      0 -> <|"n" -> 1|>, 1 -> <|"n" -> 1|>, 2 -> <|"n" -> 2|>, 
       3 -> <|"n" -> 3|>, 4 -> <|"n" -> 6|>, 5 -> <|"n" -> 10|>, 
       6 -> <|"n" -> 20|>, 7 -> <|"n" -> 35|>, 8 -> <|"n" -> 70|>, 
       9 -> <|"n" -> 126|>, 10 -> <|"n" -> 252|>, 11 -> <|"n" -> 462|>, 
       12 -> <|"n" -> 924|>, 13 -> <|"n" -> 1716|>, 14 -> <|"n" -> 3432|>, 
       15 -> <|"n" -> 6435|>, 16 -> <|"n" -> 12870|>, 17 -> <|"n" -> 24310|>, 
       18 -> <|"n" -> 48620|>, 19 -> <|"n" -> 92378|>, 
       20 -> <|"n" -> 184756|>, 21 -> <|"n" -> 352716|>|>, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[11]} -> 1, {All, "n"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 1, {All}]]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n"}, {
         TypeSystem`Atom[Integer]}], 22], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[11]} -> 1, {All, "n"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 1, {All}]]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n"}, {
         TypeSystem`Atom[Integer]}], 22], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 1, "DataRowCount" -> 22, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["n", 
                  Style[
                  "n", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "n"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "n"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["70"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["126"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["252"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["11"], 
                  Style[
                   RawBoxes["11"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[11]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["462"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["12"], 
                  Style[
                   RawBoxes["12"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[12]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["924"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["13"], 
                  Style[
                   RawBoxes["13"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[13]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1716"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["14"], 
                  Style[
                   RawBoxes["14"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[14]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["15"], 
                  Style[
                   RawBoxes["15"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[15]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6435"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["16"], 
                  Style[
                   RawBoxes["16"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[16]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12870"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["17"], 
                  Style[
                   RawBoxes["17"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[17]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24310"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["18"], 
                  Style[
                   RawBoxes["18"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[18]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48620"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["19"], 
                  Style[
                   RawBoxes["19"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[19]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["92378"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{167., {299.8544921875, 305.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{167., {299.8544921875, 305.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.899748417919546*^9, 3.8997484245594244`*^9}},
 CellLabel->"Out[958]=",
 CellID->52134645,ExpressionUUID->"e00771c1-2707-421f-96a2-80fa858cbb49"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The generating function is  ",
 Cell[BoxData[
  FractionBox[
   RowBox[{"1", "-", 
    RowBox[{"4", 
     SuperscriptBox["x", "2"]}], "-", 
    SqrtBox[
     RowBox[{"1", "-", 
      RowBox[{"4", 
       SuperscriptBox["x", "2"]}]}]]}], 
   RowBox[{"2", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", 
       SuperscriptBox["x", "3"]}], "-", 
      SuperscriptBox["x", "2"]}], ")"}]}]]], "Input",
  CellChangeTimes->{{3.899748705369384*^9, 3.8997487177386065`*^9}},
  ExpressionUUID->"9c768a48-d826-4c27-bfb0-7de3789309d7"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.8997485285983276`*^9, 3.8997485425858026`*^9}, {
  3.899748699828844*^9, 3.899748721088228*^9}, {3.8997487739717274`*^9, 
  3.8997487739717274`*^9}},
 CellID->254962743,ExpressionUUID->"4c43c079-cd1c-4d68-806e-92e83d1f6205"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SeriesCoefficient", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"1", "-", 
     RowBox[{"4", 
      SuperscriptBox["x", "2"]}], "-", 
     SqrtBox[
      RowBox[{"1", "-", 
       RowBox[{"4", 
        SuperscriptBox["x", "2"]}]}]]}], 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", 
        SuperscriptBox["x", "3"]}], "-", 
       SuperscriptBox["x", "2"]}], ")"}]}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"9", "-", "1"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.899748705369384*^9, 3.899748800970345*^9}},
 CellLabel->"In[978]:=",
 CellID->208306947,ExpressionUUID->"b0e35ff1-3ba4-4d15-8afd-c10426d7e759"],

Cell[BoxData["126"], "Output",
 CellChangeTimes->{{3.8997487419944305`*^9, 3.8997488023627462`*^9}},
 CellLabel->"Out[978]=",
 CellID->2750224,ExpressionUUID->"d6e34d62-e923-4851-8660-1c39221585d9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["This matches our output.", "MathCaption",
 CellChangeTimes->{{3.899748807336094*^9, 3.899748813611977*^9}},
 CellID->48756516,ExpressionUUID->"4e0815fe-1955-4559-84ef-2e6f947a7754"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<n\>\"", "->", 
        RowBox[{"ModifiedCentralBinomialCoefficient", "[", "#", "]"}]}], ",", 
       RowBox[{"\"\<seriesCoefficient\>\"", "->", 
        RowBox[{"SeriesCoefficient", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"1", "-", 
            RowBox[{"4", 
             SuperscriptBox["x", "2"]}], "-", 
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{"4", 
               SuperscriptBox["x", "2"]}]}]]}], 
           RowBox[{"2", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", 
               SuperscriptBox["x", "3"]}], "-", 
              SuperscriptBox["x", "2"]}], ")"}]}]], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", 
            RowBox[{"#", "-", "1"}]}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<equal\>\"", "->", 
        RowBox[{
         RowBox[{"ModifiedCentralBinomialCoefficient", "[", "#", "]"}], "===", 
         RowBox[{"SeriesCoefficient", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"1", "-", 
             RowBox[{"4", 
              SuperscriptBox["x", "2"]}], "-", 
             SqrtBox[
              RowBox[{"1", "-", 
               RowBox[{"4", 
                SuperscriptBox["x", "2"]}]}]]}], 
            RowBox[{"2", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", 
                SuperscriptBox["x", "3"]}], "-", 
               SuperscriptBox["x", "2"]}], ")"}]}]], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", 
             RowBox[{"#", "-", "1"}]}], "}"}]}], "]"}]}]}]}], "|>"}], "&"}], 
    "]"}], "[", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "21"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997488260575113`*^9, 3.899748876670103*^9}},
 CellLabel->"In[980]:=",
 CellID->415836666,ExpressionUUID->"f3409fa1-b43c-45e1-a830-6ba77356c148"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      0 -> <|"n" -> 1, "seriesCoefficient" -> 0, "equal" -> False|>, 
       1 -> <|"n" -> 1, "seriesCoefficient" -> 1, "equal" -> True|>, 
       2 -> <|"n" -> 2, "seriesCoefficient" -> 2, "equal" -> True|>, 
       3 -> <|"n" -> 3, "seriesCoefficient" -> 3, "equal" -> True|>, 
       4 -> <|"n" -> 6, "seriesCoefficient" -> 6, "equal" -> True|>, 
       5 -> <|"n" -> 10, "seriesCoefficient" -> 10, "equal" -> True|>, 
       6 -> <|"n" -> 20, "seriesCoefficient" -> 20, "equal" -> True|>, 
       7 -> <|"n" -> 35, "seriesCoefficient" -> 35, "equal" -> True|>, 
       8 -> <|"n" -> 70, "seriesCoefficient" -> 70, "equal" -> True|>, 
       9 -> <|"n" -> 126, "seriesCoefficient" -> 126, "equal" -> True|>, 
       10 -> <|"n" -> 252, "seriesCoefficient" -> 252, "equal" -> True|>, 
       11 -> <|"n" -> 462, "seriesCoefficient" -> 462, "equal" -> True|>, 
       12 -> <|"n" -> 924, "seriesCoefficient" -> 924, "equal" -> True|>, 
       13 -> <|"n" -> 1716, "seriesCoefficient" -> 1716, "equal" -> True|>, 
       14 -> <|"n" -> 3432, "seriesCoefficient" -> 3432, "equal" -> True|>, 
       15 -> <|"n" -> 6435, "seriesCoefficient" -> 6435, "equal" -> True|>, 
       16 -> <|"n" -> 12870, "seriesCoefficient" -> 12870, "equal" -> True|>, 
       17 -> <|"n" -> 24310, "seriesCoefficient" -> 24310, "equal" -> True|>, 
       18 -> <|"n" -> 48620, "seriesCoefficient" -> 48620, "equal" -> True|>, 
       19 -> <|"n" -> 92378, "seriesCoefficient" -> 92378, "equal" -> True|>, 
       20 -> <|"n" -> 184756, "seriesCoefficient" -> 184756, "equal" -> 
         True|>, 21 -> <|
        "n" -> 352716, "seriesCoefficient" -> 352716, "equal" -> True|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[13]} -> 1, {All, "n"} -> 
        1, {All, "seriesCoefficient"} -> 1, {All, "equal"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34], "seriesCoefficient" -> 
             TypeSystem`PackageScope`AtomShape[34], "equal" -> 
             TypeSystem`PackageScope`AtomShape[36]|>], 
           DirectedInfinity[1], 3, {All}]]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n", "seriesCoefficient", "equal"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 22], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[13]} -> 1, {All, "n"} -> 
        1, {All, "seriesCoefficient"} -> 1, {All, "equal"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34], "seriesCoefficient" -> 
             TypeSystem`PackageScope`AtomShape[34], "equal" -> 
             TypeSystem`PackageScope`AtomShape[36]|>], 
           DirectedInfinity[1], 3, {All}]]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n", "seriesCoefficient", "equal"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 22], "Path" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     22, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["n", 
                  Style[
                  "n", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "n"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "n"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["seriesCoefficient", 
                  Style[
                  "seriesCoefficient", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "seriesCoefficient"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "seriesCoefficient"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["equal", 
                  Style[
                  "equal", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "equal"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "equal"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["70"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["70"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["126"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["126"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["252"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["252"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["11"], 
                  Style[
                   RawBoxes["11"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[11]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["462"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["462"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["12"], 
                  Style[
                   RawBoxes["12"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[12]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["924"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["924"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["13"], 
                  Style[
                   RawBoxes["13"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[13]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1716"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1716"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["14"], 
                  Style[
                   RawBoxes["14"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[14]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["15"], 
                  Style[
                   RawBoxes["15"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[15]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6435"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6435"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["16"], 
                  Style[
                   RawBoxes["16"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[16]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12870"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12870"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["17"], 
                  Style[
                   RawBoxes["17"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[17]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24310"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24310"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["18"], 
                  Style[
                   RawBoxes["18"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[18]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48620"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48620"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["19"], 
                  Style[
                   RawBoxes["19"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[19]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["92378"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["92378"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{256., {299.8544921875, 305.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{256., {299.8544921875, 305.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8997488503458753`*^9, 3.899748877365996*^9}},
 CellLabel->"Out[980]=",
 CellID->14127691,ExpressionUUID->"943b8ea6-acb5-4464-99d2-98e8affbc651"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
If we start at 1, we will get all True instead of a False at 0.\
\>", "MathCaption",
 CellChangeTimes->{{3.8997488812603807`*^9, 3.8997488916654415`*^9}},
 CellID->699600308,ExpressionUUID->"f00672ff-d62b-4fe1-8c6a-8a7019166b31"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<n\>\"", "->", 
        RowBox[{"ModifiedCentralBinomialCoefficient", "[", "#", "]"}]}], ",", 
       RowBox[{"\"\<seriesCoefficient\>\"", "->", 
        RowBox[{"SeriesCoefficient", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"1", "-", 
            RowBox[{"4", 
             SuperscriptBox["x", "2"]}], "-", 
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{"4", 
               SuperscriptBox["x", "2"]}]}]]}], 
           RowBox[{"2", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", 
               SuperscriptBox["x", "3"]}], "-", 
              SuperscriptBox["x", "2"]}], ")"}]}]], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", 
            RowBox[{"#", "-", "1"}]}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<equal\>\"", "->", 
        RowBox[{
         RowBox[{"ModifiedCentralBinomialCoefficient", "[", "#", "]"}], "===", 
         RowBox[{"SeriesCoefficient", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"1", "-", 
             RowBox[{"4", 
              SuperscriptBox["x", "2"]}], "-", 
             SqrtBox[
              RowBox[{"1", "-", 
               RowBox[{"4", 
                SuperscriptBox["x", "2"]}]}]]}], 
            RowBox[{"2", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", 
                SuperscriptBox["x", "3"]}], "-", 
               SuperscriptBox["x", "2"]}], ")"}]}]], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", 
             RowBox[{"#", "-", "1"}]}], "}"}]}], "]"}]}]}]}], "|>"}], "&"}], 
    "]"}], "[", 
   RowBox[{"Range", "[", 
    RowBox[{"2", ",", "21"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.899748892320259*^9, 3.8997488971939325`*^9}},
 CellLabel->"In[981]:=",
 CellID->6091911,ExpressionUUID->"545222d0-7189-4391-b695-82532691f724"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      2 -> <|"n" -> 2, "seriesCoefficient" -> 2, "equal" -> True|>, 
       3 -> <|"n" -> 3, "seriesCoefficient" -> 3, "equal" -> True|>, 
       4 -> <|"n" -> 6, "seriesCoefficient" -> 6, "equal" -> True|>, 
       5 -> <|"n" -> 10, "seriesCoefficient" -> 10, "equal" -> True|>, 
       6 -> <|"n" -> 20, "seriesCoefficient" -> 20, "equal" -> True|>, 
       7 -> <|"n" -> 35, "seriesCoefficient" -> 35, "equal" -> True|>, 
       8 -> <|"n" -> 70, "seriesCoefficient" -> 70, "equal" -> True|>, 
       9 -> <|"n" -> 126, "seriesCoefficient" -> 126, "equal" -> True|>, 
       10 -> <|"n" -> 252, "seriesCoefficient" -> 252, "equal" -> True|>, 
       11 -> <|"n" -> 462, "seriesCoefficient" -> 462, "equal" -> True|>, 
       12 -> <|"n" -> 924, "seriesCoefficient" -> 924, "equal" -> True|>, 
       13 -> <|"n" -> 1716, "seriesCoefficient" -> 1716, "equal" -> True|>, 
       14 -> <|"n" -> 3432, "seriesCoefficient" -> 3432, "equal" -> True|>, 
       15 -> <|"n" -> 6435, "seriesCoefficient" -> 6435, "equal" -> True|>, 
       16 -> <|"n" -> 12870, "seriesCoefficient" -> 12870, "equal" -> True|>, 
       17 -> <|"n" -> 24310, "seriesCoefficient" -> 24310, "equal" -> True|>, 
       18 -> <|"n" -> 48620, "seriesCoefficient" -> 48620, "equal" -> True|>, 
       19 -> <|"n" -> 92378, "seriesCoefficient" -> 92378, "equal" -> True|>, 
       20 -> <|"n" -> 184756, "seriesCoefficient" -> 184756, "equal" -> 
         True|>, 21 -> <|
        "n" -> 352716, "seriesCoefficient" -> 352716, "equal" -> True|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[14]} -> 1, {All, "n"} -> 
        1, {All, "seriesCoefficient"} -> 1, {All, "equal"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34], "seriesCoefficient" -> 
             TypeSystem`PackageScope`AtomShape[34], "equal" -> 
             TypeSystem`PackageScope`AtomShape[36]|>], 
           DirectedInfinity[1], 3, {All}]]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n", "seriesCoefficient", "equal"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 20], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[14]} -> 1, {All, "n"} -> 
        1, {All, "seriesCoefficient"} -> 1, {All, "equal"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34], "seriesCoefficient" -> 
             TypeSystem`PackageScope`AtomShape[34], "equal" -> 
             TypeSystem`PackageScope`AtomShape[36]|>], 
           DirectedInfinity[1], 3, {All}]]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n", "seriesCoefficient", "equal"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 20], "Path" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     20, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["n", 
                  Style[
                  "n", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "n"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "n"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["seriesCoefficient", 
                  Style[
                  "seriesCoefficient", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "seriesCoefficient"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "seriesCoefficient"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["equal", 
                  Style[
                  "equal", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "equal"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "equal"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["70"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["70"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["126"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["126"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["252"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["252"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["11"], 
                  Style[
                   RawBoxes["11"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[11]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["462"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["462"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["12"], 
                  Style[
                   RawBoxes["12"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[12]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["924"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["924"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["13"], 
                  Style[
                   RawBoxes["13"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[13]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1716"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1716"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["14"], 
                  Style[
                   RawBoxes["14"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[14]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["15"], 
                  Style[
                   RawBoxes["15"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[15]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6435"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6435"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["16"], 
                  Style[
                   RawBoxes["16"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[16]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12870"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12870"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["17"], 
                  Style[
                   RawBoxes["17"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[17]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24310"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24310"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["18"], 
                  Style[
                   RawBoxes["18"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[18]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48620"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48620"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["19"], 
                  Style[
                   RawBoxes["19"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[19]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["92378"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["92378"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["20"], 
                  Style[
                   RawBoxes["20"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[20]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["184756"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["184756"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["21"], 
                  Style[
                   RawBoxes["21"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[21]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[21]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["352716"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[21], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["352716"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[21], 
                 Key["seriesCoefficient"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[21], 
                 Key["equal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{245., {289.3544921875, 294.6455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{245., {289.3544921875, 294.6455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8997488976810503`*^9},
 CellLabel->"Out[981]=",
 CellID->222447527,ExpressionUUID->"6fe15111-1d05-49f6-a419-5b3c780d4189"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "For more details, please visit ",
 ButtonBox["A001405",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://oeis.org/A001405"], None},
  ButtonNote->"https://oeis.org/A001405"],
 " on the ",
 ButtonBox["OEIS",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.oeis.org"], None},
  ButtonNote->"https://www.oeis.org"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.8997489380730906`*^9, 3.8997489629415245`*^9}},
 CellID->259341750,ExpressionUUID->"57c2524f-5795-47c8-8152-397a26fe408f"],

Cell[CellGroupData[{

Cell[TextData[{
 "Make a random multiset of the ",
 ButtonBox["hazel",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.color-name.com/hazel.color"], None},
  ButtonNote->"https://www.color-name.com/hazel.color"],
 " color rainbow palette."
}], "MathCaption",
 CellChangeTimes->{{3.8997489871714535`*^9, 3.8997489916544557`*^9}, {
  3.8997490704101877`*^9, 3.8997490920400324`*^9}},
 CellID->20786854,ExpressionUUID->"d6f6adff-8c6a-4956-b36d-3a190a0386a1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hazelRainbowPalette", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"LUVColor", "[", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"\"\<#\>\"", "<>", "color"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"color", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<c9c789\>\"", ",", "\"\<94c989\>\"", ",", "\"\<89c9b5\>\"", ",", 
        "\"\<89a7c9\>\"", ",", "\"\<c989b9\>\"", ",", "\"\<c99089\>\""}], 
       "}"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8997490958088837`*^9, 3.8997491771133757`*^9}, {
  3.899749211475692*^9, 3.8997492176574*^9}},
 CellLabel->"In[5]:=",
 CellID->712923585,ExpressionUUID->"6672568a-3f23-4520-adc0-62fa199e0b25"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|
    "color" -> LUVColor[
      0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7621596783781963, -0.3310170840401606, 0.08359158699165539]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.6713375885659421, -0.17833924308420873`, -0.26467794346262646`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"]}], "}"}]], "Output",
 CellChangeTimes->{{3.8997491597998548`*^9, 3.8997491774983788`*^9}, 
   3.8997492179964013`*^9, 3.89975638797796*^9, 3.8997982780314245`*^9},
 CellLabel->"Out[5]=",
 CellID->221917247,ExpressionUUID->"4a225975-91eb-4734-9aec-397ba42dbb76"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"randomMultiset", "=", 
  RowBox[{"RandomChoice", "[", 
   RowBox[{"hazelRainbowPalette", ",", "21"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.899749235227027*^9, 3.899749241947027*^9}},
 CellLabel->"In[6]:=",
 CellID->407433582,ExpressionUUID->"c0aa467d-e5d2-40d1-bb5b-d41f08f80b17"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|
    "color" -> LUVColor[
      0.6713375885659421, -0.17833924308420873`, -0.26467794346262646`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7621596783781963, -0.3310170840401606, 0.08359158699165539]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7621596783781963, -0.3310170840401606, 0.08359158699165539]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7621596783781963, -0.3310170840401606, 0.08359158699165539]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.648586156474065, 0.37271259045279787`, -0.24310259911376647`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.6713375885659421, -0.17833924308420873`, -0.26467794346262646`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7605558615347562, -0.2762376510553367, 0.34253685287840063`]|>,
    "LUVColorSwatchTemplate"]}], "}"}]], "Output",
 CellChangeTimes->{3.8997492424170275`*^9, 3.899756392273822*^9, 
  3.8997982804066257`*^9},
 CellLabel->"Out[6]=",
 CellID->898697144,ExpressionUUID->"4a6d900a-0908-43ed-8f0c-48cd3809a924"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Count the derangements.", "MathCaption",
 CellChangeTimes->{{3.8997492487266345`*^9, 3.899749251993189*^9}},
 CellID->194380331,ExpressionUUID->"935b725b-43a0-4b93-893a-4c9095cebcb6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EnumerateMultisetPartialDerangements", "[", "randomMultiset", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8997492528242707`*^9, 3.8997492577693224`*^9}},
 CellLabel->"In[7]:=",
 CellID->653333490,ExpressionUUID->"4271b161-f6dc-4395-821e-e58d7d2cf2e5"],

Cell[BoxData["52872822960"], "Output",
 CellChangeTimes->{3.89974925874524*^9, 3.899798282845435*^9},
 CellLabel->"Out[7]=",
 CellID->94900513,ExpressionUUID->"78184fcd-6787-46d0-b65e-e8c983499666"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["This is the same as having 0 fixed points.", "MathCaption",
 CellChangeTimes->{{3.899749286926594*^9, 3.899749296237387*^9}},
 CellID->158717184,ExpressionUUID->"5735fafe-c60b-4aac-b819-d03e66e43d4d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EnumerateMultisetPartialDerangements", "[", 
  RowBox[{"randomMultiset", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997492528242707`*^9, 3.8997492577693224`*^9}, {
  3.899749298277933*^9, 3.899749299605976*^9}},
 CellLabel->"In[8]:=",
 CellID->414886273,ExpressionUUID->"43451533-40d1-451f-96ab-7e6d04e2c0ae"],

Cell[BoxData["52872822960"], "Output",
 CellChangeTimes->{3.899749300486975*^9, 3.899798284831006*^9},
 CellLabel->"Out[8]=",
 CellID->63605416,ExpressionUUID->"56275dc0-5539-4f73-9586-549a842bbe3b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Count partial derangements with 3 fixed points.", "MathCaption",
 CellChangeTimes->{{3.8997492626369176`*^9, 3.8997493081744137`*^9}},
 CellID->402703826,ExpressionUUID->"856dd0a5-e39b-4b64-b863-34827802e2ff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EnumerateMultisetPartialDerangements", "[", 
  RowBox[{"randomMultiset", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997492528242707`*^9, 3.8997493033590193`*^9}},
 CellLabel->"In[9]:=",
 CellID->1592074,ExpressionUUID->"551f3ded-2bba-423b-bafe-16e9901235eb"],

Cell[BoxData["1046223284640"], "Output",
 CellChangeTimes->{{3.8997492970384502`*^9, 3.8997493128744383`*^9}, 
   3.8997982951244907`*^9},
 CellLabel->"Out[9]=",
 CellID->9531058,ExpressionUUID->"5422ae4c-fc0b-4b3f-8043-18086f2d5b27"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Let's do a smaller example. This time, let's list all the elements of the set.\
\>", "MathCaption",
 CellChangeTimes->{{3.8997496568247814`*^9, 3.899749668077464*^9}},
 CellID->708478496,ExpressionUUID->"85550450-e8c6-4635-ba62-1e5a47dfa7e1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hazelRainbowPaletteSubset", "=", 
  RowBox[{"RandomSample", "[", 
   RowBox[{"hazelRainbowPalette", ",", "4"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8997496730949655`*^9, 3.899749684028263*^9}},
 CellLabel->"In[13]:=",
 CellID->450230421,ExpressionUUID->"1099220b-6bb5-4eaa-a300-10e0191f5083"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|
    "color" -> LUVColor[
      0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7621596783781963, -0.3310170840401606, 0.08359158699165539]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.6713375885659421, -0.17833924308420873`, -0.26467794346262646`]|>,
    "LUVColorSwatchTemplate"]}], "}"}]], "Output",
 CellChangeTimes->{3.8997496845276875`*^9, 3.8997563967663803`*^9, 
  3.8997982954485292`*^9, 3.899798358957198*^9},
 CellLabel->"Out[13]=",
 CellID->559918355,ExpressionUUID->"8bfe7e4e-7cb6-4a5b-b408-47ddce84af2b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subsetRandomMultiset", "=", 
  RowBox[{"RandomChoice", "[", 
   RowBox[{"hazelRainbowPaletteSubset", ",", 
    RowBox[{"{", "7", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8997496909994445`*^9, 3.8997497185029545`*^9}},
 CellLabel->"In[16]:=",
 CellID->212638519,ExpressionUUID->"be7c48bb-37e4-45db-888c-3d9f7bf977c8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|
    "color" -> LUVColor[
      0.6713375885659421, -0.17833924308420873`, -0.26467794346262646`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7621596783781963, -0.3310170840401606, 0.08359158699165539]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.6713375885659421, -0.17833924308420873`, -0.26467794346262646`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.653613089342361, 0.39852960962686357`, 0.09836345805217785]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
    "LUVColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> LUVColor[
      0.7930264647431842, 0.04643361077052847, 0.35301530185362595`]|>,
    "LUVColorSwatchTemplate"]}], "}"}]], "Output",
 CellChangeTimes->{{3.899749711969803*^9, 3.8997497188631163`*^9}, 
   3.899756398909689*^9, 3.8997982958295245`*^9, {3.899798360220496*^9, 
   3.8997983669226646`*^9}},
 CellLabel->"Out[16]=",
 CellID->262429112,ExpressionUUID->"2d81f388-0291-4c22-8a31-4729d603adb9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Let's find all the multiset partial derangements.", "MathCaption",
 CellChangeTimes->{{3.899749731291973*^9, 3.8997497408599186`*^9}},
 CellID->19185935,ExpressionUUID->"28959380-7d27-4c36-b634-7769616c4f29"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"MultisetPartialDerangements", "[", "subsetRandomMultiset", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8997497550334845`*^9, 3.8997497595874767`*^9}, {
  3.8997983032323427`*^9, 3.899798307194933*^9}},
 CellLabel->"In[17]:=",
 CellID->65654456,ExpressionUUID->"db5233bf-0d74-48c6-a079-813352917e91"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
f4Q=
    "], {{0, 173.4}, {501., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{501., 173.4},
  PlotRange->{{0, 501.}, {0, 173.4}}]], "Output",
 CellChangeTimes->{
  3.8997497599187136`*^9, 3.8997564029297953`*^9, 3.899798308699521*^9, {
   3.8997983619676466`*^9, 3.89979836925835*^9}},
 CellLabel->"Out[17]=",
 CellID->270374302,ExpressionUUID->"4716b08f-49a8-454c-ba46-7842337b4207"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here is the count.", "MathCaption",
 CellChangeTimes->{{3.8997497625129347`*^9, 3.8997497653791437`*^9}},
 CellID->288178981,ExpressionUUID->"95403daa-8980-4d17-a1a1-196ae4605c63"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EnumerateMultisetPartialDerangements", "[", "subsetRandomMultiset", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8997497413474436`*^9, 3.8997497462356305`*^9}},
 CellLabel->"In[1009]:=",
 CellID->153664891,ExpressionUUID->"13174a1b-d278-4e41-922e-df7435024425"],

Cell[BoxData["30"], "Output",
 CellChangeTimes->{3.8997497468018894`*^9},
 CellLabel->"Out[1009]=",
 CellID->146476134,ExpressionUUID->"813acaa8-7db3-4d17-97ac-e34b53e248de"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
If we compute partials derangements with 3 fixed points, we will get 101 \
elements.\
\>", "MathCaption",
 CellChangeTimes->{{3.899749767505232*^9, 3.899749797173949*^9}},
 CellID->211204775,ExpressionUUID->"1437a05a-dc2e-438f-b57b-30036d82a254"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EnumerateMultisetPartialDerangements", "[", 
  RowBox[{"subsetRandomMultiset", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997497413474436`*^9, 3.8997497462356305`*^9}, {
  3.8997497872156754`*^9, 3.8997497920646453`*^9}},
 CellLabel->"In[1012]:=",
 CellID->16120653,ExpressionUUID->"e5c67fde-b3cc-4265-8084-bce5d148f6f9"],

Cell[BoxData["101"], "Output",
 CellChangeTimes->{{3.8997497893636208`*^9, 3.899749793416091*^9}},
 CellLabel->"Out[1012]=",
 CellID->333951188,ExpressionUUID->"a8e310a1-1a63-4ebf-8c94-3a36a6079bc3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["I will limit the output to 20 this time.", "MathCaption",
 CellChangeTimes->{{3.899749811680395*^9, 3.8997498170165954`*^9}},
 CellID->103140816,ExpressionUUID->"f9fd8d30-c3cb-49b6-a31b-bd89a6cbd243"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"MultisetPartialDerangements", "[", 
   RowBox[{"subsetRandomMultiset", ",", "3", ",", "20"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.899798424284652*^9, 3.8997984572720375`*^9}},
 CellLabel->"In[19]:=",
 CellID->631127211,ExpressionUUID->"e54cba96-76f8-4042-a5fc-5b2cc1e177a6"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnTGO60p2hht2MqG1BO9BgdOBA8HpGIYCJXcGfh4weRd4Y2DQC7gCmN1Q
O9AKtAIFF8q4Ae5Ae5DLTUBPc8ViV9VhHdUpfh/owbhvm3+V6nysI5li/+tf
vv7pf/7p7e3tb39w//GnP//9j7/99uf3//wX97/8169/a/766y///R+//u8v
f/3lt3/7yz+7H17c//y7+y///99vAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAZ6Pt+u902TSP8HQCLDIXtKjzHyREHKiarOwAQjpOx67qE39l93Ucd
kkHu9u9RhyRr/20XdYjmpfgaas5r/2UXdbx2Xq62XYVLxuDDJxfu4E4RWWJP
87kDAOFsNpu033HXxvZ4CTzkm1F7OQUe8s3o8qMNPOSbkdprqDkvd82/fG8D
D3kjJ59XiAUJ+E6LO7hTRNYcnmZyBwDCoZH7CTajQjYIzXnRyOFOIfMy5ymN
HMDLoZH7CTajQjYIzXnRyOFOIfMy5ymNHMDLoZH7CTajQjYIzXnRyOFOIfMy
5ymNHMDLoZH7CTajQjYIzXnRyOFOIfMy5ymNHMAL6bquaZrpr6xO/A6bEZuR
N8taIxfiQhTTJ8Qd3Ckiaw5PZ3cHAMI5Ho9OwOv1mvY7bEZsRt4sa42cq3BX
567aJSN5ZFou3MGdIrLm8HR2dwAgCufgp08B8v2O/EJ6OBwC9ZdvRuFZ8gtp
xLwUX0PNeck3CM153T4e+Db9jiZ8PHcm5MId3Ckia45GLoc7ABDFq+6Rc3a/
fdC27acDEG5GUVnCC2ncvBRfQ815CTcIzXkNTFsQNZ6Q0+IO7hSRlf8euWR3
ACCcVzVy5/N5EDxkAMLNKCpLeCGNm5fia6g5L+EGoTmvgemgqPGEnBZ3cKeI
rPyNXLI7ABDOC7+1ut1uneAhf4lS/v8eCs+SNwYR81J8DTXnJd8gNOd1C7Ag
fDwhp8Ud3CkiS+Vbq2nuAEA4+o1c3/dt2w52O9xbtk8HkLwZJWQlX0hT5qX4
GmrOK3mD0JzXIz4LEsYTclrcwZ0isnI2ckJ3ACAcp+H0raq+30m+kN4/bF+t
Vrlv2E7ISr6QpsxL8TXUnFfyBqE5rzuutn2bUcJ4HvHJhTu4U0SWuJHL5w4A
hON0W6/X03eijv6O8B3x6XT6tIH8PUv2qUJUlvAdcdy8FF9DzXkJP5HTmdeA
i3O17dtoEsbziE8u3MGdIrJkjVxWdwAglpDHOf70OzwLa7QxiJtXrc/CsvMc
OYUHmT5H4A7uFJEl85SHAANYx10bow5R1v496pBkuWtj1CGal+JrqDkvd82P
OqzMay5wB3eKyFL0FAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAu+r7fbrdN07x6IADzM9S2K/IcJ8cd
qBjcAUgjqzu+xK7rnn/OH/629Uer+YPmvnm58nZFLhmDD9zBnZKz5HWIOybd
qTRLdd8RX3/yuTPKZrMZ/bl7HdrjJfCQC9VeToGHXKjLjzbwkG9Gl+9t4CHf
jNTmpVkbs8zLV+RCcAd3Ss6apQ5xx547lWap7jtzXH8yuROVhVBsRj5o5KZP
izu4U0IWjdw01bpTaRaN3AQIxWYUC43c9GlxB3dKyKKRm6ZadyrNopGbAKHY
jGKhkZs+Le7gTglZNHLTVOtOpVk0chMgFJtRLDRy06fFHdwpIYtGbppq3ak0
i0ZulK7rmqYZ/erQDaHYjPyYa+SmSz0B3MGd8rNmqUPcsedOpVnmGrnZ3Rnl
eDy6lOv1OvqvCMVm5MNcI+eK3JW6K3jJSB7BHdwpP2uWOsQde+5UmmWukZvd
HR8uyPeoE/mLdjgcAqcgFyo8S154EVniYihzXpq1McuFwhW5b+OIHc8d3MGd
wrNm2fhwx547lWap7jtzNHI53PGR6V4FN8K3D9q2/XQMQqGisoSFF5clK4Zi
56VZGwr3yEWNJ+S0uIM7JWQp3COHOwWue61ZqvtO/nvkkt2JyhK+aOfzeRhk
yP1+QqGisoSFF5clK4Zi56VZGwqNXNR4Qk6LO7hTQpZCI4c7Ba57rVmq+07+
Ri7Znags+UVgu926QYb8NT35R9zhWfLGICJLXAxlzkuzNnS+tRo+npDT4g7u
lJCl861V3Clt3WvNUt13VL61muZOVFbyi9b3fdu2wwgdru38dAzJQiVkJRde
SlZqMRQ+L83ayNrIJYwn5LS4gzslZGVt5HCn2HWvNUt138nZyAnd8WWN3o+X
/KLdPzBcrVa5bzpNyEouvJSs1GIofF6atSFv5Fx5+4RKGM8juIM7JWfJGznc
MelOpVmq+464kcvnju+c6/X6+XY7Yfd7Op2mv6/xD1myd0ZRWcJ3EHFZsk8V
ip2XZm0IGzkX58rbJ0vCeB7BHdwpOUvYyOGOVXcqzVLdd2SNXFZ3Jnh+Zh3P
8xltDOKyKn0WlqHnyOV+GONoBO7gTglZwjrEHavuVJpl6DlyCu4E4l6HqEOU
tX+POiRZrpaiDlHWl13UYWVemrWhOa+5wB3cKSFLsw7nAnds1Vit9ax5/QEA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAgGf6vt9ut03TvHogAPMz1LYr8hwnxx2oGNwBSCOrO77Eruuef84f
L7b1B4Vr/YPm8jp05e2KXDIGH0W4g6e4k21euIM7C80Se5rPnVE2m83oz13d
tsdL4CEv8vZyCjzkRX750QYe8sKrM+vL7vK9DTzkjZy8Dn1FLqQId/AUd3LO
C3dwZ4lZc3iayZ2oLIrcWOFZK/JAaOSmwVPcyTov3MGdJWbRyMVDkRvLopGb
PC2bEZ56s2jkJk+LO7hTRBaNXDwUubEsGrnJ07IZ4ak3i0Zu8rS4gztFZNHI
xUORG8uikZs8LZsRnnqzaOQmT4s7uFNElp1Gruu6pmlGvzp0o8jNFZ61Ig9k
ljqcLvUECnIHT3En57xwB3eWmDWHp7O7M8rxeHQp1+t19F8pcmOFZ63IA5ml
Dl2Ru1J3BS8ZySMFuYOnuJNzXriDO0vMmsPT2d3x4YJ8jzqRF/nhcAicgrzI
w7PkxUCWvMgjamOOi60rct/GETueO6W4g6e4k21eN9zBnWVmzdHI5XDHR6Z7
FdwI3z5o2/bTMQiLPCpLWAxk3cRFHlcb+e+RixpPyGlV3cFT3MkzrwHcwZ0l
ZuW/Ry7ZnagsYZGfz+dhkCH3+wmLPCpLWAxk3cRFHlcb+Ru5qPGEnFbVHTzF
nTzzGsAd3FliVv5GLtmdqCz5Brrdbt0gQ/6anvxj5/As+cWNLHmRR9SGyrdW
w8cTclpVd/AUd7LN64Y7uLPMLJVvraa5E5WVXOR937dtO4zQ4drOT8eQXOQJ
WcnFQNbvWalFnlIbORu5hPGEnFbVHTzFnbnn9Qju4M4Ss3I2ckJ3fFmj9+Ml
F/n9A8PVapX7RtCErORiIOv3rNQiT6kNcSPnytsnVMJ4HinCHTzFnbnndQd3
cGehWeJGLp87vnOu1+vn2+2E71ZOp9P09zX+IUv2biUqS9jVk3UTf6oQVxuy
Rs7FufL2yZIwnkeKcAdPcWfueQ3gDu4sN0vWyGV1Z4LnZ9bxjJ3RixtZN1PP
kcv9MMbRCJ6FhafeLDvPkcMd3FlulsxTBXcCcXUbdYiy9u9RhyTLrW/UQdZI
1pdd1CHJ0qzDuVB1B09xp4B5zQXu4E4RWYqeAgAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFRD3/fb
7bZpmlcPBGB+htp2RZ7j5LgDFYM7AGlkdceX2HXd8893X/dRh2QMqln796hD
krX/sos6RFnfdlHHcrJcebsil4zBx9LcUV13RXdUrwm48wHulLzu4bCf6rsz
ymazGf25q9v2eAk85ELpZe3f28sp8JAX3uV7G3jIC+/yow085BcKW1m+Ihey
NHdU113RHdVrAu5MnhZ3Cln3QNhP9d2JyqpVKArP1oWiZKGW5g6NHI3cXOBO
4eseCPspjdxrsig8UxeKkoVamjs0cjRyc4E7ha97IOynNHKvyaLwTF0oShZq
ae7QyNHIzQXuFL7ugbCf0si9JovCM3WhKFmopblDI0cjNxe4U/i6B8J++vJG
ruu6pmlGvzp0q1coCs/WhWKWrOlST2CZ7tDILbCRwx177tDIlbGfzu7OKMfj
0aVcr9fRf61VKArP1oVilixX5K7UXcFLRvLIMt2hkVtgI4c79tyhkStjP53d
HR8uyPeoE3mRHw6HwCmoZokLLzxLXngRWeLCqzXr9vHQKt/GETueOwt0R3Xd
Fd1RvSbgDu4Uv+6FumNqP73lccdHpnsV3AjfPmjb9tMxqGbJCi8qS1h4cVmy
wqs1a2D6XoWo8YSctlZ3VNdd0R3VawLuTJ4Wd16+7uW6Y2c/HcjkTlSWsMjP
5/MwyJD7/VSzZIUXlSUsvLgsWeHVmjUwHRQ1npDT1uqO6roruqN6TcCdydPi
zsvXvVx37OynA5ncicqSf+y83W7dIEP+mp5qlvij4PAs+UfBEVniwqs16xbw
7aHw8YSctlZ3VNdd0R3VawLuTJ4Wd0pY90LdMbWf3rK5E5WVXOR937dtO4zQ
4drOT8egmpVaeAlZyYWXkpVaeLVmPeIr8oTxhJy2VndU113RHdVrAu5MnhZ3
bF2f2U/13fFljd6Pl1zk9w8MV6tV7ptOU7JSCy8hK7nwUrJSC6/WrDuuvH1C
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
AAAAgBD+D3x1jRA=
    "], {{0, 120.6}, {501., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{501., 120.6},
  PlotRange->{{0, 501.}, {0, 120.6}}]], "Output",
 CellChangeTimes->{{3.899798432169262*^9, 3.899798458032202*^9}},
 CellLabel->"Out[19]=",
 CellID->36091011,ExpressionUUID->"51408280-70da-4c3a-83a1-74c06946f874"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
There are ten candies: licorice, peppermint drops, lemon drops, truffles, \
gummy bears, gummy worms, chocolate bars, jelly beans, peanut butter cups, \
and marshmallows. There are four children named Peter, James, John, and \
Andrew. How many ways can the ten candies be distributed among the four \
children? We can compute 10 multichoose 4.\
\>", "MathCaption",
 CellID->305515986,ExpressionUUID->"5dfcc4b6-c321-4f27-8924-a61ac498e87c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multichoose", "[", 
  RowBox[{"10", ",", "4"}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`Combinatorics`"],
 CellLabel->"In[991]:=",
 CellID->39383660,ExpressionUUID->"650ccf45-072a-4662-b6e4-64fff64ad865"],

Cell[BoxData["715"], "Output",
 CellChangeTimes->{3.899749385891509*^9},
 CellLabel->"Out[991]=",
 CellID->103072013,ExpressionUUID->"a7ede59a-a1fd-4743-8722-eb559461ad3d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Another way of entering it is like this. This is infix notation.\
\>", "MathCaption",
 CellChangeTimes->{{3.899798478505045*^9, 3.899798483139888*^9}},
 CellID->17219148,ExpressionUUID->"ab81e88e-b141-4d40-aad2-cf229678e584"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"10", "~", "Multichoose", "~", "4"}]], "Input",
 CellProlog:>Needs["PeterBurbery`Combinatorics`"],
 CellLabel->"In[992]:=",
 CellID->47120929,ExpressionUUID->"185b2e2a-c365-4406-9fed-b4a1573545ea"],

Cell[BoxData["715"], "Output",
 CellChangeTimes->{3.8997493866190166`*^9},
 CellLabel->"Out[992]=",
 CellID->64792566,ExpressionUUID->"7cfd9c39-cd46-47ea-88f5-bdd47ff695d8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
We can also generate all the combinations and count them. Since there are a \
lot of combinations, I am not listing them all here and then using Length. \
I'm just going to use Length immediately.\
\>", "MathCaption",
 CellID->14643919,ExpressionUUID->"ad828151-736c-43bd-81d4-d49439f20f80"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"OrderlessCombinations", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<licorice\>\"", ",", "\"\<peppermint drops\>\"", ",", 
      "\"\<lemon drops\>\"", ",", "\"\<truffles\>\"", ",", 
      "\"\<gummy bears\>\"", ",", "\"\<gummy worms\>\"", ",", 
      "\"\<chocolate bars\>\"", ",", "\"\<jelly beans\>\"", ",", 
      "\"\<peanut butter cups\>\"", ",", "\"\<marshmallows\>\""}], "}"}], ",", 
    RowBox[{"{", "4", "}"}]}], "]"}]}]], "Input",
 CellProlog:>Needs["PeterBurbery`Combinatorics`"],
 CellLabel->"In[993]:=",
 CellID->37517731,ExpressionUUID->"989a0c1f-9627-4e1d-bcf2-d15bb508b551"],

Cell[BoxData["715"], "Output",
 CellChangeTimes->{3.899749387095017*^9},
 CellLabel->"Out[993]=",
 CellID->530337700,ExpressionUUID->"5048bd02-63df-47b3-ab8d-ae45aa71a95e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get length four sets from a list of length two:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.875713092380643*^9, 3.8757131054083443`*^9}},
 CellID->968157184,ExpressionUUID->"2078d7d4-b841-49ab-9d3d-65c9621baaa4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OrderlessCombinations", "[", 
  RowBox[{
   RowBox[{"Range", "[", "2", "]"}], ",", 
   RowBox[{"{", "4", "}"}]}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.8757130813149757`*^9, 3.875713083065956*^9}, {
  3.875713163776183*^9, 3.875713164021326*^9}, {3.898421107568678*^9, 
  3.89842111327289*^9}},
 CellLabel->"In[1015]:=",
 CellID->702446134,ExpressionUUID->"a46e6f34-8dba-42fc-b6b7-896ffb4adbc0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.8757130696328373`*^9, 3.875713083332706*^9}, 
   3.8984211136238894`*^9, 3.8997498737485714`*^9},
 CellLabel->"Out[1015]=",
 CellID->306566547,ExpressionUUID->"155f9620-589a-47f3-a15b-e83415b96f21"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Elements need not be integers:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.875713136035513*^9, 3.875713142128128*^9}},
 CellID->505671602,ExpressionUUID->"ca576535-6d5b-4d95-8442-8e176024fd55"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OrderlessCombinations", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<dog\>\"", ",", "\"\<cat\>\"", ",", "\"\<bird\>\""}], "}"}], 
   ",", "3"}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.875713124983794*^9, 3.875713133759502*^9}, 
   3.898421125793764*^9},
 CellLabel->"In[1016]:=",
 CellID->618773088,ExpressionUUID->"cadac715-2972-421b-b325-154e1756d009"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "\<\"bird\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"cat\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"dog\"\>", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"bird\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"cat\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"dog\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cat\"\>", ",", "\<\"cat\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cat\"\>", ",", "\<\"dog\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"dog\"\>", ",", "\<\"dog\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"bird\"\>", ",", "\<\"bird\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"bird\"\>", ",", "\<\"cat\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"bird\"\>", ",", "\<\"dog\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"cat\"\>", ",", "\<\"cat\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"cat\"\>", ",", "\<\"dog\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"dog\"\>", ",", "\<\"dog\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cat\"\>", ",", "\<\"cat\"\>", ",", "\<\"cat\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cat\"\>", ",", "\<\"cat\"\>", ",", "\<\"dog\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cat\"\>", ",", "\<\"dog\"\>", ",", "\<\"dog\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"dog\"\>", ",", "\<\"dog\"\>", ",", "\<\"dog\"\>"}], "}"}]}], 
  "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.875713134316802*^9, 3.898421126716824*^9, 
  3.8997498744259176`*^9},
 CellLabel->"Out[1016]=",
 CellID->525838052,ExpressionUUID->"5ff89afe-705e-4047-978d-fd8bea128a5a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
We could consider {\"cat\", \"cat\", \"cat\"} and {\"dog\", \"dog\", \"dog\"} \
as partly equal.\
\>", "MathCaption",
 CellChangeTimes->{{3.8997498828965025`*^9, 3.8997498907152777`*^9}, {
  3.8997499307985764`*^9, 3.89974994322063*^9}},
 CellID->330285041,ExpressionUUID->"caa6738b-d790-45d6-a462-f179b33a96cf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CanonicalMultiset", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<cat\>\"", ",", "\"\<cat\>\"", ",", "\"\<cat\>\""}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8997498914598007`*^9, 3.899749901145748*^9}},
 CellLabel->"In[1017]:=",
 CellID->149666305,ExpressionUUID->"659b7518-d316-46c8-8fac-cd17f91795a9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.89974990145318*^9},
 CellLabel->"Out[1017]=",
 CellID->164357416,ExpressionUUID->"9bbae189-9b67-445c-8983-dea270d066c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CanonicalMultiset", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<dog\>\"", ",", "\"\<dog\>\"", ",", "\"\<dog\>\""}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8997498914598007`*^9, 3.899749909292178*^9}},
 CellLabel->"In[1018]:=",
 CellID->279831655,ExpressionUUID->"ab1f8aec-3bc1-47f5-9dfb-96a5e71515c4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.899749909631289*^9},
 CellLabel->"Out[1018]=",
 CellID->240178721,ExpressionUUID->"89c66e47-02b5-4422-b2d6-25d3a6ea72ff"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
If we delete duplicates by CanonicalMultiset, we get fewer elements.\
\>", "MathCaption",
 CellChangeTimes->{{3.8997499119156322`*^9, 3.8997499288560653`*^9}},
 CellID->377750434,ExpressionUUID->"24fad50b-a699-49c6-b0c6-b6cd80d23a8e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DeleteDuplicatesBy", "[", "CanonicalMultiset", "]"}], "[", 
  RowBox[{"OrderlessCombinations", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<dog\>\"", ",", "\"\<cat\>\"", ",", "\"\<bird\>\""}], "}"}], 
    ",", "3"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997499753112793`*^9, 3.899750004350798*^9}},
 CellLabel->"In[1019]:=",
 CellID->80880133,ExpressionUUID->"c116060b-7fba-4bac-a70c-1f9a5b6d0e30"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "\<\"bird\"\>", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"bird\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"cat\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"bird\"\>", ",", "\<\"bird\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"bird\"\>", ",", "\<\"cat\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"cat\"\>", ",", "\<\"cat\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bird\"\>", ",", "\<\"cat\"\>", ",", "\<\"dog\"\>"}], "}"}]}],
   "}"}]], "Output",
 CellChangeTimes->{3.89975000499255*^9},
 CellLabel->"Out[1019]=",
 CellID->99913589,ExpressionUUID->"0fa02146-6033-4fbd-83b7-2b87c07d0b10"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CanonicalMultiset", "/@", 
  RowBox[{
   RowBox[{"DeleteDuplicatesBy", "[", "CanonicalMultiset", "]"}], "[", 
   RowBox[{"OrderlessCombinations", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<dog\>\"", ",", "\"\<cat\>\"", ",", "\"\<bird\>\""}], "}"}],
      ",", "3"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.89975007676978*^9, 3.899750085997959*^9}},
 CellLabel->"In[1022]:=",
 CellID->281231649,ExpressionUUID->"e123903f-d8e8-40ac-a83d-6a20632702fe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8997500812424703`*^9, 3.899750086329784*^9}},
 CellLabel->"Out[1022]=",
 CellID->480068261,ExpressionUUID->"fb21fd97-e85f-442b-aab7-402962c4d966"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here's what we would get something like.", "MathCaption",
 CellChangeTimes->{{3.899750063823572*^9, 3.8997500740194883`*^9}},
 CellID->88233538,ExpressionUUID->"281593b7-5d84-46ec-a880-cbd431c9ffe9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OrderlessCombinationsOfUnmarkedElements", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<dog\>\"", ",", "\"\<cat\>\"", ",", "\"\<bird\>\""}], "}"}], 
   ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.899750048228162*^9, 3.89975005715495*^9}},
 CellLabel->"In[1020]:=",
 CellID->926616109,ExpressionUUID->"36c15090-bf2b-4437-acaf-eeea46e2a1d2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8997500577748804`*^9},
 CellLabel->"Out[1020]=",
 CellID->78903040,ExpressionUUID->"1f6c6843-dbf6-4458-8490-2272edb972ae"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["These produce the same output.", "MathCaption",
 CellChangeTimes->{{3.899750098684269*^9, 3.8997501037767563`*^9}},
 CellID->97113938,ExpressionUUID->"a5b83f39-cf1c-4472-a16b-59c9ed428e91"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CanonicalMultiset", "/@", 
  RowBox[{
   RowBox[{"DeleteDuplicatesBy", "[", "CanonicalMultiset", "]"}], "[", 
   RowBox[{"OrderlessCombinations", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<dog\>\"", ",", "\"\<cat\>\"", ",", "\"\<bird\>\""}], "}"}],
      ",", "3"}], "]"}], "]"}]}]], "Input",
 CellLabel->"In[1023]:=",
 CellID->22984984,ExpressionUUID->"bef38fca-96c3-4712-9f8a-0a889181b4fc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8997501087394667`*^9},
 CellLabel->"Out[1023]=",
 CellID->239111319,ExpressionUUID->"9b6e8aa2-1af0-4790-ab15-d49c9058b01e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Let's compare the performance for a large set.", "MathCaption",
 CellChangeTimes->{{3.899750123113118*^9, 3.899750129791135*^9}},
 CellID->396413639,ExpressionUUID->"4d306989-5b9a-40cc-9cb0-c5481bc50c33"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<EchoPerformance\>\"", "]"}], "[", 
  RowBox[{"CanonicalMultiset", "/@", 
   RowBox[{
    RowBox[{"DeleteDuplicatesBy", "[", "CanonicalMultiset", "]"}], "[", 
    RowBox[{"OrderlessCombinations", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<dog\>\"", ",", "\"\<cat\>\"", ",", "\"\<bird\>\""}], 
       "}"}], ",", "3"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8997501310771832`*^9, 3.89975013486598*^9}},
 CellLabel->"In[1024]:=",
 CellID->229833682,ExpressionUUID->"29b081b3-4944-424b-a260-d5ed43ce779b"],

Cell[BoxData[
 RowBox[{
  TagBox["Map",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    StyleBox[
     TemplateBox[{"0.0005623`", "\" s\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]], ",", 
    StyleBox[
     TemplateBox[{"7168", "\" B\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]]}], "}"}]}]], "Echo",
 CellChangeTimes->{3.8997501387702274`*^9},
 CellID->834526706,ExpressionUUID->"f4dce990-fc2b-4f39-acb0-eec0e3250eb4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.899750139293807*^9},
 CellLabel->"Out[1024]=",
 CellID->630516631,ExpressionUUID->"8cf0da92-36c6-472b-bdc8-a052b8f4b1d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<EchoPerformance\>\"", "]"}], "[", 
  RowBox[{"OrderlessCombinationsOfUnmarkedElements", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<dog\>\"", ",", "\"\<cat\>\"", ",", "\"\<bird\>\""}], "}"}], 
    ",", "3"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997501310771832`*^9, 3.8997501417967834`*^9}},
 CellLabel->"In[1025]:=",
 CellID->162857240,ExpressionUUID->"b40b4488-3753-4fc3-930a-091be57261d6"],

Cell[BoxData[
 RowBox[{
  TagBox["OrderlessCombinationsOfUnmarkedElements",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    StyleBox[
     TemplateBox[{"0.0003973`", "\" s\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]], ",", 
    StyleBox[
     TemplateBox[{"7280", "\" B\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]]}], "}"}]}]], "Echo",
 CellChangeTimes->{3.899750142693967*^9},
 CellID->267038778,ExpressionUUID->"0ca34efe-ce90-4767-914a-1614d8b27cd5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8997501432299366`*^9},
 CellLabel->"Out[1025]=",
 CellID->51852502,ExpressionUUID->"6f0a65df-c765-4ff6-9e88-3100d8d3a88b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<EchoPerformance\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"CanonicalMultiset", "/@", 
    RowBox[{
     RowBox[{"DeleteDuplicatesBy", "[", "CanonicalMultiset", "]"}], "[", 
     RowBox[{"OrderlessCombinations", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<dog\>\"", ",", "\"\<cat\>\"", ",", "\"\<bird\>\""}], 
        "}"}], ",", "7"}], "]"}], "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997501666691236`*^9, 3.899750174714215*^9}},
 CellLabel->"In[1028]:=",
 CellID->306376386,ExpressionUUID->"e6da36e1-0ac2-4ce7-960f-3e7e11dc26a6"],

Cell[BoxData[
 RowBox[{
  TagBox["CompoundExpression",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    StyleBox[
     TemplateBox[{"0.0026763`", "\" s\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]], ",", 
    StyleBox[
     TemplateBox[{"40688", "\" B\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]]}], "}"}]}]], "Echo",
 CellChangeTimes->{3.899750176058378*^9},
 CellID->448272658,ExpressionUUID->"1ecac890-df05-488a-9a66-32d190a7fd81"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<EchoPerformance\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"OrderlessCombinationsOfUnmarkedElements", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<dog\>\"", ",", "\"\<cat\>\"", ",", "\"\<bird\>\""}], "}"}],
      ",", "7"}], "]"}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997501310771832`*^9, 3.899750179741675*^9}},
 CellLabel->"In[1029]:=",
 CellID->3601619,ExpressionUUID->"e7d6d7e1-8178-45f2-85d0-0da612a16738"],

Cell[BoxData[
 RowBox[{
  TagBox["CompoundExpression",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    StyleBox[
     TemplateBox[{"0.0021079`", "\" s\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]], ",", 
    StyleBox[
     TemplateBox[{"40272", "\" B\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]]}], "}"}]}]], "Echo",
 CellChangeTimes->{3.8997501802011633`*^9},
 CellID->88055709,ExpressionUUID->"72c9f508-d18e-40d5-b703-6a7425e9b00c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The definition of the function is significantly faster and uses significantly \
less memory for larger inputs.\
\>", "MathCaption",
 CellChangeTimes->{{3.8997502844391108`*^9, 3.8997503008520737`*^9}, {
  3.8997986028509464`*^9, 3.899798605369852*^9}},
 CellID->100378946,ExpressionUUID->"4b78479c-604e-454f-829f-bf80fc1a71c1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<EchoPerformance\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"CanonicalMultiset", "/@", 
    RowBox[{
     RowBox[{"DeleteDuplicatesBy", "[", "CanonicalMultiset", "]"}], "[", 
     RowBox[{"OrderlessCombinations", "[", 
      RowBox[{
       RowBox[{"RandomWord", "[", 
        RowBox[{"\"\<Noun\>\"", ",", "7"}], "]"}], ",", "17"}], "]"}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997502399302263`*^9, 3.8997502466353493`*^9}},
 CellLabel->"In[1030]:=",
 CellID->268140765,ExpressionUUID->"cc6b47a3-4f04-4421-b50e-388ff39ddfba"],

Cell[BoxData[
 RowBox[{
  TagBox["CompoundExpression",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    StyleBox[
     TemplateBox[{"16.5168917`", "\" s\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]], ",", 
    StyleBox[
     TemplateBox[{"148109320", "\" B\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]]}], "}"}]}]], "Echo",
 CellChangeTimes->{3.8997502637371936`*^9},
 CellID->434075465,ExpressionUUID->"cd5b5221-989f-4032-b5b1-217906da5182"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<EchoPerformance\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"OrderlessCombinationsOfUnmarkedElements", "[", 
    RowBox[{
     RowBox[{"RandomWord", "[", 
      RowBox[{"\"\<Noun\>\"", ",", "7"}], "]"}], ",", "17"}], "]"}], ";"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.899750261218817*^9, 3.899750262644846*^9}},
 CellLabel->"In[1031]:=",
 CellID->589080666,ExpressionUUID->"a8f4cea8-a598-434a-a978-507cd092e67e"],

Cell[BoxData[
 RowBox[{
  TagBox["CompoundExpression",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    StyleBox[
     TemplateBox[{"9.0295319`", "\" s\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]], ",", 
    StyleBox[
     TemplateBox[{"84408424", "\" B\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]]}], "}"}]}]], "Echo",
 CellChangeTimes->{3.8997502756494303`*^9},
 CellID->323976790,ExpressionUUID->"a3b80ac3-664a-4c6b-bba6-0a04224c3148"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Make a Ferrers diagram for every partition of 5.", "MathCaption",
 CellChangeTimes->{{3.899749400851626*^9, 3.8997494092761846`*^9}},
 CellID->478421323,ExpressionUUID->"2ee9413e-e866-46d0-898c-63a370afe9f1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{"FerrersDiagram", "/@", 
     RowBox[{"IntegerPartitions", "[", "5", "]"}]}], ",", 
    RowBox[{"UpTo", "[", "3", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.899749559219838*^9, 3.8997495620700817`*^9}},
 CellLabel->"In[1005]:=",
 CellID->542729463,ExpressionUUID->"2fc42020-cfc6-41c2-bb08-714b0fe14cd8"],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      TagBox[GridBox[{
         {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>"}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], {29.5625, -40.3125}, {Center, Center}, {55., 75.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      TagBox[GridBox[{
         {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>", "", "", ""}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], {88.6875, -40.3125}, {Center, Center}, {55., 75.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      TagBox[GridBox[{
         {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", ""}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], {147.8125, -40.3125}, {Center, Center}, {55., 75.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {
     InsetBox[
      TagBox[GridBox[{
         {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>", "", ""},
         {"\<\"\[FilledCircle]\"\>", "", ""}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], {29.5625, -120.9375}, {Center, Center}, {55., 75.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      TagBox[GridBox[{
         {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>", ""}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], {88.6875, -120.9375}, {Center, Center}, {55., 75.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      TagBox[GridBox[{
         {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>", ""},
         {"\<\"\[FilledCircle]\"\>", ""},
         {"\<\"\[FilledCircle]\"\>", ""}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], {147.8125, -120.9375}, {Center, Center}, {55., 75.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {
     InsetBox[
      TagBox[GridBox[{
         {"\<\"\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>"},
         {"\<\"\[FilledCircle]\"\>"}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], {29.5625, -201.5625}, {Center, Center}, {55., 75.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     TagBox[InsetBox["", {88.6875, -201.5625}, {Center, Center}, {55., 75.},
       BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}],
      "InsetString"], 
     TagBox[InsetBox["", {147.8125, -201.5625}, {Center, Center}, {55., 75.},
       BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}],
      "InsetString"]}}, {}},
  ImageSize->Automatic,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.8997495625907516`*^9},
 CellLabel->"Out[1005]=",
 CellID->25169857,ExpressionUUID->"dcbc33bc-8980-4510-a3ad-a6bb8264c909"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rows 1 to 4 have 5, 4, 2, 2 dots:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.765829554031358*^9, 3.765829573726055*^9}},
 CellID->59602588,ExpressionUUID->"82afbcc1-899e-4da6-b980-4137d6bb96ae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FerrersDiagram", "[", 
  RowBox[{"{", 
   RowBox[{"5", ",", "4", ",", "2", ",", "2"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8983577165611973`*^9, 3.8983577214598713`*^9}},
 CellLabel->"In[18]:=",
 CellID->141527026,ExpressionUUID->"71b6487b-342d-4700-b80a-0a123ccc4327"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>"},
    {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", ""},
    {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "", "", ""},
    {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "", "", ""}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.898357721742388*^9, 3.8993962051168375`*^9},
 CellLabel->"Out[18]=",
 CellID->387932858,ExpressionUUID->"0aa9cb7e-523a-4326-b46c-f58c9ba53d99"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Here is a",
 StyleBox[" ", "MathCaption"],
 "random choice of one of the 204226 partitions of 50:"
}], "MathCaption",
 CellChangeTimes->{3.8993962334151325`*^9},
 CellID->909413053,ExpressionUUID->"110853c8-35a5-4e34-aab7-4cb11bf3f4ce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Framed", "@", 
  RowBox[{"FerrersDiagram", "@", 
   RowBox[{"RandomChoice", "[", 
    RowBox[{"IntegerPartitions", "@", "50"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8983577165611973`*^9, 3.8983577348146467`*^9}, {
  3.899396215343503*^9, 3.8993962297246037`*^9}},
 CellLabel->"In[20]:=",
 CellID->285728069,ExpressionUUID->"633a66f0-d9b7-4ca6-a96b-720b234367a8"],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\
\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", \
"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", \
"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>"},
     {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\
\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", \
"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", \
"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>"},
     {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\
\<\"\[FilledCircle]\"\>", "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\
\<\"\[FilledCircle]\"\>", "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "\<\"\
\[FilledCircle]\"\>", "", "", "", "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "", "", "", "", 
      "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "", "", "", "", 
      "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "", "", "", "", 
      "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "\<\"\[FilledCircle]\"\>", "", "", "", "", 
      "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "", "", "", "", "", "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "", "", "", "", "", "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "", "", "", "", "", "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "", "", "", "", "", "", "", "", "", ""},
     {"\<\"\[FilledCircle]\"\>", "", "", "", "", "", "", "", "", "", ""}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.8983577351541634`*^9, {3.8993962200654726`*^9, 3.8993962305310087`*^9}},
 CellLabel->"Out[20]=",
 CellID->291815495,ExpressionUUID->"5fd00934-6622-4918-a5aa-8ac20bbbf0e6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Select from the list {5,6,7,8,9} those permutations that form a prime when \
concatenating the digits: \
\>", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.775568205955653*^9, 3.775568227320828*^9}, {
  3.775568257522637*^9, 3.775568284776268*^9}, {3.775568406638788*^9, 
  3.7755684078891897`*^9}},
 CellID->123284224,ExpressionUUID->"a5a94a3f-94c3-4578-b514-baf49ce7dcac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"PrimeQ", "@*", "FromDigits"}]}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.775568168324977*^9, 3.775568246840334*^9}, {
   3.775568343294755*^9, 3.7755683487998447`*^9}, {3.775568398156794*^9, 
   3.775568423898609*^9}, {3.776529126287918*^9, 3.77652913001302*^9}, 
   3.898627106119957*^9},
 CellLabel->"In[1033]:=",
 CellID->841619866,ExpressionUUID->"676bbd29-610b-4954-ab95-ebb2135eb947"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "8", ",", "9", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "7", ",", "6", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8", ",", "6", ",", "7", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8", ",", "9", ",", "6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "5", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "7", ",", "5", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "8", ",", "5", ",", "9", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "9", ",", "8", ",", "5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "5", ",", "6", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "5", ",", "8", ",", "6", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8", ",", "5", ",", "6", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "6", ",", "5", ",", "7", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "9", ",", "5", ",", "6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "9", ",", "6", ",", "5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "6", ",", "5", ",", "8", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "6", ",", "8", ",", "5", ",", "7"}], "}"}]}], 
  "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.775568183396497*^9, 3.775568201638604*^9}, {
   3.775568255076702*^9, 3.775568263439975*^9}, {3.775568380685358*^9, 
   3.775568424252521*^9}, 3.7756595100280657`*^9, {3.776529095525774*^9, 
   3.776529130338461*^9}, 3.776529313866888*^9, 3.777914407196706*^9, 
   3.8986271159046593`*^9, {3.899750326409789*^9, 3.8997503438722515`*^9}},
 CellLabel->"Out[1033]=",
 CellID->89679823,ExpressionUUID->"95e20454-c37b-451e-90cf-20c2f592e289"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here are the numbers.", "MathCaption",
 CellChangeTimes->{{3.899750347468344*^9, 3.89975035017175*^9}},
 CellID->24958883,ExpressionUUID->"bb500137-7337-482b-ab0d-c6e66f2ff6be"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FromDigits", "/@", 
  RowBox[{
   StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
    RowBox[{"PrimeQ", "@*", "FromDigits"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.899750351130355*^9, 3.8997503536065807`*^9}},
 CellLabel->"In[1036]:=",
 CellID->484647955,ExpressionUUID->"8d047b5e-30e9-4d52-b17d-917a146a3ba9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "56897", ",", "57689", ",", "58679", ",", "58967", ",", "65789", ",", 
   "67589", ",", "68597", ",", "69857", ",", "75689", ",", "75869", ",", 
   "78569", ",", "86579", ",", "89567", ",", "89657", ",", "96587", ",", 
   "96857"}], "}"}]], "Output",
 CellChangeTimes->{3.899750353965536*^9},
 CellLabel->"Out[1036]=",
 CellID->123777944,ExpressionUUID->"27e6fb97-2b15-447d-bb57-dbce76c6203b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Select permutations of length 3:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.77556848444596*^9, 3.7755685001038637`*^9}},
 CellID->837471449,ExpressionUUID->"b5e4bb7d-b81b-4367-8045-a87d392d434b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"PrimeQ", "@*", "FromDigits"}]}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.7755684786907463`*^9, 3.7755684795515823`*^9}, 
   3.8986271076058855`*^9, 3.8997503780590734`*^9},
 CellLabel->"In[1034]:=",
 CellID->724085147,ExpressionUUID->"1e53151b-3238-4ca0-8e16-f69f9f7d61ad"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "5", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "6", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "6", ",", "7"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.7755684799271097`*^9, 3.775568497623534*^9}, 
   3.775659511887641*^9, 3.7765291338475637`*^9, 3.77652931593814*^9, 
   3.777914412861889*^9, 3.8986271164919386`*^9, 3.8997503446104565`*^9},
 CellLabel->"Out[1034]=",
 CellID->96753963,ExpressionUUID->"ea8414db-f73f-464f-8649-aed758a5d228"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here are the numbers.", "MathCaption",
 CellChangeTimes->{{3.8997503847406015`*^9, 3.899750387408563*^9}},
 CellID->505704633,ExpressionUUID->"fa399704-d200-4aa9-a678-667fc9210684"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FromDigits", "/@", 
  RowBox[{
   StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
    RowBox[{"{", "3", "}"}], ",", 
    RowBox[{"PrimeQ", "@*", "FromDigits"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8997503882187953`*^9, 3.8997503919935703`*^9}},
 CellLabel->"In[1039]:=",
 CellID->220964068,ExpressionUUID->"2a666cbc-e30c-404a-8066-f18b295d83a5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "569", ",", "587", ",", "659", ",", "769", ",", "857", ",", "859", ",", 
   "967"}], "}"}]], "Output",
 CellChangeTimes->{3.8997503924270816`*^9},
 CellLabel->"Out[1039]=",
 CellID->74427375,ExpressionUUID->"73b7880b-39b1-4e57-8445-595691374db1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Select permutations with length 3\[LongDash]4:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.77556848444596*^9, 3.775568509805202*^9}, {
  3.775568557163394*^9, 3.775568581141801*^9}},
 CellID->733329592,ExpressionUUID->"1b727bc3-b78e-4856-8727-e378e0a03967"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"PrimeQ", "@*", "FromDigits"}]}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.7755684786907463`*^9, 3.7755684795515823`*^9}, {
   3.7755685117029343`*^9, 3.775568514832704*^9}, {3.775568548776168*^9, 
   3.775568573740428*^9}, 3.8986271097288756`*^9},
 CellLabel->"In[1035]:=",
 CellID->472360365,ExpressionUUID->"fc63b36c-a68e-47b2-bb22-2bd5aa0bca7d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "5", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "6", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8", ",", "6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8", ",", "6", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8", ",", "7", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8", ",", "9", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "9", ",", "8", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "8", ",", "5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "5", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5", ",", "9", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "5", ",", "8", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "8", ",", "5", ",", "7"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.7755684799271097`*^9, 3.775568515310902*^9}, {
   3.7755685510649137`*^9, 3.775568573972561*^9}, 3.77565951429523*^9, 
   3.7765291361641808`*^9, 3.77652931673779*^9, 3.777914421493857*^9, 
   3.8986271173406982`*^9, 3.8997503452354593`*^9},
 CellLabel->"Out[1035]=",
 CellID->45157847,ExpressionUUID->"acb453e5-5d5b-4fd8-8d50-4c9a2dd3917b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here are the numbers.", "MathCaption",
 CellChangeTimes->{{3.8997503986814213`*^9, 3.899750401894279*^9}},
 CellID->232625522,ExpressionUUID->"9627a14b-7603-4301-a763-bf85eb354a05"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FromDigits", "/@", 
  RowBox[{
   StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}], ",", 
    RowBox[{"PrimeQ", "@*", "FromDigits"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.899750402509916*^9, 3.899750408302501*^9}},
 CellLabel->"In[1040]:=",
 CellID->129412639,ExpressionUUID->"450e5ed1-dffe-48a1-89f5-f602c85e1507"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "569", ",", "587", ",", "659", ",", "769", ",", "857", ",", "859", ",", 
   "967", ",", "5689", ",", "5867", ",", "5869", ",", "5879", ",", "5897", 
   ",", "5987", ",", "6857", ",", "7589", ",", "8597", ",", "9587", ",", 
   "9857"}], "}"}]], "Output",
 CellChangeTimes->{3.899750408595244*^9},
 CellLabel->"Out[1040]=",
 CellID->294220470,ExpressionUUID->"fd287984-346d-4d2a-8101-5d17afc1f4ac"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Select permutations for which the first two elements and the last elements \
add up to the same value:\
\>", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.775568615672393*^9, 3.775568642910595*^9}},
 CellID->979377819,ExpressionUUID->"ee4b2894-dedf-4eca-8751-3a8d88df27d8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "2"}], "]"}], "]"}], "]"}], "==", 
     RowBox[{"Total", "[", 
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"3", ";;", "4"}], "]"}], "]"}], "]"}]}], "&"}]}], 
  "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.775568591553537*^9, 3.7755686112570133`*^9}, 
   3.898627111559018*^9},
 CellLabel->"In[1041]:=",
 CellID->174898405,ExpressionUUID->"1becddf9-e3ff-4e30-aaa9-e637c9369c2c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "3", ",", "2"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.775568611591529*^9, 3.775568644008772*^9, 
  3.775659516424469*^9, 3.7765291414916773`*^9, 3.77652931856979*^9, 
  3.8986271181438427`*^9, 3.8997504412437253`*^9},
 CellLabel->"Out[1041]=",
 CellID->408943794,ExpressionUUID->"c8e5a2e5-ef57-4022-9988-c9a20be021fa"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Select the first ten permutations of length 4 for which the elements add up \
to an odd number:\
\>", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.775568753645933*^9, 3.775568812706834*^9}},
 CellID->559719523,ExpressionUUID->"0b7e87c3-f921-480e-967b-8adc19436180"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}], 
   ",", 
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"OddQ", "@*", "Total"}], ",", "10"}], "]"}]], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{
  3.775568390327188*^9, {3.775568657121542*^9, 3.775568658024325*^9}, {
   3.7755687157418547`*^9, 3.7755687754639063`*^9}, 3.898627183585071*^9},
 CellLabel->"In[1042]:=",
 CellID->359245144,ExpressionUUID->"b4e000b7-808a-4d43-8512-51c13ae4e93b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "5", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "6", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "5", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "5", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "6", ",", "5"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.7755687038053503`*^9, 3.7755688138863287`*^9}, 
   3.7756595189226503`*^9, 3.776529143745932*^9, 3.7765293197019567`*^9, 
   3.898627205694783*^9, 3.8997505791303563`*^9},
 CellLabel->"Out[1042]=",
 CellID->162633939,ExpressionUUID->"65d59113-d989-4626-a1c6-6736c3ac7d38"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Select polynomials for which the slope is 1 at ",
 Cell[BoxData[
  RowBox[{
   StyleBox["x", "TI"], "=", "0"}]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "048d9b8c-ac61-4c56-bd31-add39e5c28f6"],
 ":"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.775568978297995*^9, 3.775568990453267*^9}, 
   3.7779148648834963`*^9},
 CellID->306011383,ExpressionUUID->"6f09782f-0dc1-4255-8b19-e157535cb50e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"out", "=", 
  RowBox[{"Total", "/@", 
   RowBox[{
    StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"4", "x"}], ",", "1", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "-", "2"}], ")"}], "^", "2"}]}], "}"}], ",", "4", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"Total", "[", "#", "]"}], ",", "x"}], "]"}], ")"}], "/.", 
         RowBox[{"x", "\[Rule]", "0"}]}], ")"}], "\[Equal]", "1"}], "&"}]}], 
    "]"}]}]}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.7755690066041317`*^9, 3.775569013725047*^9}, 
   3.8986271855484247`*^9},
 CellLabel->"In[1043]:=",
 CellID->884651642,ExpressionUUID->"9f154ec0-a4ee-48eb-8371-5c035e54dace"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"1", "+", "x"}], ",", 
   RowBox[{"1", "+", "x"}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    RowBox[{"5", " ", "x"}]}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.775568996876224*^9, 3.775569014097753*^9}, 
   3.775659522403158*^9, 3.7756596276060133`*^9, 3.776529146850255*^9, 
   3.776529321528561*^9, 3.8986272065335693`*^9, 3.899750596239173*^9},
 CellLabel->"Out[1043]=",
 CellID->320654796,ExpressionUUID->"86c46377-9f3a-4217-ab10-1aff57df521b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Expand the polynomials.", "MathCaption",
 CellChangeTimes->{{3.8997506020821342`*^9, 3.899750605125643*^9}},
 CellID->22585214,ExpressionUUID->"b67ba9fe-5fe4-4769-9844-d2acfa40734c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", "out", "]"}]], "Input",
 CellChangeTimes->{{3.8997506056179447`*^9, 3.899750608200514*^9}},
 CellLabel->"In[1045]:=",
 CellID->548368980,ExpressionUUID->"a063565a-cfb9-441f-bd77-ec3959e23253"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"1", "+", "x"}], ",", 
   RowBox[{"1", "+", "x"}], ",", 
   RowBox[{"4", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"4", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"4", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"4", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"4", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"4", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.899750608675965*^9},
 CellLabel->"Out[1045]=",
 CellID->266909173,ExpressionUUID->"390b2b56-ff40-49bb-b7ad-bc0c1923198a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["There are really only three unique ones.", "MathCaption",
 CellChangeTimes->{{3.8997506924034615`*^9, 3.8997506979678574`*^9}},
 CellID->305030941,ExpressionUUID->"1835cfb8-ce85-4d75-a2c6-ffaa88b5aec3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeleteDuplicates", "[", 
  RowBox[{"Expand", "[", "out", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997506844197226`*^9, 3.8997506878270464`*^9}},
 CellLabel->"In[1050]:=",
 CellID->206631954,ExpressionUUID->"ad3dd1c9-e399-4591-a61e-7a390875e250"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"1", "+", "x"}], ",", 
   RowBox[{"4", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"5", "+", "x", "+", 
    SuperscriptBox["x", "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.899750688145549*^9},
 CellLabel->"Out[1050]=",
 CellID->390480037,ExpressionUUID->"3bca1bbc-efb0-415e-ad02-041378724331"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Make a graph of all of them.", "MathCaption",
 CellChangeTimes->{{3.8997506154916935`*^9, 3.899750619080804*^9}},
 CellID->240106575,ExpressionUUID->"81c402c0-4b54-4294-b148-875fed18a1c6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Expand", "[", "out", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "2"}], "Pi"}], ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8997506592409725`*^9, 3.8997506687715807`*^9}, 
   3.8997507016913366`*^9},
 CellLabel->"In[1051]:=",
 CellID->154729335,ExpressionUUID->"087baf87-2d08-41f7-bd07-332a32756223"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1:eJxF1OlLE3AcgPHpnJut6S53WK1WJJhiSia2mTNCU0NS05wvUhJcS3FODSNm
2Mi0UElpUPMqqZkHOjMkaV7VdGllU0SHEmKbOkxqznvqqKB9fy8ePv/Bw03P
SchwxmAwsX/7Z0y0+/kdLnvAIb+r0ELgIP24P+sYXkj3bd1WIBU51iRvFzsj
hYR19uQPFnhdN2PpeIEsjmiuFx1H5k7YqI9pTHDkqpfZRGOAe30tHTy2J2js
XKmKd6ODwQ2uExVEGhh6dNy/bIsCHpS53ylfIoP62kCh6LsH+E38ZvG0hgQ2
+oyFxPUSwYBqvTRv2A3kBpydZrTiwaV3ETjX1zjwQJbm2q1yLGgfoaosuU5g
vmB/4o1Ne7/D7lNfB9a7bKCaMtTB7N0A83lKbFiOFeTdT4syZy6Dv8W7j4oe
mMB72hqeYGsKnNSEaluwA2CaX+ReYlWfwOFclDBJUm8A19QCNYtvAqdVHMmK
fhmUSTRRSc+soPD5yeTaig1QVDrsPKu3gR+LfX3LP9vBVMr8B3qKU7jDVZ4u
bK4AC6pzSNvpUhzoUrQgT1fgQbnyWDRT4QZedCny0T4kgu3R2YZfzSQwpLp/
cFTlAbanj4czFsig6Eii77k1CthpxHdFWqhgDB3nXeZEBwtigoJbMJ7gcJM1
YdCGFN+0XTm8jwnWRATZLuNZYEtb8pM+IrLbUxbkQ0ZOzr+X2FlIcsklY9MJ
ZMlQ5pe9WGTehYb6VwqkXK3lU5XISqbZUFiHbFv0pyU0Is2lPaW7b5Gpn6ak
8TPI7IAdUs8ssvApp9XbhFSKM+Z3lpEThNWURjvSKGVskrFs0Go4o5DhkR7N
d0fjyEgO5WWWho70u60jeLOR/LklVeUh5P9vgX8AEpM2Xw==
          "]], LineBox[CompressedData["
1:eJwt1P9P1HUcwHHgPA84D+7b5+79kc9R2KQRRLiIERifVxYENEMJAX8A6xZ4
iQJqkQZFVyY1cMmCKaCYC+jACYQxXHz5vBOEICWg62C4hsjXAPFABDzgrNbr
h+ce/8HTS58Rm+Lk4OCw+9/+MzrK7bU1L5b+L0NDG3Oszp4sylA/r9mLmq0s
ylC3x12rO5QsytB+k7HW4MSiDE10fsRa7hFUTQ923bHWf09QNT0VXl2eup2g
anrUbFN+q9KiKtqTtHV6XKVBlXSjraY+hGVQBR1rWCjc66JG5TTo8mbzGamK
Ht4lM3lo3ejObQP++asKeuL1iiTNgpRy2W6fFMzIafAyZyN/utC+CzsSU/9y
RyX0d8O1qZeaZaiYVvn0B+9plaIiGlDal3ms2wV1pF4Brwxrrkjornc+/un5
+CfCzM/h4s0/iqn5w3zXLfo1wSOt+d2PCkQ0yJLVPk9WBHuPstJ61JGuF2+P
Hh1bFI7zW+LeX7ELk58S08D8feH6i7fpo0abkHmw1DibNiHUKTrrta3LQksE
aU9eGhaOh5SIwjIWhfN/dHPWk+1CyJcHIqcPzQkBFlFrq6mFf2BY/yb3q3Fh
m7/krsMDC/9FR1kIvzootOka9HdF47yleWdHjYgKrv3Wt5gns/wBv4iNuMI2
vlNvjmH+XuBHIxP3pZcP8cHK+OKyZ5f5pTq+joSO87bBSwkFOhs/XOmZvtA3
x9+PdW86YbDz2enNkfsuLfJhTUkVNTGOkPjdCwkXzizzfn3nfHsjRJCa1+00
0mfjr7W/Z8wwiKH9lK9vwW92Xn+jmOlMkUCyYuKGer8j6gIPQ7rCRrNEqBTq
MmSP9ZliVAabcieN+iIJ6g7GkmeitEUuQG8VVkh75PDmplyfjq+l4P25oL7X
oYDaqCND89UyGKwIOrxiVkJwqXCzt9IduNsj+qkBFdTqB0AzKUfVkPp0nO+r
SwqUgYYxSWOEVYlqIFot9s53VKMEsqIDg2ocGJSFbtNi7E0bg7Jg+MAW/5Sr
FvWAsvBA29sSgnJQczXhXJuUoBxcZ7IDfeQE5cAy8Uu6nRCUA/npmDHTcwTl
4HTnoVsbuwnKwbE3Lpf/UERQDox1HaHKEoJycFY7PZRzkaAcXJ3yV8VWEZSD
6byWvPUmgnKQ/Otg5t47BOXgSMCarGWEoBzknPe84j1OUA5KDCkTa3ME5cDs
/HB/lZ2gHIxlalbkIhbVweLQy0XZEhbVgXv1Z7175CyqA09FRVqzmkV14Hey
y9mbZVEdhI7OVJ7VsagO8F+oDv4BHdg3PA==
          "]], LineBox[CompressedData["
1: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
          "]], LineBox[CompressedData["
1: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
Ffz//wu4v5dGC3e3gv8BbCq7cg==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
      Slot["HighlightElements"], 
      Slot["LayoutOptions"], 
      Slot["Meta"], 
      Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1:eJxF1OlLE3AcgPHpnJut6S53WK1WJJhiSia2mTNCU0NS05wvUhJcS3FODSNm
2Mi0UElpUPMqqZkHOjMkaV7VdGllU0SHEmKbOkxqznvqqKB9fy8ePv/Bw03P
SchwxmAwsX/7Z0y0+/kdLnvAIb+r0ELgIP24P+sYXkj3bd1WIBU51iRvFzsj
hYR19uQPFnhdN2PpeIEsjmiuFx1H5k7YqI9pTHDkqpfZRGOAe30tHTy2J2js
XKmKd6ODwQ2uExVEGhh6dNy/bIsCHpS53ylfIoP62kCh6LsH+E38ZvG0hgQ2
+oyFxPUSwYBqvTRv2A3kBpydZrTiwaV3ETjX1zjwQJbm2q1yLGgfoaosuU5g
vmB/4o1Ne7/D7lNfB9a7bKCaMtTB7N0A83lKbFiOFeTdT4syZy6Dv8W7j4oe
mMB72hqeYGsKnNSEaluwA2CaX+ReYlWfwOFclDBJUm8A19QCNYtvAqdVHMmK
fhmUSTRRSc+soPD5yeTaig1QVDrsPKu3gR+LfX3LP9vBVMr8B3qKU7jDVZ4u
bK4AC6pzSNvpUhzoUrQgT1fgQbnyWDRT4QZedCny0T4kgu3R2YZfzSQwpLp/
cFTlAbanj4czFsig6Eii77k1CthpxHdFWqhgDB3nXeZEBwtigoJbMJ7gcJM1
YdCGFN+0XTm8jwnWRATZLuNZYEtb8pM+IrLbUxbkQ0ZOzr+X2FlIcsklY9MJ
ZMlQ5pe9WGTehYb6VwqkXK3lU5XISqbZUFiHbFv0pyU0Is2lPaW7b5Gpn6ak
8TPI7IAdUs8ssvApp9XbhFSKM+Z3lpEThNWURjvSKGVskrFs0Go4o5DhkR7N
d0fjyEgO5WWWho70u60jeLOR/LklVeUh5P9vgX8AEpM2Xw==
             "]], 
            Line[CompressedData["
1:eJwt1P9P1HUcwHHgPA84D+7b5+79kc9R2KQRRLiIERifVxYENEMJAX8A6xZ4
iQJqkQZFVyY1cMmCKaCYC+jACYQxXHz5vBOEICWg62C4hsjXAPFABDzgrNbr
h+ce/8HTS58Rm+Lk4OCw+9/+MzrK7bU1L5b+L0NDG3Oszp4sylA/r9mLmq0s
ylC3x12rO5QsytB+k7HW4MSiDE10fsRa7hFUTQ923bHWf09QNT0VXl2eup2g
anrUbFN+q9KiKtqTtHV6XKVBlXSjraY+hGVQBR1rWCjc66JG5TTo8mbzGamK
Ht4lM3lo3ejObQP++asKeuL1iiTNgpRy2W6fFMzIafAyZyN/utC+CzsSU/9y
RyX0d8O1qZeaZaiYVvn0B+9plaIiGlDal3ms2wV1pF4Brwxrrkjornc+/un5
+CfCzM/h4s0/iqn5w3zXLfo1wSOt+d2PCkQ0yJLVPk9WBHuPstJ61JGuF2+P
Hh1bFI7zW+LeX7ELk58S08D8feH6i7fpo0abkHmw1DibNiHUKTrrta3LQksE
aU9eGhaOh5SIwjIWhfN/dHPWk+1CyJcHIqcPzQkBFlFrq6mFf2BY/yb3q3Fh
m7/krsMDC/9FR1kIvzootOka9HdF47yleWdHjYgKrv3Wt5gns/wBv4iNuMI2
vlNvjmH+XuBHIxP3pZcP8cHK+OKyZ5f5pTq+joSO87bBSwkFOhs/XOmZvtA3
x9+PdW86YbDz2enNkfsuLfJhTUkVNTGOkPjdCwkXzizzfn3nfHsjRJCa1+00
0mfjr7W/Z8wwiKH9lK9vwW92Xn+jmOlMkUCyYuKGer8j6gIPQ7rCRrNEqBTq
MmSP9ZliVAabcieN+iIJ6g7GkmeitEUuQG8VVkh75PDmplyfjq+l4P25oL7X
oYDaqCND89UyGKwIOrxiVkJwqXCzt9IduNsj+qkBFdTqB0AzKUfVkPp0nO+r
SwqUgYYxSWOEVYlqIFot9s53VKMEsqIDg2ocGJSFbtNi7E0bg7Jg+MAW/5Sr
FvWAsvBA29sSgnJQczXhXJuUoBxcZ7IDfeQE5cAy8Uu6nRCUA/npmDHTcwTl
4HTnoVsbuwnKwbE3Lpf/UERQDox1HaHKEoJycFY7PZRzkaAcXJ3yV8VWEZSD
6byWvPUmgnKQ/Otg5t47BOXgSMCarGWEoBzknPe84j1OUA5KDCkTa3ME5cDs
/HB/lZ2gHIxlalbkIhbVweLQy0XZEhbVgXv1Z7175CyqA09FRVqzmkV14Hey
y9mbZVEdhI7OVJ7VsagO8F+oDv4BHdg3PA==
             "]], 
            Line[CompressedData["
1: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
             "]], 
            Line[CompressedData["
1:eJwt2Hk0VuvbB3Ayh+LZz2xWVGaSOfsyDymFOhSiExWFyjxUNCByJDkUiiRK
IUQZ7idlihyVMmV+SKJMmem337Xev/b6rLXX2mvf9/f67nttmWO+dh4bODg4
hDk5OP7vam21yWRFhsHaV2lvvkY3Af2y8Cl+SQYr/2nwRivMBJRkfmRQmQzW
XNrHhtvCJrBpqWFRncRg+brJqWhsMIEPeZHPTm5gsIZyzPMDfxiDI/9vxpch
OuuDYLCTSo0xnGjomSp6QGe9OJCS5XjcGK6Y5Wd6ytFZidWsttQSIzjbvky6
hdFY4uU7N1QbAbxzYY6xMSpLRbiU4/P0blireVykx6CwsofbFbF4fRh+Pn3z
gACZZd375vcqWRe0snjbbwhirMxPoa9uj2mBgexHlbhFUZa7mloHo1gTxMM2
RcSPi7AO/DenxH6kAW3p6o6evZtZ19P7jFoG1eC/kyXfdlUKs57JnghuVlOB
3B0fdPZXC7LIv8j7LosrgtqdNr9zTQIsGxuHI4cPbgcZtd3d1Cd8rJWTAf3V
KXIw/sqMh7eYh7UYt6vou8UWEPOudA+K52K5GcxF0jfJwPo70sOps5ys7UkR
Z+1sJOFAqnwZzYuT9YKWzSGPS0KOh16d4TFO1nUND2NODUmw5jg2Em/HyeLf
3tDbSpOElF3Fcjt2crJsSMvn64clQPm+ba77HAdLnC0muS1CApwD4h99DORg
tYbbnnpWJg7ncSGHUwvryC0qsKd9txiYmqCrf4+uo/Z/+huy1MWAanGu3OXz
Oqr66l8bJCcGFfs6mXYl62hcc+uQobAYrLrkDOr5rqPOvtvNur1MuBJu4Cv0
bQ19pNeZD11gQsrL09cLv6wiUzn7vrVGBlTsfM/6XbaMlO4rJx0NpoMa7YYl
KXcZkWcKtBm+dMhbtmlTSVlG47PVrG4POqS+buk/EbiMDvPdjgiwp0OQbct6
l9YysjlDyxZQpYOWd7NBTfkSOrfrTErBNxqUZjdVXHu5iKZfOCv1utJA6Vos
PMhfRO68JNNbh2iQc8qqEaUtomoeJ/zAPhokqzV1LIYsIl1y+gB7Nw3O1zTO
e+ktIlO/+fdeEjTQ6G7QtK1cQDlbV+2ne6lQKFpfRKueRzcu7BH+fpwKdq6i
1gNP5hH7NM+LP85UmH/sPJx3Zx4leqxmSR2kgoHpLEUveB79CMgyCTOjQmOg
dJjzznl0n9T4NEueCgM9oWZZ+b/RRoNoiSfjFBDNVe1WSJlDI/veexWFUKB0
JvT87JU59CN6e9ivcxRwxOuFqs7PIdNmVqv2aQpkdjrjew/MoXm/PJztSgEF
wes5vkJz6LCOg2WBKQWM/dg+pVGzaGu5xO9FUQqc10vjMvSdQbX+wVVXSsiQ
nCz29ZDrDJoW9dDkfUaG0p8Zpb57Z5DMr/W0xDwyzGdne2QpziD/U3oqrAwy
BAsWNHCPTaMZl7bQ6zFkuPC1Jq7ZbRrZmAfnNB8lQ6aW0XG27TSyHNZZ6DlM
BpT4xmDNcBqZsHK1fx8kA4dZ46SKxDRS0LseaWxDhstPP9gmdU2hj8p+upa6
ZIi5wMac7KbQJXKFLgeFDHmdnhNnjaaQebHNiXsiZGjS+P72utoUEkhIiLIQ
IsPGb5MBVZumUAwfM+o5FxmY934W4im/0KFl24ezMxjIGZF13kf/RE792uGy
nzDQu3rUcsxrAnXmLnhr3MGgaTHioeueCUStExPZ9i8GjqfTN3xWnEDCjRdC
tiRjEGDfVfV64gfaEc6ZvjMBgyIZe/W7Pj8QM2NJqjgKg2015sx958YR+3Xp
FpkzGLxQ9wh6azeOahUbxJK8MDB9eLldb+c4OhxK79p4EoNj8ayEbXPfUXld
0APsbwwyD+txcQZ+R+qUHUFRThiQF5QnSkLGEP+/h5ifLTB44GVjpXB4DMXY
/OVZa4aBRp9X7n29MfR6NCWo3ASD/XWP3G6sfEOeTR+/V+AYxN2S+ewZ8Q15
WOwWZuhgwOQDjV6Xb6hUdtdlUy0M8kJd/7E3/IbQkHdNkCYG9e53reDPKOIV
TbnyWw2DDWqUGkbkKLKQ77Xdp4DBzQc7xRLdR5HXtpZf5dsxkKbZBfMajyJz
4WWHHdsw2L2eoDG7YRQpRZN8t2zFILiF/1HLlRFUslNryF8SAz7Yxm3iMYJy
D4sXiEtgkFJi5v7SbATZeRrpt4hhUHonSiyXdwR9VbTMN2Zg8Ovk6j8XY9go
x9fybTwZg/Zn6iL7PNnop3Gr3REMg1dznonipmyES5Zw7SRhcOXSh8SXf4bR
hsm0lrXNGHjV84rG9A4jv4G77KlNGNgKGdw8VDmMJnpWJSeFifVIzb05GziM
lsZ7ljmEMPjT2yNa6zCMEted0umCGLC3iCYlagwjNaa2m+5GDAoLw5KUfw6h
hFObbFP4MUj+XURabR5C1hn8oR/5MAjVH016lz+ENne5N9AImzbsv3XCYwi9
OqneVM2DwQ7ha5iWyRDKrHoUIUl4k33lLW6ZIRRPj3CI4cZgLnUK+7Q+iKLC
i/eucGHQ1SeXnPWV8JjpqSDCNVuPkP1eDaIbztqPVjdgkOOVmGyYOojud8bw
xRGOLaojCwcOohpn3euyhH3ml5N77AfR6Jil6htODOwN1CiP1QcRNaJ8/jRh
nSiP28GbB9F+xtUBKcKSjXcoFpMD6HZ18UQPBwZcm9puU5oH0PCp3WJZhMfs
eajsvAGkJ7n9tC/h1jS9lOfXBlB699l+c8Il/b7UyOMDiPceM2Ab4VS5hym2
xgMo1FtWWZRwhHc3VVJ6AC3isXzchOuOSal0rfSjS+K23ByEE3/GqgSW9yNR
Tv8tPIQPh86pYOf7UcHkwnGMsBzvUdUilX5kN9TdqEB46maT6t7xPsTRL267
h/ArCU218Yd9qHy4esGf8NX8TLVo9z4UOlVd+4jw/l0C6lsl+pAZj0TRMGHm
6/Pqrzt7EVO2B20n3n/Epk/dNbkXLZsvTgcSLuq01Fix7UVD5/3NWwmHHi/R
SBXsRZ/ybKtViPU1m5LYuavhK2obiT2USribb3anr+FXxA4Sm7pG7FfOLRdN
oeUetNpybkqQ2F9fqUbN/LIeJK2wA7tDmFs7Y9ewUg+6tPocfSDy0FrLp3Vp
rBvVnr1mFcaLQdq+c1oSOd1I4FfFb2UiTyqeFtp/iXWjV5z6Zc+I/C1OF2vP
felC0v9ebwwXwOBNhLjOzaQulKCpu25P5NXx9rROs0AXio8uaZMg8n357V09
fLEDLdwQJ0mJEPvZqnvLo6IDcQf7e28RxWBfV8ePuOAOVMvQrVQl5on5E8vo
XPyCXK7wG7oR81dEi/9zdukz4plHbdLEfFJlFRxTX35GzzMieo8zMQhTaiyq
CfmMSGuPBoqIeTY34j4muNyOpoeM37kR89/rFf42Z/kTkt5zU0Ga6AfjAKZE
86tP6HRR6fgDOaKPLlYETId+Qn7vTbNUiT7xT56TN1z5iBJVnky7Ev2zseZ0
bMfKB2R2I1FKQp3It+yrdPLyfyikqrqQBhjoas/vdQ/9DwlmFHxhGhPra6Px
5+lyK9q3i39OzhSDuwGP3S1W3qPFeB6SgyUGjY135ENXm1F5J71n8wEMZH3D
ivrXGxDPUFYWz3EMJi+XuytdbEBdu51VYzwxqEidJYX8qUfHDlwuIZ0i+qTW
O4DEUY8S79Hu4T4YhFOc9cw43yLXTkeupWAMvlQavH3MxUK1lbs5xv/BQDzk
WN+MEEJxSadrvyZhEB+6RzORVINU9GsVO25j4B0hMfBOogoJbRiaHbqLgcLl
19qgWYGkPWedDuVhkJ8g8E3BvQjlRLtEFNQS/S89EpL4/hnSCl8qZtRjQNpS
LtfcWYAeGFfdSGjC4MP2IxHwKw9RzF7o/dNG5F/zgZKieBbaLx3uNdGHQVup
Zgm/2wm0Rc1WhrpG9Kt/gaFGsS1+wdixcY2DDBlBZt/3p5/HX8jHUCe5yfAh
h0S194/Fq4475w0R31tv/RAlB7d0XKr8S9YOCTJUXCsod/jyFDcqI03I42Q4
qmS+5nCzBl+j5vX2EecDg9TchPn7CO+3/u4il0AGoSguERtHFv7JYLTf/xYZ
vk/+nTV54jU+cxj7rpJJhuy6rW/Vot/gopf0RDaXkoEckCtQXteAN52pKr44
SIbV7w7v3GXacPmOBCNZEwrMcj9VsfZow53eWyzFWFFgXIrnlkZ+G34/sur5
oi0FOg+WHeFS/4Af39qlMOtMgbLXlMkc+Ig32/WrOgRRwCfty+axo+042V7q
Rv1TCgxaOh70yezEkwfPJJ+WoYLhSLj7+95O/L3Py8hz26lwJzLrjJJEFy6U
uWx+SZU4/70avzp+twtPHnJxKtlNhVrFiBeead14J1deRtBhKmRvyqYdTf6K
azyyzgm+TQWN8d8T28wGcMWzTfnOojSYK8QL6fpsXIn09HaBNB1aFPVJfi5s
3HS25t4pBTo8eKQV0HCRjbeRQgZUNelgd09ZP/AtGzcXHuXptKBDcYJYw6e9
I3jur+yBFOL87HNmoS/BbRRX8sr73MqiwzeFwk0818ZwZ62h6m1eDOh+KOkz
3TaBH1QUjY7oZMIL3gK7vJkJfLs4td+WzYRbJ3S1j5IncS9dH7riFBNsdjhw
vP9rEoclmuoqnxjUFMQm5fVN4ooJByb4dcQgq2TuxdGJnzivsEtuS5oYlLqN
/Bm9PIU3u36mr/0tDmE+lZYH783gKXZ7FjgxSXC8r/pX+o15/Iuz8NzaO2nw
jG7a0N+2jGc8brTdsygLb64oKsY3r+NHTNrHJI3lwFV0pJbsxAmGuof0h6u3
waxeg+FgIBe49GaeyShVgEJf4aVjfjyQHCJ/RO6lMnBfHI08lswHIux3cnHZ
ahCZtsWKliwAeRxc9XHeGrCH++KOt7GCoDPjkpJprQnPrM50/swXhuei2BXO
AC3QuYPqWh9uBh4Qfcl3VweeHfsI1FERGJ1GHzJJ+uAp7aBoNCcK+9/ciXuS
vRueD/OVmU+RYDEhMpqoD7Am88jHcZKhyOfQCakoIwi01tR6zEGBA3H+xXNj
xtCUN2NXt0w4T7lju6MpnPRfPiS1kQa9f6crti+YwV0zzWV7PjokNKlsHY+z
gMdP//q3RpAOwc88eJi3LKCCEqa5Q4QOGjeKJffcsYAvI6991ul0YOrELBXl
WYDINdvhPCI3BSbq++PqLOBavVfL2l46jKmfiwz9YwHnLLIyHyXTodSrcNbY
3xIiC9/qk9KI+2OvdqSFWUIibawzPIMOgdl+s9NRlvD0mwpml0s8//XVTw9v
WsJYdFX0ajkdTMueaIoXWoJrY4ffgR46zJwfDTUZt4QzaivCVf2EVYUGnk5b
Qniq5BN5Nh1qR8wjGEuWkHbSY2Rlgg4fDVeOzvFZQTv/rFPuOh0qc4/WV8hZ
wbAfdUGEiwGG6soTSspWMNOpmxzGx4Ckss3W2ZpWsDn/Uut+EQY8foI9SzSx
AknRHO9KMgP8JHaVCuyxAqWQBn55BgO4Y71nLttZgf7g+MNECQZ4/Xxx8o+T
Ffz//wu4v5dGC3e3gv8BbCq7cg==
             "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{(-2) Pi, 2 Pi}, {-6.283185050723043, 
            50.76159943235257}}, "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
          "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>]]& )[<|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{(-2) Pi, 2 Pi}, {-6.283185050723043, 
           50.76159943235257}}, "Frame" -> {{False, False}, {False, False}}, 
         "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
         "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
         "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}}]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJxF1OlLE3AcgPHpnJut6S53WK1WJJhiSia2mTNCU0NS05wvUhJcS3FODSNm
2Mi0UElpUPMqqZkHOjMkaV7VdGllU0SHEmKbOkxqznvqqKB9fy8ePv/Bw03P
SchwxmAwsX/7Z0y0+/kdLnvAIb+r0ELgIP24P+sYXkj3bd1WIBU51iRvFzsj
hYR19uQPFnhdN2PpeIEsjmiuFx1H5k7YqI9pTHDkqpfZRGOAe30tHTy2J2js
XKmKd6ODwQ2uExVEGhh6dNy/bIsCHpS53ylfIoP62kCh6LsH+E38ZvG0hgQ2
+oyFxPUSwYBqvTRv2A3kBpydZrTiwaV3ETjX1zjwQJbm2q1yLGgfoaosuU5g
vmB/4o1Ne7/D7lNfB9a7bKCaMtTB7N0A83lKbFiOFeTdT4syZy6Dv8W7j4oe
mMB72hqeYGsKnNSEaluwA2CaX+ReYlWfwOFclDBJUm8A19QCNYtvAqdVHMmK
fhmUSTRRSc+soPD5yeTaig1QVDrsPKu3gR+LfX3LP9vBVMr8B3qKU7jDVZ4u
bK4AC6pzSNvpUhzoUrQgT1fgQbnyWDRT4QZedCny0T4kgu3R2YZfzSQwpLp/
cFTlAbanj4czFsig6Eii77k1CthpxHdFWqhgDB3nXeZEBwtigoJbMJ7gcJM1
YdCGFN+0XTm8jwnWRATZLuNZYEtb8pM+IrLbUxbkQ0ZOzr+X2FlIcsklY9MJ
ZMlQ5pe9WGTehYb6VwqkXK3lU5XISqbZUFiHbFv0pyU0Is2lPaW7b5Gpn6ak
8TPI7IAdUs8ssvApp9XbhFSKM+Z3lpEThNWURjvSKGVskrFs0Go4o5DhkR7N
d0fjyEgO5WWWho70u60jeLOR/LklVeUh5P9vgX8AEpM2Xw==
          "]], 
         Line[CompressedData["
1:eJwt1P9P1HUcwHHgPA84D+7b5+79kc9R2KQRRLiIERifVxYENEMJAX8A6xZ4
iQJqkQZFVyY1cMmCKaCYC+jACYQxXHz5vBOEICWg62C4hsjXAPFABDzgrNbr
h+ce/8HTS58Rm+Lk4OCw+9/+MzrK7bU1L5b+L0NDG3Oszp4sylA/r9mLmq0s
ylC3x12rO5QsytB+k7HW4MSiDE10fsRa7hFUTQ923bHWf09QNT0VXl2eup2g
anrUbFN+q9KiKtqTtHV6XKVBlXSjraY+hGVQBR1rWCjc66JG5TTo8mbzGamK
Ht4lM3lo3ejObQP++asKeuL1iiTNgpRy2W6fFMzIafAyZyN/utC+CzsSU/9y
RyX0d8O1qZeaZaiYVvn0B+9plaIiGlDal3ms2wV1pF4Brwxrrkjornc+/un5
+CfCzM/h4s0/iqn5w3zXLfo1wSOt+d2PCkQ0yJLVPk9WBHuPstJ61JGuF2+P
Hh1bFI7zW+LeX7ELk58S08D8feH6i7fpo0abkHmw1DibNiHUKTrrta3LQksE
aU9eGhaOh5SIwjIWhfN/dHPWk+1CyJcHIqcPzQkBFlFrq6mFf2BY/yb3q3Fh
m7/krsMDC/9FR1kIvzootOka9HdF47yleWdHjYgKrv3Wt5gns/wBv4iNuMI2
vlNvjmH+XuBHIxP3pZcP8cHK+OKyZ5f5pTq+joSO87bBSwkFOhs/XOmZvtA3
x9+PdW86YbDz2enNkfsuLfJhTUkVNTGOkPjdCwkXzizzfn3nfHsjRJCa1+00
0mfjr7W/Z8wwiKH9lK9vwW92Xn+jmOlMkUCyYuKGer8j6gIPQ7rCRrNEqBTq
MmSP9ZliVAabcieN+iIJ6g7GkmeitEUuQG8VVkh75PDmplyfjq+l4P25oL7X
oYDaqCND89UyGKwIOrxiVkJwqXCzt9IduNsj+qkBFdTqB0AzKUfVkPp0nO+r
SwqUgYYxSWOEVYlqIFot9s53VKMEsqIDg2ocGJSFbtNi7E0bg7Jg+MAW/5Sr
FvWAsvBA29sSgnJQczXhXJuUoBxcZ7IDfeQE5cAy8Uu6nRCUA/npmDHTcwTl
4HTnoVsbuwnKwbE3Lpf/UERQDox1HaHKEoJycFY7PZRzkaAcXJ3yV8VWEZSD
6byWvPUmgnKQ/Otg5t47BOXgSMCarGWEoBzknPe84j1OUA5KDCkTa3ME5cDs
/HB/lZ2gHIxlalbkIhbVweLQy0XZEhbVgXv1Z7175CyqA09FRVqzmkV14Hey
y9mbZVEdhI7OVJ7VsagO8F+oDv4BHdg3PA==
          "]], 
         Line[CompressedData["
1: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
          "]], 
         Line[CompressedData["
1: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
Ffz//wu4v5dGC3e3gv8BbCq7cg==
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PlotRange" -> {{(-2) Pi, 2 Pi}, {-6.283185050723043, 
         50.76159943235257}}, "Frame" -> {{False, False}, {False, False}}, 
       "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
       "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
       "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{411., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{(-2) Pi, 2 Pi}, {-6.283185050723043, 
     50.76159943235257}}, {{-6.283185307179586, 
    6.283185307179586}, {-6.283185050723043, 50.76159943235257}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8997506629712496`*^9, 3.8997506699964204`*^9}, 
   3.8997507025033484`*^9},
 CellLabel->"Out[1051]=",
 CellID->256275073,ExpressionUUID->"43d8d67e-62de-4c33-82bf-82b079ff76a2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Confirm that the slope is indeed unity at ",
 Cell[BoxData[
  RowBox[{
   StyleBox["x", "TI"], "=", "0"}]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "fdb50920-45d9-4787-b2a6-6cf77a683742"],
 ":"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.775569032362935*^9, 3.775569042022148*^9}, 
   3.7779148702157297`*^9},
 CellID->700662694,ExpressionUUID->"d02f5b7e-c961-449f-9573-d83b5dfabb07"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"#", ",", "x"}], "]"}], "/.", 
    RowBox[{"x", "\[Rule]", "0"}]}], "&"}], "/@", "out"}]], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.775569008779991*^9, 3.775569029774448*^9}},
 CellLabel->"In[1044]:=",
 CellID->70632808,ExpressionUUID->"788b84db-08bd-4a31-8d7a-549a8f1e4acd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1"}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.775569024986065*^9, 3.77556903028509*^9}, 
   3.775659524049831*^9, 3.7756596295261593`*^9, 3.776529148801647*^9, 
   3.776529322629979*^9, 3.898627207716029*^9, 3.89975059849707*^9},
 CellLabel->"Out[1044]=",
 CellID->542659924,ExpressionUUID->"def9bdc4-bba9-4ef3-a335-251af5734574"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Duplicated items are treated the same:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.7756596329305153`*^9, 3.775659640189417*^9}},
 CellID->444986081,ExpressionUUID->"ae819de9-88cf-40ec-9358-0f02f7cf4d3e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"6", ",", "7", ",", "7", ",", "7", ",", "8"}], "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Total", "[", "#", "]"}], "\[Equal]", "14"}], ")"}], "&"}]}], 
  "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.775658730148959*^9, 3.775658747520253*^9}, {
   3.7756590438565607`*^9, 3.775659044412951*^9}, {3.7756596525277853`*^9, 
   3.7756596527056847`*^9}, 3.898627188198241*^9},
 CellLabel->"In[1053]:=",
 CellID->991815813,ExpressionUUID->"01612933-9865-4ffe-9bee-047357968962"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"6", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "6"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.775658748232149*^9, 3.775658894579425*^9, 3.775658982885504*^9, {
   3.77565902072548*^9, 3.775659044907261*^9}, {3.7756591949370537`*^9, 
   3.775659233580648*^9}, {3.7756593450669947`*^9, 3.775659400072006*^9}, 
   3.7756595071964903`*^9, 3.7756596532496367`*^9, 3.77652915012943*^9, 
   3.776529324231215*^9, 3.8986272089147067`*^9, 3.8997507439514027`*^9},
 CellLabel->"Out[1053]=",
 CellID->33854908,ExpressionUUID->"d9dd7e99-581e-4732-a67f-62b32dfe0afd"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "4eb3ef24-f6e5-4a70-8d43-d4bb27ea887b"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->14107563,ExpressionUUID->"6163eb72-1193-481a-9bc6-ddd8adbe2dd1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The main difference between ",
 Cell[BoxData[
  RowBox[{
   StyleBox["SelectPermutations", "InlineResourceFunction"], "[", 
   RowBox[{
    StyleBox["list", "TI"], ",", 
    StyleBox["crit", "TI"]}], "]"}]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "cc1300b0-56fc-4cda-b9dd-86cc1ba33246"],
 " and ",
 Cell[BoxData[
  RowBox[{
   TagBox[
    ButtonBox[
     StyleBox["Select", "SymbolsRefLink",
      ShowStringCharacters->True,
      FontFamily->"Source Sans Pro"],
     BaseStyle->Dynamic[
       FEPrivate`If[
        CurrentValue["MouseOver"], {
        "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
        "Link"}]],
     ButtonData->"paclet:ref/Select",
     ContentPadding->False],
    MouseAppearanceTag["LinkHand"]], "[", 
   RowBox[{
    RowBox[{
     TagBox[
      ButtonBox[
       StyleBox["Permutations", "SymbolsRefLink",
        ShowStringCharacters->True,
        FontFamily->"Source Sans Pro"],
       BaseStyle->Dynamic[
         FEPrivate`If[
          CurrentValue["MouseOver"], {
          "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
          "Link"}]],
       ButtonData->"paclet:ref/Permutations",
       ContentPadding->False],
      MouseAppearanceTag["LinkHand"]], "[", 
     StyleBox["list", "TI"], "]"}], ",", 
    StyleBox["crit", "TI"]}], "]"}]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "486dbdce-68b4-49ee-9b23-83b004a30d4c"],
 " is the memory usage:"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.775659692231538*^9, 3.775659737034504*^9}, {
  3.777915104180867*^9, 3.7779151337974873`*^9}},
 CellID->771301361,ExpressionUUID->"a7eb581c-2368-4cfe-bbe7-dede88ce6254"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MaxMemoryUsed", "[", 
  RowBox[{
   RowBox[{"result1", "=", 
    RowBox[{
     StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"3", ",", "13"}], "]"}], ",", "6", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Total", "[", "#", "]"}], "\[Equal]", "24"}], "&"}]}], 
     "]"}]}], ";"}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.7756597419331837`*^9, 3.775659859377911*^9}, 
   3.775659965227964*^9, 3.898627193741088*^9},
 CellLabel->"In[1063]:=",
 CellID->535666113,ExpressionUUID->"dd5fe1da-181f-475d-8e71-08599fab5abe"],

Cell[BoxData["76800"], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.77565978044046*^9, 3.775659822081428*^9}, {
   3.775659853998701*^9, 3.775659866096383*^9}, 3.775659977992035*^9, 
   3.7756600199457493`*^9, 3.776529154597158*^9, 3.776529328657302*^9, 
   3.8986272131614175`*^9, 3.8997509658672943`*^9},
 CellLabel->"Out[1063]=",
 CellID->27544576,ExpressionUUID->"5ac0229e-a021-4fd5-af43-9a5240c4308c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Using ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Select", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Select",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "f46e518a-6575-44cc-bf84-9a9f95a6a277"],
 " and ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Permutations", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Permutations",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "d808ce9e-cb2d-42a3-9c28-f94466a97c0d"],
 " uses 500 times more memory:"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.775659958690896*^9, 3.775660003727075*^9}, {
  3.777914890455714*^9, 3.777914892938813*^9}},
 CellID->444708281,ExpressionUUID->"4f407d71-92b9-4d53-84ec-8a1bb6974193"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MaxMemoryUsed", "[", 
  RowBox[{
   RowBox[{"result2", "=", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"Permutations", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"3", ",", "13"}], "]"}], ",", "6"}], "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Total", "[", "#", "]"}], "\[Equal]", "24"}], "&"}]}], 
     "]"}]}], ";"}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.775659826770007*^9, 3.775659862367159*^9}, 
   3.775659967831942*^9},
 CellLabel->"In[1064]:=",
 CellID->887464862,ExpressionUUID->"3fb5fc78-f4b5-4b3a-8e54-953fb99002c8"],

Cell[BoxData["37563192"], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.775659833819317*^9, 3.775659867629966*^9}, 
   3.775659978889728*^9, 3.775660020843718*^9, 3.776529158151636*^9, 
   3.776529329564918*^9, 3.898627215249345*^9, 3.899750968308219*^9},
 CellLabel->"Out[1064]=",
 CellID->141130879,ExpressionUUID->"0667b906-2a83-4b55-862c-246bf715f69b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Verify that the results are identical:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.775660014046246*^9, 3.775660019525916*^9}},
 CellID->486162817,ExpressionUUID->"1896b8bc-1e11-4f04-8103-43508926fd2c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result1", "\[Equal]", "result2"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.775659839679294*^9, 3.775659844204294*^9}},
 CellLabel->"In[1065]:=",
 CellID->615462631,ExpressionUUID->"9e9ea787-abf6-4ec6-b2cc-2e69d89c4617"],

Cell[BoxData["True"], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.775659844726769*^9, 3.775659872379087*^9}, 
   3.775660021901587*^9, 3.7765291614553967`*^9, 3.776529330743194*^9, 
   3.8986272164723682`*^9, 3.8997509725188107`*^9},
 CellLabel->"Out[1065]=",
 CellID->86302315,ExpressionUUID->"857b4acf-31ef-4e56-9c76-6a20979710a9"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "51bac29a-2eb3-4db3-b6f6-6bd477958802"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->14107564,ExpressionUUID->"bf883b97-01e0-4580-a950-50d30116a1d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Head", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Head",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "90dd1b38-4a06-4750-8a83-7b922aed1b04"],
 " does not have to be ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["List", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/List",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "da703891-d24f-44d1-9c64-fa9bee14231d"],
 ":"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.775659940349708*^9, 3.77565995308701*^9}, 
   3.77791491092492*^9},
 CellID->177535240,ExpressionUUID->"44e8a28c-8fa0-434d-8867-1a2245503336"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "]"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Plus", "@@", "#"}], ")"}], "\[Equal]", "6"}], "&"}], ")"}]}], 
  "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.775564501355146*^9, 3.77556453064013*^9}, {
   3.775564595079977*^9, 3.775564596369431*^9}, {3.775564628426854*^9, 
   3.775564631573576*^9}, 3.8986271968174934`*^9},
 CellLabel->"In[1066]:=",
 CellID->661797484,ExpressionUUID->"14e19174-4980-4193-bb1e-7521c15d5696"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "5"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"2", ",", "4"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"4", ",", "2"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"5", ",", "1"}], "]"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.77556451988704*^9, 3.77556463182666*^9}, 
   3.7755676679041758`*^9, 3.775567712707305*^9, 3.775567818332111*^9, 
   3.77565941046673*^9, 3.776529163330064*^9, 3.776529331852521*^9, 
   3.898627217703313*^9, 3.899750978216648*^9},
 CellLabel->"Out[1066]=",
 CellID->4477802,ExpressionUUID->"313afb20-7eec-42f6-94ea-e7a9d9ade45e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  StyleBox["SelectPermutations", "InlineResourceFunction"]], "Text", 
  "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "c717bed6-ceb7-4d7a-b068-bce313c5a5e2"],
 " might take longer as it is written in higher-level code as compared to the \
implementation of ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Permutations", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Permutations",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "95cf8d01-7d17-408c-8faa-cc0e8af0703b"],
 ":"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.775660090968472*^9, 3.775660098838415*^9}, {
   3.7756601400967207`*^9, 3.7756601913190613`*^9}, {3.775660772370102*^9, 
   3.775660773132094*^9}, 3.777914921223103*^9},
 CellID->445973593,ExpressionUUID->"4256ea8c-a492-4455-b524-b84cfe17938b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"MaxMemoryUsed", "[", 
   RowBox[{"time", "=", 
    RowBox[{
     RowBox[{"AbsoluteTiming", "[", 
      RowBox[{
       RowBox[{"result1", "=", 
        RowBox[{
         StyleBox["SelectPermutations", "ResourceFunctionName"], "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"3", ",", "13"}], "]"}], ",", "6", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Total", "[", "#", "]"}], "\[Equal]", "24"}], "&"}]}], 
         "]"}]}], ";"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<Time [sec]:\>\"", ",", "time"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Memory usage [bytes]:\>\"", ",", "%"}], "}"}]}], "}"}], 
  "]"}]}], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.7756597419331837`*^9, 3.775659859377911*^9}, 
   3.775659965227964*^9, {3.775660049700783*^9, 3.775660083250841*^9}, {
   3.775660118779077*^9, 3.775660124189692*^9}, {3.775660205971373*^9, 
   3.7756602250985403`*^9}, {3.77566028295162*^9, 3.775660290393875*^9}, 
   3.89862720069182*^9},
 CellLabel->"In[1067]:=",
 CellID->869163183,ExpressionUUID->"3ba644c0-61ef-4285-92fa-97e269cf29b7"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Time [sec]:\"\>", "3.1487261`"},
    {"\<\"Memory usage [bytes]:\"\>", "76800"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.775660067861252*^9, 3.775660096264962*^9}, 
   3.7756601377891083`*^9, 3.7756602380948133`*^9, 3.775660304651354*^9, 
   3.776529168387677*^9, 3.776529336205114*^9, 3.8986272219757886`*^9, 
   3.8997509844159756`*^9},
 CellLabel->"Out[1068]=",
 CellID->56459738,ExpressionUUID->"e9517ff3-7c20-46f6-b1c8-4eab464c6bdb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Using the built-in functions is faster at the expense of 500\[Times] more \
memory:\
\>", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.77566024669878*^9, 3.775660272888628*^9}, {
  3.777914945795113*^9, 3.7779149479544086`*^9}},
 CellID->686745089,ExpressionUUID->"8d4c8bfc-29bc-4b14-b2f0-132733bdec32"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"MaxMemoryUsed", "[", 
   RowBox[{"time", "=", 
    RowBox[{
     RowBox[{"AbsoluteTiming", "[", 
      RowBox[{
       RowBox[{"result2", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Permutations", "[", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"3", ",", "13"}], "]"}], ",", "6"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Total", "[", "#", "]"}], "\[Equal]", "24"}], "&"}]}], 
         "]"}]}], ";"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<Time [sec]:\>\"", ",", "time"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Memory usage [bytes]:\>\"", ",", "%"}], "}"}]}], "}"}], 
  "]"}]}], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.775659826770007*^9, 3.775659862367159*^9}, 
   3.775659967831942*^9, {3.775660053118082*^9, 3.775660079464134*^9}, {
   3.7756601315275993`*^9, 3.7756601353531027`*^9}, 3.775660229163328*^9, 
   3.7756602943707857`*^9},
 CellLabel->"In[1069]:=",
 CellID->674295727,ExpressionUUID->"2d759f43-640b-4b95-b41d-7e27fb8171d2"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Time [sec]:\"\>", "0.8987349`"},
    {"\<\"Memory usage [bytes]:\"\>", "37562680"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.775660054335277*^9, 3.775660097146056*^9, 3.775660138701022*^9, 
   3.775660239000139*^9, {3.7756602757471437`*^9, 3.775660305548664*^9}, 
   3.77652917555011*^9, 3.776529337090541*^9, 3.898627224045477*^9, 
   3.8997509877837687`*^9},
 CellLabel->"Out[1070]=",
 CellID->504109667,ExpressionUUID->"976edaeb-2629-4491-bbeb-b1c88df33dbc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Select subsets from {1,2,3,4,5} that add up to 10:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.774377556261836*^9, 3.774377571610763*^9}, {
  3.7743825672646627`*^9, 3.7743825749572763`*^9}},
 CellID->694507399,ExpressionUUID->"ef049200-9f89-42c0-ab31-744873abfc20"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{
    RowBox[{"EqualTo", "[", "10", "]"}], "@*", "Total"}]}], "]"}]], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.774377514175353*^9, 3.774377539686349*^9}, 
   3.8986289091988754`*^9},
 CellLabel->"In[1074]:=",
 CellID->875714386,ExpressionUUID->"46aea64d-4c06-4b55-b4a9-159775c4a2e9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.7743775399626503`*^9, 3.774377572599545*^9, 
  3.774382562333807*^9, 3.7743825923753223`*^9, 3.774383108881587*^9, 
  3.774383664600209*^9, 3.8986289784282913`*^9, 3.899751485943525*^9},
 CellLabel->"Out[1074]=",
 CellID->242003258,ExpressionUUID->"618a2edc-14ca-4e25-b754-49999f63e1f1"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "fa55ba47-47f4-44d7-b757-3da9cd5049bf"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->112658320,ExpressionUUID->"cf032014-9a69-44ce-bcc0-7100c60fa180"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Select subsets of length 2 to 4 that sum up to a prime:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.7743775973721*^9, 3.774377624079948*^9}},
 CellID->327143208,ExpressionUUID->"9f9f9e20-1a8b-4e5d-bfdc-87fafb09ef95"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}], ",", 
   RowBox[{"PrimeQ", "@*", "Total"}]}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.774377581956209*^9, 3.774377591869701*^9}, {
   3.7743776266628532`*^9, 3.774377627761312*^9}, 3.898628910302684*^9},
 CellLabel->"In[1075]:=",
 CellID->283656556,ExpressionUUID->"647c8205-f913-4dc8-b5ec-3b1154429425"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4", ",", "5"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.77437758448147*^9, 3.774377592288989*^9}, 
   3.774377628288271*^9, {3.774382594017756*^9, 3.774382604215788*^9}, 
   3.774383665638774*^9, 3.898628978962482*^9, 3.8997514883851013`*^9},
 CellLabel->"Out[1075]=",
 CellID->121246890,ExpressionUUID->"f5dde288-8a6a-4ec0-a372-40ddbc8066f1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Select all subsets of length 2 that add up to 6:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.774377856274754*^9, 3.7743778645252533`*^9}},
 CellID->158433383,ExpressionUUID->"cf534f5a-9a10-4808-bcf7-ac429c57948e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{
    RowBox[{"EqualTo", "[", "6", "]"}], "@*", "Total"}]}], "]"}]], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.774377841675405*^9, 3.774377854019011*^9}, 
   3.898628961576196*^9},
 CellLabel->"In[1076]:=",
 CellID->499374772,ExpressionUUID->"66a2ed68-d968-41ca-931b-ad7fe29677f4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.774377849782387*^9, 3.7743778542105103`*^9}, 
   3.7743826085223103`*^9, 3.7743836678169823`*^9, 3.8986289801927896`*^9, 
   3.899751538139284*^9},
 CellLabel->"Out[1076]=",
 CellID->171051003,ExpressionUUID->"19a611bc-9478-4e29-929a-452d35591232"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "3d0312e5-1bc4-498a-8419-7ab89229ac44"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->519906287,ExpressionUUID->"0d582974-7758-4816-b577-dd722d5ac8d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Select all subsets that add up to 0:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.774377856274754*^9, 3.7743778645252533`*^9}, {
  3.774377902691346*^9, 3.774377906025693*^9}},
 CellID->858830434,ExpressionUUID->"b492c559-a134-4188-9cbd-7822c9dcce74"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", "3"}], "}"}], ",",
    "All", ",", 
   RowBox[{
    RowBox[{"EqualTo", "[", "0", "]"}], "@*", "Total"}]}], "]"}]], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.774377841675405*^9, 3.774377896589973*^9}, 
   3.8986289631204348`*^9},
 CellLabel->"In[1077]:=",
 CellID->634576773,ExpressionUUID->"52abfea8-4e0c-4282-a12a-1353a3a2c4ed"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "0", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", "0", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", "3"}], "}"}]}], 
  "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.774377849782387*^9, 3.774377908556069*^9}, 
   3.774382617659729*^9, 3.774383668810137*^9, 3.89862898140742*^9, 
   3.899751539652976*^9},
 CellLabel->"Out[1077]=",
 CellID->226659544,ExpressionUUID->"e0f13cf1-e49d-4f77-957c-f90d474fb025"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "f9a2e42e-b3d9-4d53-8241-08cf53301dba"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->490055446,ExpressionUUID->"07149f81-5fb4-47bc-8558-46e4838fb519"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Select all subsets of odd length that add up to a prime:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.774377856274754*^9, 3.7743778645252533`*^9}, {
  3.774377902691346*^9, 3.774377906025693*^9}, {3.774378907011655*^9, 
  3.774378913566503*^9}},
 CellID->535860945,ExpressionUUID->"5a269a87-a802-4760-94f2-ad9bc0ee0939"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "7", ",", "2"}], "}"}], ",", 
   RowBox[{"PrimeQ", "@*", "Total"}]}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.774377841675405*^9, 3.774377896589973*^9}, {
   3.774378891824779*^9, 3.774378898435511*^9}, 3.898628965480707*^9},
 CellLabel->"In[1078]:=",
 CellID->630622865,ExpressionUUID->"a31f1e69-1003-4aa1-a527-16f084574b16"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "2"}], "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", "0", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "0", ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", "3"}], "}"}]}], 
  "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.774377849782387*^9, 3.774377908556069*^9}, {
   3.77437889899336*^9, 3.7743789152159243`*^9}, 3.7743826211880007`*^9, 
   3.7743836699801273`*^9, 3.8986289827357345`*^9, 3.8997515419697137`*^9},
 CellLabel->"Out[1078]=",
 CellID->313507277,ExpressionUUID->"b1f59ce2-3903-4037-bfde-d14921b8f6c7"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "6325e8bb-45fd-4db8-afbb-cae17d005cf1"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->14107565,ExpressionUUID->"c6b931ef-a3d3-4e00-860e-61f37a42fbf4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Select the first 8 subsets that add up to a prime:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.774377856274754*^9, 3.7743778645252533`*^9}, {
  3.774378958793374*^9, 3.774378962816297*^9}, {3.7754935372817483`*^9, 
  3.775493549274748*^9}},
 CellID->792813693,ExpressionUUID->"730fd704-4a10-4fb0-b565-80a4480ad157"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", "All", 
   ",", 
   RowBox[{"PrimeQ", "@*", "Total"}], ",", "8"}], "]"}]], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.774377841675405*^9, 3.774377854019011*^9}, {
   3.774378935746251*^9, 3.774378950423832*^9}, 3.8986289674630723`*^9},
 CellLabel->"In[1079]:=",
 CellID->885845820,ExpressionUUID->"fcfa86b2-4bd6-438c-b40f-bdb534b70795"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "5", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.774377849782387*^9, 3.7743778542105103`*^9}, {
   3.7743789452190866`*^9, 3.7743789508251123`*^9}, 3.77438262853036*^9, 
   3.774383671888269*^9, 3.8986289841118546`*^9, 3.899751544580207*^9},
 CellLabel->"Out[1079]=",
 CellID->9609939,ExpressionUUID->"7281b014-836e-4ce6-b75e-36b5795e3d8b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find subsets that add up to 25:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.774380923158021*^9, 3.774380936623066*^9}},
 CellID->221442697,ExpressionUUID->"e3cf1d61-0462-45a4-90fe-179d8b4049c0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
  RowBox[{
   RowBox[{"Range", "[", 
    RowBox[{"6", ",", "13"}], "]"}], ",", "All", ",", 
   RowBox[{
    RowBox[{"EqualTo", "[", "25", "]"}], "@*", "Total"}]}], "]"}]], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.774380939157793*^9, 3.774380947925907*^9}, 
   3.8986289690058613`*^9},
 CellLabel->"In[1080]:=",
 CellID->874035320,ExpressionUUID->"b97a995c-fe79-482c-bcbb-9c7e70d3f1f1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"12", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "7", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "8", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "9", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8", ",", "10"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.7743809487705793`*^9, 3.774382631762011*^9, 
  3.774383672942788*^9, 3.898628985317514*^9, 3.8997515472324176`*^9},
 CellLabel->"Out[1080]=",
 CellID->272543979,ExpressionUUID->"2b04a4d1-c270-451d-8b9e-2ea751eb7b99"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The main difference between ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Select", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Select",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "3478b342-e6d8-4e19-9f1a-d41e50fa5c83"],
 " and ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Subsets", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Subsets",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "5d515e94-3ae7-4310-926d-272c14911d89"],
 ", and ",
 Cell[BoxData[
  StyleBox["SelectSubsets", "InlineResourceFunction"]], "Text", 
  "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "61ff6791-0f1c-4946-b21f-5ed2353b7a51"],
 " is the amount of memory used:"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.7726296304422207`*^9, 3.772629664458939*^9}, {
  3.774379347610264*^9, 3.7743793649880533`*^9}},
 CellID->132229044,ExpressionUUID->"1ec72a96-2e63-48f3-a370-db204c807879"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MaxMemoryUsed", "[", 
  RowBox[{"res1", "=", 
   RowBox[{
    StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"6", ",", "24"}], "]"}], ",", 
     RowBox[{
      RowBox[{"EqualTo", "[", "25", "]"}], "@*", "Total"}]}], "]"}]}], 
  "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.772629670778248*^9, 3.772629671369946*^9}, 
   3.774379337870599*^9, {3.774382643977002*^9, 3.774382644702136*^9}, 
   3.8986289701953135`*^9},
 CellLabel->"In[1081]:=",
 CellID->982577960,ExpressionUUID->"af99e436-bb53-431b-ac1e-d500ffab2513"],

Cell[BoxData["62528"], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.7726296235280437`*^9, 3.772629671969466*^9, 3.772629715408601*^9, 
   3.774379339973384*^9, 3.7743807847608547`*^9, {3.77438263735252*^9, 
   3.774382658368615*^9}, 3.774383676625927*^9, 3.898628988163995*^9, 
   3.899751551147758*^9},
 CellLabel->"Out[1081]=",
 CellID->70864155,ExpressionUUID->"d8af7ee3-b378-426e-8d75-9308f7765772"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Compared to naive implementation, which requires roughly a 1000 times more \
memory:\
\>", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.7726296903922853`*^9, 3.772629709456338*^9}, {
   3.7743807903788853`*^9, 3.774380813852593*^9}, 3.778178311176044*^9},
 CellID->361259892,ExpressionUUID->"ae7a013c-1096-43e3-a3e7-56cf490832f6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MaxMemoryUsed", "[", 
  RowBox[{"res2", "=", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Subsets", "[", 
      RowBox[{"Range", "[", 
       RowBox[{"6", ",", "24"}], "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"EqualTo", "[", "25", "]"}], "@*", "Total"}]}], "]"}]}], 
  "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{
  3.77437934183204*^9, {3.7743826476812143`*^9, 3.774382648958578*^9}},
 CellLabel->"In[1082]:=",
 CellID->823753171,ExpressionUUID->"63f2c684-0dc2-4d54-a184-0c32e7837b01"],

Cell[BoxData["65071816"], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.772629673452551*^9, {3.772629713806848*^9, 3.772629716740141*^9}, 
   3.774379343504323*^9, {3.7743807869974127`*^9, 3.7743808003930397`*^9}, {
   3.774382639578573*^9, 3.774382659670002*^9}, 3.774383677920752*^9, 
   3.8986289908461523`*^9, 3.8997515538620896`*^9},
 CellLabel->"Out[1082]=",
 CellID->877496089,ExpressionUUID->"a41a2f4d-c68e-47cb-bb8c-bbb6f42dc46f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Verify the result is the same:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.77438266300908*^9, 3.7743826728563538`*^9}},
 CellID->324048877,ExpressionUUID->"4dae3a95-a75f-4bef-8c58-a6542a383e3c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"res1", "===", "res2"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.77438265102254*^9, 3.7743826546547613`*^9}},
 CellLabel->"In[1083]:=",
 CellID->183907914,ExpressionUUID->"1e6aadf0-042b-4c0f-865a-b53069eec175"],

Cell[BoxData["True"], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.7743826597498617`*^9, 3.774382674752039*^9}, 
   3.774383678022294*^9, 3.8986289921520443`*^9, 3.8997515565494585`*^9},
 CellLabel->"Out[1083]=",
 CellID->386927958,ExpressionUUID->"0fdb2fec-79ab-4c48-9b90-21ec05221d18"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "543cf9df-b6fc-4bd5-a672-172e25940b00"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->14107566,ExpressionUUID->"a14e07f2-ad26-4cfe-9e7d-4c33e1dc0d36"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "With a criterion that is a tautology, ",
 Cell[BoxData[
  StyleBox["SelectSubsets", "InlineResourceFunction"]], "Text", 
  "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "fce0dcac-93df-4638-af12-3aedfda4b0e4"],
 " and ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Subsets", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Subsets",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "7a7efbc0-7d3d-4278-95d3-ecc469d6d2ac"],
 " give the same results:"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.7743831646282253`*^9, 3.774383165613443*^9}, {
   3.774383218747665*^9, 3.7743832578468533`*^9}, {3.774383300556407*^9, 
   3.774383302606948*^9}, 3.775493571076748*^9},
 CellID->273207191,ExpressionUUID->"2098c9c6-4920-4fb8-821c-014b618b1e76"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
   RowBox[{
    RowBox[{"Range", "[", "5", "]"}], ",", 
    RowBox[{"True", "&"}]}], "]"}], "\[Equal]", 
  RowBox[{"Subsets", "[", 
   RowBox[{"Range", "[", "5", "]"}], "]"}]}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.774383124585257*^9, 3.7743831608382473`*^9}, {
   3.7743832633529577`*^9, 3.7743832703549023`*^9}, 3.898628972313793*^9},
 CellLabel->"In[1084]:=",
 CellID->1112728,ExpressionUUID->"6eccb964-7f77-4118-8b88-3bfb8499dfef"],

Cell[BoxData["True"], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.774383136530876*^9, 3.7743831612961407`*^9}, {
   3.774383266376502*^9, 3.774383270711432*^9}, 3.774383303641717*^9, 
   3.774383682922467*^9, 3.8986289934246645`*^9, 3.89975155882432*^9},
 CellLabel->"Out[1084]=",
 CellID->381398679,ExpressionUUID->"1fcf6f7b-7ec5-484f-a688-98a5b03605d1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  StyleBox["SelectSubsets", "InlineResourceFunction"]], "Text", 
  "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "028f3ae0-fbd1-4d94-89a2-fb397a55a21a"],
 " might not be able to return the number of elements that are requested:"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.7743811090220003`*^9, 3.774381126724887*^9}, {
  3.7743826862521563`*^9, 3.774382697600087*^9}, {3.774383471964933*^9, 
  3.7743834779987783`*^9}},
 CellID->306503519,ExpressionUUID->"1e5fc070-e6c9-4f1f-b42f-9c545c3cfd69"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
  RowBox[{
   RowBox[{"Range", "[", "5", "]"}], ",", "All", ",", 
   RowBox[{
    RowBox[{"EqualTo", "[", "8", "]"}], "@*", "Total"}], ",", "5"}], 
  "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.774381098378119*^9, 3.7743811032164707`*^9}, {
   3.7743811955738783`*^9, 3.774381201752266*^9}, {3.7743827127951603`*^9, 
   3.774382744158292*^9}, 3.8986289737215967`*^9},
 CellLabel->"In[1085]:=",
 CellID->999001902,ExpressionUUID->"e6d1ac9b-d005-492d-bf07-d1c2756f9c37"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.774381103686401*^9, 3.774381202198485*^9, 3.774381255469967*^9, 
   3.774381356640648*^9, {3.774382698578134*^9, 3.7743827444732037`*^9}, 
   3.7743833149168043`*^9, 3.774383473640765*^9, 3.774383684739236*^9, 
   3.898628994693178*^9, 3.8997515614040847`*^9},
 CellLabel->"Out[1085]=",
 CellID->185246950,ExpressionUUID->"a9daa2d6-43fb-4b32-9145-4b1f1905b8e5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find subsets that add up to 0:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.774381620287119*^9, 3.7743816282503433`*^9}},
 CellID->90617371,ExpressionUUID->"6cd73387-b02a-4447-9122-702beed4254f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sets", "=", 
   RowBox[{
    StyleBox["SelectSubsets", "ResourceFunctionHandle"], "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"-", "7"}], ",", "7"}], "]"}], ",", "All", ",", 
     RowBox[{
      RowBox[{"EqualTo", "[", "0", "]"}], "@*", "Total"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Short", "[", "sets", "]"}]}], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.774381633867979*^9, 3.774381720649877*^9}, {
   3.77438179319016*^9, 3.774381812143701*^9}, 3.8986289752821407`*^9},
 CellLabel->"In[1086]:=",
 CellID->760328926,ExpressionUUID->"08906698-a6b9-4ca0-a476-1d57cb7567b7"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{"{", "0", "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "1517", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "7"}], ",", 
      RowBox[{"-", "6"}], ",", 
      RowBox[{"-", "5"}], ",", 
      RowBox[{"-", "4"}], ",", 
      RowBox[{"-", "3"}], ",", 
      RowBox[{"-", "2"}], ",", 
      RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", "3", ",", "4", 
      ",", "5", ",", "6", ",", "7"}], "}"}]}], "}"}],
  Short]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.774381629319241*^9, 3.774381673123691*^9}, {
   3.7743817044773073`*^9, 3.774381721065008*^9}, {3.774381793599496*^9, 
   3.7743818127478447`*^9}, 3.774382747724327*^9, 3.774383317482757*^9, 
   3.774383686985428*^9, 3.898628996052253*^9, 3.899751574419077*^9},
 CellLabel->"Out[1087]//Short=",
 CellID->1214865,ExpressionUUID->"c4d7b296-d65b-4034-b9b5-081f5dca754d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualize the lengths of the lists:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.7743817794255047`*^9, 3.774381789402781*^9}, {
  3.7743818477074833`*^9, 3.774381847781249*^9}},
 CellID->809946818,ExpressionUUID->"e9f02ab2-62a8-4449-96a3-ad4b9a42e50a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Length", "/@", "sets"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.774381679403244*^9, 3.7743816864694767`*^9}, {
  3.774381826625986*^9, 3.7743818352648973`*^9}},
 CellLabel->"In[1088]:=",
 CellID->628177917,ExpressionUUID->"1b87c572-490a-4862-8bb2-16139cfba784"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.0055000000000000005`], AbsoluteThickness[2], 
         LineBox[CompressedData["
1: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
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
          Annotation[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.0055000000000000005`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1: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
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0., 1520.}, {0, 15.}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0., 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              PointSize[0.0055000000000000005`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0., 1520.}, {0, 15.}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0., 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
          "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             PointSize[0.0055000000000000005`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0., 1520.}, {0, 15.}}, 
        "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0., 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.0055000000000000005`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentSet", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 1520.}, {0, 15.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.7743816758186827`*^9, 3.7743817224137497`*^9}, {
   3.774381795222584*^9, 3.774381835626437*^9}, 3.77438275208463*^9, 
   3.774383318260276*^9, 3.774383688634159*^9, 3.8986289973046284`*^9, 
   3.8997515766784544`*^9},
 CellLabel->"Out[1088]=",
 CellID->552668493,ExpressionUUID->"67ca4020-e729-4556-b822-83757cc067b0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find out for which 2-tuple the sum is a prime:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.772560838695931*^9, 3.772560867647614*^9}},
 CellID->806991552,ExpressionUUID->"1318567b-ed36-4389-b10b-4edc831b9daa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SelectTuples", "[", 
  RowBox[{
   RowBox[{"Range", "[", "10", "]"}], ",", "2", ",", 
   RowBox[{"PrimeQ", "@*", "Total"}]}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.772560169898979*^9, 3.7725603348923473`*^9}, {
  3.772560535903418*^9, 3.7725605499799557`*^9}, {3.772560804010477*^9, 
  3.772560830351927*^9}, {3.8986282672093997`*^9, 3.8986282696925507`*^9}},
 CellLabel->"In[1089]:=",
 CellID->777243378,ExpressionUUID->"ed2a8f2d-6197-4e78-992a-cf66f313f523"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "9"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.772560181084918*^9, 3.772560287787828*^9}, {
   3.772560327593536*^9, 3.7725603351983356`*^9}, 3.772560418889901*^9, {
   3.772560530285694*^9, 3.772560550932457*^9}, {3.772560819766128*^9, 
   3.7725608306922693`*^9}, 3.772560869515587*^9, 3.772568343227582*^9, 
   3.772568772360887*^9, 3.772629527836937*^9, 3.8986282700030937`*^9, 
   3.8997516451754384`*^9},
 CellLabel->"Out[1089]=",
 CellID->24878681,ExpressionUUID->"2a0ae181-7c78-4d05-9b5f-b99a7fa6873d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Only get the first five:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.7725608886651154`*^9, 3.7725608936419907`*^9}, {
  3.774373154577928*^9, 3.774373156681644*^9}},
 CellID->962257849,ExpressionUUID->"d9cb2af3-627c-4450-ba69-b64bce8b75f1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SelectTuples", "[", 
  RowBox[{
   RowBox[{"Range", "[", "10", "]"}], ",", "2", ",", 
   RowBox[{"PrimeQ", "@*", "Total"}], ",", "5"}], "]"}]], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.772560882315424*^9, 3.7725608829022818`*^9}, 
   3.8986282753509865`*^9},
 CellLabel->"In[1090]:=",
 CellID->574613800,ExpressionUUID->"b3c284ff-b659-4fce-a049-de4532452d4c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "10"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.7725608840518217`*^9, 3.772560895589939*^9}, 
   3.772568344151428*^9, 3.7725687729580717`*^9, 3.772629529325654*^9, 
   3.898628276250498*^9, 3.8997516493280225`*^9},
 CellLabel->"Out[1090]=",
 CellID->22940605,ExpressionUUID->"cbd4dfd3-8f1a-4b40-924a-8d1fa688be5a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find the first 15 three-letter palindromic lists:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.772629550274045*^9, 3.772629563747054*^9}, {
  3.7726296033890467`*^9, 3.772629603748204*^9}, {3.7743731655642247`*^9, 
  3.7743731673291416`*^9}},
 CellID->817657987,ExpressionUUID->"404edfae-e8e9-42f5-9a2c-9d034767e71e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SelectTuples", "[", 
  RowBox[{
   RowBox[{"CharacterRange", "[", 
    RowBox[{"\"\<a\>\"", ",", "\"\<e\>\""}], "]"}], ",", "3", ",", 
   RowBox[{"PalindromeQ", "@*", "StringJoin"}], ",", "15"}], "]"}]], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.7725683636034107`*^9, 3.7725684402232647`*^9}, 
   3.772629612092914*^9, 3.8986282877921963`*^9},
 CellLabel->"In[1091]:=",
 CellID->88400611,ExpressionUUID->"c2f5a3a2-ad8e-4e96-8038-d838356892b4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"a\"\>", ",", "\<\"a\"\>", ",", "\<\"a\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"a\"\>", ",", "\<\"b\"\>", ",", "\<\"a\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"a\"\>", ",", "\<\"c\"\>", ",", "\<\"a\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"a\"\>", ",", "\<\"d\"\>", ",", "\<\"a\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"a\"\>", ",", "\<\"e\"\>", ",", "\<\"a\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"b\"\>", ",", "\<\"a\"\>", ",", "\<\"b\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"b\"\>", ",", "\<\"b\"\>", ",", "\<\"b\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"b\"\>", ",", "\<\"c\"\>", ",", "\<\"b\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"b\"\>", ",", "\<\"d\"\>", ",", "\<\"b\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"b\"\>", ",", "\<\"e\"\>", ",", "\<\"b\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"c\"\>", ",", "\<\"a\"\>", ",", "\<\"c\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"c\"\>", ",", "\<\"b\"\>", ",", "\<\"c\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"c\"\>", ",", "\<\"c\"\>", ",", "\<\"c\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"c\"\>", ",", "\<\"d\"\>", ",", "\<\"c\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"c\"\>", ",", "\<\"e\"\>", ",", "\<\"c\"\>"}], "}"}]}], 
  "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.772568401049097*^9, 3.7725684406116247`*^9}, 
   3.7726295343540792`*^9, {3.7726296053209476`*^9, 3.772629612517418*^9}, 
   3.8986282886796703`*^9, 3.8997516540595984`*^9},
 CellLabel->"Out[1091]=",
 CellID->264187089,ExpressionUUID->"21e692ef-9e65-46ec-9520-da8347f9a947"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find vectors for which the norm is an integer:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.772560565558001*^9, 3.772560572703558*^9}},
 CellID->834775918,ExpressionUUID->"75ecea50-5ad4-4126-8275-9480ff59346f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SelectTuples", "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"-", "100"}], ",", "100"}], "]"}], ",", "2", ",", 
     RowBox[{"IntegerQ", "@*", "Norm"}]}], "]"}], "//", "Point"}], "//", 
  "Graphics"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.77256058780375*^9, 3.772560609761799*^9}, 
   3.8986283045498886`*^9},
 CellLabel->"In[1092]:=",
 CellID->283080979,ExpressionUUID->"83323dff-f98a-4937-90a2-e372aa726980"],

Cell[BoxData[
 GraphicsBox[PointBox[CompressedData["
1:eJx92fuXVlUdx/GtggqiTDRjY07TkJNOE6NTkqBNAYaGojYqlYkXkn6uv6P/
IbtqeeliKV28DZplkFYaKuaFySRNEQEFQrRpf1bv95rdWmfNrHXWa+19zpnn
OWffvvv7LL3pG1d9/dhSyjePKyV+a2ZmZks9YqG8vnpzdU89bqY+9la/Tfk7
+N3qr+sRd+LL6PkBHMF11e9x/vv4A7ylel89bmnKF1VvrT5Sj1upjxPVH1b/
UI/4FyzUj+PK6o+ov636YD1ua8oXVm+nfAfeiT+u3lWP+BC+gG+h152MZ+Aq
nKz+hOt+ij9D//ddPF98Fvei1y3Bs3ACN1R/znW/wLurz9fj7qY8XL2n+mg9
7qE+nl+1D2yhHbdwfgvtFr9W/SX1v0LbPk7hdnwJX0ev78NBPA/X4Kbqb7j+
3uqr9bi3KfdX7SP3UR+vq95ffbwe91Mfz60+QNm2f7ApX1P1u09RP0U/3Uq/
2kr9VvqVfeEh2i3uw8L5HpzAtNPDnP8t2qdt+0ea//lXnMZX8CB6/0l4Gg7h
GK7CSdxY/R33/x7tE4825cuqjq34NO7CwvmlOIrXVrfx3rZx3Tbem31jO/Xb
ec9/pPzYzP/6/2NNOf3dNn2c+ri2+ifKf0bnANvM7xCfxz14AL3vFOzFYVyB
qzHP9wT3PYm2VXwZX0XP9+MApl/s4H3u4LodvM+nKPvO4060fgQzvz1DvXOw
Y3hnc+9LeBi9fgEO4iiux4xH5yTb5lnuj8sx/etv1D+HzkG++7gb96PXLcbT
cRwvrzrnxrexUL8IM75epN4+6rvd1dQvw7w3x9Y07TXNddO01zTt9HfqndN8
l3Efer4HRzD9+x+cd220j8TX0fN9OIZ5/76z3Vy3m/75T8rODa805Xxv5077
os8Y9+IhPIKF+07AhbgEh3AML67+i/teQ+d8ny3uQc/34gDmPRlzOEb3NPfu
x8J1i7EPx3Fz9Q2ucw31Wfc29f2Yfvsm9c7htuk++tu+5vwiHMTMr/bl/c13
/TcWzp+IvZj2cw46wHUHeA5ji7eoj+nf9v23m+92GI9i4br5uAB7MPGJa8hB
rj9If7EvHKL+EO/JOeNw85mF+kWY/u4zx3ewUH88pt3sa0c4f4TPeae5t1DO
e/PZjlJ/lM99t/pePd6lPtbQtlj3HvVxXvU/lGcwf8a+xrpdMW6cK2aNxqbG
oG3MGeeKMeNcMWLsivGisZwxW1eMFtuYKho7GSu1MVKcmpmNeaKxTVcME7ti
imisYCzg2t+u+dG1vWtNj11rbnTtbNfM2K6J0TWra42KrintGhJdE9o1ILZz
enRubufk6JzaNUdG57R2zortnBSdS5wrnBsc845lx65j1DHoWHNsOZYcO46V
rjGSv2PwWDwO5+F8PB5PwBNxAS7Ek3ARnoyn4GLswffhEnw/9mIfnoofwH48
DT+Ip+MAfggH8cM4hEvxI3gGDuNH8Uw8C0fwYziKH8dlOIZn4zk4jp/AT+K5
uBw/hefhClyJ5+MF+GmcwM/gZ3EVrsY1eCF+DtfiRXgxfh7X4SV4Ka7Hy/By
vAK/gJN4JV6FV+MG/CJ+Cb+M1+BX8FrciNfh9XgD3oib8Kt4E27G7Iu7xoZr
keV5HK5FhXLOuVY7hmLGhWumYypmPBmbOcZiP+eMNVw7C/Xem3FlzG9s4Nhc
wOfG9FtjP8fsQj7HPadjOE5wrzG5sZIxgmt24br5zWfFHsy4MpfinBDTzu7R
nCPiOM/kHsLY0FijcN5n78VhPtO9urG7sVJpvlMcxIyLdi4yN2OMbH0/pv+2
c5W5NPeaxsLGhl7nd+3DcdxMnbkU9wzGwqW5Jw5gxmHX3GhOxT2qex9jZGNA
YzTvs8/ZJ3zmIRzDzAfmJpyDY/pLOxe797M8zHc3h+je2T1DaZ5tgM+Lm8r/
z+XmmtzjGrt73rYdwbyndu43p+Lex3qfNc9hDiS6hy/UL8PMw+3aYa7QmNx6
x8AG3oG5O3MS7v3cQxSus0/77sYx82rX2mQu0RyL9ctxkndi7tZcoLkH97jG
/oXrnTt8p6O4HtM+7Vpo7sjcQ2nuGeW9tWtl4rJlTTnv1lyXe2b3pq6p9kX7
SEy7da215o7N9Zm7MifhXtO9mvc5FzlWbYMVuBqz/nSt5eYqLa+lLcyxlKZt
2rXeHKrldXymuavSfIeVZTYnbu5oFxbO21d99/m+iR3MFRfKWbe7Yglz8+ao
zYGa8zKnYo7Cvaf3u5Y4RwyhbbYKJzHreFfsYg7eHKh7dc/3NP8rZrytLrO5
vlJm28zctDHQGt5zYiF/QyiUE2+0sZG5Sstp28RK/rZRKCcOyVxpTqVQTr9t
Yyl/Q5lCc6jmmsyleL1zv3ObfcRn2FS6YzN/CzIXaL1jOXFP+oC54kI5fSNz
jrm7QjnjoSu28zcSc9TmEs3NeJ1rqXOTfSDtNlds6G8k5uDNFZpT8TpjDOde
+0Q+Y67Y0t8QLKcPtLGmOXFzx9Y7F2SMbSyzuflCOc+XPuFvG4Vy+spcsaq/
oZi7NYfoeddI5+L0ga7Y1lya5cxraXN/CyqU0xf+C5AC+pk=
   "]]]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.772560575788533*^9, 3.7725606104735947`*^9}, 
   3.772629620279973*^9, 3.8986283058261824`*^9, 3.899751659924828*^9},
 CellLabel->"Out[1092]=",
 CellID->104575,ExpressionUUID->"3f8214b8-d7f3-434d-8485-146bc93849f0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The main difference between ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Select", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Select",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "2efe3b29-8dc1-4e31-a131-9725f3192af3"],
 " and ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Tuples", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Tuples",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "4e62dc82-3551-4d13-b772-d5abf0891286"],
 " and ",
 Cell[BoxData[
  StyleBox["SelectTuples", "InlineResourceFunction"]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "f1a8d10e-96ce-4388-a135-043b3e921a7c"],
 " is the amount of memory used:"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.7726296304422207`*^9, 3.772629664458939*^9}, {
  3.774373207290767*^9, 3.7743732347630005`*^9}},
 CellID->405355337,ExpressionUUID->"086a51bb-94d2-49c5-a52d-498e309ced6f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MaxMemoryUsed", "[", 
  RowBox[{"SelectTuples", "[", 
   RowBox[{
    RowBox[{"Range", "[", "10", "]"}], ",", "5", ",", 
    RowBox[{
     RowBox[{"EqualTo", "[", "30", "]"}], "@*", "Total"}]}], "]"}], 
  "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.772629670778248*^9, 3.772629671369946*^9}, 
   3.8986283222064795`*^9},
 CellLabel->"In[1093]:=",
 CellID->811262678,ExpressionUUID->"541239ec-f9c6-458e-bf36-fdcc550ba651"],

Cell[BoxData["1049416"], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.7726296235280437`*^9, 3.772629671969466*^9, 
  3.772629715408601*^9, 3.898628327190708*^9, 3.89975167027073*^9},
 CellLabel->"Out[1093]=",
 CellID->9194802,ExpressionUUID->"e043287a-82f3-4c21-bcad-b3fa53162d93"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compared to naive implementation:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.7726296903922853`*^9, 3.772629709456338*^9}},
 CellID->376441899,ExpressionUUID->"53b47280-0ee7-4481-90d3-a8a9932faef4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MaxMemoryUsed", "[", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Tuples", "[", 
     RowBox[{
      RowBox[{"Range", "[", "10", "]"}], ",", "5"}], "]"}], ",", 
    RowBox[{
     RowBox[{"EqualTo", "[", "30", "]"}], "@*", "Total"}]}], "]"}], 
  "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellLabel->"In[1094]:=",
 CellID->695357144,ExpressionUUID->"5423d9d5-38e3-41ba-aaf9-5fc3305c977d"],

Cell[BoxData["21711208"], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.772629673452551*^9, {3.772629713806848*^9, 3.772629716740141*^9}, 
   3.8986283299944687`*^9, 3.899751672441455*^9},
 CellLabel->"Out[1094]=",
 CellID->11269696,ExpressionUUID->"566b37f3-99bf-4278-b215-fff63bbda416"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The length of the results might be smaller than the argument ",
 Cell[BoxData[
  StyleBox["m", "TI"]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "04ebcdc4-f4d4-4f34-a65e-5d0c87b3d6bf"],
 ":"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.772629935083609*^9, 3.77262995964095*^9}, {
  3.772629991594735*^9, 3.772630002309466*^9}},
 CellID->449563358,ExpressionUUID->"199b572c-76b3-42f5-a413-ce1bf61b0744"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SelectTuples", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], ",", "3", ",", 
   RowBox[{
    RowBox[{"EqualTo", "[", "1", "]"}], "@*", "Norm"}], ",", "10"}], 
  "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.772629905261765*^9, 3.7726299223545437`*^9}, 
   3.8986283453916645`*^9},
 CellLabel->"In[1095]:=",
 CellID->168888283,ExpressionUUID->"14e6a72a-0e9a-4280-8326-c7a3663ed759"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.772629920099832*^9, 3.772629923277173*^9}, 
   3.8986283462813115`*^9, 3.899751674141452*^9},
 CellLabel->"Out[1095]=",
 CellID->83774134,ExpressionUUID->"e7a36d91-e340-463e-8ab9-b4d5b36eee91"]
}, Open  ]]
}, Open  ]],

Cell["I got kind of confused with this.", "MathCaption",
 CellChangeTimes->{{3.8997538149818234`*^9, 3.899753821019329*^9}},
 CellID->39057588,ExpressionUUID->"6103e57a-4751-4a6c-ad88-a2a42257d03e"],

Cell[TextData[{
 "Combinatorica's ",
 Cell[BoxData[
  RowBox[{"Eulerian", "[", 
   RowBox[{"n", ",", "k"}], "]"}]], "InlineFormula",ExpressionUUID->
  "fca4ad9a-0298-41e6-ab1b-a96c49786769"],
 " gives the number of permutations of length ",
 Cell[BoxData[
 "n"], "InlineFormula",ExpressionUUID->"aa170b12-acf5-4a52-8b0a-0b89eb94a79f"],
 " with ",
 Cell[BoxData[
 "k"], "InlineFormula",ExpressionUUID->"29fe3487-7bb4-4f7b-a28d-43de1a585f8d"],
 " runs."
}], "MathCaption",
 CellChangeTimes->{{3.8997538218356686`*^9, 3.899753850845626*^9}},
 CellID->236283598,ExpressionUUID->"3682facc-fa90-45b4-af55-9439bcc518ae"],

Cell["This function uses a different index for k.", "MathCaption",
 CellChangeTimes->{{3.899753855598046*^9, 3.899753865750459*^9}},
 CellID->3969473,ExpressionUUID->"013ffcca-ae4d-4538-b771-83739c47a5ff"],

Cell[TextData[{
 "If you have ",
 Cell[BoxData[
  RowBox[{"EulerianNumber", "[", 
   RowBox[{"n", ",", "k"}], "]"}]], "InlineFormula",ExpressionUUID->
  "e476f464-2677-496a-942a-f6cc80c2647a"],
 ", do ",
 Cell[BoxData[
  RowBox[{"Eulerian", "[", 
   RowBox[{"n", ",", 
    RowBox[{"k", "-", "1"}]}], "]"}]], "InlineFormula",ExpressionUUID->
  "401eecc2-632f-4285-ae4e-bdb3b03922fe"],
 "."
}], "MathCaption",
 InitializationCell->True,
 CellChangeTimes->{{3.89975386688449*^9, 3.8997539026741056`*^9}},
 CellID->442612299,ExpressionUUID->"4364dda2-b1db-4dc9-9509-a58330c5b441"],

Cell[TextData[{
 "If you have ",
 Cell[BoxData[
  RowBox[{"Eulerian", "[", 
   RowBox[{"n", ",", "k"}], "]"}]], "InlineFormula",ExpressionUUID->
  "24e37f2a-98f8-4033-aa4d-dfeb09238c0c"],
 ", do ",
 Cell[BoxData[
  RowBox[{"EulerianNumber", "[", 
   RowBox[{"n", ",", 
    RowBox[{"k", "+", "1"}]}], "]"}]], "InlineFormula",ExpressionUUID->
  "a30734bb-91a9-4bd2-a677-7115453fe9a8"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.899753913756544*^9, 3.8997539246251435`*^9}},
 CellID->90642782,ExpressionUUID->"e0df06a6-a414-425c-8f2a-5a62f7f07b4e"],

Cell["\<\
This also affects the definition of other related functions like \
EulerianCatalanNumber.\
\>", "MathCaption",
 CellChangeTimes->{{3.899753936207406*^9, 3.899753951405362*^9}},
 CellID->112995886,ExpressionUUID->"b03684ae-14f1-4dc2-8585-753e8e570ae2"],

Cell[CellGroupData[{

Cell[TextData[{
 "One interpretation of the Eulerian Catalan number is \"Twice the number of \
permutations of ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "...", ",", 
    RowBox[{"2", "n"}]}], "}"}]], "InlineFormula",ExpressionUUID->
  "9a926504-6d09-4428-9aac-1680da472a13"],
 " with ",
 Cell[BoxData[
 "n"], "InlineFormula",ExpressionUUID->"4a60089b-8b7d-4297-bbff-926569b34fb4"],
 " ascents\"."
}], "MathCaption",
 CellChangeTimes->{3.899751814585163*^9},
 CellID->129906996,ExpressionUUID->"1d5eb99d-f3b5-4daa-b3fa-7aacd8bff410"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{"\"\<n\>\"", "->", 
       RowBox[{"EulerianCatalanNumber", "[", "#", "]"}]}], "|>"}], "&"}], 
    "]"}], "[", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "21"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997518381090746`*^9, 3.899751839651645*^9}},
 CellLabel->"In[2541]:=",
 CellID->239135585,ExpressionUUID->"b4f55719-99d0-4123-9dcd-35a74b08e2b0"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      0 -> <|"n" -> 1|>, 1 -> <|"n" -> 2|>, 2 -> <|"n" -> 22|>, 
       3 -> <|"n" -> 604|>, 4 -> <|"n" -> 31238|>, 5 -> <|"n" -> 2620708|>, 
       6 -> <|"n" -> 325024572|>, 7 -> <|"n" -> 55942352184|>, 
       8 -> <|"n" -> 12765597850950|>, 9 -> <|"n" -> 3730771315561300|>, 
       10 -> <|"n" -> 1359124435588313876|>, 
       11 -> <|"n" -> 603916464771468176392|>, 
       12 -> <|"n" -> 321511316149669476991132|>, 
       13 -> <|"n" -> 202039976682357297272094824|>, 
       14 -> <|"n" -> 147980747895225006590333244088|>, 
       15 -> <|"n" -> 124963193751534047864734415925360|>, 
       16 -> <|"n" -> 120523981455993504966525708346887750|>, 
       17 -> <|"n" -> 131671692334895976886647813958596908340|>, 
       18 -> <|"n" -> 161759954125032708920885781040309430206500|>, 
       19 -> <|"n" -> 222019441630075420847480526017947263931809000|>, 
       20 -> <|"n" -> 338476895760295138790385051321218766549279671220|>, 
       21 -> <|"n" -> 570180937724400876712836731188276811777920749126840|>|>,
      "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[16]} -> 1, {All, "n"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 1, {All}]]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n"}, {
         TypeSystem`Atom[Integer]}], 22], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[16]} -> 1, {All, "n"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 1, {All}]]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"n"}, {
         TypeSystem`Atom[Integer]}], 22], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 1, "DataRowCount" -> 22, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["n", 
                  Style[
                  "n", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "n"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "n"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["604"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["31238"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2620708"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["325024572"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["55942352184"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12765597850950"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3730771315561300"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1359124435588313876"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["11"], 
                  Style[
                   RawBoxes["11"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[11]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["603916464771468176392"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["12"], 
                  Style[
                   RawBoxes["12"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[12]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["321511316149669476991132"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["13"], 
                  Style[
                   RawBoxes["13"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[13]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["202039976682357297272094824"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["14"], 
                  Style[
                   RawBoxes["14"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[14]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["147980747895225006590333244088"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["15"], 
                  Style[
                   RawBoxes["15"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[15]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124963193751534047864734415925360"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["16"], 
                  Style[
                   RawBoxes["16"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[16]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["120523981455993504966525708346887750"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["17"], 
                  Style[
                   RawBoxes["17"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[17]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["131671692334895976886647813958596908340"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["18"], 
                  Style[
                   RawBoxes["18"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[18]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["161759954125032708920885781040309430206500"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["19"], 
                  Style[
                   RawBoxes["19"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[19]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["222019441630075420847480526017947263931809000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{406., {299.8544921875, 305.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{406., {299.8544921875, 305.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8997518400024347`*^9, 3.899754214671568*^9},
 CellLabel->"Out[2541]=",
 CellID->375946613,ExpressionUUID->"e5b3e60c-4f45-4b54-95f5-65efa64f1d94"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The table of Eulerian numbers up to 10:", "MathCaption",
 CellChangeTimes->{{3.8983652566500874`*^9, 3.8983652679173603`*^9}, {
  3.8997543826100793`*^9, 3.8997543830621758`*^9}},
 CellID->537854770,ExpressionUUID->"59522b20-92d9-4fe3-a4e9-f19f51fe7b6a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"EulerianNumber", "[", 
      RowBox[{"n", ",", "k"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "n"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8983652769570837`*^9, 3.898365280619089*^9}, {
  3.8997526813472567`*^9, 3.8997526953987074`*^9}},
 CellLabel->"In[2542]:=",
 CellID->400353117,ExpressionUUID->"d97f9f60-f29a-42cd-8506-c46733c4e5b3"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "", "", "", "", "", "", "", "", ""},
    {"1", "1", "", "", "", "", "", "", "", ""},
    {"1", "4", "1", "", "", "", "", "", "", ""},
    {"1", "11", "11", "1", "", "", "", "", "", ""},
    {"1", "26", "66", "26", "1", "", "", "", "", ""},
    {"1", "57", "302", "302", "57", "1", "", "", "", ""},
    {"1", "120", "1191", "2416", "1191", "120", "1", "", "", ""},
    {"1", "247", "4293", "15619", "15619", "4293", "247", "1", "", ""},
    {"1", "502", "14608", "88234", "156190", "88234", "14608", "502", "1", ""},
    {"1", "1013", "47840", "455192", "1310354", "1310354", "455192", "47840", 
     "1013", "1"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.8997526858111267`*^9, 3.8997526957482176`*^9}, 
   3.899754415849376*^9},
 CellLabel->"Out[2542]=",
 CellID->283072746,ExpressionUUID->"e1c89aba-3d3f-4f5a-9f31-76643896c568"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Eulerian numbers of the second kind are written something like ",
 Cell[BoxData[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"\[LeftAngleBracket]", GridBox[{
      {"n"},
      {"m"}
     }], "\[RightAngleBracket]"}], "\[RightAngleBracket]"}]], "Input",
  CellChangeTimes->{{3.899754511714775*^9, 3.899754525131752*^9}},
  ExpressionUUID->"5ae85eaf-52cb-4e60-9ea1-7c183627afe7"],
 "."
}], "MathCaption",
 CellChangeTimes->{3.899754545253282*^9},
 CellID->50294008,ExpressionUUID->"ed7aae05-0dd3-4680-8d28-a63de1881c28"],

Cell[CellGroupData[{

Cell["\<\
The first 9 rows of the triangle of Eulerian numbers of the second kind:\
\>", "MathCaption",
 CellChangeTimes->{{3.8983653125379972`*^9, 3.8983653233789577`*^9}, {
  3.89975445331875*^9, 3.8997544725110817`*^9}},
 CellID->426907475,ExpressionUUID->"60642da1-49cc-432f-b29f-50ab8440dd1a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"EulerianNumberOfTheSecondKind", "[", 
      RowBox[{"n", ",", "k"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "n"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8983653324763412`*^9, 3.8983653495079985`*^9}, {
  3.8997544554680986`*^9, 3.8997544746648426`*^9}},
 CellLabel->"In[2548]:=",
 CellID->283987963,ExpressionUUID->"8747b09f-1320-4270-a546-c9e118bfc994"],

Cell[BoxData[
 TagBox[GridBox[{
    {"0", "", "", "", "", "", "", "", ""},
    {"2", "0", "", "", "", "", "", "", ""},
    {"8", "6", "0", "", "", "", "", "", ""},
    {"22", "58", "24", "0", "", "", "", "", ""},
    {"52", "328", "444", "120", "0", "", "", "", ""},
    {"114", "1452", "4400", "3708", "720", "0", "", "", ""},
    {"240", "5610", "32120", "58140", "33984", "5040", "0", "", ""},
    {"494", "19950", "195800", "644020", "785304", "341136", "40320", "0", ""},
    {"1004", "67260", "1062500", "5765500", "12440064", "11026296", "3733920",
      "362880", "0"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.8983653498610387`*^9, 3.8993984461038*^9, {3.8997544363274713`*^9, 
   3.899754475002436*^9}},
 CellLabel->"Out[2548]=",
 CellID->74394165,ExpressionUUID->"dfa52575-24ae-4b2c-a2bf-f9eb2de00178"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The first 14 rows of the Narayana triangle read as follows:", \
"MathCaption",
 CellChangeTimes->{{3.8982879891419973`*^9, 3.8982879983099976`*^9}, {
  3.899754576795635*^9, 3.899754589702189*^9}},
 CellID->69975013,ExpressionUUID->"f16113ca-048b-48a6-94aa-cbb013daec9e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"NarayanaNumber", "[", 
      RowBox[{"n", ",", "k"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "14"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "n"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8982879990979986`*^9, 3.8982880494319987`*^9}, {
  3.898288095920997*^9, 3.898288113509997*^9}, {3.89975456038793*^9, 
  3.8997545748933744`*^9}},
 CellLabel->"In[2553]:=",
 CellID->447664363,ExpressionUUID->"4ad477fe-e4bf-47b1-a5d6-89fb20b92b78"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "", "", "", "", "", "", "", "", "", "", "", "", ""},
    {"1", "1", "", "", "", "", "", "", "", "", "", "", "", ""},
    {"1", "3", "1", "", "", "", "", "", "", "", "", "", "", ""},
    {"1", "6", "6", "1", "", "", "", "", "", "", "", "", "", ""},
    {"1", "10", "20", "10", "1", "", "", "", "", "", "", "", "", ""},
    {"1", "15", "50", "50", "15", "1", "", "", "", "", "", "", "", ""},
    {"1", "21", "105", "175", "105", "21", "1", "", "", "", "", "", "", ""},
    {"1", "28", "196", "490", "490", "196", "28", "1", "", "", "", "", "", ""},
    {"1", "36", "336", "1176", "1764", "1176", "336", "36", "1", "", "", "", 
     "", ""},
    {"1", "45", "540", "2520", "5292", "5292", "2520", "540", "45", "1", "", 
     "", "", ""},
    {"1", "55", "825", "4950", "13860", "19404", "13860", "4950", "825", "55",
      "1", "", "", ""},
    {"1", "66", "1210", "9075", "32670", "60984", "60984", "32670", "9075", 
     "1210", "66", "1", "", ""},
    {"1", "78", "1716", "15730", "70785", "169884", "226512", "169884", 
     "70785", "15730", "1716", "78", "1", ""},
    {"1", "91", "2366", "26026", "143143", "429429", "736164", "736164", 
     "429429", "143143", "26026", "2366", "91", "1"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.898288019627*^9, 3.8982880499109974`*^9}, 
   3.898288114284998*^9, {3.899754560920267*^9, 3.8997545944756646`*^9}},
 CellLabel->"Out[2553]=",
 CellID->405832833,ExpressionUUID->"6b48fb81-b7d9-4211-b97c-97486ca4bc6d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Make a table of signed and unsigned Lah numbers.", "MathCaption",
 CellChangeTimes->{{3.8997546278577337`*^9, 3.8997546348819017`*^9}},
 CellID->629424924,ExpressionUUID->"361552c4-a653-42fc-9962-607ba85e7f3b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"SignedLahNumber", "[", 
      RowBox[{"n", ",", "k"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "n"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8982879990979986`*^9, 3.8982880494319987`*^9}, {
  3.898288095920997*^9, 3.898288113509997*^9}, {3.89975456038793*^9, 
  3.8997545748933744`*^9}, {3.899754635482366*^9, 3.8997546509602003`*^9}},
 CellLabel->"In[2556]:=",
 CellID->282716016,ExpressionUUID->"2b3c60a9-4488-4f19-9fde-ac1178048b93"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"-", "1"}], "", "", "", "", "", "", "", ""},
    {"2", "1", "", "", "", "", "", "", ""},
    {
     RowBox[{"-", "6"}], 
     RowBox[{"-", "6"}], 
     RowBox[{"-", "1"}], "", "", "", "", "", ""},
    {"24", "36", "12", "1", "", "", "", "", ""},
    {
     RowBox[{"-", "120"}], 
     RowBox[{"-", "240"}], 
     RowBox[{"-", "120"}], 
     RowBox[{"-", "20"}], 
     RowBox[{"-", "1"}], "", "", "", ""},
    {"720", "1800", "1200", "300", "30", "1", "", "", ""},
    {
     RowBox[{"-", "5040"}], 
     RowBox[{"-", "15120"}], 
     RowBox[{"-", "12600"}], 
     RowBox[{"-", "4200"}], 
     RowBox[{"-", "630"}], 
     RowBox[{"-", "42"}], 
     RowBox[{"-", "1"}], "", ""},
    {"40320", "141120", "141120", "58800", "11760", "1176", "56", "1", ""},
    {
     RowBox[{"-", "362880"}], 
     RowBox[{"-", "1451520"}], 
     RowBox[{"-", "1693440"}], 
     RowBox[{"-", "846720"}], 
     RowBox[{"-", "211680"}], 
     RowBox[{"-", "28224"}], 
     RowBox[{"-", "2016"}], 
     RowBox[{"-", "72"}], 
     RowBox[{"-", "1"}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.899754639834771*^9, 3.8997546512787457`*^9}},
 CellLabel->"Out[2556]=",
 CellID->18739418,ExpressionUUID->"4b8c8324-41cd-4e75-bc4b-819f4676e21d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"UnsignedLahNumber", "[", 
      RowBox[{"n", ",", "k"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "n"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8982879990979986`*^9, 3.8982880494319987`*^9}, {
  3.898288095920997*^9, 3.898288113509997*^9}, {3.89975456038793*^9, 
  3.8997545748933744`*^9}, {3.899754635482366*^9, 3.899754660251339*^9}},
 CellLabel->"In[2557]:=",
 CellID->28645306,ExpressionUUID->"6ea7bc80-4b1b-43e9-ab2e-58483439e202"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "", "", "", "", "", "", "", ""},
    {"2", "1", "", "", "", "", "", "", ""},
    {"6", "6", "1", "", "", "", "", "", ""},
    {"24", "36", "12", "1", "", "", "", "", ""},
    {"120", "240", "120", "20", "1", "", "", "", ""},
    {"720", "1800", "1200", "300", "30", "1", "", "", ""},
    {"5040", "15120", "12600", "4200", "630", "42", "1", "", ""},
    {"40320", "141120", "141120", "58800", "11760", "1176", "56", "1", ""},
    {"362880", "1451520", "1693440", "846720", "211680", "28224", "2016", 
     "72", "1"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.8997546605353403`*^9},
 CellLabel->"Out[2557]=",
 CellID->120305284,ExpressionUUID->"c061e54f-d068-4493-9449-9525515ebeb4"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Find the sum of even-valued Fibonacci numbers less than 4 million.\
\>", "MathCaption",
 CellChangeTimes->{{3.8997547344956493`*^9, 3.899754744755741*^9}},
 CellID->688126866,ExpressionUUID->"7aaa945d-1726-4abd-a902-754136a045e6"],

Cell[TextData[{
 "We aren't counting 4 million, so we need to find the inverse of ",
 Cell[BoxData[
  RowBox[{"4000000", "-", "1"}]], "InlineFormula",ExpressionUUID->
  "5ad395bb-b5a8-47e3-b484-9f150bb71997"],
 ", or ",
 Cell[BoxData[
 "3999999"], "InlineFormula",ExpressionUUID->
  "582515f7-3c0b-4a11-8178-9fa1f036c748"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.8997547465995646`*^9, 3.8997547726605234`*^9}},
 CellID->462783584,ExpressionUUID->"63f906c4-4067-4e18-9247-8106ee9b0e79"],

Cell[CellGroupData[{

Cell["Compute the inverse Fibonacci of 4 million.", "MathCaption",
 CellChangeTimes->{{3.899754693440962*^9, 3.8997546993037024`*^9}},
 CellID->161103956,ExpressionUUID->"78d2e32f-ed0a-4df1-b068-6d78380156e8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InverseFibonacci", "[", "3999999", "]"}]], "Input",
 CellChangeTimes->{{3.8997547004045286`*^9, 3.8997547052777286`*^9}, {
  3.899754775052737*^9, 3.8997547772005157`*^9}},
 CellLabel->"In[2561]:=",
 CellID->630387027,ExpressionUUID->"5b472c6f-e35e-4297-ab1b-46a12b29634f"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"Root", 
    InterpretationBox[
     StyleBox[
      TemplateBox[{"\"33.3\"", 
        DynamicBox[
         FEPrivate`FrontEndResource[
         "FEExpressions", "NumericalApproximationElider"]]}, "RowDefault"], 
      ShowStringCharacters -> False], 
     33.2629474001778504543835879303514957428`15.954589770191003, Editable -> 
     False], 
    TagBox[
     RowBox[{"Root", "[", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{
             RowBox[{
               RowBox[{"-", "3999999"}], "+", 
               RowBox[{"Fibonacci", "[", "#1", "]"}]}], "&"}], ",", 
           "33.2629474001778682831`9.663180428680144"}], "}"}], "]"}], 
     Short[#, 7]& ], 33.26294740017785},
   "NumericalApproximation"],
  Root[{-3999999 + Fibonacci[#]& , 
    33.2629474001778682831`9.663180428680144}]]], "Output",
 CellChangeTimes->{3.89975470587694*^9, 3.89975477785804*^9},
 CellLabel->"Out[2561]=",
 CellID->401184551,ExpressionUUID->"21cf61c2-f534-4559-a848-057f819da1c5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Now we can solve Project Euler Problem 2 ",
 ButtonBox["Even Fibonacci Numbers",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://projecteuler.net/problem=2"], None},
  ButtonNote->"https://projecteuler.net/problem=2"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.8997547810789165`*^9, 3.899754806210188*^9}},
 CellID->478852567,ExpressionUUID->"abbb66a7-996f-490d-a98a-2b51d54b1242"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fibonacci", "[", 
  RowBox[{"Range", "[", 
   RowBox[{"Floor", "[", 
    RowBox[{"InverseFibonacci", "[", "3999999", "]"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8997548106496086`*^9, 3.8997548179289904`*^9}},
 CellLabel->"In[2562]:=",
 CellID->2173387,ExpressionUUID->"04d75b31-f1a8-48ae-bf00-f85e5ad93022"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "2", ",", "3", ",", "5", ",", "8", ",", "13", ",", "21",
    ",", "34", ",", "55", ",", "89", ",", "144", ",", "233", ",", "377", ",", 
   "610", ",", "987", ",", "1597", ",", "2584", ",", "4181", ",", "6765", ",",
    "10946", ",", "17711", ",", "28657", ",", "46368", ",", "75025", ",", 
   "121393", ",", "196418", ",", "317811", ",", "514229", ",", "832040", ",", 
   "1346269", ",", "2178309", ",", "3524578"}], "}"}]], "Output",
 CellChangeTimes->{3.8997548182548466`*^9},
 CellLabel->"Out[2562]=",
 CellID->59007347,ExpressionUUID->"fb2b3d5f-cbb9-4459-b9af-4e3acbc105cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", "EvenQ", "]"}], "[", 
  RowBox[{"Fibonacci", "[", 
   RowBox[{"Range", "[", 
    RowBox[{"Floor", "[", 
     RowBox[{"InverseFibonacci", "[", "3999999", "]"}], "]"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8997548210077267`*^9, 3.8997548264422503`*^9}},
 CellLabel->"In[2563]:=",
 CellID->48490791,ExpressionUUID->"728e602d-caab-473c-88d0-9cc242ec108d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "8", ",", "34", ",", "144", ",", "610", ",", "2584", ",", "10946",
    ",", "46368", ",", "196418", ",", "832040", ",", "3524578"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.899754826763739*^9},
 CellLabel->"Out[2563]=",
 CellID->249968189,ExpressionUUID->"33239a98-9e2d-435e-ad19-f3dc1ad5f358"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{
   RowBox[{"Select", "[", "EvenQ", "]"}], "[", 
   RowBox[{"Fibonacci", "[", 
    RowBox[{"Range", "[", 
     RowBox[{"Floor", "[", 
      RowBox[{"InverseFibonacci", "[", "3999999", "]"}], "]"}], "]"}], "]"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.899754828016255*^9, 3.899754828794771*^9}},
 CellLabel->"In[2564]:=",
 CellID->144665321,ExpressionUUID->"d90e7d6b-d616-4d7f-9669-6f883f010017"],

Cell[BoxData["4613732"], "Output",
 CellChangeTimes->{3.8997548290796323`*^9},
 CellLabel->"Out[2564]=",
 CellID->495057432,ExpressionUUID->"9b3972ba-1d2d-4423-b779-db42b1edf1a1"]
}, Open  ]]
}, Open  ]],

Cell["That's the answer.", "MathCaption",
 CellChangeTimes->{{3.899754833373391*^9, 3.8997548353579597`*^9}},
 CellID->66692240,ExpressionUUID->"102f294e-4120-46e8-9170-b7e6a2cac93a"],

Cell[CellGroupData[{

Cell[TextData[{
 "Let's work through the examples from the Wolfram Challenge ",
 ButtonBox["Next Permutation",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://challenges.wolframcloud.com/challenge/next-permutation"], 
    None},
  ButtonNote->
   "https://challenges.wolframcloud.com/challenge/next-permutation"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.899755010593167*^9, 3.8997550245535345`*^9}},
 CellID->308194261,ExpressionUUID->"285b0746-736e-4362-b949-64e4e6e3ad6f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NextPermutation", "[", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "1"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.899755025666424*^9, 3.899755028554405*^9}},
 CellLabel->"In[1]:=",
 CellID->88352769,ExpressionUUID->"122ccb50-3417-481b-8546-7a1e48f4c702"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "1", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.8997550292452235`*^9},
 CellLabel->"Out[1]=",
 CellID->253919081,ExpressionUUID->"9bcd0715-9457-4751-80aa-5c5f90952418"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here are more examples.", "MathCaption",
 CellChangeTimes->{{3.8997550337618465`*^9, 3.8997550361477757`*^9}},
 CellID->402833805,ExpressionUUID->"6c38eee6-9cbf-41df-9e85-f935fc5d46b0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NextPermutation", "[", 
  RowBox[{"{", 
   RowBox[{"3", ",", "2", ",", "1"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997550307234592`*^9, 3.8997550393829036`*^9}},
 CellLabel->"In[2]:=",
 CellID->133361772,ExpressionUUID->"940404f2-6a35-49cb-be9d-cf520cbf5c93"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.899755039745571*^9},
 CellLabel->"Out[2]=",
 CellID->98606068,ExpressionUUID->"ec878f5a-66d9-4c91-bcf7-b793ea8ad617"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NextPermutation", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "4", ",", "5"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997550307234592`*^9, 3.89975504421239*^9}},
 CellLabel->"In[3]:=",
 CellID->282609746,ExpressionUUID->"b760a8c8-ab3d-4b00-a715-c5f5ce0831ec"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "5", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.899755044634418*^9},
 CellLabel->"Out[3]=",
 CellID->184445757,ExpressionUUID->"fcf9f912-c44a-4f17-8413-10330bf7571d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NextPermutation", "[", 
  RowBox[{"{", 
   RowBox[{"4", ",", "5", ",", "1", ",", "0"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8997550307234592`*^9, 3.899755049156501*^9}},
 CellLabel->"In[4]:=",
 CellID->170282164,ExpressionUUID->"aff54c59-2ca0-458b-88ce-9b6e84751ef0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "0", ",", "1", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.899755049462332*^9},
 CellLabel->"Out[4]=",
 CellID->586261813,ExpressionUUID->"1f3570d6-74e8-451d-82f0-6aab341b12a0"]
}, Open  ]]
}, Open  ]],

Cell["\<\
For some reason, although I have a function that can compute the next \
permutation, I have not solved this Wolfram Challenge.\
\>", "MathCaption",
 CellChangeTimes->{{3.8997550567826686`*^9, 3.899755093968486*^9}},
 CellID->406463550,ExpressionUUID->"983392d8-a470-4ce1-a01d-744ce01539a2"],

Cell[CellGroupData[{

Cell["Consider the permutation:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.761597237856369*^9, 3.7615972669041348`*^9}, {
   3.761597466489066*^9, 3.761597466737912*^9}, 3.761597945927305*^9},
 CellID->300631353,ExpressionUUID->"fa3ee762-4010-4f70-a5da-e4c51f47ea19"],

Cell[BoxData[
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "8", ",", "1", ",", "5", ",", "4", ",", "7", ",", "6", ",", "3",
      ",", "9"}], "}"}]}], ";"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.761597836814392*^9, 3.761597838883295*^9}, {
  3.761597939970468*^9, 3.761597940752081*^9}, {3.761598397650641*^9, 
  3.76159841461544*^9}},
 CellLabel->"In[470]:=",
 CellID->518707108,ExpressionUUID->"474ee3ba-3078-404c-8620-5fb66bc5872d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Its ascents are at the indices 1, 3, 5, 8, corresponding to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", " ", "<", " ", "8"}], TraditionalForm]],ExpressionUUID->
  "e901d30c-eb70-42da-8659-a34be258d816"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", " ", "<", " ", "5"}], TraditionalForm]],ExpressionUUID->
  "11643541-4023-4b43-8f17-dd16a3bc27cf"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"4", " ", "<", " ", "7"}], TraditionalForm]],ExpressionUUID->
  "11a44b06-f6b2-42c7-b468-8f7631819950"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"3", " ", "<", " ", "9"}], TraditionalForm]],ExpressionUUID->
  "33220a30-4b46-4984-8697-c8a80be4d6ca"],
 ":"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.761596905811739*^9, 3.7615969301073914`*^9}, {
  3.761596978745027*^9, 3.7615969823929443`*^9}, {3.7615972535310698`*^9, 
  3.7615972813025627`*^9}, {3.76159782481152*^9, 3.761597923536376*^9}, {
  3.76159795718322*^9, 3.761597969952014*^9}, {3.7615984414067717`*^9, 
  3.761598489780396*^9}, {3.761598838880413*^9, 3.761598880056288*^9}, {
  3.761602486184848*^9, 3.761602499869062*^9}, {3.7699499833780417`*^9, 
  3.7699499937268114`*^9}},
 CellID->8375492,ExpressionUUID->"966edb34-f681-4202-a3e1-0cb2e0fcbf11"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PermutationAscents", "@", "p"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.761596946331208*^9, 3.761597112255522*^9}, {
   3.7615971931967907`*^9, 3.761597234779436*^9}, {3.761597806219575*^9, 
   3.761597807585908*^9}, 3.761600539512171*^9, 3.898623350879883*^9},
 CellLabel->"In[471]:=",
 CellID->835168205,ExpressionUUID->"84bb73df-55cf-49ca-a278-e262073d4ece"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "5", ",", "8"}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.761597113531955*^9, 3.7615971946051407`*^9, {3.761597285270563*^9, 
   3.761597289870308*^9}, 3.761597809358973*^9, 3.761597981316104*^9, {
   3.76159828977899*^9, 3.761598319642272*^9}, 3.761598358688444*^9, 
   3.7615984257295923`*^9, 3.7616005510462008`*^9, 3.898623358291662*^9, 
   3.898623391408491*^9, 3.899755470638731*^9},
 CellLabel->"Out[471]=",
 CellID->111339732,ExpressionUUID->"de6c159c-d85f-4140-9274-5ffc29c68c90"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The descents follow easily:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.761602562327414*^9, 3.7616025694787903`*^9}, {
  3.761602652306975*^9, 3.761602657659069*^9}},
 CellID->258727906,ExpressionUUID->"c6d7e037-cab5-49bf-80f8-6646db5f54b7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reverse", "[", 
  RowBox[{
   RowBox[{"Length", "@", "p"}], "-", 
   RowBox[{"PermutationAscents", "@", 
    RowBox[{"Reverse", "@", "p"}]}]}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.761602594232671*^9, 3.761602630107443*^9}, 
   3.898623352750309*^9},
 CellLabel->"In[472]:=",
 CellID->97985540,ExpressionUUID->"774ae2e5-8308-4c11-b7ee-567390fd0309"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "4", ",", "6", ",", "7"}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.761602600390664*^9, 3.76160263111024*^9}, 
   3.89862335838877*^9, 3.8986233919853363`*^9, 3.8997554731217923`*^9},
 CellLabel->"Out[472]=",
 CellID->107056388,ExpressionUUID->"8052f7e7-5a9d-473f-8faf-e56dbce628f5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["There is also a function for this.", "MathCaption",
 CellChangeTimes->{{3.8997554748443956`*^9, 3.8997554807621813`*^9}},
 CellID->892397338,ExpressionUUID->"e7dde65d-96c7-4bd1-9306-143a76e87970"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PermutationDescents", "[", "p", "]"}]], "Input",
 CellChangeTimes->{{3.899755481435153*^9, 3.899755485613575*^9}, {
  3.8997555345756264`*^9, 3.899755534833783*^9}},
 CellLabel->"In[938]:=",
 CellID->70290140,ExpressionUUID->"7ef43d8a-cf6d-4180-9557-95d748050bd4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "4", ",", "6", ",", "7"}], "}"}]], "Output",
 CellChangeTimes->{3.8997555351846294`*^9},
 CellLabel->"Out[938]=",
 CellID->100322807,ExpressionUUID->"3e5260e7-e45b-479f-ba3c-b0dd48c455df"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["A triangular table of Gauss factorials up to 7::", "MathCaption",
 CellChangeTimes->{{3.898287633382123*^9, 3.8982876396171246`*^9}, {
  3.898287710712999*^9, 3.8982877200009975`*^9}},
 CellID->819912601,ExpressionUUID->"2774cbd7-e2cd-475c-a2ff-c42f337a407b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"GaussFactorial", "[", 
    RowBox[{"n", ",", "k"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "n"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.898287641041126*^9, 3.8982876458911333`*^9}, {
  3.8982877004174843`*^9, 3.898287739485997*^9}},
 CellLabel->"In[940]:=",
 CellID->375659687,ExpressionUUID->"a580d430-8c7e-4bee-bb08-48691070e310"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "3", ",", "8", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"120", ",", "15", ",", "40", ",", "15", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"720", ",", "15", ",", "40", ",", "15", ",", "144", ",", "5"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5040", ",", "105", ",", "280", ",", "105", ",", "1008", ",", "35", ",", 
     "720"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8982877397829976`*^9, 3.899755684540824*^9},
 CellLabel->"Out[940]=",
 CellID->223206235,ExpressionUUID->"5eb121a2-728f-48ce-bca6-6d65b77e2ce7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Make a grid with a frame:", "MathCaption",
 CellChangeTimes->{{3.8982877492739983`*^9, 3.898287753486998*^9}},
 CellID->652840542,ExpressionUUID->"67f36015-cab9-49d7-8a9a-b1d67d4fc33c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"GaussFactorial", "[", 
      RowBox[{"n", ",", "k"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "n"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.898287754085997*^9, 3.8982877577249966`*^9}},
 CellLabel->"In[939]:=",
 CellID->115721087,ExpressionUUID->"64679bb7-5f7a-4301-9eb6-cd64c2ba1f36"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "", "", "", "", "", ""},
    {"2", "1", "", "", "", "", ""},
    {"6", "3", "2", "", "", "", ""},
    {"24", "3", "8", "3", "", "", ""},
    {"120", "15", "40", "15", "24", "", ""},
    {"720", "15", "40", "15", "144", "5", ""},
    {"5040", "105", "280", "105", "1008", "35", "720"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.8982877579349985`*^9, 3.899755682601363*^9},
 CellLabel->"Out[939]=",
 CellID->424564025,ExpressionUUID->"09b37c92-316b-4a81-96b7-7a26f687da12"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Phitorial of 10:", "MathCaption",
 CellChangeTimes->{{3.898185095765943*^9, 3.8981850985319686`*^9}},
 CellID->395670977,ExpressionUUID->"bae6c84f-2d7d-41ab-ba2d-508606f23647"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Phitorial", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.8981823174928827`*^9, 3.8981823210471945`*^9}},
 CellLabel->"In[941]:=",
 CellID->566799357,ExpressionUUID->"199a56e4-2803-4ed5-860a-0dd6b49517e8"],

Cell[BoxData["189"], "Output",
 CellChangeTimes->{3.898182321406195*^9, 3.8997557207368183`*^9},
 CellLabel->"Out[941]=",
 CellID->63581800,ExpressionUUID->"2a950e42-3e2f-43f5-ba8d-ef4457b0fb93"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 ButtonBox["Project Euler Problem 754 Product of Gauss Factorials",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://projecteuler.net/problem=754"], None},
  ButtonNote->"https://projecteuler.net/problem=754"],
 " states, \"The Gauss Factorial of a number ",
 Cell[BoxData[
 "n"], "InlineFormula",ExpressionUUID->"f4e534ac-d1ae-4027-95e5-63bc8d0348aa"],
 " is defined as the product of all positive numbers ",
 Cell[BoxData[
  RowBox[{"<=", "n"}]], "InlineFormula",ExpressionUUID->
  "852a2b1c-53a0-4584-9e66-bdf2cd2acbd2"],
 "  that are relatively prime to ",
 Cell[BoxData[
 "n"], "InlineFormula",ExpressionUUID->"7bd96020-0319-4eb1-8418-193fe64e7e98"],
 ". For example, ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"g", 
    RowBox[{"(", "10", ")"}]}], "=", 
   RowBox[{
    RowBox[{"1", " ", "3", " ", "7", " ", "9"}], "=", "189"}]}]], 
  "InlineFormula",ExpressionUUID->"a494ee9c-461b-4ae1-a6f6-0fdc5177e4c1"],
 ". Also, we define ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"G", 
    RowBox[{"(", "n", ")"}]}], "=", 
   RowBox[{
    UnderoverscriptBox["\[Product]", 
     RowBox[{"i", "=", "1"}], "n"], 
    RowBox[{"g", 
     RowBox[{"(", "i", ")"}]}]}]}]], "InlineFormula",ExpressionUUID->
  "91952500-f854-455d-9520-e94d1888d498"],
 ". You are given ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"G", 
    RowBox[{"(", "10", ")"}]}], "=", "23044331520000"}]], "InlineFormula",
  ExpressionUUID->"3e47d0c9-5931-460b-a65c-13af53fbe83c"],
 ". Find ",
 Cell[BoxData[
  RowBox[{"G", 
   RowBox[{"(", 
    SuperscriptBox["10", "8"], ")"}]}]], "InlineFormula",ExpressionUUID->
  "ef723750-5f32-4243-8b17-1e57923920ce"],
 ". Give your answer modulo ",
 Cell[BoxData[
 "1000000007"], "InlineFormula",ExpressionUUID->
  "9d4efb4a-9bcb-4a85-8b5e-b23c66241f7d"],
 ".\""
}], "MathCaption",
 CellChangeTimes->{
  3.8981858511231184`*^9, {3.8981859052781706`*^9, 3.8981859134084463`*^9}},
 CellID->255766314,ExpressionUUID->"1fe240a9-5b23-4b1e-a390-d852ad00ff31"],

Cell[CellGroupData[{

Cell[TextData[{
 "Compute the products of the first 10 phitorials to verify the statement ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"G", 
    RowBox[{"(", "10", ")"}]}], "=", "23044331520000"}]], "InlineFormula",
  ExpressionUUID->"2cb1c4e6-5bf8-4fee-a12c-08ad6f88c0dd"],
 ":"
}], "MathCaption",
 CellChangeTimes->{{3.8981823481516457`*^9, 3.8981826497216463`*^9}, {
  3.8981857747223787`*^9, 3.898185774725379*^9}, {3.898185847991984*^9, 
  3.8981858756097927`*^9}},
 CellID->561182461,ExpressionUUID->"0118a4a9-7934-41fe-b92f-c895f5b8d830"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EchoTiming", "@", 
  RowBox[{"Product", "[", 
   RowBox[{
    RowBox[{"Phitorial", "[", "n", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8981823275966673`*^9, 3.8981823327943587`*^9}, {
  3.8981858807017317`*^9, 3.8981858834697604`*^9}},
 CellLabel->"In[127]:=",
 CellID->178093661,ExpressionUUID->"6077d205-9c8d-456f-bfe9-4acd387146ea"],

Cell[BoxData["0.0002024`"], "EchoTiming",
 CellChangeTimes->{3.8981858836947327`*^9},
 CellID->11277768,ExpressionUUID->"bfd9b283-ea58-4199-b164-caac6fbb7e04"],

Cell[BoxData["23044331520000"], "Output",
 CellChangeTimes->{3.898182333114361*^9, 3.898185884430244*^9},
 CellLabel->"Out[127]=",
 CellID->135146785,ExpressionUUID->"5a1c17d1-34c6-471b-966a-36f3ad6b5468"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compute the phitorial product up to ",
 Cell[BoxData[
  SuperscriptBox["10", "4"]], "InlineFormula",ExpressionUUID->
  "8d080cd5-5a65-4f78-97c6-b26116f339f5"],
 ":"
}], "MathCaption",
 CellChangeTimes->{{3.8981851638771286`*^9, 3.898185172710628*^9}, {
   3.898185264681044*^9, 3.8981852655001383`*^9}, {3.8981854925875683`*^9, 
   3.8981854925875683`*^9}, 3.898185815695145*^9},
 CellID->102959412,ExpressionUUID->"b77f4942-0472-4bd1-bbf0-45673326114e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EchoTiming", "[", 
  RowBox[{"Product", "[", 
   RowBox[{
    RowBox[{"Phitorial", "[", "n", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", 
      SuperscriptBox["10", "4"]}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8981851746411724`*^9, 3.8981851767278247`*^9}, {
   3.898185224134492*^9, 3.8981852458837285`*^9}, 3.8981854881131086`*^9},
 CellLabel->"In[124]:=",
 CellID->65194424,ExpressionUUID->"b5e30b71-7118-4283-b735-975af3fab272"],

Cell[BoxData["43.6647207`"], "EchoTiming",
 CellChangeTimes->{3.898185532497261*^9},
 CellID->593897543,ExpressionUUID->"04d3a7b4-5c68-4973-9fc9-89ab901b9978"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{
      "59164868729671610938246087809704188976914193685488458108710146404740892\
822379871539934845489808218821604928896809249436472645406000833488216177847592\
980464286442442444398876837616", 
       TemplateBox[{"101789813"}, "OutputSizeLimit`Skeleton"], 
       "0000000000000000000000000000000000000000000000000000000000000000000000\
000000000000000000000000000000000000000000000000000000000000000000000000000000\
00000000000000000000000000000000"}], Short[#, 8]& ], "line" -> 124, 
   "sessionID" -> 34156895453523762438, "byteCount" -> 42267528, "size" -> 8, 
   "stored" -> False, "expr" -> Missing["NotAvailable", "NewSessionID"], 
   "wrap" -> OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.8981852421794868`*^9, 3.898185482734152*^9, 
  3.898185569325807*^9},
 CellLabel->"Out[124]=",
 CellID->74761761,ExpressionUUID->"66673e3c-8e99-4e35-ad89-7fe586ea0b8a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compute the answer mod 1000000007:", "MathCaption",
 CellChangeTimes->{{3.8981858186942124`*^9, 3.8981858247879715`*^9}},
 CellID->298809539,ExpressionUUID->"2500e16b-1629-4f24-99ab-4dab84252966"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mod", "[", 
  RowBox[{"%", ",", "1000000007"}], "]"}]], "Input",
 CellChangeTimes->{{3.8981857050918465`*^9, 3.898185718490545*^9}},
 CellLabel->"In[125]:=",
 CellID->7216617,ExpressionUUID->"8479ae8b-48f6-4a92-8254-a8b36164b55d"],

Cell[BoxData["517055464"], "Output",
 CellChangeTimes->{3.8981857200855713`*^9},
 CellLabel->"Out[125]=",
 CellID->150133947,ExpressionUUID->"58a61d4e-ff75-416d-a570-7e6f0974ee8d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Product of primes up to 20:", "MathCaption",
 CellChangeTimes->{{3.898286862664509*^9, 3.8982868671685095`*^9}},
 CellID->6621231,ExpressionUUID->"26335350-a108-4783-8422-678698659dd3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Primorial", "[", "20", "]"}]], "Input",
 CellChangeTimes->{{3.898286869160511*^9, 3.8982868720735087`*^9}},
 CellLabel->"In[893]:=",
 CellID->238009890,ExpressionUUID->"2db016e7-4148-4419-a777-9e5cf01f790e"],

Cell[BoxData["9699690"], "Output",
 CellChangeTimes->{3.89828687246351*^9},
 CellLabel->"Out[893]=",
 CellID->441155702,ExpressionUUID->"fa668ad9-1420-4aa4-b0cf-986035da1473"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Product of primes up to 54:", "MathCaption",
 CellChangeTimes->{{3.8982868743455095`*^9, 3.89828687863951*^9}},
 CellID->784853736,ExpressionUUID->"3a4ddb47-a304-4d48-8652-2add7ddae5e8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Primorial", "[", "54", "]"}]], "Input",
 CellChangeTimes->{{3.898286869160511*^9, 3.898286881339834*^9}},
 CellLabel->"In[894]:=",
 CellID->610437364,ExpressionUUID->"d37a0415-210a-419b-a2a8-042b74428560"],

Cell[BoxData["32589158477190044730"], "Output",
 CellChangeTimes->{3.898286881785511*^9},
 CellLabel->"Out[894]=",
 CellID->38186909,ExpressionUUID->"b4d534d2-da2c-4b93-b459-09fbeea09b8c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compute the primorial ",
 Cell[BoxData[
  StyleBox[
   TagBox[
    RowBox[{"23", "#"}],
    "ForceRasterization"], "MarkedForRasterization"]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "200b5f78-a85a-4535-8f13-3ef498d80afc"],
 ":"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.838213237329423*^9, 3.8382132721147633`*^9}, 
   3.852826799559807*^9, {3.852827136061099*^9, 3.8528271360611362`*^9}, {
   3.85954974574284*^9, 3.8595497489212027`*^9}},
 CellID->393571408,ExpressionUUID->"f84f9109-bca2-43e8-8acd-44dbac060b83"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Primorial", "[", "23", "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.838213221919333*^9, 3.838213231771694*^9}, 
   3.899454504994316*^9},
 CellLabel->"In[125]:=",
 CellID->878786336,ExpressionUUID->"a3356743-013f-46d6-9293-d2ccff074834"],

Cell[BoxData["223092870"], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8382132471136208`*^9, 3.899454505747471*^9},
 CellLabel->"Out[125]=",
 CellID->369524703,ExpressionUUID->"4570f994-963f-4e2a-b5df-3404c8684e10"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compute a list of the first 15 primorials:", "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.838213205491308*^9, 3.8382132135686007`*^9}, {
  3.8382132894174967`*^9, 3.838213290610783*^9}},
 CellID->394823239,ExpressionUUID->"a8228163-51e6-4538-9b66-7deb4e788237"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Primorial", "[", 
  RowBox[{"Range", "[", "15", "]"}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{3.8994545102426972`*^9},
 CellLabel->"In[126]:=",
 CellID->627889596,ExpressionUUID->"c0e2cf3e-2996-4c08-8303-b2b2ac96cd91"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "6", ",", "6", ",", "30", ",", "30", ",", "210", ",", 
   "210", ",", "210", ",", "210", ",", "2310", ",", "2310", ",", "30030", ",",
    "30030", ",", "30030"}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.899454510931697*^9},
 CellLabel->"Out[126]=",
 CellID->95453950,ExpressionUUID->"dc25f2b0-1b14-4b02-8e58-12873aee22cf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compare with the definition:", "MathCaption",
 TaggingRules->{},
 CellID->731096908,ExpressionUUID->"07c30258-3992-4758-b9f9-755a32f6be13"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"k", "=", "7"}], "}"}], ",", 
   RowBox[{
    RowBox[{"Product", "[", 
     RowBox[{
      RowBox[{"Prime", "[", "j", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", 
        RowBox[{"PrimePi", "[", "k", "]"}]}], "}"}]}], "]"}], "\[Equal]", 
    RowBox[{"Primorial", "[", "k", "]"}]}]}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.899454545881302*^9, 3.8994545491140113`*^9}},
 CellLabel->"In[128]:=",
 CellID->219626058,ExpressionUUID->"738a39b4-c6db-465a-ab32-cd9bb8f8d640"],

Cell[BoxData["True"], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8994545497240176`*^9},
 CellLabel->"Out[128]=",
 CellID->169546956,ExpressionUUID->"cfe48211-a74c-47a0-99e7-0a1e8fff14e6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The resource function ",
 Cell[BoxData[
  ButtonBox["ChebyshevTheta",
   BaseStyle->"Hyperlink",
   ButtonData->{
     URL["https://resources.wolframcloud.com/FunctionRepository/resources/\
ChebyshevTheta/"], None},
   ButtonNote->
    "https://resources.wolframcloud.com/FunctionRepository/resources/\
ChebyshevTheta/"]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "d86b3ad5-8bc6-4891-98b6-a951caccfcca"],
 " is the logarithm of the primorial:"
}], "MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.859549840016568*^9, 3.85954984001661*^9}},
 CellID->575191782,ExpressionUUID->"98ac40b6-947f-44d6-b1bd-f29d6c6bd6db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"k", "=", "7"}], "}"}], ",", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"ResourceFunction", "[", "\"\<ChebyshevTheta\>\"", "]"}], "[", 
      "k", "]"}], "]"}], "\[Equal]", 
    RowBox[{"Primorial", "[", "k", "]"}]}]}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.899454623634669*^9, 3.899454625862824*^9}},
 CellLabel->"In[129]:=",
 CellID->154121207,ExpressionUUID->"8bb9e85a-f097-4c61-bb44-dc88e0ed0c71"],

Cell[BoxData["True"], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8994546268223934`*^9},
 CellLabel->"Out[129]=",
 CellID->179973804,ExpressionUUID->"318e1e0b-991e-4e7b-ae2d-50cbfb59b869"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Evaluate the ",
 ButtonBox["infinite primorial",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://doi.org/10.1007/s00220-007-0350-z"], None},
  ButtonNote->"https://doi.org/10.1007/s00220-007-0350-z"],
 ":"
}], "MathCaption",
 TaggingRules->{},
 CellID->812166021,ExpressionUUID->"e42727f2-2cc2-4a23-9189-f68201f4442d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Product", "[", 
  RowBox[{
   RowBox[{"Prime", "[", "k", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"Regularization", "\[Rule]", "\"\<Dirichlet\>\""}]}], 
  "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellLabel->"In[130]:=",
 CellID->624985202,ExpressionUUID->"e4ed1924-3b13-4215-ae91-838cb7a991c6"],

Cell[BoxData[
 RowBox[{"4", " ", 
  SuperscriptBox["\[Pi]", "2"]}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.899454725862358*^9},
 CellLabel->"Out[130]=",
 CellID->51179190,ExpressionUUID->"7a1bd75a-5827-42d9-a42e-db9b6aad8279"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Primorial", "[", "\[Infinity]", "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{3.8994547227226877`*^9},
 CellLabel->"In[131]:=",
 CellID->368150137,ExpressionUUID->"e6a896c9-3191-4e97-9ee6-730796798367"],

Cell[BoxData[
 RowBox[{"4", " ", 
  SuperscriptBox["\[Pi]", "2"]}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.89945472690936*^9},
 CellLabel->"Out[131]=",
 CellID->288813044,ExpressionUUID->"078f5227-22f3-49ed-9df8-8b6a8583695d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compare the growth rate of the primorial versus factorial:", \
"MathCaption",
 TaggingRules->{},
 CellChangeTimes->{{3.837685686619939*^9, 3.837685697646296*^9}, {
  3.859549849581889*^9, 3.8595498543322144`*^9}},
 CellID->230671479,ExpressionUUID->"99224a63-e631-4295-a3b4-3fa8d1994ca4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"DiscretePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Primorial", "[", "n", "]"}], ",", 
      RowBox[{"Factorial", "[", "n", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "50"}], "}"}], ",", 
    RowBox[{"ScalingFunctions", "\[Rule]", "\"\<Log\>\""}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<n#\>\"", ",", "\"\<n!\>\""}], "}"}]}]}], "]"}], 
  "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.8376857012163343`*^9, 3.837685761905402*^9}, 
   3.899454732174096*^9, {3.8997991355708747`*^9, 3.8997991379575896`*^9}},
 CellLabel->"In[20]:=",
 CellID->968332860,ExpressionUUID->"b0b0727e-0590-44ce-a853-efb6fab8c017"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAAAAAAAAAEDz/D8xbDE0=
    "], {{0, 145.2}, {288., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{288., 145.2},
  PlotRange->{{0, 288.}, {0, 145.2}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.837685717431341*^9, 3.8376857624300327`*^9}, 
   3.899454733868168*^9, 3.8997991388465767`*^9},
 CellLabel->"Out[20]=",
 CellID->548382202,ExpressionUUID->"a2b0f752-c157-44e6-b8fc-af6e436da103"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Plot the differences between the factorial and the primorial up to ",
 Cell[BoxData[
  StyleBox["n", "TI"]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "4e44e4be-104f-4c7f-afa9-38a5ae1681d1"],
 ":"
}], "MathCaption",
 TaggingRules->{},
 CellID->201723607,ExpressionUUID->"3aa6847c-0b71-4fb1-a005-176338242700"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Differences", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Log", "[", 
       FractionBox[
        RowBox[{"n", "!"}], 
        RowBox[{"Primorial", "[", "n", "]"}]], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", "100", ",", "1"}], "}"}]}], "]"}], "]"}], 
   ",", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       RowBox[{
         DynamicBox[
          FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]], 
         "\[Rule]", 
         DynamicBox[
          FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]]}], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["Rule", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["56", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    Filling -> Axis,
    SelectWithContents->True,
    Selectable->False]}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.899454746792905*^9, 3.899454757563745*^9}},
 CellLabel->"In[134]:=",
 CellID->746283470,ExpressionUUID->"1c8e0fb5-e49b-418b-8269-c7fc38ba780c"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[GraphicsComplexBox[CompressedData["
1:eJztlYtPU2cYhytMUSuXOdeJ9YZMp1jZKCIisP5aoHItvVJkuOASohEMKmUY
ccuRGJ0xJoLExGu8BRQEo4kKVi5jKXMuM0G0LovLtkAMaowkIBRF2Izvm6Vf
4n/Qk5yc/N7nPO93Tk6+84Z9U2Iu9JPJZD//d769vjsGNDLvA95xKl7EvRrX
RQ7TfSECnwW/hRGv5A1jxGcLfC5KG+I1V89y34WQ+zfufHp4EuVFUNiuOa8U
+VH+VPCX4LtTPbcU//hTfanAI1DnfKi4M3cy1VVYkJoVp6jnHEnPP4XyF4If
hb1VRWsqFgRQXS3waFT1llboRpivxJWmkprIr6ZSjsFtV2K54ybnVYIfi1FV
9a664mlUX43og89HtB2c4/DbnIGnNSHTKa/BoT3+zX+t5xyP8PQj7rwLnBOE
/ok47paP1sbIqf6lwDUout3c1tPCHOhufjD0u4eyBAwHtuwei5lBXAvXYLAl
bxtlSUvfl7nOu7+kwwXtT66u0ECqJ8Ed+MOmUQNlKQmB29XxPZXMkwU/GSsS
I63tj5mnCDwFSdaxVZP1QVTX4/wv576VOyhLehTrDrUGnWG+VvDXosxpTFjt
YZ4Ke566afuiYPJTcVl56ca9DMqyNEzITBMFDuZpSLvYVL/4BPN0oX86ZnzU
Wb71CfMMDI7fXFcZQPtEyoCxOOLXl6G8bzKx7ljjmY9VzDORpe9y9SUyzxL6
Z+GAuvDR8QLmBoEb8OzRZ3s+r2SeDeXs3v6qau6fTfuPuRFly2oOV1+lDCNq
w9P/WNnJ9xu9+3cYEXfXebrrb/ZNcM6pOdnygn0TwrQb95eNs28SfBM09qF8
g/JDqpu9OcyY1zDmzo8lLpmRH3D2mDKFcocZM/s7OhvM7FuQoM7cF1RAGRYs
M4TPStnCvkVY34JkacebqH3sW+n/w74VhSdr/SpOs28VfCvuFw5PW9rCvg3T
z3m+1rvYt0Hf+mQzutm34Z6m+oNP/uTnt6Fg2/rXd/rZzxHePwchqijl3Qn2
c9CWv/jH+fKZ5OfAsamuLVtBWWbHVvdg54YwyrDjaHtduU1FWbKj99YbaXks
+3Z4zgd836dlP1dYPxebHZ7rk+zs52L5PEXoxg3s59L/+f/s5fvmh29++OaH
b3745gf5vvnxvvnxL9XJezc=
       "], {{{}, 
         {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
          None], GraphicsGroupBox[{
            PolygonBox[{{2, 4, 3}, {4, 6, 5}, {16, 18, 17}, {28, 30, 29}, {10,
              12, 11}, {70, 72, 71}, {40, 42, 41}, {58, 60, 59}}], 
            PolygonBox[{{12, 16, 15, 14, 13}, {66, 70, 69, 68, 67}, {18, 22, 
             21, 20, 19}, {6, 10, 9, 8, 7}, {96, 100, 99, 98, 97}, {36, 40, 
             39, 38, 37}, {42, 46, 45, 44, 43}, {78, 82, 81, 80, 79}}], 
            PolygonBox[{{60, 66, 65, 64, 63, 62, 61}, {22, 28, 27, 26, 25, 24,
              23}, {46, 52, 51, 50, 49, 48, 47}, {82, 88, 87, 86, 85, 84, 
             83}, {72, 78, 77, 76, 75, 74, 73}, {52, 58, 57, 56, 55, 54, 
             53}, {30, 36, 35, 34, 33, 32, 31}}], 
            PolygonBox[{{88, 96, 95, 94, 93, 92, 91, 90, 
             89}}]}]}, {}, {}}, {{}, {}, 
         TagBox[
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[2], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
             18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
            34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
            50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 
            66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 
            82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 
            98, 99}]},
          Annotation[#, "Charting`Private`Tag#1"]& ]}}],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", 
        GraphicsComplex[CompressedData["
1:eJztlYtPU2cYhytMUSuXOdeJ9YZMp1jZKCIisP5aoHItvVJkuOASohEMKmUY
ccuRGJ0xJoLExGu8BRQEo4kKVi5jKXMuM0G0LovLtkAMaowkIBRF2Izvm6Vf
4n/Qk5yc/N7nPO93Tk6+84Z9U2Iu9JPJZD//d769vjsGNDLvA95xKl7EvRrX
RQ7TfSECnwW/hRGv5A1jxGcLfC5KG+I1V89y34WQ+zfufHp4EuVFUNiuOa8U
+VH+VPCX4LtTPbcU//hTfanAI1DnfKi4M3cy1VVYkJoVp6jnHEnPP4XyF4If
hb1VRWsqFgRQXS3waFT1llboRpivxJWmkprIr6ZSjsFtV2K54ybnVYIfi1FV
9a664mlUX43og89HtB2c4/DbnIGnNSHTKa/BoT3+zX+t5xyP8PQj7rwLnBOE
/ok47paP1sbIqf6lwDUout3c1tPCHOhufjD0u4eyBAwHtuwei5lBXAvXYLAl
bxtlSUvfl7nOu7+kwwXtT66u0ECqJ8Ed+MOmUQNlKQmB29XxPZXMkwU/GSsS
I63tj5mnCDwFSdaxVZP1QVTX4/wv576VOyhLehTrDrUGnWG+VvDXosxpTFjt
YZ4Ke566afuiYPJTcVl56ca9DMqyNEzITBMFDuZpSLvYVL/4BPN0oX86ZnzU
Wb71CfMMDI7fXFcZQPtEyoCxOOLXl6G8bzKx7ljjmY9VzDORpe9y9SUyzxL6
Z+GAuvDR8QLmBoEb8OzRZ3s+r2SeDeXs3v6qau6fTfuPuRFly2oOV1+lDCNq
w9P/WNnJ9xu9+3cYEXfXebrrb/ZNcM6pOdnygn0TwrQb95eNs28SfBM09qF8
g/JDqpu9OcyY1zDmzo8lLpmRH3D2mDKFcocZM/s7OhvM7FuQoM7cF1RAGRYs
M4TPStnCvkVY34JkacebqH3sW+n/w74VhSdr/SpOs28VfCvuFw5PW9rCvg3T
z3m+1rvYt0Hf+mQzutm34Z6m+oNP/uTnt6Fg2/rXd/rZzxHePwchqijl3Qn2
c9CWv/jH+fKZ5OfAsamuLVtBWWbHVvdg54YwyrDjaHtduU1FWbKj99YbaXks
+3Z4zgd836dlP1dYPxebHZ7rk+zs52L5PEXoxg3s59L/+f/s5fvmh29++OaH
b3745gf5vvnxvvnxL9XJezc=
         "], {{{}, {
            EdgeForm[], 
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             Opacity[0.2]], 
            GraphicsGroup[{
              
              Polygon[{{2, 4, 3}, {4, 6, 5}, {16, 18, 17}, {28, 30, 29}, {10, 
               12, 11}, {70, 72, 71}, {40, 42, 41}, {58, 60, 59}}], 
              
              Polygon[{{12, 16, 15, 14, 13}, {66, 70, 69, 68, 67}, {18, 22, 
               21, 20, 19}, {6, 10, 9, 8, 7}, {96, 100, 99, 98, 97}, {36, 40, 
               39, 38, 37}, {42, 46, 45, 44, 43}, {78, 82, 81, 80, 79}}], 
              
              Polygon[{{60, 66, 65, 64, 63, 62, 61}, {22, 28, 27, 26, 25, 24, 
               23}, {46, 52, 51, 50, 49, 48, 47}, {82, 88, 87, 86, 85, 84, 
               83}, {72, 78, 77, 76, 75, 74, 73}, {52, 58, 57, 56, 55, 54, 
               53}, {30, 36, 35, 34, 33, 32, 31}}], 
              
              Polygon[{{88, 96, 95, 94, 93, 92, 91, 90, 
               89}}]}]}, {}, {}}, {{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[1, 60]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             
             Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
              18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
              34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
              50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 
              66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 
              82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 
              98, 99}]}, "Charting`Private`Tag#1"]}}], <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0., 99.}, {0, 4.605170185988092}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0., 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              PointSize[
               Rational[1, 60]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {{{}, {
               EdgeForm[], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                Opacity[0.2]], 
               GraphicsGroup[{{
                  Polygon[{{2., 0.}, {4., 0.}, {3., 1.3862943611198906`}}], 
                  Polygon[{{4., 0.}, {6., 0.}, {5., 1.791759469228055}}], 
                  Polygon[{{16., 0.}, {18., 0.}, {17., 2.8903717578961645`}}], 
                  Polygon[{{28., 0.}, {30., 0.}, {29., 3.4011973816621555`}}], 
                  Polygon[{{10., 0.}, {12., 0.}, {11., 2.4849066497880004`}}], 
                  Polygon[{{70., 0.}, {72., 0.}, {71., 4.276666119016055}}], 
                  Polygon[{{40., 0.}, {42., 0.}, {41., 3.7376696182833684`}}], 
                  Polygon[{{58., 0.}, {60., 0.}, {59., 4.0943445622221}}]}, {
                  
                  Polygon[{{12., 0.}, {16., 0.}, {15., 2.772588722239781}, {
                   14., 2.70805020110221}, {13., 2.6390573296152584`}}], 
                  
                  Polygon[{{66., 0.}, {70., 0.}, {69., 4.248495242049359}, {
                   68., 4.23410650459726}, {67., 4.219507705176107}}], 
                  
                  Polygon[{{18., 0.}, {22., 0.}, {21., 3.091042453358316}, {
                   20., 3.044522437723423}, {19., 2.995732273553991}}], 
                  
                  Polygon[{{6., 0.}, {10., 0.}, {9., 2.302585092994046}, {8., 
                   2.1972245773362196`}, {7., 2.0794415416798357`}}], 
                  
                  Polygon[{{96., 0.}, {99., 0.}, {99., 4.605170185988092}, {
                   98., 4.59511985013459}, {97., 4.584967478670572}}], 
                  
                  Polygon[{{36., 0.}, {40., 0.}, {39., 3.6888794541139363`}, {
                   38., 3.6635616461296463`}, {37., 3.6375861597263857`}}], 
                  
                  Polygon[{{42., 0.}, {46., 0.}, {45., 3.828641396489095}, {
                   44., 3.8066624897703196`}, {43., 3.784189633918261}}], 
                  
                  Polygon[{{78., 0.}, {82., 0.}, {81., 4.406719247264253}, {
                   80., 4.394449154672439}, {79., 4.382026634673881}}]}, {
                  
                  Polygon[{{60., 0.}, {66., 0.}, {65., 4.189654742026425}, {
                   64., 4.174387269895637}, {63., 4.1588830833596715`}, {62., 
                   4.143134726391533}, {61., 4.127134385045092}}], 
                  
                  Polygon[{{22., 0.}, {28., 0.}, {27., 3.332204510175204}, {
                   26., 3.295836866004329}, {25., 3.258096538021482}, {24., 
                   3.2188758248682006`}, {23., 3.1780538303479458`}}], 
                  
                  Polygon[{{46., 0.}, {52., 0.}, {51., 3.9512437185814275`}, {
                   50., 3.9318256327243257`}, {49., 3.912023005428146}, {48., 
                   3.8918202981106265`}, {47., 3.871201010907891}}], 
                  
                  Polygon[{{82., 0.}, {88., 0.}, {87., 4.477336814478207}, {
                   86., 4.465908118654584}, {85., 4.454347296253507}, {84., 
                   4.442651256490317}, {83., 4.430816798843313}}], 
                  
                  Polygon[{{72., 0.}, {78., 0.}, {77., 4.356708826689592}, {
                   76., 4.343805421853684}, {75., 4.330733340286331}, {74., 
                   4.31748811353631}, {73., 4.30406509320417}}], 
                  
                  Polygon[{{52., 0.}, {58., 0.}, {57., 4.060443010546419}, {
                   56., 4.04305126783455}, {55., 4.02535169073515}, {54., 
                   4.007333185232471}, {53., 3.9889840465642745`}}], 
                  
                  Polygon[{{30., 0.}, {36., 0.}, {35., 3.58351893845611}, {
                   34., 3.5553480614894135`}, {33., 3.5263605246161616`}, {
                   32., 3.4965075614664802`}, {31., 3.4657359027997265`}}]}, {
                  
                  Polygon[{{88., 0.}, {96., 0.}, {95., 4.564348191467836}, {
                   94., 4.553876891600541}, {93., 4.543294782270004}, {92., 
                   4.532599493153256}, {91., 4.5217885770490405`}, {90., 
                   4.51085950651685}, {89., 
                   4.499809670330265}}]}}]}, {}, {}}, {{}, {}, 
              Annotation[{
                Hue[0.67, 0.6, 0.6], 
                Directive[
                 PointSize[
                  Rational[1, 60]], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[2]], 
                Line[CompressedData["
1:eJxdlH1MzHEcx08hnJJw5DwljznRkaRy77vq9HjdY5fEwhpT5umSCftp5mFm
U5rN4zytkLJsKEeSXfMwNuKYMSyzMGOLXKQwn88f9/1tt9vr8/q9Pr/f7fb7
hSxbY87zkclky/9+/n3/P75qZN4HvLEfvkT/7NaFd9B5gYIfCp9xYT/lVV3k
Rwh+FDZUxWguneK94yD3rd788UAv4vFQ2C47a/N9iCcI/SRsPd5yXfHWl+ZT
BB+GSuczxb1RfWiuwtik9GjFeeZwuv++xDOFPgI7S/PnFY/1o7la8LNQ2rqh
WPeD/WzU1qwpD1/UjzgSd1xxRY5rzHOEPgqdqrItlQX9aT4Xs/Z9/qFtZI7G
g5FfP5YHDiCeh/07fOteL2aOQWjKQXf2WeZYYX8cjrjlnRWRcprPF7wG+Xfq
Glrq2QOP6p5+e+4hloAO//rtXZEDyWvhah9kyV5HLGnp/2Wv894v6XBWe9vV
HOxP83i4/Xev7DQQS/HwX6+OaSlhnyD0CZgeF269+Z59ouATEW/tmtNHH0Bz
Pc7cPb1R7iCW9CjQ7b8RcJL9AqFfgEKnMXauh30S7NnqmvXjB1GfhIvKC1cf
pxLLktEjM/XkOtgnI/lczfmJR9mnCPtTMHBIU9HaD+xT0d59bWGJHz0nUiqM
BWH3vwfzc5OGhYerTw5TsU9Dur7Z9S6OfbqwPx171Xkvj+SyNwjegE8vJ++Y
UcI+A8oRrW2lZbw/g54/9kYUTi0/UHaJGEZUhKa8mN3E5xu99zcaEf3QeaL5
DfcmOEeWH6v/wr0JIdoVewq7uTcJvQka+7ccg3Iwzc3eHmaMrupy50SRl8zI
8Tt1WJlI3GhGUFtjU5WZewti1Wm7AnKJYcFUQ+jQxNXcW4TrW5AgbfodsYt7
K71/uLci71iFT/EJ7q1Cb8WTvI7+U+q5t2HAac8SvYt7G/Q3PqzCI+5teKwp
6z38Fd+/DbnrFv+618Z9pvD7MxGoilA+7OE+Ew05E2+NkQdRnwnHysqGDAWx
zI617vampSHEsOPQzcoim4pYsqP1+m9pWhT3dnjO+G17p+U+S7h+FlY5PFd6
2bnPwrTRiuAVS7nPovdzEP4AqJo9xg==
                 "]]}, "Charting`Private`Tag#1"]}}, "GCFlag" -> True|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0., 99.}, {0, 4.605170185988092}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0., 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
          "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             PointSize[
              Rational[1, 60]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {{{}, {
              EdgeForm[], 
              Directive[
               RGBColor[0.368417, 0.506779, 0.709798], 
               Opacity[0.2]], 
              GraphicsGroup[{{
                 Polygon[{{2., 0.}, {4., 0.}, {3., 1.3862943611198906`}}], 
                 Polygon[{{4., 0.}, {6., 0.}, {5., 1.791759469228055}}], 
                 Polygon[{{16., 0.}, {18., 0.}, {17., 2.8903717578961645`}}], 
                 Polygon[{{28., 0.}, {30., 0.}, {29., 3.4011973816621555`}}], 
                 Polygon[{{10., 0.}, {12., 0.}, {11., 2.4849066497880004`}}], 
                 Polygon[{{70., 0.}, {72., 0.}, {71., 4.276666119016055}}], 
                 Polygon[{{40., 0.}, {42., 0.}, {41., 3.7376696182833684`}}], 
                 Polygon[{{58., 0.}, {60., 0.}, {59., 4.0943445622221}}]}, {
                 
                 Polygon[{{12., 0.}, {16., 0.}, {15., 2.772588722239781}, {
                  14., 2.70805020110221}, {13., 2.6390573296152584`}}], 
                 
                 Polygon[{{66., 0.}, {70., 0.}, {69., 4.248495242049359}, {
                  68., 4.23410650459726}, {67., 4.219507705176107}}], 
                 
                 Polygon[{{18., 0.}, {22., 0.}, {21., 3.091042453358316}, {
                  20., 3.044522437723423}, {19., 2.995732273553991}}], 
                 
                 Polygon[{{6., 0.}, {10., 0.}, {9., 2.302585092994046}, {8., 
                  2.1972245773362196`}, {7., 2.0794415416798357`}}], 
                 
                 Polygon[{{96., 0.}, {99., 0.}, {99., 4.605170185988092}, {
                  98., 4.59511985013459}, {97., 4.584967478670572}}], 
                 
                 Polygon[{{36., 0.}, {40., 0.}, {39., 3.6888794541139363`}, {
                  38., 3.6635616461296463`}, {37., 3.6375861597263857`}}], 
                 
                 Polygon[{{42., 0.}, {46., 0.}, {45., 3.828641396489095}, {
                  44., 3.8066624897703196`}, {43., 3.784189633918261}}], 
                 
                 Polygon[{{78., 0.}, {82., 0.}, {81., 4.406719247264253}, {
                  80., 4.394449154672439}, {79., 4.382026634673881}}]}, {
                 
                 Polygon[{{60., 0.}, {66., 0.}, {65., 4.189654742026425}, {
                  64., 4.174387269895637}, {63., 4.1588830833596715`}, {62., 
                  4.143134726391533}, {61., 4.127134385045092}}], 
                 
                 Polygon[{{22., 0.}, {28., 0.}, {27., 3.332204510175204}, {
                  26., 3.295836866004329}, {25., 3.258096538021482}, {24., 
                  3.2188758248682006`}, {23., 3.1780538303479458`}}], 
                 
                 Polygon[{{46., 0.}, {52., 0.}, {51., 3.9512437185814275`}, {
                  50., 3.9318256327243257`}, {49., 3.912023005428146}, {48., 
                  3.8918202981106265`}, {47., 3.871201010907891}}], 
                 
                 Polygon[{{82., 0.}, {88., 0.}, {87., 4.477336814478207}, {
                  86., 4.465908118654584}, {85., 4.454347296253507}, {84., 
                  4.442651256490317}, {83., 4.430816798843313}}], 
                 
                 Polygon[{{72., 0.}, {78., 0.}, {77., 4.356708826689592}, {
                  76., 4.343805421853684}, {75., 4.330733340286331}, {74., 
                  4.31748811353631}, {73., 4.30406509320417}}], 
                 
                 Polygon[{{52., 0.}, {58., 0.}, {57., 4.060443010546419}, {
                  56., 4.04305126783455}, {55., 4.02535169073515}, {54., 
                  4.007333185232471}, {53., 3.9889840465642745`}}], 
                 
                 Polygon[{{30., 0.}, {36., 0.}, {35., 3.58351893845611}, {34.,
                   3.5553480614894135`}, {33., 3.5263605246161616`}, {32., 
                  3.4965075614664802`}, {31., 3.4657359027997265`}}]}, {
                 
                 Polygon[{{88., 0.}, {96., 0.}, {95., 4.564348191467836}, {
                  94., 4.553876891600541}, {93., 4.543294782270004}, {92., 
                  4.532599493153256}, {91., 4.5217885770490405`}, {90., 
                  4.51085950651685}, {89., 
                  4.499809670330265}}]}}]}, {}, {}}, {{}, {}, 
             Annotation[{
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[1, 60]], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]], 
               Line[CompressedData["
1:eJxdlH1MzHEcx08hnJJw5DwljznRkaRy77vq9HjdY5fEwhpT5umSCftp5mFm
U5rN4zytkLJsKEeSXfMwNuKYMSyzMGOLXKQwn88f9/1tt9vr8/q9Pr/f7fb7
hSxbY87zkclky/9+/n3/P75qZN4HvLEfvkT/7NaFd9B5gYIfCp9xYT/lVV3k
Rwh+FDZUxWguneK94yD3rd788UAv4vFQ2C47a/N9iCcI/SRsPd5yXfHWl+ZT
BB+GSuczxb1RfWiuwtik9GjFeeZwuv++xDOFPgI7S/PnFY/1o7la8LNQ2rqh
WPeD/WzU1qwpD1/UjzgSd1xxRY5rzHOEPgqdqrItlQX9aT4Xs/Z9/qFtZI7G
g5FfP5YHDiCeh/07fOteL2aOQWjKQXf2WeZYYX8cjrjlnRWRcprPF7wG+Xfq
Glrq2QOP6p5+e+4hloAO//rtXZEDyWvhah9kyV5HLGnp/2Wv894v6XBWe9vV
HOxP83i4/Xev7DQQS/HwX6+OaSlhnyD0CZgeF269+Z59ouATEW/tmtNHH0Bz
Pc7cPb1R7iCW9CjQ7b8RcJL9AqFfgEKnMXauh30S7NnqmvXjB1GfhIvKC1cf
pxLLktEjM/XkOtgnI/lczfmJR9mnCPtTMHBIU9HaD+xT0d59bWGJHz0nUiqM
BWH3vwfzc5OGhYerTw5TsU9Dur7Z9S6OfbqwPx171Xkvj+SyNwjegE8vJ++Y
UcI+A8oRrW2lZbw/g54/9kYUTi0/UHaJGEZUhKa8mN3E5xu99zcaEf3QeaL5
DfcmOEeWH6v/wr0JIdoVewq7uTcJvQka+7ccg3Iwzc3eHmaMrupy50SRl8zI
8Tt1WJlI3GhGUFtjU5WZewti1Wm7AnKJYcFUQ+jQxNXcW4TrW5AgbfodsYt7
K71/uLci71iFT/EJ7q1Cb8WTvI7+U+q5t2HAac8SvYt7G/Q3PqzCI+5teKwp
6z38Fd+/DbnrFv+618Z9pvD7MxGoilA+7OE+Ew05E2+NkQdRnwnHysqGDAWx
zI617vampSHEsOPQzcoim4pYsqP1+m9pWhT3dnjO+G17p+U+S7h+FlY5PFd6
2bnPwrTRiuAVS7nPovdzEP4AqJo9xg==
                "]]}, "Charting`Private`Tag#1"]}}, "GCFlag" -> True|>, 
        "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListLinePlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[
     GraphicsComplex[CompressedData["
1:eJztlYtPU2cYhytMUSuXOdeJ9YZMp1jZKCIisP5aoHItvVJkuOASohEMKmUY
ccuRGJ0xJoLExGu8BRQEo4kKVi5jKXMuM0G0LovLtkAMaowkIBRF2Izvm6Vf
4n/Qk5yc/N7nPO93Tk6+84Z9U2Iu9JPJZD//d769vjsGNDLvA95xKl7EvRrX
RQ7TfSECnwW/hRGv5A1jxGcLfC5KG+I1V89y34WQ+zfufHp4EuVFUNiuOa8U
+VH+VPCX4LtTPbcU//hTfanAI1DnfKi4M3cy1VVYkJoVp6jnHEnPP4XyF4If
hb1VRWsqFgRQXS3waFT1llboRpivxJWmkprIr6ZSjsFtV2K54ybnVYIfi1FV
9a664mlUX43og89HtB2c4/DbnIGnNSHTKa/BoT3+zX+t5xyP8PQj7rwLnBOE
/ok47paP1sbIqf6lwDUout3c1tPCHOhufjD0u4eyBAwHtuwei5lBXAvXYLAl
bxtlSUvfl7nOu7+kwwXtT66u0ECqJ8Ed+MOmUQNlKQmB29XxPZXMkwU/GSsS
I63tj5mnCDwFSdaxVZP1QVTX4/wv576VOyhLehTrDrUGnWG+VvDXosxpTFjt
YZ4Ke566afuiYPJTcVl56ca9DMqyNEzITBMFDuZpSLvYVL/4BPN0oX86ZnzU
Wb71CfMMDI7fXFcZQPtEyoCxOOLXl6G8bzKx7ljjmY9VzDORpe9y9SUyzxL6
Z+GAuvDR8QLmBoEb8OzRZ3s+r2SeDeXs3v6qau6fTfuPuRFly2oOV1+lDCNq
w9P/WNnJ9xu9+3cYEXfXebrrb/ZNcM6pOdnygn0TwrQb95eNs28SfBM09qF8
g/JDqpu9OcyY1zDmzo8lLpmRH3D2mDKFcocZM/s7OhvM7FuQoM7cF1RAGRYs
M4TPStnCvkVY34JkacebqH3sW+n/w74VhSdr/SpOs28VfCvuFw5PW9rCvg3T
z3m+1rvYt0Hf+mQzutm34Z6m+oNP/uTnt6Fg2/rXd/rZzxHePwchqijl3Qn2
c9CWv/jH+fKZ5OfAsamuLVtBWWbHVvdg54YwyrDjaHtduU1FWbKj99YbaXks
+3Z4zgd836dlP1dYPxebHZ7rk+zs52L5PEXoxg3s59L/+f/s5fvmh29++OaH
b3745gf5vvnxvvnxL9XJezc=
      "], {{{}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroup[{
           
           Polygon[{{2, 4, 3}, {4, 6, 5}, {16, 18, 17}, {28, 30, 29}, {10, 12,
             11}, {70, 72, 71}, {40, 42, 41}, {58, 60, 59}}], 
           
           Polygon[{{12, 16, 15, 14, 13}, {66, 70, 69, 68, 67}, {18, 22, 21, 
            20, 19}, {6, 10, 9, 8, 7}, {96, 100, 99, 98, 97}, {36, 40, 39, 38,
             37}, {42, 46, 45, 44, 43}, {78, 82, 81, 80, 79}}], 
           
           Polygon[{{60, 66, 65, 64, 63, 62, 61}, {22, 28, 27, 26, 25, 24, 
            23}, {46, 52, 51, 50, 49, 48, 47}, {82, 88, 87, 86, 85, 84, 83}, {
            72, 78, 77, 76, 75, 74, 73}, {52, 58, 57, 56, 55, 54, 53}, {30, 
            36, 35, 34, 33, 32, 31}}], 
           
           Polygon[{{88, 96, 95, 94, 93, 92, 91, 90, 
            89}}]}]}, {}, {}}, {{}, {}, 
        Annotation[{
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[1, 60]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]], 
          
          Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
            19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
           35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
            52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 
           68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
            85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99}]}, 
         "Charting`Private`Tag#1"]}}], <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0., 99.}, {0, 4.605170185988092}}, 
        "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0., 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[
            Rational[1, 60]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {{{}, {
            EdgeForm[], 
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             Opacity[0.2]], 
            GraphicsGroup[{{
               Polygon[{{2., 0.}, {4., 0.}, {3., 1.3862943611198906`}}], 
               Polygon[{{4., 0.}, {6., 0.}, {5., 1.791759469228055}}], 
               Polygon[{{16., 0.}, {18., 0.}, {17., 2.8903717578961645`}}], 
               Polygon[{{28., 0.}, {30., 0.}, {29., 3.4011973816621555`}}], 
               Polygon[{{10., 0.}, {12., 0.}, {11., 2.4849066497880004`}}], 
               Polygon[{{70., 0.}, {72., 0.}, {71., 4.276666119016055}}], 
               Polygon[{{40., 0.}, {42., 0.}, {41., 3.7376696182833684`}}], 
               Polygon[{{58., 0.}, {60., 0.}, {59., 4.0943445622221}}]}, {
               
               Polygon[{{12., 0.}, {16., 0.}, {15., 2.772588722239781}, {14., 
                2.70805020110221}, {13., 2.6390573296152584`}}], 
               
               Polygon[{{66., 0.}, {70., 0.}, {69., 4.248495242049359}, {68., 
                4.23410650459726}, {67., 4.219507705176107}}], 
               
               Polygon[{{18., 0.}, {22., 0.}, {21., 3.091042453358316}, {20., 
                3.044522437723423}, {19., 2.995732273553991}}], 
               
               Polygon[{{6., 0.}, {10., 0.}, {9., 2.302585092994046}, {8., 
                2.1972245773362196`}, {7., 2.0794415416798357`}}], 
               
               Polygon[{{96., 0.}, {99., 0.}, {99., 4.605170185988092}, {98., 
                4.59511985013459}, {97., 4.584967478670572}}], 
               
               Polygon[{{36., 0.}, {40., 0.}, {39., 3.6888794541139363`}, {
                38., 3.6635616461296463`}, {37., 3.6375861597263857`}}], 
               
               Polygon[{{42., 0.}, {46., 0.}, {45., 3.828641396489095}, {44., 
                3.8066624897703196`}, {43., 3.784189633918261}}], 
               
               Polygon[{{78., 0.}, {82., 0.}, {81., 4.406719247264253}, {80., 
                4.394449154672439}, {79., 4.382026634673881}}]}, {
               
               Polygon[{{60., 0.}, {66., 0.}, {65., 4.189654742026425}, {64., 
                4.174387269895637}, {63., 4.1588830833596715`}, {62., 
                4.143134726391533}, {61., 4.127134385045092}}], 
               
               Polygon[{{22., 0.}, {28., 0.}, {27., 3.332204510175204}, {26., 
                3.295836866004329}, {25., 3.258096538021482}, {24., 
                3.2188758248682006`}, {23., 3.1780538303479458`}}], 
               
               Polygon[{{46., 0.}, {52., 0.}, {51., 3.9512437185814275`}, {
                50., 3.9318256327243257`}, {49., 3.912023005428146}, {48., 
                3.8918202981106265`}, {47., 3.871201010907891}}], 
               
               Polygon[{{82., 0.}, {88., 0.}, {87., 4.477336814478207}, {86., 
                4.465908118654584}, {85., 4.454347296253507}, {84., 
                4.442651256490317}, {83., 4.430816798843313}}], 
               
               Polygon[{{72., 0.}, {78., 0.}, {77., 4.356708826689592}, {76., 
                4.343805421853684}, {75., 4.330733340286331}, {74., 
                4.31748811353631}, {73., 4.30406509320417}}], 
               
               Polygon[{{52., 0.}, {58., 0.}, {57., 4.060443010546419}, {56., 
                4.04305126783455}, {55., 4.02535169073515}, {54., 
                4.007333185232471}, {53., 3.9889840465642745`}}], 
               
               Polygon[{{30., 0.}, {36., 0.}, {35., 3.58351893845611}, {34., 
                3.5553480614894135`}, {33., 3.5263605246161616`}, {32., 
                3.4965075614664802`}, {31., 3.4657359027997265`}}]}, {
               
               Polygon[{{88., 0.}, {96., 0.}, {95., 4.564348191467836}, {94., 
                4.553876891600541}, {93., 4.543294782270004}, {92., 
                4.532599493153256}, {91., 4.5217885770490405`}, {90., 
                4.51085950651685}, {89., 
                4.499809670330265}}]}}]}, {}, {}}, {{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[1, 60]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1:eJxdlH1MzHEcx08hnJJw5DwljznRkaRy77vq9HjdY5fEwhpT5umSCftp5mFm
U5rN4zytkLJsKEeSXfMwNuKYMSyzMGOLXKQwn88f9/1tt9vr8/q9Pr/f7fb7
hSxbY87zkclky/9+/n3/P75qZN4HvLEfvkT/7NaFd9B5gYIfCp9xYT/lVV3k
Rwh+FDZUxWguneK94yD3rd788UAv4vFQ2C47a/N9iCcI/SRsPd5yXfHWl+ZT
BB+GSuczxb1RfWiuwtik9GjFeeZwuv++xDOFPgI7S/PnFY/1o7la8LNQ2rqh
WPeD/WzU1qwpD1/UjzgSd1xxRY5rzHOEPgqdqrItlQX9aT4Xs/Z9/qFtZI7G
g5FfP5YHDiCeh/07fOteL2aOQWjKQXf2WeZYYX8cjrjlnRWRcprPF7wG+Xfq
Glrq2QOP6p5+e+4hloAO//rtXZEDyWvhah9kyV5HLGnp/2Wv894v6XBWe9vV
HOxP83i4/Xev7DQQS/HwX6+OaSlhnyD0CZgeF269+Z59ouATEW/tmtNHH0Bz
Pc7cPb1R7iCW9CjQ7b8RcJL9AqFfgEKnMXauh30S7NnqmvXjB1GfhIvKC1cf
pxLLktEjM/XkOtgnI/lczfmJR9mnCPtTMHBIU9HaD+xT0d59bWGJHz0nUiqM
BWH3vwfzc5OGhYerTw5TsU9Dur7Z9S6OfbqwPx171Xkvj+SyNwjegE8vJ++Y
UcI+A8oRrW2lZbw/g54/9kYUTi0/UHaJGEZUhKa8mN3E5xu99zcaEf3QeaL5
DfcmOEeWH6v/wr0JIdoVewq7uTcJvQka+7ccg3Iwzc3eHmaMrupy50SRl8zI
8Tt1WJlI3GhGUFtjU5WZewti1Wm7AnKJYcFUQ+jQxNXcW4TrW5AgbfodsYt7
K71/uLci71iFT/EJ7q1Cb8WTvI7+U+q5t2HAac8SvYt7G/Q3PqzCI+5teKwp
6z38Fd+/DbnrFv+618Z9pvD7MxGoilA+7OE+Ew05E2+NkQdRnwnHysqGDAWx
zI617vampSHEsOPQzcoim4pYsqP1+m9pWhT3dnjO+G17p+U+S7h+FlY5PFd6
2bnPwrTRiuAVS7nPovdzEP4AqJo9xg==
              "]]}, "Charting`Private`Tag#1"]}}, "GCFlag" -> True|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListLinePlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 99.}, {0, 4.605170185988092}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.8994547479849467`*^9, 3.899454760946744*^9}},
 CellLabel->"Out[134]=",
 CellID->405154369,ExpressionUUID->"f56f37cd-1da9-4f8e-a63c-67ffb6e1b6fd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Now let's look at Lucas numbers.", "MathCaption",
 CellChangeTimes->{{3.899799290132839*^9, 3.8997992970413914`*^9}},
 CellID->142308320,ExpressionUUID->"9a19d7f3-7e1c-4df7-80dc-65e5c21dc5ad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "LucasNumberU1"}]], "Input",
 CellChangeTimes->{{3.899755852976594*^9, 3.899755855718154*^9}},
 CellLabel->"In[942]:=",
 CellID->317076608,ExpressionUUID->"d668f049-762e-40cf-b87f-eb3ab41fb0ca"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              
              ButtonData->
               "paclet:PeterBurbery/Combinatorics/ref/LucasNumberU1",
              
              ButtonNote->
               "paclet:PeterBurbery/Combinatorics/ref/LucasNumberU1"],
             "\"paclet:PeterBurbery/Combinatorics/ref/LucasNumberU1\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"LucasNumberU1[n, p, q] calculates the term of the \
Lucas sequence of the first kind U_n(p, q).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"LucasNumberU1", "[", 
                    
                    RowBox[{
                    "0", ",", "PeterBurbery`Combinatorics`Private`p_", ",", 
                    "PeterBurbery`Combinatorics`Private`q_"}], "]"}], ":=", 
                    "0"}]}, {" "}, {
                    RowBox[{
                    RowBox[{"LucasNumberU1", "[", 
                    
                    RowBox[{
                    "1", ",", "PeterBurbery`Combinatorics`Private`p_", ",", 
                    "PeterBurbery`Combinatorics`Private`q_"}], "]"}], ":=", 
                    "1"}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"LucasNumberU1", "[", 
                    
                    RowBox[{
                    "PeterBurbery`Combinatorics`Private`n_", ",", 
                    "PeterBurbery`Combinatorics`Private`p_", ",", 
                    "PeterBurbery`Combinatorics`Private`q_"}], "]"}], "/;", 
                    
                    RowBox[{
                    "PeterBurbery`Combinatorics`Private`n", ">", "1"}]}], 
                    ":=", 
                    RowBox[{
                    RowBox[{"LucasNumberU1", "[", 
                    
                    RowBox[{
                    "PeterBurbery`Combinatorics`Private`n", ",", 
                    "PeterBurbery`Combinatorics`Private`p", ",", 
                    "PeterBurbery`Combinatorics`Private`q"}], "]"}], "=", 
                    RowBox[{
                    RowBox[{"PeterBurbery`Combinatorics`Private`p", " ", 
                    RowBox[{"LucasNumberU1", "[", 
                    RowBox[{
                    
                    RowBox[{"PeterBurbery`Combinatorics`Private`n", "-", 
                    "1"}], ",", "PeterBurbery`Combinatorics`Private`p", ",", 
                    "PeterBurbery`Combinatorics`Private`q"}], "]"}]}], "-", 
                    RowBox[{"PeterBurbery`Combinatorics`Private`q", " ", 
                    RowBox[{"LucasNumberU1", "[", 
                    RowBox[{
                    
                    RowBox[{"PeterBurbery`Combinatorics`Private`n", "-", 
                    "2"}], ",", "PeterBurbery`Combinatorics`Private`p", ",", 
                    "PeterBurbery`Combinatorics`Private`q"}], 
                    "]"}]}]}]}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:PeterBurbery/Combinatorics/ref/LucasNumberU1", 
                    "paclet:PeterBurbery/Combinatorics/ref/LucasNumberU1", 
                    "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"Listable", ",", "NumericFunction"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], \
"\<\"PeterBurbery`Combinatorics`LucasNumberU1\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              
              ButtonData->
               "paclet:PeterBurbery/Combinatorics/ref/LucasNumberU1",
              
              ButtonNote->
               "paclet:PeterBurbery/Combinatorics/ref/LucasNumberU1"],
             "\"paclet:PeterBurbery/Combinatorics/ref/LucasNumberU1\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"LucasNumberU1[n, p, q] calculates the term of the \
Lucas sequence of the first kind U_n(p, q).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "LucasNumberU1[n, p, q] calculates the term of the Lucas sequence of the \
first kind U_n(p, q).", 
    "Documentation" -> <|
     "Local" -> "paclet:PeterBurbery/Combinatorics/ref/LucasNumberU1"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, PeterBurbery`Combinatorics`LucasNumberU1, {
      PeterBurbery`Combinatorics`LucasNumberU1[0, 
         Pattern[PeterBurbery`Combinatorics`Private`p, 
          Blank[]], 
         Pattern[PeterBurbery`Combinatorics`Private`q, 
          Blank[]]] :> 0, PeterBurbery`Combinatorics`LucasNumberU1[1, 
         Pattern[PeterBurbery`Combinatorics`Private`p, 
          Blank[]], 
         Pattern[PeterBurbery`Combinatorics`Private`q, 
          Blank[]]] :> 1, Condition[
         PeterBurbery`Combinatorics`LucasNumberU1[
          Pattern[PeterBurbery`Combinatorics`Private`n, 
           Blank[]], 
          Pattern[PeterBurbery`Combinatorics`Private`p, 
           Blank[]], 
          Pattern[PeterBurbery`Combinatorics`Private`q, 
           Blank[]]], PeterBurbery`Combinatorics`Private`n > 1] :> (
        PeterBurbery`Combinatorics`LucasNumberU1[
         PeterBurbery`Combinatorics`Private`n, 
          PeterBurbery`Combinatorics`Private`p, 
          PeterBurbery`Combinatorics`Private`q] = 
        PeterBurbery`Combinatorics`Private`p 
          PeterBurbery`Combinatorics`LucasNumberU1[
           PeterBurbery`Combinatorics`Private`n - 1, 
            PeterBurbery`Combinatorics`Private`p, 
            PeterBurbery`Combinatorics`Private`q] - 
         PeterBurbery`Combinatorics`Private`q 
         PeterBurbery`Combinatorics`LucasNumberU1[
          PeterBurbery`Combinatorics`Private`n - 2, 
           PeterBurbery`Combinatorics`Private`p, 
           PeterBurbery`Combinatorics`Private`q])}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Listable, NumericFunction}, 
    "FullName" -> "PeterBurbery`Combinatorics`LucasNumberU1"|>, 
   False]]], "Output",
 CellChangeTimes->{3.8997558561149435`*^9},
 CellLabel->"Out[942]=",
 CellID->38873197,ExpressionUUID->"eef0b21a-3fb8-4341-816c-ef2eaadca896"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["U", "n"], 
   RowBox[{"(", 
    RowBox[{"2", ",", 
     RowBox[{"-", "1"}]}], ")"}]}]], "InlineFormula",ExpressionUUID->
  "b97f3f22-b871-4087-9fc1-0db2639b8572"],
 " represents the Pell numbers:"
}], "MathCaption",
 CellChangeTimes->{{3.8983670800389123`*^9, 3.8983670947313766`*^9}},
 CellID->199205649,ExpressionUUID->"90a30cb6-b3c2-42f2-a503-344374519ebc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EchoTiming", "[", 
  RowBox[{"LucasNumberU1", "[", 
   RowBox[{
    RowBox[{"Range", "[", "21", "]"}], ",", "2", ",", 
    RowBox[{"-", "1"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8983672432194366`*^9, 3.8983672460506954`*^9}, 
   3.8983673772102027`*^9},
 CellLabel->"In[332]:=",
 CellID->444434879,ExpressionUUID->"2d26dfd2-b2dd-4bf7-bc7e-6d2ad88ee506"],

Cell[BoxData["0.0000281`"], "EchoTiming",
 CellChangeTimes->{3.8983673895559545`*^9},
 CellID->24383746,ExpressionUUID->"d7e11cfd-627e-4b91-8c59-a5d569e4f6f0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "5", ",", "12", ",", "29", ",", "70", ",", "169", ",", 
   "408", ",", "985", ",", "2378", ",", "5741", ",", "13860", ",", "33461", 
   ",", "80782", ",", "195025", ",", "470832", ",", "1136689", ",", "2744210",
    ",", "6625109", ",", "15994428", ",", "38613965"}], "}"}]], "Output",
 CellChangeTimes->{3.8983671006181746`*^9, 3.8983672470662675`*^9, 
  3.8983673903880253`*^9},
 CellLabel->"Out[332]=",
 CellID->280470809,ExpressionUUID->"23b9f526-5fc2-44b5-a995-f3ec55e8b3d9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["You can also do the Pell numbers with LinearRecurrence:", "MathCaption",
 CellChangeTimes->{{3.898969895073705*^9, 3.898969932391634*^9}, 
   3.899755842603794*^9},
 CellID->48779360,ExpressionUUID->"5b4e48e4-f3ef-4d7a-9417-d956be44603e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearRecurrence", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", "21"}], "]"}]], "Input",
 CellChangeTimes->{{3.898969874381728*^9, 3.898969874567844*^9}},
 CellLabel->"In[104]:=",
 CellID->59766089,ExpressionUUID->"5dd5dcac-ba2b-4dfd-946e-7a606c3df2f8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "2", ",", "5", ",", "12", ",", "29", ",", "70", ",", 
   "169", ",", "408", ",", "985", ",", "2378", ",", "5741", ",", "13860", ",",
    "33461", ",", "80782", ",", "195025", ",", "470832", ",", "1136689", ",", 
   "2744210", ",", "6625109", ",", "15994428"}], "}"}]], "Output",
 CellChangeTimes->{3.898969875425189*^9},
 CellLabel->"Out[104]=",
 CellID->6049817,ExpressionUUID->"a80657c8-6d2c-4ddf-b54b-b90ad2d14fa4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find a linear recurrence:", "MathCaption",
 CellChangeTimes->{{3.8989700205156*^9, 3.898970024371616*^9}},
 CellID->234878772,ExpressionUUID->"12a30523-40cb-40b9-8243-5da15a850fa4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindLinearRecurrence", "[", 
  RowBox[{"EchoTiming", "[", 
   RowBox[{"LucasNumberU1", "[", 
    RowBox[{
     RowBox[{"Range", "[", "21", "]"}], ",", "2", ",", 
     RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8989699774957495`*^9, 3.8989700130435724`*^9}},
 CellLabel->"In[107]:=",
 CellID->148202768,ExpressionUUID->"cfe44993-3cae-45f9-b31f-1cd4e4f8b5cd"],

Cell[BoxData["0.0001767`"], "EchoTiming",
 CellChangeTimes->{3.898970015456313*^9},
 CellID->510846472,ExpressionUUID->"66e83d75-bf14-41d5-8805-89603e849eb2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.8989700167549405`*^9},
 CellLabel->"Out[107]=",
 CellID->23869527,ExpressionUUID->"c15f6582-264f-400e-bcdd-00f68336ad99"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generate a linear recurrence:", "MathCaption",
 CellChangeTimes->{{3.898970028733661*^9, 3.8989700339301763`*^9}},
 CellID->10558311,ExpressionUUID->"70c324a5-a6a8-4f81-a67a-3fe2997f18f4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearRecurrence", "[", 
  RowBox[{
   RowBox[{"FindLinearRecurrence", "[", 
    RowBox[{"EchoTiming", "[", 
     RowBox[{"LucasNumberU1", "[", 
      RowBox[{
       RowBox[{"Range", "[", "21", "]"}], ",", "2", ",", 
       RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"LucasNumberU1", "[", 
      RowBox[{
       RowBox[{"Range", "[", "2", "]"}], ",", "2", ",", 
       RowBox[{"-", "1"}]}], "]"}], ",", "2"}], "]"}], ",", "10"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8989699774957495`*^9, 3.8989700723910227`*^9}},
 CellLabel->"In[108]:=",
 CellID->58237670,ExpressionUUID->"9a7c0d48-4ac6-47ee-8f76-da0b38863b3c"],

Cell[BoxData["0.0000285`"], "EchoTiming",
 CellChangeTimes->{3.8989700727470245`*^9},
 CellID->74044636,ExpressionUUID->"524cb8ca-b58e-4a39-95ae-1aab5fb0c6be"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "5", ",", "12", ",", "29", ",", "70", ",", "169", ",", 
   "408", ",", "985", ",", "2378"}], "}"}]], "Output",
 CellChangeTimes->{3.8989700740910244`*^9},
 CellLabel->"Out[108]=",
 CellID->51587048,ExpressionUUID->"afe699eb-86fb-4f15-9ca3-1179db2aeaf5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["We can also find a Fibonacci function:", "MathCaption",
 CellChangeTimes->{{3.89897022986347*^9, 3.8989702359980965`*^9}},
 CellID->74692364,ExpressionUUID->"b49d0bc8-9075-47d6-b37f-f3ab2fb488be"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindSequenceFunction", "[", 
  RowBox[{"LucasNumberU1", "[", 
   RowBox[{
    RowBox[{"Range", "[", "21", "]"}], ",", "2", ",", 
    RowBox[{"-", "1"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8989701511268773`*^9, 3.8989701743986173`*^9}},
 CellLabel->"In[109]:=",
 CellID->436274302,ExpressionUUID->"08d9caaf-cafe-441b-b3a8-11087feb253f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Fibonacci", "[", 
   RowBox[{"#1", ",", "2"}], "]"}], "&"}]], "Output",
 CellChangeTimes->{3.8989701754857283`*^9},
 CellLabel->"Out[109]=",
 CellID->581705438,ExpressionUUID->"54e4514f-9746-469f-af35-93c5e51fd2f1"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "d6db86e4-0c11-46e7-9232-d752b584f953"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->376301338,ExpressionUUID->"0e43fc60-e43f-46b0-974d-2b11e3f727c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["U", "n"], 
   RowBox[{"(", 
    RowBox[{"1", ",", 
     RowBox[{"-", "2"}]}], ")"}]}]], "InlineFormula",ExpressionUUID->
  "a4e7f1ff-9999-4e9e-87b3-38321e2bd0d8"],
 " represents the Jacobsthal numbers:"
}], "MathCaption",
 CellChangeTimes->{{3.8983671110132236`*^9, 3.898367124461734*^9}},
 CellID->228255672,ExpressionUUID->"cbbc3a03-7cc7-493f-9749-d15a2c805e0c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EchoTiming", "[", 
  RowBox[{"LucasNumberU1", "[", 
   RowBox[{
    RowBox[{"Range", "[", "21", "]"}], ",", "1", ",", 
    RowBox[{"-", "2"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8983671300857515`*^9, 3.898367132068262*^9}, 
   3.8983673772202024`*^9},
 CellLabel->"In[333]:=",
 CellID->72949216,ExpressionUUID->"cedfd366-cb1f-4783-9f3f-94edfde131f9"],

Cell[BoxData["0.0000269`"], "EchoTiming",
 CellChangeTimes->{3.898367393013151*^9},
 CellID->196950653,ExpressionUUID->"ae639dba-2d59-49fd-a025-54ad009c02a4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "3", ",", "5", ",", "11", ",", "21", ",", "43", ",", 
   "85", ",", "171", ",", "341", ",", "683", ",", "1365", ",", "2731", ",", 
   "5461", ",", "10923", ",", "21845", ",", "43691", ",", "87381", ",", 
   "174763", ",", "349525", ",", "699051"}], "}"}]], "Output",
 CellChangeTimes->{3.8983671330884094`*^9, 3.898367393858669*^9},
 CellLabel->"Out[333]=",
 CellID->157710615,ExpressionUUID->"215e80a2-e6a4-41c4-bc0f-2a78bc94bf2e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["We can find a pattern:", "MathCaption",
 CellChangeTimes->{{3.8989702556265726`*^9, 3.898970260919688*^9}},
 CellID->63779103,ExpressionUUID->"2fdaf0ec-4e2e-41b2-9a76-b63c9dbe3d25"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindSequenceFunction", "[", 
  RowBox[{"LucasNumberU1", "[", 
   RowBox[{
    RowBox[{"Range", "[", "21", "]"}], ",", "1", ",", 
    RowBox[{"-", "2"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8989701511268773`*^9, 3.898970189719262*^9}},
 CellLabel->"In[111]:=",
 CellID->559477600,ExpressionUUID->"f30052ca-ddbf-424e-aed5-bccca00b182d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "3"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "#1"]}], "+", 
     SuperscriptBox["2", "#1"]}], ")"}]}], "&"}]], "Output",
 CellChangeTimes->{3.8989701907678776`*^9, 3.8989702637720766`*^9},
 CellLabel->"Out[111]=",
 CellID->854014107,ExpressionUUID->"1a04c0ea-2693-4660-bef2-5024ae3de143"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generate a new array:", "MathCaption",
 CellChangeTimes->{{3.898970289670638*^9, 3.898970298856121*^9}},
 CellID->297234162,ExpressionUUID->"e7f299c3-75ae-42ce-8926-81b8a9a59c72"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Array", "[", 
  RowBox[{
   RowBox[{"FindSequenceFunction", "[", 
    RowBox[{"LucasNumberU1", "[", 
     RowBox[{
      RowBox[{"Range", "[", "21", "]"}], ",", "1", ",", 
      RowBox[{"-", "2"}]}], "]"}], "]"}], ",", "21"}], "]"}]], "Input",
 CellChangeTimes->{{3.8989702780491457`*^9, 3.898970284887712*^9}},
 CellLabel->"In[112]:=",
 CellID->384199976,ExpressionUUID->"cab7096c-6fc5-4767-b852-85c41eb4c296"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "3", ",", "5", ",", "11", ",", "21", ",", "43", ",", 
   "85", ",", "171", ",", "341", ",", "683", ",", "1365", ",", "2731", ",", 
   "5461", ",", "10923", ",", "21845", ",", "43691", ",", "87381", ",", 
   "174763", ",", "349525", ",", "699051"}], "}"}]], "Output",
 CellChangeTimes->{3.8989702858027115`*^9},
 CellLabel->"Out[112]=",
 CellID->60351254,ExpressionUUID->"1bb50712-a1e8-480a-bc44-edd3cc966aea"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "e090aeb9-29b4-4290-a5b0-45d0fab67c17"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->64234199,ExpressionUUID->"9a3d83bd-53a2-40e1-a056-a0288c58146a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["U", "n"], 
   RowBox[{"(", 
    RowBox[{"3", ",", "2"}], ")"}]}]], "InlineFormula",ExpressionUUID->
  "14a9d7d8-44de-4f57-b7ea-c3cc930a8420"],
 " represents the Mersenne numbers:"
}], "MathCaption",
 CellChangeTimes->{{3.898367254104355*^9, 3.8983672665886517`*^9}},
 CellID->71222372,ExpressionUUID->"75e0d9df-f932-4f3c-9d63-e26fc2f7d96f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EchoTiming", "[", 
  RowBox[{"LucasNumberU1", "[", 
   RowBox[{
    RowBox[{"Range", "[", "21", "]"}], ",", "3", ",", "2"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.89836727403951*^9, 3.898367275955843*^9}, 
   3.8983673772252007`*^9},
 CellLabel->"In[334]:=",
 CellID->612463501,ExpressionUUID->"02d54975-05ba-4081-b906-1b6f6209f603"],

Cell[BoxData["0.0000259`"], "EchoTiming",
 CellChangeTimes->{3.898367396431939*^9},
 CellID->339196886,ExpressionUUID->"eced330b-7530-40c2-95a9-db2a8ab255e6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "3", ",", "7", ",", "15", ",", "31", ",", "63", ",", "127", ",", 
   "255", ",", "511", ",", "1023", ",", "2047", ",", "4095", ",", "8191", ",",
    "16383", ",", "32767", ",", "65535", ",", "131071", ",", "262143", ",", 
   "524287", ",", "1048575", ",", "2097151"}], "}"}]], "Output",
 CellChangeTimes->{3.8983672770729*^9, 3.8983673972694945`*^9},
 CellLabel->"Out[334]=",
 CellID->244982401,ExpressionUUID->"6af13b58-2c2e-4642-941a-53a5955d6a24"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "5abd9039-7bf6-4234-b803-c0ab4b57b619"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->795616469,ExpressionUUID->"9da347bf-3c60-46ca-b656-b2585d140892"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["U", "n"], 
   RowBox[{"(", 
    RowBox[{"6", ",", "1"}], ")"}]}]], "InlineFormula",ExpressionUUID->
  "30f288f3-2b57-460c-92e6-92ed77fb2d7f"],
 " represents the square roots of the square triangular numbers:"
}], "MathCaption",
 CellChangeTimes->{{3.898367299427387*^9, 3.8983673148057985`*^9}},
 CellID->29412029,ExpressionUUID->"2e1a0668-27b8-43f7-a67a-a931a3253cf6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EchoTiming", "[", 
  RowBox[{"LucasNumberU1", "[", 
   RowBox[{
    RowBox[{"Range", "[", "21", "]"}], ",", "6", ",", "1"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8983673233671265`*^9, 3.898367324400962*^9}, 
   3.8983673772322025`*^9},
 CellLabel->"In[335]:=",
 CellID->13291710,ExpressionUUID->"79b00915-d828-437f-8704-a17a9bb8b02e"],

Cell[BoxData["0.0000271`"], "EchoTiming",
 CellChangeTimes->{3.898367399885043*^9},
 CellID->61324748,ExpressionUUID->"be32bbab-b146-4807-b3a7-a806135e1c95"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "6", ",", "35", ",", "204", ",", "1189", ",", "6930", ",", 
   "40391", ",", "235416", ",", "1372105", ",", "7997214", ",", "46611179", 
   ",", "271669860", ",", "1583407981", ",", "9228778026", ",", "53789260175",
    ",", "313506783024", ",", "1827251437969", ",", "10650001844790", ",", 
   "62072759630771", ",", "361786555939836", ",", "2108646576008245"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.898367325627042*^9, 3.8983674007140956`*^9},
 CellLabel->"Out[335]=",
 CellID->60671734,ExpressionUUID->"25800ad3-8836-42b4-8ce6-5f369a35910f"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "08bb307a-62d1-4f31-a2b5-0fb7a4b40081"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->179371755,ExpressionUUID->"e87d39ae-c664-4f31-92d3-0ee8f11360f2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["U", "n"], 
   RowBox[{"(", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}]}], ")"}]}]], "InlineFormula",ExpressionUUID->
  "4ccefc5a-05ba-4ce3-b9c2-c1cb9cede60e"],
 " represents the Fibonacci polynomials:"
}], "MathCaption",
 CellChangeTimes->{{3.89836740837278*^9, 3.898367423134612*^9}},
 CellID->68513831,ExpressionUUID->"717f01df-8662-41a2-ad6f-d72f4fd9ac26"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"LucasNumberU1", "[", 
   RowBox[{
    RowBox[{"Range", "[", "7", "]"}], ",", "x", ",", 
    RowBox[{"-", "1"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.898367424608721*^9, 3.8983674415427437`*^9}},
 CellLabel->"In[337]:=",
 CellID->691053818,ExpressionUUID->"437c4b7a-658e-4d42-9eb4-e92ace807f9d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "x", ",", 
   RowBox[{"1", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{
    RowBox[{"2", " ", "x"}], "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"1", "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    SuperscriptBox["x", "4"]}], ",", 
   RowBox[{
    RowBox[{"3", " ", "x"}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["x", "3"]}], "+", 
    SuperscriptBox["x", "5"]}], ",", 
   RowBox[{"1", "+", 
    RowBox[{"6", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["x", "4"]}], "+", 
    SuperscriptBox["x", "6"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.898367432493326*^9, 3.898367442001221*^9}},
 CellLabel->"Out[337]=",
 CellID->116155483,ExpressionUUID->"5192394b-e8b2-42b3-ab3b-ec5591328837"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Verify the statement up to 7:", "MathCaption",
 CellChangeTimes->{{3.898367463130916*^9, 3.898367469978275*^9}},
 CellID->295365794,ExpressionUUID->"40c40a54-a477-41b8-b267-ab4c71085419"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SameQ", "[", 
  RowBox[{
   RowBox[{"Expand", "[", 
    RowBox[{"LucasNumberU1", "[", 
     RowBox[{
      RowBox[{"Range", "[", "7", "]"}], ",", "x", ",", 
      RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
   RowBox[{"Fibonacci", "[", 
    RowBox[{
     RowBox[{"Range", "[", "7", "]"}], ",", "x"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.898367449151556*^9, 3.8983674593141036`*^9}},
 CellLabel->"In[338]:=",
 CellID->549686470,ExpressionUUID->"0b11a6df-6d0d-44a5-a178-929e5439ec8c"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.898367459634065*^9},
 CellLabel->"Out[338]=",
 CellID->471038115,ExpressionUUID->"8adfb6bd-d1b4-400d-8950-b349d939d5e3"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "90054b2d-fde7-4e06-8821-3dd723c77d0b"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->439332369,ExpressionUUID->"55c9746c-0f85-40d9-b47a-69e43563a136"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["U", "n"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", "x"}], ",", "1"}], ")"}]}]], "InlineFormula",ExpressionUUID->
  "143e9d8a-70da-4934-92a7-f3be5d5b9725"],
 " represents Chebyshev polynomials of the second kind:"
}], "MathCaption",
 CellChangeTimes->{{3.898367480189353*^9, 3.8983675009637966`*^9}},
 CellID->142865217,ExpressionUUID->"db068e57-f6b8-4ee8-96c6-2a00b19d1ecb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"LucasNumberU1", "[", 
   RowBox[{
    RowBox[{"Range", "[", "7", "]"}], ",", 
    RowBox[{"2", "x"}], ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8983675040851383`*^9, 3.898367517301791*^9}},
 CellLabel->"In[339]:=",
 CellID->819507155,ExpressionUUID->"a2b6e356-631d-4c75-bea6-ff9b3262ab95"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"2", " ", "x"}], ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["x", "2"]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "4"}], " ", "x"}], "+", 
    RowBox[{"8", " ", 
     SuperscriptBox["x", "3"]}]}], ",", 
   RowBox[{"1", "-", 
    RowBox[{"12", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"16", " ", 
     SuperscriptBox["x", "4"]}]}], ",", 
   RowBox[{
    RowBox[{"6", " ", "x"}], "-", 
    RowBox[{"32", " ", 
     SuperscriptBox["x", "3"]}], "+", 
    RowBox[{"32", " ", 
     SuperscriptBox["x", "5"]}]}], ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"24", " ", 
     SuperscriptBox["x", "2"]}], "-", 
    RowBox[{"80", " ", 
     SuperscriptBox["x", "4"]}], "+", 
    RowBox[{"64", " ", 
     SuperscriptBox["x", "6"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.898367518416844*^9},
 CellLabel->"Out[339]=",
 CellID->451625855,ExpressionUUID->"c0e96ec6-2ec2-4d2f-81e7-5d53b00ca30c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Verify this statement:", "MathCaption",
 CellChangeTimes->{{3.8983675214470387`*^9, 3.898367525470948*^9}},
 CellID->38534065,ExpressionUUID->"607341e7-d01c-463f-8f00-3a78cb06f595"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SameQ", "[", 
  RowBox[{
   RowBox[{"Expand", "[", 
    RowBox[{"LucasNumberU1", "[", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{
        RowBox[{"1", "+", "1"}], ",", 
        RowBox[{"7", "+", "1"}]}], "]"}], ",", 
      RowBox[{"2", "x"}], ",", "1"}], "]"}], "]"}], ",", 
   RowBox[{"ChebyshevU", "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"1", "+", "0"}], ",", 
       RowBox[{"7", "+", "0"}]}], "]"}], ",", "x"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.898367527086715*^9, 3.898367606828323*^9}},
 CellLabel->"In[341]:=",
 CellID->391099469,ExpressionUUID->"b1e16c62-422a-401b-b69c-387dd9d30df1"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8983676073878665`*^9},
 CellLabel->"Out[341]=",
 CellID->22022784,ExpressionUUID->"15f03d04-2f35-4808-a788-11d4b36141b8"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "d9f96c2d-f2e4-40f5-91ae-224bbdadff8b"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->86887181,ExpressionUUID->"1f1fc464-7818-406c-b656-4a5a5bcceddc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["U", "n"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"x", "+", "1"}], ",", "x"}], ")"}]}]], "InlineFormula",
  ExpressionUUID->"7d712345-dae0-4020-868a-29fe7156700a"],
 " represents repunits in base x:"
}], "MathCaption",
 CellChangeTimes->{{3.8983676211160293`*^9, 3.8983676338884525`*^9}},
 CellID->119722245,ExpressionUUID->"31590361-d2a1-4813-aada-caa6b606f48f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"LucasNumberU1", "[", 
   RowBox[{
    RowBox[{"1", "+", 
     RowBox[{"Range", "[", "7", "]"}]}], ",", 
    RowBox[{"x", "+", "1"}], ",", "x"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.89836763581566*^9, 3.8983676864726696`*^9}},
 CellLabel->"In[347]:=",
 CellID->681843340,ExpressionUUID->"4c3e5f76-52ac-44c2-a0c1-a3095b5dcbbb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "+", "x"}], ",", 
   RowBox[{"1", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"1", "+", "x", "+", 
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"1", "+", "x", "+", 
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["x", "3"], "+", 
    SuperscriptBox["x", "4"]}], ",", 
   RowBox[{"1", "+", "x", "+", 
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["x", "3"], "+", 
    SuperscriptBox["x", "4"], "+", 
    SuperscriptBox["x", "5"]}], ",", 
   RowBox[{"1", "+", "x", "+", 
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["x", "3"], "+", 
    SuperscriptBox["x", "4"], "+", 
    SuperscriptBox["x", "5"], "+", 
    SuperscriptBox["x", "6"]}], ",", 
   RowBox[{"1", "+", "x", "+", 
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["x", "3"], "+", 
    SuperscriptBox["x", "4"], "+", 
    SuperscriptBox["x", "5"], "+", 
    SuperscriptBox["x", "6"], "+", 
    SuperscriptBox["x", "7"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.898367646861583*^9, 3.898367686943242*^9}},
 CellLabel->"Out[347]=",
 CellID->567660469,ExpressionUUID->"367bf557-c57a-4b26-827a-adaabb1ba495"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The first 21 Lucas numbers:", "MathCaption",
 CellChangeTimes->{{3.8983679050281706`*^9, 3.8983679108337193`*^9}},
 CellID->69391295,ExpressionUUID->"5d3fce45-90eb-45d4-a9d6-1e4ebe1f851c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LucasNumberV2", "[", 
  RowBox[{
   RowBox[{"Range", "[", "21", "]"}], ",", "1", ",", 
   RowBox[{"-", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8983679132862287`*^9, 3.8983679216508017`*^9}},
 CellLabel->"In[381]:=",
 CellID->139948453,ExpressionUUID->"758cc4b7-7514-402c-809d-5e41aba6777a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "3", ",", "4", ",", "7", ",", "11", ",", "18", ",", "29", ",", 
   "47", ",", "76", ",", "123", ",", "199", ",", "322", ",", "521", ",", 
   "843", ",", "1364", ",", "2207", ",", "3571", ",", "5778", ",", "9349", 
   ",", "15127", ",", "24476"}], "}"}]], "Output",
 CellChangeTimes->{3.898367922385843*^9, 3.898368150548594*^9},
 CellLabel->"Out[381]=",
 CellID->46523418,ExpressionUUID->"7c3d1643-020a-45e6-98a2-83981641f880"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compare the function to LucasL:", "MathCaption",
 CellChangeTimes->{{3.8983681706800504`*^9, 3.8983681751458673`*^9}},
 CellID->173598441,ExpressionUUID->"55165a1f-c4a6-4ab8-a13c-7ac27e2f25af"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"LucasL", "[", 
   RowBox[{"Range", "[", "21", "]"}], "]"}], "===", 
  RowBox[{"LucasNumberV2", "[", 
   RowBox[{
    RowBox[{"Range", "[", "21", "]"}], ",", "1", ",", 
    RowBox[{"-", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8983681634404774`*^9, 3.8983681670258126`*^9}},
 CellLabel->"In[382]:=",
 CellID->298773496,ExpressionUUID->"46bb45bb-2a9c-4a1d-8695-5049ee1753bf"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.898368167735422*^9},
 CellLabel->"Out[382]=",
 CellID->135097200,ExpressionUUID->"70b5f350-3ac9-490a-834f-203bcfebddf7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["V", "n"], 
   RowBox[{"(", 
    RowBox[{"2", ",", 
     RowBox[{"-", "1"}]}], ")"}]}]], "InlineFormula",ExpressionUUID->
  "ca811dc1-668a-4e27-aa26-20f0a094b73d"],
 " gives the Pell-Lucas numbers (companion Pell numbers):"
}], "MathCaption",
 CellChangeTimes->{{3.898368189629094*^9, 3.8983682085144124`*^9}},
 CellID->6568824,ExpressionUUID->"3e1b77fa-7532-48c1-856f-28f4837f0881"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LucasNumberV2", "[", 
  RowBox[{
   RowBox[{"Range", "[", "21", "]"}], ",", "2", ",", 
   RowBox[{"-", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.898368211028144*^9, 3.8983682182333207`*^9}},
 CellLabel->"In[383]:=",
 CellID->354624742,ExpressionUUID->"27dbc629-6d52-4381-a910-b068633e8b12"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "6", ",", "14", ",", "34", ",", "82", ",", "198", ",", "478", ",",
    "1154", ",", "2786", ",", "6726", ",", "16238", ",", "39202", ",", 
   "94642", ",", "228486", ",", "551614", ",", "1331714", ",", "3215042", ",",
    "7761798", ",", "18738638", ",", "45239074", ",", "109216786"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8983682186423745`*^9},
 CellLabel->"Out[383]=",
 CellID->229632868,ExpressionUUID->"cee4b065-c0fd-49d4-a909-4c0e7b69c186"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "111f88bf-fc8f-489c-bf48-c65098fdb699"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->225973015,ExpressionUUID->"622fea6b-ce48-49bc-b4cf-72a0dbd41c8a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["V", "n"], 
   RowBox[{"(", 
    RowBox[{"1", ",", 
     RowBox[{"-", "2"}]}], ")"}]}]], "InlineFormula",ExpressionUUID->
  "eb2a6b2f-2d25-4f89-87ee-aea70da48dda"],
 " gives the Jacobsthal-Lucas numbers:"
}], "MathCaption",
 CellChangeTimes->{{3.8983682494105635`*^9, 3.898368277246179*^9}},
 CellID->597709743,ExpressionUUID->"01d6bf5a-70cc-4e6a-ac8c-9c49ffc192e6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LucasNumberV2", "[", 
  RowBox[{
   RowBox[{"Range", "[", "21", "]"}], ",", "1", ",", 
   RowBox[{"-", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.898368281755721*^9, 3.898368288887227*^9}},
 CellLabel->"In[384]:=",
 CellID->559137007,ExpressionUUID->"495133b8-c92d-4815-b337-e786aacc406d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "5", ",", "7", ",", "17", ",", "31", ",", "65", ",", "127", ",", 
   "257", ",", "511", ",", "1025", ",", "2047", ",", "4097", ",", "8191", ",",
    "16385", ",", "32767", ",", "65537", ",", "131071", ",", "262145", ",", 
   "524287", ",", "1048577", ",", "2097151"}], "}"}]], "Output",
 CellChangeTimes->{3.898368289297815*^9},
 CellLabel->"Out[384]=",
 CellID->350769182,ExpressionUUID->"a92d0469-dc6c-41e6-8e91-27ca10ad910d"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "f63530c8-9036-4b26-adae-7ffda7dfab1d"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->87474974,ExpressionUUID->"80f3779f-a59b-42cc-ae82-01a6adb15197"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["V", "n"], 
   RowBox[{"(", 
    RowBox[{"3", ",", "2"}], ")"}]}]], "InlineFormula",ExpressionUUID->
  "6a91e0be-8772-4030-a4a2-16b15c14b6e0"],
 " gives number of the form ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["2", "n"], "+", "1"}]], "InlineFormula",ExpressionUUID->
  "436bbc0e-6594-4581-8c90-b71f6e3105bb"],
 ", which includes the Fermat numbers:"
}], "MathCaption",
 CellChangeTimes->{{3.8983683017946467`*^9, 3.89836831069621*^9}, {
  3.8983683541783943`*^9, 3.898368381642344*^9}},
 CellID->655288947,ExpressionUUID->"90f3cf1e-64a5-46a6-9078-701e10c4cbb8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LucasNumberV2", "[", 
  RowBox[{
   RowBox[{"Range", "[", "21", "]"}], ",", "3", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.8983683894832077`*^9, 3.8983684033641777`*^9}},
 CellLabel->"In[386]:=",
 CellID->68325774,ExpressionUUID->"c010705d-453d-4007-abbf-2898ffd3425e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "5", ",", "9", ",", "17", ",", "33", ",", "65", ",", "129", ",", 
   "257", ",", "513", ",", "1025", ",", "2049", ",", "4097", ",", "8193", ",",
    "16385", ",", "32769", ",", "65537", ",", "131073", ",", "262145", ",", 
   "524289", ",", "1048577", ",", "2097153"}], "}"}]], "Output",
 CellChangeTimes->{{3.8983684003807473`*^9, 3.89836840389223*^9}},
 CellLabel->"Out[386]=",
 CellID->411603969,ExpressionUUID->"72a9db7f-15cd-4a12-babc-968d2c15ef93"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "9da598ec-ac82-4801-8e92-23e927f862fa"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->380977308,ExpressionUUID->"2b371e39-88f2-4142-8572-e69bb3fe6dd8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["V", "n"], 
   RowBox[{"(", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}]}], ")"}]}]], "InlineFormula",ExpressionUUID->
  "99d5c88a-454f-4b73-8dee-f2f985734654"],
 " gives the Lucas polynomials:"
}], "MathCaption",
 CellChangeTimes->{{3.8983684207308607`*^9, 3.8983684375899196`*^9}},
 CellID->206574541,ExpressionUUID->"f21a7b3a-f0c6-4dff-8634-53e1dcc07848"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"LucasNumberV2", "[", 
   RowBox[{
    RowBox[{"Range", "[", "7", "]"}], ",", "x", ",", 
    RowBox[{"-", "1"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.898368438526023*^9, 3.898368460620308*^9}},
 CellLabel->"In[389]:=",
 CellID->571446576,ExpressionUUID->"750c3ab0-d3c3-4dd8-94df-318a711a8fca"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"2", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{
    RowBox[{"3", " ", "x"}], "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"2", "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    SuperscriptBox["x", "4"]}], ",", 
   RowBox[{
    RowBox[{"5", " ", "x"}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["x", "3"]}], "+", 
    SuperscriptBox["x", "5"]}], ",", 
   RowBox[{"2", "+", 
    RowBox[{"9", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"6", " ", 
     SuperscriptBox["x", "4"]}], "+", 
    SuperscriptBox["x", "6"]}], ",", 
   RowBox[{
    RowBox[{"7", " ", "x"}], "+", 
    RowBox[{"14", " ", 
     SuperscriptBox["x", "3"]}], "+", 
    RowBox[{"7", " ", 
     SuperscriptBox["x", "5"]}], "+", 
    SuperscriptBox["x", "7"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.898368447562336*^9, 3.8983684609903994`*^9}},
 CellLabel->"Out[389]=",
 CellID->579836633,ExpressionUUID->"c4706520-7630-4b9e-968c-f05c2ffbc6c0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Let's compare this to LucasL:", "MathCaption",
 CellChangeTimes->{{3.898368464481782*^9, 3.898368469001687*^9}},
 CellID->849664802,ExpressionUUID->"8ec4df43-e1fc-437b-98bb-cfd5939d2c2e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Expand", "[", 
   RowBox[{"LucasNumberV2", "[", 
    RowBox[{
     RowBox[{"Range", "[", "7", "]"}], ",", "x", ",", 
     RowBox[{"-", "1"}]}], "]"}], "]"}], "===", 
  RowBox[{"LucasL", "[", 
   RowBox[{
    RowBox[{"Range", "[", "7", "]"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8983684696822634`*^9, 3.898368523034341*^9}},
 CellLabel->"In[395]:=",
 CellID->5746910,ExpressionUUID->"4c514072-b9fe-4266-92af-3ebe3671e7fc"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.8983684770956235`*^9, 3.8983685235714645`*^9}},
 CellLabel->"Out[395]=",
 CellID->145466617,ExpressionUUID->"c29def47-a568-42c9-b544-3ce0d15b7e52"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "ae690e4d-96bd-408c-9791-2e51e6652d37"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->64856443,ExpressionUUID->"961242de-5e8d-43a8-a87d-db4047f27173"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["V", "n"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", "x"}], ",", "1"}], ")"}]}]], "InlineFormula",ExpressionUUID->
  "7fa5fdb5-725e-4e45-aba2-15073afd970e"],
 " gives Chebyshev polynomials of first kind multiplied by 2:"
}], "MathCaption",
 CellChangeTimes->{{3.8983689099969034`*^9, 3.8983689380434713`*^9}},
 CellID->200874845,ExpressionUUID->"26134174-dae9-40bc-a764-857260208555"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"LucasNumberV2", "[", 
   RowBox[{
    RowBox[{"Range", "[", "7", "]"}], ",", 
    RowBox[{"2", "x"}], ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8983689469733086`*^9, 3.8983689494139085`*^9}},
 CellLabel->"In[396]:=",
 CellID->2790924,ExpressionUUID->"87cb7d00-8269-48a4-895c-9a8f78c5b4ca"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"2", " ", "x"}], ",", 
   RowBox[{
    RowBox[{"-", "2"}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["x", "2"]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "6"}], " ", "x"}], "+", 
    RowBox[{"8", " ", 
     SuperscriptBox["x", "3"]}]}], ",", 
   RowBox[{"2", "-", 
    RowBox[{"16", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"16", " ", 
     SuperscriptBox["x", "4"]}]}], ",", 
   RowBox[{
    RowBox[{"10", " ", "x"}], "-", 
    RowBox[{"40", " ", 
     SuperscriptBox["x", "3"]}], "+", 
    RowBox[{"32", " ", 
     SuperscriptBox["x", "5"]}]}], ",", 
   RowBox[{
    RowBox[{"-", "2"}], "+", 
    RowBox[{"36", " ", 
     SuperscriptBox["x", "2"]}], "-", 
    RowBox[{"96", " ", 
     SuperscriptBox["x", "4"]}], "+", 
    RowBox[{"64", " ", 
     SuperscriptBox["x", "6"]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "14"}], " ", "x"}], "+", 
    RowBox[{"112", " ", 
     SuperscriptBox["x", "3"]}], "-", 
    RowBox[{"224", " ", 
     SuperscriptBox["x", "5"]}], "+", 
    RowBox[{"128", " ", 
     SuperscriptBox["x", "7"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.898368949830493*^9},
 CellLabel->"Out[396]=",
 CellID->749587632,ExpressionUUID->"f596b24f-09c2-4db3-a1bf-9ab14503f8cc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test this statement:", "MathCaption",
 CellChangeTimes->{{3.898368975414742*^9, 3.8983689784089446`*^9}},
 CellID->193111019,ExpressionUUID->"2db7a26b-5ec1-4eff-9184-40b551df04b9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Expand", "[", 
   RowBox[{"LucasNumberV2", "[", 
    RowBox[{
     RowBox[{"Range", "[", "7", "]"}], ",", 
     RowBox[{"2", "x"}], ",", "1"}], "]"}], "]"}], "===", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Expand", "[", 
      RowBox[{"2", "*", "#"}], "]"}], "&"}], "/@", 
    RowBox[{"ChebyshevT", "[", 
     RowBox[{
      RowBox[{"Range", "[", "7", "]"}], ",", "x"}], "]"}]}], ")"}]}]], "Input",
 CellLabel->"In[397]:=",
 CellID->257744413,ExpressionUUID->"78a915c4-b3cb-4ecb-bbe5-e3198a47891c"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.89836897922904*^9},
 CellLabel->"Out[397]=",
 CellID->599489833,ExpressionUUID->"c68d43a1-9476-4c86-8841-984d33fc7ba9"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "cd2c89cb-7aac-4f2f-aa5e-cd33ea4de342"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->506165783,ExpressionUUID->"74a09531-e455-474c-8435-32c40044718c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   SubscriptBox["V", "n"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"x", "+", "1"}], ",", "x"}], ")"}]}]], "InlineFormula",
  ExpressionUUID->"cd31bdf6-1d63-4a36-911e-cf6dc1779258"],
 " gives ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["x", "n"], "+", "1"}]], "InlineFormula",ExpressionUUID->
  "f31cd500-ca9c-4af0-8b65-0d3454842fc4"],
 ":"
}], "MathCaption",
 CellChangeTimes->{{3.8983690030490446`*^9, 3.898369040981527*^9}},
 CellID->230848754,ExpressionUUID->"d95111a8-a716-475b-a881-f0de9d4af0c9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"LucasNumberV2", "[", 
   RowBox[{
    RowBox[{"Range", "[", "7", "]"}], ",", 
    RowBox[{"x", "+", "1"}], ",", "x"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8983690257258263`*^9, 3.898369030824967*^9}},
 CellLabel->"In[398]:=",
 CellID->4310976,ExpressionUUID->"e54064bc-2642-4bf1-81e5-1e870cfb6078"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "+", "x"}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox["x", "4"]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox["x", "5"]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox["x", "6"]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox["x", "7"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8983690313075037`*^9},
 CellLabel->"Out[398]=",
 CellID->362774086,ExpressionUUID->"aa3f99b7-7b88-4fc6-bde4-63373f64bf04"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test this statement:", "MathCaption",
 CellChangeTimes->{{3.8983690442199492`*^9, 3.8983690472092447`*^9}},
 CellID->373578484,ExpressionUUID->"bd68a889-c6f2-4ee6-8743-285eb013ec87"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Expand", "[", 
   RowBox[{"LucasNumberV2", "[", 
    RowBox[{
     RowBox[{"Range", "[", "7", "]"}], ",", 
     RowBox[{"x", "+", "1"}], ",", "x"}], "]"}], "]"}], "===", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "n"], "+", "1"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "7"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8983690652477217`*^9, 3.8983690738062525`*^9}},
 CellLabel->"In[399]:=",
 CellID->194038522,ExpressionUUID->"085e3dee-2f60-4952-9c11-59ba93c048cf"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.898369074213255*^9},
 CellLabel->"Out[399]=",
 CellID->154595223,ExpressionUUID->"e8a803a8-e957-4928-915e-1474000d84ba"]
}, Open  ]]
}, Open  ]],

Cell["Evaluate the q-exponential.", "MathCaption",
 CellChangeTimes->{{3.8997559401804323`*^9, 3.899755943654093*^9}},
 CellID->554419,ExpressionUUID->"cfb9272b-a053-443b-964b-551f4ef2a325"],

Cell[CellGroupData[{

Cell["Evaluate numerically:", "MathCaption",
 CellID->55753721,ExpressionUUID->"3eae9e0a-c261-4605-831b-1e18a30b812e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QExponential", "[", 
  RowBox[{"3.4", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.8994754294912233`*^9, 3.8994754349701405`*^9}},
 CellLabel->"In[943]:=",
 CellID->14566,ExpressionUUID->"adc492c5-04b1-49f1-863e-8772093ba1ec"],

Cell[BoxData["29.96410004739701`"], "Output",
 CellChangeTimes->{3.8994754354061427`*^9, 3.899755950235406*^9},
 CellLabel->"Out[943]=",
 CellID->18188826,ExpressionUUID->"bf67936b-f0a9-4f31-b05a-1b48dd1f10a0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Change q from 1 to 2.", "MathCaption",
 CellChangeTimes->{{3.89975608886849*^9, 3.899756093187092*^9}},
 CellID->563784370,ExpressionUUID->"f2fb9f7a-300e-448b-a96d-b73cfcaec490"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QExponential", "[", 
  RowBox[{
   FractionBox["17", "5"], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.899756062971301*^9, 3.8997560668604345`*^9}},
 CellLabel->"In[952]:=",
 CellID->20592017,ExpressionUUID->"64d639ae-cffd-43ce-97cc-47c949b5056b"],

Cell[BoxData["10.59829409278693878204709467134680730861`15.954589770191003"], \
"Output",
 CellChangeTimes->{{3.899756053851441*^9, 3.8997560682078032`*^9}},
 CellLabel->"Out[952]=",
 CellID->151593018,ExpressionUUID->"e0d39b20-bd64-4676-9f67-7015a7052743"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ask for 40 digits of precision.", "MathCaption",
 CellChangeTimes->{{3.899756081794526*^9, 3.8997560865734963`*^9}},
 CellID->237785666,ExpressionUUID->"0e51d960-40a2-4d86-b7c9-6dadeac4d813"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QExponential", "[", 
  RowBox[{
   FractionBox["17", "5"], ",", "2", ",", "40"}], "]"}]], "Input",
 CellChangeTimes->{{3.899756062971301*^9, 3.899756073262741*^9}},
 CellLabel->"In[953]:=",
 CellID->298472260,ExpressionUUID->"47f3630a-55e6-4d45-a2e6-bd5773f4ba06"],

Cell[BoxData["10.5982940927869387820470946713468073086211252051161675464583`\
40."], "Output",
 CellChangeTimes->{3.899756073595477*^9},
 CellLabel->"Out[953]=",
 CellID->74152669,ExpressionUUID->"24df0231-3a63-40d5-8b36-5d9221b0259a"]
}, Open  ]]
}, Open  ]],

Cell["Evaluate the q-multinomial.", "MathCaption",
 CellChangeTimes->{{3.899756129229161*^9, 3.8997561330991883`*^9}},
 CellID->496593996,ExpressionUUID->"39e946e6-060c-4240-8691-2c60976b079c"],

Cell[CellGroupData[{

Cell["Evaluate numerically:", "MathCaption",
 CellID->489039817,ExpressionUUID->"f92098c6-3dff-427b-ab36-0b35b7da0cfe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QMultinomial", "[", 
  RowBox[{"1", ",", "2", ",", "1", ",", "E"}], "]"}]], "Input",
 CellChangeTimes->{{3.8989739325177946`*^9, 3.89897393565014*^9}},
 CellLabel->"In[954]:=",
 CellID->88658836,ExpressionUUID->"2e59a655-f15f-44e1-907b-d6aa3d8dbefe"],

Cell[BoxData[
 FractionBox[
  RowBox[{"QGamma", "[", 
   RowBox[{"5", ",", "\[ExponentialE]"}], "]"}], 
  RowBox[{"1", "+", "\[ExponentialE]"}]]], "Output",
 CellChangeTimes->{3.8989739360235424`*^9, 3.899756135009884*^9},
 CellLabel->"Out[954]=",
 CellID->66741005,ExpressionUUID->"76658b56-04e3-49a4-b66f-0dfbc2743480"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"QMultinomial", "[", 
   RowBox[{"1", ",", "2", ",", "1", ",", "E"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.898973961576065*^9, 3.8989739620080643`*^9}},
 CellLabel->"In[955]:=",
 CellID->471752441,ExpressionUUID->"fffe4fde-48dd-4e85-a1ef-e985fbbc5efc"],

Cell[BoxData["346.469801892138`"], "Output",
 CellChangeTimes->{3.898973962364065*^9, 3.8997561370157037`*^9},
 CellLabel->"Out[955]=",
 CellID->374027243,ExpressionUUID->"a64472f0-343a-462d-b7e6-3402b66238c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"QMultinomial", "[", 
    RowBox[{"1", ",", "2", ",", "1", ",", "E"}], "]"}], ",", "40"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.898973961576065*^9, 3.8989739620080643`*^9}, {
  3.8997561401337495`*^9, 3.899756141730242*^9}},
 CellLabel->"In[956]:=",
 CellID->796052010,ExpressionUUID->"ef7b7b23-1834-48a3-b7d9-dafa4babcb73"],

Cell[BoxData["346.4698018921381259525335487344495385550883060897418205888714`\
40."], "Output",
 CellChangeTimes->{3.899756142065931*^9},
 CellLabel->"Out[956]=",
 CellID->199263104,ExpressionUUID->"32542b9d-f983-4aac-b5ce-508d05e82cd1"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Find the period of the decimal representation of a rational number.\
\>", "MathCaption",
 CellChangeTimes->{{3.8997561625994687`*^9, 3.899756172431783*^9}},
 CellID->143975390,ExpressionUUID->"5932152a-fe5e-4b91-a085-06db7827488b"],

Cell[CellGroupData[{

Cell[TextData[{
 "Find the period of the repetend of the repeating decimal corresponding to  ",
 Cell[BoxData[
  FractionBox["1", "983"]], "InlineFormula",ExpressionUUID->
  "3d33bf28-49d2-4748-bb97-019b10629b32"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.8994815922892585`*^9, 3.8994816167768946`*^9}},
 CellID->27787895,ExpressionUUID->"b3d96bae-892e-44b7-8fc6-ccf06c23e019"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", 
  FractionBox["1", "983"], "]"}]], "Input",
 CellChangeTimes->{{3.899481620222888*^9, 3.899481624264899*^9}},
 CellLabel->"In[957]:=",
 CellID->236189147,ExpressionUUID->"2f2612ee-0b66-4efe-904a-56a98f99e0ae"],

Cell[BoxData["982"], "Output",
 CellChangeTimes->{3.8994816247038984`*^9, 3.899756185325593*^9},
 CellLabel->"Out[957]=",
 CellID->557292175,ExpressionUUID->"1ab89267-5cd7-400f-b33a-ed1dc177a33a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3/2 has a period of 0.", "MathCaption",
 CellChangeTimes->{{3.899481640751215*^9, 3.8994816498846316`*^9}},
 CellID->35640176,ExpressionUUID->"0895c618-4f78-4287-800d-c9da46d5d6e1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  FractionBox["3", "2"], "]"}]], "Input",
 CellChangeTimes->{{3.8994816505907173`*^9, 3.8994816522726297`*^9}},
 CellLabel->"In[958]:=",
 CellID->761312723,ExpressionUUID->"4f44618c-c69e-4b3f-ae4a-5c54a9fc213a"],

Cell[BoxData["1.5`"], "Output",
 CellChangeTimes->{3.8994816527176285`*^9, 3.899756187295591*^9},
 CellLabel->"Out[958]=",
 CellID->290448543,ExpressionUUID->"557767f1-b18d-4649-9ff7-b43dfe4dd806"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", 
  FractionBox["3", "2"], "]"}]], "Input",
 CellChangeTimes->{{3.8994816560287375`*^9, 3.8994816593812532`*^9}},
 CellLabel->"In[959]:=",
 CellID->60940240,ExpressionUUID->"5b85de49-9dc3-4461-877a-3be76585719b"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.899481659814252*^9, 3.899756189227592*^9},
 CellLabel->"Out[959]=",
 CellID->200714134,ExpressionUUID->"7d79b558-375f-4098-be93-fd87883efdd0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
A unit fraction contains 1 in the numerator. The decimal representation of \
the unit fractions with denominators 2 to 10 are given.\
\>", "MathCaption",
 CellChangeTimes->{{3.899481966032922*^9, 3.8994819849094625`*^9}},
 CellID->459322947,ExpressionUUID->"f97d4a5a-ddec-4c1e-ae34-a824df72eb1d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<fraction\>\"", "->", 
        FractionBox["1", "#"]}], ",", 
       RowBox[{"\"\<decimal\>\"", "->", 
        RowBox[{"N", "[", 
         FractionBox["1", "#"], "]"}]}]}], "|>"}], "&"}], "]"}], "[", 
   RowBox[{"Range", "[", 
    RowBox[{"2", ",", "10", ",", "1"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.899482148578165*^9, 3.8994821519134526`*^9}, 
   3.899482218335225*^9, {3.8994823564925113`*^9, 3.8994823679110875`*^9}},
 CellLabel->"In[38]:=",
 CellID->132252402,ExpressionUUID->"25b952b0-584d-449c-9a21-94871f813bfa"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      2 -> <|"fraction" -> Rational[1, 2], "decimal" -> 0.5|>, 
       3 -> <|"fraction" -> Rational[1, 3], "decimal" -> 0.3333333333333333|>,
        4 -> <|"fraction" -> Rational[1, 4], "decimal" -> 0.25|>, 
       5 -> <|"fraction" -> Rational[1, 5], "decimal" -> 0.2|>, 
       6 -> <|"fraction" -> Rational[1, 6], "decimal" -> 
         0.16666666666666666`|>, 
       7 -> <|"fraction" -> Rational[1, 7], "decimal" -> 
         0.14285714285714285`|>, 
       8 -> <|"fraction" -> Rational[1, 8], "decimal" -> 0.125|>, 
       9 -> <|"fraction" -> Rational[1, 9], "decimal" -> 0.1111111111111111|>,
        10 -> <|"fraction" -> Rational[1, 10], "decimal" -> 0.1|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[10]} -> 1, {All, "fraction"} -> 
        1, {All, "decimal"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "fraction" -> TypeSystem`PackageScope`AtomShape[60], "decimal" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 2, {All}]]], 9, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"fraction", "decimal"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 9], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[10]} -> 1, {All, "fraction"} -> 
        1, {All, "decimal"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "fraction" -> TypeSystem`PackageScope`AtomShape[60], "decimal" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 2, {All}]]], 9, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"fraction", "decimal"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 9], "Path" -> {}, "DisplayedRowCount" -> 9, 
     "DisplayedColumnCount" -> 2, "DataRowCount" -> 9, "DataColumnCount" -> 2,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["fraction", 
                  Style[
                  "fraction", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "fraction"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "fraction"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["decimal", 
                  Style[
                  "decimal", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "decimal"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "decimal"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1/2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["fraction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["decimal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1/3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["fraction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.333333"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["decimal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1/4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["fraction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["decimal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1/5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["fraction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["decimal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1/6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["fraction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.166667"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["decimal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1/7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["fraction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.142857"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["decimal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1/8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["fraction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.125"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["decimal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1/9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["fraction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.111111"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["decimal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1/10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["fraction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["decimal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{179., {140.8544921875, 146.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{179., {140.8544921875, 146.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.899482152345455*^9, {3.899482361305744*^9, 3.899482368658664*^9}},
 CellLabel->"Out[38]=",
 CellID->504232840,ExpressionUUID->"aeeba037-969f-4bfa-bc37-e306dc3d9553"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "We can indicate the part that is repeating with a vinculum like this. ",
 Cell[BoxData[
  RowBox[{"0.", 
   OverscriptBox["142857", "_"]}]], "InlineFormula",ExpressionUUID->
  "43c90c97-7c28-4e62-8023-b4a2f611aa3b"]
}], "MathCaption",
 CellChangeTimes->{{3.8994820129069304`*^9, 3.8994820237666235`*^9}, {
  3.899482390764577*^9, 3.899482404808361*^9}},
 CellID->142153006,ExpressionUUID->"fd948e92-998d-4c3e-b2d5-953325fa3c62"],

Cell[TextData[{
 "Where ",
 Cell[BoxData[
  RowBox[{"0.1", 
   OverscriptBox["6", "_"]}]], "InlineFormula",ExpressionUUID->
  "0da3e56d-3d52-43ea-a792-63d8a14878f7"],
 " means ",
 Cell[BoxData[
  RowBox[{"0.1666666666666666666666666666666666666666", "\[Ellipsis]"}]], 
  "InlineFormula",ExpressionUUID->"6a355c84-0080-4453-a264-7c49783eaf70"],
 ", and has a 1 digit recurring cycle. It can be seen that ",
 Cell[BoxData[
  FractionBox["1", "7"]], "InlineFormula",ExpressionUUID->
  "73628025-3e1f-4320-afa4-10cddd39a12f"],
 " has a 6-digit recurring cycle."
}], "MathCaption",
 CellChangeTimes->{{3.8994824079942455`*^9, 3.8994824751148434`*^9}},
 CellID->468172920,ExpressionUUID->"2a57c3cf-65e5-4384-b325-502dd44de2ff"],

Cell[CellGroupData[{

Cell[TextData[{
 "Find the value of ",
 Cell[BoxData[
  RowBox[{"d", "<", "1000"}]], "InlineFormula",ExpressionUUID->
  "d0bd93e5-f1a3-4404-956f-b7b483092f3d"],
 " for which ",
 Cell[BoxData[
  FractionBox["1", "d"]], "InlineFormula",ExpressionUUID->
  "ec513b69-39f2-4708-9d57-00b0f4e2e886"],
 " contains the largest recurring cycle in its decimal fraction part."
}], "MathCaption",
 CellChangeTimes->{{3.8994824773098264`*^9, 3.8994825026581497`*^9}},
 CellID->75005970,ExpressionUUID->"c03cc458-51df-4212-9407-552a57f52415"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EchoTiming", "[", 
  RowBox[{
   RowBox[{"MaximalBy", "[", 
    RowBox[{
     RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", 
      FractionBox["1", "#"], "]"}], "&"}], "]"}], "[", 
   RowBox[{"Cases", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"#", "<", "1000"}], "&"}], "]"}], "[", 
      RowBox[{"Range", "[", "1000", "]"}], "]"}], ",", 
     RowBox[{"Except", "[", "1", "]"}]}], 
    RowBox[{"(*", 
     RowBox[{"because", " ", 
      RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", "1", "]"}], " ", 
      "just", " ", "returns", " ", 
      RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", "1", "]"}]}], 
     "*)"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8994825080449457`*^9, 3.899482622527788*^9}},
 CellLabel->"In[45]:=",
 CellID->696606258,ExpressionUUID->"f970e735-390f-436d-8c7c-7bae04d49449"],

Cell[BoxData["0.0232995`"], "EchoTiming",
 CellChangeTimes->{3.899482622874789*^9},
 CellID->114796685,ExpressionUUID->"59ca79eb-3083-4435-8983-4b9f3a0a2584"],

Cell[BoxData[
 RowBox[{"{", "983", "}"}]], "Output",
 CellChangeTimes->{
  3.8994825676752696`*^9, {3.8994826144469543`*^9, 3.899482623915003*^9}},
 CellLabel->"Out[45]=",
 CellID->36436604,ExpressionUUID->"e6644532-529a-4b3f-ba29-f33686874e36"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["We can use Identity@@ to get just the number.", "MathCaption",
 CellChangeTimes->{{3.899482637059132*^9, 3.899482644152088*^9}},
 CellID->595536278,ExpressionUUID->"bd863212-78c1-486e-b47c-45a2091ec4f4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EchoTiming", "[", 
  RowBox[{"Identity", "@@", 
   RowBox[{
    RowBox[{"MaximalBy", "[", 
     RowBox[{
      RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", 
       FractionBox["1", "#"], "]"}], "&"}], "]"}], "[", 
    RowBox[{"Cases", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"#", "<", "1000"}], "&"}], "]"}], "[", 
       RowBox[{"Range", "[", "1000", "]"}], "]"}], ",", 
      RowBox[{"Except", "[", "1", "]"}]}], 
     RowBox[{"(*", 
      RowBox[{"because", " ", 
       RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", "1", "]"}], " ", 
       "just", " ", "returns", " ", 
       RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", "1", "]"}]}], 
      "*)"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8994825080449457`*^9, 3.8994826498582063`*^9}},
 CellLabel->"In[46]:=",
 CellID->135456001,ExpressionUUID->"46e0527e-8728-4528-b21b-df8c61612973"],

Cell[BoxData["0.023724`"], "EchoTiming",
 CellChangeTimes->{3.899482650165243*^9},
 CellID->47425443,ExpressionUUID->"51dd46f4-e447-4abd-b063-81cf9b93fdd6"],

Cell[BoxData["983"], "Output",
 CellChangeTimes->{3.899482651158207*^9},
 CellLabel->"Out[46]=",
 CellID->3416495,ExpressionUUID->"5bb058e4-9ee0-4370-89e5-37d1fa349c57"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["We can use EchoPerformance to see how much memory we used.", \
"MathCaption",
 CellChangeTimes->{{3.8994826561954193`*^9, 3.8994826657559032`*^9}},
 CellID->197268136,ExpressionUUID->"33a53b23-34b2-4045-ae49-cf092334ac45"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<EchoPerformance\>\"", "]"}], "[", 
  RowBox[{"Identity", "@@", 
   RowBox[{
    RowBox[{"MaximalBy", "[", 
     RowBox[{
      RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", 
       FractionBox["1", "#"], "]"}], "&"}], "]"}], "[", 
    RowBox[{"Cases", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"#", "<", "1000"}], "&"}], "]"}], "[", 
       RowBox[{"Range", "[", "1000", "]"}], "]"}], ",", 
      RowBox[{"Except", "[", "1", "]"}]}], 
     RowBox[{"(*", 
      RowBox[{"because", " ", 
       RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", "1", "]"}], " ", 
       "just", " ", "returns", " ", 
       RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", "1", "]"}]}], 
      "*)"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8994825080449457`*^9, 3.899482672855094*^9}},
 CellLabel->"In[47]:=",
 CellID->325931600,ExpressionUUID->"eb62e1e4-e1e4-496b-be27-d691bbbf6955"],

Cell[BoxData[
 RowBox[{
  TagBox["Apply",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    StyleBox[
     TemplateBox[{"0.0227526`", "\" s\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]], ",", 
    StyleBox[
     TemplateBox[{"91480", "\" B\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]]}], "}"}]}]], "Echo",
 CellChangeTimes->{3.899482676711325*^9},
 CellID->211601392,ExpressionUUID->"62186698-3b1f-49d5-9ba0-a278fb2c8bc9"],

Cell[BoxData["983"], "Output",
 CellChangeTimes->{3.8994826778391857`*^9},
 CellLabel->"Out[47]=",
 CellID->24671701,ExpressionUUID->"1990d81e-789f-4f56-9026-241077882bfd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "This is how I solved ",
 ButtonBox["Project Euler Problem 26 Reciprocal Cycles",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://projecteuler.net/problem=26"], None},
  ButtonNote->"https://projecteuler.net/problem=26"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.89948269322202*^9, 3.8994827104953413`*^9}},
 CellID->109955765,ExpressionUUID->"711e8d49-565a-410f-b53e-6aa771c16c39"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "fd152907-188c-4645-afb5-8059172bcf48"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->65014155,ExpressionUUID->"180b6c70-7e5f-4bbd-90d1-069f3eb20d5e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Make a sequence of the running maximum in terms of the number with the \
maximum repeating decimal period for ",
 Cell[BoxData[
  FractionBox["1", "n"]], "InlineFormula",ExpressionUUID->
  "48432e7e-d443-4a8e-993e-cfc3959387fd"],
 " for the first 54 numbers."
}], "MathCaption",
 CellChangeTimes->{{3.8994829167186475`*^9, 3.899482936376564*^9}, {
  3.899483125559619*^9, 3.8994831303443513`*^9}},
 CellID->213110306,ExpressionUUID->"4689deef-3f53-4762-bcf6-1bca4d2ad5b8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", 
    RowBox[{"Array", "[", 
     RowBox[{
      RowBox[{
       FractionBox["1", "#"], "&"}], ",", "54", ",", "2"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.899482946860044*^9, 3.8994829477066803`*^9}, {
  3.89948304194496*^9, 3.8994830468160048`*^9}, {3.899483153572274*^9, 
  3.899483153834276*^9}},
 CellLabel->"In[36]:=",
 CellID->149658206,ExpressionUUID->"53c619ad-322b-43f0-85a5-a323204aed21"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"runningMaximum", "=", 
  RowBox[{"Rest", "@", 
   RowBox[{"FoldList", "[", 
    RowBox[{"Max", ",", 
     RowBox[{"First", "[", "list", "]"}], ",", 
     RowBox[{"Rest", "[", "list", "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8994829421938543`*^9, 3.8994829421958556`*^9}, {
   3.89948305490635*^9, 3.899483083211236*^9}, 3.8994831567808514`*^9},
 CellLabel->"In[37]:=",
 CellID->174838792,ExpressionUUID->"78eb14b9-f252-4d3d-b382-324aaf758e31"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "1", ",", "1", ",", "6", ",", "6", ",", "6", ",", "6", 
   ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "16", ",",
    "16", ",", "18", ",", "18", ",", "18", ",", "18", ",", "22", ",", "22", 
   ",", "22", ",", "22", ",", "22", ",", "22", ",", "28", ",", "28", ",", 
   "28", ",", "28", ",", "28", ",", "28", ",", "28", ",", "28", ",", "28", 
   ",", "28", ",", "28", ",", "28", ",", "28", ",", "28", ",", "28", ",", 
   "28", ",", "28", ",", "28", ",", "46", ",", "46", ",", "46", ",", "46", 
   ",", "46", ",", "46", ",", "46", ",", "46", ",", "46"}], "}"}]], "Output",
 CellChangeTimes->{3.8994831572698526`*^9, 3.899537654290551*^9},
 CellLabel->"Out[37]=",
 CellID->6197371,ExpressionUUID->"51bb7890-f244-4d8c-925f-c6c1f0d65b4f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Rest", "@", 
    RowBox[{"FoldList", "[", 
     RowBox[{"Max", ",", 
      RowBox[{"First", "[", "list", "]"}], ",", 
      RowBox[{"Rest", "[", "list", "]"}]}], "]"}]}], ",", 
   RowBox[{"ImageSize", "->", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.899483061624015*^9, 3.8994831154987216`*^9}},
 CellLabel->"In[71]:=",
 CellID->758948014,ExpressionUUID->"1153f585-f64e-4589-9f7f-50e5c57940d5"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[2], 
         LineBox[CompressedData["
1:eJx1yTkKAlEQRdGHkaGBgYGBioiINE7trN3OQ+gSBGO30Et2CSqWyL9YHz6X
U696vV9uOUnx67/7eY8krNLQebgAF80lp2W4AtfgOtyAm3ALbsORteO0a+05
7cMDOLYOnY7gMTyBp/DMOne6gJdwAqehM1gr7LDW2GFtsMPaYoe1ww5rj/3r
w/9mvB+xwzphh3XG/vMTDq07nw==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
          Annotation[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              Rational[1, 60]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1:eJx1yTkKAlEQRdGHkaGBgYGBioiINE7trN3OQ+gSBGO30Et2CSqWyL9YHz6X
U696vV9uOUnx67/7eY8krNLQebgAF80lp2W4AtfgOtyAm3ALbsORteO0a+05
7cMDOLYOnY7gMTyBp/DMOne6gJdwAqehM1gr7LDW2GFtsMPaYoe1ww5rj/3r
w/9mvB+xwzphh3XG/vMTDq07nw==
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0., 53.}, {0, 46.}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0., 0}, "ImageSize" -> {680, 680/GoldenRatio}, 
           "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              PointSize[
               Rational[1, 60]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0., 53.}, {0, 46.}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0., 0}, "ImageSize" -> {680, 680/GoldenRatio}, 
          "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             PointSize[
              Rational[1, 60]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListLinePlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 60]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJx1yTkKAlEQRdGHkaGBgYGBioiINE7trN3OQ+gSBGO30Et2CSqWyL9YHz6X
U696vV9uOUnx67/7eY8krNLQebgAF80lp2W4AtfgOtyAm3ALbsORteO0a+05
7cMDOLYOnY7gMTyBp/DMOne6gJdwAqehM1gr7LDW2GFtsMPaYoe1ww5rj/3r
w/9mvB+xwzphh3XG/vMTDq07nw==
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0., 53.}, {0, 46.}}, 
        "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0., 0}, 
        "ImageSize" -> {680, 680/GoldenRatio}, "Axes" -> {True, True}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[
            Rational[1, 60]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListLinePlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Full,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 53.}, {0, 46.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8994830654607472`*^9, 3.899483115934721*^9}, 
   3.899483161479889*^9},
 CellLabel->"Out[71]=",
 CellID->52008308,ExpressionUUID->"22fd05f1-98b4-4409-85ea-ab763a47ec29"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Make a list for the first 1000 numbers.", "MathCaption",
 CellChangeTimes->{{3.8994831338479533`*^9, 3.8994831390597577`*^9}},
 CellID->123945420,ExpressionUUID->"eafc12a1-d939-4aad-ba9d-c6e541a9f36c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"RationalNumberRepeatingDecimalPeriod", "[", 
    RowBox[{"Array", "[", 
     RowBox[{
      RowBox[{
       FractionBox["1", "#"], "&"}], ",", "1000", ",", "2"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.899482946860044*^9, 3.8994829477066803`*^9}, {
  3.89948304194496*^9, 3.8994830468160048`*^9}},
 CellLabel->"In[60]:=",
 CellID->121949185,ExpressionUUID->"2ccab35f-9449-4f09-8f08-3dc6dd7e6254"],

Cell[BoxData[
 RowBox[{
  RowBox[{"runningMaximum", "=", 
   RowBox[{"Rest", "@", 
    RowBox[{"FoldList", "[", 
     RowBox[{"Max", ",", 
      RowBox[{"First", "[", "list", "]"}], ",", 
      RowBox[{"Rest", "[", "list", "]"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8994829421938543`*^9, 3.8994829421958556`*^9}, {
  3.89948305490635*^9, 3.899483083211236*^9}},
 CellLabel->"In[65]:=",
 CellID->112015657,ExpressionUUID->"1d9835b3-7330-4e53-9763-7fb035d14764"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Rest", "@", 
    RowBox[{"FoldList", "[", 
     RowBox[{"Max", ",", 
      RowBox[{"First", "[", "list", "]"}], ",", 
      RowBox[{"Rest", "[", "list", "]"}]}], "]"}]}], ",", 
   RowBox[{"ImageSize", "->", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.899483061624015*^9, 3.8994831154987216`*^9}},
 CellLabel->"In[68]:=",
 CellID->397875431,ExpressionUUID->"59a67e9d-7f47-4291-a2ac-af9480e928bb"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[2], 
         LineBox[CompressedData["
1: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
Xw==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
          Annotation[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1: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
Xw==
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0., 999.}, {0, 982.}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0., 0}, "ImageSize" -> {680, 680/GoldenRatio}, 
           "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              PointSize[
               Rational[1, 90]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0., 999.}, {0, 982.}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0., 0}, "ImageSize" -> {680, 680/GoldenRatio}, 
          "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListLinePlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 90]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
Xw==
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0., 999.}, {0, 982.}}, 
        "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0., 0}, 
        "ImageSize" -> {680, 680/GoldenRatio}, "Axes" -> {True, True}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[
            Rational[1, 90]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListLinePlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Full,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 999.}, {0, 982.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8994830654607472`*^9, 3.899483115934721*^9}},
 CellLabel->"Out[68]=",
 CellID->797935073,ExpressionUUID->"beb37bcc-3ed4-45ce-9b80-166a8fcfd2ed"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Related Guides", "TutorialMoreAboutSection",
 CellChangeTimes->{{3.843042384656711*^9, 3.843042386024461*^9}},
 CellID->319113236,ExpressionUUID->"38f6f3f7-663b-4155-80a4-fc2753b4d61e"],

Cell["XXXX", "TutorialMoreAbout",
 CellID->397623687,ExpressionUUID->"329c50d5-b351-4998-83de-ee1458e7a1fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Tech Notes", "RelatedTutorialsSection",
 CellID->102476560,ExpressionUUID->"65af0df0-4d7c-4fc1-b910-d76df6df7a60"],

Cell["XXXX", "RelatedTutorials",
 CellID->764289865,ExpressionUUID->"193fea5f-5f21-460b-b007-f875ee9865ab"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Metadata", "MetadataSection",
 CellID->260249375,ExpressionUUID->"e162b4a3-a741-4939-8d75-23a3390e690e"],

Cell[TextData[{
 "New in: ",
 Cell["XX", "HistoryData",
  CellTags->"New",ExpressionUUID->"7a0ee3b9-3785-4a92-be77-fc971a05b76d"],
 " | Modified in: ",
 Cell[" ", "HistoryData",
  CellTags->"Modified",ExpressionUUID->"60341721-37ce-4a4f-a59b-2f46ab8f4609"],
 " | Obsolete in: ",
 Cell[" ", "HistoryData",
  CellTags->"Obsolete",ExpressionUUID->"0cfbca59-a143-4b17-a314-b7150edac411"]
}], "History",
 CellID->88515623,ExpressionUUID->"52c86799-391e-4738-afdb-f7cb626c061d"],

Cell[CellGroupData[{

Cell["Categorization", "CategorizationSection",
 CellID->84870436,ExpressionUUID->"2317408a-b0cf-40ee-b270-5d829bfc5516"],

Cell["Tech Note", "Categorization",
 CellLabel->"Entity Type",
 CellID->75802468,ExpressionUUID->"019d9434-6ddc-4d11-b770-08e8ef15f2c2"],

Cell["PeterBurbery/Combinatorics", "Categorization",
 CellLabel->"Paclet Name",
 CellID->5243965,ExpressionUUID->"8d8f8b5b-4328-40fb-b4e8-980e49c5deac"],

Cell["PeterBurbery`Combinatorics`", "Categorization",
 CellLabel->"Context",
 CellID->202648035,ExpressionUUID->"4a169815-3439-498d-89b3-a3df68f2c1ef"],

Cell["PeterBurbery/Combinatorics/tutorial/DebuggingTechNote", "Categorization",
 CellLabel->"URI",
 CellID->30219020,ExpressionUUID->"a287fae2-0488-439c-83d6-0b68c7add00b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Keywords", "KeywordsSection",
 CellID->181903197,ExpressionUUID->"1077d196-9829-4c1e-8843-5aad072879a9"],

Cell["XXXX", "Keywords",
 CellID->120038043,ExpressionUUID->"edabd9c5-564b-4d94-b597-69c30b6cfb2a"]
}, Closed]]
}, Open  ]]
},
InitializationCellWarning->False,
WindowSize->{574.8, 579.6},
WindowMargins->{{Automatic, -4.7999999999999545`}, {Automatic, 0}},
TaggingRules-><|"Paclet" -> "PeterBurbery/Combinatorics"|>,
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (June 3, 2023)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "TechNotePageStylesExt.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"1a237bd5-3dca-4c9e-b5db-1365c2079e28"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 109, 1, 114, "Title",ExpressionUUID->"a8961241-0d39-4547-9266-014e8abbc7b0",
 CellID->215299574],
Cell[692, 25, 274, 5, 25, "Text",ExpressionUUID->"c6919fc7-eef0-43d0-858b-6be6759319ea",
 CellID->106321115],
Cell[CellGroupData[{
Cell[991, 34, 415, 9, 44, "Text",ExpressionUUID->"205e7eae-9dce-42be-b5c6-f25d6cc426f8",
 CellID->345096676],
Cell[1409, 45, 286, 5, 41, "Input",ExpressionUUID->"7b9224a1-619e-4df5-9c4d-42b47484a2e7",
 InitializationCell->True,
 CellID->13366579]
}, Closed]],
Cell[CellGroupData[{
Cell[1732, 55, 167, 2, 45, "Section",ExpressionUUID->"a5ac6cb3-dee1-415a-afca-41b4a47a1093",
 CellID->12394907],
Cell[1902, 59, 2616, 67, 143, "DefinitionBox",ExpressionUUID->"367ecf0c-1016-47bc-aa73-7387ff60232b",
 CellID->124942403],
Cell[4521, 128, 216, 2, 30, "Caption",ExpressionUUID->"bde9c496-e7f7-4604-936c-c92dc391db51",
 CellID->520428306],
Cell[CellGroupData[{
Cell[4762, 134, 251, 3, 40, "MathCaption",ExpressionUUID->"f4087dd3-fb34-4fde-b17e-915cbb3a680f",
 CellID->31903801],
Cell[CellGroupData[{
Cell[5038, 141, 394, 8, 25, "Input",ExpressionUUID->"3f5997e0-423d-4f31-90c1-ed4683bc9fa3",
 CellID->2966739],
Cell[5435, 151, 265, 6, 21, "Echo",ExpressionUUID->"82d65a7c-4364-447c-9954-e9ffaf23b87a",
 CellID->595052515],
Cell[5703, 159, 320, 5, 24, "Output",ExpressionUUID->"bcf4d647-f02f-467b-a1d7-f08f35e65ed6",
 CellID->121226746]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6072, 170, 188, 2, 40, "MathCaption",ExpressionUUID->"682fe2b7-c8a6-4d0e-ad99-989c3d75da95",
 CellID->591549556],
Cell[CellGroupData[{
Cell[6285, 176, 288, 6, 25, "Input",ExpressionUUID->"df0852ab-3a78-4d61-b06f-920cddafc4cf",
 CellID->281752241],
Cell[6576, 184, 373, 9, 24, "Output",ExpressionUUID->"12ff6b0d-ff18-4c9b-b050-f8eced3e4343",
 CellID->255390473]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6998, 199, 501, 8, 74, "MathCaption",ExpressionUUID->"29d643e4-853d-4ee4-8ad0-db96a7ed6d8a",
 CellID->114128779],
Cell[CellGroupData[{
Cell[7524, 211, 719, 18, 48, "Input",ExpressionUUID->"2428f0be-86d5-4528-a068-83f675168931",
 CellID->123225409],
Cell[8246, 231, 303, 7, 24, "Output",ExpressionUUID->"102082ee-9525-446a-a7da-a718398a9d6a",
 CellID->565924694]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8598, 244, 240, 4, 40, "MathCaption",ExpressionUUID->"1afcc58f-7cb8-4a69-9589-4aab3ff9003f",
 CellID->198474650],
Cell[CellGroupData[{
Cell[8863, 252, 756, 19, 48, "Input",ExpressionUUID->"12141eee-d52b-4560-9cf3-3dd2f0445e37",
 CellID->96415675],
Cell[9622, 273, 300, 7, 24, "Output",ExpressionUUID->"79e612ed-70d7-44e4-8708-f363c6a32873",
 CellID->187311040]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9971, 286, 192, 2, 40, "MathCaption",ExpressionUUID->"c53527e9-2094-46af-b1af-40ce848e6dd3",
 CellID->460961065],
Cell[CellGroupData[{
Cell[10188, 292, 814, 20, 68, "Input",ExpressionUUID->"56fbd744-59f8-4d79-a343-720b29c60b6d",
 CellID->348169710],
Cell[11005, 314, 176, 3, 24, "Output",ExpressionUUID->"108b4388-ef26-4958-9abd-faa588f4435b",
 CellID->12882949]
}, Open  ]]
}, Open  ]],
Cell[11208, 321, 187, 2, 40, "MathCaption",ExpressionUUID->"4f7ae5c4-d3ca-42fd-b5ad-627258b608de",
 CellID->215938530],
Cell[CellGroupData[{
Cell[11420, 327, 190, 2, 40, "MathCaption",ExpressionUUID->"263a9d9c-30d3-4add-9636-ee95d42a4bb0",
 CellID->142381604],
Cell[CellGroupData[{
Cell[11635, 333, 390, 8, 25, "Input",ExpressionUUID->"ad06cb61-985c-41ac-bf6c-162ccc658cf8",
 CellID->347150823],
Cell[12028, 343, 194, 3, 24, "Output",ExpressionUUID->"c7b0f5d7-fe46-465c-941a-fdc201ee9134",
 CellID->160256386]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12271, 352, 182, 2, 40, "MathCaption",ExpressionUUID->"33bfb781-d7eb-4ceb-bbc1-ed090cfa6a24",
 CellID->9730894],
Cell[CellGroupData[{
Cell[12478, 358, 335, 6, 25, "Input",ExpressionUUID->"8abcf8e3-3b40-42a8-ab35-dbdd2b4d6b21",
 CellID->172885937],
Cell[12816, 366, 302, 7, 24, "Output",ExpressionUUID->"9db9b21e-ebca-4d24-9206-0883929341f5",
 CellID->13566930]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[13167, 379, 209, 2, 40, "MathCaption",ExpressionUUID->"881af622-60de-4230-abe2-d7afe6bc5264",
 CellID->237155657],
Cell[CellGroupData[{
Cell[13401, 385, 249, 4, 25, "Input",ExpressionUUID->"2d5fe6fb-f286-4ace-9de7-f8237ef71a18",
 CellID->114626256],
Cell[13653, 391, 199, 3, 24, "Output",ExpressionUUID->"dc8f6cc4-54c6-45db-a4bd-5281b33afb1b",
 CellID->21111411]
}, Open  ]],
Cell[CellGroupData[{
Cell[13889, 399, 247, 4, 25, "Input",ExpressionUUID->"75445815-767d-4771-8ff3-597ed0e50237",
 CellID->72962348],
Cell[14139, 405, 252, 6, 24, "Output",ExpressionUUID->"085242b3-1787-425f-834a-9ee7e1d00bb6",
 CellID->144120138]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[14440, 417, 197, 2, 40, "MathCaption",ExpressionUUID->"8f60b452-3e88-4eb5-8a36-9f29942d66ec",
 CellID->172959633],
Cell[CellGroupData[{
Cell[14662, 423, 331, 7, 25, "Input",ExpressionUUID->"28079067-6d00-42f3-a13f-9a7e1bd1f147",
 CellID->103210421],
Cell[14996, 432, 251, 7, 42, "Output",ExpressionUUID->"6f41a2a7-17b8-4a2b-9ae2-9871c8b4ca5e",
 CellID->78156444]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[15296, 445, 189, 2, 40, "MathCaption",ExpressionUUID->"b8c637c9-0d48-4802-a501-a247d7345ef3",
 CellID->452686366],
Cell[CellGroupData[{
Cell[15510, 451, 478, 12, 25, "Input",ExpressionUUID->"cd94678c-4a81-409c-8801-d5ed9fc61965",
 CellID->422387114],
Cell[15991, 465, 83289, 1589, 617, "Output",ExpressionUUID->"2c7c8f29-ced9-420c-837b-dcd33497ff89",
 CellID->209532304]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[99329, 2060, 619, 19, 54, "MathCaption",ExpressionUUID->"ebf982ea-4cf0-4a7c-9ade-e2d639c50e86",
 CellID->56151557],
Cell[CellGroupData[{
Cell[99973, 2083, 626, 15, 48, "Input",ExpressionUUID->"11552cfb-3099-4de2-90e2-a98d74249d80",
 CellID->392545453],
Cell[100602, 2100, 43140, 808, 299, "Output",ExpressionUUID->"106359a4-0711-4f11-ab6a-71a75e195bbb",
 CellID->242033643]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[143791, 2914, 374, 9, 40, "MathCaption",ExpressionUUID->"c6f1e992-94fd-4d45-a14b-275c04497c74",
 CellID->100832978],
Cell[CellGroupData[{
Cell[144190, 2927, 302, 7, 25, "Input",ExpressionUUID->"695abd8c-b232-4953-a711-0411e449964d",
 CellID->438135564],
Cell[144495, 2936, 262, 4, 24, "Output",ExpressionUUID->"b4f1b1d3-b0a4-4090-83ac-07bc6f9696fa",
 CellID->287705978]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[144806, 2946, 248, 3, 40, "MathCaption",ExpressionUUID->"d96347d8-82cf-4b6c-96b7-fcad0f75c70e",
 CellID->139662984],
Cell[CellGroupData[{
Cell[145079, 2953, 516, 13, 43, "Input",ExpressionUUID->"669c0c95-4640-4e4e-8df0-f7b3e415ac0a",
 CellID->398286937],
Cell[145598, 2968, 83162, 1587, 617, "Output",ExpressionUUID->"e00771c1-2707-421f-96a2-80fa858cbb49",
 CellID->52134645]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[228809, 4561, 818, 24, 58, "MathCaption",ExpressionUUID->"4c43c079-cd1c-4d68-806e-92e83d1f6205",
 CellID->254962743],
Cell[CellGroupData[{
Cell[229652, 4589, 700, 22, 53, "Input",ExpressionUUID->"b0e35ff1-3ba4-4d15-8afd-c10426d7e759",
 CellID->208306947],
Cell[230355, 4613, 198, 3, 24, "Output",ExpressionUUID->"d6e34d62-e923-4851-8660-1c39221585d9",
 CellID->2750224]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[230602, 4622, 187, 2, 40, "MathCaption",ExpressionUUID->"4e0815fe-1955-4559-84ef-2e6f947a7754",
 CellID->48756516],
Cell[CellGroupData[{
Cell[230814, 4628, 2043, 56, 174, "Input",ExpressionUUID->"f3409fa1-b43c-45e1-a830-6ba77356c148",
 CellID->415836666],
Cell[232860, 4686, 109753, 2157, 617, "Output",ExpressionUUID->"943b8ea6-acb5-4464-99d2-98e8affbc651",
 CellID->14127691]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[342662, 6849, 239, 4, 40, "MathCaption",ExpressionUUID->"f00672ff-d62b-4fe1-8c6a-8a7019166b31",
 CellID->699600308],
Cell[CellGroupData[{
Cell[342926, 6857, 2041, 56, 174, "Input",ExpressionUUID->"545222d0-7189-4391-b695-82532691f724",
 CellID->6091911],
Cell[344970, 6915, 94135, 1864, 596, "Output",ExpressionUUID->"6fe15111-1d05-49f6-a419-5b3c780d4189",
 CellID->222447527]
}, Open  ]]
}, Open  ]],
Cell[439132, 8783, 524, 16, 40, "MathCaption",ExpressionUUID->"57c2524f-5795-47c8-8152-397a26fe408f",
 CellID->259341750],
Cell[CellGroupData[{
Cell[439681, 8803, 470, 11, 40, "MathCaption",ExpressionUUID->"d6f6adff-8c6a-4956-b36d-3a190a0386a1",
 CellID->20786854],
Cell[CellGroupData[{
Cell[440176, 8818, 706, 17, 43, "Input",ExpressionUUID->"6672568a-3f23-4520-adc0-62fa199e0b25",
 CellID->712923585],
Cell[440885, 8837, 1208, 30, 24, "Output",ExpressionUUID->"4a225975-91eb-4734-9aec-397ba42dbb76",
 CellID->221917247]
}, Open  ]],
Cell[CellGroupData[{
Cell[442130, 8872, 308, 6, 25, "Input",ExpressionUUID->"c0aa467d-e5d2-40d1-bb5b-d41f08f80b17",
 CellID->407433582],
Cell[442441, 8880, 3441, 90, 24, "Output",ExpressionUUID->"4a6d900a-0908-43ed-8f0c-48cd3809a924",
 CellID->898697144]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[445931, 8976, 189, 2, 40, "MathCaption",ExpressionUUID->"935b725b-43a0-4b93-893a-4c9095cebcb6",
 CellID->194380331],
Cell[CellGroupData[{
Cell[446145, 8982, 273, 5, 25, "Input",ExpressionUUID->"4271b161-f6dc-4395-821e-e58d7d2cf2e5",
 CellID->653333490],
Cell[446421, 8989, 198, 3, 24, "Output",ExpressionUUID->"78184fcd-6787-46d0-b65e-e8c983499666",
 CellID->94900513]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[446668, 8998, 206, 2, 40, "MathCaption",ExpressionUUID->"5735fafe-c60b-4aac-b819-d03e66e43d4d",
 CellID->158717184],
Cell[CellGroupData[{
Cell[446899, 9004, 342, 6, 25, "Input",ExpressionUUID->"43451533-40d1-451f-96ab-7e6d04e2c0ae",
 CellID->414886273],
Cell[447244, 9012, 199, 3, 24, "Output",ExpressionUUID->"56275dc0-5539-4f73-9586-549a842bbe3b",
 CellID->63605416]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[447492, 9021, 215, 2, 40, "MathCaption",ExpressionUUID->"856dd0a5-e39b-4b64-b863-34827802e2ff",
 CellID->402703826],
Cell[CellGroupData[{
Cell[447732, 9027, 291, 5, 25, "Input",ExpressionUUID->"551f3ded-2bba-423b-bafe-16e9901235eb",
 CellID->1592074],
Cell[448026, 9034, 234, 4, 24, "Output",ExpressionUUID->"5422ae4c-fc0b-4b3f-8043-18086f2d5b27",
 CellID->9531058]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[448309, 9044, 252, 4, 40, "MathCaption",ExpressionUUID->"85550450-e8c6-4635-ba62-1e5a47dfa7e1",
 CellID->708478496],
Cell[CellGroupData[{
Cell[448586, 9052, 321, 6, 25, "Input",ExpressionUUID->"1099220b-6bb5-4eaa-a300-10e0191f5083",
 CellID->450230421],
Cell[448910, 9060, 878, 22, 24, "Output",ExpressionUUID->"8bfe7e4e-7cb6-4a5b-b408-47ddce84af2b",
 CellID->559918355]
}, Open  ]],
Cell[CellGroupData[{
Cell[449825, 9087, 349, 7, 25, "Input",ExpressionUUID->"be7c48bb-37e4-45db-888c-3d9f7bf977c8",
 CellID->212638519],
Cell[450177, 9096, 1390, 35, 24, "Output",ExpressionUUID->"2d81f388-0291-4c22-8a31-4729d603adb9",
 CellID->262429112]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[451616, 9137, 214, 2, 40, "MathCaption",ExpressionUUID->"28959380-7d27-4c36-b634-7769616c4f29",
 CellID->19185935],
Cell[CellGroupData[{
Cell[451855, 9143, 357, 7, 25, "Input",ExpressionUUID->"db5233bf-0d74-48c6-a079-813352917e91",
 CellID->65654456],
Cell[452215, 9152, 13436, 226, 183, "Output",ExpressionUUID->"4716b08f-49a8-454c-ba46-7842337b4207",
 CellID->270374302]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[465700, 9384, 186, 2, 40, "MathCaption",ExpressionUUID->"95403daa-8980-4d17-a1a1-196ae4605c63",
 CellID->288178981],
Cell[CellGroupData[{
Cell[465911, 9390, 282, 5, 25, "Input",ExpressionUUID->"13174a1b-d278-4e41-922e-df7435024425",
 CellID->153664891],
Cell[466196, 9397, 174, 3, 24, "Output",ExpressionUUID->"813acaa8-7db3-4d17-97ac-e34b53e248de",
 CellID->146476134]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[466419, 9406, 256, 5, 40, "MathCaption",ExpressionUUID->"1437a05a-dc2e-438f-b57b-30036d82a254",
 CellID->211204775],
Cell[CellGroupData[{
Cell[466700, 9415, 354, 6, 25, "Input",ExpressionUUID->"e5c67fde-b3cc-4265-8084-bce5d148f6f9",
 CellID->16120653],
Cell[467057, 9423, 199, 3, 24, "Output",ExpressionUUID->"a8e310a1-1a63-4ebf-8c94-3a36a6079bc3",
 CellID->333951188]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[467305, 9432, 206, 2, 40, "MathCaption",ExpressionUUID->"f9fd8d30-c3cb-49b6-a31b-bd89a6cbd243",
 CellID->103140816],
Cell[CellGroupData[{
Cell[467536, 9438, 340, 7, 25, "Input",ExpressionUUID->"e54cba96-76f8-4042-a5fc-5b2cc1e177a6",
 CellID->631127211],
Cell[467879, 9447, 9526, 161, 130, "Output",ExpressionUUID->"51408280-70da-4c3a-83a1-74c06946f874",
 CellID->36091011]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[477454, 9614, 449, 7, 91, "MathCaption",ExpressionUUID->"5dfcc4b6-c321-4f27-8924-a61ac498e87c",
 CellID->305515986],
Cell[CellGroupData[{
Cell[477928, 9625, 238, 5, 25, "Input",ExpressionUUID->"650ccf45-072a-4662-b6e4-64fff64ad865",
 CellID->39383660],
Cell[478169, 9632, 172, 3, 24, "Output",ExpressionUUID->"a7ede59a-a1fd-4743-8722-eb559461ad3d",
 CellID->103072013]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[478390, 9641, 235, 4, 40, "MathCaption",ExpressionUUID->"ab81e88e-b141-4d40-aad2-cf229678e584",
 CellID->17219148],
Cell[CellGroupData[{
Cell[478650, 9649, 220, 4, 25, "Input",ExpressionUUID->"185b2e2a-c365-4406-9fed-b4a1573545ea",
 CellID->47120929],
Cell[478873, 9655, 173, 3, 24, "Output",ExpressionUUID->"7cfd9c39-cd46-47ea-88f5-bdd47ff695d8",
 CellID->64792566]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[479095, 9664, 301, 5, 74, "MathCaption",ExpressionUUID->"ad828151-736c-43bd-81d4-d49439f20f80",
 CellID->14643919],
Cell[CellGroupData[{
Cell[479421, 9673, 656, 14, 78, "Input",ExpressionUUID->"989a0c1f-9627-4e1d-bcf2-d15bb508b551",
 CellID->37517731],
Cell[480080, 9689, 172, 3, 24, "Output",ExpressionUUID->"5048bd02-63df-47b3-ab8d-ae45aa71a95e",
 CellID->530337700]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[480301, 9698, 232, 3, 40, "MathCaption",ExpressionUUID->"2078d7d4-b841-49ab-9d3d-65c9621baaa4",
 CellID->968157184],
Cell[CellGroupData[{
Cell[480558, 9705, 455, 10, 25, "Input",ExpressionUUID->"a46e6f34-8dba-42fc-b6b7-896ffb4adbc0",
 CellID->702446134],
Cell[481016, 9717, 688, 17, 24, "Output",ExpressionUUID->"155f9620-589a-47f3-a15b-e83415b96f21",
 CellID->306566547]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[481753, 9740, 213, 3, 40, "MathCaption",ExpressionUUID->"ca576535-6d5b-4d95-8442-8e176024fd55",
 CellID->505671602],
Cell[CellGroupData[{
Cell[481991, 9747, 419, 10, 25, "Input",ExpressionUUID->"cadac715-2972-421b-b325-154e1756d009",
 CellID->618773088],
Cell[482413, 9759, 1914, 52, 77, "Output",ExpressionUUID->"5ff89afe-705e-4047-978d-fd8bea128a5a",
 CellID->525838052]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[484376, 9817, 322, 6, 40, "MathCaption",ExpressionUUID->"caa6738b-d790-45d6-a462-f179b33a96cf",
 CellID->330285041],
Cell[CellGroupData[{
Cell[484723, 9827, 329, 7, 25, "Input",ExpressionUUID->"659b7518-d316-46c8-8fac-cd17f91795a9",
 CellID->149666305],
Cell[485055, 9836, 225, 5, 24, "Output",ExpressionUUID->"9bbae189-9b67-445c-8983-dea270d066c6",
 CellID->164357416]
}, Open  ]],
Cell[CellGroupData[{
Cell[485317, 9846, 329, 7, 25, "Input",ExpressionUUID->"ab1f8aec-3bc1-47f5-9dfb-96a5e71515c4",
 CellID->279831655],
Cell[485649, 9855, 226, 5, 24, "Output",ExpressionUUID->"89c66e47-02b5-4422-b2d6-25d3a6ea72ff",
 CellID->240178721]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[485924, 9866, 244, 4, 40, "MathCaption",ExpressionUUID->"24fad50b-a699-49c6-b0c6-b6cd80d23a8e",
 CellID->377750434],
Cell[CellGroupData[{
Cell[486193, 9874, 452, 10, 43, "Input",ExpressionUUID->"c116060b-7fba-4bac-a70c-1f9a5b6d0e30",
 CellID->80880133],
Cell[486648, 9886, 818, 22, 42, "Output",ExpressionUUID->"0fa02146-6033-4fbd-83b7-2b87c07d0b10",
 CellID->99913589]
}, Open  ]],
Cell[CellGroupData[{
Cell[487503, 9913, 496, 11, 43, "Input",ExpressionUUID->"e123903f-d8e8-40ac-a83d-6a20632702fe",
 CellID->281231649],
Cell[488002, 9926, 650, 18, 24, "Output",ExpressionUUID->"fb21fd97-e85f-442b-aab7-402962c4d966",
 CellID->480068261]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[488701, 9950, 205, 2, 40, "MathCaption",ExpressionUUID->"281593b7-5d84-46ec-a880-cbd431c9ffe9",
 CellID->88233538],
Cell[CellGroupData[{
Cell[488931, 9956, 375, 8, 25, "Input",ExpressionUUID->"36c15090-bf2b-4437-acaf-eeea46e2a1d2",
 CellID->926616109],
Cell[489309, 9966, 625, 18, 24, "Output",ExpressionUUID->"1f6c6843-dbf6-4458-8490-2272edb972ae",
 CellID->78903040]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[489983, 9990, 195, 2, 40, "MathCaption",ExpressionUUID->"a5b83f39-cf1c-4472-a16b-59c9ed428e91",
 CellID->97113938],
Cell[CellGroupData[{
Cell[490203, 9996, 430, 10, 43, "Input",ExpressionUUID->"bef38fca-96c3-4712-9f8a-0a889181b4fc",
 CellID->22984984],
Cell[490636, 10008, 626, 18, 24, "Output",ExpressionUUID->"9b6e8aa2-1af0-4790-ab15-d49c9058b01e",
 CellID->239111319]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[491311, 10032, 210, 2, 40, "MathCaption",ExpressionUUID->"4d306989-5b9a-40cc-9cb0-c5481bc50c33",
 CellID->396413639],
Cell[CellGroupData[{
Cell[491546, 10038, 599, 13, 61, "Input",ExpressionUUID->"29b081b3-4944-424b-a260-d5ed43ce779b",
 CellID->229833682],
Cell[492148, 10053, 896, 25, 21, "Echo",ExpressionUUID->"f4dce990-fc2b-4f39-acb0-eec0e3250eb4",
 CellID->834526706],
Cell[493047, 10080, 624, 18, 24, "Output",ExpressionUUID->"8cf0da92-36c6-472b-bdc8-a052b8f4b1d5",
 CellID->630516631]
}, Open  ]],
Cell[CellGroupData[{
Cell[493708, 10103, 477, 10, 43, "Input",ExpressionUUID->"b40b4488-3753-4fc3-930a-091be57261d6",
 CellID->162857240],
Cell[494188, 10115, 930, 25, 21, "Echo",ExpressionUUID->"0ca34efe-ce90-4767-914a-1614d8b27cd5",
 CellID->267038778],
Cell[495121, 10142, 625, 18, 24, "Output",ExpressionUUID->"6f0a65df-c765-4ff6-9e88-3100d8d3a88b",
 CellID->51852502]
}, Open  ]],
Cell[CellGroupData[{
Cell[495783, 10165, 626, 14, 61, "Input",ExpressionUUID->"e6da36e1-0ac2-4ce7-960f-3e7e11dc26a6",
 CellID->306376386],
Cell[496412, 10181, 910, 25, 21, "Echo",ExpressionUUID->"1ecac890-df05-488a-9a66-32d190a7fd81",
 CellID->448272658]
}, Open  ]],
Cell[CellGroupData[{
Cell[497359, 10211, 496, 11, 43, "Input",ExpressionUUID->"e7d6d7e1-8178-45f2-85d0-0da612a16738",
 CellID->3601619],
Cell[497858, 10224, 911, 25, 21, "Echo",ExpressionUUID->"72c9f508-d18e-40d5-b703-6a7425e9b00c",
 CellID->88055709]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[498818, 10255, 337, 6, 57, "MathCaption",ExpressionUUID->"4b78479c-604e-454f-829f-bf80fc1a71c1",
 CellID->100378946],
Cell[CellGroupData[{
Cell[499180, 10265, 610, 14, 61, "Input",ExpressionUUID->"cc6b47a3-4f04-4421-b50e-388ff39ddfba",
 CellID->268140765],
Cell[499793, 10281, 917, 25, 21, "Echo",ExpressionUUID->"cd5b5221-989f-4032-b5b1-217906da5182",
 CellID->434075465]
}, Open  ]],
Cell[CellGroupData[{
Cell[500747, 10311, 478, 11, 43, "Input",ExpressionUUID->"a8f4cea8-a598-434a-a978-507cd092e67e",
 CellID->589080666],
Cell[501228, 10324, 915, 25, 21, "Echo",ExpressionUUID->"a3b80ac3-664a-4c6b-bba6-0a04224c3148",
 CellID->323976790]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[502192, 10355, 214, 2, 40, "MathCaption",ExpressionUUID->"2ee9413e-e866-46d0-898c-63a370afe9f1",
 CellID->478421323],
Cell[CellGroupData[{
Cell[502431, 10361, 413, 9, 25, "Input",ExpressionUUID->"2fc42020-cfc6-41c2-bb08-714b0fe14cd8",
 CellID->542729463],
Cell[502847, 10372, 3962, 91, 250, "Output",ExpressionUUID->"dcbc33bc-8980-4510-a3ad-a6bb8264c909",
 CellID->25169857]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[506858, 10469, 215, 3, 40, "MathCaption",ExpressionUUID->"82afbcc1-899e-4da6-b980-4137d6bb96ae",
 CellID->59602588],
Cell[CellGroupData[{
Cell[507098, 10476, 303, 6, 25, "Input",ExpressionUUID->"71b6487b-342d-4700-b80a-0a123ccc4327",
 CellID->141527026],
Cell[507404, 10484, 728, 14, 69, "Output",ExpressionUUID->"0aa9cb7e-523a-4326-b46c-f58c9ba53d99",
 CellID->387932858]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[508181, 10504, 254, 6, 40, "MathCaption",ExpressionUUID->"110853c8-35a5-4e34-aab7-4cb11bf3f4ce",
 CellID->909413053],
Cell[CellGroupData[{
Cell[508460, 10514, 392, 8, 25, "Input",ExpressionUUID->"633a66f0-d9b7-4ca6-a96b-720b234367a8",
 CellID->285728069],
Cell[508855, 10524, 2310, 42, 235, "Output",ExpressionUUID->"5fd00934-6622-4918-a5aa-8ac20bbbf0e6",
 CellID->291815495]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[511214, 10572, 394, 8, 57, "MathCaption",ExpressionUUID->"a5a94a3f-94c3-4578-b514-baf49ce7dcac",
 CellID->123284224],
Cell[CellGroupData[{
Cell[511633, 10584, 624, 13, 25, "Input",ExpressionUUID->"676bbd29-610b-4954-ab95-ebb2135eb947",
 CellID->841619866],
Cell[512260, 10599, 1959, 43, 77, "Output",ExpressionUUID->"95e20454-c37b-451e-90cf-20c2f592e289",
 CellID->89679823]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[514268, 10648, 183, 2, 40, "MathCaption",ExpressionUUID->"bb500137-7337-482b-ab0d-c6e66f2ff6be",
 CellID->24958883],
Cell[CellGroupData[{
Cell[514476, 10654, 456, 10, 25, "Input",ExpressionUUID->"8d047b5e-30e9-4d52-b17d-917a146a3ba9",
 CellID->484647955],
Cell[514935, 10666, 435, 9, 42, "Output",ExpressionUUID->"27e6fb97-2b15-447d-bb57-dbce76c6203b",
 CellID->123777944]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[515419, 10681, 216, 3, 40, "MathCaption",ExpressionUUID->"b5e4bb7d-b81b-4367-8045-a87d392d434b",
 CellID->837471449],
Cell[CellGroupData[{
Cell[515660, 10688, 541, 12, 25, "Input",ExpressionUUID->"1e53151b-3238-4ca0-8e16-f69f9f7d61ad",
 CellID->724085147],
Cell[516204, 10702, 868, 22, 24, "Output",ExpressionUUID->"ea8414db-f73f-464f-8649-aed758a5d228",
 CellID->96753963]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[517121, 10730, 187, 2, 40, "MathCaption",ExpressionUUID->"fa399704-d200-4aa9-a678-667fc9210684",
 CellID->505704633],
Cell[CellGroupData[{
Cell[517333, 10736, 493, 11, 25, "Input",ExpressionUUID->"2a666cbc-e30c-404a-8066-f18b295d83a5",
 CellID->220964068],
Cell[517829, 10749, 288, 7, 24, "Output",ExpressionUUID->"73b7880b-39b1-4e57-8445-595691374db1",
 CellID->74427375]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[518166, 10762, 277, 4, 40, "MathCaption",ExpressionUUID->"1b727bc3-b78e-4856-8727-e378e0a03967",
 CellID->733329592],
Cell[CellGroupData[{
Cell[518468, 10770, 640, 14, 25, "Input",ExpressionUUID->"fc63b36c-a68e-47b2-bb22-2bd5aa0bca7d",
 CellID->472360365],
Cell[519111, 10786, 1788, 45, 60, "Output",ExpressionUUID->"acb453e5-5d5b-4fd8-8d50-4c9a2dd3917b",
 CellID->45157847]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[520948, 10837, 187, 2, 40, "MathCaption",ExpressionUUID->"9627a14b-7603-4301-a763-bf85eb354a05",
 CellID->232625522],
Cell[CellGroupData[{
Cell[521160, 10843, 515, 12, 25, "Input",ExpressionUUID->"450e5ed1-dffe-48a1-89f5-f602c85e1507",
 CellID->129412639],
Cell[521678, 10857, 438, 9, 42, "Output",ExpressionUUID->"fd287984-346d-4d2a-8101-5d17afc1f4ac",
 CellID->294220470]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[522165, 10872, 293, 6, 57, "MathCaption",ExpressionUUID->"ee4b2894-dedf-4eca-8751-3a8d88df27d8",
 CellID->979377819],
Cell[CellGroupData[{
Cell[522483, 10882, 728, 21, 25, "Input",ExpressionUUID->"1becddf9-e3ff-4e30-aaa9-e637c9369c2c",
 CellID->174898405],
Cell[523214, 10905, 990, 24, 42, "Output",ExpressionUUID->"c8e5a2e5-ef57-4022-9988-c9a20be021fa",
 CellID->408943794]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[524253, 10935, 286, 6, 40, "MathCaption",ExpressionUUID->"0b7e87c3-f921-480e-967b-8adc19436180",
 CellID->559719523],
Cell[CellGroupData[{
Cell[524564, 10945, 606, 15, 25, "Input",ExpressionUUID->"b4e000b7-808a-4d43-8512-51c13ae4e93b",
 CellID->359245144],
Cell[525173, 10962, 1157, 28, 42, "Output",ExpressionUUID->"65d59113-d989-4626-a1c6-6736c3ac7d38",
 CellID->162633939]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[526379, 10996, 459, 12, 41, "MathCaption",ExpressionUUID->"6f09782f-0dc1-4255-8b19-e157535cb50e",
 CellID->306011383],
Cell[CellGroupData[{
Cell[526863, 11012, 908, 26, 43, "Input",ExpressionUUID->"9f154ec0-a4ee-48eb-8371-5c035e54dace",
 CellID->884651642],
Cell[527774, 11040, 5531, 190, 136, "Output",ExpressionUUID->"86c46377-9f3a-4217-ab10-1aff57df521b",
 CellID->320654796]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[533354, 11236, 188, 2, 40, "MathCaption",ExpressionUUID->"b67ba9fe-5fe4-4769-9844-d2acfa40734c",
 CellID->22585214],
Cell[CellGroupData[{
Cell[533567, 11242, 230, 4, 25, "Input",ExpressionUUID->"a063565a-cfb9-441f-bd77-ec3959e23253",
 CellID->548368980],
Cell[533800, 11248, 2374, 67, 83, "Output",ExpressionUUID->"390b2b56-ff40-49bb-b7ad-bc0c1923198a",
 CellID->266909173]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[536223, 11321, 208, 2, 40, "MathCaption",ExpressionUUID->"1835cfb8-ce85-4d75-a2c6-ffaa88b5aec3",
 CellID->305030941],
Cell[CellGroupData[{
Cell[536456, 11327, 275, 5, 25, "Input",ExpressionUUID->"ad3dd1c9-e399-4591-a61e-7a390875e250",
 CellID->206631954],
Cell[536734, 11334, 380, 10, 28, "Output",ExpressionUUID->"3bca1bbc-efb0-415e-ad02-041378724331",
 CellID->390480037]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[537163, 11350, 194, 2, 40, "MathCaption",ExpressionUUID->"81c402c0-4b54-4294-b148-875fed18a1c6",
 CellID->240106575],
Cell[CellGroupData[{
Cell[537382, 11356, 556, 15, 25, "Input",ExpressionUUID->"087baf87-2d08-41f7-bd07-332a32756223",
 CellID->154729335],
Cell[537941, 11373, 47128, 829, 264, "Output",ExpressionUUID->"43d8d67e-62de-4c33-82bf-82b079ff76a2",
 CellID->256275073]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[585118, 12208, 454, 12, 41, "MathCaption",ExpressionUUID->"d02f5b7e-c961-449f-9573-d83b5dfabb07",
 CellID->700662694],
Cell[CellGroupData[{
Cell[585597, 12224, 385, 11, 25, "Input",ExpressionUUID->"788b84db-08bd-4a31-8d7a-549a8f1e4acd",
 CellID->70632808],
Cell[585985, 12237, 728, 13, 24, "Output",ExpressionUUID->"def9bdc4-bba9-4ef3-a335-251af5734574",
 CellID->542659924]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[586762, 12256, 223, 3, 40, "MathCaption",ExpressionUUID->"ae819de9-88cf-40ec-9358-0f02f7cf4d3e",
 CellID->444986081],
Cell[CellGroupData[{
Cell[587010, 12263, 691, 17, 25, "Input",ExpressionUUID->"01612933-9865-4ffe-9bee-047357968962",
 CellID->991815813],
Cell[587704, 12282, 734, 17, 24, "Output",ExpressionUUID->"d9dd7e99-581e-4732-a67f-62b32dfe0afd",
 CellID->33854908]
}, Open  ]],
Cell[588453, 12302, 260, 6, 26, "ExampleDelimiter",ExpressionUUID->"6163eb72-1193-481a-9bc6-ddd8adbe2dd1",
 CellID->14107563]
}, Open  ]],
Cell[CellGroupData[{
Cell[588750, 12313, 1741, 50, 60, "MathCaption",ExpressionUUID->"a7eb581c-2368-4cfe-bbe7-dede88ce6254",
 CellID->771301361],
Cell[CellGroupData[{
Cell[590516, 12367, 656, 17, 25, "Input",ExpressionUUID->"dd5fe1da-181f-475d-8e71-08599fab5abe",
 CellID->535666113],
Cell[591175, 12386, 412, 7, 24, "Output",ExpressionUUID->"5ac0229e-a021-4fd5-af43-9a5240c4308c",
 CellID->27544576]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[591636, 12399, 1384, 40, 41, "MathCaption",ExpressionUUID->"4f407d71-92b9-4d53-84ec-8a1bb6974193",
 CellID->444708281],
Cell[CellGroupData[{
Cell[593045, 12443, 645, 18, 25, "Input",ExpressionUUID->"3fb5fc78-f4b5-4b3a-8e54-953fb99002c8",
 CellID->887464862],
Cell[593693, 12463, 361, 6, 24, "Output",ExpressionUUID->"0667b906-2a83-4b55-862c-246bf715f69b",
 CellID->141130879]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[594103, 12475, 221, 3, 40, "MathCaption",ExpressionUUID->"1896b8bc-1e11-4f04-8103-43508926fd2c",
 CellID->486162817],
Cell[CellGroupData[{
Cell[594349, 12482, 270, 5, 25, "Input",ExpressionUUID->"9e9ea787-abf6-4ec6-b2cc-2e69d89c4617",
 CellID->615462631],
Cell[594622, 12489, 340, 6, 24, "Output",ExpressionUUID->"857b4acf-31ef-4e56-9c76-6a20979710a9",
 CellID->86302315]
}, Open  ]],
Cell[594977, 12498, 260, 6, 26, "ExampleDelimiter",ExpressionUUID->"bf883b97-01e0-4580-a950-50d30116a1d6",
 CellID->14107564]
}, Open  ]],
Cell[CellGroupData[{
Cell[595274, 12509, 1317, 39, 41, "MathCaption",ExpressionUUID->"44e8a28c-8fa0-434d-8867-1a2245503336",
 CellID->177535240],
Cell[CellGroupData[{
Cell[596616, 12552, 713, 18, 25, "Input",ExpressionUUID->"14e19174-4980-4193-bb1e-7521c15d5696",
 CellID->661797484],
Cell[597332, 12572, 680, 17, 24, "Output",ExpressionUUID->"313afb20-7eec-42f6-94ea-e7a9d9ade45e",
 CellID->4477802]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[598061, 12595, 1172, 30, 60, "MathCaption",ExpressionUUID->"4256ea8c-a492-4455-b524-b84cfe17938b",
 CellID->445973593],
Cell[CellGroupData[{
Cell[599258, 12629, 1302, 33, 96, "Input",ExpressionUUID->"3ba644c0-61ef-4285-92fa-97e269cf29b7",
 CellID->869163183],
Cell[600563, 12664, 606, 14, 38, "Output",ExpressionUUID->"e9517ff3-7c20-46f6-b1c8-4eab464c6bdb",
 CellID->56459738]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[601218, 12684, 324, 7, 40, "MathCaption",ExpressionUUID->"8d4c8bfc-29bc-4b14-b2f0-132733bdec32",
 CellID->686745089],
Cell[CellGroupData[{
Cell[601567, 12695, 1249, 33, 96, "Input",ExpressionUUID->"2d759f43-640b-4b95-b41d-7e27fb8171d2",
 CellID->674295727],
Cell[602819, 12730, 630, 15, 38, "Output",ExpressionUUID->"976edaeb-2629-4491-bbeb-b1c88df33dbc",
 CellID->504109667]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[603498, 12751, 286, 4, 40, "MathCaption",ExpressionUUID->"ef049200-9f89-42c0-ab31-744873abfc20",
 CellID->694507399],
Cell[CellGroupData[{
Cell[603809, 12759, 505, 13, 25, "Input",ExpressionUUID->"46aea64d-4c06-4b55-b4a9-159775c4a2e9",
 CellID->875714386],
Cell[604317, 12774, 598, 14, 24, "Output",ExpressionUUID->"618a2edc-14ca-4e25-b754-49999f63e1f1",
 CellID->242003258]
}, Open  ]],
Cell[604930, 12791, 261, 6, 26, "ExampleDelimiter",ExpressionUUID->"cf032014-9a69-44ce-bcc0-7100c60fa180",
 CellID->112658320]
}, Open  ]],
Cell[CellGroupData[{
Cell[605228, 12802, 236, 3, 40, "MathCaption",ExpressionUUID->"9f9f9e20-1a8b-4e5d-bfdc-87fafb09ef95",
 CellID->327143208],
Cell[CellGroupData[{
Cell[605489, 12809, 576, 13, 25, "Input",ExpressionUUID->"647c8205-f913-4dc8-b5ec-3b1154429425",
 CellID->283656556],
Cell[606068, 12824, 973, 26, 24, "Output",ExpressionUUID->"f5dde288-8a6a-4ec0-a372-40ddbc8066f1",
 CellID->121246890]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[607090, 12856, 233, 3, 40, "MathCaption",ExpressionUUID->"cf534f5a-9a10-4808-bcf7-ac429c57948e",
 CellID->158433383],
Cell[CellGroupData[{
Cell[607348, 12863, 536, 14, 25, "Input",ExpressionUUID->"66a2ed68-d968-41ca-931b-ad7fe29677f4",
 CellID->499374772],
Cell[607887, 12879, 461, 12, 24, "Output",ExpressionUUID->"19a611bc-9478-4e29-929a-452d35591232",
 CellID->171051003]
}, Open  ]],
Cell[608363, 12894, 261, 6, 26, "ExampleDelimiter",ExpressionUUID->"0d582974-7758-4816-b577-dd722d5ac8d4",
 CellID->519906287]
}, Open  ]],
Cell[CellGroupData[{
Cell[608661, 12905, 270, 4, 40, "MathCaption",ExpressionUUID->"b492c559-a134-4188-9cbd-7822c9dcce74",
 CellID->858830434],
Cell[CellGroupData[{
Cell[608956, 12913, 603, 17, 25, "Input",ExpressionUUID->"52abfea8-4e0c-4282-a12a-1353a3a2c4ed",
 CellID->634576773],
Cell[609562, 12932, 2422, 77, 77, "Output",ExpressionUUID->"e0f13cf1-e49d-4f77-957c-f90d474fb025",
 CellID->226659544]
}, Open  ]],
Cell[611999, 13012, 261, 6, 26, "ExampleDelimiter",ExpressionUUID->"07149f81-5fb4-47bc-8558-46e4838fb519",
 CellID->490055446]
}, Open  ]],
Cell[CellGroupData[{
Cell[612297, 13023, 339, 5, 40, "MathCaption",ExpressionUUID->"5a269a87-a802-4760-94f2-ad9bc0ee0939",
 CellID->535860945],
Cell[CellGroupData[{
Cell[612661, 13032, 667, 16, 25, "Input",ExpressionUUID->"a31f1e69-1003-4aa1-a527-16f084574b16",
 CellID->630622865],
Cell[613331, 13050, 3466, 110, 95, "Output",ExpressionUUID->"b1f59ce2-3903-4037-bfde-d14921b8f6c7",
 CellID->313507277]
}, Open  ]],
Cell[616812, 13163, 260, 6, 26, "ExampleDelimiter",ExpressionUUID->"c6b931ef-a3d3-4e00-860e-61f37a42fbf4",
 CellID->14107565]
}, Open  ]],
Cell[CellGroupData[{
Cell[617109, 13174, 335, 5, 40, "MathCaption",ExpressionUUID->"730fd704-4a10-4fb0-b565-80a4480ad157",
 CellID->792813693],
Cell[CellGroupData[{
Cell[617469, 13183, 545, 13, 25, "Input",ExpressionUUID->"fcfa86b2-4bd6-438c-b40f-bdb534b70795",
 CellID->885845820],
Cell[618017, 13198, 783, 21, 24, "Output",ExpressionUUID->"7281b014-836e-4ce6-b75e-36b5795e3d8b",
 CellID->9609939]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[618849, 13225, 214, 3, 40, "MathCaption",ExpressionUUID->"e3cf1d61-0462-45a4-90fe-179d8b4049c0",
 CellID->221442697],
Cell[CellGroupData[{
Cell[619088, 13232, 497, 13, 25, "Input",ExpressionUUID->"b97a995c-fe79-482c-bcbb-9c7e70d3f1f1",
 CellID->874035320],
Cell[619588, 13247, 651, 17, 24, "Output",ExpressionUUID->"2b04a4d1-c270-451d-8b9e-2ea751eb7b99",
 CellID->272543979]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[620288, 13270, 1604, 46, 58, "MathCaption",ExpressionUUID->"1ec72a96-2e63-48f3-a370-db204c807879",
 CellID->132229044],
Cell[CellGroupData[{
Cell[621917, 13320, 637, 16, 25, "Input",ExpressionUUID->"af99e436-bb53-431b-ac1e-d500ffab2513",
 CellID->982577960],
Cell[622557, 13338, 411, 8, 24, "Output",ExpressionUUID->"d8af7ee3-b378-426e-8d75-9308f7765772",
 CellID->70864155]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[623017, 13352, 351, 7, 40, "MathCaption",ExpressionUUID->"ae7a013c-1096-43e3-a3e7-56cf490832f6",
 CellID->361259892],
Cell[CellGroupData[{
Cell[623393, 13363, 554, 15, 25, "Input",ExpressionUUID->"63f2c684-0dc2-4d54-a184-0c32e7837b01",
 CellID->823753171],
Cell[623950, 13380, 446, 8, 24, "Output",ExpressionUUID->"a41a2f4d-c68e-47cb-bb8c-bbb6f42dc46f",
 CellID->877496089]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[624445, 13394, 214, 3, 40, "MathCaption",ExpressionUUID->"4dae3a95-a75f-4bef-8c58-a6542a383e3c",
 CellID->324048877],
Cell[CellGroupData[{
Cell[624684, 13401, 260, 5, 25, "Input",ExpressionUUID->"1e6aadf0-042b-4c0f-865a-b53069eec175",
 CellID->183907914],
Cell[624947, 13408, 293, 5, 24, "Output",ExpressionUUID->"0fdb2fec-79ab-4c48-9b90-21ec05221d18",
 CellID->386927958]
}, Open  ]],
Cell[625255, 13416, 260, 6, 26, "ExampleDelimiter",ExpressionUUID->"a14e07f2-ad26-4cfe-9e7d-4c33e1dc0d36",
 CellID->14107566]
}, Open  ]],
Cell[CellGroupData[{
Cell[625552, 13427, 1131, 30, 41, "MathCaption",ExpressionUUID->"2098c9c6-4920-4fb8-821c-014b618b1e76",
 CellID->273207191],
Cell[CellGroupData[{
Cell[626708, 13461, 562, 13, 25, "Input",ExpressionUUID->"6eccb964-7f77-4118-8b88-3bfb8499dfef",
 CellID->1112728],
Cell[627273, 13476, 362, 6, 24, "Output",ExpressionUUID->"1fcf6f7b-7ec5-484f-a688-98a5b03605d1",
 CellID->381398679]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[627684, 13488, 564, 12, 41, "MathCaption",ExpressionUUID->"1e5fc070-e6c9-4f1f-b42f-9c545c3cfd69",
 CellID->306503519],
Cell[CellGroupData[{
Cell[628273, 13504, 583, 13, 25, "Input",ExpressionUUID->"e6d1ac9b-d005-492d-bf07-d1c2756f9c37",
 CellID->999001902],
Cell[628859, 13519, 655, 16, 24, "Output",ExpressionUUID->"a9daa2d6-43fb-4b32-9145-4b1f1905b8e5",
 CellID->185246950]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[629563, 13541, 214, 3, 40, "MathCaption",ExpressionUUID->"6cd73387-b02a-4447-9122-702beed4254f",
 CellID->90617371],
Cell[CellGroupData[{
Cell[629802, 13548, 685, 17, 43, "Input",ExpressionUUID->"08906698-a6b9-4ca0-a476-1d57cb7567b7",
 CellID->760328926],
Cell[630490, 13567, 967, 24, 24, "Output",ExpressionUUID->"c4d7b296-d65b-4034-b9b5-081f5dca754d",
 CellID->1214865]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[631506, 13597, 271, 4, 40, "MathCaption",ExpressionUUID->"e9f02ab2-62a8-4449-96a3-ad4b9a42e50a",
 CellID->809946818],
Cell[CellGroupData[{
Cell[631802, 13605, 410, 9, 25, "Input",ExpressionUUID->"1b87c572-490a-4862-8bb2-16139cfba784",
 CellID->628177917],
Cell[632215, 13616, 18403, 366, 163, "Output",ExpressionUUID->"67ca4020-e729-4556-b822-83757cc067b0",
 CellID->552668493]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[650667, 13988, 229, 3, 40, "MathCaption",ExpressionUUID->"1318567b-ed36-4389-b10b-4edc831b9daa",
 CellID->806991552],
Cell[CellGroupData[{
Cell[650921, 13995, 520, 10, 25, "Input",ExpressionUUID->"ed2a8f2d-6197-4e78-992a-cf66f313f523",
 CellID->777243378],
Cell[651444, 14007, 2749, 85, 77, "Output",ExpressionUUID->"2a0ae181-7c78-4d05-9b5f-b99a7fa6873d",
 CellID->24878681]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[654242, 14098, 260, 4, 40, "MathCaption",ExpressionUUID->"d9cb2af3-627c-4450-ba69-b64bce8b75f1",
 CellID->962257849],
Cell[CellGroupData[{
Cell[654527, 14106, 410, 10, 25, "Input",ExpressionUUID->"b3c284ff-b659-4fce-a049-de4532452d4c",
 CellID->574613800],
Cell[654940, 14118, 658, 18, 24, "Output",ExpressionUUID->"cbd4dfd3-8f1a-4b40-924a-8d1fa688be5a",
 CellID->22940605]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[655647, 14142, 336, 5, 40, "MathCaption",ExpressionUUID->"404edfae-e8e9-42f5-9a2c-9d034767e71e",
 CellID->817657987],
Cell[CellGroupData[{
Cell[656008, 14151, 493, 11, 25, "Input",ExpressionUUID->"c2f5a3a2-ad8e-4e96-8038-d838356892b4",
 CellID->88400611],
Cell[656504, 14164, 1767, 39, 42, "Output",ExpressionUUID->"21e692ef-9e65-46ec-9520-da8347f9a947",
 CellID->264187089]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[658320, 14209, 229, 3, 40, "MathCaption",ExpressionUUID->"75ecea50-5ad4-4126-8275-9480ff59346f",
 CellID->834775918],
Cell[CellGroupData[{
Cell[658574, 14216, 518, 14, 25, "Input",ExpressionUUID->"83323dff-f98a-4937-90a2-e372aa726980",
 CellID->283080979],
Cell[659095, 14232, 2942, 50, 249, "Output",ExpressionUUID->"3f8214b8-d7f3-434d-8485-146bc93849f0",
 CellID->104575]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[662086, 14288, 1597, 45, 58, "MathCaption",ExpressionUUID->"086a51bb-94d2-49c5-a52d-498e309ced6f",
 CellID->405355337],
Cell[CellGroupData[{
Cell[663708, 14337, 475, 12, 25, "Input",ExpressionUUID->"541239ec-f9c6-458e-bf36-fdcc550ba651",
 CellID->811262678],
Cell[664186, 14351, 286, 5, 24, "Output",ExpressionUUID->"e043287a-82f3-4c21-bcad-b3fa53162d93",
 CellID->9194802]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[664521, 14362, 218, 3, 40, "MathCaption",ExpressionUUID->"53b47280-0ee7-4481-90d3-a8a9932faef4",
 CellID->376441899],
Cell[CellGroupData[{
Cell[664764, 14369, 428, 12, 25, "Input",ExpressionUUID->"5423d9d5-38e3-41ba-aaf9-5fc3305c977d",
 CellID->695357144],
Cell[665195, 14383, 295, 6, 24, "Output",ExpressionUUID->"566b37f3-99bf-4278-b215-fff63bbda416",
 CellID->11269696]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[665539, 14395, 469, 11, 40, "MathCaption",ExpressionUUID->"199b572c-76b3-42f5-a413-ce1bf61b0744",
 CellID->449563358],
Cell[CellGroupData[{
Cell[666033, 14410, 488, 13, 25, "Input",ExpressionUUID->"14e6a72a-0e9a-4280-8326-c7a3663ed759",
 CellID->168888283],
Cell[666524, 14425, 765, 22, 24, "Output",ExpressionUUID->"e7a36d91-e340-463e-8ab9-b4d5b36eee91",
 CellID->83774134]
}, Open  ]]
}, Open  ]],
Cell[667316, 14451, 198, 2, 40, "MathCaption",ExpressionUUID->"6103e57a-4751-4a6c-ad88-a2a42257d03e",
 CellID->39057588],
Cell[667517, 14455, 613, 15, 57, "MathCaption",ExpressionUUID->"3682facc-fa90-45b4-af55-9439bcc518ae",
 CellID->236283598],
Cell[668133, 14472, 205, 2, 40, "MathCaption",ExpressionUUID->"013ffcca-ae4d-4538-b771-83739c47a5ff",
 CellID->3969473],
Cell[668341, 14476, 576, 16, 40, "MathCaption",ExpressionUUID->"4364dda2-b1db-4dc9-9509-a58330c5b441",
 InitializationCell->True,
 CellID->442612299],
Cell[668920, 14494, 549, 15, 40, "MathCaption",ExpressionUUID->"e0df06a6-a414-425c-8f2a-5a62f7f07b4e",
 CellID->90642782],
Cell[669472, 14511, 261, 5, 40, "MathCaption",ExpressionUUID->"b03684ae-14f1-4dc2-8585-753e8e570ae2",
 CellID->112995886],
Cell[CellGroupData[{
Cell[669758, 14520, 555, 14, 57, "MathCaption",ExpressionUUID->"1d5eb99d-f3b5-4daa-b3fa-7aacd8bff410",
 CellID->129906996],
Cell[CellGroupData[{
Cell[670338, 14538, 500, 13, 25, "Input",ExpressionUUID->"b4f55719-99d0-4123-9dcd-35a74b08e2b0",
 CellID->239135585],
Cell[670841, 14553, 83975, 1596, 617, "Output",ExpressionUUID->"e5b3e60c-4f45-4b54-95f5-65efa64f1d94",
 CellID->375946613]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[754865, 16155, 260, 3, 40, "MathCaption",ExpressionUUID->"59522b20-92d9-4fe3-a4e9-f19f51fe7b6a",
 CellID->537854770],
Cell[CellGroupData[{
Cell[755150, 16162, 579, 15, 25, "Input",ExpressionUUID->"d97f9f60-f29a-42cd-8506-c46733c4e5b3",
 CellID->400353117],
Cell[755732, 16179, 1039, 21, 178, "Output",ExpressionUUID->"e1c89aba-3d3f-4f5a-9f31-76643896c568",
 CellID->283072746]
}, Open  ]]
}, Open  ]],
Cell[756798, 16204, 538, 13, 52, "MathCaption",ExpressionUUID->"ed7aae05-0dd3-4680-8d28-a63de1881c28",
 CellID->50294008],
Cell[CellGroupData[{
Cell[757361, 16221, 298, 5, 40, "MathCaption",ExpressionUUID->"60642da1-49cc-432f-b29f-50ab8440dd1a",
 CellID->426907475],
Cell[CellGroupData[{
Cell[757684, 16230, 595, 15, 25, "Input",ExpressionUUID->"8747b09f-1320-4270-a546-c9e118bfc994",
 CellID->283987963],
Cell[758282, 16247, 983, 21, 161, "Output",ExpressionUUID->"dfa52575-24ae-4b2c-a2bf-f9eb2de00178",
 CellID->74394165]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[759314, 16274, 277, 4, 40, "MathCaption",ExpressionUUID->"f16113ca-048b-48a6-94aa-cbb013daec9e",
 CellID->69975013],
Cell[CellGroupData[{
Cell[759616, 16282, 627, 16, 25, "Input",ExpressionUUID->"4ad477fe-e4bf-47b1-a5d6-89fb20b92b78",
 CellID->447664363],
Cell[760246, 16300, 1664, 30, 244, "Output",ExpressionUUID->"6b48fb81-b7d9-4211-b97c-97486ca4bc6d",
 CellID->405832833]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[761959, 16336, 216, 2, 40, "MathCaption",ExpressionUUID->"361552c4-a653-42fc-9962-607ba85e7f3b",
 CellID->629424924],
Cell[CellGroupData[{
Cell[762200, 16342, 675, 16, 25, "Input",ExpressionUUID->"2b3c60a9-4488-4f19-9fde-ac1178048b93",
 CellID->282716016],
Cell[762878, 16360, 1433, 43, 161, "Output",ExpressionUUID->"4b8c8324-41cd-4e75-bc4b-819f4676e21d",
 CellID->18739418]
}, Open  ]],
Cell[CellGroupData[{
Cell[764348, 16408, 674, 16, 25, "Input",ExpressionUUID->"6ea7bc80-4b1b-43e9-ab2e-58483439e202",
 CellID->28645306],
Cell[765025, 16426, 891, 19, 161, "Output",ExpressionUUID->"c061e54f-d068-4493-9449-9525515ebeb4",
 CellID->120305284]
}, Open  ]]
}, Open  ]],
Cell[765943, 16449, 240, 4, 40, "MathCaption",ExpressionUUID->"7aaa945d-1726-4abd-a902-754136a045e6",
 CellID->688126866],
Cell[766186, 16455, 492, 12, 40, "MathCaption",ExpressionUUID->"63f906c4-4067-4e18-9247-8106ee9b0e79",
 CellID->462783584],
Cell[CellGroupData[{
Cell[766703, 16471, 209, 2, 40, "MathCaption",ExpressionUUID->"78d2e32f-ed0a-4df1-b068-6d78380156e8",
 CellID->161103956],
Cell[CellGroupData[{
Cell[766937, 16477, 297, 5, 25, "Input",ExpressionUUID->"5b472c6f-e35e-4297-ab1b-46a12b29634f",
 CellID->630387027],
Cell[767237, 16484, 1031, 27, 34, "Output",ExpressionUUID->"21cf61c2-f534-4559-a848-057f819da1c5",
 CellID->401184551]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[768317, 16517, 414, 10, 40, "MathCaption",ExpressionUUID->"abbb66a7-996f-490d-a98a-2b51d54b1242",
 CellID->478852567],
Cell[CellGroupData[{
Cell[768756, 16531, 350, 8, 25, "Input",ExpressionUUID->"04d75b31-f1a8-48ae-bf00-f85e5ad93022",
 CellID->2173387],
Cell[769109, 16541, 640, 11, 60, "Output",ExpressionUUID->"fb2b3d5f-cbb9-4459-b9af-4e3acbc105cf",
 CellID->59007347]
}, Open  ]],
Cell[CellGroupData[{
Cell[769786, 16557, 419, 10, 25, "Input",ExpressionUUID->"728e602d-caab-473c-88d0-9cc242ec108d",
 CellID->48490791],
Cell[770208, 16569, 348, 8, 24, "Output",ExpressionUUID->"33239a98-9e2d-435e-ad19-f3dc1ad5f358",
 CellID->249968189]
}, Open  ]],
Cell[CellGroupData[{
Cell[770593, 16582, 454, 11, 25, "Input",ExpressionUUID->"d90e7d6b-d616-4d7f-9669-6f883f010017",
 CellID->144665321],
Cell[771050, 16595, 179, 3, 24, "Output",ExpressionUUID->"9b3972ba-1d2d-4423-b779-db42b1edf1a1",
 CellID->495057432]
}, Open  ]]
}, Open  ]],
Cell[771256, 16602, 183, 2, 40, "MathCaption",ExpressionUUID->"102f294e-4120-46e8-9170-b7e6a2cac93a",
 CellID->66692240],
Cell[CellGroupData[{
Cell[771464, 16608, 491, 12, 40, "MathCaption",ExpressionUUID->"285b0746-736e-4362-b949-64e4e6e3ad6f",
 CellID->308194261],
Cell[CellGroupData[{
Cell[771980, 16624, 288, 6, 25, "Input",ExpressionUUID->"122ccb50-3417-481b-8546-7a1e48f4c702",
 CellID->88352769],
Cell[772271, 16632, 225, 5, 24, "Output",ExpressionUUID->"9bcd0715-9457-4751-80aa-5c5f90952418",
 CellID->253919081]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[772545, 16643, 191, 2, 40, "MathCaption",ExpressionUUID->"6c38eee6-9cbf-41df-9e85-f935fc5d46b0",
 CellID->402833805],
Cell[CellGroupData[{
Cell[772761, 16649, 293, 6, 25, "Input",ExpressionUUID->"940404f2-6a35-49cb-be9d-cf520cbf5c93",
 CellID->133361772],
Cell[773057, 16657, 222, 5, 24, "Output",ExpressionUUID->"ec878f5a-66d9-4c91-bcf7-b793ea8ad617",
 CellID->98606068]
}, Open  ]],
Cell[CellGroupData[{
Cell[773316, 16667, 300, 6, 25, "Input",ExpressionUUID->"b760a8c8-ab3d-4b00-a715-c5f5ce0831ec",
 CellID->282609746],
Cell[773619, 16675, 233, 5, 24, "Output",ExpressionUUID->"fcf9f912-c44a-4f17-8413-10330bf7571d",
 CellID->184445757]
}, Open  ]],
Cell[CellGroupData[{
Cell[773889, 16685, 301, 6, 25, "Input",ExpressionUUID->"aff54c59-2ca0-458b-88ce-9b6e84751ef0",
 CellID->170282164],
Cell[774193, 16693, 233, 5, 24, "Output",ExpressionUUID->"1f3570d6-74e8-451d-82f0-6aab341b12a0",
 CellID->586261813]
}, Open  ]]
}, Open  ]],
Cell[774453, 16702, 300, 5, 57, "MathCaption",ExpressionUUID->"983392d8-a470-4ce1-a01d-744ce01539a2",
 CellID->406463550],
Cell[CellGroupData[{
Cell[774778, 16711, 282, 4, 40, "MathCaption",ExpressionUUID->"fa3ee762-4010-4f70-a5da-e4c51f47ea19",
 CellID->300631353],
Cell[775063, 16717, 495, 12, 25, "Input",ExpressionUUID->"474ee3ba-3078-404c-8620-5fb66bc5872d",
 CellID->518707108]
}, Open  ]],
Cell[CellGroupData[{
Cell[775595, 16734, 1249, 31, 40, "MathCaption",ExpressionUUID->"966edb34-f681-4202-a3e1-0cb2e0fcbf11",
 CellID->8375492],
Cell[CellGroupData[{
Cell[776869, 16769, 413, 7, 25, "Input",ExpressionUUID->"84bb73df-55cf-49ca-a278-e262073d4ece",
 CellID->835168205],
Cell[777285, 16778, 568, 11, 24, "Output",ExpressionUUID->"de6c159c-d85f-4140-9274-5ffc29c68c90",
 CellID->111339732]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[777902, 16795, 261, 4, 40, "MathCaption",ExpressionUUID->"c6d7e037-cab5-49bf-80f8-6646db5f54b7",
 CellID->258727906],
Cell[CellGroupData[{
Cell[778188, 16803, 410, 10, 25, "Input",ExpressionUUID->"774ae2e5-8308-4c11-b7ee-567390fd0309",
 CellID->97985540],
Cell[778601, 16815, 350, 7, 24, "Output",ExpressionUUID->"8052f7e7-5a9d-473f-8faf-e56dbce628f5",
 CellID->107056388]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[779000, 16828, 202, 2, 40, "MathCaption",ExpressionUUID->"e7dde65d-96c7-4bd1-9306-143a76e87970",
 CellID->892397338],
Cell[CellGroupData[{
Cell[779227, 16834, 288, 5, 25, "Input",ExpressionUUID->"7ef43d8a-cf6d-4180-9557-95d748050bd4",
 CellID->70290140],
Cell[779518, 16841, 237, 5, 24, "Output",ExpressionUUID->"3e5260e7-e45b-479f-ba3c-b0dd48c455df",
 CellID->100322807]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[779804, 16852, 265, 3, 40, "MathCaption",ExpressionUUID->"2774cbd7-e2cd-475c-a2ff-c42f337a407b",
 CellID->819912601],
Cell[CellGroupData[{
Cell[780094, 16859, 475, 12, 25, "Input",ExpressionUUID->"a580d430-8c7e-4bee-bb08-48691070e310",
 CellID->375659687],
Cell[780572, 16873, 802, 21, 42, "Output",ExpressionUUID->"5eb121a2-728f-48ce-bca6-6d65b77e2ce7",
 CellID->223206235]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[781423, 16900, 191, 2, 40, "MathCaption",ExpressionUUID->"67f36015-cab9-49d7-8a9a-b1d67d4fc33c",
 CellID->652840542],
Cell[CellGroupData[{
Cell[781639, 16906, 524, 14, 25, "Input",ExpressionUUID->"64679bb7-5f7a-4301-9eb6-cd64c2ba1f36",
 CellID->115721087],
Cell[782166, 16922, 679, 16, 128, "Output",ExpressionUUID->"09b37c92-316b-4a81-96b7-7a26f687da12",
 CellID->424564025]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[782894, 16944, 182, 2, 40, "MathCaption",ExpressionUUID->"bae6c84f-2d7d-41ab-ba2d-508606f23647",
 CellID->395670977],
Cell[CellGroupData[{
Cell[783101, 16950, 233, 4, 25, "Input",ExpressionUUID->"199a56e4-2803-4ed5-860a-0dd6b49517e8",
 CellID->566799357],
Cell[783337, 16956, 195, 3, 24, "Output",ExpressionUUID->"2a950e42-3e2f-43f5-ba8d-ef4457b0fb93",
 CellID->63581800]
}, Open  ]]
}, Open  ]],
Cell[783559, 16963, 1968, 55, 92, "MathCaption",ExpressionUUID->"1fe240a9-5b23-4b1e-a390-d852ad00ff31",
 CellID->255766314],
Cell[CellGroupData[{
Cell[785552, 17022, 540, 12, 57, "MathCaption",ExpressionUUID->"0118a4a9-7934-41fe-b92f-c895f5b8d830",
 CellID->561182461],
Cell[CellGroupData[{
Cell[786117, 17038, 429, 10, 25, "Input",ExpressionUUID->"6077d205-9c8d-456f-bfe9-4acd387146ea",
 CellID->178093661],
Cell[786549, 17050, 159, 2, 23, "EchoTiming",ExpressionUUID->"bfd9b283-ea58-4199-b164-caac6fbb7e04",
 CellID->11277768],
Cell[786711, 17054, 205, 3, 24, "Output",ExpressionUUID->"5a1c17d1-34c6-471b-966a-36f3ad6b5468",
 CellID->135146785]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[786965, 17063, 472, 10, 40, "MathCaption",ExpressionUUID->"b77f4942-0472-4bd1-bbf0-45673326114e",
 CellID->102959412],
Cell[CellGroupData[{
Cell[787462, 17077, 484, 11, 29, "Input",ExpressionUUID->"b5e30b71-7118-4283-b735-975af3fab272",
 CellID->65194424],
Cell[787949, 17090, 159, 2, 23, "EchoTiming",ExpressionUUID->"04d3a7b4-5c68-4973-9fc9-89ab901b9978",
 CellID->593897543],
Cell[788111, 17094, 995, 17, 109, "Output",ExpressionUUID->"66673e3c-8e99-4e35-ad89-7fe586ea0b8a",
 CellID->74761761]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[789155, 17117, 202, 2, 40, "MathCaption",ExpressionUUID->"2500e16b-1629-4f24-99ab-4dab84252966",
 CellID->298809539],
Cell[CellGroupData[{
Cell[789382, 17123, 254, 5, 25, "Input",ExpressionUUID->"8479ae8b-48f6-4a92-8254-a8b36164b55d",
 CellID->7216617],
Cell[789639, 17130, 180, 3, 24, "Output",ExpressionUUID->"58a61d4e-ff75-416d-a570-7e6f0974ee8d",
 CellID->150133947]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[789868, 17139, 191, 2, 40, "MathCaption",ExpressionUUID->"26335350-a108-4783-8422-678698659dd3",
 CellID->6621231],
Cell[CellGroupData[{
Cell[790084, 17145, 231, 4, 25, "Input",ExpressionUUID->"2db016e7-4148-4419-a777-9e5cf01f790e",
 CellID->238009890],
Cell[790318, 17151, 175, 3, 24, "Output",ExpressionUUID->"fa668ad9-1420-4aa4-b0cf-986035da1473",
 CellID->441155702]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[790542, 17160, 192, 2, 40, "MathCaption",ExpressionUUID->"3a4ddb47-a304-4d48-8652-2add7ddae5e8",
 CellID->784853736],
Cell[CellGroupData[{
Cell[790759, 17166, 229, 4, 25, "Input",ExpressionUUID->"d37a0415-210a-419b-a2a8-042b74428560",
 CellID->610437364],
Cell[790991, 17172, 188, 3, 24, "Output",ExpressionUUID->"b4d534d2-da2c-4b93-b459-09fbeea09b8c",
 CellID->38186909]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[791228, 17181, 588, 15, 41, "MathCaption",ExpressionUUID->"f84f9109-bca2-43e8-8acd-44dbac060b83",
 CellID->393571408],
Cell[CellGroupData[{
Cell[791841, 17200, 290, 6, 25, "Input",ExpressionUUID->"a3356743-013f-46d6-9293-d2ccff074834",
 CellID->878786336],
Cell[792134, 17208, 221, 4, 24, "Output",ExpressionUUID->"4570f994-963f-4e2a-b5df-3404c8684e10",
 CellID->369524703]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[792404, 17218, 278, 4, 40, "MathCaption",ExpressionUUID->"a8228163-51e6-4538-9b66-7deb4e788237",
 CellID->394823239],
Cell[CellGroupData[{
Cell[792707, 17226, 274, 6, 25, "Input",ExpressionUUID->"c0e2cf3e-2996-4c08-8303-b2b2ac96cd91",
 CellID->627889596],
Cell[792984, 17234, 402, 9, 24, "Output",ExpressionUUID->"dc25f2b0-1b14-4b02-8e58-12873aee22cf",
 CellID->95453950]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[793435, 17249, 145, 2, 40, "MathCaption",ExpressionUUID->"07c30258-3992-4758-b9f9-755a32f6be13",
 CellID->731096908],
Cell[CellGroupData[{
Cell[793605, 17255, 604, 16, 25, "Input",ExpressionUUID->"738a39b4-c6db-465a-ab32-cd9bb8f8d640",
 CellID->219626058],
Cell[794212, 17273, 194, 4, 24, "Output",ExpressionUUID->"cfe48211-a74c-47a0-99e7-0a1e8fff14e6",
 CellID->169546956]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[794455, 17283, 674, 17, 44, "MathCaption",ExpressionUUID->"98ac40b6-947f-44d6-b1bd-f29d6c6bd6db",
 CellID->575191782],
Cell[CellGroupData[{
Cell[795154, 17304, 537, 14, 25, "Input",ExpressionUUID->"8bb9e85a-f097-4c61-bb44-dc88e0ed0c71",
 CellID->154121207],
Cell[795694, 17320, 194, 4, 24, "Output",ExpressionUUID->"318e1e0b-991e-4e7b-ae2d-50cbfb59b869",
 CellID->179973804]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[795937, 17330, 347, 10, 40, "MathCaption",ExpressionUUID->"e42727f2-2cc2-4a23-9189-f68201f4442d",
 CellID->812166021],
Cell[CellGroupData[{
Cell[796309, 17344, 392, 10, 25, "Input",ExpressionUUID->"e4ed1924-3b13-4215-ae91-838cb7a991c6",
 CellID->624985202],
Cell[796704, 17356, 238, 6, 25, "Output",ExpressionUUID->"7a1bd75a-5827-42d9-a42e-db9b6aad8279",
 CellID->51179190]
}, Open  ]],
Cell[CellGroupData[{
Cell[796979, 17367, 251, 5, 25, "Input",ExpressionUUID->"e6a896c9-3191-4e97-9ee6-730796798367",
 CellID->368150137],
Cell[797233, 17374, 238, 6, 25, "Output",ExpressionUUID->"078f5227-22f3-49ed-9df8-8b6a8583695d",
 CellID->288813044]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[797520, 17386, 294, 5, 40, "MathCaption",ExpressionUUID->"99224a63-e631-4295-a3b4-3fa8d1994ca4",
 CellID->230671479],
Cell[CellGroupData[{
Cell[797839, 17395, 787, 19, 43, "Input",ExpressionUUID->"b0b0727e-0590-44ce-a853-efb6fab8c017",
 CellID->968332860],
Cell[798629, 17416, 10281, 174, 155, "Output",ExpressionUUID->"a2b0f752-c157-44e6-b8fc-af6e436da103",
 CellID->548382202]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[808959, 17596, 361, 9, 40, "MathCaption",ExpressionUUID->"3aa6847c-0b71-4fb1-a005-176338242700",
 CellID->201723607],
Cell[CellGroupData[{
Cell[809345, 17609, 1540, 41, 42, "Input",ExpressionUUID->"1c8e0fb5-e49b-418b-8269-c7fc38ba780c",
 CellID->746283470],
Cell[810888, 17652, 32572, 629, 164, "Output",ExpressionUUID->"f56f37cd-1da9-4f8e-a63c-67ffb6e1b6fd",
 CellID->405154369]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[843509, 18287, 198, 2, 40, "MathCaption",ExpressionUUID->"9a19d7f3-7e1c-4df7-80dc-65e5c21dc5ad",
 CellID->142308320],
Cell[CellGroupData[{
Cell[843732, 18293, 222, 4, 25, "Input",ExpressionUUID->"d668f049-762e-40cf-b87f-eb3ab41fb0ca",
 CellID->317076608],
Cell[843957, 18299, 16732, 399, 86, "Output",ExpressionUUID->"eef0b21a-3fb8-4341-816c-ef2eaadca896",
 CellID->38873197]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[860738, 18704, 419, 11, 40, "MathCaption",ExpressionUUID->"90a30cb6-b3c2-42f2-a503-344374519ebc",
 CellID->199205649],
Cell[CellGroupData[{
Cell[861182, 18719, 390, 9, 25, "Input",ExpressionUUID->"2d26dfd2-b2dd-4bf7-bc7e-6d2ad88ee506",
 CellID->444434879],
Cell[861575, 18730, 159, 2, 23, "EchoTiming",ExpressionUUID->"d7e11cfd-627e-4b91-8c59-a5d569e4f6f0",
 CellID->24383746],
Cell[861737, 18734, 542, 10, 42, "Output",ExpressionUUID->"23b9f526-5fc2-44b5-a995-f3ec55e8b3d9",
 CellID->280470809]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[862328, 18750, 244, 3, 40, "MathCaption",ExpressionUUID->"5b4e48e4-f3ef-4d7a-9417-d956be44603e",
 CellID->48779360],
Cell[CellGroupData[{
Cell[862597, 18757, 366, 9, 25, "Input",ExpressionUUID->"5dd5dcac-ba2b-4dfd-946e-7a606c3df2f8",
 CellID->59766089],
Cell[862966, 18768, 480, 9, 42, "Output",ExpressionUUID->"a80657c8-6d2c-4ddf-b54b-b90ad2d14fa4",
 CellID->6049817]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[863495, 18783, 187, 2, 40, "MathCaption",ExpressionUUID->"12a30523-40cb-40b9-8243-5da15a850fa4",
 CellID->234878772],
Cell[CellGroupData[{
Cell[863707, 18789, 413, 9, 25, "Input",ExpressionUUID->"cfe44993-3cae-45f9-b31f-1cd4e4f8b5cd",
 CellID->148202768],
Cell[864123, 18800, 158, 2, 23, "EchoTiming",ExpressionUUID->"66e83d75-bf14-41d5-8805-89603e849eb2",
 CellID->510846472],
Cell[864284, 18804, 216, 5, 24, "Output",ExpressionUUID->"c15f6582-264f-400e-bcdd-00f68336ad99",
 CellID->23869527]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[864549, 18815, 194, 2, 40, "MathCaption",ExpressionUUID->"70c324a5-a6a8-4f81-a67a-3fe2997f18f4",
 CellID->10558311],
Cell[CellGroupData[{
Cell[864768, 18821, 700, 18, 43, "Input",ExpressionUUID->"9a7c0d48-4ac6-47ee-8f76-da0b38863b3c",
 CellID->58237670],
Cell[865471, 18841, 159, 2, 23, "EchoTiming",ExpressionUUID->"524cb8ca-b58e-4a39-95ae-1aab5fb0c6be",
 CellID->74044636],
Cell[865633, 18845, 315, 7, 24, "Output",ExpressionUUID->"afe699eb-86fb-4f15-9ca3-1179db2aeaf5",
 CellID->51587048]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[865997, 18858, 202, 2, 40, "MathCaption",ExpressionUUID->"b49d0bc8-9075-47d6-b37f-f3ab2fb488be",
 CellID->74692364],
Cell[CellGroupData[{
Cell[866224, 18864, 372, 8, 25, "Input",ExpressionUUID->"08d9caaf-cafe-441b-b3a8-11087feb253f",
 CellID->436274302],
Cell[866599, 18874, 250, 6, 24, "Output",ExpressionUUID->"54e4514f-9746-469f-af35-93c5e51fd2f1",
 CellID->581705438]
}, Open  ]],
Cell[866864, 18883, 242, 5, 26, "ExampleDelimiter",ExpressionUUID->"0e43fc60-e43f-46b0-974d-2b11e3f727c1",
 CellID->376301338]
}, Open  ]],
Cell[CellGroupData[{
Cell[867143, 18893, 423, 11, 40, "MathCaption",ExpressionUUID->"cbbc3a03-7cc7-493f-9749-d15a2c805e0c",
 CellID->228255672],
Cell[CellGroupData[{
Cell[867591, 18908, 387, 9, 25, "Input",ExpressionUUID->"cedfd366-cb1f-4783-9f3f-94edfde131f9",
 CellID->72949216],
Cell[867981, 18919, 158, 2, 23, "EchoTiming",ExpressionUUID->"ae639dba-2d59-49fd-a025-54ad009c02a4",
 CellID->196950653],
Cell[868142, 18923, 494, 9, 42, "Output",ExpressionUUID->"215e80a2-e6a4-41c4-bc0f-2a78bc94bf2e",
 CellID->157710615]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[868685, 18938, 187, 2, 40, "MathCaption",ExpressionUUID->"2fdaf0ec-4e2e-41b2-9a76-b63c9dbe3d25",
 CellID->63779103],
Cell[CellGroupData[{
Cell[868897, 18944, 370, 8, 25, "Input",ExpressionUUID->"f30052ca-ddbf-424e-aed5-bccca00b182d",
 CellID->559477600],
Cell[869270, 18954, 437, 13, 39, "Output",ExpressionUUID->"1a04c0ea-2693-4660-bef2-5024ae3de143",
 CellID->854014107]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[869756, 18973, 185, 2, 40, "MathCaption",ExpressionUUID->"e7f299c3-75ae-42ce-8926-81b8a9a59c72",
 CellID->297234162],
Cell[CellGroupData[{
Cell[869966, 18979, 435, 10, 25, "Input",ExpressionUUID->"cab7096c-6fc5-4767-b852-85c41eb4c296",
 CellID->384199976],
Cell[870404, 18991, 471, 9, 42, "Output",ExpressionUUID->"1bb50712-a1e8-480a-bc44-edd3cc966aea",
 CellID->60351254]
}, Open  ]],
Cell[870890, 19003, 241, 5, 26, "ExampleDelimiter",ExpressionUUID->"9a3d83bd-53a2-40e1-a056-a0288c58146a",
 CellID->64234199]
}, Open  ]],
Cell[CellGroupData[{
Cell[871168, 19013, 399, 10, 40, "MathCaption",ExpressionUUID->"75e0d9df-f932-4f3c-9d63-e26fc2f7d96f",
 CellID->71222372],
Cell[CellGroupData[{
Cell[871592, 19027, 368, 9, 25, "Input",ExpressionUUID->"02d54975-05ba-4081-b906-1b6f6209f603",
 CellID->612463501],
Cell[871963, 19038, 158, 2, 23, "EchoTiming",ExpressionUUID->"eced330b-7530-40c2-95a9-db2a8ab255e6",
 CellID->339196886],
Cell[872124, 19042, 502, 9, 42, "Output",ExpressionUUID->"6af13b58-2c2e-4642-941a-53a5955d6a24",
 CellID->244982401]
}, Open  ]],
Cell[872641, 19054, 242, 5, 26, "ExampleDelimiter",ExpressionUUID->"9da347bf-3c60-46ca-b656-b2585d140892",
 CellID->795616469]
}, Open  ]],
Cell[CellGroupData[{
Cell[872920, 19064, 428, 10, 40, "MathCaption",ExpressionUUID->"2e1a0668-27b8-43f7-a67a-a931a3253cf6",
 CellID->29412029],
Cell[CellGroupData[{
Cell[873373, 19078, 370, 9, 25, "Input",ExpressionUUID->"79b00915-d828-437f-8704-a17a9bb8b02e",
 CellID->13291710],
Cell[873746, 19089, 157, 2, 23, "EchoTiming",ExpressionUUID->"be32bbab-b146-4807-b3a7-a806135e1c95",
 CellID->61324748],
Cell[873906, 19093, 601, 11, 60, "Output",ExpressionUUID->"25800ad3-8836-42b4-8ce6-5f369a35910f",
 CellID->60671734]
}, Open  ]],
Cell[874522, 19107, 242, 5, 26, "ExampleDelimiter",ExpressionUUID->"e87d39ae-c664-4f31-92d3-0ee8f11360f2",
 CellID->179371755]
}, Open  ]],
Cell[CellGroupData[{
Cell[874801, 19117, 422, 11, 40, "MathCaption",ExpressionUUID->"717f01df-8662-41a2-ad6f-d72f4fd9ac26",
 CellID->68513831],
Cell[CellGroupData[{
Cell[875248, 19132, 355, 8, 25, "Input",ExpressionUUID->"437c4b7a-658e-4d42-9eb4-e92ace807f9d",
 CellID->691053818],
Cell[875606, 19142, 837, 25, 28, "Output",ExpressionUUID->"5192394b-e8b2-42b3-ab3b-ec5591328837",
 CellID->116155483]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[876492, 19173, 193, 2, 40, "MathCaption",ExpressionUUID->"40c40a54-a477-41b8-b267-ab4c71085419",
 CellID->295365794],
Cell[CellGroupData[{
Cell[876710, 19179, 516, 13, 25, "Input",ExpressionUUID->"0b11a6df-6d0d-44a5-a178-929e5439ec8c",
 CellID->549686470],
Cell[877229, 19194, 173, 3, 24, "Output",ExpressionUUID->"8adfb6bd-d1b4-400d-8950-b349d939d5e3",
 CellID->471038115]
}, Open  ]],
Cell[877417, 19200, 242, 5, 26, "ExampleDelimiter",ExpressionUUID->"55c9746c-0f85-40d9-b47a-69e43563a136",
 CellID->439332369]
}, Open  ]],
Cell[CellGroupData[{
Cell[877696, 19210, 441, 11, 40, "MathCaption",ExpressionUUID->"db068e57-f6b8-4ee8-96c6-2a00b19d1ecb",
 CellID->142865217],
Cell[CellGroupData[{
Cell[878162, 19225, 355, 8, 25, "Input",ExpressionUUID->"a2b6e356-631d-4c75-bea6-ff9b3262ab95",
 CellID->819507155],
Cell[878520, 19235, 1035, 34, 28, "Output",ExpressionUUID->"c0e96ec6-2ec2-4d2f-81e7-5d53b00ca30c",
 CellID->451625855]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[879604, 19275, 187, 2, 40, "MathCaption",ExpressionUUID->"607341e7-d01c-463f-8f00-3a78cb06f595",
 CellID->38534065],
Cell[CellGroupData[{
Cell[879816, 19281, 684, 19, 43, "Input",ExpressionUUID->"b1e16c62-422a-401b-b69c-387dd9d30df1",
 CellID->391099469],
Cell[880503, 19302, 174, 3, 24, "Output",ExpressionUUID->"15f03d04-2f35-4808-a788-11d4b36141b8",
 CellID->22022784]
}, Open  ]],
Cell[880692, 19308, 241, 5, 26, "ExampleDelimiter",ExpressionUUID->"1f1fc464-7818-406c-b656-4a5a5bcceddc",
 CellID->86887181]
}, Open  ]],
Cell[CellGroupData[{
Cell[880970, 19318, 426, 11, 40, "MathCaption",ExpressionUUID->"31590361-d2a1-4813-aada-caa6b606f48f",
 CellID->119722245],
Cell[CellGroupData[{
Cell[881421, 19333, 385, 9, 25, "Input",ExpressionUUID->"4c3e5f76-52ac-44c2-a0c1-a3095b5dcbbb",
 CellID->681843340],
Cell[881809, 19344, 1213, 33, 48, "Output",ExpressionUUID->"367bf557-c57a-4b26-827a-adaabb1ba495",
 CellID->567660469]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[883071, 19383, 194, 2, 40, "MathCaption",ExpressionUUID->"5d3fce45-90eb-45d4-a9d6-1e4ebe1f851c",
 CellID->69391295],
Cell[CellGroupData[{
Cell[883290, 19389, 322, 7, 25, "Input",ExpressionUUID->"758cc4b7-7514-402c-809d-5e41aba6777a",
 CellID->139948453],
Cell[883615, 19398, 479, 9, 42, "Output",ExpressionUUID->"7c3d1643-020a-45e6-98a2-83981641f880",
 CellID->46523418]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[884143, 19413, 199, 2, 40, "MathCaption",ExpressionUUID->"55165a1f-c4a6-4ab8-a13c-7ac27e2f25af",
 CellID->173598441],
Cell[CellGroupData[{
Cell[884367, 19419, 417, 10, 25, "Input",ExpressionUUID->"46bb45bb-2a9c-4a1d-8695-5049ee1753bf",
 CellID->298773496],
Cell[884787, 19431, 173, 3, 24, "Output",ExpressionUUID->"70b5f350-3ac9-490a-834f-203bcfebddf7",
 CellID->135097200]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[885009, 19440, 441, 11, 40, "MathCaption",ExpressionUUID->"3e1b77fa-7532-48c1-856f-28f4837f0881",
 CellID->6568824],
Cell[CellGroupData[{
Cell[885475, 19455, 320, 7, 25, "Input",ExpressionUUID->"27dbc629-6d52-4381-a910-b068633e8b12",
 CellID->354624742],
Cell[885798, 19464, 503, 10, 42, "Output",ExpressionUUID->"cee4b065-c0fd-49d4-a909-4c0e7b69c186",
 CellID->229632868]
}, Open  ]],
Cell[886316, 19477, 242, 5, 26, "ExampleDelimiter",ExpressionUUID->"622fea6b-ce48-49bc-b4cf-72a0dbd41c8a",
 CellID->225973015]
}, Open  ]],
Cell[CellGroupData[{
Cell[886595, 19487, 424, 11, 40, "MathCaption",ExpressionUUID->"01d6bf5a-70cc-4e6a-ac8c-9c49ffc192e6",
 CellID->597709743],
Cell[CellGroupData[{
Cell[887044, 19502, 318, 7, 25, "Input",ExpressionUUID->"495133b8-c92d-4815-b337-e786aacc406d",
 CellID->559137007],
Cell[887365, 19511, 480, 9, 42, "Output",ExpressionUUID->"a92d0469-dc6c-41e6-8e91-27ca10ad910d",
 CellID->350769182]
}, Open  ]],
Cell[887860, 19523, 241, 5, 26, "ExampleDelimiter",ExpressionUUID->"80f3779f-a59b-42cc-ae82-01a6adb15197",
 CellID->87474974]
}, Open  ]],
Cell[CellGroupData[{
Cell[888138, 19533, 628, 16, 40, "MathCaption",ExpressionUUID->"90f3cf1e-64a5-46a6-9078-701e10c4cbb8",
 CellID->655288947],
Cell[CellGroupData[{
Cell[888791, 19553, 302, 6, 25, "Input",ExpressionUUID->"c010705d-453d-4007-abbf-2898ffd3425e",
 CellID->68325774],
Cell[889096, 19561, 505, 9, 42, "Output",ExpressionUUID->"72a9db7f-15cd-4a12-babc-968d2c15ef93",
 CellID->411603969]
}, Open  ]],
Cell[889616, 19573, 242, 5, 26, "ExampleDelimiter",ExpressionUUID->"2b371e39-88f2-4142-8572-e69bb3fe6dd8",
 CellID->380977308]
}, Open  ]],
Cell[CellGroupData[{
Cell[889895, 19583, 419, 11, 40, "MathCaption",ExpressionUUID->"f21a7b3a-f0c6-4dff-8634-53e1dcc07848",
 CellID->206574541],
Cell[CellGroupData[{
Cell[890339, 19598, 353, 8, 25, "Input",ExpressionUUID->"750c3ab0-d3c3-4dd8-94df-318a711a8fca",
 CellID->571446576],
Cell[890695, 19608, 1039, 32, 28, "Output",ExpressionUUID->"c4706520-7630-4b9e-968c-f05c2ffbc6c0",
 CellID->579836633]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[891783, 19646, 193, 2, 40, "MathCaption",ExpressionUUID->"8ec4df43-e1fc-437b-98bb-cfd5939d2c2e",
 CellID->849664802],
Cell[CellGroupData[{
Cell[892001, 19652, 473, 12, 25, "Input",ExpressionUUID->"4c514072-b9fe-4266-92af-3ebe3671e7fc",
 CellID->5746910],
Cell[892477, 19666, 201, 3, 24, "Output",ExpressionUUID->"c29def47-a568-42c9-b544-3ce0d15b7e52",
 CellID->145466617]
}, Open  ]],
Cell[892693, 19672, 241, 5, 26, "ExampleDelimiter",ExpressionUUID->"961242de-5e8d-43a8-a87d-db4047f27173",
 CellID->64856443]
}, Open  ]],
Cell[CellGroupData[{
Cell[892971, 19682, 449, 11, 40, "MathCaption",ExpressionUUID->"26134174-dae9-40bc-a764-857260208555",
 CellID->200874845],
Cell[CellGroupData[{
Cell[893445, 19697, 355, 8, 25, "Input",ExpressionUUID->"87cb7d00-8269-48a4-895c-9a8f78c5b4ca",
 CellID->2790924],
Cell[893803, 19707, 1289, 43, 48, "Output",ExpressionUUID->"f596b24f-09c2-4db3-a1bf-9ab14503f8cc",
 CellID->749587632]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[895141, 19756, 186, 2, 40, "MathCaption",ExpressionUUID->"2db7a26b-5ec1-4eff-9184-40b551df04b9",
 CellID->193111019],
Cell[CellGroupData[{
Cell[895352, 19762, 548, 16, 25, "Input",ExpressionUUID->"78a915c4-b3cb-4ecb-bbe5-e3198a47891c",
 CellID->257744413],
Cell[895903, 19780, 172, 3, 24, "Output",ExpressionUUID->"c68d43a1-9476-4c86-8841-984d33fc7ba9",
 CellID->599489833]
}, Open  ]],
Cell[896090, 19786, 242, 5, 26, "ExampleDelimiter",ExpressionUUID->"74a09531-e455-474c-8435-32c40044718c",
 CellID->506165783]
}, Open  ]],
Cell[CellGroupData[{
Cell[896369, 19796, 550, 16, 40, "MathCaption",ExpressionUUID->"d95111a8-a716-475b-a881-f0de9d4af0c9",
 CellID->230848754],
Cell[CellGroupData[{
Cell[896944, 19816, 358, 8, 25, "Input",ExpressionUUID->"e54064bc-2642-4bf1-81e5-1e870cfb6078",
 CellID->4310976],
Cell[897305, 19826, 591, 18, 28, "Output",ExpressionUUID->"aa3f99b7-7b88-4fc6-bde4-63373f64bf04",
 CellID->362774086]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[897945, 19850, 188, 2, 40, "MathCaption",ExpressionUUID->"bd68a889-c6f2-4ee6-8743-285eb013ec87",
 CellID->373578484],
Cell[CellGroupData[{
Cell[898158, 19856, 550, 15, 28, "Input",ExpressionUUID->"085e3dee-2f60-4952-9c11-59ba93c048cf",
 CellID->194038522],
Cell[898711, 19873, 173, 3, 24, "Output",ExpressionUUID->"e8a803a8-e957-4928-915e-1474000d84ba",
 CellID->154595223]
}, Open  ]]
}, Open  ]],
Cell[898911, 19880, 190, 2, 40, "MathCaption",ExpressionUUID->"cfb9272b-a053-443b-964b-551f4ef2a325",
 CellID->554419],
Cell[CellGroupData[{
Cell[899126, 19886, 118, 1, 40, "MathCaption",ExpressionUUID->"3eae9e0a-c261-4605-831b-1e18a30b812e",
 CellID->55753721],
Cell[CellGroupData[{
Cell[899269, 19891, 256, 5, 25, "Input",ExpressionUUID->"adc492c5-04b1-49f1-863e-8772093ba1ec",
 CellID->14566],
Cell[899528, 19898, 210, 3, 24, "Output",ExpressionUUID->"bf67936b-f0a9-4f31-b05a-1b48dd1f10a0",
 CellID->18188826]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[899787, 19907, 184, 2, 40, "MathCaption",ExpressionUUID->"f2fb9f7a-300e-448b-a96d-b73cfcaec490",
 CellID->563784370],
Cell[CellGroupData[{
Cell[899996, 19913, 278, 6, 41, "Input",ExpressionUUID->"64d639ae-cffd-43ce-97cc-47c949b5056b",
 CellID->20592017],
Cell[900277, 19921, 257, 4, 24, "Output",ExpressionUUID->"e0d39b20-bd64-4676-9f67-7015a7052743",
 CellID->151593018]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[900583, 19931, 197, 2, 40, "MathCaption",ExpressionUUID->"0e51d960-40a2-4d86-b7c9-6dadeac4d813",
 CellID->237785666],
Cell[CellGroupData[{
Cell[900805, 19937, 288, 6, 41, "Input",ExpressionUUID->"47f3630a-55e6-4d45-a2e6-bd5773f4ba06",
 CellID->298472260],
Cell[901096, 19945, 235, 4, 24, "Output",ExpressionUUID->"24df0231-3a63-40d5-8b36-5d9221b0259a",
 CellID->74152669]
}, Open  ]]
}, Open  ]],
Cell[901358, 19953, 193, 2, 40, "MathCaption",ExpressionUUID->"39e946e6-060c-4240-8691-2c60976b079c",
 CellID->496593996],
Cell[CellGroupData[{
Cell[901576, 19959, 119, 1, 40, "MathCaption",ExpressionUUID->"f92098c6-3dff-427b-ab36-0b35b7da0cfe",
 CellID->489039817],
Cell[CellGroupData[{
Cell[901720, 19964, 274, 5, 25, "Input",ExpressionUUID->"2e59a655-f15f-44e1-907b-d6aa3d8dbefe",
 CellID->88658836],
Cell[901997, 19971, 321, 7, 40, "Output",ExpressionUUID->"76658b56-04e3-49a4-b66f-0dfbc2743480",
 CellID->66741005]
}, Open  ]],
Cell[CellGroupData[{
Cell[902355, 19983, 305, 6, 25, "Input",ExpressionUUID->"fffe4fde-48dd-4e85-a1ef-e985fbbc5efc",
 CellID->471752441],
Cell[902663, 19991, 210, 3, 24, "Output",ExpressionUUID->"a64472f0-343a-462d-b7e6-3402b66238c9",
 CellID->374027243]
}, Open  ]],
Cell[CellGroupData[{
Cell[902910, 19999, 385, 9, 25, "Input",ExpressionUUID->"ef7b7b23-1834-48a3-b7d9-dafa4babcb73",
 CellID->796052010],
Cell[903298, 20010, 237, 4, 24, "Output",ExpressionUUID->"32542b9d-f983-4aac-b5ce-508d05e82cd1",
 CellID->199263104]
}, Open  ]]
}, Open  ]],
Cell[903562, 20018, 241, 4, 40, "MathCaption",ExpressionUUID->"5932152a-fe5e-4b91-a085-06db7827488b",
 CellID->143975390],
Cell[CellGroupData[{
Cell[903828, 20026, 382, 8, 45, "MathCaption",ExpressionUUID->"b3d96bae-892e-44b7-8fc6-ccf06c23e019",
 CellID->27787895],
Cell[CellGroupData[{
Cell[904235, 20038, 278, 5, 41, "Input",ExpressionUUID->"2f2612ee-0b66-4efe-904a-56a98f99e0ae",
 CellID->236189147],
Cell[904516, 20045, 196, 3, 24, "Output",ExpressionUUID->"1ab89267-5cd7-400f-b33a-ed1dc177a33a",
 CellID->557292175]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[904761, 20054, 187, 2, 40, "MathCaption",ExpressionUUID->"0895c618-4f78-4287-800d-c9da46d5d6e1",
 CellID->35640176],
Cell[CellGroupData[{
Cell[904973, 20060, 245, 5, 41, "Input",ExpressionUUID->"4f44618c-c69e-4b3f-ae4a-5c54a9fc213a",
 CellID->761312723],
Cell[905221, 20067, 197, 3, 24, "Output",ExpressionUUID->"557767f1-b18d-4649-9ff7-b43dfe4dd806",
 CellID->290448543]
}, Open  ]],
Cell[CellGroupData[{
Cell[905455, 20075, 279, 5, 41, "Input",ExpressionUUID->"5b85de49-9dc3-4461-877a-3be76585719b",
 CellID->60940240],
Cell[905737, 20082, 192, 3, 24, "Output",ExpressionUUID->"7d79b558-375f-4098-be93-fd87883efdd0",
 CellID->200714134]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[905978, 20091, 306, 5, 57, "MathCaption",ExpressionUUID->"f97d4a5a-ddec-4c1e-ae34-a824df72eb1d",
 CellID->459322947],
Cell[CellGroupData[{
Cell[906309, 20100, 693, 17, 41, "Input",ExpressionUUID->"25b952b0-584d-449c-9a21-94871f813bfa",
 CellID->132252402],
Cell[907005, 20119, 50484, 962, 299, "Output",ExpressionUUID->"aeeba037-969f-4bfa-bc37-e306dc3d9553",
 CellID->504232840]
}, Open  ]]
}, Open  ]],
Cell[957516, 21085, 446, 9, 40, "MathCaption",ExpressionUUID->"fd948e92-998d-4c3e-b2d5-953325fa3c62",
 CellID->142153006],
Cell[957965, 21096, 721, 17, 62, "MathCaption",ExpressionUUID->"2a57c3cf-65e5-4384-b325-502dd44de2ff",
 CellID->468172920],
Cell[CellGroupData[{
Cell[958711, 21117, 527, 12, 62, "MathCaption",ExpressionUUID->"c03cc458-51df-4212-9407-552a57f52415",
 CellID->75005970],
Cell[CellGroupData[{
Cell[959263, 21133, 912, 23, 102, "Input",ExpressionUUID->"f970e735-390f-436d-8c7c-7bae04d49449",
 CellID->696606258],
Cell[960178, 21158, 158, 2, 23, "EchoTiming",ExpressionUUID->"59ca79eb-3083-4435-8983-4b9f3a0a2584",
 CellID->114796685],
Cell[960339, 21162, 245, 5, 24, "Output",ExpressionUUID->"e6644532-529a-4b3f-ba29-f33686874e36",
 CellID->36436604]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[960633, 21173, 209, 2, 40, "MathCaption",ExpressionUUID->"bd863212-78c1-486e-b47c-45a2091ec4f4",
 CellID->595536278],
Cell[CellGroupData[{
Cell[960867, 21179, 964, 24, 129, "Input",ExpressionUUID->"46e0527e-8728-4528-b21b-df8c61612973",
 CellID->135456001],
Cell[961834, 21205, 156, 2, 23, "EchoTiming",ExpressionUUID->"51dd46f4-e447-4abd-b063-81cf9b93fdd6",
 CellID->47425443],
Cell[961993, 21209, 169, 3, 24, "Output",ExpressionUUID->"5bb058e4-9ee0-4370-89e5-37d1fa349c57",
 CellID->3416495]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[962211, 21218, 228, 3, 40, "MathCaption",ExpressionUUID->"33a53b23-34b2-4045-ae49-cf092334ac45",
 CellID->197268136],
Cell[CellGroupData[{
Cell[962464, 21225, 1018, 25, 129, "Input",ExpressionUUID->"eb62e1e4-e1e4-496b-be27-d691bbbf6955",
 CellID->325931600],
Cell[963485, 21252, 897, 25, 21, "Echo",ExpressionUUID->"62186698-3b1f-49d5-9ba0-a278fb2c8bc9",
 CellID->211601392],
Cell[964385, 21279, 172, 3, 24, "Output",ExpressionUUID->"1990d81e-789f-4f56-9026-241077882bfd",
 CellID->24671701]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[964606, 21288, 415, 10, 40, "MathCaption",ExpressionUUID->"711e8d49-565a-410f-b53e-6aa771c16c39",
 CellID->109955765],
Cell[965024, 21300, 241, 5, 26, "ExampleDelimiter",ExpressionUUID->"180b6c70-7e5f-4bbd-90d1-069f3eb20d5e",
 CellID->65014155]
}, Open  ]],
Cell[CellGroupData[{
Cell[965302, 21310, 490, 10, 62, "MathCaption",ExpressionUUID->"4689deef-3f53-4762-bcf6-1bca4d2ad5b8",
 CellID->213110306],
Cell[965795, 21322, 522, 13, 41, "Input",ExpressionUUID->"53c619ad-322b-43f0-85a5-a323204aed21",
 CellID->149658206],
Cell[CellGroupData[{
Cell[966342, 21339, 478, 10, 25, "Input",ExpressionUUID->"78eb14b9-f252-4d3d-b382-324aaf758e31",
 CellID->174838792],
Cell[966823, 21351, 816, 13, 60, "Output",ExpressionUUID->"51bb7890-f244-4d8c-925f-c6c1f0d65b4f",
 CellID->6197371]
}, Open  ]],
Cell[CellGroupData[{
Cell[967676, 21369, 470, 11, 25, "Input",ExpressionUUID->"1153f585-f64e-4589-9f7f-50e5c57940d5",
 CellID->758948014],
Cell[968149, 21382, 8554, 211, 366, "Output",ExpressionUUID->"22fd05f1-98b4-4409-85ea-ab763a47ec29",
 CellID->52008308]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[976752, 21599, 207, 2, 40, "MathCaption",ExpressionUUID->"eafc12a1-d939-4aad-ba9d-c6e541a9f36c",
 CellID->123945420],
Cell[976962, 21603, 475, 12, 41, "Input",ExpressionUUID->"2ccab35f-9449-4f09-8f08-3dc6dd7e6254",
 CellID->121949185],
Cell[977440, 21617, 476, 11, 25, "Input",ExpressionUUID->"1d9835b3-7330-4e53-9763-7fb035d14764",
 CellID->112015657],
Cell[CellGroupData[{
Cell[977941, 21632, 470, 11, 25, "Input",ExpressionUUID->"59a67e9d-7f47-4291-a2ac-af9480e928bb",
 CellID->397875431],
Cell[978414, 21645, 14870, 315, 359, "Output",ExpressionUUID->"beb37bcc-3ed4-45ce-9b80-166a8fcfd2ed",
 CellID->797935073]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[993345, 21967, 191, 2, 68, "TutorialMoreAboutSection",ExpressionUUID->"38f6f3f7-663b-4155-80a4-fc2753b4d61e",
 CellID->319113236],
Cell[993539, 21971, 108, 1, 24, "TutorialMoreAbout",ExpressionUUID->"329c50d5-b351-4998-83de-ee1458e7a1fb",
 CellID->397623687]
}, Open  ]],
Cell[CellGroupData[{
Cell[993684, 21977, 128, 1, 74, "RelatedTutorialsSection",ExpressionUUID->"65af0df0-4d7c-4fc1-b910-d76df6df7a60",
 CellID->102476560],
Cell[993815, 21980, 107, 1, 24, "RelatedTutorials",ExpressionUUID->"193fea5f-5f21-460b-b007-f875ee9865ab",
 CellID->764289865]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[993971, 21987, 110, 1, 72, "MetadataSection",ExpressionUUID->"e162b4a3-a741-4939-8d75-23a3390e690e",
 CellID->260249375],
Cell[994084, 21990, 472, 11, 26, "History",ExpressionUUID->"52c86799-391e-4738-afdb-f7cb626c061d",
 CellID->88515623],
Cell[CellGroupData[{
Cell[994581, 22005, 121, 1, 21, "CategorizationSection",ExpressionUUID->"2317408a-b0cf-40ee-b270-5d829bfc5516",
 CellID->84870436],
Cell[994705, 22008, 136, 2, 70, "Categorization",ExpressionUUID->"019d9434-6ddc-4d11-b770-08e8ef15f2c2",
 CellID->75802468],
Cell[994844, 22012, 152, 2, 70, "Categorization",ExpressionUUID->"8d8f8b5b-4328-40fb-b4e8-980e49c5deac",
 CellID->5243965],
Cell[994999, 22016, 151, 2, 70, "Categorization",ExpressionUUID->"4a169815-3439-498d-89b3-a3df68f2c1ef",
 CellID->202648035],
Cell[995153, 22020, 172, 2, 70, "Categorization",ExpressionUUID->"a287fae2-0488-439c-83d6-0b68c7add00b",
 CellID->30219020]
}, Closed]],
Cell[CellGroupData[{
Cell[995362, 22027, 110, 1, 21, "KeywordsSection",ExpressionUUID->"1077d196-9829-4c1e-8843-5aad072879a9",
 CellID->181903197],
Cell[995475, 22030, 99, 1, 70, "Keywords",ExpressionUUID->"edabd9c5-564b-4d94-b597-69c30b6cfb2a",
 CellID->120038043]
}, Closed]]
}, Open  ]]
}
]
*)

